.text


/*----------------------------------------------------------------*/
func_10003:
/*----------------------------------------------------------------*/
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop


/*----------------------------------------------------------------*/
func_10010:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x80,%esp
    mov    %eax,0x78(%esp)
    mov    %edx,%esi
    mov    %ebx,%edi
    xor    %edx,%edx
    mov    %edx,0x58(%esp)
    test   %ecx,%ecx
    je     jump_10042
    push   $0x96
    push   %eax
    call   func_5e9d0
    mov    $0x96,%ecx
    add    $0x8,%esp
    mov    %ecx,0x58(%esp)
  jump_10042:
    test   $0x80000000,%edi
    je     jump_10157
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffeda,%dx
    call   func_1b084
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_10076
    mov    $0x46,%ebx
    mov    $data_90004,%edx
    call   func_26198
  jump_10076:
    xor    %edx,%edx
    mov    0x16(%esi),%dx
    xor    %edi,%edi
    lea    0x0(,%edx,4),%eax
    mov    0x14(%esi),%di
    add    %edx,%eax
    lea    0x40(%esp),%ecx
    add    %eax,%edi
    lea    0x44(%esp),%eax
    mov    %ebp,%edx
    push   %eax
    mov    %edi,%ebx
    mov    0x7c(%esp),%eax
    call   func_2bc40
    mov    0x44(%esp),%edx
    push   %edx
    mov    0x44(%esp),%ebx
    push   %ebx
    push   %edi
    push   %ebp
    mov    0x88(%esp),%ecx
    push   %ecx
    mov    %esi,0x5c(%esp)
    mov    $0xf3,%edi
    call   func_5cb3c
    xor    %ecx,%ecx
    add    $0x14,%esp
    mov    0x57(%esi),%cl
    mov    %edi,0x4c(%esp)
    cmp    $0xff,%ecx
    je     jump_10113
    mov    $0x4,%ebx
    mov    $0x2,%edx
    mov    0x78(%esp),%eax
    call   func_53e38
    xor    %edx,%edx
    mov    0x57(%esi),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f74(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0x4c(%esp)
  jump_10113:
    mov    0x48(%esp),%ecx
    mov    0x78(%esp),%esi
    push   $0x0
    mov    0x4e(%esp),%eax
    mov    $0x7,%ebx
    push   $0xff
    sar    $0x10,%eax
    mov    $0x12,%edx
    push   %eax
    mov    $data_10de9e,%edi
    add    $0x24,%ecx
    push   $0x0
    mov    $data_10de96,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_1014d:
    add    $0x80,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10157:
    mov    0x54(%esi),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    mov    data_ffebc(,%eax,2),%dx
    mov    $data_12fc20,%eax
    mov    %esi,0x5c(%esp)
    call   func_1b084
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_1018a
    mov    $0x5c,%ebx
    mov    $data_90012,%edx
    call   func_26198
  jump_1018a:
    mov    0x5c(%esp),%eax
    xor    %edi,%edi
    xor    %edx,%edx
    mov    0x54(%eax),%eax
    mov    data_104bea,%dl
    sar    $0x10,%eax
    mov    %edi,0x50(%esp)
    cmp    %edx,%eax
    je     jump_101b3
    mov    0x5c(%esp),%eax
    call   func_4aaec
    test   %eax,%eax
    jle    jump_101bb
  jump_101b3:
    movl   $0xffffffff,0x50(%esp)
  jump_101bb:
    lea    0x44(%esp),%eax
    mov    0x5c(%esp),%ebx
    lea    0x40(%esp),%ecx
    mov    %esi,%edx
    push   %eax
    mov    0xa7(%ebx),%ebx
    mov    0x7c(%esp),%eax
    sar    $0x18,%ebx
    call   func_2bc40
    mov    0x5c(%esp),%edx
    mov    0x54(%edx),%edx
    sar    $0x10,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f73(,%eax,2),%al
    mov    0x50(%esp),%edx
    and    $0xff,%eax
    cmp    $0xffffffff,%edx
    jne    jump_10357
    mov    0x5c(%esp),%edx
    cmpl   $0x0,0x88(%edx)
    jg     jump_10256
    mov    data_d8d8f,%eax
    add    $0x1600,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    mov    0x44(%esp),%ecx
    mov    0x5c(%esp),%eax
    push   %ecx
    mov    0x44(%esp),%edi
    mov    0xa7(%eax),%eax
    push   %edi
    sar    $0x18,%eax
    push   %eax
    push   %esi
    mov    0x88(%esp),%ebp
    push   %ebp
    call   func_5d026
    jmp    jump_1037d
  jump_10256:
    mov    0x8c(%edx),%edx
    mov    0x5c(%esp),%ebx
    shl    $0x2,%edx
    cmp    0x98(%ebx),%edx
    jl     jump_10274
    cmpl   $0x5,0x8c(%ebx)
    jge    jump_102b2
  jump_10274:
    mov    data_d8d8f,%eax
    add    $0x800,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    mov    0x44(%esp),%eax
    push   %eax
    mov    0x60(%esp),%eax
    mov    0x44(%esp),%edx
    mov    0xa7(%eax),%eax
    push   %edx
    sar    $0x18,%eax
    push   %eax
    push   %esi
    mov    0x88(%esp),%ebx
    push   %ebx
    call   func_5d026
    jmp    jump_1037d
  jump_102b2:
    test   %eax,%eax
    jne    jump_102f4
    mov    data_d8d8f,%eax
    add    $0x300,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    mov    0x44(%esp),%ecx
    mov    0x5c(%esp),%eax
    push   %ecx
    mov    0x44(%esp),%edi
    mov    0xa7(%eax),%eax
    push   %edi
    sar    $0x18,%eax
    push   %eax
    push   %esi
    mov    0x88(%esp),%ebp
    push   %ebp
    call   func_5d026
    jmp    jump_1037d
  jump_102f4:
    cmp    $0xd,%eax
    jne    jump_1031c
    mov    0x44(%esp),%eax
    push   %eax
    mov    0x60(%esp),%eax
    mov    0x44(%esp),%edx
    mov    0xa7(%eax),%eax
    push   %edx
    sar    $0x18,%eax
    push   %eax
    push   %esi
    mov    0x88(%esp),%ebx
    push   %ebx
    jmp    jump_10378
  jump_1031c:
    mov    data_d8d8f,%eax
    add    $0x600,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    mov    0x44(%esp),%ecx
    mov    0x5c(%esp),%eax
    push   %ecx
    mov    0x44(%esp),%edi
    mov    0xa7(%eax),%eax
    push   %edi
    sar    $0x18,%eax
    push   %eax
    push   %esi
    mov    0x88(%esp),%ebp
    push   %ebp
    call   func_5d026
    jmp    jump_1037d
  jump_10357:
    mov    0x44(%esp),%ebx
    mov    0x5c(%esp),%eax
    push   %ebx
    mov    0x44(%esp),%ecx
    mov    0xa7(%eax),%eax
    push   %ecx
    sar    $0x18,%eax
    push   %eax
    push   %esi
    mov    0x88(%esp),%esi
    push   %esi
  jump_10378:
    call   func_5cb3c
  jump_1037d:
    add    $0x14,%esp
    mov    0x5c(%esp),%ecx
    mov    $0x4,%ebx
    mov    $0x2,%edx
    mov    0x54(%ecx),%ecx
    mov    0x78(%esp),%eax
    sar    $0x10,%ecx
    mov    0x78(%esp),%esi
    call   func_53e38
    push   $0x0
    mov    $data_10de9e,%edi
    mov    0x60(%esp),%ecx
    push   $0xff
    mov    $0x7,%ebx
    mov    $0x12,%edx
    push   $0xf
    mov    $data_10de96,%eax
    add    $0x34,%ecx
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffee6,%dx
    call   func_1b084
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_103f9
    mov    $0xa4,%ebx
    mov    $data_90020,%edx
    call   func_26198
  jump_103f9:
    cmpl   $0xffffffff,0x50(%esp)
    je     jump_10434
    add    $0x80,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_1040a:
    mov    0x5c(%esp),%eax
    mov    0x54(%eax),%eax
    mov    %edi,%ecx
    sar    $0x10,%eax
    mov    %ebp,%edx
    push   %eax
    inc    %esi
    xor    %ebx,%ebx
    push   $0x11
    mov    0x80(%esp),%eax
    add    $0x5,%edi
    call   func_53eb8
    cmp    $0xa,%esi
    jl     jump_10448
    jmp    jump_1044e
  jump_10434:
    mov    0x5c(%esp),%eax
    mov    $0x12,%edi
    call   func_4a8cc
    xor    %esi,%esi
    mov    %eax,0x54(%esp)
  jump_10448:
    cmp    0x54(%esp),%esi
    jl     jump_1040a
  jump_1044e:
    mov    0x5c(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x14(%esp)
    mov    0x5c(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x18(%esp)
    mov    0x5c(%esp),%eax
    mov    0x10(%eax),%eax
    mov    %eax,0x1c(%esp)
    mov    0x5c(%esp),%eax
    mov    $0x1f,%edx
    mov    %esp,%edi
    mov    0x20(%eax),%eax
    mov    0x78(%esp),%esi
    mov    %eax,0x20(%esp)
    mov    0x5c(%esp),%eax
    xor    %ebx,%ebx
    mov    %edx,0x74(%esp)
    mov    0x18(%eax),%eax
    mov    %ebx,0x68(%esp)
    mov    %eax,0x24(%esp)
    mov    %ebx,0x64(%esp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    jmp    jump_104c8
  jump_104a4:
    mov    0x74(%esp),%esi
    mov    0x64(%esp),%edi
    mov    0x68(%esp),%eax
    add    $0x9,%esi
    add    $0x4,%edi
    inc    %eax
    mov    %esi,0x74(%esp)
    mov    %edi,0x64(%esp)
    mov    %eax,0x68(%esp)
    cmp    $0x5,%eax
    jge    jump_1052d
  jump_104c8:
    mov    0x4(%esp),%eax
    inc    %eax
    mov    %eax,0xc(%esp)
    mov    0x64(%esp),%eax
    mov    0x14(%esp,%eax,1),%esi
    mov    $0x2,%edi
    test   %esi,%esi
    jle    jump_104fa
    lea    0x0(,%esi,8),%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x2,%edx
    sbb    %edx,%eax
    sar    $0x2,%eax
    add    %eax,0xc(%esp)
  jump_104fa:
    mov    0x68(%esp),%eax
    inc    %eax
    xor    %esi,%esi
    mov    %eax,0x70(%esp)
  jump_10505:
    mov    0x74(%esp),%ebx
    push   %ebx
    push   %edi
    mov    0x78(%esp),%ecx
    push   %ecx
    push   %ebp
    lea    0x10(%esp),%eax
    push   %eax
    inc    %esi
    add    $0x8,%edi
    call   func_5cb3c
    add    $0x14,%esp
    cmp    $0xf,%esi
    jge    jump_104a4
    jmp    jump_10505
  jump_1052d:
    mov    0x5c(%esp),%eax
    mov    0x8c(%eax),%eax
    mov    %eax,0x28(%esp)
    mov    0x5c(%esp),%eax
    mov    0x88(%eax),%eax
    mov    $0x2,%ebx
    mov    %eax,0x2c(%esp)
    mov    0x5c(%esp),%eax
    mov    $0x5,%ecx
    mov    $0x7c,%edi
    mov    0x98(%eax),%eax
    xor    %esi,%esi
    mov    %eax,0x38(%esp)
    mov    0x5c(%esp),%eax
    mov    %esi,0x6c(%esp)
    call   func_4a8fc
    mov    %eax,0x3c(%esp)
    mov    %ebx,0x30(%esp)
    mov    $0x82,%eax
    mov    %ecx,0x34(%esp)
    mov    %eax,0x60(%esp)
    jmp    jump_10639
  jump_1058f:
    cmp    %edx,%ebx
    jle    jump_1059d
    mov    %edx,%eax
    mov    0x6c(%esp),%edx
    mov    %eax,0x28(%esp,%edx,1)
  jump_1059d:
    mov    0x6c(%esp),%eax
    xor    %esi,%esi
    mov    %eax,0x7c(%esp)
    jmp    jump_105cf
  jump_105a9:
    shl    $0x3,%eax
    add    $0x9,%eax
    push   %eax
    mov    0x80(%esp),%eax
    push   %edi
    mov    0x38(%esp,%eax,1),%edx
    push   %edx
    push   %ebp
    mov    0x88(%esp),%ebx
    push   %ebx
    inc    %esi
    call   func_5cb3c
    add    $0x14,%esp
  jump_105cf:
    movswl %si,%eax
    cmp    $0x9,%eax
    jl     jump_105a9
    mov    0x7c(%esp),%eax
    imul   $0x48,0x28(%esp,%eax,1),%edx
    mov    0x7c(%esp),%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idivl  0x38(%esp,%ebx,1)
    mov    $0x50,%edx
    sub    %eax,%edx
    mov    %edx,%eax
    xor    %edx,%edx
    push   $0xffffffff
    mov    0x5c(%esp),%dl
    push   %edx
    mov    $0x8,%ebx
    mov    0x68(%esp),%ecx
    push   %eax
    mov    %edi,%edx
    mov    0x84(%esp),%eax
    call   func_2bb74
  jump_10617:
    mov    0x60(%esp),%ecx
    mov    0x6c(%esp),%esi
    add    $0x8,%edi
    add    $0x8,%ecx
    add    $0x4,%esi
    mov    %ecx,0x60(%esp)
    mov    %esi,0x6c(%esp)
    cmp    $0x8,%esi
    je     jump_1014d
  jump_10639:
    mov    0x6c(%esp),%eax
    mov    0x38(%esp,%eax,1),%edx
    test   %edx,%edx
    jle    jump_10617
    mov    0x28(%esp,%eax,1),%ebx
    test   %ebx,%ebx
    jge    jump_1058f
    xor    %esi,%esi
    mov    %esi,0x28(%esp,%eax,1)
    mov    0x6c(%esp),%eax
    xor    %esi,%esi
    mov    %eax,0x7c(%esp)
    jmp    jump_105cf


/*----------------------------------------------------------------*/
func_10668:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x60,%esp
    mov    %eax,%ebp
    mov    %edx,0x5c(%esp)
    mov    %ebx,0x58(%esp)
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffed8,%dx
    call   func_1b084
    mov    %eax,%edi
    test   %eax,%eax
    jne    jump_106a0
    mov    $0xea,%ebx
    mov    $data_9002e,%edx
    call   func_26198
  jump_106a0:
    mov    0x5c(%esp),%esi
    test   %ecx,%ecx
    je     jump_106d3
    cmpl   $0x0,0x58(%esp)
    jne    jump_106d3
    movsbl (%esi),%eax
    imul   $0x6a,%eax,%eax
    mov    data_107053(%eax),%ax
    xor    %ah,%ah
    and    $0x80,%al
    cwtl
    test   %eax,%eax
    jne    jump_106d3
    push   $0x96
    push   %ebp
    call   func_5e9d0
    add    $0x8,%esp
  jump_106d3:
    cmpb   $0xff,(%esi)
    jne    jump_106e9
    mov    $0xfb,%ebx
    mov    $data_9003c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_106e9:
    lea    0x50(%esp),%eax
    lea    0x54(%esp),%ecx
    mov    %edi,%edx
    push   %eax
    movsbl (%esi),%ebx
    mov    %ebp,%eax
    call   func_2bc40
    mov    0x58(%esp),%ebx
    cmp    $0x2,%ebx
    je     jump_1070c
    cmp    $0x3,%ebx
    jne    jump_10736
  jump_1070c:
    mov    data_d8d8f,%eax
    add    $0x700,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    mov    0x50(%esp),%ebx
    push   %ebx
    mov    0x58(%esp),%ecx
    push   %ecx
    movsbl (%esi),%eax
    push   %eax
    push   %edi
    push   %ebp
    call   func_5d026
    jmp    jump_1074b
  jump_10736:
    mov    0x50(%esp),%eax
    push   %eax
    mov    0x58(%esp),%edx
    push   %edx
    movsbl (%esi),%eax
    push   %eax
    push   %edi
    push   %ebp
    call   func_5cb3c
  jump_1074b:
    add    $0x14,%esp
    cmpl   $0x0,0x3(%esi)
    je     jump_107b4
    movsbl (%esi),%eax
    imul   $0x6a,%eax,%eax
    mov    data_107053(%eax),%ax
    xor    %ah,%ah
    and    $0x20,%al
    cwtl
    test   %eax,%eax
    je     jump_107b4
    movzbl data_104bea,%edi
    mov    %edi,%eax
    shl    $0x5,%eax
    sub    %edi,%eax
    shl    $0x3,%eax
    sub    %edi,%eax
    mov    data_a2f74(,%eax,2),%al
    shl    $0x2,%al
    push   $0x0
    add    $0x13,%al
    and    $0xff,%eax
    mov    0x8(%ebp),%edx
    push   %eax
    mov    0x10(%ebp),%eax
    sub    %edx,%eax
    dec    %eax
    mov    0x4(%ebp),%ebx
    push   %eax
    mov    0xc(%ebp),%eax
    sub    %ebx,%eax
    mov    $0x1,%ebx
    lea    -0x1(%eax),%ecx
    mov    %ebx,%edx
    mov    %ebp,%eax
    call   func_2bb74
  jump_107b4:
    movsbl (%esi),%eax
    imul   $0x6a,%eax,%eax
    add    $data_107020,%eax
    push   %eax
    push   $data_9004a
    lea    0x8(%esp),%eax
    push   %eax
    call   func_76d09
    movzbl data_104bea,%esi
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    add    $0xc,%esp
    mov    data_a2f74(,%eax,2),%al
    push   $0x0
    xor    %ah,%ah
    lea    0x4(%esp),%ecx
    shl    $0x2,%eax
    mov    $0x2,%ebx
    add    $0x13,%eax
    push   $0xff
    cwtl
    mov    $0x5,%edx
    push   %eax
    mov    $data_10de9e,%edi
    mov    %ebp,%esi
    push   $0x0
    mov    $data_10de96,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    0x58(%esp),%ecx
    cmp    $0x2,%ecx
    jne    jump_10832
    xor    %eax,%eax
    jmp    jump_1083c
  jump_10832:
    cmp    $0x3,%ecx
    jne    jump_1086e
    mov    $0x1,%eax
  jump_1083c:
    call   func_1cea8
    push   $0x0
    mov    $0xc,%ebx
    mov    $0x5,%edx
    push   $0xff
    mov    $data_10de9e,%edi
    mov    %ebp,%esi
    push   $0xf
    mov    %eax,%ecx
    mov    $data_10de96,%eax
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_1086e:
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_10878:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x5c,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,0x58(%esp)
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffedc,%dx
    call   func_1b084
    mov    %eax,%edi
    test   %eax,%eax
    jne    jump_108ae
    mov    $0x122,%ebx
    mov    $data_9004d,%edx
    call   func_26198
  jump_108ae:
    test   %ecx,%ecx
    je     jump_108c7
    cmpl   $0x0,0x58(%esp)
    jne    jump_108c7
    push   $0x96
    push   %ebp
    call   func_5e9d0
    add    $0x8,%esp
  jump_108c7:
    lea    0x54(%esp),%eax
    lea    0x50(%esp),%ecx
    mov    %edi,%edx
    xor    %ebx,%ebx
    push   %eax
    mov    0x1(%esi),%bl
    mov    %ebp,%eax
    call   func_2bc40
    cmpl   $0x1,0x58(%esp)
    jne    jump_10911
    mov    data_d8d8f,%eax
    add    $0x700,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    mov    0x54(%esp),%edx
    push   %edx
    mov    0x54(%esp),%ebx
    xor    %eax,%eax
    push   %ebx
    mov    0x1(%esi),%al
    push   %eax
    push   %edi
    push   %ebp
    call   func_5d026
    jmp    jump_10928
  jump_10911:
    mov    0x54(%esp),%ecx
    push   %ecx
    mov    0x54(%esp),%eax
    push   %eax
    xor    %eax,%eax
    mov    0x1(%esi),%al
    push   %eax
    push   %edi
    push   %ebp
    call   func_5cb3c
  jump_10928:
    add    $0x14,%esp
    movzbl 0x1(%esi),%esi
    lea    0x0(,%esi,4),%eax
    add    %esi,%eax
    shl    $0x3,%eax
    add    $data_103f9c,%eax
    add    $0xa,%eax
    push   %eax
    push   $data_9005b
    lea    0x8(%esp),%eax
    push   %eax
    call   func_76d09
    movzbl data_104bea,%esi
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    add    $0xc,%esp
    mov    data_a2f74(,%eax,2),%al
    push   $0x0
    xor    %ah,%ah
    lea    0x4(%esp),%ecx
    shl    $0x2,%eax
    mov    $0x2,%ebx
    add    $0x13,%eax
    push   $0xff
    cwtl
    mov    $0x5,%edx
    push   %eax
    mov    $data_10de9e,%edi
    mov    %ebp,%esi
    push   $0x0
    mov    $data_10de96,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    cmpl   $0x1,0x58(%esp)
    jne    jump_10a0a
    movzbl data_104bea,%esi
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    mov    data_a2f74(,%eax,2),%al
    xor    %ah,%ah
    mov    $0xc,%ebx
    mov    %eax,%edx
    xor    %eax,%eax
    shl    $0x2,%edx
    call   func_1cea8
    push   $0x0
    mov    $data_10de9e,%edi
    add    $0x13,%edx
    push   $0xff
    movswl %dx,%edx
    mov    %ebp,%esi
    push   %edx
    mov    %eax,%ecx
    mov    $data_10de96,%eax
    push   $0x0
    mov    $0x5,%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_10a0a:
    add    $0x5c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_10a14:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ebx
    mov    0x4(%ebx),%ecx
    mov    0x4(%edx),%esi
    mov    $0xffffffff,%eax
    cmp    %esi,%ecx
    jle    jump_10a31
    mov    $0x1,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_10a31:
    jne    jump_10a35
    xor    %eax,%eax
  jump_10a35:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_10a3c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_2c830
    lea    0xc8(%eax),%edx
    movl   $0x0,(%edx)
    sub    $0xc8,%edx
    movl   $0x0,0xcc(%edx)
    movl   $0x0,0xd0(%edx)
    mov    %edx,%eax
    movl   $data_959b8,0xa7(%edx)
    call   func_10ac4
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_10a80:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_10a9f
    mov    $data_959a4,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_10a9f:
    mov    $0x1,%edx
    movl   $data_959b8,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_10abf
    call   func_76d64
  jump_10abf:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_10ac4:
/*----------------------------------------------------------------*/
    movb   $0x0,0xab(%eax)
    movl   $0x0,0xac(%eax)
    movb   $0x0,0xb0(%eax)
    movl   $0x0,0xb1(%eax)
    movl   $0x0,0xb5(%eax)
    movb   $0x0,0xb9(%eax)
    movl   $0x0,0xbf(%eax)
    ret

vtable_10b04:
    .long   func_11349
    .long   func_1143d
    .long   func_115d1
    .long   func_11349

vtable_10b14:
    .long   func_1169d
    .long   func_11635
    .long   func_11672
    .long   func_1169d


/*----------------------------------------------------------------*/
func_10b24:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8c,%esp
    mov    %eax,%ebp
    mov    %edx,%edi
    mov    %ebx,0x84(%esp)
    mov    %ecx,%esi
    mov    %edx,%eax
    cmp    $0x327,%dx
    jb     jump_116fc
    jbe    jump_10de8
    cmp    $0x32b,%dx
    jb     jump_116c5
    jbe    jump_10d76
    cmp    $0x32d,%dx
    jb     jump_10d9c
    jbe    jump_10dc2
    cmp    $0x1c01,%dx
    jb     jump_10b8b
    jbe    jump_1130f
    cmp    $0x1c02,%dx
    je     jump_116ac
  jump_10b8b:
    mov    0x84(%esp),%ebx
    movswl %di,%edx
    mov    %esi,%ecx
    mov    %ebp,%eax
    call   func_2f424
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10ba8:
    mov    $data_9005e,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,0xbb(%ebp)
    test   %eax,%eax
    jne    jump_10bd2
    mov    $0x184,%ebx
    mov    $data_90069,%edx
    call   func_26198
  jump_10bd2:
    mov    $data_90077,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,0xb5(%ebp)
    test   %eax,%eax
    jne    jump_10bfc
    mov    $0x187,%ebx
    mov    $data_90082,%edx
    call   func_26198
  jump_10bfc:
    mov    0xb5(%ebp),%eax
    movl   $0x0,0xab(%eax)
    xor    %edx,%edx
    mov    0xb5(%ebp),%eax
    call   func_2e9cc
    mov    0xb5(%ebp),%eax
    movb   $0x0,0xc5(%eax)
    mov    0xb5(%ebp),%eax
    lea    0xda(%ebp),%edx
    call   func_2ed4c
    movl   $0xffffffff,0x39(%ebp)
    mov    data_d3660,%ebx
    movl   $0xffffffff,0x35(%ebp)
    mov    %ebx,%eax
    movl   $0x0,0xbf(%ebp)
    call   func_1d734
    movw   $0x0,0xd4(%ebp)
    movl   $0x0,0x104(%ebp)
    xor    %edx,%edx
    mov    %eax,0xd6(%ebp)
    xor    %eax,%eax
    mov    0x15(%ebx),%dl
    mov    0x14(%ebx),%al
    mov    data_104bea,%cl
    or     %edx,%eax
    mov    $0x1,%edx
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_10c9b
    movb   $0x1,0xb9(%ebp)
    jmp    jump_10ca2
  jump_10c9b:
    movb   $0x4,0xb9(%ebp)
  jump_10ca2:
    movb   $0x0,0xba(%ebp)
    xor    %eax,%eax
    jmp    jump_10cb9
  jump_10cad:
    inc    %eax
    movl   $0xffffffff,0xe8(%ebp,%edx,4)
  jump_10cb9:
    movswl %ax,%edx
    cmp    0xd6(%ebp),%edx
    jl     jump_10cad
    mov    0x84(%esp),%ebx
    movswl %di,%edx
    mov    %esi,%ecx
    mov    %ebp,%eax
    call   func_2d258
    mov    %ebp,%eax
    call   func_12140
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
  jump_10ceb:
    xor    %eax,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10cf7:
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10d10:
    cmpb   $0x1,0xb9(%ebp)
    je     jump_10d34
    mov    %ebp,%eax
    movb   $0x1,0xb9(%ebp)
    call   func_12140
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
  jump_10d34:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10d43:
    cmpb   $0x4,0xb9(%ebp)
    je     jump_10d67
    mov    %ebp,%eax
    movb   $0x4,0xb9(%ebp)
    call   func_12140
    mov    %ebp,%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_10d67:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10d76:
    cmpb   $0x1,0xba(%ebp)
    je     jump_10d8d
    mov    %ebp,%eax
    movb   $0x1,0xba(%ebp)
    call   func_11ba4
  jump_10d8d:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10d9c:
    cmpb   $0x4,0xba(%ebp)
    je     jump_10db3
    mov    %ebp,%eax
    movb   $0x4,0xba(%ebp)
    call   func_11ba4
  jump_10db3:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10dc2:
    cmpb   $0x5,0xba(%ebp)
    je     jump_10dd9
    mov    %ebp,%eax
    movb   $0x5,0xba(%ebp)
    call   func_11ba4
  jump_10dd9:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10de8:
    mov    0xbb(%ebp),%eax
    cmpb   $0x4,0xb7(%eax)
    je     jump_10ceb
    mov    data_d3660,%eax
    xor    %edx,%edx
    mov    0x15(%eax),%dl
    mov    0x14(%eax),%al
    and    $0xff,%eax
    mov    data_104bea,%cl
    or     %eax,%edx
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_10ceb
    cmpl   $0x0,0x104(%ebp)
    jne    jump_10ceb
    mov    0xd2(%ebp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_10ceb
    mov    $0xffffffff,%edx
    mov    %ebp,%eax
    call   func_1229c
    xor    %eax,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10e5a:
    mov    0xbb(%ebp),%eax
    cmpb   $0x4,0xb7(%eax)
    je     jump_10ceb
    mov    data_d3660,%eax
    xor    %edx,%edx
    mov    0x15(%eax),%dl
    mov    0x14(%eax),%al
    and    $0xff,%eax
    mov    data_104bea,%cl
    or     %edx,%eax
    mov    $0x1,%edx
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_10ceb
    cmpl   $0x0,0x104(%ebp)
    jne    jump_10ceb
    mov    0xd2(%ebp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_10ceb
    mov    $0xffffffff,%edx
    movw   $0xffff,0xd4(%ebp)
    mov    %ebp,%eax
    movl   $0xffffffff,0x104(%ebp)
    call   func_1229c
    xor    %eax,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10edf:
    mov    0xbb(%ebp),%eax
    cmpb   $0x4,0xb7(%eax)
    je     jump_10ceb
    mov    0xbf(%ebp),%edx
    test   %edx,%edx
    je     jump_10ceb
    cmpb   $0x4,0x58(%edx)
    jne    jump_10ceb
    mov    0xbf(%ebp),%eax
    mov    data_d3660,%ebx
    cmp    0x59(%eax),%ebx
    jne    jump_10ceb
    movb   $0x3,0xab(%ebp)
    movb   $0x0,0xb0(%ebp)
    mov    0xbf(%ebp),%eax
    movl   $0x0,0xb1(%ebp)
    mov    $0x326,%edx
    mov    %eax,0xac(%ebp)
    mov    %ebp,%eax
    mov    0xc4(%ebp),%ecx
    mov    0xc0(%ebp),%ebx
    mov    0xa7(%eax),%esi
    sar    $0x18,%ebx
    call   *0x8(%esi)
    xor    %eax,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10f6e:
    movb   $0x2,0xb9(%ebp)
  jump_10f75:
    mov    %ebp,%eax
    call   func_12140
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
  jump_10f89:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10f98:
    movb   $0x3,0xb9(%ebp)
    jmp    jump_10f75
  jump_10fa1:
    movb   $0x1,0xb9(%ebp)
    jmp    jump_10f75
  jump_10faa:
    movb   $0x0,0xb0(%ebp)
    mov    0x84(%esp),%al
    movl   $0x0,0xb1(%ebp)
    mov    %al,0xab(%ebp)
    mov    0xab(%ebp),%al
    mov    %ecx,0xac(%ebp)
    cmp    $0x2,%al
    jb     jump_10fe0
    jbe    jump_10f98
    cmp    $0x3,%al
    je     jump_10f6e
    jmp    jump_10fe4
  jump_10fe0:
    test   %al,%al
    je     jump_10fa1
  jump_10fe4:
    mov    $0x263,%ebx
    mov    $data_90090,%edx
    xor    %eax,%eax
    call   func_261a8
    jmp    jump_10f75
  jump_10ffa:
    xor    %ecx,%ecx
    mov    0xab(%ebp),%bh
    mov    %ecx,0xbf(%ebp)
    cmp    $0x3,%bh
    jne    jump_1112b
    cmpb   $0x0,0x84(%esp)
    jne    jump_11064
    jmp    jump_1112b
  jump_11020:
    mov    %bl,0x55(%esp)
    mov    %esi,0x56(%esp)
    jmp    jump_110b3
  jump_1102d:
    cmp    0xb0(%ebp),%bl
    jne    jump_11044
    xor    %bl,%bl
    mov    %esi,0x56(%esp)
    mov    %bl,0x55(%esp)
    jmp    jump_110b3
  jump_11044:
    xor    %dh,%dh
    mov    %esi,0x56(%esp)
    mov    %dh,0x55(%esp)
    jmp    jump_110b3
  jump_11050:
    cmp    0xb0(%ebp),%bl
    jne    jump_110b3
    mov    $0x2,%ah
    mov    %esi,0x56(%esp)
    mov    %ah,0x55(%esp)
    jmp    jump_110b3
  jump_11064:
    lea    0x50(%esp),%eax
    lea    0xa(%eax),%edx
    mov    %ecx,(%edx)
    mov    %ecx,0x4(%edx)
    lea    -0xa(%edx),%eax
    mov    %ecx,0x8(%edx)
    mov    %ecx,0x16(%eax)
    mov    %ecx,0x1a(%eax)
    mov    $0x1,%bl
    mov    %ecx,0x1e(%eax)
    add    $0x16,%eax
    mov    %bl,0x50(%esp)
    mov    0xb1(%ebp),%eax
    mov    $0x5,%bh
    mov    %eax,0x51(%esp)
    mov    0x84(%esp),%al
    mov    %bh,0x55(%esp)
    cmp    $0x3,%al
    jb     jump_110ab
    jbe    jump_1102d
    cmp    $0x4,%al
    je     jump_11050
    jmp    jump_110b3
  jump_110ab:
    cmp    $0x2,%al
    je     jump_11020
  jump_110b3:
    mov    0xac(%ebp),%edx
    mov    0x50(%esp),%al
    mov    %al,0x62(%edx)
    mov    0x51(%esp),%eax
    mov    %eax,0x63(%edx)
    mov    0x55(%esp),%al
    mov    %al,0x67(%edx)
    add    $0x62,%edx
    mov    0x56(%esp),%eax
    mov    %eax,0x6(%edx)
    lea    0xa(%edx),%ebx
    mov    0x5a(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x5e(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x62(%esp),%eax
    mov    %eax,0x8(%ebx)
    lea    0x16(%edx),%ebx
    mov    0x66(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x6a(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x6e(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    0x72(%esp),%eax
    mov    %eax,0x22(%edx)
    mov    0xac(%ebp),%eax
    xor    %edx,%edx
    call   func_49b3c
    mov    0xac(%ebp),%eax
    testb  $0x1,0x84(%eax)
    je     jump_1117a
    jmp    jump_11175
  jump_1112b:
    cmpb   $0x2,0xab(%ebp)
    jne    jump_1117a
    cmpb   $0x3,0x84(%esp)
    jne    jump_1117a
    mov    %esi,0x7c(%esp)
    mov    0xac(%ebp),%esi
    mov    0xb1(%ebp),%eax
    lea    0x6b(%esi),%edi
    lea    0x78(%esp),%esi
    mov    %eax,0x78(%esp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    xor    %edx,%edx
    mov    0xac(%ebp),%eax
    call   func_3676c
    mov    0xac(%ebp),%eax
    testb  $0x1,0x73(%eax)
    je     jump_1117a
  jump_11175:
    mov    $0xffffffff,%ecx
  jump_1117a:
    mov    %ecx,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_11186:
    cmp    %dl,%al
    jne    jump_111a9
    mov    $0x1,%bh
    mov    %esi,0x6(%esp)
    mov    %bh,0x5(%esp)
    mov    0xac(%ebp),%eax
    movb   $0x3,0x5d(%eax)
    mov    0xac(%ebp),%eax
    mov    %esi,0x5e(%eax)
    jmp    jump_111df
  jump_111a9:
    cmp    $0x4,%al
    jne    jump_111df
    mov    %dl,0x5(%esp)
    mov    %esi,0x6(%esp)
    mov    0xac(%ebp),%eax
    movb   $0x1,0x5d(%eax)
    mov    data_d3660,%edx
    mov    (%esi),%eax
    cmp    %edx,%eax
    jne    jump_111d6
    mov    0xac(%ebp),%edx
    mov    0x4(%esi),%eax
    jmp    jump_111dc
  jump_111d6:
    mov    0xac(%ebp),%edx
  jump_111dc:
    mov    %eax,0x5e(%edx)
  jump_111df:
    mov    0xac(%ebp),%edx
    mov    (%esp),%al
    mov    %al,0x62(%edx)
    mov    0x1(%esp),%eax
    mov    %eax,0x63(%edx)
    mov    0x5(%esp),%al
    mov    %al,0x67(%edx)
    add    $0x62,%edx
    mov    0x6(%esp),%eax
    mov    %eax,0x6(%edx)
    lea    0xa(%edx),%ebx
    mov    0xa(%esp),%eax
    mov    %eax,(%ebx)
    mov    0xe(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x12(%esp),%eax
    mov    %eax,0x8(%ebx)
    lea    0x16(%edx),%ebx
    mov    0x16(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x1a(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x1e(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    0x22(%esp),%eax
    mov    %eax,0x22(%edx)
    mov    0xac(%ebp),%eax
    xor    %edx,%edx
    call   func_49b3c
    mov    0xac(%ebp),%eax
    testb  $0x8,0x84(%eax)
    jne    jump_112cc
    mov    %eax,0xbf(%ebp)
    mov    %ecx,0xc4(%ebp)
    mov    0x88(%esp),%al
    mov    %al,0xc3(%ebp)
    jmp    jump_112cc
  jump_11273:
    movb   $0x1,(%esp)
    mov    0xb1(%ebp),%eax
    xor    %bh,%bh
    mov    %eax,0x1(%esp)
    mov    %bh,0x5(%esp)
    mov    0xac(%ebp),%eax
    mov    %eax,0x6(%esp)
    jmp    jump_112cc
  jump_11293:
    cmp    $0x2,%cl
    jne    jump_112cc
    cmp    0xb0(%ebp),%cl
    je     jump_112b1
    mov    $0x33b,%ebx
    mov    $data_900c8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_112b1:
    cmpb   $0x3,0x84(%esp)
    je     jump_112cc
    mov    $0x33c,%ebx
    mov    $data_900d6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_112cc:
    mov    %ebp,%eax
    movb   $0x1,0xb9(%ebp)
    call   func_12140
    movb   $0x0,0xb0(%ebp)
    xor    %edx,%edx
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    movl   $0x0,0xb1(%ebp)
    call   *0xc(%ebx)
    mov    0xbb(%ebp),%eax
    call   func_12674
    xor    %eax,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_1130f:
    mov    0xbb(%ebp),%eax
    cmpb   $0x4,0xb7(%eax)
    je     jump_10ceb
    mov    0xb9(%ebp),%al
    dec    %al
    movl   $0x0,0xbf(%ebp)
    cmp    $0x3,%al
    ja     jump_10f89
    and    $0xff,%eax
    jmp    *%cs:vtable_10b04(,%eax,4)


/*----------------------------------------------------------------*/
func_11349:
/*----------------------------------------------------------------*/
    cmp    $0x4,%esi
    jne    jump_113e6
    xor    %edx,%edx
    mov    0xb5(%ebp),%eax
    mov    0x84(%esp),%dx
    call   func_2eca4
    test   $0x80000000,%eax
    je     jump_1137e
    movb   $0x2,0xab(%ebp)
    movb   $0x3,0xb9(%ebp)
    jmp    jump_1138c
  jump_1137e:
    movb   $0x3,0xab(%ebp)
    movb   $0x2,0xb9(%ebp)
  jump_1138c:
    mov    $0x53,%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_12140
    mov    0x84(%esp),%dx
    mov    0xb5(%ebp),%eax
    xor    %ecx,%ecx
    call   func_2ed14
    push   $0x0
    mov    0xbb(%ebp),%edx
    mov    %eax,0xac(%ebp)
    mov    $data_10ae70,%eax
    mov    0x41(%edx),%edx
    call   func_56d30
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_113e6:
    xor    %edx,%edx
    mov    0xb5(%ebp),%eax
    mov    0x84(%esp),%dx
    call   func_2ed14
    mov    0xbb(%ebp),%ebx
    mov    %eax,%edx
    mov    %ebx,%eax
    call   func_12ae4
    test   %eax,%eax
    je     jump_10f89
    mov    0xbb(%ebp),%ebx
    mov    %eax,%edx
    mov    %ebx,%eax
    call   func_17e88
    mov    0xbb(%ebp),%eax
    xor    %edx,%edx
    call   func_18c2c
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_1143d:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    mov    0x84(%esp),%bx
    mov    0xb5(%ebp),%eax
    mov    %ebx,%edx
    call   func_2eca4
    test   %eax,%eax
    jne    jump_10f89
    mov    %ebx,%edx
    mov    0xb5(%ebp),%eax
    call   func_2ed14
    mov    (%eax),%cl
    mov    %eax,%esi
    cmp    $0xff,%cl
    jne    jump_11483
    mov    $0x39c,%ebx
    mov    $data_900e4,%edx
    xor    %eax,%eax
    call   func_26198
  jump_11483:
    movsbl %cl,%eax
    imul   $0x6a,%eax,%eax
    add    $data_107020,%eax
    mov    0x33(%eax),%dx
    xor    %dh,%dh
    and    $0x80,%dl
    movswl %dx,%edx
    mov    0xac(%ebp),%ebx
    test   %edx,%edx
    jne    jump_10f89
    mov    0x33(%eax),%dx
    xor    %dh,%dh
    and    $0x20,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_114c6
    mov    %esi,%edx
    mov    %ebx,%eax
    call   func_49a8c
    jmp    jump_115b2
  jump_114c6:
    movb   $0x1,0xb0(%ebp)
    mov    %esi,0xb1(%ebp)
    mov    0x33(%eax),%ax
    xor    %ah,%ah
    and    $0x40,%al
    cwtl
    test   %eax,%eax
    je     jump_11597
    lea    0x28(%esp),%eax
    add    $0xa,%eax
    mov    %edx,(%eax)
    mov    %edx,0x4(%eax)
    mov    %edx,0x8(%eax)
    mov    %edx,0xc(%eax)
    mov    %edx,0x10(%eax)
    mov    %edx,0x14(%eax)
    mov    $0x1,%dh
    add    $0xc,%eax
    mov    %dh,0x28(%esp)
    mov    0xb1(%ebp),%eax
    mov    $0x5,%bl
    mov    %eax,0x29(%esp)
    mov    %bl,0x2d(%esp)
    mov    0xac(%ebp),%edx
    add    $0x62,%edx
    movb   $0x1,(%edx)
    mov    0x29(%esp),%eax
    mov    %eax,0x1(%edx)
    mov    0x2d(%esp),%al
    mov    %al,0x5(%edx)
    mov    0x2e(%esp),%eax
    mov    %eax,0x6(%edx)
    lea    0xa(%edx),%ebx
    mov    0x32(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x36(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x3a(%esp),%eax
    mov    %eax,0x8(%ebx)
    lea    0x16(%edx),%ebx
    mov    0x3e(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x42(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x46(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    0x4a(%esp),%eax
    mov    %eax,0x22(%edx)
    movb   $0x0,0xb0(%ebp)
    movl   $0x0,0xb1(%ebp)
    mov    %ebp,%eax
    movb   $0x1,0xb9(%ebp)
    call   func_12140
    mov    0xbb(%ebp),%eax
    call   func_12674
    jmp    jump_115b2
  jump_11597:
    mov    $0x51,%ebx
    push   %edx
    mov    0xbb(%ebp),%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_56d30
  jump_115b2:
    mov    0xa7(%ebp),%ebx
    mov    $0x1c01,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_115d1:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    mov    0x84(%esp),%bx
    mov    0xb5(%ebp),%eax
    mov    %ebx,%edx
    call   func_2eca4
    test   %eax,%eax
    jne    jump_10f89
    mov    %ebx,%edx
    mov    0xb5(%ebp),%eax
    call   func_2ed14
    xor    %ecx,%ecx
    push   $0x0
    movb   $0x2,0xb0(%ebp)
    mov    $0x51,%ebx
    mov    0xbb(%ebp),%edx
    mov    %eax,0xb1(%ebp)
    mov    $data_10ae70,%eax
    mov    0x41(%edx),%edx
    call   func_56d30
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_11635:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    0xb5(%ebp),%eax
    mov    0x84(%esp),%dx
    mov    $0x4,%ecx
    call   func_2ed14
    mov    (%eax),%al
    mov    $0x5,%edx
    movsbl %al,%ebx
    mov    $data_10ae70,%eax
    call   func_56b60
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_11672:
/*----------------------------------------------------------------*/
    mov    $0x5,%ecx
    xor    %edx,%edx
    mov    0xb5(%ebp),%eax
    mov    0x84(%esp),%dx
    xor    %ebx,%ebx
    call   func_2ed14
    mov    %ecx,%edx
    mov    0x1(%eax),%bl
    mov    $data_10ae70,%eax
    call   func_56b60


/*----------------------------------------------------------------*/
func_1169d:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_116ac:
    mov    0xb9(%ebp),%al
    dec    %al
    cmp    $0x3,%al
    ja     func_1169d
    and    $0xff,%eax
    jmp    *%cs:vtable_10b14(,%eax,4)
  jump_116c5:
    cmp    $0x329,%dx
    jb     jump_10e5a
    jbe    jump_10edf
    cmpb   $0x0,0xba(%ebp)
    je     jump_116ed
    mov    %ebp,%eax
    movb   $0x0,0xba(%ebp)
    call   func_11ba4
  jump_116ed:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_116fc:
    cmp    $0x322,%dx
    jb     jump_11844
    jbe    jump_10ffa
    cmp    $0x325,%dx
    jb     jump_11834
    jbe    jump_10d43
    movl   $0x0,0xbf(%ebp)
    test   %ebx,%ebx
    jne    jump_1173d
    mov    $0x2e1,%ebx
    mov    $data_9009e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1173d:
    test   %esi,%esi
    jne    jump_11752
    mov    $0x2e2,%ebx
    mov    $data_900ac,%edx
    xor    %eax,%eax
    call   func_26198
  jump_11752:
    mov    0xd2(%ebp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_11770
    mov    $0x2e4,%ebx
    mov    $data_900ba,%edx
    xor    %eax,%eax
    call   func_26198
  jump_11770:
    mov    0xab(%ebp),%cl
    cmp    $0x3,%cl
    jne    jump_11293
    mov    %esp,%eax
    add    $0xa,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    mov    $0x2,%dl
    movl   $0x0,(%eax)
    mov    %dl,(%esp)
    mov    0xac(%ebp),%eax
    movb   $0x0,0x5d(%eax)
    mov    0xb0(%ebp),%dh
    mov    %esi,%ecx
    test   %dh,%dh
    jne    jump_11273
    mov    0x84(%esp),%al
    mov    %dh,(%esp)
    mov    %al,0x88(%esp)
    cmp    $0x5,%al
    jne    jump_11186
    movb   $0x3,0x5(%esp)
    mov    (%esi),%eax
    mov    %eax,0xa(%esp)
    mov    0x4(%esi),%eax
    mov    %eax,0xe(%esp)
    mov    0x8(%esi),%eax
    mov    %eax,0x12(%esp)
    lea    0xc8(%ebp),%eax
    mov    (%esi),%edx
    mov    %edx,(%eax)
    mov    %eax,%ecx
    mov    0x4(%esi),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%esi),%edx
    mov    %edx,0x8(%eax)
    mov    0xac(%ebp),%eax
    movb   $0x7,0x5d(%eax)
    mov    0xac(%ebp),%eax
    movl   $0x0,0x5e(%eax)
    jmp    jump_111df
  jump_11834:
    cmp    $0x324,%dx
    je     jump_10d10
    jmp    jump_10b8b
  jump_11844:
    cmp    $0xd,%dx
    jb     jump_11860
    jbe    jump_10cf7
    cmp    $0x320,%dx
    je     jump_10faa
    jmp    jump_10b8b
  jump_11860:
    cmp    $0x1,%dx
    je     jump_10ba8
    jmp    jump_10b8b


/*----------------------------------------------------------------*/
func_11870:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x6c,%esp
    mov    %eax,%ebp
    cmp    $0x1c01,%edx
    je     jump_11887
    call   func_11ba4
  jump_11887:
    lea    0x50(%esp),%edi
    mov    $0x1d2,%edx
    mov    $0x27f,%ecx
    lea    0x4(%ebp),%esi
    lea    0x50(%esp),%eax
    xor    %ebx,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %ebx
    mov    $0x8d,%esi
    mov    %edx,0x58(%esp)
    mov    %ebx,0x5c(%esp)
    push   %eax
    mov    %ecx,0x64(%esp)
    mov    %esi,0x68(%esp)
    call   func_5e9d0
    mov    $0xa,%esi
    mov    0xb9(%ebp),%ah
    add    $0x8,%esp
    cmp    $0x2,%ah
    je     jump_118d7
    cmp    $0x3,%ah
    jne    jump_11943
  jump_118d7:
    mov    0xb5(%ebp),%esi
    lea    0x28(%esp),%edi
    lea    0x4(%esi),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movl   $0x7,0x30(%esp)
    mov    0xb5(%ebp),%eax
    mov    0x8c9(%eax),%ax
    and    $0xffff,%eax
    add    $0x8,%eax
    mov    %eax,0x38(%esp)
    cmpb   $0x2,0xb9(%ebp)
    jne    jump_11928
    lea    0x28(%esp),%eax
    mov    0xac(%ebp),%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    $0xb,%esi
    jmp    jump_1193e
  jump_11928:
    mov    $0xffffffff,%ebx
    lea    0x28(%esp),%eax
    mov    0xac(%ebp),%edx
    xor    %ecx,%ecx
    mov    $0x13,%esi
  jump_1193e:
    call   func_10010
  jump_11943:
    push   $0x0
    push   $0x0
    xor    %edx,%edx
    push   %esi
    mov    $data_12fc20,%eax
    mov    0x18(%ebp),%dx
    call   func_1b084
    push   %eax
    lea    0x60(%esp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_2d218
    lea    0x50(%esp),%edx
    mov    $data_10ae70,%eax
    call   func_552cc
    mov    0xb9(%ebp),%bl
    cmp    $0x1,%bl
    je     jump_11991
    cmp    $0x4,%bl
    jne    jump_11b88
  jump_11991:
    lea    0x3c(%esp),%edi
    mov    $0x1da,%eax
    push   $0x0
    mov    $0x7,%edx
    mov    $0x278,%ebx
    push   $0x3333
    lea    0x4(%ebp),%esi
    mov    $0x25,%ecx
    push   $0x3333
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    mov    %eax,0x50(%esp)
    mov    %edx,0x54(%esp)
    push   $data_d8da0
    mov    %ebx,0x5c(%esp)
    mov    %ecx,0x60(%esp)
    push   $0xf
    mov    data_d3660,%eax
    mov    0xbb(%ebp),%edx
    push   $0xf
    mov    (%eax),%esi
    mov    0x19c8(%edx),%dx
    push   %esi
    mov    $data_12fc20,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    lea    0x60(%esp),%eax
    push   %eax
    call   func_5d631
    mov    $0xf3,%edx
    mov    $0xffffffff,%ebx
    mov    data_a3cf4,%cx
    add    $0x28,%esp
    xor    %eax,%eax
    mov    %dx,0x68(%esp)
    mov    %bx,0x64(%esp)
    test   %cx,%cx
    jg     jump_11a3e
    jmp    jump_11a83
  jump_11a2f:
    mov    data_a3cf4,%si
    inc    %eax
    cmp    %si,%ax
    jl     jump_11a44
    jmp    jump_11a83
  jump_11a3e:
    mov    data_d3660,%ebx
  jump_11a44:
    movswl %ax,%esi
    imul   $0x1ee,%esi,%esi
    cmpl   $0xffffffff,data_a2f75(%esi)
    je     jump_11a2f
    mov    0x14(%ebx),%cl
    test   %cl,%cl
    je     jump_11a2f
    mov    $0x1,%edx
    movzbl %cl,%edi
    movswl %ax,%ecx
    shl    %cl,%edx
    mov    %edi,%ecx
    or     %edx,%ecx
    cmp    %edx,%ecx
    je     jump_11a7e
    cmp    data_a2f79(%esi),%ebx
    jne    jump_11a2f
    test   %edx,%edi
    je     jump_11a2f
  jump_11a7e:
    mov    %ax,0x64(%esp)
  jump_11a83:
    mov    0x62(%esp),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_11ac7
    movswl %ax,%ecx
    mov    %ecx,%edx
    shl    $0x5,%edx
    sub    %ecx,%edx
    shl    $0x3,%edx
    sub    %ecx,%edx
    xor    %eax,%eax
    mov    data_a2f74(,%edx,2),%al
    shl    $0x2,%eax
    mov    $0x3,%ebx
    add    $0x13,%eax
    mov    $0x8d,%edx
    mov    %ax,0x68(%esp)
    lea    0x3c(%esp),%eax
    call   func_53e38
  jump_11ac7:
    mov    data_d3660,%eax
    add    $0x1c,%eax
    push   %eax
    push   $data_900f2
    lea    0x8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    lea    0x3c(%esp),%esi
    push   $0x6c
    lea    0x4(%esp),%ecx
    mov    0x6a(%esp),%eax
    push   $0xff
    sar    $0x10,%eax
    mov    $0x5,%ebx
    push   %eax
    mov    $0x28,%edx
    mov    $data_10debe,%edi
    push   $0x0
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    data_d3660,%eax
    mov    (%eax),%eax
    lea    0x0(,%eax,4),%edx
    add    %eax,%edx
    mov    $data_d84c4,%eax
    shl    $0x2,%edx
    add    %edx,%eax
    push   %eax
    push   $data_900f5
    lea    0x8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    push   $0x6c
    lea    0x40(%esp),%esi
    mov    $data_10de9e,%edi
    push   $0xff
    lea    0x8(%esp),%ecx
    mov    $0x12,%ebx
    push   $0xf3
    mov    $0x28,%edx
    mov    $data_10de96,%eax
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    lea    0x3c(%esp),%edx
    mov    $data_10ae70,%eax
    call   func_552cc
  jump_11b88:
    add    $0x6c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret

vtable_11b94:
    .long   func_11bda
    .long   func_11d16
    .long   func_11f0a
    .long   func_12067


/*----------------------------------------------------------------*/
func_11ba4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x384,%esp
    mov    %eax,%esi
    mov    0xb5(%eax),%eax
    call   func_2ed4c
    mov    0xb9(%esi),%al
    dec    %al
    cmp    $0x3,%al
    ja     jump_11cf8
    and    $0xff,%eax
    jmp    *%cs:vtable_11b94(,%eax,4)


/*----------------------------------------------------------------*/
func_11bda:
/*----------------------------------------------------------------*/
    mov    0xb5(%esi),%eax
    movw   $0x54,0x8c9(%eax)
    mov    $func_10010,%edx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2f1c8
    mov    %esp,%edx
    mov    data_d3660,%eax
    mov    %cx,0x37c(%esp)
    call   func_1d794
    mov    %eax,%ebp
    jmp    jump_11c1b
  jump_11c13:
    incw   0x37c(%esp)
  jump_11c1b:
    mov    0x37a(%esp),%edi
    sar    $0x10,%edi
    cmp    %ebp,%edi
    jge    jump_11c8f
    mov    (%esp,%edi,4),%edi
    cmpb   $0x4,0x58(%edi)
    jne    jump_11c13
    mov    0x54(%edi),%eax
    sar    $0x10,%eax
    cmp    $0x7,%eax
    jl     jump_11c4e
    mov    $0x4ac,%ebx
    mov    $data_900f8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_11c4e:
    xor    %eax,%eax
    mov    0x54(%edi),%edx
    mov    data_104bea,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    jne    jump_11c13
    mov    $0xffffffff,%ebx
    mov    %edi,%edx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    mov    0x37a(%esp),%ebx
    xor    %edx,%edx
    sar    $0x10,%ebx
    mov    %ax,%dx
    mov    0xb5(%esi),%eax
    call   func_2ec50
    jmp    jump_11c13
  jump_11c8f:
    xor    %edi,%edi
    jmp    jump_11c94
  jump_11c93:
    inc    %edi
  jump_11c94:
    mov    data_d3660,%eax
    cmp    0x5a(%eax),%di
    jge    jump_11cdd
    movswl %di,%ebp
    mov    0x46(%eax,%ebp,4),%edx
    mov    0x57(%edx),%al
    cmp    data_104bea,%al
    jne    jump_11c93
    mov    $0xffffffff,%ebx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    mov    %ebp,%ebx
    xor    %edx,%edx
    or     $0x80000000,%ebx
    mov    %ax,%dx
    mov    0xb5(%esi),%eax
    call   func_2ec50
    jmp    jump_11c93
  jump_11cdd:
    mov    $func_10a14,%edx
    mov    0xb5(%esi),%eax
    call   func_2f1d8
    mov    0xb5(%esi),%eax
    call   func_2f1e0
  jump_11cf8:
    mov    0xb5(%esi),%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    add    $0x384,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_11d16:
/*----------------------------------------------------------------*/
    cmpb   $0x3,0xab(%esi)
    je     jump_11d30
    mov    $0x4d8,%ebx
    mov    $data_90106,%edx
    xor    %eax,%eax
    call   func_26198
  jump_11d30:
    cmpl   $0x0,0xac(%esi)
    jne    jump_11d4a
    mov    $0x4d9,%ebx
    mov    $data_90114,%edx
    xor    %eax,%eax
    call   func_26198
  jump_11d4a:
    mov    0xb5(%esi),%eax
    movw   $0x54,0x8c9(%eax)
    mov    $func_10668,%edx
    mov    0xb5(%esi),%eax
    call   func_2f1c8
    mov    0xac(%esi),%eax
    mov    %eax,0x36c(%esp)
    mov    0x88(%eax),%eax
    mov    %eax,0x35c(%esp)
    mov    0x36c(%esp),%eax
    xor    %edx,%edx
    mov    0x54(%eax),%eax
    mov    data_104bea,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    je     jump_11db1
    mov    0x36c(%esp),%eax
    call   func_4aaec
    cmp    $0x2,%eax
    jne    jump_11cdd
  jump_11db1:
    mov    0x36c(%esp),%edi
    xor    %ebx,%ebx
    add    $0xab,%edi
    mov    %bx,0x378(%esp)
    jmp    jump_11e5b
  jump_11dcd:
    mov    0x33(%ebp),%ax
    xor    %ah,%ah
    and    $0x20,%al
    cwtl
    test   %eax,%eax
    jne    jump_11e00
    cmpl   $0x0,0x42(%ebp)
    je     jump_11def
    movswl 0x1(%edi),%eax
    test   %eax,%eax
    jne    jump_11def
    mov    $0x2,%ebx
    jmp    jump_11e00
  jump_11def:
    mov    0x35c(%esp),%ecx
    cmp    0x36(%ebp),%ecx
    jge    jump_11e00
    mov    $0x3,%ebx
  jump_11e00:
    mov    0x33(%ebp),%ax
    xor    %ah,%ah
    and    $0x80,%al
    cwtl
    test   %eax,%eax
    je     jump_11e16
    movsbl (%edi),%ebx
    add    $0x1f4,%ebx
  jump_11e16:
    mov    0x32(%ebp),%ah
    cmp    $0x2,%ah
    jne    jump_11e29
    movsbl (%edi),%ebx
    add    $0x258,%ebx
    jmp    jump_11e37
  jump_11e29:
    cmp    $0x4,%ah
    jne    jump_11e37
    movsbl (%edi),%ebx
    add    $0x2bc,%ebx
  jump_11e37:
    and    $0xffff,%edx
    mov    0xb5(%esi),%eax
    call   func_2ec50
  jump_11e48:
    mov    0x378(%esp),%ecx
    inc    %ecx
    add    $0x7,%edi
    mov    %cx,0x378(%esp)
  jump_11e5b:
    mov    0x376(%esp),%eax
    mov    0x36c(%esp),%edx
    sar    $0x10,%eax
    cmp    0x15a(%edx),%eax
    jge    jump_11cdd
    mov    (%edi),%cl
    cmp    $0xff,%cl
    je     jump_11e48
    movsbl %cl,%ebp
    imul   $0x6a,%ebp,%ebp
    mov    0xba(%esi),%ch
    mov    data_107052(%ebp),%al
    add    $data_107020,%ebp
    cmp    %ch,%al
    jne    jump_11ea8
    mov    0x33(%ebp),%ax
    xor    %ah,%ah
    and    $0x80,%al
    cwtl
    test   %eax,%eax
    je     jump_11ebe
  jump_11ea8:
    cmpb   $0x4,0xba(%esi)
    jne    jump_11e48
    mov    0x33(%ebp),%ax
    xor    %ah,%ah
    and    $0x80,%al
    cwtl
    test   %eax,%eax
    je     jump_11e48
  jump_11ebe:
    mov    $0xffffffff,%ebx
    mov    %edi,%edx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    mov    %eax,%edx
    mov    0x36c(%esp),%eax
    mov    0x54(%eax),%eax
    sar    $0x10,%eax
    mov    %eax,0x358(%esp)
    xor    %eax,%eax
    mov    0x358(%esp),%ecx
    mov    data_104bea,%al
    xor    %ebx,%ebx
    cmp    %ecx,%eax
    je     jump_11dcd
    mov    $0x1,%ebx
    jmp    jump_11e00


/*----------------------------------------------------------------*/
func_11f0a:
/*----------------------------------------------------------------*/
    mov    0xb5(%esi),%eax
    movw   $0x54,0x8c9(%eax)
    mov    $func_10878,%edx
    mov    0xb5(%esi),%eax
    call   func_2f1c8
    mov    0xab(%esi),%ah
    mov    0xac(%esi),%edi
    cmp    $0x2,%ah
    je     jump_11f4b
    mov    $0x51f,%ebx
    mov    $data_90122,%edx
    xor    %eax,%eax
    call   func_26198
  jump_11f4b:
    test   %edi,%edi
    jne    jump_11f60
    mov    $0x520,%ebx
    mov    $data_90130,%edx
    xor    %eax,%eax
    call   func_26198
  jump_11f60:
    mov    data_104bea,%dl
    cmp    0x57(%edi),%dl
    jne    jump_11cdd
    xor    %edx,%edx
    mov    %dx,0x380(%esp)
    jmp    jump_11f83
  jump_11f7b:
    incw   0x380(%esp)
  jump_11f83:
    mov    0x37e(%esp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    0x1a(%edi),%dx
    cmp    %edx,%eax
    jge    jump_11cdd
    shl    $0x2,%eax
    mov    0x10(%edi),%edx
    add    %eax,%edx
    mov    %eax,0x370(%esp)
    mov    0x2(%edx),%ax
    xor    %ah,%ah
    xor    %ebp,%ebp
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_11f7b
    xor    %eax,%eax
    mov    0x1(%edx),%al
    imul   $0x28,%eax,%eax
    mov    data_103fa2(%eax),%ax
    xor    %ah,%ah
    and    $0x4,%al
    and    $0xffff,%eax
    je     jump_11f7b
    mov    $0xffffffff,%ebx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    mov    0x370(%esp),%ecx
    mov    %eax,0x374(%esp)
    mov    0x10(%edi),%edx
    lea    0x368(%esp),%eax
    add    %ecx,%edx
    push   %eax
    mov    0x1(%edx),%dl
    lea    0x368(%esp),%ecx
    lea    0x364(%esp),%ebx
    and    $0xff,%edx
    mov    %edi,%eax
    call   func_366c8
    cmpl   $0x0,0x368(%esp)
    je     jump_1204b
    mov    0x370(%esp),%edx
    mov    0x10(%edi),%eax
    add    %edx,%eax
    mov    0x2(%eax),%ax
    and    $0xffff,%eax
    sar    $0x8,%eax
    test   %eax,%eax
    jne    jump_1204b
    mov    $0x1,%ebp
  jump_1204b:
    mov    %ebp,%ebx
    xor    %edx,%edx
    mov    0xb5(%esi),%eax
    mov    0x374(%esp),%dx
    call   func_2ec50
    jmp    jump_11f7b


/*----------------------------------------------------------------*/
func_12067:
/*----------------------------------------------------------------*/
    mov    0xb5(%esi),%eax
    movw   $0x54,0x8c9(%eax)
    mov    $func_10010,%edx
    mov    0xb5(%esi),%eax
    call   func_2f1c8
    lea    0x1ac(%esp),%edx
    mov    data_d3660,%eax
    xor    %edi,%edi
    call   func_1d794
    mov    %eax,%ebp
    jmp    jump_1209e
  jump_1209d:
    inc    %edi
  jump_1209e:
    movswl %di,%eax
    cmp    %ebp,%eax
    jge    jump_120eb
    mov    0x1ac(%esp,%eax,4),%edx
    cmpb   $0x4,0x58(%edx)
    jne    jump_1209d
    xor    %ebx,%ebx
    mov    0x54(%edx),%eax
    mov    data_104bea,%bl
    sar    $0x10,%eax
    cmp    %ebx,%eax
    je     jump_1209d
    mov    $0xffffffff,%ebx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    xor    %edx,%edx
    movswl %di,%ebx
    mov    %ax,%dx
    mov    0xb5(%esi),%eax
    call   func_2ec50
    jmp    jump_1209d
  jump_120eb:
    xor    %edi,%edi
    jmp    jump_120f0
  jump_120ef:
    inc    %edi
  jump_120f0:
    mov    data_d3660,%eax
    cmp    0x5a(%eax),%di
    jge    jump_11cdd
    movswl %di,%ebp
    mov    0x46(%eax,%ebp,4),%edx
    mov    data_104bea,%bh
    cmp    0x57(%edx),%bh
    je     jump_120ef
    mov    $0xffffffff,%ebx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    mov    %ebp,%ebx
    xor    %edx,%edx
    or     $0x80000000,%ebx
    mov    %ax,%dx
    mov    0xb5(%esi),%eax
    call   func_2ec50
    jmp    jump_120ef


/*----------------------------------------------------------------*/
func_12140:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    0x6b(%eax),%dx
    xor    %esi,%esi
    test   %dx,%dx
    jg     jump_1215f
    jmp    jump_12179
  jump_12158:
    inc    %esi
    cmp    0x6b(%ecx),%si
    jge    jump_12179
  jump_1215f:
    movswl %si,%eax
    mov    0x67(%ecx),%edx
    mov    (%edx,%eax,4),%eax
    mov    $data_9013e,%edx
    add    $0x20,%eax
    call   func_76d70
    test   %eax,%eax
    jne    jump_12158
  jump_12179:
    cmp    0x6b(%ecx),%si
    jl     jump_12190
    mov    $0x58c,%ebx
    mov    $data_90147,%edx
    xor    %eax,%eax
    call   func_26198
  jump_12190:
    mov    $0xffffffff,%edx
    xor    %ebx,%ebx
    mov    0xb9(%ecx),%ah
    mov    %ebx,0x4(%esp)
    cmp    $0x2,%ah
    jne    jump_121aa
    xor    %edx,%edx
    jmp    jump_121b3
  jump_121aa:
    cmp    $0x3,%ah
    jne    jump_121b3
    mov    %edx,0x4(%esp)
  jump_121b3:
    xor    %ebx,%ebx
    jmp    jump_121fd
  jump_121b7:
    mov    %edx,%edi
    mov    %edx,(%esp)
    not    %edi
    mov    %edi,(%esp)
    movswl %si,%edi
    add    %edi,%eax
    mov    0x67(%ecx),%edi
    mov    (%edi,%eax,4),%edi
    mov    (%esp),%ebp
    mov    %ebp,0x35(%edi)
    mov    0x67(%ecx),%edi
    mov    (%edi,%eax,4),%eax
    mov    %ebp,0x39(%eax)
    jmp    jump_121fc
  jump_121dd:
    movswl %si,%edi
    add    %edi,%eax
    mov    0x67(%ecx),%edi
    mov    (%edi,%eax,4),%edi
    movl   $0x0,0x35(%edi)
    mov    0x67(%ecx),%edi
    mov    (%edi,%eax,4),%eax
    movl   $0x0,0x39(%eax)
  jump_121fc:
    inc    %ebx
  jump_121fd:
    movswl %bx,%eax
    cmp    $0x9,%eax
    jge    jump_1222a
    cmpl   $0x0,0x4(%esp)
    jne    jump_121dd
    cmp    $0x5,%eax
    jge    jump_121b7
    movswl %si,%edi
    add    %edi,%eax
    mov    0x67(%ecx),%edi
    mov    (%edi,%eax,4),%edi
    mov    %edx,0x35(%edi)
    mov    0x67(%ecx),%edi
    mov    (%edi,%eax,4),%eax
    mov    %edx,0x39(%eax)
    jmp    jump_121fc
  jump_1222a:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_12238:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    cmpb   $0x3,0xab(%eax)
    jne    jump_12259
    mov    $0x1,%edx
    mov    0xac(%ebx),%eax
    call   func_49b3c
    jmp    jump_12272
  jump_12259:
    cmpb   $0x2,0xab(%ebx)
    jne    jump_12272
    mov    $0x1,%edx
    mov    0xac(%ebx),%eax
    call   func_3676c
  jump_12272:
    movb   $0x0,0xab(%ebx)
    movl   $0x0,0xac(%ebx)
    cmp    $0xffffffff,%ecx
    jne    jump_1228f
    mov    %ebx,%eax
    call   func_11ba4
  jump_1228f:
    mov    %ecx,%edx
    mov    %ebx,%eax
    call   func_1229c
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1229c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    %edx,%ebp
    mov    data_d3660,%esi
  jump_122ae:
    incw   0xd4(%ecx)
    mov    0xd2(%ecx),%eax
    mov    0xd6(%ecx),%edx
    sar    $0x10,%eax
    cmp    %edx,%eax
    jl     jump_122d9
    mov    %ebp,%edx
    mov    %ecx,%eax
    call   func_12368
    test   %eax,%eax
    je     jump_1235e
  jump_122d9:
    xor    %ah,%ah
    mov    %ah,(%esp)
    mov    0xd2(%ecx),%eax
    sar    $0x10,%eax
    mov    0xd8(%ecx,%eax,2),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    mov    %esp,%ebx
    mov    %esi,%edx
    add    $data_a2f72,%eax
    call   func_406c4
    mov    0xd2(%ecx),%ebx
    sar    $0x10,%ebx
    mov    %eax,0xe8(%ecx,%ebx,4)
    cmpb   $0x0,(%esp)
    je     jump_122ae
    mov    %esp,%esi
    lea    0xab(%ecx),%edi
    movsl  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    cmpb   $0x3,(%esp)
    jne    jump_12338
    mov    0x1(%esp),%eax
    xor    %edx,%edx
    call   func_49b3c
    jmp    jump_12343
  jump_12338:
    mov    0x1(%esp),%eax
    xor    %edx,%edx
    call   func_3676c
  jump_12343:
    cmp    $0xffffffff,%ebp
    jne    jump_12355
    mov    0xbb(%ecx),%eax
    call   func_12674
    jmp    jump_1235e
  jump_12355:
    mov    %ebp,%edx
    mov    %ecx,%eax
    call   func_12238
  jump_1235e:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12368:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebx
    mov    %edx,%ebp
    mov    data_d3660,%esi
    mov    0x104(%eax),%edx
    xor    %edi,%edi
    cmp    $0xffffffff,%edx
    jne    jump_123a2
    xor    %eax,%eax
    jmp    jump_12389
  jump_12388:
    inc    %eax
  jump_12389:
    movswl %ax,%edx
    cmp    0xd6(%ebx),%edx
    jge    jump_123a2
    mov    0xe8(%ebx,%edx,4),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_12388
    mov    %ecx,%edi
  jump_123a2:
    lea    0xda(%ebx),%edx
    mov    %esi,%eax
    mov    %edi,0x104(%ebx)
    call   func_1d734
    movw   $0x0,0xd4(%ebx)
    xor    %ecx,%ecx
    mov    %eax,0xd6(%ebx)
    jmp    jump_123e5
  jump_123c8:
    mov    0xd8(%ebx,%eax,2),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    mov    %esi,%edx
    add    $data_a2f72,%eax
    inc    %ecx
    call   func_3b56c
  jump_123e5:
    movswl %cx,%eax
    cmp    0xd6(%ebx),%eax
    jl     jump_123c8
    cmp    $0xffffffff,%ebp
    jne    jump_12402
    mov    0xa7(%ebx),%esi
    mov    %ebx,%eax
    xor    %edx,%edx
    call   *0xc(%esi)
  jump_12402:
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1240c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    call   func_2fba4
    lea    0x4(%ebx),%eax
    xor    %ecx,%ecx
    mov    $0x3,%ebx
    mov    data_104bea,%cl
    mov    %ebx,%edx
    call   func_53e38
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12430:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_12440:
/*----------------------------------------------------------------*/
    add    $0xa,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    sub    $0x16,%eax
    ret


/*----------------------------------------------------------------*/
func_12480:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    sub    $0x78,%esp
    mov    %eax,%ebx
    lea    0xc(%esp),%eax
    xor    %ecx,%ecx
    mov    %eax,0x64(%esp)
    mov    %ecx,0x48(%esp)
    mov    %ecx,0x4c(%esp)
    mov    %ecx,0x50(%esp)
    flds   (%edx)
    fsubs  (%ebx)
    fstps  0x48(%esp)
    flds   0x4(%edx)
    fsubs  0x4(%ebx)
    fstps  0x4c(%esp)
    flds   0x8(%edx)
    fsubs  0x8(%ebx)
    mov    0x48(%esp),%eax
    fstps  0x50(%esp)
    flds   0x4c(%esp)
    fmul   %st(0),%st
    mov    %eax,0xc(%esp)
    mov    0x4c(%esp),%eax
    flds   0x48(%esp)
    fmul   %st(0),%st
    mov    %eax,0x10(%esp)
    faddp  %st,%st(1)
    mov    0x50(%esp),%eax
    flds   0x50(%esp)
    fmul   %st(0),%st
    mov    %eax,0x14(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fstps  0x74(%esp)
    flds   0x84(%esp)
    fcomps 0x74(%esp)
    fnstsw %ax
    sahf
    jae    jump_125f6
    flds   0x84(%esp)
    flds   0xc(%esp)
    fmul   %st(1),%st
    fstps  0x54(%esp)
    flds   0x10(%esp)
    fmul   %st(1),%st
    fstps  0x58(%esp)
    fmuls  0x14(%esp)
    fstps  0x5c(%esp)
    fld1
    fdivs  0x74(%esp)
    lea    0x3c(%esp),%eax
    mov    %eax,0x60(%esp)
    mov    0x54(%esp),%eax
    mov    %eax,0x3c(%esp)
    mov    0x58(%esp),%eax
    mov    %eax,0x40(%esp)
    mov    0x5c(%esp),%eax
    flds   0x54(%esp)
    fmul   %st(1),%st
    mov    %eax,0x44(%esp)
    lea    0x18(%esp),%eax
    fstps  0x24(%esp)
    flds   0x58(%esp)
    fmul   %st(1),%st
    mov    %eax,0x68(%esp)
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    fmuls  0x5c(%esp)
    mov    %eax,0x18(%esp)
    mov    0x28(%esp),%eax
    mov    %ecx,0x30(%esp)
    mov    %eax,0x1c(%esp)
    fstps  0x2c(%esp)
    mov    0x2c(%esp),%eax
    mov    %ecx,0x34(%esp)
    mov    %eax,0x20(%esp)
    mov    %esp,%eax
    mov    %ecx,0x38(%esp)
    mov    %eax,0x6c(%esp)
    flds   (%ebx)
    fadds  0x24(%esp)
    fstps  0x30(%esp)
    flds   0x4(%ebx)
    fadds  0x28(%esp)
    mov    0x30(%esp),%eax
    fstps  0x34(%esp)
    flds   0x8(%ebx)
    mov    %eax,(%esp)
    fadds  0x2c(%esp)
    mov    0x34(%esp),%eax
    fstps  0x38(%esp)
    mov    %eax,0x4(%esp)
    mov    0x38(%esp),%eax
    mov    %eax,0x8(%esp)
    mov    0x30(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    %ecx,%eax
    add    $0x78,%esp
    pop    %ecx
    pop    %ebx
    ret    $0x4
  jump_125f6:
    flds   (%edx)
    mov    $0xffffffff,%ecx
    fstps  (%ebx)
    mov    0x4(%edx),%eax
    mov    %eax,0x4(%ebx)
    mov    0x8(%edx),%eax
    mov    %eax,0x8(%ebx)
    mov    %ecx,%eax
    add    $0x78,%esp
    pop    %ecx
    pop    %ebx
    ret    $0x4


/*----------------------------------------------------------------*/
func_12618:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    0x5(%eax),%ax
    xor    %edx,%edx
    mov    %eax,(%esp)
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    mov    0x7(%edi),%esi
    call   func_1b084
    push   %eax
    xor    %ebp,%ebp
    inc    %esi
    call   func_61223
    add    $0x4,%esp
    cmp    %eax,%esi
    jl     jump_12653
    mov    $0xffffffff,%ebp
    xor    %esi,%esi
  jump_12653:
    mov    %edi,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    (%esp),%dx
    mov    %si,%bx
    call   func_156c0
    mov    %ebp,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12674:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    movb   $0xff,0x4f37(%eax)
    movl   $0x0,0xb3(%eax)
    movw   $0x0,0x5034(%eax)
    push   $0x0
    movb   $0x4,0xb7(%eax)
    mov    $0x52,%ebx
    mov    0x41(%eax),%edx
    push   $0x0
    xor    %ecx,%ecx
    mov    $data_10ae70,%eax
    call   func_56400
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_126b4:
    .long   func_12a0c
    .long   func_1291a
    .long   func_1294f
    .long   func_1295a
    .long   func_12965
    .long   func_12970
    .long   func_1297b
    .long   func_12986
    .long   func_12991
    .long   func_1299c
    .long   func_129aa
    .long   func_129b8
    .long   func_129c6
    .long   func_129d4
    .long   func_129e2
    .long   func_129f0
    .long   func_129fe


/*----------------------------------------------------------------*/
func_126f8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    0x4f37(%eax),%ah
    xor    %edi,%edi
    cmp    $0xff,%ah
    jne    jump_128f0
    mov    %ecx,%eax
    call   func_187ec
    xor    %edx,%edx
    mov    %ecx,%eax
    call   func_18c2c
    mov    0xab(%ecx),%edx
    mov    %edi,0x4f38(%ecx)
    xor    %al,%al
    mov    0xab(%edx),%bl
    add    $0xab,%edx
    cmp    $0x3,%bl
    jne    jump_1285f
    mov    0x1(%edx),%edx
    mov    0x62(%edx),%bl
    add    $0x62,%edx
    test   %bl,%bl
    jne    jump_12759
    mov    %al,0x4f37(%ecx)
    jmp    jump_12883
  jump_12759:
    cmp    $0x1,%bl
    jne    jump_12883
    mov    0x1(%edx),%eax
    mov    (%eax),%al
    cmp    $0x34,%al
    jne    jump_12777
    movb   $0x3,0x4f37(%ecx)
    jmp    jump_12883
  jump_12777:
    cmp    $0x37,%al
    jne    jump_12787
    movb   $0x4,0x4f37(%ecx)
    jmp    jump_12883
  jump_12787:
    cmp    $0x20,%al
    jne    jump_12797
    movb   $0x5,0x4f37(%ecx)
    jmp    jump_12883
  jump_12797:
    cmp    $0x38,%al
    je     jump_1279f
    cmp    $0x4a,%al
    jne    jump_127ab
  jump_1279f:
    movb   $0x6,0x4f37(%ecx)
    jmp    jump_12883
  jump_127ab:
    cmp    $0x3a,%al
    jne    jump_127bb
    movb   $0x7,0x4f37(%ecx)
    jmp    jump_12883
  jump_127bb:
    cmp    $0x2e,%al
    jne    jump_127cb
    movb   $0x8,0x4f37(%ecx)
    jmp    jump_12883
  jump_127cb:
    cmp    $0x3c,%al
    jne    jump_127db
    movb   $0x9,0x4f37(%ecx)
    jmp    jump_12883
  jump_127db:
    cmp    $0x3b,%al
    je     jump_127e3
    cmp    $0x44,%al
    jne    jump_127ef
  jump_127e3:
    movb   $0xa,0x4f37(%ecx)
    jmp    jump_12883
  jump_127ef:
    cmp    $0x2d,%al
    jne    jump_127ff
    movb   $0xb,0x4f37(%ecx)
    jmp    jump_12883
  jump_127ff:
    cmp    $0x28,%al
    je     jump_12807
    cmp    $0x27,%al
    jne    jump_12813
  jump_12807:
    movb   $0xc,0x4f37(%ecx)
    jmp    jump_12883
  jump_12813:
    cmp    $0x24,%al
    jne    jump_12823
    movb   $0xd,0x4f37(%ecx)
    jmp    jump_12883
  jump_12823:
    cmp    $0x48,%al
    jne    jump_12830
    movb   $0xe,0x4f37(%ecx)
    jmp    jump_12883
  jump_12830:
    cmp    $0x26,%al
    jne    jump_1283d
    movb   $0xf,0x4f37(%ecx)
    jmp    jump_12883
  jump_1283d:
    movsbl %al,%edx
    imul   $0x6a,%edx,%edx
    mov    data_107053(%edx),%dx
    xor    %dh,%dh
    and    $0x40,%dl
    movswl %dx,%edx
    test   %edx,%edx
    jne    jump_1287d
    movb   $0x2,0x4f37(%ecx)
    jmp    jump_12883
  jump_1285f:
    cmp    $0x2,%bl
    jne    jump_12883
    mov    0x1(%edx),%edx
    add    $0x6b,%edx
    mov    (%edx),%edx
    mov    $0x34,%al
    cmpb   $0x11,0x1(%edx)
    jne    jump_1287d
    movb   $0x3,0x4f37(%ecx)
    jmp    jump_12883
  jump_1287d:
    mov    %bl,0x4f37(%ecx)
  jump_12883:
    movsbl %al,%eax
    shl    $0x2,%eax
    lea    (%ecx,%eax,1),%ebx
    mov    0x1a90(%ebx),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    mov    0x19c6(%ecx,%eax,2),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    mov    0x1a92(%ebx),%eax
    sar    $0x10,%eax
    mov    0x19c6(%ecx,%eax,2),%dx
    mov    $data_12fc20,%eax
    and    $0xffff,%edx
    call   func_1b084
    mov    0x1bcc(%ebx),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_50140
    mov    0x1bce(%ebx),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_50140
  jump_128f0:
    mov    %ecx,%esi
    xor    %ebx,%ebx
    jmp    jump_12907
  jump_128f6:
    mov    %ecx,%eax
    mov    0x4f44(%esi),%edx
    call   func_12b4c
    add    $0x4,%esi
    inc    %ebx
  jump_12907:
    mov    0x5032(%ecx),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jge    jump_12a2c
    jmp    jump_128f6


/*----------------------------------------------------------------*/
func_1291a:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_12c98
    mov    %eax,%edi
  jump_12923:
    mov    0x5036(%ecx),%edx
    cmp    $0xffffffff,%edx
    jne    jump_1293a
    mov    %edx,%edi
    movl   $0x0,0x5036(%ecx)
  jump_1293a:
    mov    $0x1,%edx
    mov    %ecx,%eax
    call   func_18c2c
    mov    %ecx,%esi
    xor    %ebx,%ebx
    jmp    jump_12a54


/*----------------------------------------------------------------*/
func_1294f:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_12e88
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_1295a:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_12f7c
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_12965:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_13370
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_12970:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_136c4
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_1297b:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_1380c
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_12986:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_13c10
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_12991:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_14224
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_1299c:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_142d8
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129aa:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_14490
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129b8:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_145c0
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129c6:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_147cc
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129d4:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_14b18
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129e2:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_15078
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129f0:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_15164
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129fe:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_152e4
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_12a0c:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%edi
    jmp    jump_12923
  jump_12a16:
    mov    $0xf8,%ebx
    mov    $data_90158,%edx
    xor    %eax,%eax
    call   func_261a8
    jmp    jump_12923
  jump_12a2c:
    mov    0x4f37(%ecx),%al
    inc    %al
    cmp    $0x10,%al
    ja     jump_12a16
    movsbl %al,%eax
    jmp    *%cs:vtable_126b4(,%eax,4)
  jump_12a43:
    mov    %ecx,%eax
    mov    0x4f44(%esi),%edx
    call   func_12b4c
    add    $0x4,%esi
    inc    %ebx
  jump_12a54:
    mov    0x5032(%ecx),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jl     jump_12a43
    mov    0xa7(%ecx),%ebx
    mov    $0x1,%edx
    mov    %ecx,%eax
    call   *0xc(%ebx)
    incl   0x4f38(%ecx)
    cmp    $0xffffffff,%edi
    jne    jump_12adf
    mov    $0x52,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%ecx),%edx
    movb   $0x0,0xb7(%ecx)
    call   func_564c0
    mov    %edi,%edx
    mov    0xab(%ecx),%eax
    call   func_12238
    mov    %ecx,%eax
    call   func_187ec
    xor    %edx,%edx
    mov    %ecx,%eax
    call   func_18c2c
    mov    %ecx,%eax
    movb   $0xff,0x4f37(%ecx)
    xor    %edx,%edx
    jmp    jump_12ad2
  jump_12abf:
    mov    0x4f44(%eax),%esi
    mov    0x33(%esi),%bl
    add    $0x4,%eax
    and    $0x1,%bl
    inc    %edx
    mov    %bl,0x33(%esi)
  jump_12ad2:
    mov    0x5032(%ecx),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jl     jump_12abf
  jump_12adf:
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_12ae4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    mov    %edx,%esi
    test   %edx,%edx
    jne    jump_12b02
    mov    $0x122,%ebx
    mov    $data_90165,%edx
    xor    %eax,%eax
    call   func_26198
  jump_12b02:
    mov    0x1d32(%ecx),%ebx
    xor    %edi,%edi
    xor    %edx,%edx
    test   %ebx,%ebx
    jg     jump_12b22
    jmp    jump_12b2f
  jump_12b12:
    inc    %edx
    mov    0x1d32(%ecx),%ebp
    add    $0x35,%eax
    cmp    %ebp,%edx
    jl     jump_12b28
    jmp    jump_12b2f
  jump_12b22:
    mov    0x1d2a(%ecx),%eax
  jump_12b28:
    cmp    0x1(%eax),%esi
    jne    jump_12b12
    mov    %eax,%edi
  jump_12b2f:
    test   %edi,%edi
    jne    jump_12b44
    mov    $0x12f,%ebx
    mov    $data_90172,%edx
    xor    %eax,%eax
    call   func_26198
  jump_12b44:
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12b4c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    sub    $0x18,%esp
    cmpb   $0x8,(%edx)
    jne    jump_12bf9
    mov    0x1(%edx),%ebx
    mov    0x27(%edx),%cx
    cmp    0x27(%ebx),%cx
    jge    jump_12b84
    mov    0x25(%edx),%ecx
    mov    0x8(%eax),%esi
    sar    $0x10,%ecx
    add    %esi,%ecx
    mov    0x25(%ebx),%esi
    mov    %ecx,data_9a240
    sar    $0x10,%esi
    mov    0x8(%eax),%ecx
    jmp    jump_12b9b
  jump_12b84:
    mov    0x25(%ebx),%ecx
    mov    0x8(%eax),%esi
    sar    $0x10,%ecx
    add    %esi,%ecx
    mov    %ecx,data_9a240
    mov    0x25(%edx),%ecx
    sar    $0x10,%ecx
  jump_12b9b:
    add    %esi,%ecx
    mov    %ecx,data_9a248
    mov    0x29(%edx),%cx
    cmp    0x29(%ebx),%cx
    jge    jump_12bd3
    mov    0x27(%edx),%ecx
    sar    $0x10,%ecx
    mov    0xc(%eax),%edx
    add    %ecx,%edx
    mov    %edx,data_9a244
    mov    0x27(%ebx),%edx
    mov    0xc(%eax),%eax
    sar    $0x10,%edx
    add    %edx,%eax
    mov    %eax,data_9a24c
    jmp    jump_12c82
  jump_12bd3:
    mov    0x27(%ebx),%ecx
    mov    0x27(%edx),%edx
    sar    $0x10,%ecx
    sar    $0x10,%edx
    mov    0xc(%eax),%ebx
    mov    0xc(%eax),%eax
    add    %ecx,%ebx
    add    %edx,%eax
    mov    %ebx,data_9a244
    mov    %eax,data_9a24c
    jmp    jump_12c82
  jump_12bf9:
    mov    0x25(%edx),%ebx
    mov    0x8(%eax),%ecx
    sar    $0x10,%ebx
    add    %ebx,%ecx
    mov    0x27(%edx),%ebx
    mov    0xc(%eax),%eax
    sar    $0x10,%ebx
    add    %ebx,%eax
    mov    %eax,0xc(%esp)
    xor    %ebx,%ebx
    mov    0xf(%edx),%eax
    mov    %ebx,0x4(%esp)
    mov    %eax,(%esp)
    fildll (%esp)
    fmull  data_9017f
    filds  0x13(%edx)
    fmul   %st(1),%st
    mov    %ecx,0x8(%esp)
    fildl  0x8(%esp)
    fxch   %st(1)
    fadd   %st(1),%st
    call   func_76e98
    fistpl data_9a240
    filds  0x15(%edx)
    fmul   %st(2),%st
    fildl  0xc(%esp)
    fxch   %st(1)
    fadd   %st(1),%st
    call   func_76e98
    fistpl data_9a244
    filds  0x17(%edx)
    fmul   %st(3),%st
    faddp  %st,%st(2)
    fxch   %st(1)
    call   func_76e98
    fistpl data_9a248
    filds  0x19(%edx)
    fmulp  %st,%st(2)
    faddp  %st,%st(1)
    call   func_76e98
    fistpl data_9a24c
  jump_12c82:
    mov    $data_9a23c,%edx
    mov    $data_10ae70,%eax
    call   func_552cc
    add    $0x18,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12c98:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    0xab(%eax),%edi
    xor    %ebp,%ebp
    mov    0xab(%edi),%ah
    add    $0xab,%edi
    cmp    $0x3,%ah
    je     jump_12ccd
    mov    $0x16b,%ebx
    mov    $data_90187,%edx
    xor    %eax,%eax
    call   func_26198
  jump_12ccd:
    mov    0x1(%edi),%edi
    lea    0x62(%edi),%ecx
    mov    0x5(%ecx),%dl
    cmp    $0x3,%dl
    je     jump_12cf6
    cmp    $0x1,%dl
    je     jump_12cf6
    cmp    $0x2,%dl
    je     jump_12cf6
    mov    $0x171,%ebx
    mov    $data_90194,%edx
    xor    %eax,%eax
    call   func_26198
  jump_12cf6:
    cmpl   $0x0,0x4f38(%esi)
    jne    jump_12d6c
    mov    %edi,%edx
    mov    %esi,%eax
    movw   $0x1,0x5034(%esi)
    call   func_12ae4
    mov    %eax,0x4f44(%esi)
    movb   $0x12,0x33(%eax)
    mov    0x4f44(%esi),%eax
    movb   $0x0,0x34(%eax)
    lea    0x9e(%edi),%eax
    lea    0x4f80(%esi),%edx
    mov    (%eax),%ebx
    mov    %ebx,(%edx)
    mov    0x4(%eax),%ebx
    mov    %ebx,0x4(%edx)
    mov    0x8(%eax),%ebx
    mov    %ebx,0x8(%edx)
    movl   $0x0,0x4f3c(%esi)
    cmpl   $0x0,0x94(%edi)
    je     jump_12d6c
    cmpl   $0x0,0x88(%edi)
    je     jump_12d6c
    mov    $0x7,%edx
    mov    $data_10914c,%eax
    call   func_4fb90
  jump_12d6c:
    cmpl   $0x0,0x4f3c(%esi)
    jne    jump_12df3
    lea    0x16(%ecx),%edx
    lea    0x4f80(%esi),%eax
    push   $0x41a00000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_12e7c
    testb  $0x8,0x22(%ecx)
    je     jump_12de2
    cmpb   $0x2,0x5(%ecx)
    jne    jump_12de2
    mov    %edi,%eax
    mov    0x6(%ecx),%edx
    call   func_4960c
    cmp    $0xffffffff,%eax
    jne    jump_12de2
    mov    0x4f44(%esi),%eax
    orb    $0x8,0x33(%eax)
    movw   $0x2,0x5034(%esi)
    mov    %esi,%eax
    mov    0x6(%ecx),%edx
    call   func_12ae4
    movl   $0x1,0x4f3c(%esi)
    mov    %eax,0x4f48(%esi)
    jmp    jump_12e7c
  jump_12de2:
    mov    $0xffffffff,%ebp
    mov    %ebp,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_12df3:
    mov    0x6(%ecx),%eax
    mov    $0x7,%edx
    mov    0x23(%eax),%bh
    mov    %edx,(%esp)
    test   $0x1,%bh
    je     jump_12e0d
    movl   $0x8,(%esp)
  jump_12e0d:
    xor    %eax,%eax
    mov    (%esp),%ax
    xor    %edx,%edx
    mov    0x19c6(%esi,%eax,2),%dx
    mov    $data_12fc20,%eax
    mov    0x4f3c(%esi),%edi
    call   func_1b084
    push   %eax
    sar    $0x2,%edi
    call   func_61223
    lea    -0x1(%eax),%ecx
    add    $0x4,%esp
    cmp    %ecx,%edi
    jle    jump_12e51
    lea    0x0(,%ecx,2),%eax
    cmp    %eax,%edi
    jg     jump_12e51
    sub    %edi,%eax
    mov    %eax,%edi
    jmp    jump_12e5e
  jump_12e51:
    add    %ecx,%ecx
    cmp    %ecx,%edi
    jle    jump_12e5e
    mov    $0xffffffff,%ebp
    xor    %edi,%edi
  jump_12e5e:
    mov    %esi,%eax
    mov    0x4f48(%esi),%edx
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    (%esp),%bx
    mov    %di,%cx
    call   func_1826c
    incl   0x4f3c(%esi)
  jump_12e7c:
    mov    %ebp,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12e88:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    0xab(%eax),%ebp
    xor    %edi,%edi
    mov    0xab(%ebp),%ah
    add    $0xab,%ebp
    cmp    $0x3,%ah
    je     jump_12eba
    mov    $0x1ba,%ebx
    mov    $data_901a1,%edx
    xor    %eax,%eax
    call   func_26198
  jump_12eba:
    mov    0x1(%ebp),%eax
    mov    0x63(%eax),%ebx
    mov    0x4f38(%esi),%edx
    mov    (%ebx),%bl
    test   %edx,%edx
    jne    jump_12f57
    mov    %edx,0x4f3c(%esi)
    mov    0x1d2a(%esi),%edx
    movw   $0x1,0x5034(%esi)
    add    $0x35,%edx
    mov    %edx,0x4f44(%esi)
    movb   $0x7,(%edx)
    mov    0x4f44(%esi),%edx
    movb   $0x12,0x33(%edx)
    mov    0x4f44(%esi),%edx
    add    $0x9e,%eax
    movb   $0x0,0x34(%edx)
    lea    0x4f80(%esi),%edx
    mov    (%eax),%ecx
    mov    %ecx,(%edx)
    mov    0x4(%eax),%ecx
    mov    %ecx,0x4(%edx)
    flds   0x8(%eax)
    movsbl %bl,%eax
    shl    $0x2,%eax
    xor    %ecx,%ecx
    lea    (%esi,%eax,1),%ebp
    fstps  0x8(%edx)
    xor    %ebx,%ebx
    mov    0x1a92(%ebp),%ax
    mov    0x4f44(%esi),%edx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
    mov    0x1bcc(%ebp),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
  jump_12f57:
    testb  $0x3,0x4f38(%esi)
    jne    jump_12f72
    mov    0x4f44(%esi),%eax
    call   func_12618
    cmp    $0xffffffff,%eax
    jne    jump_12f72
    mov    %eax,%edi
  jump_12f72:
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12f7c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x60,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    mov    %edx,0x48(%esp)
    mov    0xab(%eax),%edx
    xor    %ebx,%ebx
    add    $0xab,%edx
    mov    %ebx,0xc(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ebx,0x14(%esp)
    mov    %ebx,(%esp)
    mov    %ebx,0x4(%esp)
    mov    %ebx,0x8(%esp)
    xor    %eax,%eax
    mov    %ebx,0x40(%esp)
    xor    %bh,%ah
    mov    (%edx),%bl
    mov    %ah,0x5c(%esp)
    cmp    $0x3,%bl
    jne    jump_1302c
    mov    0x1(%edx),%ebp
    lea    0x62(%ebp),%edx
    lea    0x9e(%ebp),%edi
    mov    (%edi),%eax
    mov    %eax,0xc(%esp)
    mov    0x4(%edi),%eax
    mov    %eax,0x10(%esp)
    mov    0x8(%edi),%eax
    lea    0x78(%ebp),%edi
    mov    %eax,0x14(%esp)
    mov    (%edi),%eax
    mov    %eax,(%esp)
    mov    0x4(%edi),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%edi),%eax
    mov    %eax,0x8(%esp)
    mov    0x1(%edx),%eax
    movsbl (%eax),%eax
    mov    %eax,0x54(%esp)
    mov    0x22(%edx),%eax
    mov    %eax,0x50(%esp)
    mov    0x5(%edx),%al
    mov    0x54(%esp),%ecx
    mov    %al,0x5c(%esp)
    imul   $0x6a,%ecx,%eax
    mov    data_10705a(%eax),%eax
    mov    0x6(%edx),%ebp
    mov    %eax,0x40(%esp)
    jmp    jump_130ec
  jump_1302c:
    cmp    $0x2,%bl
    jne    jump_130db
    mov    0x1(%edx),%ebp
    mov    0x0(%ebp),%eax
    mov    %eax,0xc(%esp)
    mov    0x4(%ebp),%eax
    mov    %eax,0x10(%esp)
    mov    0x8(%ebp),%eax
    lea    0x6b(%ebp),%edi
    mov    %eax,0x14(%esp)
    mov    0x4(%edi),%ebp
    mov    0x9e(%ebp),%eax
    mov    %eax,(%esp)
    mov    0xa2(%ebp),%eax
    mov    %eax,0x4(%esp)
    mov    0xa6(%ebp),%eax
    mov    %eax,0x8(%esp)
    mov    0x8(%edi),%eax
    mov    %eax,0x50(%esp)
    lea    0x34(%esp),%eax
    add    $0x9e,%ebp
    push   %eax
    mov    (%edi),%eax
    mov    0x4(%edi),%ebp
    mov    0x1(%eax),%al
    lea    0x34(%esp),%ecx
    lea    0x44(%esp),%ebx
    mov    0x1(%edx),%edx
    and    $0xff,%eax
    mov    %edx,0x3c(%esp)
    mov    %eax,%edx
    mov    0x3c(%esp),%eax
    call   func_366c8
    mov    (%edi),%eax
    mov    0x1(%eax),%cl
    cmp    $0x1c,%cl
    jne    jump_130bd
    movl   $0x4c,0x54(%esp)
    jmp    jump_130ec
  jump_130bd:
    cmp    $0x1d,%cl
    jne    jump_130cc
    movl   $0x4d,0x54(%esp)
    jmp    jump_130ec
  jump_130cc:
    cmp    $0x1e,%cl
    jne    jump_130ec
    movl   $0x4e,0x54(%esp)
    jmp    jump_130ec
  jump_130db:
    mov    $0x20e,%ebx
    mov    $data_901ae,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_130ec:
    mov    0x4f38(%esi),%edi
    test   %edi,%edi
    jne    jump_1318c
    movw   $0x2,0x5034(%esi)
    mov    0x1d2a(%esi),%eax
    mov    %edi,0x4f3c(%esi)
    add    $0x35,%eax
    mov    %eax,0x4f44(%esi)
    movb   $0x7,(%eax)
    mov    0x4f44(%esi),%eax
    movb   $0x12,0x33(%eax)
    mov    0x4f44(%esi),%eax
    movb   $0x0,0x34(%eax)
    lea    0x4f80(%esi),%edx
    mov    0xc(%esp),%eax
    mov    %eax,(%edx)
    mov    0x10(%esp),%eax
    mov    %eax,0x4(%edx)
    xor    %ebx,%ebx
    mov    0x14(%esp),%eax
    mov    0x54(%esp),%edi
    mov    %eax,0x8(%edx)
    xor    %ecx,%ecx
    mov    0x1a92(%esi,%edi,4),%ax
    mov    0x4f44(%esi),%edx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_12ae4
    mov    %eax,0x4f48(%esi)
    mov    0x1bcc(%esi,%edi,4),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
  jump_1318c:
    cmpl   $0x0,0x4f3c(%esi)
    jne    jump_1324e
    flds   (%esp)
    fsubs  0xc(%esp)
    lea    0x18(%esp),%eax
    fstps  0x24(%esp)
    flds   0x4(%esp)
    fsubs  0x10(%esp)
    mov    %eax,0x44(%esp)
    fstps  0x28(%esp)
    flds   0x8(%esp)
    fsubs  0x14(%esp)
    mov    0x24(%esp),%eax
    fstps  0x2c(%esp)
    flds   0x28(%esp)
    fmul   %st(0),%st
    mov    %eax,0x18(%esp)
    mov    0x28(%esp),%eax
    flds   0x24(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c(%esp)
    faddp  %st,%st(1)
    mov    0x2c(%esp),%eax
    flds   0x2c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x20(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fmuls  data_901c3
    fadds  data_901c7
    mov    %esp,%edx
    call   func_76e98
    sub    $0x4,%esp
    lea    0x4f80(%esi),%eax
    fstps  (%esp)
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_13235
    movl   $0x1,0x4f3c(%esi)
    jmp    jump_13361
  jump_13235:
    mov    0x4f44(%esi),%eax
    call   func_12618
    mov    0x48(%esp),%eax
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_1324e:
    mov    $0x3f800000,%edx
    mov    $0x1,%edi
    mov    %edx,0x4c(%esp)
    mov    0x50(%esp),%dh
    mov    $0x4,%eax
    test   $0x4,%dh
    jne    jump_13271
    cmpl   $0x3d,0x54(%esp)
    jne    jump_132c9
  jump_13271:
    mov    0x4f48(%esi),%eax
    cmpb   $0x2,(%eax)
    jne    jump_1329a
    movsbw 0xaa(%ebp),%ax
    mov    %eax,0x58(%esp)
    filds  0x58(%esp)
    fmull  data_901bb
    fld1
    faddp  %st,%st(1)
    fstps  0x4c(%esp)
  jump_1329a:
    mov    0x4f48(%esi),%eax
    mov    0x33(%eax),%dh
    mov    $0x5,%edi
    or     $0x8,%dh
    mov    0x54(%esp),%bl
    mov    %dh,0x33(%eax)
    test   $0x1,%bl
    sete   %al
    add    $0x5,%al
    mov    0x54(%esp),%ecx
    cbtw
    cmp    $0x3d,%ecx
    jne    jump_132f5
    mov    %ecx,%eax
    jmp    jump_132e5
  jump_132c9:
    test   $0x2,%dh
    jne    jump_132e1
    test   $0x10,%dh
    jne    jump_132e1
    mov    0x5c(%esp),%cl
    cmp    $0x1,%cl
    je     jump_132e1
    cmp    $0x2,%cl
    jne    jump_132f5
  jump_132e1:
    mov    0x54(%esp),%eax
  jump_132e5:
    mov    0x1bd0(%esi,%eax,4),%di
    mov    0x1a94(%esi,%eax,4),%ax
  jump_132f5:
    cmpl   $0x1,0x4f3c(%esi)
    jne    jump_13329
    mov    0x4f44(%esi),%edx
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
    mov    $data_10914c,%eax
    movswl %di,%edx
    call   func_4fb90
    movl   $0x2,0x4f3c(%esi)
  jump_13329:
    testb  $0x3,0x4f38(%esi)
    jne    jump_13354
    mov    0x4f44(%esi),%eax
    call   func_12618
    cmp    $0xffffffff,%eax
    jne    jump_13354
    mov    0x4f44(%esi),%eax
    orb    $0x8,0x33(%eax)
    movl   $0xffffffff,0x48(%esp)
  jump_13354:
    mov    0x4f44(%esi),%eax
    mov    0x4c(%esp),%edx
    mov    %edx,0xb(%eax)
  jump_13361:
    mov    0x48(%esp),%eax
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13370:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x54,%esp
    mov    %eax,%ecx
    mov    0xab(%eax),%eax
    xor    %ebp,%ebp
    add    $0xab,%eax
    mov    %ebp,0x24(%esp)
    mov    %ebp,0x28(%esp)
    mov    %ebp,0x2c(%esp)
    xor    %esi,%esi
    mov    (%eax),%dl
    mov    %ebp,0x4c(%esp)
    cmp    $0x3,%dl
    jne    jump_13408
    mov    0x1(%eax),%edi
    lea    0x62(%edi),%esi
    cmpb   $0x0,0x5(%esi)
    je     jump_133be
    mov    $0x27d,%ebx
    mov    $data_901cb,%edx
    xor    %eax,%eax
    call   func_26198
  jump_133be:
    mov    %edi,%edx
    mov    %ecx,%eax
    mov    0x6(%esi),%esi
    call   func_12ae4
    mov    %eax,0x4c(%esp)
    mov    0x9e(%edi),%eax
    mov    %eax,0x24(%esp)
    mov    0xa2(%edi),%eax
    mov    %eax,0x28(%esp)
    mov    0xa6(%edi),%eax
    mov    %eax,0x2c(%esp)
    mov    data_1085f2,%eax
    shl    $0x5,%eax
    mov    %eax,0x3c(%esp)
    add    $0x9e,%edi
    fildl  0x3c(%esp)
    fstps  0x48(%esp)
    jmp    jump_13453
  jump_13408:
    cmp    $0x2,%dl
    jne    jump_13442
    mov    0x1(%eax),%ebx
    lea    0x6b(%ebx),%esi
    mov    %ecx,%eax
    mov    %ebx,%edx
    mov    0x4(%esi),%esi
    call   func_12ae4
    mov    %eax,0x4c(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x24(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x28(%esp)
    mov    0x8(%ebx),%eax
    mov    $0x45480000,%ebx
    mov    %eax,0x2c(%esp)
    mov    %ebx,0x48(%esp)
    jmp    jump_13453
  jump_13442:
    mov    $0x28e,%ebx
    mov    $data_901d8,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_13453:
    mov    %esi,%edx
    mov    %ecx,%eax
    call   func_12ae4
    mov    0x4f38(%ecx),%edi
    test   %edi,%edi
    jne    jump_13518
    movw   $0x2,0x5034(%ecx)
    mov    0x1d2a(%ecx),%eax
    mov    %edi,0x4f3c(%ecx)
    add    $0x35,%eax
    mov    %eax,0x4f44(%ecx)
    movb   $0x8,(%eax)
    mov    0x4f44(%ecx),%eax
    mov    0x4c(%esp),%edx
    mov    %edx,0x1(%eax)
    mov    0x4f44(%ecx),%eax
    orb    $0x12,0x33(%eax)
    mov    0x4f44(%ecx),%eax
    movb   $0x0,0x34(%eax)
    lea    0x4f80(%ecx),%ebx
    mov    0x24(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x28(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x2c(%esp),%eax
    mov    %esi,%edx
    mov    %eax,0x8(%ebx)
    mov    %ecx,%eax
    call   func_12ae4
    mov    %eax,0x4f48(%ecx)
    movb   $0x12,0x33(%eax)
    mov    0x4f48(%ecx),%eax
    mov    $0x1,%edx
    movb   $0x1,0x34(%eax)
    lea    0x4f8c(%ecx),%eax
    mov    0x9e(%esi),%ebx
    mov    %ebx,(%eax)
    mov    0xa2(%esi),%ebx
    mov    %ebx,0x4(%eax)
    mov    0xa6(%esi),%ebx
    mov    %ebx,0x8(%eax)
    mov    $data_10914c,%eax
    add    $0x9e,%esi
    call   func_4fb90
  jump_13518:
    mov    0x4f3c(%ecx),%eax
    lea    0x4f8c(%ecx),%esi
    test   %eax,%eax
    jne    jump_1365e
    lea    0x4f80(%ecx),%eax
    mov    %esi,%edx
    push   $0x42200000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_136b8
    mov    0x4f48(%ecx),%eax
    mov    0x33(%eax),%dl
    or     $0x2,%dl
    xor    %ebx,%ebx
    mov    %dl,0x33(%eax)
    lea    0x18(%esp),%eax
    mov    %ebx,0xc(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ebx,0x14(%esp)
    mov    %eax,0x40(%esp)
    flds   (%esi)
    fsubs  0x24(%esp)
    fstps  0xc(%esp)
    flds   0x4(%esi)
    fsubs  0x28(%esp)
    fstps  0x10(%esp)
    flds   0x8(%esi)
    fsubs  0x2c(%esp)
    mov    0xc(%esp),%eax
    fstps  0x14(%esp)
    flds   0x10(%esp)
    fmul   %st(0),%st
    mov    %eax,0x18(%esp)
    mov    0x10(%esp),%eax
    flds   0xc(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c(%esp)
    faddp  %st,%st(1)
    mov    0x14(%esp),%eax
    flds   0x14(%esp)
    fmul   %st(0),%st
    mov    %eax,0x20(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fsubs  0x48(%esp)
    fsts   0x50(%esp)
    fcomps data_901e5
    fnstsw %ax
    sahf
    jae    jump_135e0
    movl   $0x44a00000,0x50(%esp)
  jump_135e0:
    lea    0x18(%esp),%eax
    push   0x50(%esp)
    call   func_53054
    flds   0x24(%esp)
    mov    %esp,%eax
    fadds  0x18(%esp)
    mov    %eax,0x44(%esp)
    fstps  0x30(%esp)
    flds   0x28(%esp)
    mov    0x30(%esp),%eax
    fadds  0x1c(%esp)
    mov    %eax,(%esp)
    fstps  0x34(%esp)
    flds   0x2c(%esp)
    mov    0x34(%esp),%eax
    fadds  0x20(%esp)
    mov    %eax,0x4(%esp)
    fstps  0x38(%esp)
    mov    0x38(%esp),%eax
    lea    0x4f98(%ecx),%ebx
    mov    %eax,0x8(%esp)
    mov    0x30(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%ebx)
    movl   $0x1,0x4f3c(%ecx)
    mov    %ebp,%eax
    add    $0x54,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_1365e:
    cmp    $0x1,%eax
    jne    jump_136b3
    lea    0x4f98(%ecx),%edx
    mov    %esi,%eax
    push   $0x40800000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_13684
    movl   $0x2,0x4f3c(%ecx)
  jump_13684:
    lea    0x4f80(%ecx),%eax
    mov    0x4f8c(%ecx),%edx
    mov    %edx,(%eax)
    flds   0x4f90(%ecx)
    add    $0x4f8c,%ecx
    fstps  0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    mov    %ebp,%eax
    add    $0x54,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_136b3:
    mov    $0xffffffff,%ebp
  jump_136b8:
    mov    %ebp,%eax
    add    $0x54,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_136c4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ecx
    mov    0xab(%eax),%edi
    xor    %esi,%esi
    mov    0xab(%edi),%ah
    add    $0xab,%edi
    cmp    $0x3,%ah
    je     jump_136f9
    mov    $0x2d8,%ebx
    mov    $data_901e9,%edx
    xor    %eax,%eax
    call   func_26198
  jump_136f9:
    mov    0x1(%edi),%ebx
    lea    0x62(%ebx),%edi
    mov    0x4f38(%ecx),%edx
    mov    0x6(%edi),%edi
    test   %edx,%edx
    jne    jump_13795
    mov    %ebx,%edx
    mov    %ecx,%eax
    movw   $0x2,0x5034(%ecx)
    call   func_12ae4
    mov    %eax,0x4f44(%ecx)
    movb   $0x14,0x33(%eax)
    mov    0x4f44(%ecx),%eax
    mov    %edi,%edx
    movb   $0x0,0x34(%eax)
    lea    0x4f80(%ecx),%eax
    mov    0x9e(%ebx),%ebp
    mov    %ebp,(%eax)
    mov    0xa2(%ebx),%ebp
    mov    %ebp,0x4(%eax)
    mov    0xa6(%ebx),%ebp
    mov    %ebp,0x8(%eax)
    mov    %ecx,%eax
    call   func_12ae4
    mov    %eax,0x4f48(%ecx)
    movb   $0x14,0x33(%eax)
    mov    0x4f48(%ecx),%eax
    add    $0x9e,%ebx
    lea    0x9e(%edi),%edx
    movb   $0x1,0x34(%eax)
    lea    0x4f8c(%ecx),%eax
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
  jump_13795:
    mov    0x4f38(%ecx),%ebx
    cmp    $0x14,%ebx
    jne    jump_137f5
    lea    0x4f8c(%ecx),%edx
    mov    (%edx),%eax
    mov    %eax,(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x8(%esp)
    mov    0x4f80(%ecx),%eax
    mov    %eax,(%edx)
    mov    0x4f84(%ecx),%eax
    mov    %eax,0x4(%edx)
    mov    0x4f88(%ecx),%eax
    mov    %eax,0x8(%edx)
    mov    (%esp),%eax
    mov    %eax,0x4f80(%ecx)
    mov    0x4(%esp),%eax
    mov    %eax,0x4f84(%ecx)
    add    $0x4f80,%ecx
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%ecx)
    jmp    jump_137ff
  jump_137f5:
    cmp    $0x29,%ebx
    jne    jump_137ff
    mov    $0xffffffff,%esi
  jump_137ff:
    mov    %esi,%eax
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1380c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    %eax,%esi
    mov    0xab(%eax),%ecx
    xor    %edi,%edi
    mov    0xab(%ecx),%ah
    add    $0xab,%ecx
    cmp    $0x3,%ah
    je     jump_13841
    mov    $0x30d,%ebx
    mov    $data_901f6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_13841:
    mov    0x1(%ecx),%eax
    mov    %eax,0x10(%esp)
    lea    0x62(%eax),%ecx
    cmpb   $0x2,0x5(%ecx)
    je     jump_13862
    mov    $0x312,%ebx
    mov    $data_90203,%edx
    xor    %eax,%eax
    call   func_26198
  jump_13862:
    lea    0x16(%ecx),%edx
    mov    (%edx),%eax
    mov    0x6(%ecx),%ebp
    mov    %eax,(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x8(%esp)
    mov    0x1(%ecx),%eax
    mov    (%eax),%al
    mov    0x4f38(%esi),%edx
    mov    %al,0x14(%esp)
    test   %edx,%edx
    jne    jump_13939
    movw   $0x2,0x5034(%esi)
    mov    0x1d2a(%esi),%eax
    mov    %edx,0x4f3c(%esi)
    add    $0x35,%eax
    mov    %eax,0x4f44(%esi)
    movb   $0x7,(%eax)
    mov    0x4f44(%esi),%eax
    movb   $0x12,0x33(%eax)
    mov    0x4f44(%esi),%eax
    movb   $0x0,0x34(%eax)
    mov    0x10(%esp),%eax
    lea    0x4f80(%esi),%ecx
    flds   0x9e(%eax)
    add    $0x9e,%eax
    fstps  (%ecx)
    mov    0x4(%eax),%edx
    mov    %edx,0x4(%ecx)
    flds   0x8(%eax)
    mov    0x11(%esp),%eax
    sar    $0x18,%eax
    xor    %ebx,%ebx
    shl    $0x2,%eax
    fstps  0x8(%ecx)
    lea    (%esi,%eax,1),%edx
    xor    %ecx,%ecx
    mov    %edx,0xc(%esp)
    mov    %esi,%eax
    mov    0x1a92(%edx),%bx
    mov    0x4f44(%esi),%edx
    call   func_1826c
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_12ae4
    mov    0xc(%esp),%edx
    mov    %eax,0x4f48(%esi)
    mov    0x1bcc(%edx),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
  jump_13939:
    mov    0x4f3c(%esi),%ebx
    test   %ebx,%ebx
    jne    jump_13994
    mov    %esp,%edx
    lea    0x4f80(%esi),%eax
    push   $0x42200000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_139a7
    mov    0x4f44(%esi),%eax
    movl   $0x1,0x4f3c(%esi)
    movb   $0xff,(%eax)
    mov    0x4f48(%esi),%eax
    orb    $0x4,0x33(%eax)
    mov    0x11(%esp),%eax
    sar    $0x18,%eax
    mov    0x1bce(%esi,%eax,4),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
    jmp    jump_139a7
  jump_13994:
    lea    0x1(%ebx),%ecx
    mov    %ecx,0x4f3c(%esi)
    cmp    $0x14,%ecx
    jle    jump_139a7
    mov    $0xffffffff,%edi
  jump_139a7:
    mov    %edi,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_139b4:
    .long   func_139fd
    .long   func_13a04
    .long   func_13a12
    .long   func_13a0b
    .long   func_13a12
    .long   func_13a12
    .long   func_13a0b
    .long   func_13a12
    .long   func_13a0b
    .long   func_13a0b
    .long   func_13a0b


/*----------------------------------------------------------------*/
func_139e0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    0x4f37(%eax),%bl
    sub    $0x4,%bl
    cmp    $0xa,%bl
    ja     func_13a12
    and    $0xff,%ebx
    jmp    *%cs:vtable_139b4(,%ebx,4)


/*----------------------------------------------------------------*/
func_139fd:
/*----------------------------------------------------------------*/
    call   func_13a28
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13a04:
/*----------------------------------------------------------------*/
    call   func_13ad8
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13a0b:
/*----------------------------------------------------------------*/
    call   func_15630
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13a12:
/*----------------------------------------------------------------*/
    mov    $0x362,%ebx
    mov    $data_90210,%edx
    xor    %eax,%eax
    call   func_261a8
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13a28:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%esi
    mov    %edx,%ecx
    cmpb   $0x2,(%edx)
    je     jump_13a49
    mov    $0x36b,%ebx
    mov    $data_9021d,%edx
    xor    %eax,%eax
    call   func_26198
  jump_13a49:
    cmpl   $0x14,0x4f38(%esi)
    jge    jump_13a60
    fildl  0x4f38(%esi)
    fsubrl data_9023a
    jmp    jump_13a6c
  jump_13a60:
    fildl  0x4f38(%esi)
    faddl  data_9022a
  jump_13a6c:
    fmull  data_90232
    fstps  0x8(%esp)
    mov    0xf(%ecx),%eax
    mov    %eax,(%esp)
    fildl  (%esp)
    fld    %st(0)
    fmuls  0x8(%esp)
    push   $0x0
    fstp   %st(1)
    call   func_76e98
    fistpl 0x4(%esp)
    mov    0x4(%esp),%ebx
    push   %ebx
    push   %ebx
    push   $0x0
    mov    0x27(%ecx),%eax
    push   $data_d8da0
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x7(%ecx),%ebp
    xor    %edx,%edx
    push   %ebp
    mov    0x5(%ecx),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    add    $0x4,%esi
    push   %esi
    call   func_5d631
    add    $0x28,%esp
    add    $0xc,%esp
    pop    %ebp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13ad8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x14,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    0x4f3c(%eax),%eax
    mov    %eax,0x10(%esp)
    cmp    $0xa,%eax
    jle    jump_13b14
    mov    $0x14,%eax
    sub    0x10(%esp),%eax
    mov    $0x2,%ecx
    mov    %eax,0x10(%esp)
    xor    %ebx,%ebx
    mov    %edi,%eax
    mov    0x1b14(%edi),%bx
    call   func_1826c
  jump_13b14:
    push   $0x0
    mov    0xf(%esi),%ecx
    push   %ecx
    push   %ecx
    push   $0x0
    mov    0x27(%esi),%eax
    push   $data_d8da0
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x7(%esi),%eax
    xor    %edx,%edx
    push   %eax
    mov    0x5(%esi),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    add    $0x4,%edi
    push   %edi
    call   func_5d631
    add    $0x28,%esp
    mov    0xf(%esi),%eax
    xor    %edx,%edx
    mov    %eax,(%esp)
    mov    %edx,0x4(%esp)
    mov    0x15(%esi),%edx
    mov    0x11(%esi),%eax
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %eax,%edx
    mov    0x10(%esp),%eax
    imul   %edx,%eax
    fildll (%esp)
    fmull  data_90242
    mov    %eax,0xc(%esp)
    fildl  0xc(%esp)
    fmulp  %st,%st(1)
    fmuls  data_9024a
    push   $0x96
    call   func_76e98
    fistpl 0x14(%esp)
    mov    0x14(%esp),%ebx
    push   %ebx
    mov    0x27(%esi),%eax
    push   %ebx
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   %edi
    call   func_5f389
    add    $0x18,%esp
    add    $0x14,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13bc0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13be0:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_13bf0:
/*----------------------------------------------------------------*/
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    ret


/*----------------------------------------------------------------*/
func_13c10:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x220,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    mov    0xab(%eax),%ecx
    mov    %edx,0x1f8(%esp)
    mov    0xab(%ecx),%ah
    add    $0xab,%ecx
    cmp    $0x3,%ah
    je     jump_13c4f
    mov    $0x31,%ebx
    mov    $data_90250,%edx
    xor    %eax,%eax
    call   func_26198
  jump_13c4f:
    mov    0x1(%ecx),%ecx
    lea    0x62(%ecx),%edi
    mov    0x1(%edi),%eax
    mov    $0x1,%ebx
    xor    %ebp,%ebp
    mov    (%eax),%al
    mov    %ebx,0x200(%esp)
    mov    %al,0x21c(%esp)
    cmp    $0x4a,%al
    jne    jump_13c98
    cmpb   $0x0,0x5(%edi)
    je     jump_13c8a
    mov    $0x3a,%ebx
    mov    $data_9025e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_13c8a:
    mov    0x6(%edi),%ebp
    movl   $0x2,0x200(%esp)
  jump_13c98:
    cmpl   $0x0,0x4f38(%esi)
    jne    jump_13e32
    mov    %esp,%edx
    mov    0x59(%ecx),%eax
    mov    0x21c(%esp),%bl
    call   func_1d794
    mov    %eax,%edi
    movw   $0x1,0x5034(%esi)
    cmp    $0x4a,%bl
    jne    jump_13d53
    mov    %ebp,%edx
    mov    %esi,%eax
    movw   $0x2,0x5034(%esi)
    call   func_12ae4
    mov    %eax,0x4f44(%esi)
    mov    0x1d2a(%esi),%eax
    add    $0x35,%eax
    mov    %eax,0x4f48(%esi)
    movb   $0x7,(%eax)
    mov    0x4f48(%esi),%eax
    movb   $0x12,0x33(%eax)
    mov    0x4f48(%esi),%eax
    add    $0x9e,%ecx
    movb   $0x1,0x34(%eax)
    lea    0x4f8c(%esi),%eax
    mov    (%ecx),%edx
    mov    %edx,(%eax)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    mov    0x219(%esp),%eax
    xor    %ebx,%ebx
    sar    $0x18,%eax
    xor    %ecx,%ecx
    mov    0x1a92(%esi,%eax,4),%ax
    mov    0x4f48(%esi),%edx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
    test   %edi,%edi
    jg     jump_13d6c
    jmp    jump_13e0a
  jump_13d53:
    mov    %esi,%eax
    mov    0x59(%ecx),%edx
    call   func_12ae4
    mov    %eax,0x4f44(%esi)
    test   %edi,%edi
    jg     jump_13d6c
    jmp    jump_13e0a
  jump_13d6c:
    lea    0x4f80(%esi),%eax
    shl    $0x2,%edi
    xor    %ebx,%ebx
    mov    %eax,0x204(%esp)
    mov    %edi,0x208(%esp)
    mov    0x204(%esp),%edi
  jump_13d8c:
    mov    0x5032(%esi),%eax
    sar    $0x10,%eax
    cmp    $0xf,%eax
    jge    jump_13e0a
    mov    (%esp,%ebx,1),%edx
    cmpb   $0x4,0x58(%edx)
    jne    jump_13dfc
    cmp    %ebp,%edx
    je     jump_13dfc
    mov    %esi,%eax
    call   func_12ae4
    orb    $0x12,0x33(%eax)
    mov    0x5034(%esi),%dl
    mov    %dl,0x34(%eax)
    mov    0x31(%eax),%edx
    sar    $0x18,%edx
    imul   $0xc,%edx,%edx
    mov    (%esp,%ebx,1),%ecx
    add    %edi,%edx
    flds   0x9e(%ecx)
    add    $0x9e,%ecx
    fstps  (%edx)
    flds   0x4(%ecx)
    fstps  0x4(%edx)
    flds   0x8(%ecx)
    fstps  0x8(%edx)
    mov    0x5034(%esi),%dx
    movswl %dx,%ecx
    inc    %edx
    mov    %dx,0x5034(%esi)
    mov    %eax,0x4f44(%esi,%ecx,4)
  jump_13dfc:
    mov    0x208(%esp),%edx
    add    $0x4,%ebx
    cmp    %edx,%ebx
    jl     jump_13d8c
  jump_13e0a:
    mov    0x219(%esp),%eax
    sar    $0x18,%eax
    movl   $0x0,0x4f3c(%esi)
    mov    0x1bcc(%esi,%eax,4),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
  jump_13e32:
    lea    0x9e(%ebp),%edx
    mov    0x4f3c(%esi),%ebp
    test   %ebp,%ebp
    jne    jump_13e8a
    cmpb   $0x4a,0x21c(%esp)
    jne    jump_13e6b
    lea    0x4f8c(%esi),%eax
    push   $0x41200000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_13e7a
    mov    0x4f48(%esi),%eax
    orb    $0x8,0x33(%eax)
  jump_13e6b:
    movl   $0x1,0x4f3c(%esi)
    jmp    jump_1420d
  jump_13e7a:
    mov    0x4f48(%esi),%eax
    call   func_12618
    jmp    jump_1420d
  jump_13e8a:
    cmp    $0x1,%ebp
    jne    jump_13edf
    mov    0x4f44(%esi),%eax
    flds   0xb(%eax)
    fadds  data_90278
    xor    %ecx,%ecx
    fstps  0xb(%eax)
    mov    0x4f44(%esi),%eax
    mov    %ecx,data_9a234
    flds   0xb(%eax)
    fcomps data_9027c
    fnstsw %ax
    sahf
    jb     jump_1420d
    movl   $0x2,0x4f3c(%esi)
    mov    0x1f8(%esp),%eax
    add    $0x220,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_13edf:
    cmp    $0x2,%ebp
    jne    jump_141d8
    xor    %edi,%edi
    mov    0x21c(%esp),%al
    mov    %edi,0x1dc(%esp)
    mov    %edi,0x1e0(%esp)
    mov    %edi,0x1e4(%esp)
    cmp    $0x4a,%al
    jne    jump_13f27
    mov    (%edx),%eax
    mov    %eax,0x1dc(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x1e0(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x1e4(%esp)
  jump_13f27:
    mov    0x219(%esp),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    fildl  data_10706a(%eax)
    mov    data_10706e(%eax),%eax
    shl    $0x5,%eax
    mov    %eax,0x218(%esp)
    fstps  0x1fc(%esp)
    fildl  0x218(%esp)
    fstps  0x1f0(%esp)
    flds   0x1fc(%esp)
    fsubs  data_9a234
    fsts   0x20c(%esp)
    fcompl data_90270
    fnstsw %ax
    sahf
    jbe    jump_13f89
    movl   $0x3e4ccccd,0x20c(%esp)
  jump_13f89:
    flds   data_9a234
    mov    $0xffffffff,%ebx
    lea    0x4f80(%esi),%edi
    mov    %ebx,0x1ec(%esp)
    mov    0x200(%esp),%ebx
    fadds  0x20c(%esp)
    lea    0x0(,%ebx,4),%ecx
    fstps  data_9a234
    add    %esi,%ecx
    jmp    jump_1407b
  jump_13fc3:
    mov    %ebp,0x1ec(%esp)
  jump_13fca:
    imul   $0xc,%edx,%edx
    lea    0x1c4(%esp),%eax
    push   0x214(%esp)
    call   func_53054
    flds   0x1dc(%esp)
    lea    0x1d0(%esp),%eax
    fadds  0x1c4(%esp)
    mov    %eax,0x1f4(%esp)
    fstps  0x1b8(%esp)
    flds   0x1e0(%esp)
    mov    0x1b8(%esp),%eax
    fadds  0x1c8(%esp)
    mov    %eax,0x1d0(%esp)
    fstps  0x1bc(%esp)
    flds   0x1e4(%esp)
    mov    0x1bc(%esp),%eax
    fadds  0x1cc(%esp)
    mov    %eax,0x1d4(%esp)
    fstps  0x1c0(%esp)
    mov    0x1c0(%esp),%eax
    mov    %eax,0x1d8(%esp)
    mov    0x1b8(%esp),%eax
    mov    %eax,(%edx,%edi,1)
    mov    0x1d4(%esp),%eax
    mov    %eax,0x4(%edx,%edi,1)
    mov    0x1d8(%esp),%eax
    mov    %eax,0x8(%edx,%edi,1)
  jump_14077:
    add    $0x4,%ecx
    inc    %ebx
  jump_1407b:
    mov    0x5032(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jge    jump_1419e
    mov    0x4f44(%ecx),%edx
    mov    0x31(%edx),%edx
    sar    $0x18,%edx
    imul   $0xc,%edx,%eax
    lea    0x1c4(%esp),%ebp
    mov    %ebp,0x1e8(%esp)
    xor    %ebp,%ebp
    mov    %ebp,0x1ac(%esp)
    mov    %ebp,0x1b0(%esp)
    mov    %ebp,0x1b4(%esp)
    flds   (%edi,%eax,1)
    fsubs  0x1dc(%esp)
    fstps  0x1ac(%esp)
    flds   0x4(%edi,%eax,1)
    fsubs  0x1e0(%esp)
    fstps  0x1b0(%esp)
    flds   0x8(%edi,%eax,1)
    fsubs  0x1e4(%esp)
    mov    0x1ac(%esp),%eax
    fstps  0x1b4(%esp)
    flds   0x1b0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c4(%esp)
    mov    0x1b0(%esp),%eax
    flds   0x1ac(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c8(%esp)
    faddp  %st,%st(1)
    mov    0x1b4(%esp),%eax
    flds   0x1b4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1cc(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fsts   0x210(%esp)
    fcomps 0x1f0(%esp)
    fnstsw %ax
    sahf
    jbe    jump_14077
    flds   0x20c(%esp)
    fmuls  data_90280
    fsubrs 0x210(%esp)
    fsts   0x214(%esp)
    fcomps 0x1f0(%esp)
    fnstsw %ax
    sahf
    jae    jump_13fc3
    mov    0x1f0(%esp),%eax
    mov    %eax,0x214(%esp)
    jmp    jump_13fca
  jump_1419e:
    flds   data_9a234
    fcomps 0x1fc(%esp)
    fnstsw %ax
    sahf
    jae    jump_141ba
    cmpl   $0xffffffff,0x1ec(%esp)
    jne    jump_1420d
  jump_141ba:
    movl   $0x3,0x4f3c(%esi)
    mov    0x1f8(%esp),%eax
    add    $0x220,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_141d8:
    mov    0x4f44(%esi),%eax
    flds   0xb(%eax)
    fadds  data_9026c
    fstps  0xb(%eax)
    mov    0x4f44(%esi),%edx
    fld1
    fcomps 0xb(%edx)
    fnstsw %ax
    sahf
    jb     jump_1420d
    mov    $0xffffffff,%ecx
    movl   $0x3f800000,0xb(%edx)
    mov    %ecx,0x1f8(%esp)
  jump_1420d:
    mov    0x1f8(%esp),%eax
    add    $0x220,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_14224:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    mov    0xab(%eax),%edi
    xor    %esi,%esi
    mov    0xab(%edi),%ah
    add    $0xab,%edi
    cmp    $0x3,%ah
    je     jump_14256
    mov    $0xcc,%ebx
    mov    $data_90284,%edx
    xor    %eax,%eax
    call   func_26198
  jump_14256:
    mov    0x1(%edi),%edx
    mov    0x63(%edx),%eax
    mov    0x4f38(%ecx),%edi
    mov    (%eax),%bl
    test   %edi,%edi
    jne    jump_142a5
    mov    %ecx,%eax
    movw   $0x1,0x5034(%ecx)
    call   func_12ae4
    mov    %eax,0x4f44(%ecx)
    orb    $0x4,0x33(%eax)
    mov    %edi,0x4f3c(%ecx)
    movsbl %bl,%eax
    mov    %edi,0x4f40(%ecx)
    mov    0x1bcc(%ecx,%eax,4),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
  jump_142a5:
    mov    0x4f38(%ecx),%eax
    mov    0x4f40(%ecx),%ebp
    and    $0x1,%eax
    add    %eax,%ebp
    mov    0x4f38(%ecx),%eax
    mov    %ebp,0x4f40(%ecx)
    cmp    $0x24,%eax
    jne    jump_142cc
    mov    $0xffffffff,%esi
  jump_142cc:
    mov    %esi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_142d8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %ebp
    sub    $0x2c,%esp
    mov    %eax,%ecx
    mov    0xab(%eax),%esi
    mov    0xab(%esi),%ah
    add    $0xab,%esi
    cmp    $0x3,%ah
    je     jump_1430a
    mov    $0xf5,%ebx
    mov    $data_90292,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1430a:
    mov    0x1(%esi),%ebx
    mov    0x63(%ebx),%eax
    mov    (%eax),%al
    mov    0x4f38(%ecx),%edx
    mov    %al,0x28(%esp)
    test   %edx,%edx
    jne    jump_143e6
    mov    %ebx,%edx
    mov    %ecx,%eax
    movw   $0x1,0x5034(%ecx)
    call   func_12ae4
    mov    %eax,0x4f44(%ecx)
    orb    $0x12,0x33(%eax)
    mov    0x4f44(%ecx),%eax
    movb   $0x0,0x34(%eax)
    lea    0x9e(%ebx),%eax
    lea    0x4f80(%ecx),%edx
    flds   (%eax)
    xor    %ebx,%ebx
    fstps  (%edx)
    mov    0x4(%eax),%esi
    mov    %esi,0x4(%edx)
    mov    0x8(%eax),%esi
    mov    %esi,0x8(%edx)
    mov    %esp,%edx
    mov    %ebx,0xc(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ebx,0x14(%esp)
    mov    %edx,0x18(%esp)
    flds   (%eax)
    fchs
    fstps  0xc(%esp)
    flds   0x4(%eax)
    fchs
    fstps  0x10(%esp)
    flds   0x8(%eax)
    mov    0xc(%esp),%eax
    fchs
    mov    %eax,(%esp)
    mov    0x10(%esp),%eax
    fstps  0x14(%esp)
    mov    %eax,0x4(%esp)
    mov    0x14(%esp),%eax
    lea    0x4f8c(%ecx),%edx
    mov    %eax,0x8(%esp)
    mov    0xc(%esp),%eax
    mov    %eax,(%edx)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x25(%esp),%edx
    sar    $0x18,%edx
    mov    %ebx,0x4f3c(%ecx)
    mov    0x1bcc(%ecx,%edx,4),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
  jump_143e6:
    lea    0x4f8c(%ecx),%eax
    flds   0x4(%eax)
    fmul   %st(0),%st
    flds   (%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    xor    %ebp,%ebp
    flds   0x8(%eax)
    fmul   %st(0),%st
    mov    %ebp,0x24(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    lea    0x4f80(%ecx),%eax
    fstps  0x20(%esp)
    flds   0x4(%eax)
    fmul   %st(0),%st
    flds   (%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x8(%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fstps  0x1c(%esp)
    fld1
    fcomps 0x20(%esp)
    fnstsw %ax
    sahf
    jae    jump_1445b
    flds   0x20(%esp)
    fld    %st(0)
    fsubs  0x1c(%esp)
    fmuls  data_902a0
    fdivp  %st,%st(1)
    fstps  0x24(%esp)
  jump_1445b:
    flds   0x24(%esp)
    fcompl data_902a4
    fnstsw %ax
    sahf
    jae    jump_14472
    movl   $0x404ccccd,0x24(%esp)
  jump_14472:
    lea    0x4f8c(%ecx),%edx
    lea    0x4f80(%ecx),%eax
    push   0x24(%esp)
    call   func_12480
    add    $0x2c,%esp
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_14490:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    0xab(%eax),%esi
    mov    0xab(%esi),%ah
    add    $0xab,%esi
    cmp    $0x3,%ah
    je     jump_144c2
    mov    $0x127,%ebx
    mov    $data_902ac,%edx
    xor    %eax,%eax
    call   func_26198
  jump_144c2:
    mov    0x1(%esi),%esi
    lea    0x62(%esi),%edi
    cmpb   $0x2,0x5(%edi)
    je     jump_144df
    mov    $0x12b,%ebx
    mov    $data_902ba,%edx
    xor    %eax,%eax
    call   func_26198
  jump_144df:
    mov    0x1(%edi),%eax
    mov    0x6(%edi),%ebx
    mov    (%eax),%al
    mov    0x4f38(%ecx),%edx
    mov    %al,(%esp)
    test   %edx,%edx
    jne    jump_14592
    mov    %esi,%edx
    mov    %ecx,%eax
    movw   $0x1,0x5034(%ecx)
    call   func_12ae4
    mov    %eax,0x4f44(%ecx)
    orb    $0x12,0x33(%eax)
    mov    0x4f44(%ecx),%eax
    movb   $0x0,0x34(%eax)
    lea    0x9e(%esi),%eax
    lea    0x4f80(%ecx),%edx
    mov    (%eax),%edi
    mov    %edi,(%edx)
    mov    0x4(%eax),%edi
    mov    %edi,0x4(%edx)
    mov    0x8(%eax),%edi
    mov    %edi,0x8(%edx)
    lea    0x14(%ebx),%edx
    lea    0x4f8c(%ecx),%eax
    mov    (%edx),%edi
    mov    %edi,(%eax)
    mov    0x4(%edx),%edi
    mov    %edi,0x4(%eax)
    mov    0x8(%edx),%edi
    mov    %edi,0x8(%eax)
    mov    0x59(%esi),%edx
    cmp    (%ebx),%edx
    jne    jump_1456d
    lea    0x8(%ebx),%edx
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
  jump_1456d:
    mov    -0x3(%esp),%eax
    sar    $0x18,%eax
    movl   $0x0,0x4f3c(%ecx)
    mov    0x1bcc(%ecx,%eax,4),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
  jump_14592:
    fildl  0x4f38(%ecx)
    fmull  data_902c8
    lea    0x4f8c(%ecx),%edx
    sub    $0x4,%esp
    lea    0x4f80(%ecx),%eax
    fstps  (%esp)
    call   func_12480
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_145c0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    mov    0xab(%eax),%ecx
    mov    %edx,(%esp)
    mov    0xab(%ecx),%ah
    add    $0xab,%ecx
    cmp    $0x3,%ah
    je     jump_145f8
    mov    $0x158,%ebx
    mov    $data_902d0,%edx
    xor    %eax,%eax
    call   func_26198
  jump_145f8:
    mov    0x1(%ecx),%ecx
    lea    0x62(%ecx),%ebp
    cmpb   $0x0,0x5(%ebp)
    je     jump_14615
    mov    $0x15c,%ebx
    mov    $data_902de,%edx
    xor    %eax,%eax
    call   func_26198
  jump_14615:
    mov    0x1(%ebp),%ebx
    mov    0x6(%ebp),%edi
    mov    0x4f38(%esi),%ebp
    mov    (%ebx),%bl
    test   %ebp,%ebp
    jne    jump_146e0
    mov    %ecx,%edx
    mov    %esi,%eax
    movw   $0x3,0x5034(%esi)
    call   func_12ae4
    mov    %eax,0x4f44(%esi)
    orb    $0x4,0x33(%eax)
    mov    0x1d2a(%esi),%eax
    add    $0x35,%eax
    mov    %eax,0x4f48(%esi)
    movb   $0x7,(%eax)
    mov    0x4f48(%esi),%eax
    movb   $0x1a,0x33(%eax)
    mov    0x4f48(%esi),%eax
    add    $0x9e,%ecx
    movb   $0x1,0x34(%eax)
    lea    0x4f8c(%esi),%ebp
    mov    (%ecx),%eax
    mov    %eax,0x0(%ebp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x4(%ebp)
    mov    0x8(%ecx),%eax
    mov    %eax,0x8(%ebp)
    movsbl %bl,%ebp
    xor    %ecx,%ecx
    mov    0x1a92(%esi,%ebp,4),%ax
    xor    %ebx,%ebx
    mov    0x4f48(%esi),%edx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_12ae4
    movl   $0x0,0x4f3c(%esi)
    movl   $0x0,0x4f40(%esi)
    mov    %eax,0x4f4c(%esi)
    mov    0x1bcc(%esi,%ebp,4),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
  jump_146e0:
    mov    0x4f3c(%esi),%eax
    test   %eax,%eax
    jne    jump_14737
    mov    0x4f38(%esi),%eax
    mov    0x4f40(%esi),%edi
    and    $0x1,%eax
    add    %eax,%edi
    mov    %edi,0x4f40(%esi)
    cmp    $0x12,%edi
    jne    jump_147bd
    mov    0x4f44(%esi),%eax
    andb   $0xfb,0x33(%eax)
    mov    0x4f48(%esi),%ecx
    andb   $0xf7,0x33(%ecx)
    movl   $0x1,0x4f3c(%esi)
    movl   $0x0,0x4f40(%esi)
    jmp    jump_147bd
  jump_14737:
    cmp    $0x1,%eax
    jne    jump_1479a
    lea    0x9e(%edi),%edx
    lea    0x4f8c(%esi),%eax
    push   $0x41a00000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_14782
    mov    0x4f48(%esi),%eax
    orb    $0x8,0x33(%eax)
    mov    0x4f4c(%esi),%ecx
    orb    $0x4,0x33(%ecx)
    movl   $0x2,0x4f3c(%esi)
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_14782:
    mov    0x4f48(%esi),%eax
    call   func_12618
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_1479a:
    mov    0x4f38(%esi),%eax
    mov    0x4f40(%esi),%ebx
    and    $0x1,%eax
    add    %eax,%ebx
    mov    %ebx,0x4f40(%esi)
    cmp    $0x12,%ebx
    jne    jump_147bd
    movl   $0xffffffff,(%esp)
  jump_147bd:
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_147cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x68,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    mov    0xab(%eax),%edi
    mov    %edx,0x58(%esp)
    mov    0xab(%edi),%ah
    add    $0xab,%edi
    cmp    $0x3,%ah
    je     jump_14805
    mov    $0x1ac,%ebx
    mov    $data_902ec,%edx
    xor    %eax,%eax
    call   func_26198
  jump_14805:
    mov    0x1(%edi),%ecx
    lea    0x62(%ecx),%edi
    cmpb   $0x0,0x5(%edi)
    je     jump_14822
    mov    $0x1b0,%ebx
    mov    $data_902fa,%edx
    xor    %eax,%eax
    call   func_26198
  jump_14822:
    mov    0x1(%edi),%eax
    mov    (%eax),%al
    movsbl %al,%edx
    imul   $0x6a,%edx,%eax
    mov    $data_107020,%ebx
    add    %eax,%ebx
    mov    %ebx,0x50(%esp)
    mov    0x4f38(%esi),%ebx
    mov    0x6(%edi),%ebp
    test   %ebx,%ebx
    jne    jump_149f8
    mov    0x1d2a(%esi),%eax
    movw   $0x2,0x5034(%esi)
    add    $0x35,%eax
    mov    %eax,0x4f44(%esi)
    movb   $0x7,(%eax)
    mov    0x4f44(%esi),%eax
    orb    $0x12,0x33(%eax)
    mov    0x4f44(%esi),%eax
    lea    0x4f80(%esi),%edi
    movb   $0x0,0x34(%eax)
    lea    0x9e(%ecx),%eax
    shl    $0x2,%edx
    xor    %ebx,%ebx
    flds   (%eax)
    xor    %ecx,%ecx
    fstps  (%edi)
    flds   0x4(%eax)
    fstps  0x4(%edi)
    flds   0x8(%eax)
    lea    (%esi,%edx,1),%eax
    fstps  0x8(%edi)
    mov    %eax,0x54(%esp)
    mov    0x1a92(%eax),%ax
    mov    0x4f44(%esi),%edx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_12ae4
    mov    %eax,0x4f48(%esi)
    orb    $0x12,0x33(%eax)
    mov    0x4f48(%esi),%eax
    xor    %ecx,%ecx
    movb   $0x1,0x34(%eax)
    lea    0x4f8c(%esi),%ebx
    flds   0x9e(%ebp)
    lea    0xc(%esp),%eax
    fstps  (%ebx)
    mov    0xa2(%ebp),%edx
    mov    %edx,0x4(%ebx)
    mov    0xa6(%ebp),%edx
    mov    %edx,0x8(%ebx)
    mov    %eax,0x60(%esp)
    mov    %ecx,0x3c(%esp)
    mov    %ecx,0x40(%esp)
    mov    %ecx,0x44(%esp)
    flds   (%ebx)
    fsubs  (%edi)
    fstps  0x3c(%esp)
    flds   0x4(%ebx)
    fsubs  0x4(%edi)
    mov    0x3c(%esp),%eax
    fstps  0x40(%esp)
    flds   0x8(%ebx)
    fsubs  0x8(%edi)
    mov    %eax,0xc(%esp)
    mov    0x40(%esp),%eax
    fstps  0x44(%esp)
    mov    %eax,0x10(%esp)
    mov    0x44(%esp),%eax
    lea    0x4f98(%esi),%edx
    mov    %eax,0x14(%esp)
    mov    0x3c(%esp),%eax
    mov    %eax,(%edx)
    mov    0x10(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x50(%esp),%eax
    mov    0x4a(%eax),%eax
    shl    $0x5,%eax
    mov    %eax,0x64(%esp)
    fildl  0x64(%esp)
    sub    $0x4,%esp
    mov    %edx,%eax
    fstps  (%esp)
    call   func_53054
    lea    0x18(%esp),%eax
    mov    %ecx,0x24(%esp)
    mov    %ecx,0x28(%esp)
    mov    %ecx,0x2c(%esp)
    mov    %eax,0x48(%esp)
    flds   (%ebx)
    fadds  (%edx)
    fstps  0x24(%esp)
    flds   0x4(%ebx)
    fadds  0x4(%edx)
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    flds   0x8(%ebx)
    fadds  0x8(%edx)
    mov    %eax,0x18(%esp)
    mov    0x28(%esp),%eax
    fstps  0x2c(%esp)
    mov    %eax,0x1c(%esp)
    mov    0x2c(%esp),%eax
    mov    %eax,0x20(%esp)
    mov    0x24(%esp),%eax
    mov    %eax,(%edx)
    mov    0x1c(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x20(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x54(%esp),%edx
    mov    %ecx,0x4f3c(%esi)
    mov    0x1bcc(%edx),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    add    $0x9e,%ebp
    call   func_4fb90
  jump_149f8:
    mov    0x4f3c(%esi),%eax
    lea    0x4f8c(%esi),%edx
    test   %eax,%eax
    jne    jump_14a45
    mov    0x4f44(%esi),%eax
    call   func_12618
    lea    0x4f80(%esi),%eax
    push   $0x42480000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_14b07
    mov    0x4f44(%esi),%eax
    orb    $0x8,0x33(%eax)
    movl   $0x1,0x4f3c(%esi)
    jmp    jump_14b07
  jump_14a45:
    mov    %esp,%ebx
    mov    %ebx,0x4c(%esp)
    xor    %ebx,%ebx
    lea    0x4f98(%esi),%eax
    mov    %ebx,0x30(%esp)
    mov    %ebx,0x34(%esp)
    mov    %ebx,0x38(%esp)
    flds   (%eax)
    fsubs  (%edx)
    fstps  0x30(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%edx)
    fstps  0x34(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%edx)
    mov    0x30(%esp),%eax
    fstps  0x38(%esp)
    flds   0x34(%esp)
    fmul   %st(0),%st
    mov    %eax,(%esp)
    mov    0x34(%esp),%eax
    flds   0x30(%esp)
    fmul   %st(0),%st
    mov    %eax,0x4(%esp)
    faddp  %st,%st(1)
    mov    0x38(%esp),%eax
    flds   0x38(%esp)
    fmul   %st(0),%st
    mov    %eax,0x8(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fmuls  data_90308
    fsts   0x5c(%esp)
    fcompl data_9030c
    fnstsw %ax
    sahf
    jae    jump_14ad2
    movl   $0x404ccccd,0x5c(%esp)
    jmp    jump_14ae9
  jump_14ad2:
    flds   0x5c(%esp)
    fcomps data_90314
    fnstsw %ax
    sahf
    jbe    jump_14ae9
    movl   $0x42480000,0x5c(%esp)
  jump_14ae9:
    lea    0x4f98(%esi),%edx
    lea    0x4f8c(%esi),%eax
    push   0x5c(%esp)
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_14b07
    mov    %eax,0x58(%esp)
  jump_14b07:
    mov    0x58(%esp),%eax
    add    $0x68,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_14b18:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20c,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    mov    0xab(%eax),%ecx
    mov    %edx,0x1f8(%esp)
    mov    0xab(%ecx),%ah
    add    $0xab,%ecx
    cmp    $0x3,%ah
    je     jump_14b57
    mov    $0x1f9,%ebx
    mov    $data_90318,%edx
    xor    %eax,%eax
    call   func_26198
  jump_14b57:
    mov    0x1(%ecx),%ecx
    lea    0x62(%ecx),%edi
    mov    0x1(%edi),%eax
    mov    (%eax),%al
    mov    %ecx,%ebp
    mov    %al,0x208(%esp)
    cmp    $0x28,%al
    jne    jump_14b89
    cmpb   $0x0,0x5(%edi)
    je     jump_14b86
    mov    $0x201,%ebx
    mov    $data_90326,%edx
    xor    %eax,%eax
    call   func_26198
  jump_14b86:
    mov    0x6(%edi),%ebp
  jump_14b89:
    cmpl   $0x0,0x4f38(%esi)
    jne    jump_14d2e
    mov    %esp,%edx
    mov    0x59(%ecx),%eax
    call   func_1d794
    mov    %eax,%edi
    mov    %ebp,%edx
    mov    %esi,%eax
    movw   $0x2,0x5034(%esi)
    call   func_12ae4
    mov    %eax,0x4f44(%esi)
    mov    0x1d2a(%esi),%eax
    add    $0x35,%eax
    mov    %eax,0x4f48(%esi)
    mov    0x208(%esp),%bl
    movb   $0xff,(%eax)
    cmp    $0x28,%bl
    jne    jump_14c37
    mov    0x4f48(%esi),%eax
    movb   $0x7,(%eax)
    mov    0x4f48(%esi),%eax
    movb   $0x12,0x33(%eax)
    mov    0x4f48(%esi),%eax
    add    $0x9e,%ecx
    movb   $0x1,0x34(%eax)
    lea    0x4f8c(%esi),%eax
    mov    (%ecx),%edx
    mov    %edx,(%eax)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    mov    0x205(%esp),%eax
    xor    %ebx,%ebx
    sar    $0x18,%eax
    xor    %ecx,%ecx
    mov    0x1a92(%esi,%eax,4),%ax
    mov    0x4f48(%esi),%edx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
  jump_14c37:
    test   %edi,%edi
    jg     jump_14c40
    jmp    jump_14cde
  jump_14c40:
    lea    0x4f80(%esi),%eax
    shl    $0x2,%edi
    xor    %ebx,%ebx
    mov    %eax,0x1e8(%esp)
    mov    %edi,0x200(%esp)
    mov    0x1e8(%esp),%edi
  jump_14c60:
    mov    0x5032(%esi),%eax
    sar    $0x10,%eax
    cmp    $0xf,%eax
    jge    jump_14cde
    mov    (%esp,%ebx,1),%edx
    cmpb   $0x4,0x58(%edx)
    jne    jump_14cd0
    cmp    %ebp,%edx
    je     jump_14cd0
    mov    %esi,%eax
    call   func_12ae4
    orb    $0x12,0x33(%eax)
    mov    0x5034(%esi),%dl
    mov    %dl,0x34(%eax)
    mov    0x31(%eax),%edx
    sar    $0x18,%edx
    imul   $0xc,%edx,%edx
    mov    (%esp,%ebx,1),%ecx
    add    %edi,%edx
    flds   0x9e(%ecx)
    add    $0x9e,%ecx
    fstps  (%edx)
    flds   0x4(%ecx)
    fstps  0x4(%edx)
    flds   0x8(%ecx)
    fstps  0x8(%edx)
    mov    0x5034(%esi),%dx
    movswl %dx,%ecx
    inc    %edx
    mov    %dx,0x5034(%esi)
    mov    %eax,0x4f44(%esi,%ecx,4)
  jump_14cd0:
    mov    0x200(%esp),%ecx
    add    $0x4,%ebx
    cmp    %ecx,%ebx
    jl     jump_14c60
  jump_14cde:
    mov    0x208(%esp),%bh
    movl   $0x1,0x4f3c(%esi)
    cmp    $0x28,%bh
    jne    jump_14cfe
    movl   $0x0,0x4f3c(%esi)
  jump_14cfe:
    mov    0x205(%esp),%eax
    sar    $0x18,%eax
    movl   $0x0,0x4f40(%esi)
    mov    0x1bcc(%esi,%eax,4),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    xor    %edi,%edi
    call   func_4fb90
    mov    %edi,data_9a238
  jump_14d2e:
    lea    0x9e(%ebp),%edx
    mov    0x4f3c(%esi),%ebp
    test   %ebp,%ebp
    jne    jump_14d7b
    mov    0x4f48(%esi),%eax
    call   func_12618
    lea    0x4f8c(%esi),%eax
    push   $0x41200000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_15062
    mov    0x4f48(%esi),%eax
    orb    $0x8,0x33(%eax)
    movl   $0x1,0x4f3c(%esi)
    jmp    jump_15062
  jump_14d7b:
    cmp    $0x1,%ebp
    jne    jump_14dcb
    mov    0x4f38(%esi),%eax
    mov    0x4f40(%esi),%edx
    and    %ebp,%eax
    add    %eax,%edx
    mov    0x4f44(%esi),%eax
    mov    %edx,0x4f40(%esi)
    orb    $0x4,0x33(%eax)
    cmpl   $0x9,0x4f40(%esi)
    jne    jump_15062
    movl   $0x2,0x4f3c(%esi)
    mov    0x1f8(%esp),%eax
    add    $0x20c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_14dcb:
    cmp    $0x2,%ebp
    jne    jump_1503b
    mov    (%edx),%eax
    mov    %eax,0x1dc(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x1e0(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x1e4(%esp)
    mov    0x205(%esp),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    lea    0x4f80(%esi),%edi
    mov    %ebp,%ecx
    lea    0x8(%esi),%ebx
    fildl  data_10706a(%eax)
    fstps  0x1f0(%esp)
    mov    $0xffffffff,%eax
    flds   data_9a238
    fadds  data_90334
    mov    %eax,0x1fc(%esp)
    fstps  data_9a238
    jmp    jump_14efd
  jump_14e39:
    mov    %ebp,0x1fc(%esp)
  jump_14e40:
    imul   $0xc,%edx,%edx
    flds   0x204(%esp)
    fmuls  data_9033c
    sub    $0x4,%esp
    lea    0x1c8(%esp),%eax
    fstps  (%esp)
    call   func_53054
    flds   0x1dc(%esp)
    lea    0x1d0(%esp),%eax
    fadds  0x1c4(%esp)
    mov    %eax,0x1f4(%esp)
    fstps  0x1b8(%esp)
    flds   0x1e0(%esp)
    mov    0x1b8(%esp),%eax
    fadds  0x1c8(%esp)
    mov    %eax,0x1d0(%esp)
    fstps  0x1bc(%esp)
    flds   0x1e4(%esp)
    mov    0x1bc(%esp),%eax
    fadds  0x1cc(%esp)
    mov    %eax,0x1d4(%esp)
    fstps  0x1c0(%esp)
    mov    0x1c0(%esp),%eax
    mov    %eax,0x1d8(%esp)
    mov    0x1b8(%esp),%eax
    mov    %eax,(%edx,%edi,1)
    mov    0x1d4(%esp),%eax
    mov    %eax,0x4(%edx,%edi,1)
    add    $0x4,%ebx
    mov    0x1d8(%esp),%eax
    inc    %ecx
    mov    %eax,0x8(%edx,%edi,1)
  jump_14efd:
    mov    0x5032(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jge    jump_15001
    mov    0x4f44(%ebx),%edx
    mov    0x31(%edx),%edx
    sar    $0x18,%edx
    imul   $0xc,%edx,%eax
    lea    0x1c4(%esp),%ebp
    mov    %ebp,0x1ec(%esp)
    xor    %ebp,%ebp
    mov    %ebp,0x1ac(%esp)
    mov    %ebp,0x1b0(%esp)
    mov    %ebp,0x1b4(%esp)
    flds   (%edi,%eax,1)
    fsubs  0x1dc(%esp)
    fstps  0x1ac(%esp)
    flds   0x4(%edi,%eax,1)
    fsubs  0x1e0(%esp)
    fstps  0x1b0(%esp)
    flds   0x8(%edi,%eax,1)
    fsubs  0x1e4(%esp)
    mov    0x1ac(%esp),%eax
    fstps  0x1b4(%esp)
    flds   0x1b0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c4(%esp)
    mov    0x1b0(%esp),%eax
    flds   0x1ac(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c8(%esp)
    faddp  %st,%st(1)
    mov    0x1b4(%esp),%eax
    flds   0x1b4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1cc(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fmuls  data_90338
    fadds  data_90334
    fsts   0x204(%esp)
    fcomps 0x1f0(%esp)
    fnstsw %ax
    sahf
    jb     jump_14e39
    mov    0x1f0(%esp),%eax
    mov    %eax,0x204(%esp)
    jmp    jump_14e40
  jump_15001:
    flds   data_9a238
    fcomps 0x1f0(%esp)
    fnstsw %ax
    sahf
    jae    jump_1501d
    cmpl   $0xffffffff,0x1fc(%esp)
    jne    jump_15062
  jump_1501d:
    movl   $0x3,0x4f3c(%esi)
    mov    0x1f8(%esp),%eax
    add    $0x20c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_1503b:
    mov    0x4f38(%esi),%eax
    mov    0x4f40(%esi),%ecx
    and    $0x1,%eax
    add    %eax,%ecx
    mov    %ecx,0x4f40(%esi)
    cmp    $0x12,%ecx
    jne    jump_15062
    movl   $0xffffffff,0x1f8(%esp)
  jump_15062:
    mov    0x1f8(%esp),%eax
    add    $0x20c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15078:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    0xab(%eax),%edi
    xor    %esi,%esi
    mov    0xab(%edi),%ah
    add    $0xab,%edi
    cmp    $0x3,%ah
    je     jump_150a9
    mov    $0x283,%ebx
    mov    $data_90340,%edx
    xor    %eax,%eax
    call   func_26198
  jump_150a9:
    mov    0x1(%edi),%edx
    mov    0x63(%edx),%eax
    mov    0x4f38(%ecx),%edi
    mov    (%eax),%bl
    test   %edi,%edi
    jne    jump_150f8
    mov    %ecx,%eax
    movw   $0x1,0x5034(%ecx)
    call   func_12ae4
    mov    %eax,0x4f44(%ecx)
    orb    $0x4,0x33(%eax)
    mov    %edi,0x4f3c(%ecx)
    movsbl %bl,%eax
    mov    %edi,0x4f40(%ecx)
    mov    0x1bcc(%ecx,%eax,4),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
  jump_150f8:
    cmpl   $0x0,0x4f3c(%ecx)
    jne    jump_1512f
    mov    0x4f38(%ecx),%bl
    lea    0x4f40(%ecx),%edx
    test   $0x3,%bl
    sete   %al
    and    $0xff,%eax
    add    %eax,(%edx)
    cmpl   $0x9,0x4f40(%ecx)
    jne    jump_1515a
    movl   $0x1,0x4f3c(%ecx)
    jmp    jump_1515a
  jump_1512f:
    mov    0x4f44(%ecx),%eax
    flds   0xb(%eax)
    fadds  data_9034e
    fstps  0xb(%eax)
    mov    0x4f44(%ecx),%eax
    flds   0xb(%eax)
    fcompl data_90352
    fnstsw %ax
    sahf
    jae    jump_1515a
    mov    $0xffffffff,%esi
  jump_1515a:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15164:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    0xab(%eax),%ecx
    xor    %edi,%edi
    mov    0xab(%ecx),%ah
    add    $0xab,%ecx
    cmp    $0x3,%ah
    je     jump_15196
    mov    $0x2b5,%ebx
    mov    $data_9035a,%edx
    xor    %eax,%eax
    call   func_26198
  jump_15196:
    mov    0x1(%ecx),%ebx
    mov    0x4f38(%esi),%edx
    mov    $0x48,%cl
    test   %edx,%edx
    jne    jump_15200
    mov    %ebx,%edx
    mov    %esi,%eax
    movw   $0x2,0x5034(%esi)
    call   func_12ae4
    mov    %eax,0x4f44(%esi)
    orb    $0x4,0x33(%eax)
    mov    0x1d2a(%esi),%eax
    add    $0x35,%eax
    mov    %eax,0x4f48(%esi)
    movb   $0xff,(%eax)
    movl   $0x0,0x4f3c(%esi)
    lea    0x120(%esi),%edx
    movl   $0x0,0x4f40(%esi)
    mov    0x1bcc(%edx),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
  jump_15200:
    mov    0x4f3c(%esi),%ebp
    test   %ebp,%ebp
    jne    jump_152ad
    mov    0x4f38(%esi),%eax
    mov    0x4f40(%esi),%edx
    and    $0x1,%eax
    add    %eax,%edx
    mov    %edx,0x4f40(%esi)
    cmp    $0x9,%edx
    jne    jump_152da
    mov    0x4f44(%esi),%eax
    orb    $0x8,0x33(%eax)
    mov    0x4f48(%esi),%eax
    movb   $0x7,(%eax)
    mov    0x4f48(%esi),%eax
    orb    $0x10,0x33(%eax)
    mov    0x4f48(%esi),%eax
    movb   $0x1,0x34(%eax)
    lea    0x9e(%ebx),%eax
    lea    0x4f8c(%esi),%edx
    flds   (%eax)
    xor    %ebx,%ebx
    fstps  (%edx)
    mov    0x4(%eax),%ebp
    mov    %ebp,0x4(%edx)
    mov    0x8(%eax),%ebp
    mov    %ebp,0x8(%edx)
    movsbl %cl,%eax
    mov    0x4f48(%esi),%edx
    mov    0x1a92(%esi,%eax,4),%bx
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_1826c
    mov    0x4f48(%esi),%eax
    movl   $0x40a00000,0xb(%eax)
    movl   $0x1,0x4f3c(%esi)
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_152ad:
    cmp    $0x1,%ebp
    jne    jump_152da
    testb  $0x3,0x4f38(%esi)
    jne    jump_152cd
    mov    0x4f48(%esi),%eax
    call   func_12618
    cmp    $0xffffffff,%eax
    jne    jump_152cd
    mov    %eax,%edi
  jump_152cd:
    mov    0x4f48(%esi),%eax
    movl   $0x40a00000,0xb(%eax)
  jump_152da:
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_152e4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c4,%esp
    mov    %eax,%edi
    xor    %edx,%edx
    mov    0xab(%eax),%esi
    mov    %edx,0x1b0(%esp)
    mov    0xab(%esi),%ah
    add    $0xab,%esi
    cmp    $0x3,%ah
    je     jump_15323
    mov    $0x2fa,%ebx
    mov    $data_90368,%edx
    xor    %eax,%eax
    call   func_26198
  jump_15323:
    mov    0x1(%esi),%eax
    mov    $0x26,%dl
    mov    %eax,0x1b4(%esp)
    mov    $data_107020,%eax
    mov    0x4f38(%edi),%ebx
    add    $0xfbc,%eax
    mov    %dl,0x1c0(%esp)
    mov    %eax,0x1ac(%esp)
    test   %ebx,%ebx
    jne    jump_153bf
    movw   $0x1,0x5034(%edi)
    mov    0x1d2a(%edi),%eax
    mov    %eax,0x4f44(%edi)
    movb   $0xff,(%eax)
    mov    0x4f44(%edi),%eax
    orb    $0x12,0x33(%eax)
    mov    0x1b4(%esp),%edx
    mov    0x4f44(%edi),%eax
    add    $0x9e,%edx
    movb   $0x0,0x34(%eax)
    lea    0x4f80(%edi),%eax
    mov    (%edx),%ecx
    mov    %ecx,(%eax)
    mov    0x4(%edx),%ecx
    mov    %ecx,0x4(%eax)
    flds   0x8(%edx)
    lea    0x98(%edi),%edx
    fstps  0x8(%eax)
    mov    %ebx,0x4f3c(%edi)
    mov    0x1bcc(%edx),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
  jump_153bf:
    mov    0x4f44(%edi),%eax
    cmpb   $0xff,(%eax)
    jne    jump_154d8
    mov    0x1b4(%esp),%eax
    mov    %esp,%edx
    mov    0x59(%eax),%eax
    call   func_1d794
    mov    0x4f3c(%edi),%esi
    and    $0xff,%esi
    mov    %eax,%edx
    cmp    %eax,%esi
    jl     jump_1540a
    jmp    jump_154c2
  jump_153f6:
    mov    0x1b8(%esp),%ecx
    add    $0x4,%eax
    inc    %esi
    cmp    %ecx,%eax
    jl     jump_15428
    jmp    jump_154c2
  jump_1540a:
    mov    0x1b4(%esp),%ebp
    lea    0x0(,%esi,4),%eax
    shl    $0x2,%edx
    mov    0x54(%ebp),%ebp
    mov    %edx,0x1b8(%esp)
    sar    $0x10,%ebp
  jump_15428:
    mov    (%esp,%eax,1),%edx
    mov    0x54(%edx),%ebx
    mov    0x58(%edx),%cl
    sar    $0x10,%ebx
    cmp    $0x4,%cl
    jne    jump_153f6
    cmp    %ebx,%ebp
    je     jump_153f6
    imul   $0x1ee,%ebp,%edx
    cmpb   $0x2,data_a3132(%edx,%ebx,1)
    jne    jump_153f6
    movw   $0x2,0x5034(%edi)
    mov    (%esp,%eax,1),%ebx
    lea    0x4f8c(%edi),%edx
    mov    0x9e(%ebx),%ecx
    mov    %ecx,(%edx)
    mov    0xa2(%ebx),%ecx
    mov    %ecx,0x4(%edx)
    mov    0xa6(%ebx),%ecx
    mov    %ecx,0x8(%edx)
    mov    0x4f44(%edi),%edx
    movb   $0x7,(%edx)
    xor    %ecx,%ecx
    mov    (%esp,%eax,1),%edx
    mov    %edi,%eax
    add    $0x9e,%ebx
    call   func_12ae4
    mov    %eax,0x4f48(%edi)
    mov    0x1bd(%esp),%eax
    xor    %ebx,%ebx
    sar    $0x18,%eax
    mov    0x4f44(%edi),%edx
    mov    0x1a92(%edi,%eax,4),%bx
    mov    %edi,%eax
    inc    %esi
    call   func_1826c
    mov    %esi,0x4f3c(%edi)
  jump_154c2:
    mov    0x4f44(%edi),%eax
    cmpb   $0xff,(%eax)
    jne    jump_154d8
    movl   $0xffffffff,0x1b0(%esp)
  jump_154d8:
    mov    0x4f44(%edi),%eax
    cmpb   $0xff,(%eax)
    jne    jump_154f3
    movl   $0xffffffff,0x1b0(%esp)
    jmp    jump_15619
  jump_154f3:
    testb  $0x1,0x4f3d(%edi)
    je     jump_1553e
    testb  $0x3,0x4f38(%edi)
    jne    jump_15619
    call   func_12618
    cmp    $0xffffffff,%eax
    jne    jump_15619
    mov    0x4f44(%edi),%eax
    movb   $0xff,(%eax)
    andl   $0xff,0x4f3c(%edi)
    mov    0x1b0(%esp),%eax
    add    $0x1c4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_1553e:
    lea    0x4f8c(%edi),%edx
    call   func_12618
    lea    0x4f80(%edi),%eax
    push   $0x42480000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_15619
    mov    $0x1,%edx
    mov    0x1b4(%esp),%ecx
    mov    0x4f48(%edi),%eax
    mov    0x1ac(%esp),%ebx
    mov    %dx,0x1bc(%esp)
    mov    0x1(%eax),%eax
    mov    0x54(%ecx),%ecx
    mov    0x4a(%ebx),%ebx
    sar    $0x10,%ecx
    xor    %edx,%edx
    mov    $0x4,%esi
    call   func_4b7a0
    test   $0x4,%al
    je     jump_155c2
    mov    $0x5,%ebx
    mov    0x4f48(%edi),%eax
    mov    %bx,0x1bc(%esp)
    mov    0x33(%eax),%bh
    or     $0x8,%bh
    mov    $0x5,%esi
    mov    %bh,0x33(%eax)
    jmp    jump_155ea
  jump_155c2:
    test   $0x2,%al
    je     jump_155ea
    mov    0x1bd(%esp),%eax
    sar    $0x18,%eax
    mov    0x1a92(%edi,%eax,4),%esi
    mov    0x1bd0(%edi,%eax,4),%ax
    sar    $0x10,%esi
    mov    %ax,0x1bc(%esp)
  jump_155ea:
    mov    %edi,%eax
    mov    0x4f44(%edi),%edx
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    %si,%bx
    call   func_1826c
    mov    0x1ba(%esp),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
    orb    $0x1,0x4f3d(%edi)
  jump_15619:
    mov    0x1b0(%esp),%eax
    add    $0x1c4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15630:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%edi
    mov    %edx,%esi
    mov    0x4f40(%eax),%eax
    cmp    $0x9,%eax
    jle    jump_1564c
    mov    $0x12,%edx
    sub    %eax,%edx
    mov    %edx,%eax
  jump_1564c:
    test   %eax,%eax
    jge    jump_15654
    xor    %eax,%eax
    jmp    jump_1565e
  jump_15654:
    cmp    $0x9,%eax
    jle    jump_1565e
    mov    $0x9,%eax
  jump_1565e:
    mov    %eax,%edx
    shl    $0x8,%edx
    mov    data_d8d8f,%eax
    add    $0xb00,%edx
    add    %edx,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    push   $0x1
    mov    0xf(%esi),%edx
    push   %edx
    push   %edx
    push   $0x0
    mov    0x27(%esi),%eax
    push   $data_d8da0
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x7(%esi),%ecx
    xor    %edx,%edx
    push   %ecx
    mov    0x5(%esi),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    add    $0x4,%edi
    push   %edi
    call   func_5d631
    add    $0x28,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_156c0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    mov    %edx,0x10(%esp)
    mov    %ebx,%edi
    xor    %edx,%edx
    movl   $0x3f800000,0xb(%eax)
    mov    0x10(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    %eax,%ebp
    call   func_61223
    xor    %edx,%edx
    mov    %di,%dx
    add    $0x4,%esp
    cmp    %eax,%edx
    jl     jump_1570c
    mov    $0x38,%ebx
    mov    $data_90378,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1570c:
    mov    %esp,%eax
    push   %eax
    push   $0x0
    push   $0x0
    xor    %eax,%eax
    push   $0x0
    mov    %di,%ax
    push   %eax
    push   %ebp
    call   func_5e1dd
    add    $0x18,%esp
    mov    (%esp),%edx
    cmp    $0xf4240,%edx
    jg     jump_15737
    cmp    $0xfff0bdc0,%edx
    jge    jump_15745
  jump_15737:
    mov    $0x10,%ebx
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_76ec0
  jump_15745:
    mov    (%esp),%eax
    mov    %ax,0x13(%esi)
    mov    0x4(%esp),%eax
    mov    %ax,0x15(%esi)
    mov    0x8(%esp),%eax
    mov    %ax,0x17(%esi)
    mov    0xc(%esp),%eax
    mov    %ax,0x19(%esi)
    mov    0x10(%esp),%eax
    mov    %ax,0x5(%esi)
    xor    %eax,%eax
    mov    %di,%ax
    mov    %eax,0x7(%esi)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1577c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_15788
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_15788:
/*----------------------------------------------------------------*/
    movl   $0x0,0x800(%eax)
    ret


/*----------------------------------------------------------------*/
func_15794:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    0x800(%eax),%ebx
    cmp    $0x200,%ebx
    jge    jump_157b0
    test   %edx,%edx
    je     jump_157b0
    mov    %edx,(%eax,%ebx,4)
    incl   0x800(%eax)
  jump_157b0:
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_157b4:
/*----------------------------------------------------------------*/
    sub    $0x8,%esp
    mov    (%eax),%eax
    mov    0x2f(%eax),%eax
    mov    %eax,0x4(%esp)
    mov    (%edx),%eax
    mov    0x2f(%eax),%eax
    flds   0x4(%esp)
    mov    %eax,(%esp)
    xor    %edx,%edx
    fcomps (%esp)
    fnstsw %ax
    sahf
    jbe    jump_157dd
    mov    $0xffffffff,%edx
    jmp    jump_157e4
  jump_157dd:
    jae    jump_157e4
    mov    $0x1,%edx
  jump_157e4:
    mov    %edx,%eax
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_157ec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    $func_157b4,%ecx
    mov    $0x4,%ebx
    mov    0x800(%eax),%edx
    call   func_76f56
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15808:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x24,%esp
    mov    %edx,0x14(%esp)
    mov    %ebx,0x8(%esp)
    mov    0x800(%eax),%edi
    dec    %edi
    lea    0x0(,%edi,4),%esi
    add    %eax,%esi
    xor    %ebp,%ebp
    jmp    jump_1582e
  jump_1582a:
    dec    %edi
    sub    $0x4,%esi
  jump_1582e:
    movswl %di,%eax
    test   %eax,%eax
    jl     jump_1593c
    test   %esi,%esi
    jne    jump_1584e
    mov    $0x9e,%ebx
    mov    $data_90387,%edx
    mov    %ebp,%eax
    call   func_26198
  jump_1584e:
    mov    (%esi),%ecx
    cmpb   $0x9,(%ecx)
    jl     jump_15866
    mov    $0xa2,%ebx
    mov    $data_90396,%edx
    mov    %ebp,%eax
    call   func_26198
  jump_15866:
    mov    0x14(%esp),%ebx
    mov    0x25(%ecx),%edx
    mov    0x27(%ecx),%eax
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %ebx,%edx
    sub    0x8(%esp),%eax
    mov    (%ecx),%bl
    cmp    $0x5,%bl
    jne    jump_15897
    imul   %edx,%edx
    imul   %eax,%eax
    add    %edx,%eax
    cmp    $0x50,%eax
    jge    jump_1582a
    mov    %ecx,%eax
    jmp    jump_1593e
  jump_15897:
    cmp    $0x4,%bl
    je     jump_1582a
    mov    0xf(%ecx),%eax
    mov    %eax,(%esp)
    xor    %eax,%eax
    mov    %eax,0x4(%esp)
    fildll (%esp)
    fmuls  data_903a5
    fstps  0x10(%esp)
    filds  0x13(%ecx)
    fmuls  0x10(%esp)
    filds  0x27(%ecx)
    fstps  0xc(%esp)
    fadds  0xc(%esp)
    fildl  0x14(%esp)
    fstps  0x18(%esp)
    fcomps 0x18(%esp)
    fnstsw %ax
    sahf
    ja     jump_1582a
    filds  0x15(%ecx)
    fmuls  0x10(%esp)
    filds  0x29(%ecx)
    fstps  0x20(%esp)
    fadds  0x20(%esp)
    fildl  0x8(%esp)
    fstps  0x1c(%esp)
    fcomps 0x1c(%esp)
    fnstsw %ax
    sahf
    ja     jump_1582a
    filds  0x17(%ecx)
    fmuls  0x10(%esp)
    fadds  0xc(%esp)
    fcomps 0x18(%esp)
    fnstsw %ax
    sahf
    jb     jump_1582a
    filds  0x19(%ecx)
    fmuls  0x10(%esp)
    fadds  0x20(%esp)
    fcomps 0x1c(%esp)
    fnstsw %ax
    sahf
    jb     jump_1582a
    mov    %ecx,%eax
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_1593c:
    xor    %eax,%eax
  jump_1593e:
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_15948:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x54,%esp
    mov    %eax,0x8(%esp)
    mov    %edx,0x1c(%esp)
    mov    0x1c(%esp),%ebp
    xor    %edx,%edx
    mov    %eax,0x2c(%esp)
    mov    %dx,0x40(%esp)
    add    $0x4,%ebp
    jmp    jump_15cad
  jump_1596f:
    xor    %eax,%eax
  jump_15971:
    test   %eax,%eax
    je     jump_159c5
    mov    0x1f(%esi),%ebx
    mov    $0x72,%eax
    test   %ebx,%ebx
    je     jump_15986
    mov    $0x90,%eax
  jump_15986:
    cmpb   $0x6,(%esi)
    jne    jump_1599d
    mov    0x1c(%esp),%edx
    cmpb   $0x3,0xb7(%edx)
    jne    jump_1599d
    mov    $0xf3,%eax
  jump_1599d:
    push   %eax
    mov    0x27(%esi),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x2b(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x29(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   %ebp
    call   func_5c001
    add    $0x1c,%esp
  jump_159c5:
    mov    0x33(%esi),%al
    and    $0x8,%al
    movsbl %al,%eax
    test   %eax,%eax
    jne    jump_15b5a
    mov    0x33(%esi),%al
    and    $0x4,%al
    movsbl %al,%eax
    test   %eax,%eax
    je     jump_159f1
    mov    0x1c(%esp),%eax
    mov    %esi,%edx
    call   func_139e0
    jmp    jump_15b5a
  jump_159f1:
    xor    %edx,%edx
    mov    0x5(%esi),%dx
    cmp    $0xffff,%edx
    je     jump_15b5a
    cmpb   $0x8,(%esi)
    jne    jump_15b28
    mov    %eax,0x30(%esp)
    mov    0x1(%esi),%edi
    mov    %eax,0x24(%esp)
    mov    0x25(%esi),%edx
    mov    0x25(%edi),%eax
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %eax,%edx
    mov    %edx,%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,0xc(%esp)
    mov    0x25(%edi),%edx
    mov    0x25(%esi),%eax
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %edx,%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,0x28(%esp)
    mov    0xc(%esp),%eax
    mov    0x28(%esp),%ecx
    add    %ecx,%eax
    mov    %eax,0x14(%esp)
    je     jump_15a8b
    fildl  0x14(%esp)
    fdivrs data_903ad
    fildl  0x28(%esp)
    fmul   %st(1),%st
    fldl   data_903b1
    fxch   %st(1)
    fadd   %st(1),%st
    call   func_76e98
    fistpl 0x30(%esp)
    fildl  0xc(%esp)
    fmulp  %st,%st(2)
    faddp  %st,%st(1)
    call   func_76e98
    fistpl 0x24(%esp)
  jump_15a8b:
    push   $0x6a
    mov    0x27(%edi),%eax
    mov    0x28(%esp),%edx
    sar    $0x10,%eax
    push   $0x0
    add    %edx,%eax
    push   %eax
    mov    0x25(%edi),%eax
    mov    0x3c(%esp),%ebx
    sar    $0x10,%eax
    add    %ebx,%eax
    push   %eax
    mov    0x27(%esi),%eax
    sar    $0x10,%eax
    add    %edx,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    add    %ebx,%eax
    push   %eax
    push   %ebp
    call   func_5c001
    add    $0x1c,%esp
    mov    0x27(%edi),%eax
    push   $0x6a
    mov    0x28(%esp),%ebx
    sar    $0x10,%eax
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    mov    0x25(%edi),%eax
    mov    0x3c(%esp),%ecx
    sar    $0x10,%eax
    sub    %ecx,%eax
    push   %eax
    mov    0x27(%esi),%eax
    sar    $0x10,%eax
    sub    %ebx,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    sub    %ecx,%eax
    push   %eax
    push   %ebp
    call   func_5c001
    add    $0x1c,%esp
    push   $0x6d
    mov    0x27(%edi),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x27(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   %ebp
    call   func_5c001
    add    $0x1c,%esp
    jmp    jump_15b5a
  jump_15b28:
    push   %eax
    mov    0xf(%esi),%ecx
    push   %ecx
    push   %ecx
    push   %eax
    mov    0x27(%esi),%eax
    push   $data_d8da0
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x7(%esi),%eax
    push   %eax
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   %ebp
    call   func_5d631
    add    $0x28,%esp
  jump_15b5a:
    mov    0xf(%esi),%eax
    xor    %ecx,%ecx
    mov    %eax,(%esp)
    mov    %ecx,0x4(%esp)
    fildll (%esp)
    fmuls  data_903a9
    mov    (%esi),%ch
    fstps  0x20(%esp)
    cmp    $0x1,%ch
    jne    jump_15be9
    mov    0x1(%esi),%eax
    call   func_361b8
    cmp    $0xffffffff,%eax
    jne    jump_15be9
    filds  0x17(%esi)
    fmuls  0x20(%esp)
    fadds  data_903b9
    call   func_76e98
    fistpl 0x18(%esp)
    mov    0x18(%esp),%eax
    mov    %ax,0x48(%esp)
    mov    0x1(%esi),%eax
    mov    0x57(%eax),%al
    and    $0xff,%eax
    imul   $0x1ee,%eax,%eax
    mov    data_a2f74(%eax),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    push   %eax
    mov    0x4a(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    push   %eax
    mov    0x27(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   %ebp
    call   func_5f048
    add    $0x18,%esp
  jump_15be9:
    mov    0x1c(%esp),%eax
    cmp    0xb3(%eax),%esi
    jne    jump_15c98
    flds   0x20(%esp)
    filds  0x13(%esi)
    fmul   %st(1),%st
    filds  0x27(%esi)
    fxch   %st(1)
    fadd   %st(1),%st
    call   func_76e98
    fistpl 0x34(%esp)
    filds  0x15(%esi)
    fmul   %st(2),%st
    filds  0x29(%esi)
    fxch   %st(1)
    fadd   %st(1),%st
    call   func_76e98
    fistpl 0x38(%esp)
    filds  0x17(%esi)
    fmul   %st(3),%st
    faddp  %st,%st(2)
    fxch   %st(1)
    call   func_76e98
    fistpl 0x18(%esp)
    filds  0x19(%esi)
    fmulp  %st,%st(2)
    push   $0x0
    mov    0x38(%esp),%eax
    push   $0xf3
    mov    %ax,0x54(%esp)
    mov    0x40(%esp),%eax
    mov    0x52(%esp),%edx
    mov    %ax,0x44(%esp)
    mov    0x20(%esp),%eax
    faddp  %st,%st(1)
    mov    %ax,0x4c(%esp)
    call   func_76e98
    fistpl 0x3c(%esp)
    mov    0x3c(%esp),%eax
    sar    $0x10,%edx
    mov    %ax,0x58(%esp)
    mov    0x42(%esp),%ebx
    mov    0x56(%esp),%eax
    sar    $0x10,%ebx
    sar    $0x10,%eax
    mov    0x4a(%esp),%ecx
    push   %eax
    sar    $0x10,%ecx
    mov    %ebp,%eax
    call   func_2bb74
  jump_15c98:
    mov    0x40(%esp),%ebx
    mov    0x2c(%esp),%eax
    inc    %ebx
    add    $0x4,%eax
    mov    %bx,0x40(%esp)
    mov    %eax,0x2c(%esp)
  jump_15cad:
    mov    0x3e(%esp),%eax
    mov    0x8(%esp),%edx
    sar    $0x10,%eax
    cmp    0x800(%edx),%eax
    jge    jump_15d17
    mov    0x2c(%esp),%esi
    mov    (%esi),%esi
    cmpb   $0x4,(%esi)
    jne    jump_15cd8
    mov    0x1c(%esp),%eax
    cmpl   $0x0,0x504a(%eax)
    je     jump_15c98
  jump_15cd8:
    cmpb   $0xff,(%esi)
    je     jump_15c98
    cmpl   $0x0,0x23(%esi)
    je     jump_1596f
    mov    0x1c(%esp),%eax
    cmpl   $0x0,0x5042(%eax)
    jne    jump_15cfd
    cmpb   $0x6,(%esi)
    jne    jump_1596f
  jump_15cfd:
    mov    0x33(%esi),%al
    and    $0x2,%al
    movsbl %al,%eax
    test   %eax,%eax
    jne    jump_1596f
    mov    $0xffffffff,%eax
    jmp    jump_15971
  jump_15d17:
    add    $0x54,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15d20:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_15d2c
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_15d2c:
/*----------------------------------------------------------------*/
    movl   $0x0,0x1900(%eax)
    ret


/*----------------------------------------------------------------*/
func_15d38:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    mov    %edx,%esi
    mov    0x1900(%eax),%edx
    cmp    $0x40,%edx
    jge    jump_15d6c
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %edx,%eax
    shl    $0x2,%eax
    mov    $0x19,%ecx
    lea    (%ebx,%eax,1),%edi
    rep movsl %ds:(%esi),%es:(%edi)
    incl   0x1900(%ebx)
  jump_15d6c:
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15d74:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    mov    0x1900(%eax),%edx
    xor    %ecx,%ecx
    test   %edx,%edx
    jle    jump_15d9f
  jump_15d88:
    mov    %edi,%edx
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    %cx,%bx
    call   func_15da4
    inc    %ecx
    cmp    0x1900(%esi),%ecx
    jl     jump_15d88
  jump_15d9f:
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15da4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    xor    %edx,%edx
    mov    %bx,%dx
    cmp    0x1900(%eax),%edx
    jge    jump_15e17
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %edx,%eax
    shl    $0x2,%eax
    lea    (%ecx,%eax,1),%edx
    mov    0x60(%edx),%ecx
    test   %ecx,%ecx
    jl     jump_15df2
    cmp    $0x7,%ecx
    jge    jump_15df2
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    data_a2f74(,%eax,2),%al
    and    $0xff,%eax
    inc    %eax
    jmp    jump_15df4
  jump_15df2:
    xor    %eax,%eax
  jump_15df4:
    mov    %eax,%ecx
    shl    $0x8,%ecx
    mov    0x19be(%esi),%eax
    add    $0x1f00,%ecx
    add    %ecx,%eax
    push   %eax
    push   %edx
    push   $0x4
    add    $0x4,%esi
    push   %esi
    call   func_62da5
    add    $0x10,%esp
  jump_15e17:
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_15e1c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,(%esp)
    mov    %eax,%ebp
    xor    %ebx,%ebx
    mov    0x1900(%eax),%ecx
    mov    %ebx,0x4(%esp)
    test   %ecx,%ecx
    jle    jump_15ecb
    add    $0x4,%edx
    mov    %edx,0x8(%esp)
  jump_15e44:
    mov    0x60(%ebp),%eax
    test   %eax,%eax
    jl     jump_15e88
    cmp    $0x7,%eax
    jge    jump_15e88
    imul   $0x1ee,%eax,%eax
    mov    data_a2f74(%eax),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0xc(%esp)
    jmp    jump_15e90
  jump_15e6d:
    mov    0x4(%esp),%esi
    mov    (%esp),%edx
    add    $0x64,%ebp
    inc    %esi
    mov    0x1900(%edx),%edi
    mov    %esi,0x4(%esp)
    cmp    %edi,%esi
    jge    jump_15ecb
    jmp    jump_15e44
  jump_15e88:
    movl   $0x6d,0xc(%esp)
  jump_15e90:
    mov    %ebp,%esi
    xor    %edi,%edi
  jump_15e94:
    inc    %edi
    mov    %edi,%eax
    and    $0x3,%eax
    imul   $0x18,%eax,%eax
    mov    0xc(%esp),%edx
    push   %edx
    push   $0x0
    mov    0x4(%eax,%ebp,1),%ebx
    push   %ebx
    mov    (%eax,%ebp,1),%ecx
    push   %ecx
    mov    0x4(%esi),%eax
    push   %eax
    mov    (%esi),%edx
    push   %edx
    mov    0x20(%esp),%ebx
    push   %ebx
    add    $0x18,%esi
    call   func_5c001
    add    $0x1c,%esp
    cmp    $0x4,%edi
    jge    jump_15e6d
    jmp    jump_15e94
  jump_15ecb:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
  jump_15ed0:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15ed4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    call   func_2c830
    mov    $data_959d8,%ebx
    mov    $0x64,%edx
    add    $0xbe,%eax
    call   func_77394
    mov    $data_95a3c,%ebx
    mov    $0x64,%edx
    add    $0x4b0,%eax
    call   func_77394
    mov    $data_959d8,%ebx
    mov    $0x64,%edx
    add    $0xfa0,%eax
    call   func_77394
    add    $0x7fc,%eax
    movl   $0x0,(%eax)
    add    $0x14,%eax
    movl   $0x0,-0x10(%eax)
    movl   $0x0,-0xc(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    add    $0x18,%eax
    call   func_1577c
    add    $0x804,%eax
    call   func_1577c
    add    $0x804,%eax
    call   func_1577c
    add    $0x804,%eax
    call   func_15d20
    add    $0x1904,%eax
    call   func_1b4f0
    add    $0x98,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    sub    $0x18,%eax
    movl   $0x0,0x1c(%eax)
    movl   $0x0,0x20(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%edx
    movl   $0x3f800000,(%eax)
    movl   $0x0,(%edx)
    movl   $0x3f800000,0x4(%edx)
    movl   $0x0,0x8(%edx)
    lea    0x18(%eax),%edx
    movl   $0x0,(%edx)
    mov    $data_959d8,%ebx
    movl   $0x0,0x4(%edx)
    add    $0x96,%eax
    movl   $0x3f800000,0x8(%edx)
    mov    $0xf,%edx
    call   func_77394
    lea    -0x4f80(%eax),%edx
    mov    %edx,%eax
    movl   $data_95a50,0xa7(%edx)
    call   func_16120
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1604c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_1606b
    mov    $data_95a28,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_1606b:
    mov    0x19be(%eax),%edx
    movl   $data_95a50,0xa7(%eax)
    test   %edx,%edx
    je     jump_16086
    mov    %edx,%eax
    call   func_2627c
  jump_16086:
    mov    0x19be(%ebx),%eax
    call   func_76d5c
    xor    %edx,%edx
    lea    0x4f80(%ebx),%eax
    call   func_1a9c0
    sub    $0x13a,%eax
    xor    %edx,%edx
    call   func_1b66c
    sub    $0x1904,%eax
    xor    %edx,%edx
    call   func_15d2c
    sub    $0x804,%eax
    xor    %edx,%edx
    call   func_15788
    sub    $0x804,%eax
    xor    %edx,%edx
    call   func_15788
    sub    $0x804,%eax
    xor    %edx,%edx
    call   func_15788
    sub    $0x828,%eax
    xor    %edx,%edx
    call   func_1a9e0
    sub    $0xfa0,%eax
    xor    %edx,%edx
    call   func_1aa00
    sub    $0x4b0,%eax
    xor    %edx,%edx
    call   func_1a9e0
    mov    $0x1,%edx
    sub    $0xbe,%eax
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_16119
    call   func_76d64
  jump_16119:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_16120:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x114,%esp
    mov    %eax,%ebp
    movl   $0x0,0xab(%eax)
    movl   $0x0,0x1d2a(%eax)
    lea    0x190(%eax),%edx
    movl   $0x0,0x19be(%eax)
  jump_16152:
    add    $0x4,%eax
    movl   $0x0,0x137a(%eax)
    cmp    %edx,%eax
    jne    jump_16152
    lea    0x1d1e(%ebp),%eax
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,0xb3(%ebp)
    movl   $0x0,0xaf(%ebp)
    movb   $0x0,0xb7(%ebp)
    movb   $0x0,0x4f2e(%ebp)
    movl   $0x2,0xb8(%ebp)
    movw   $0xffff,0xbc(%ebp)
    movl   $0x0,0x4f2f(%ebp)
    movl   $0x0,0x4f33(%ebp)
    movl   $0xffffffff,0x503a(%ebp)
    movl   $0xffffffff,0x5042(%ebp)
    xor    %edx,%edx
    movl   $0xffffffff,0x5046(%ebp)
    mov    $data_903bd,%eax
    movl   $0xffffffff,0x504a(%ebp)
    call   func_1bb10
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_1620f
    mov    $0x1e4,%ebx
    mov    $data_903c7,%edx
    call   func_26198
  jump_1620f:
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2fe58
    lea    0x104(%esp),%eax
    push   %eax
    push   $data_903d6
    lea    0x8(%esp),%eax
    push   %eax
    call   func_7742d
    add    $0xc,%esp
    mov    0x104(%esp),%eax
    mov    %eax,0x1a8e(%ebp)
    cmp    $0x64,%eax
    jl     jump_16255
    mov    $0x1ea,%ebx
    mov    $data_903d9,%edx
    xor    %eax,%eax
    call   func_26198
  jump_16255:
    mov    0x1a8e(%ebp),%ebx
    xor    %edi,%edi
    test   %ebx,%ebx
    jle    jump_162b1
    mov    %ebp,%esi
  jump_16263:
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2fe58
    lea    0xc8(%esp),%eax
    push   %eax
    push   $data_903e8
    lea    0x8(%esp),%eax
    push   %eax
    mov    $0xffffffff,%ebx
    call   func_7742d
    add    $0xc,%esp
    lea    0xc8(%esp),%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %ax,0x19c6(%esi)
    inc    %edi
    mov    0x1a8e(%ebp),%eax
    add    $0x2,%esi
    cmp    %eax,%edi
    jl     jump_16263
  jump_162b1:
    mov    %ebp,%ebx
    lea    0x13c(%ebp),%esi
  jump_162b9:
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2fe58
    lea    0x110(%esp),%eax
    push   %eax
    lea    0x110(%esp),%eax
    push   %eax
    lea    0x110(%esp),%eax
    push   %eax
    lea    0x110(%esp),%eax
    push   %eax
    push   $data_903eb
    lea    0x14(%esp),%eax
    push   %eax
    call   func_7742d
    add    $0x18,%esp
    mov    0x104(%esp),%eax
    mov    %ax,0x1a92(%ebx)
    mov    0x108(%esp),%eax
    mov    %ax,0x1a94(%ebx)
    mov    0x10c(%esp),%eax
    mov    %ax,0x1bce(%ebx)
    add    $0x4,%ebx
    mov    0x110(%esp),%eax
    mov    %ax,0x1bcc(%ebx)
    cmp    %esi,%ebx
    jne    jump_162b9
    mov    %ecx,%eax
    call   func_7744e
    add    $0x114,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_16348:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,0x10(%esp)
    mov    %ecx,%edi
    mov    %edx,%eax
    cmp    $0x3a,%dx
    jb     jump_16c7b
    jbe    jump_16963
    cmp    $0x4c,%dx
    jb     jump_16c3d
    jbe    jump_16a70
    cmp    $0x52,%dx
    jb     jump_16c1d
    jbe    jump_16abe
    cmp    $0x53,%dx
    jbe    jump_16ad4
    cmp    $0x54,%dx
    je     jump_16b88
  jump_1639e:
    mov    0x10(%esp),%ebx
    movswl %si,%edx
    mov    %edi,%ecx
    mov    %ebp,%eax
    call   func_2f424
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_163b5:
    cmpb   $0x4,0xb7(%ebp)
    jne    jump_163cc
    movl   $0xffffffff,0x5036(%ebp)
  jump_163cc:
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_163d5:
    flds   data_12fc1c
    fcompl data_9043e
    fnstsw %ax
    sahf
    jbe    jump_163cc
    flds   data_12fc1c
    fld    %st(0)
    fmull  data_90446
    fstp   %st(1)
    fstps  data_12fc1c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16405:
    flds   data_12fc1c
    fcomps data_90432
    fnstsw %ax
    sahf
    jae    jump_163cc
    flds   data_12fc1c
    fmull  data_90436
    fstps  data_12fc1c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16431:
    cmp    $0xd,%ecx
    jb     jump_16455
    jbe    jump_16405
    cmp    $0x1c,%ecx
    jb     jump_163cc
    jbe    jump_163b5
    cmp    $0x39,%ecx
    je     jump_163b5
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16455:
    cmp    $0xc,%ecx
    je     jump_163d5
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16467:
    mov    $data_903f7,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,0xab(%ebp)
    xor    %eax,%eax
    push   %eax
    xor    %ecx,%ecx
    mov    $0x3a,%ebx
    push   %eax
    mov    0x41(%ebp),%edx
    mov    $data_10ae70,%eax
    call   func_56400
    mov    %ebp,%eax
    mov    0x10(%esp),%ebx
    call   func_186b8
    mov    %edi,%ecx
    movswl %si,%edx
    mov    %ebp,%eax
    call   func_2f424
    movl   $0x0,0x4f2f(%ebp)
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_164c0:
    cmpb   $0x4,0xb7(%ebp)
    jne    jump_164d5
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_164d5:
    cmp    0x8(%ebp),%ebx
    jl     jump_163cc
    cmp    0x10(%ebp),%ebx
    jg     jump_163cc
    cmp    0xc(%ebp),%ecx
    jl     jump_163cc
    cmp    0x14(%ebp),%edi
    jg     jump_163cc
    mov    $data_10914c,%eax
    xor    %edx,%edx
    call   func_4fb90
    mov    0xaf(%ebp),%esi
    test   %esi,%esi
    je     jump_16526
    mov    $0x1,%ecx
    mov    0x10(%esp),%edx
    mov    %edi,%ebx
    mov    %ebp,%eax
    call   func_16d6c
    jmp    jump_165d5
  jump_16526:
    mov    0xb7(%ebp),%ah
    cmp    $0x2,%ah
    jne    jump_1656d
    xor    %eax,%eax
    mov    0xbc(%ebp),%ax
    cmp    $0xffff,%eax
    jge    jump_16564
    mov    0x10(%esp),%edx
    mov    %edi,%ebx
    mov    0xc(%ebp),%eax
    mov    0x8(%ebp),%ecx
    sub    %eax,%ebx
    sub    %ecx,%edx
    mov    %ebp,%eax
    movb   $0x3,0xb7(%ebp)
    call   func_171d0
    jmp    jump_165d5
  jump_16564:
    movb   $0x0,0xb7(%ebp)
    jmp    jump_165d5
  jump_1656d:
    cmp    $0x3,%ah
    jne    jump_165b0
    mov    $0x5,%ecx
    mov    $0x326,%ebx
    lea    0x1d0a(%ebp),%eax
    mov    0xab(%ebp),%edx
    movb   $0x0,0xb7(%ebp)
    push   %eax
    mov    0x41(%edx),%edx
    mov    $data_10ae70,%eax
    call   func_56d30
    mov    %ebp,%eax
    mov    %esi,0xb3(%ebp)
    call   func_187ec
    xor    %edx,%edx
    mov    %ebp,%eax
    jmp    jump_165d9
  jump_165b0:
    test   %ah,%ah
    jne    jump_165de
    mov    $0x320,%ebx
    mov    $data_10ae70,%eax
    push   %esi
    mov    0xab(%ebp),%edx
    mov    %esi,0xb3(%ebp)
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_56d30
  jump_165d5:
    mov    %ebp,%eax
    xor    %edx,%edx
  jump_165d9:
    call   func_18c2c
  jump_165de:
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_165ea:
    cmp    0x8(%ebp),%ebx
    jl     jump_163cc
    cmp    0x10(%ebp),%ebx
    jg     jump_163cc
    cmp    0xc(%ebp),%edi
    jl     jump_163cc
    cmp    0x14(%ebp),%edi
    jg     jump_163cc
    mov    $data_10914c,%eax
    xor    %edx,%edx
    call   func_4fb90
    mov    0xaf(%ebp),%ebx
    test   %ebx,%ebx
    je     jump_16635
    mov    0x10(%esp),%edx
    mov    %edi,%ebx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    call   func_16d6c
    jmp    jump_16666
  jump_16635:
    cmpl   $0x0,0xb3(%ebp)
    je     jump_16666
    mov    $data_10ae70,%eax
    push   %ebx
    mov    0xab(%ebp),%edx
    xor    %ecx,%ecx
    mov    %ebx,0xb3(%ebp)
    mov    $0x320,%ebx
    mov    0x41(%edx),%edx
    call   func_56d30
    movb   $0x0,0xb7(%ebp)
  jump_16666:
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_18c2c
    mov    %ebp,%eax
    call   func_17260
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16682:
    cmpb   $0x4,0xb7(%ebp)
    je     jump_163cc
    mov    %ebx,%eax
    mov    0x8(%ebp),%ebx
    cmp    %ebx,%eax
    jl     jump_166a9
    cmp    0x10(%ebp),%eax
    jg     jump_166a9
    mov    0xc(%ebp),%esi
    cmp    %esi,%edi
    jl     jump_166a9
    cmp    0x14(%ebp),%edi
    jle    jump_166cf
  jump_166a9:
    mov    %ebp,%eax
    movl   $0x0,0xaf(%ebp)
    xor    %edx,%edx
    movl   $0x49742400,0x1d0e(%ebp)
    call   func_18c2c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_166cf:
    cmpl   $0x0,0x4f2f(%ebp)
    jne    jump_163cc
    mov    0x10(%esp),%ecx
    mov    %ebp,%eax
    sub    %esi,%edi
    sub    %ebx,%ecx
    mov    %edi,%ebx
    mov    %ecx,%edx
    call   func_17204
    cmpl   $0x0,0xaf(%ebp)
    jne    jump_16720
    mov    0xb7(%ebp),%ah
    cmp    $0x2,%ah
    jne    jump_16710
    mov    %edi,%ebx
    mov    %ecx,%edx
    mov    %ebp,%eax
    call   func_16fc0
    jmp    jump_16720
  jump_16710:
    cmp    $0x3,%ah
    jne    jump_16720
    mov    %edi,%ebx
    mov    %ecx,%edx
    mov    %ebp,%eax
    call   func_171d0
  jump_16720:
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_18c2c
    cmpb   $0x1,0xb7(%ebp)
    jne    jump_163cc
    mov    0xaf(%ebp),%edx
    test   %edx,%edx
    je     jump_163cc
    mov    (%edx),%bl
    xor    %al,%al
    cmp    $0x2,%bl
    jne    jump_16751
    mov    $0x3,%al
    jmp    jump_16761
  jump_16751:
    cmp    $0x3,%bl
    jne    jump_1675a
    mov    $0x4,%al
    jmp    jump_16761
  jump_1675a:
    cmp    $0x1,%bl
    jne    jump_16761
    mov    $0x2,%al
  jump_16761:
    mov    0xaf(%ebp),%edx
    movsbl %al,%ecx
    mov    $data_10ae70,%eax
    mov    0x1(%edx),%ebx
    mov    0xab(%ebp),%edx
    push   %ebx
    mov    $0x322,%ebx
    mov    0x41(%edx),%edx
    mov    $0x6b,%edi
    call   func_56d30
    cmp    $0xffffffff,%eax
    jne    jump_16795
    mov    $0xf3,%edi
  jump_16795:
    mov    0xaf(%ebp),%eax
    push   %edi
    mov    0x27(%eax),%edx
    push   $0x0
    sar    $0x10,%edx
    mov    0x25(%eax),%eax
    push   %edx
    sar    $0x10,%eax
    push   %eax
    mov    0xb3(%ebp),%eax
    mov    0x27(%eax),%edx
    sar    $0x10,%edx
    mov    0x25(%eax),%eax
    push   %edx
    sar    $0x10,%eax
    push   %eax
    add    $0x4,%ebp
    push   %ebp
    call   func_5c001
    add    $0x1c,%esp
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_167d5:
    cmpb   $0x4,0xb7(%ebp)
    je     jump_163cc
    mov    %ebp,%eax
    call   func_187ec
    xor    %edx,%edx
    mov    %ebp,%eax
    call   func_18c2c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_167fb:
    cmpl   $0xffffffff,0x39(%ebp)
    je     jump_16812
    mov    $0x2e5,%ebx
    mov    $data_90405,%edx
    xor    %eax,%eax
    call   func_26198
  jump_16812:
    movswl %si,%edx
    xor    %eax,%eax
    cmp    $0x32,%edx
    jne    jump_16864
    mov    0x4f2f(%ebp),%ah
    test   $0x1,%ah
    je     jump_1684f
    test   $0x2,%ah
    je     jump_16839
    mov    %ah,%cl
    and    $0xfd,%cl
    mov    %cl,0x4f2f(%ebp)
    jmp    jump_1685f
  jump_16839:
    mov    %ah,%bh
    xor    %edx,%edx
    and    $0xfe,%bh
    mov    %ebp,%eax
    mov    %bh,0x4f2f(%ebp)
    call   func_18c2c
    jmp    jump_1685f
  jump_1684f:
    mov    %ah,%dl
    or     $0x1,%dl
    mov    %dl,%dh
    and    $0xfd,%dh
    mov    %dh,0x4f2f(%ebp)
  jump_1685f:
    mov    $0x3,%eax
  jump_16864:
    movswl %si,%edx
    cmp    $0x33,%edx
    jne    jump_168ae
    mov    0x4f2f(%ebp),%ch
    test   $0x1,%ch
    je     jump_1689f
    test   $0x2,%ch
    je     jump_16892
    mov    %ch,%dh
    and    $0xfe,%dh
    mov    %ebp,%eax
    mov    %dh,0x4f2f(%ebp)
    xor    %edx,%edx
    call   func_18c2c
    jmp    jump_168a9
  jump_16892:
    mov    %ch,%dl
    or     $0x2,%dl
    mov    %dl,0x4f2f(%ebp)
    jmp    jump_168a9
  jump_1689f:
    mov    %ch,%al
    or     $0x3,%al
    mov    %al,0x4f2f(%ebp)
  jump_168a9:
    mov    $0x3,%eax
  jump_168ae:
    movswl %si,%edx
    cmp    $0x36,%edx
    jne    jump_168f4
    mov    0x4f2f(%ebp),%bl
    test   $0x4,%bl
    je     jump_168df
    test   $0x8,%bl
    je     jump_168d3
    mov    %bl,%ah
    and    $0xf7,%ah
    mov    %ah,0x4f2f(%ebp)
    jmp    jump_168ef
  jump_168d3:
    mov    %bl,%al
    and    $0xfb,%al
    mov    %al,0x4f2f(%ebp)
    jmp    jump_168ef
  jump_168df:
    mov    %bl,%bh
    or     $0x4,%bh
    mov    %bh,%cl
    and    $0xf7,%cl
    mov    %cl,0x4f2f(%ebp)
  jump_168ef:
    mov    $0xc,%eax
  jump_168f4:
    movswl %si,%edx
    cmp    $0x37,%edx
    jne    jump_16936
    mov    0x4f2f(%ebp),%dl
    test   $0x4,%dl
    je     jump_16926
    test   $0x8,%dl
    je     jump_16919
    mov    %dl,%cl
    and    $0xfb,%cl
    mov    %cl,0x4f2f(%ebp)
    jmp    jump_16931
  jump_16919:
    mov    %dl,%bh
    or     $0x8,%bh
    mov    %bh,0x4f2f(%ebp)
    jmp    jump_16931
  jump_16926:
    mov    %dl,%dh
    or     $0xc,%dh
    mov    %dh,0x4f2f(%ebp)
  jump_16931:
    mov    $0xc,%eax
  jump_16936:
    cmpl   $0x4,0x10(%esp)
    jne    jump_16957
    push   $0x0
    mov    $0x3b,%ecx
    mov    $0x1,%ebx
    push   %eax
    mov    0x41(%ebp),%edx
    mov    $data_10ae70,%eax
    call   func_56728
  jump_16957:
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16963:
    mov    0x4f2f(%ebp),%bl
    test   $0x1,%bl
    je     jump_16986
    test   $0x2,%bl
    je     jump_1697a
    mov    $0x2,%edx
    jmp    jump_1697f
  jump_1697a:
    mov    $0xfffffffe,%edx
  jump_1697f:
    mov    %ebp,%eax
    call   func_17e50
  jump_16986:
    mov    0x4f2f(%ebp),%cl
    test   $0x4,%cl
    je     jump_169a9
    test   $0x8,%cl
    je     jump_1699d
    mov    $0xa,%edx
    jmp    jump_169a2
  jump_1699d:
    mov    $0xfffffff6,%edx
  jump_169a2:
    mov    %ebp,%eax
    call   func_182b8
  jump_169a9:
    testb  $0x5,0x4f2f(%ebp)
    je     jump_163cc
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_18c2c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_169c8:
    mov    %ebx,%eax
    mov    0x4f2f(%ebp),%edi
    not    %eax
    and    %eax,%edi
    mov    0x10(%esp),%dh
    mov    %edi,0x4f2f(%ebp)
    test   $0x1,%dh
    je     jump_169ec
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_18c2c
  jump_169ec:
    mov    $0x3b,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%ebp),%edx
    call   func_567bc
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16a0a:
    cmp    $0x1,%ebx
    jl     jump_163cc
    mov    data_d3660,%eax
    mov    0x58(%eax),%edx
    sar    $0x10,%edx
    cmp    %ebx,%edx
    jl     jump_163cc
    mov    %ebx,%edx
    mov    $0x1,%ecx
    mov    0x42(%eax,%edx,4),%eax
    mov    $0x11,%ebx
    mov    %eax,data_d3664
    mov    %ecx,%edx
    mov    $data_10ae70,%eax
    call   func_56b60
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16a50:
    mov    0x503a(%ebp),%esi
    mov    %ebp,%eax
    not    %esi
    xor    %edx,%edx
    mov    %esi,0x503a(%ebp)
    call   func_18c2c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16a70:
    mov    0x5042(%ebp),%eax
    mov    %eax,%ecx
    not    %ecx
    xor    %edx,%edx
    mov    %ecx,0x5046(%ebp)
    mov    %ebp,%eax
    mov    %ecx,0x5042(%ebp)
    call   func_18c2c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16a98:
    mov    %ebp,%eax
    movl   $0x0,0x4f2f(%ebp)
    call   func_17f54
    xor    %edx,%edx
    mov    %ebp,%eax
    call   func_18c2c
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16abe:
    mov    0x10(%esp),%edx
    mov    %ecx,%ebx
    mov    %ebp,%eax
    call   func_126f8
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16ad4:
    mov    0xab(%ebp),%esi
    lea    0x8(%esp),%edi
    lea    0xab(%esi),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    cmpb   $0x0,0x8(%esp)
    jne    jump_16afe
    mov    $0x39a,%ebx
    mov    $data_90414,%edx
    xor    %eax,%eax
    call   func_26198
  jump_16afe:
    mov    0x9(%esp),%edx
    mov    %ebp,%eax
    call   func_12ae4
    mov    %eax,0xb3(%ebp)
    mov    0x25(%eax),%edx
    sar    $0x10,%edx
    mov    %eax,%ebx
    test   %edx,%edx
    jl     jump_16b39
    mov    0x27(%eax),%ebx
    sar    $0x10,%ebx
    test   %ebx,%ebx
    jl     jump_16b39
    mov    0x10(%ebp),%eax
    sub    0x8(%ebp),%eax
    cmp    %eax,%edx
    jg     jump_16b39
    mov    0x14(%ebp),%eax
    sub    0xc(%ebp),%eax
    cmp    %eax,%ebx
    jle    jump_16b46
  jump_16b39:
    mov    %ebp,%eax
    mov    0xb3(%ebp),%edx
    call   func_17e88
  jump_16b46:
    mov    0xb3(%ebp),%eax
    cmpb   $0x2,(%eax)
    jne    jump_16b76
    mov    0x1(%eax),%eax
    xor    %edx,%edx
    mov    0x54(%eax),%ebx
    mov    data_104bea,%dl
    sar    $0x10,%ebx
    cmp    %edx,%ebx
    jne    jump_16b76
    cmpl   $0x0,0x88(%eax)
    jle    jump_16b76
    movb   $0x2,0xb7(%ebp)
  jump_16b76:
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_18c2c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16b88:
    mov    %ebp,%eax
    call   func_172b0
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16b98:
    mov    data_96bac,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_10ae74(,%eax,4),%eax
    test   %eax,%eax
    jne    jump_16bc1
    mov    $0x3b7,%ebx
    mov    $data_90423,%edx
    call   func_26198
  jump_16bc1:
    mov    %ebp,%eax
    call   func_17260
    push   $0x0
    mov    $0x8,%ecx
    mov    $0x4,%ebx
    push   $0x0
    mov    $data_10ae70,%eax
    mov    0x41(%ebp),%edx
    call   func_56728
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16bef:
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_5a270
    mov    $0x8,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%ebp),%edx
    call   func_567bc
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16c1d:
    cmp    $0x50,%dx
    jb     jump_1639e
    jbe    jump_16a0a
    movb   $0x1,0xb7(%ebp)
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16c3d:
    cmp    $0x47,%dx
    jb     jump_16c62
    jbe    jump_16a98
    cmp    $0x4a,%dx
    jb     jump_1639e
    jbe    jump_16a50
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16c62:
    cmp    $0x3b,%dx
    jbe    jump_169c8
    cmp    $0x46,%dx
    je     jump_163cc
    jmp    jump_1639e
  jump_16c7b:
    cmp    $0x6,%dx
    jb     jump_16cd9
    jbe    jump_16bef
    cmp    $0xd,%dx
    jb     jump_16cc0
    jbe    jump_167d5
    cmp    $0x32,%dx
    jb     jump_1639e
    cmp    $0x33,%dx
    jbe    jump_167fb
    cmp    $0x36,%dx
    jb     jump_1639e
    cmp    $0x37,%dx
    jbe    jump_167fb
    jmp    jump_1639e
  jump_16cc0:
    cmp    $0x7,%dx
    jbe    jump_16b98
    cmp    $0x8,%dx
    je     jump_16682
    jmp    jump_1639e
  jump_16cd9:
    cmp    $0x3,%dx
    jb     jump_16d12
    jbe    jump_16431
    cmp    $0x4,%dx
    jbe    jump_164c0
    cmpb   $0x4,0xb7(%ebp)
    jne    jump_165ea
    mov    $0xffffffff,%eax
    movl   $0xffffffff,0x5036(%ebp)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16d12:
    cmp    $0x1,%dx
    jb     jump_1639e
    jbe    jump_16467
    cmpb   $0x4,0xb7(%ebp)
    jne    jump_16d38
    mov    0xab(%ebp),%eax
    xor    %edx,%edx
    call   func_12238
  jump_16d38:
    mov    $0xffffffff,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%ebp),%edx
    call   func_564c0
    mov    %edi,%ecx
    mov    %ebp,%eax
    mov    0x10(%esp),%ebx
    call   func_185cc
    movswl %si,%edx
    mov    %ebp,%eax
    call   func_2f424
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_16d6c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    cmpl   $0x0,0xaf(%eax)
    jne    jump_16d8b
    mov    $0x3d7,%ebx
    mov    $data_9044e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_16d8b:
    xor    %ebp,%ebp
    test   %ecx,%ecx
    jne    jump_16da3
    mov    %esi,%eax
    mov    0xaf(%esi),%edx
    call   func_17e88
    jmp    jump_16f6f
  jump_16da3:
    mov    0xb7(%esi),%ah
    cmp    $0x1,%ah
    jne    jump_16e3e
    mov    0xaf(%esi),%edi
    mov    (%edi),%bh
    xor    %al,%al
    cmp    $0x2,%bh
    jne    jump_16dc5
    mov    $0x3,%al
    jmp    jump_16dd4
  jump_16dc5:
    cmp    %ah,%bh
    jne    jump_16dcd
    mov    $0x2,%al
    jmp    jump_16dd4
  jump_16dcd:
    cmp    $0x3,%bh
    jne    jump_16dd4
    mov    $0x4,%al
  jump_16dd4:
    movsbl %al,%edi
    mov    0xaf(%esi),%edx
    mov    $data_10ae70,%eax
    mov    %edi,%ecx
    mov    0x1(%edx),%ebx
    mov    0xab(%esi),%edx
    push   %ebx
    mov    $0x322,%ebx
    mov    0x41(%edx),%edx
    call   func_56d30
    cmp    $0xffffffff,%eax
    jne    jump_16f6f
    movb   $0x0,0xb7(%esi)
    mov    0xaf(%esi),%eax
    mov    0xab(%esi),%edx
    mov    $0x326,%ebx
    mov    0x1(%eax),%ecx
    mov    0x41(%edx),%edx
    push   %ecx
    mov    $data_10ae70,%eax
    mov    %edi,%ecx
    call   func_56d30
    movl   $0x0,0xb3(%esi)
    jmp    jump_16f6f
  jump_16e3e:
    mov    0xaf(%esi),%eax
    mov    (%eax),%dl
    cmp    $0x2,%dl
    jne    jump_16e95
    cmpb   $0x0,0xb7(%esi)
    jne    jump_16f6f
    mov    %eax,0xb3(%esi)
    mov    0x1(%eax),%eax
    xor    %edx,%edx
    mov    0x54(%eax),%ecx
    mov    data_104bea,%dl
    sar    $0x10,%ecx
    mov    $0xffffffff,%ebp
    cmp    %edx,%ecx
    jne    jump_16f6f
    cmpl   $0x0,0x88(%eax)
    jle    jump_16f6f
    movb   $0x2,0xb7(%esi)
    jmp    jump_16f6f
  jump_16e95:
    cmp    $0x1,%dl
    jne    jump_16f23
    mov    0xb7(%esi),%ch
    cmp    $0x2,%ch
    je     jump_16eae
    cmp    $0x3,%ch
    jne    jump_16edc
  jump_16eae:
    movb   $0x0,0xb7(%esi)
    mov    0xaf(%esi),%eax
    mov    0xab(%esi),%edx
    mov    $0x326,%ebx
    mov    0x1(%eax),%ecx
    mov    0x41(%edx),%edx
    push   %ecx
    mov    $data_10ae70,%eax
    mov    $0x2,%ecx
    jmp    jump_16f5a
  jump_16edc:
    mov    0xb3(%esi),%ebx
    cmp    %ebx,%eax
    jne    jump_16f10
    test   %ch,%ch
    jne    jump_16f10
    mov    $0x1,%ecx
    mov    0x1(%ebx),%eax
    mov    $0x11,%ebx
    mov    %eax,data_d3664
    mov    %ecx,%edx
    mov    $data_10ae70,%eax
    mov    %ebp,0xaf(%esi)
    call   func_56b60
    jmp    jump_16f6f
  jump_16f10:
    mov    0xaf(%esi),%eax
    mov    $0xffffffff,%ebp
    mov    %eax,0xb3(%esi)
    jmp    jump_16f6f
  jump_16f23:
    cmp    $0x3,%dl
    jne    jump_16f6f
    mov    0xb7(%esi),%bh
    mov    0x1(%eax),%eax
    cmp    $0x2,%bh
    je     jump_16f3a
    cmp    %dl,%bh
    jne    jump_16f6f
  jump_16f3a:
    mov    $0x4,%ecx
    mov    $0x326,%ebx
    push   %eax
    mov    0xab(%esi),%edx
    movb   $0x0,0xb7(%esi)
    mov    $data_10ae70,%eax
    mov    0x41(%edx),%edx
  jump_16f5a:
    call   func_56d30
    mov    %esi,%eax
    call   func_187ec
    xor    %edx,%edx
    mov    %esi,%eax
    call   func_18c2c
  jump_16f6f:
    cmp    $0xffffffff,%ebp
    jne    jump_16fb3
    mov    0xb3(%esi),%edi
    xor    %al,%al
    mov    (%edi),%ah
    cmp    $0x2,%ah
    jne    jump_16f87
    mov    $0x3,%al
    jmp    jump_16f8e
  jump_16f87:
    cmp    $0x1,%ah
    jne    jump_16f8e
    mov    $0x2,%al
  jump_16f8e:
    mov    $0x320,%ebx
    mov    0xb3(%esi),%edx
    movsbl %al,%ecx
    mov    0x1(%edx),%edi
    mov    0xab(%esi),%edx
    push   %edi
    mov    $data_10ae70,%eax
    mov    0x41(%edx),%edx
    call   func_56d30
  jump_16fb3:
    mov    %esi,%eax
    call   func_17260
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_16fc0:
/*----------------------------------------------------------------*/
    push   %ecx
    sub    $0x88,%esp
    mov    %eax,%ecx
    mov    0x4f20(%eax),%eax
    sar    $0x10,%eax
    sub    %eax,%edx
    mov    %edx,0x6c(%esp)
    mov    0x4f22(%ecx),%eax
    fildl  0x6c(%esp)
    sar    $0x10,%eax
    fstps  0x30(%esp)
    sub    %eax,%ebx
    lea    0x48(%esp),%eax
    mov    %ebx,%edx
    mov    %ebx,0x70(%esp)
    neg    %edx
    mov    %eax,0x74(%esp)
    xor    %ebx,%ebx
    mov    %edx,0x70(%esp)
    mov    %ebx,0x34(%esp)
    fildl  0x70(%esp)
    fstps  0x38(%esp)
    mov    0x4f16(%ecx),%eax
    mov    %eax,0x78(%esp)
    flds   0x30(%esp)
    fmuls  0x78(%esp)
    fstps  0x24(%esp)
    fldz
    fmuls  0x78(%esp)
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    flds   0x38(%esp)
    fmuls  0x78(%esp)
    mov    %eax,0x48(%esp)
    mov    0x28(%esp),%eax
    fstps  0x2c(%esp)
    flds   0x24(%esp)
    fmuls  data_9045d
    mov    %eax,0x4c(%esp)
    mov    0x2c(%esp),%eax
    fstps  0x30(%esp)
    flds   0x2c(%esp)
    fmuls  data_90461
    mov    %eax,0x50(%esp)
    mov    0x28(%esp),%eax
    lea    0x4e5e(%ecx),%edx
    mov    %eax,0x34(%esp)
    fstps  0x38(%esp)
    mov    (%edx),%eax
    mov    %eax,0xc(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x10(%esp)
    mov    0x8(%edx),%eax
    lea    0x60(%esp),%edx
    mov    %eax,0x14(%esp)
    mov    %ebx,0x10(%esp)
    mov    $0x3f800000,%eax
    mov    %ebx,0x60(%esp)
    mov    %eax,0x68(%esp)
    lea    0xc(%esp),%eax
    mov    %ebx,0x64(%esp)
    call   func_5309c
    fstps  0x84(%esp)
    flds   0x10(%esp)
    fmuls  0x68(%esp)
    flds   0x14(%esp)
    fmuls  0x64(%esp)
    fsubrp %st,%st(1)
    fstps  (%esp)
    flds   0x14(%esp)
    fmuls  0x60(%esp)
    flds   0xc(%esp)
    fmuls  0x68(%esp)
    fsubrp %st,%st(1)
    lea    0x54(%esp),%eax
    fstps  0x4(%esp)
    flds   0xc(%esp)
    fmuls  0x64(%esp)
    mov    %eax,0x7c(%esp)
    mov    (%esp),%eax
    flds   0x10(%esp)
    fmuls  0x60(%esp)
    mov    %eax,0x54(%esp)
    mov    0x4(%esp),%eax
    fsubrp %st,%st(1)
    mov    %eax,0x58(%esp)
    fstps  0x8(%esp)
    mov    0x8(%esp),%eax
    fldz
    mov    %eax,0x5c(%esp)
    fcomps 0x4(%esp)
    fnstsw %ax
    sahf
    jbe    jump_17130
    lea    0x30(%esp),%eax
    push   0x84(%esp)
    jmp    jump_17143
  jump_17130:
    flds   0x84(%esp)
    lea    0x30(%esp),%eax
    sub    $0x4,%esp
    fchs
    fstps  (%esp)
  jump_17143:
    call   func_532ac
    lea    0x18(%esp),%edx
    mov    %edx,0x80(%esp)
    xor    %edx,%edx
    lea    0x1d1e(%ecx),%eax
    mov    %edx,0x3c(%esp)
    mov    %edx,0x40(%esp)
    mov    %edx,0x44(%esp)
    flds   0x30(%esp)
    fadds  (%eax)
    fstps  0x3c(%esp)
    flds   0x34(%esp)
    fadds  0x4(%eax)
    fstps  0x40(%esp)
    flds   0x38(%esp)
    fadds  0x8(%eax)
    mov    0x3c(%esp),%eax
    mov    %eax,0x18(%esp)
    mov    0x40(%esp),%eax
    fstps  0x44(%esp)
    mov    %eax,0x1c(%esp)
    mov    0x44(%esp),%eax
    mov    %eax,0x20(%esp)
    mov    0x3c(%esp),%eax
    mov    %eax,0x1d0a(%ecx)
    mov    0x1c(%esp),%eax
    mov    %eax,0x1d0e(%ecx)
    add    $0x1d0a,%ecx
    mov    0x20(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    %ecx,%eax
    call   func_53440
    add    $0x88,%esp
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_171d0:
/*----------------------------------------------------------------*/
    sub    $0x8,%esp
    sub    $0xf0,%ebx
    mov    %ebx,(%esp)
    fildl  (%esp)
    fmuls  0x4f16(%eax)
    fmuls  data_90465
    fadds  0x1d22(%eax)
    add    $0x1d0a,%eax
    fstps  0x4(%eax)
    call   func_53440
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_17204:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    add    $0x1d36,%eax
    mov    %esi,%ecx
    call   func_15808
    mov    %eax,0xaf(%esi)
    test   %eax,%eax
    jne    jump_1723b
    lea    0x253a(%esi),%eax
    mov    %ebp,%ebx
    mov    %edi,%edx
    mov    %esi,%ecx
    call   func_15808
    mov    %eax,0xaf(%esi)
  jump_1723b:
    cmpl   $0x0,0xaf(%esi)
    jne    jump_1725b
    lea    0x2d3e(%esi),%eax
    mov    %ebp,%ebx
    mov    %edi,%edx
    mov    %esi,%ecx
    call   func_15808
    mov    %eax,0xaf(%esi)
  jump_1725b:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_17260:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    data_10de72,%edx
    cmp    0x41(%eax),%edx
    jne    jump_172a9
    mov    0xb7(%eax),%bl
    mov    0xb8(%eax),%edx
    cmp    $0x1,%bl
    jne    jump_17284
    add    $0x8,%edx
    jmp    jump_17291
  jump_17284:
    cmp    $0x2,%bl
    je     jump_1728e
    cmp    $0x3,%bl
    jne    jump_17291
  jump_1728e:
    add    $0x6,%edx
  jump_17291:
    cmpl   $0x0,0xaf(%eax)
    je     jump_1729b
    inc    %edx
  jump_1729b:
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_5a270
  jump_172a9:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_172b0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x98,%esp
    mov    %eax,%ebp
    mov    0xb3(%eax),%edx
    test   %edx,%edx
    je     jump_173e5
    mov    %edx,%eax
    xor    %esi,%esi
    mov    (%edx),%dl
    xor    %edi,%edi
    cmp    $0x2,%dl
    jne    jump_172f8
    mov    0x1(%eax),%eax
    xor    %ecx,%ecx
    mov    0x54(%eax),%edx
    mov    data_104bea,%cl
    sar    $0x10,%edx
    cmp    %ecx,%edx
    jne    jump_172f8
    mov    $data_90469,%esi
    lea    0x34(%eax),%edi
    jmp    jump_17319
  jump_172f8:
    mov    0xb3(%ebp),%eax
    cmpb   $0x1,(%eax)
    jne    jump_17319
    mov    0x1(%eax),%eax
    mov    data_104bea,%bl
    cmp    0x57(%eax),%bl
    jne    jump_17319
    mov    $data_90472,%esi
    lea    0x24(%eax),%edi
  jump_17319:
    test   %esi,%esi
    je     jump_173e5
    mov    $data_9047b,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    $data_90486,%edx
    mov    %esi,%ebx
    mov    %eax,%ecx
    call   func_2fcb0
    push   %edi
    mov    0xc9a(%ecx),%ebx
    push   %ebx
    lea    0x8(%esp),%eax
    push   %eax
    lea    0xc(%esp),%esi
    mov    %ecx,%edx
    call   func_76d09
    add    $0xc,%esp
    mov    0xc9a(%ecx),%edi
    xor    %ebx,%ebx
    push   %edi
  jump_17364:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1737c
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_17364
  jump_1737c:
    pop    %edi
    mov    $data_10ae70,%eax
    call   func_552f8
    test   %eax,%eax
    je     jump_173e5
    mov    0xb3(%ebp),%eax
    cmpb   $0x2,(%eax)
    jne    jump_173a0
    mov    0x1(%eax),%eax
    call   func_49940
    jmp    jump_173a8
  jump_173a0:
    mov    0x1(%eax),%eax
    call   func_37040
  jump_173a8:
    push   $0x0
    mov    $0x320,%ebx
    movl   $0x0,0xb3(%ebp)
    mov    $data_10ae70,%eax
    mov    0xab(%ebp),%edx
    movb   $0x0,0xb7(%ebp)
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_56d30
    mov    %ebp,%eax
    call   func_187ec
    xor    %edx,%edx
    mov    %ebp,%eax
    call   func_18c2c
  jump_173e5:
    add    $0x98,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_173f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    lea    0x1d1e(%eax),%edx
    add    $0x4e46,%eax
    call   func_1b958
    mov    %ebx,%eax
    call   func_17430
    pop    %edx
    pop    %ebx
    ret

vtable_17414:
    .long   func_17ab5
    .long   func_17ad1
    .long   func_17af6
    .long   func_17a57
    .long   func_17b6a
    .long   func_17b6a
    .long   func_17b3b


/*----------------------------------------------------------------*/
func_17430:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x154,%esp
    mov    %eax,%ecx
    mov    $data_959d8,%ebx
    mov    0x1d2a(%eax),%esi
    xor    %edx,%edx
    lea    0x64(%esp),%eax
    mov    %edx,0xc4(%esp)
    mov    %edx,0xc8(%esp)
    mov    %edx,0xcc(%esp)
    mov    %edx,0xdc(%esp)
    mov    %edx,0xe0(%esp)
    mov    %edx,0xe4(%esp)
    mov    %edx,0xb8(%esp)
    mov    %edx,0xbc(%esp)
    mov    %edx,0xc0(%esp)
    mov    $0x4,%edx
    lea    0x4e86(%ecx),%ebp
    call   func_77394
    lea    0xc4(%esp),%ebx
    xor    %eax,%eax
    mov    %ebp,%edx
    mov    %eax,0xdc(%esp)
    mov    %eax,0xe0(%esp)
    mov    %eax,0xe4(%esp)
    lea    0xdc(%esp),%eax
    mov    $0x41800000,%edi
    call   func_53384
    mov    0xc4(%esp),%eax
    mov    %edi,0x64(%esp)
    mov    %edi,0x6c(%esp)
    mov    %edi,0x70(%esp)
    mov    %eax,0xdc(%esp)
    mov    0xc8(%esp),%eax
    mov    %edi,0x90(%esp)
    mov    %eax,0xe0(%esp)
    mov    0xcc(%esp),%eax
    xor    %ebx,%ebx
    mov    %eax,0xe4(%esp)
    xor    %eax,%eax
    lea    0x64(%esp),%edi
    mov    %eax,0x68(%esp)
    mov    %eax,0x74(%esp)
    mov    $0xc1800000,%eax
    mov    %ebx,0x80(%esp)
    mov    %eax,0x78(%esp)
    mov    %eax,%edx
    mov    %eax,0x7c(%esp)
    mov    %eax,0x84(%esp)
    mov    %eax,0x88(%esp)
    xor    %eax,%edx
    lea    0x30(%edi),%eax
    mov    %edx,0x8c(%esp)
    mov    %eax,0x120(%esp)
  jump_17553:
    lea    0xc4(%esp),%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_53384
    flds   0xc4(%esp)
    lea    0xf4(%esp),%eax
    fsubs  0xdc(%esp)
    mov    %eax,0x10c(%esp)
    fstps  0xac(%esp)
    flds   0xc8(%esp)
    mov    0xac(%esp),%eax
    fsubs  0xe0(%esp)
    mov    %eax,0xf4(%esp)
    fstps  0xb0(%esp)
    flds   0xcc(%esp)
    mov    0xb0(%esp),%eax
    fsubs  0xe4(%esp)
    mov    %eax,0xf8(%esp)
    fstps  0xb4(%esp)
    mov    0xb4(%esp),%eax
    mov    %eax,0xfc(%esp)
    mov    0xac(%esp),%eax
    mov    %eax,(%edi)
    mov    0xf8(%esp),%eax
    mov    %eax,0x4(%edi)
    add    $0xc,%edi
    mov    0xfc(%esp),%eax
    mov    %eax,-0x4(%edi)
    cmp    0x120(%esp),%edi
    jne    jump_17553
    flds   0x4f2a(%ecx)
    fmuls  data_9049e
    xor    %edx,%edx
    mov    0x1d32(%ecx),%ebx
    mov    %edx,0x11c(%esp)
    fstps  0x138(%esp)
    test   %ebx,%ebx
    jle    jump_17e42
    lea    0x1d36(%ecx),%eax
    mov    %eax,0x124(%esp)
    lea    0x253a(%ecx),%eax
    mov    %eax,0x12c(%esp)
    lea    0x3542(%ecx),%eax
    mov    %eax,0x13c(%esp)
    lea    0x2d3e(%ecx),%eax
    mov    %eax,0x134(%esp)
    lea    0x4e46(%ecx),%eax
    lea    0x4e86(%ecx),%edi
    mov    %eax,0x130(%esp)
    lea    0x1d1e(%ecx),%eax
    mov    %eax,0x144(%esp)
    lea    0x4f80(%ecx),%eax
    mov    %eax,0x128(%esp)
    lea    0x1d0a(%ecx),%ebp
  jump_17698:
    cmpb   $0x6,(%esi)
    jne    jump_176ce
    mov    0xb7(%ecx),%dl
    cmp    $0x2,%dl
    je     jump_176b1
    cmp    $0x3,%dl
    jne    jump_177a5
  jump_176b1:
    cmpl   $0x0,0xaf(%ecx)
    jne    jump_177a5
    cmpl   $0x49742400,0x1d0e(%ecx)
    je     jump_177a5
  jump_176ce:
    cmpb   $0xff,(%esi)
    je     jump_177a5
    mov    (%esi),%bh
    movl   $0xffffffff,0x1b(%esi)
    cmp    $0x4,%bh
    jne    jump_177ca
    mov    0x1(%esi),%edx
    mov    0x1(%edx),%eax
    mov    %eax,0xc4(%esp)
    mov    0x5(%edx),%eax
    inc    %edx
    mov    %eax,0xc8(%esp)
    mov    0x8(%edx),%eax
    mov    0x130(%esp),%edx
    mov    %eax,0xcc(%esp)
    lea    0xc4(%esp),%eax
    call   func_53114
    fldz
    fcomps 0xcc(%esp)
    fnstsw %ax
    sahf
    jae    jump_177a5
    lea    0x14c(%esp),%eax
    push   %eax
    lea    0x154(%esp),%eax
    push   %eax
    mov    0x4f22(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xd4(%esp),%eax
    push   0x4e6e(%ecx)
    call   func_533d4
    mov    0x150(%esp),%eax
    mov    %ax,0x27(%esi)
    mov    0x14c(%esp),%eax
    mov    %ax,0x29(%esi)
    mov    0xcc(%esp),%eax
    movl   $0x0,0x1b(%esi)
    movl   $0x0,0x23(%esi)
    mov    %esi,%edx
    mov    %eax,0x2f(%esi)
    mov    0x134(%esp),%eax
    movl   $0x10000,0xf(%esi)
    call   func_15794
  jump_177a5:
    mov    0x11c(%esp),%eax
    add    $0x35,%esi
    inc    %eax
    mov    0x1d32(%ecx),%edx
    mov    %eax,0x11c(%esp)
    cmp    %edx,%eax
    jge    jump_17e42
    jmp    jump_17698
  jump_177ca:
    mov    0x33(%esi),%al
    and    $0x10,%al
    mov    $0xffffffff,%ebx
    movsbl %al,%eax
    mov    %ebx,0x114(%esp)
    test   %eax,%eax
    je     jump_17b80
    mov    0x31(%esi),%eax
    sar    $0x18,%eax
    imul   $0xc,%eax,%eax
    mov    0x128(%esp),%edx
    add    %eax,%edx
    mov    (%edx),%eax
    mov    %eax,0xb8(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0xbc(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0xc0(%esp)
  jump_17815:
    mov    0xb8(%esp),%eax
    mov    %eax,0xdc(%esp)
    mov    0xbc(%esp),%eax
    lea    0xc4(%esp),%ebx
    mov    %eax,0xe0(%esp)
    mov    0xc0(%esp),%eax
    mov    %edi,%edx
    mov    %eax,0xe4(%esp)
    lea    0xdc(%esp),%eax
    call   func_53384
    mov    0x1d22(%ecx),%eax
    mov    %eax,0xe0(%esp)
    lea    0xa0(%esp),%eax
    mov    %eax,0x110(%esp)
    xor    %eax,%eax
    mov    %eax,0xd0(%esp)
    mov    %eax,0xd4(%esp)
    mov    %eax,0xd8(%esp)
    mov    0x144(%esp),%eax
    flds   0xdc(%esp)
    fsubs  (%eax)
    fstps  0xd0(%esp)
    flds   0xe0(%esp)
    fsubs  0x4(%eax)
    fstps  0xd4(%esp)
    flds   0xe4(%esp)
    fsubs  0x8(%eax)
    fstps  0xd8(%esp)
    mov    0xd0(%esp),%eax
    flds   0xd4(%esp)
    fmul   %st(0),%st
    mov    %eax,0xa0(%esp)
    mov    0xd4(%esp),%eax
    flds   0xd0(%esp)
    fmul   %st(0),%st
    mov    %eax,0xa4(%esp)
    mov    0xd8(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0xa8(%esp)
    flds   0xd8(%esp)
    mov    0xd0(%esp),%eax
    fmuls  0xd8(%esp)
    mov    %eax,0xdc(%esp)
    mov    0xd4(%esp),%eax
    mov    %eax,0xe0(%esp)
    mov    0xd8(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0xe4(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fcomps 0x138(%esp)
    fnstsw %ax
    sahf
    setae  %al
    and    $0xff,%eax
    dec    %eax
    mov    %eax,0x23(%esi)
    flds   0xcc(%esp)
    fcomps 0x4e72(%ecx)
    fnstsw %ax
    sahf
    jbe    jump_177a5
    flds   0xcc(%esp)
    fcomps 0x4e76(%ecx)
    fnstsw %ax
    sahf
    jae    jump_177a5
    lea    0x14c(%esp),%eax
    push   %eax
    lea    0x154(%esp),%eax
    push   %eax
    mov    0x4f22(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xd4(%esp),%eax
    push   0x4e6e(%ecx)
    call   func_533d4
    mov    0x150(%esp),%eax
    mov    %ax,0x27(%esi)
    mov    0x14c(%esp),%eax
    mov    %ax,0x29(%esi)
    mov    0xcc(%esp),%eax
    mov    %eax,0x2f(%esi)
    mov    (%esi),%al
    movl   $0x0,0x1b(%esi)
    cmp    $0x7,%al
    jne    jump_179f3
    flds   0x2f(%esi)
    fadds  data_904aa
    fstps  0x2f(%esi)
  jump_179f3:
    flds   0x4f1a(%ecx)
    mov    $0x48000000,%eax
    fmuls  data_904a2
    mov    %eax,0x148(%esp)
    fstps  0x140(%esp)
    flds   0x2f(%esi)
    fcomps 0x4e72(%ecx)
    fnstsw %ax
    sahf
    jb     jump_17a31
    flds   0x140(%esp)
    fdivs  0x2f(%esi)
    fstps  0x148(%esp)
  jump_17a31:
    flds   0x148(%esp)
    fcomps data_904a2
    fnstsw %ax
    sahf
    jae    jump_17b93
    movl   $0x46800000,0x148(%esp)
    jmp    jump_17bb0


/*----------------------------------------------------------------*/
func_17a57:
/*----------------------------------------------------------------*/
    mov    0x33(%esi),%al
    and    $0x1,%al
    movsbl %al,%eax
    test   %eax,%eax
    je     jump_17a8c
    mov    0x1(%esi),%edx
    mov    0x8(%edx),%eax
    mov    %eax,0xb8(%esp)
    mov    0xc(%edx),%eax
    mov    %eax,0xbc(%esp)
    mov    0x10(%edx),%eax
    add    $0x8,%edx
    mov    %eax,0xc0(%esp)
    jmp    jump_17815
  jump_17a8c:
    mov    0x1(%esi),%edx
    mov    0x14(%edx),%eax
    mov    %eax,0xb8(%esp)
    mov    0x18(%edx),%eax
    mov    %eax,0xbc(%esp)
    mov    0x1c(%edx),%eax
    add    $0x14,%edx
    mov    %eax,0xc0(%esp)
    jmp    jump_17815


/*----------------------------------------------------------------*/
func_17ab5:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    mov    %eax,0xb8(%esp)
    mov    %eax,0xbc(%esp)
    mov    %eax,0xc0(%esp)
    jmp    jump_17815


/*----------------------------------------------------------------*/
func_17ad1:
/*----------------------------------------------------------------*/
    mov    0x1(%esi),%edx
    mov    (%edx),%eax
    mov    %eax,0xb8(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0xbc(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0xc0(%esp)
    jmp    jump_17815


/*----------------------------------------------------------------*/
func_17af6:
/*----------------------------------------------------------------*/
    mov    0x1(%esi),%edx
    mov    0x9e(%edx),%eax
    mov    %eax,0xb8(%esp)
    mov    0xa2(%edx),%eax
    mov    %eax,0xbc(%esp)
    mov    0xa6(%edx),%eax
    mov    %eax,0xc0(%esp)
    mov    0x1(%esi),%eax
    mov    0x54(%eax),%eax
    sar    $0x10,%eax
    add    $0x9e,%edx
    mov    %eax,0x114(%esp)
    jmp    jump_17815


/*----------------------------------------------------------------*/
func_17b3b:
/*----------------------------------------------------------------*/
    mov    0x0(%ebp),%eax
    mov    %eax,0xb8(%esp)
    mov    0x4(%ebp),%eax
    mov    %eax,0xbc(%esp)
    mov    0x8(%ebp),%eax
    mov    %eax,0xc0(%esp)
    lea    0xb8(%esp),%eax
    call   func_53440
    jmp    jump_17815


/*----------------------------------------------------------------*/
func_17b6a:
/*----------------------------------------------------------------*/
    mov    $0x53e,%ebx
    mov    $data_9048f,%edx
    xor    %eax,%eax
    call   func_261a8
    jmp    jump_17815
  jump_17b80:
    mov    (%esi),%al
    cmp    $0x6,%al
    ja     func_17b6a
    and    $0xff,%eax
    jmp    *%cs:vtable_17414(,%eax,4)
  jump_17b93:
    flds   0x148(%esp)
    fcomps data_904ae
    fnstsw %ax
    sahf
    jbe    jump_17bb0
    movl   $0x48000000,0x148(%esp)
  jump_17bb0:
    flds   0x148(%esp)
    fmuls  0xb(%esi)
    call   func_76e98
    fistpll 0x100(%esp)
    mov    0x100(%esp),%eax
    mov    %eax,0xf(%esi)
    flds   0x4f16(%ecx)
    fmuls  data_904a6
    fadds  0x1d22(%ecx)
    mov    0x23(%esi),%eax
    fstps  0x108(%esp)
    test   %eax,%eax
    je     jump_17df7
    mov    0x33(%esi),%al
    and    $0x2,%al
    movsbl %al,%eax
    test   %eax,%eax
    jne    jump_17df7
    mov    0xb8(%esp),%eax
    mov    %eax,0xdc(%esp)
    mov    0xc0(%esp),%eax
    lea    0xc4(%esp),%ebx
    mov    %eax,0xe4(%esp)
    mov    0x108(%esp),%eax
    mov    %edi,%edx
    mov    %eax,0xe0(%esp)
    lea    0xdc(%esp),%eax
    call   func_53384
    mov    0xc4(%esp),%eax
    mov    %eax,0xdc(%esp)
    mov    0xc8(%esp),%eax
    mov    %eax,0xe0(%esp)
    mov    0xcc(%esp),%eax
    mov    %eax,0xe4(%esp)
    lea    0x14c(%esp),%eax
    push   %eax
    lea    0x154(%esp),%eax
    push   %eax
    mov    0x4f22(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xd4(%esp),%eax
    push   0x4e6e(%ecx)
    call   func_533d4
    mov    0x150(%esp),%eax
    mov    %ax,0x2b(%esi)
    lea    0x64(%esp),%ebx
    mov    0x14c(%esp),%eax
    xor    %edx,%edx
    mov    %ax,0x2d(%esi)
  jump_17cbf:
    lea    0xe8(%esp),%eax
    mov    %eax,0x118(%esp)
    xor    %eax,%eax
    mov    %eax,0x94(%esp)
    mov    %eax,0x98(%esp)
    mov    %eax,0x9c(%esp)
    flds   0xdc(%esp)
    fadds  (%ebx)
    fstps  0x94(%esp)
    flds   0xe0(%esp)
    fadds  0x4(%ebx)
    mov    0x94(%esp),%eax
    fstps  0x98(%esp)
    flds   0xe4(%esp)
    fadds  0x8(%ebx)
    mov    %eax,0xe8(%esp)
    mov    0x98(%esp),%eax
    fstps  0x9c(%esp)
    mov    %eax,0xec(%esp)
    mov    0x9c(%esp),%eax
    mov    %eax,0xf0(%esp)
    mov    0x94(%esp),%eax
    mov    %eax,0xc4(%esp)
    mov    0x98(%esp),%eax
    mov    %eax,0xc8(%esp)
    mov    0x9c(%esp),%eax
    mov    %eax,0xcc(%esp)
    lea    0x14c(%esp),%eax
    push   %eax
    lea    0x154(%esp),%eax
    push   %eax
    mov    0x4f22(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xd4(%esp),%eax
    push   0x4e6e(%ecx)
    call   func_533d4
    mov    0x14e(%esp),%eax
    sar    $0x10,%eax
    mov    %eax,(%esp,%edx,1)
    mov    0x14a(%esp),%eax
    add    $0x18,%edx
    sar    $0x10,%eax
    add    $0xc,%ebx
    mov    %eax,-0x14(%esp,%edx,1)
    cmp    $0x60,%edx
    jne    jump_17cbf
    mov    0x114(%esp),%eax
    mov    %esp,%edx
    mov    %eax,0x60(%esp)
    mov    0x13c(%esp),%eax
    call   func_15d38
    cmpb   $0x6,(%esi)
    jne    jump_17df7
    mov    0x4e42(%ecx),%ax
    dec    %eax
    mov    %ax,0xbc(%ecx)
  jump_17df7:
    flds   0xbc(%esp)
    fsubs  0x108(%esp)
    fldz
    fcompp
    fnstsw %ax
    sahf
    jb     jump_17e28
    mov    0x124(%esp),%eax
    mov    %esi,%edx
    movl   $0xffffffff,0x1f(%esi)
    call   func_15794
    jmp    jump_177a5
  jump_17e28:
    mov    0x12c(%esp),%eax
    mov    %esi,%edx
    movl   $0x0,0x1f(%esi)
    call   func_15794
    jmp    jump_177a5
  jump_17e42:
    add    $0x154,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_17e50:
/*----------------------------------------------------------------*/
    sub    $0x8,%esp
    mov    %edx,0x4(%esp)
    fildl  0x4(%esp)
    fmuls  data_12fc1c
    add    $0x4e46,%eax
    fstps  (%esp)
    push   (%esp)
    call   func_1baf0
    add    $0x8,%esp
    ret

vtable_17e78:
    .long   func_17ee5
    .long   func_17efd
    .long   func_17ec4
    .long   func_17f14


/*----------------------------------------------------------------*/
func_17e88:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    test   %edx,%edx
    jne    jump_17ea8
    mov    $0x5bd,%ebx
    mov    $data_904b2,%edx
    xor    %eax,%eax
    call   func_26198
  jump_17ea8:
    mov    (%ecx),%al
    cmp    $0x3,%al
    ja     jump_15ed0
    xor    %edx,%edx
    mov    %al,%dl
    lea    0x1d1e(%esi),%eax
    jmp    *%cs:vtable_17e78(,%edx,4)


/*----------------------------------------------------------------*/
func_17ec4:
/*----------------------------------------------------------------*/
    mov    0x1(%ecx),%ecx
    flds   0x9e(%ecx)
    add    $0x9e,%ecx
    fstps  (%eax)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_17ee5:
/*----------------------------------------------------------------*/
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_17efd:
/*----------------------------------------------------------------*/
    mov    0x1(%ecx),%ecx
    mov    (%ecx),%edx
    mov    %edx,(%eax)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_17f14:
/*----------------------------------------------------------------*/
    mov    0x1(%ecx),%ecx
    mov    data_d3660,%edx
    cmp    (%ecx),%edx
    jne    jump_17f39
    flds   0x8(%ecx)
    add    $0x8,%ecx
    fstps  (%eax)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_17f39:
    flds   0x14(%ecx)
    add    $0x14,%ecx
    fstps  (%eax)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_17f54:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    lea    0x1d1e(%eax),%edx
    movl   $0x0,(%edx)
    movl   $0x0,0x4(%edx)
    movl   $0x0,0x8(%edx)
    lea    0x4e7a(%eax),%edx
    flds   0x4f1a(%eax)
    lea    0x4ede(%eax),%ebx
    fstps  0x4f16(%eax)
    mov    (%ebx),%ecx
    mov    %ecx,(%edx)
    mov    0x4(%ebx),%ecx
    mov    %ecx,0x4(%edx)
    mov    0x8(%ebx),%ecx
    mov    %ecx,0x8(%edx)
    lea    0x4e46(%eax),%edx
    lea    0x4eea(%eax),%ebx
    lea    0xc(%edx),%esi
    flds   (%ebx)
    lea    0xc(%ebx),%ecx
    fstps  (%edx)
    add    $0x18,%edx
    flds   0x4(%ebx)
    add    $0x18,%ebx
    fstps  -0x14(%edx)
    mov    -0x10(%ebx),%edi
    mov    %edi,-0x10(%edx)
    mov    (%ecx),%edi
    mov    %edi,(%esi)
    mov    0x4(%ecx),%edi
    mov    %edi,0x4(%esi)
    mov    0x8(%ecx),%edi
    mov    %edi,0x8(%esi)
    mov    (%ebx),%ecx
    mov    %ecx,(%edx)
    mov    0x4(%ebx),%ecx
    mov    %ecx,0x4(%edx)
    mov    0x8(%ebx),%ecx
    mov    %ecx,0x8(%edx)
    call   func_181f0
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_17ff0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%edx
    movl   $0x0,0x1d1e(%eax)
    movl   $0x23,0x4f26(%eax)
    fildl  0x4f26(%eax)
    fld    %st(0)
    fmuls  data_959f4
    movl   $0x0,0x1d22(%eax)
    fmuls  data_904c1
    movl   $0x0,0x1d26(%eax)
    fstp   %st(1)
    flds   0x4f1e(%eax)
    fstpl  (%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_775f7
    fdivrl (%esp)
    mov    0x4f20(%edx),%ebx
    sar    $0x10,%ebx
    push   %ebx
    fsts   0x4f16(%edx)
    fstps  0x4f1a(%edx)
    push   $0x47c35000
    lea    0x4e46(%edx),%ebx
    push   $0x3f800000
    mov    %ebx,%eax
    sub    $0x4,%esp
    fildl  0x4f26(%edx)
    fstps  (%esp)
    call   func_1b808
    mov    0x4e6e(%edx),%eax
    mov    %eax,0x4ee6(%edx)
    mov    0x4ee9(%edx),%ah
    xor    $0x80,%ah
    mov    %edx,%ecx
    mov    %ah,0x4ee9(%edx)
    add    $0x4ede,%ecx
    flds   0x4ee6(%edx)
    fmuls  data_904c5
    mov    %ecx,%eax
    fstps  0x4ee2(%edx)
    push   0x4f16(%edx)
    movl   $0x0,0x4ede(%edx)
    call   func_53054
    movl   $0x3f800000,(%ebx)
    movl   $0x0,0x4(%ebx)
    lea    0xc(%ebx),%esi
    movl   $0x0,0x8(%ebx)
    movl   $0x0,(%esi)
    movl   $0x3f800000,0x4(%esi)
    lea    0x18(%ebx),%edi
    movl   $0x0,0x8(%esi)
    movl   $0x0,(%edi)
    mov    %ecx,0x10(%esp)
    movl   $0x0,0x4(%edi)
    lea    0x4eea(%edx),%ecx
    movl   $0x3f800000,0x8(%edi)
    flds   (%ebx)
    lea    0xc(%ecx),%ebp
    fstps  (%ecx)
    flds   0x4(%ebx)
    mov    %ebp,0xc(%esp)
    fstps  0x4(%ecx)
    mov    0x8(%ebx),%eax
    mov    %eax,0x8(%ecx)
    mov    (%esi),%eax
    mov    %eax,0x0(%ebp)
    mov    0x4(%esi),%eax
    mov    %eax,0x4(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,0x8(%ebp)
    lea    0x18(%ecx),%ebp
    mov    (%edi),%eax
    mov    %eax,0x0(%ebp)
    mov    %ecx,%eax
    flds   0x4(%edi)
    fstps  0x4(%ebp)
    flds   0x8(%edi)
    fstps  0x8(%ebp)
    flds   0x4ede(%edx)
    fchs
    fstps  0x4f02(%edx)
    flds   0x4ee2(%edx)
    fchs
    fstps  0x4f06(%edx)
    flds   0x4ee6(%edx)
    fchs
    fstps  0x4f0a(%edx)
    call   func_53864
    mov    (%ecx),%eax
    mov    %eax,(%ebx)
    mov    0x4(%ecx),%eax
    mov    %eax,0x4(%ebx)
    mov    0x8(%ecx),%eax
    mov    %eax,0x8(%ebx)
    mov    0xc(%esp),%ebx
    mov    0x10(%esp),%ecx
    mov    (%ebx),%eax
    mov    %eax,(%esi)
    mov    0x4(%ebx),%eax
    mov    %eax,0x4(%esi)
    mov    0x8(%ebx),%eax
    mov    %eax,0x8(%esi)
    lea    0x4e7a(%edx),%ebx
    mov    0x0(%ebp),%eax
    mov    %eax,(%edi)
    mov    %edx,%eax
    mov    0x4(%ebp),%edx
    mov    %edx,0x4(%edi)
    mov    0x8(%ebp),%edx
    mov    %edx,0x8(%edi)
    mov    (%ecx),%edx
    mov    %edx,(%ebx)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%ebx)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%ebx)
    call   func_181f0
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_181f0:
/*----------------------------------------------------------------*/
    push   %edx
    sub    $0x4,%esp
    mov    %eax,%edx
    fildl  0x4f26(%eax)
    fld    %st(0)
    fmuls  data_959f4
    fmuls  data_904c9
    fstp   %st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_775f7
    fstps  0x4f2a(%edx)
    flds   0x4f16(%edx)
    fmuls  0x4f2a(%edx)
    fmuls  data_904cd
    fstps  0x4f2a(%edx)
    flds   0x4f1a(%edx)
    fmuls  data_904c9
    fadds  0x4f16(%edx)
    fstps  0x4f12(%edx)
    flds   0x4f2a(%edx)
    fmuls  data_904c9
    fsubrs 0x4f16(%edx)
    fstps  0x4f0e(%edx)
    add    $0x4,%esp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_1826c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    %edx,%ebp
    mov    %ebx,%esi
    xor    %edx,%edx
    mov    %bx,%dx
    cmp    0x1a8e(%eax),%edx
    jl     jump_18293
    mov    $0x62b,%ebx
    mov    $data_904d1,%edx
    xor    %eax,%eax
    call   func_26198
  jump_18293:
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %si,%dx
    mov    %cx,%bx
    mov    0x19c6(%edi,%edx,2),%dx
    and    $0xffff,%edx
    mov    %ebp,%eax
    call   func_156c0
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_182b8:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x8,%esp
    mov    %eax,%ebx
    mov    %edx,(%esp)
    fildl  (%esp)
    fsts   0x4(%esp)
    fcomps data_904e0
    fnstsw %ax
    sahf
    jbe    jump_182dd
    movl   $0x42480000,0x4(%esp)
    jmp    jump_182f4
  jump_182dd:
    flds   0x4(%esp)
    fcomps data_904e4
    fnstsw %ax
    sahf
    jae    jump_182f4
    movl   $0xc2480000,0x4(%esp)
  jump_182f4:
    flds   0x4(%esp)
    fmuls  data_904e8
    fmuls  data_12fc1c
    fstps  0x4(%esp)
    fld1
    fadds  0x4(%esp)
    fstps  0x4(%esp)
    flds   0x4f16(%ebx)
    fmuls  0x4(%esp)
    fsts   0x4f16(%ebx)
    fcomps 0x4e6e(%ebx)
    fnstsw %ax
    sahf
    jae    jump_18335
    mov    0x4e6e(%ebx),%eax
    jmp    jump_1834c
  jump_18335:
    flds   0x4f16(%ebx)
    fcomps 0x4f1a(%ebx)
    fnstsw %ax
    sahf
    jbe    jump_18352
    mov    0x4f1a(%ebx),%eax
  jump_1834c:
    mov    %eax,0x4f16(%ebx)
  jump_18352:
    lea    0x4e7a(%ebx),%eax
    push   0x4f16(%ebx)
    call   func_53054
    mov    %ebx,%eax
    call   func_181f0
    add    $0x8,%esp
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_18370:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x144,%esp
    mov    %eax,%ebp
    mov    0x10(%eax),%ax
    sub    0x8(%ebp),%ax
    mov    0xc(%ebp),%cx
    mov    %ax,0x4f22(%ebp)
    mov    %eax,%ebx
    mov    0x14(%ebp),%ax
    sar    %bx
    sub    %ecx,%eax
    mov    %bx,0x4f22(%ebp)
    mov    %eax,%esi
    sar    %si
    lea    0x1d1e(%ebp),%eax
    mov    %si,0x4f24(%ebp)
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    cmpl   $0x0,0x1d2a(%ebp)
    je     jump_183e3
    mov    $0x65e,%ebx
    mov    $data_904ec,%edx
    xor    %eax,%eax
    call   func_26198
  jump_183e3:
    cmpl   $0x0,0x19be(%ebp)
    je     jump_183fd
    mov    $0x65f,%ebx
    mov    $data_904fb,%edx
    xor    %eax,%eax
    call   func_26198
  jump_183fd:
    movl   $0x80,0x1d2e(%ebp)
    imul   $0x35,0x1d2e(%ebp),%eax
    mov    $data_9050a,%ebx
    mov    $0x1,%edx
    call   func_77604
    call   func_2625c
    mov    %eax,0x1d2a(%ebp)
    test   %eax,%eax
    jne    jump_1843b
    mov    $0x669,%ebx
    mov    $data_9051a,%edx
    call   func_26198
  jump_1843b:
    movl   $0x27,0x19c2(%ebp)
    mov    0x19c2(%ebp),%eax
    mov    $data_90529,%ebx
    shl    $0x8,%eax
    mov    $0x1,%edx
    call   func_77604
    call   func_2625c
    mov    %eax,0x19be(%ebp)
    test   %eax,%eax
    jne    jump_1847b
    mov    $0x66f,%ebx
    mov    $data_90531,%edx
    call   func_26198
  jump_1847b:
    mov    %esp,%eax
    mov    0x19be(%ebp),%ebp
    call   func_1bb78
    xor    %eax,%eax
    mov    %eax,0x140(%esp)
    xor    %esi,%esi
    jmp    jump_184b8
  jump_18495:
    mov    %esp,%eax
    mov    %ebp,%edx
    call   func_1bf1c
    mov    0x140(%esp),%edx
    inc    %edx
    add    $0x100,%ebp
    mov    %edx,0x140(%esp)
    cmp    $0x1f,%edx
    jge    jump_18501
  jump_184b8:
    mov    0x140(%esp),%edi
    push   %edi
    push   $data_90540
    lea    0x120(%esp),%eax
    push   %eax
    mov    $0x200,%ebx
    lea    0x124(%esp),%edx
    call   func_76d09
    add    $0xc,%esp
    mov    %esi,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    je     jump_18495
    mov    $0x67b,%ebx
    mov    $data_90553,%edx
    mov    %esi,%eax
    call   func_261a8
    jmp    jump_18495
  jump_18501:
    mov    $0x200,%ebx
    mov    $data_90562,%edx
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_1bbfc
    test   %eax,%eax
    je     jump_18529
    mov    $0x680,%ebx
    mov    $data_90573,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_18529:
    mov    %esp,%eax
    lea    0x12c(%esp),%edi
    mov    $0x41,%ecx
    mov    %ebp,%edx
    mov    $data_96404,%esi
    call   func_1bf1c
    mov    %ecx,0x140(%esp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    xor    %esi,%esi
    jmp    jump_18570
  jump_18553:
    mov    %esp,%eax
    mov    %ebp,%edx
    call   func_1bf1c
    mov    0x140(%esp),%eax
    inc    %eax
    mov    %eax,0x140(%esp)
    cmp    $0x48,%eax
    jge    jump_185b0
  jump_18570:
    mov    0x140(%esp),%al
    mov    $0x200,%ebx
    lea    0x12c(%esp),%edx
    mov    %esi,%ecx
    mov    %al,0x135(%esp)
    mov    %esp,%eax
    add    $0x100,%ebp
    call   func_1bbfc
    test   %eax,%eax
    je     jump_18553
    mov    $0x68a,%ebx
    mov    $data_90582,%edx
    mov    %esi,%eax
    call   func_26198
    jmp    jump_18553
  jump_185b0:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    mov    $0xffffffff,%eax
    add    $0x144,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_185cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    mov    data_d3660,%esi
    mov    0x2(%esi),%esi
    sar    $0x10,%esi
    cmp    $0x64,%esi
    jl     jump_185f6
    mov    $0x697,%ebx
    mov    $data_90591,%edx
    xor    %eax,%eax
    call   func_26198
  jump_185f6:
    lea    0x0(,%esi,4),%edi
    lea    0xbe(%ecx),%edx
    sub    %esi,%edi
    lea    0x4e7a(%ecx),%eax
    shl    $0x2,%edi
    mov    (%eax),%ebx
    mov    %ebx,(%edx,%edi,1)
    mov    0x4(%eax),%ebx
    mov    %ebx,0x4(%edx,%edi,1)
    mov    0x8(%eax),%ebx
    mov    %ebx,0x8(%edx,%edi,1)
    lea    0x0(,%esi,8),%edx
    add    %esi,%edx
    lea    0x56e(%ecx),%eax
    shl    $0x2,%edx
    add    %edx,%eax
    lea    0x4e46(%ecx),%edx
    lea    0xc(%eax),%ebx
    flds   (%edx)
    lea    0xc(%edx),%esi
    fstps  (%eax)
    add    $0x18,%eax
    flds   0x4(%edx)
    add    $0x18,%edx
    fstps  -0x14(%eax)
    mov    -0x10(%edx),%ebp
    mov    %ebp,-0x10(%eax)
    mov    (%esi),%ebp
    mov    %ebp,(%ebx)
    mov    0x4(%esi),%ebp
    mov    %ebp,0x4(%ebx)
    mov    0x8(%esi),%ebp
    mov    %ebp,0x8(%ebx)
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    flds   0x8(%edx)
    lea    0x150e(%ecx),%edx
    fstps  0x8(%eax)
    lea    0x1d1e(%ecx),%eax
    mov    (%eax),%ebx
    mov    %ebx,(%edx,%edi,1)
    mov    0x4(%eax),%ebx
    mov    %ebx,0x4(%edx,%edi,1)
    mov    0x8(%eax),%ebx
    mov    %ebx,0x8(%edx,%edi,1)
    movl   $0x0,0x4f2f(%ecx)
    movb   $0x0,0xb7(%ecx)
    movl   $0x0,0xb3(%ecx)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_186b8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    call   func_187ec
    mov    data_d3660,%esi
    mov    0x2(%esi),%esi
    sar    $0x10,%esi
    cmp    $0x64,%esi
    jl     jump_186e7
    mov    $0x6ae,%ebx
    mov    $data_905a0,%edx
    xor    %eax,%eax
    call   func_26198
  jump_186e7:
    lea    0x0(,%esi,4),%edx
    add    %ecx,%edx
    cmpl   $0x0,0x137e(%edx)
    jne    jump_1870f
    mov    %ecx,%eax
    call   func_17ff0
    movl   $0xffffffff,0x137e(%edx)
    jmp    jump_187d9
  jump_1870f:
    lea    0x0(,%esi,4),%ebp
    sub    %esi,%ebp
    lea    0xbe(%ecx),%edx
    shl    $0x2,%ebp
    lea    0x4e7a(%ecx),%eax
    mov    (%edx,%ebp,1),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx,%ebp,1),%ebx
    mov    %ebx,0x4(%eax)
    flds   0x8(%edx,%ebp,1)
    lea    0x0(,%esi,8),%edx
    add    %esi,%edx
    lea    0x56e(%ecx),%ebx
    shl    $0x2,%edx
    add    %edx,%ebx
    fstps  0x8(%eax)
    lea    0x4e46(%ecx),%edx
    flds   (%ebx)
    lea    0xc(%ebx),%edi
    fstps  (%edx)
    lea    0xc(%edx),%esi
    flds   0x4(%ebx)
    add    $0x18,%ebx
    fstps  0x4(%edx)
    add    $0x18,%edx
    flds   -0x10(%ebx)
    fstps  -0x10(%edx)
    flds   (%edi)
    fstps  (%esi)
    flds   0x4(%edi)
    fstps  0x4(%esi)
    flds   0x8(%edi)
    fstps  0x8(%esi)
    mov    (%ebx),%esi
    mov    %esi,(%edx)
    mov    0x4(%ebx),%esi
    mov    %esi,0x4(%edx)
    mov    0x8(%ebx),%esi
    mov    %esi,0x8(%edx)
    lea    0x150e(%ecx),%edx
    lea    0x1d1e(%ecx),%ebx
    mov    (%edx,%ebp,1),%esi
    mov    %esi,(%ebx)
    mov    0x4(%edx,%ebp,1),%esi
    mov    %esi,0x4(%ebx)
    mov    0x8(%edx,%ebp,1),%esi
    mov    %esi,0x8(%ebx)
    flds   0x4(%eax)
    fmul   %st(0),%st
    flds   (%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x8(%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    %ecx,%eax
    fstps  0x4f16(%ecx)
    call   func_181f0
  jump_187d9:
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_18c2c
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_187ec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1cc,%esp
    mov    %eax,%edi
    xor    %esi,%esi
    jmp    jump_1880d
  jump_187fe:
    imul   $0x35,%eax,%eax
    mov    0x1d2a(%edi),%edx
    inc    %esi
    movb   $0x0,0x33(%edx,%eax,1)
  jump_1880d:
    movswl %si,%eax
    cmp    0x1d2e(%edi),%eax
    jl     jump_187fe
    mov    0x1d2a(%edi),%esi
    movl   $0x0,0x1d32(%edi)
    movb   $0x6,(%esi)
    mov    %esi,0x1d16(%edi)
    movw   $0xffff,0x5(%esi)
    mov    0x1d32(%edi),%ebx
    xor    %eax,%eax
    inc    %ebx
    add    $0x35,%esi
    mov    %ebx,0x1d32(%edi)
    jmp    jump_1885f
  jump_1884b:
    movb   $0xff,(%esi)
    mov    0x1d32(%edi),%ebp
    inc    %eax
    inc    %ebp
    add    $0x35,%esi
    mov    %ebp,0x1d32(%edi)
  jump_1885f:
    movswl %ax,%edx
    cmp    $0x1,%edx
    jl     jump_1884b
    movb   $0x0,(%esi)
    mov    data_d3660,%eax
    mov    %eax,0x1(%esi)
    mov    (%eax),%cx
    mov    $0x1,%ebx
    and    $0xffff,%ecx
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_1826c
    mov    0x1d32(%edi),%ecx
    xor    %edx,%edx
    inc    %ecx
    mov    %dx,0x1c4(%esp)
    mov    %ecx,0x1d32(%edi)
    xor    %ebp,%ebp
    jmp    jump_188d2
  jump_188a4:
    and    $0xffff,%ecx
    mov    %ebp,%ebx
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_1826c
    mov    0x1c4(%esp),%ecx
    mov    0x1d32(%edi),%ebx
    inc    %ecx
    inc    %ebx
    mov    %cx,0x1c4(%esp)
    mov    %ebx,0x1d32(%edi)
  jump_188d2:
    mov    data_d3660,%eax
    mov    0x1c4(%esp),%edx
    cmp    0x5a(%eax),%dx
    jge    jump_1894a
    mov    0x1d32(%edi),%eax
    cmp    0x1d2e(%edi),%eax
    jl     jump_18903
    mov    $0x6fc,%ebx
    mov    $data_905af,%edx
    mov    %ebp,%eax
    call   func_26198
  jump_18903:
    mov    0x1c2(%esp),%edx
    mov    data_d3660,%eax
    sar    $0x10,%edx
    add    $0x35,%esi
    mov    0x46(%eax,%edx,4),%eax
    movb   $0x1,(%esi)
    mov    %eax,0x1(%esi)
    imul   $0x5,0x16(%eax),%cx
    add    0x14(%eax),%cx
    movswl %cx,%eax
    cmp    $0x37,%eax
    jl     jump_188a4
    mov    $0x706,%ebx
    mov    $data_905be,%edx
    mov    %ebp,%eax
    call   func_26198
    jmp    jump_188a4
  jump_1894a:
    mov    0x1(%esi),%eax
    flds   0x4(%eax)
    fmul   %st(0),%st
    flds   (%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x8(%eax)
    fmul   %st(0),%st
    sub    $0x8,%esp
    faddp  %st,%st(1)
    xor    %ecx,%ecx
    fstpl  (%esp)
    mov    %cx,0x1d0(%esp)
    call   func_76e30
    fstps  0x4f1e(%edi)
    jmp    jump_18a11
  jump_1897f:
    andb   $0xfe,0x33(%esi)
    mov    0x14(%ebp),%eax
    mov    %eax,0x1ac(%esp)
    mov    0x18(%ebp),%eax
    mov    %eax,0x1b0(%esp)
    mov    0x1c(%ebp),%eax
    add    $0x14,%ebp
  jump_1899d:
    mov    %eax,0x1b4(%esp)
    flds   0x1b0(%esp)
    fmul   %st(0),%st
    flds   0x1ac(%esp)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x1b4(%esp)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fstps  0x1b8(%esp)
    flds   0x4f1e(%edi)
    fcomps 0x1b8(%esp)
    fnstsw %ax
    sahf
    jae    jump_189f4
    mov    0x1b8(%esp),%eax
    mov    %eax,0x4f1e(%edi)
  jump_189f4:
    mov    0x1c8(%esp),%ecx
    mov    0x1d32(%edi),%ebp
    inc    %ecx
    inc    %ebp
    mov    %cx,0x1c8(%esp)
    mov    %ebp,0x1d32(%edi)
  jump_18a11:
    mov    data_d3660,%eax
    mov    0x1c8(%esp),%edx
    cmp    0x44(%eax),%dx
    jge    jump_18ad5
    mov    0x1d32(%edi),%eax
    cmp    0x1d2e(%edi),%eax
    jl     jump_18a46
    mov    $0x716,%ebx
    mov    $data_905cd,%edx
    xor    %eax,%eax
    call   func_26198
  jump_18a46:
    mov    0x1c6(%esp),%edx
    mov    data_d3660,%eax
    sar    $0x10,%edx
    add    $0x35,%esi
    mov    0x2c(%eax,%edx,4),%ebp
    movb   $0x3,(%esi)
    mov    %ebp,0x1(%esi)
    mov    0x23(%ebp),%dl
    xor    %eax,%eax
    test   $0x1,%dl
    je     jump_18a71
    mov    $0x1,%eax
  jump_18a71:
    testb  $0x2,0x23(%ebp)
    je     jump_18a7a
    add    $0x2,%eax
  jump_18a7a:
    mov    $0x2,%ebx
    xor    %ecx,%ecx
    mov    %esi,%edx
    mov    %ax,%cx
    mov    %edi,%eax
    call   func_1826c
    xor    %eax,%eax
    mov    %eax,0x1ac(%esp)
    mov    %eax,0x1b0(%esp)
    mov    %eax,0x1b4(%esp)
    mov    data_d3660,%eax
    cmp    0x0(%ebp),%eax
    jne    jump_1897f
    orb    $0x1,0x33(%esi)
    mov    0x8(%ebp),%eax
    mov    %eax,0x1ac(%esp)
    mov    0xc(%ebp),%eax
    mov    %eax,0x1b0(%esp)
    mov    0x10(%ebp),%eax
    add    $0x8,%ebp
    jmp    jump_1899d
  jump_18ad5:
    flds   0x4f1e(%edi)
    mov    %esp,%edx
    fadds  data_905fa
    xor    %ecx,%ecx
    fstps  0x4f1e(%edi)
    call   func_1d794
    mov    %eax,0x1bc(%esp)
    jmp    jump_18afa
  jump_18af9:
    inc    %ecx
  jump_18afa:
    mov    0x1bc(%esp),%edx
    movswl %cx,%eax
    cmp    %edx,%eax
    jge    jump_18b64
    mov    (%esp,%eax,4),%ebp
    cmpb   $0x4,0x58(%ebp)
    jne    jump_18af9
    mov    0x1d32(%edi),%eax
    cmp    0x1d2e(%edi),%eax
    jl     jump_18b30
    mov    $0x750,%ebx
    mov    $data_905dc,%edx
    xor    %eax,%eax
    call   func_26198
  jump_18b30:
    add    $0x35,%esi
    mov    %ebp,0x1(%esi)
    movb   $0x2,(%esi)
    mov    0x54(%ebp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    0xa7(%ebp),%ebx
    mov    data_ffebc(,%eax,2),%ax
    sar    $0x18,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_156c0
    incl   0x1d32(%edi)
    jmp    jump_18af9
  jump_18b64:
    xor    %eax,%eax
    mov    data_d365e,%dx
    mov    %ax,0x1c0(%esp)
    test   %dx,%dx
    jle    jump_18bf8
    jmp    jump_18bd7
  jump_18b80:
    mov    0x1be(%esp),%eax
    sar    $0x10,%eax
    imul   $0xd,%eax,%eax
    add    $0x35,%esi
    mov    $data_d35e9,%edx
    movb   $0x4,(%esi)
    add    %eax,%edx
    mov    $0x3,%ebx
    mov    %edx,0x1(%esi)
    mov    %edi,%eax
    movsbl (%edx),%ecx
    mov    %esi,%edx
    call   func_1826c
    mov    0x1d32(%edi),%eax
    inc    %eax
    mov    0x1c0(%esp),%ebx
    mov    %eax,0x1d32(%edi)
    inc    %ebx
    mov    data_d365e,%cx
    mov    %bx,0x1c0(%esp)
    cmp    %cx,%bx
    jge    jump_18bf8
  jump_18bd7:
    mov    0x1d32(%edi),%eax
    cmp    0x1d2e(%edi),%eax
    jl     jump_18b80
    mov    $0x761,%ebx
    mov    $data_905eb,%edx
    xor    %eax,%eax
    call   func_26198
    jmp    jump_18b80
  jump_18bf8:
    xor    %eax,%eax
    jmp    jump_18c11
  jump_18bfc:
    imul   $0x35,%ecx,%ecx
    mov    0x1d2a(%edi),%esi
    mov    0x33(%ecx,%esi,1),%dl
    and    $0xfb,%dl
    inc    %eax
    mov    %dl,0x33(%ecx,%esi,1)
  jump_18c11:
    movswl %ax,%ecx
    cmp    0x1d32(%edi),%ecx
    jl     jump_18bfc
    add    $0x1cc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_18c2c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ebx
    mov    %edx,%esi
    lea    0x1d36(%eax),%ecx
    mov    %ecx,%eax
    lea    0x253a(%ebx),%edx
    call   func_15788
    mov    %edx,%eax
    call   func_15788
    lea    0x2d3e(%ebx),%eax
    call   func_15788
    lea    0x3542(%ebx),%eax
    call   func_15d2c
    mov    %ebx,%eax
    call   func_173f4
    mov    %ecx,%eax
    call   func_157ec
    mov    %edx,%eax
    call   func_157ec
    test   %esi,%esi
    jne    jump_18c89
    mov    0xa7(%ebx),%ecx
    mov    %ebx,%eax
    xor    %edx,%edx
    call   *0xc(%ecx)
  jump_18c89:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret

vtable_18c90:
    .long   func_18dd9
    .long   func_18f9f
    .long   func_1906b
    .long   func_1914d
    .long   func_18dfb
    .long   func_18dfb


/*----------------------------------------------------------------*/
func_18ca8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x178,%esp
    mov    %eax,%ebp
    test   %edx,%edx
    jne    jump_18cc6
    mov    $data_9a23c,%edi
    lea    0x4(%ebp),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
  jump_18cc6:
    xor    %eax,%eax
    mov    0x4f2e(%ebp),%al
    push   %eax
    lea    0x4(%ebp),%eax
    push   %eax
    call   func_5e9d0
    lea    0x2d3e(%ebp),%eax
    add    $0x8,%esp
    mov    %ebp,%edx
    call   func_15948
    mov    %ebp,%eax
    call   func_19ae8
    lea    0x253a(%ebp),%eax
    mov    %ebp,%edx
    call   func_15948
    cmpl   $0x0,0x5046(%ebp)
    je     jump_18d12
    lea    0x3542(%ebp),%eax
    mov    %ebp,%edx
    call   func_15d74
  jump_18d12:
    cmpl   $0x0,0xaf(%ebp)
    jne    jump_18d41
    mov    0xb7(%ebp),%ah
    cmp    $0x2,%ah
    je     jump_18d2b
    cmp    $0x3,%ah
    jne    jump_18d41
  jump_18d2b:
    lea    0x3542(%ebp),%eax
    xor    %ebx,%ebx
    mov    %ebp,%edx
    mov    0xbc(%ebp),%bx
    call   func_15da4
  jump_18d41:
    cmpl   $0x0,0x503a(%ebp)
    je     jump_18d5a
    testb  $0x1,0x4f2f(%ebp)
    jne    jump_18d5a
    mov    %ebp,%eax
    call   func_1936c
  jump_18d5a:
    cmpl   $0x0,0x5046(%ebp)
    je     jump_18d70
    lea    0x3542(%ebp),%eax
    mov    %ebp,%edx
    call   func_15e1c
  jump_18d70:
    lea    0x1d36(%ebp),%eax
    mov    $0x3,%ebx
    mov    %ebp,%edx
    xor    %ecx,%ecx
    call   func_15948
    mov    data_104bea,%cl
    lea    0x4(%ebp),%eax
    mov    %ebx,%edx
    call   func_53e38
    mov    data_96bac,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_10ae74(,%eax,4),%eax
    test   %eax,%eax
    jne    jump_18dbd
    mov    $0x7ac,%ebx
    mov    $data_905fe,%edx
    call   func_26198
  jump_18dbd:
    xor    %edi,%edi
    mov    0xaf(%ebp),%eax
    mov    %edi,0x174(%esp)
    test   %eax,%eax
    jne    jump_19256
    jmp    jump_18e38


/*----------------------------------------------------------------*/
func_18dd9:
/*----------------------------------------------------------------*/
    mov    0x1(%eax),%eax
    add    $0x1c,%eax
    push   %eax
    mov    $0x3,%eax
    call   func_1cea8
    push   %eax
    lea    0x120(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp


/*----------------------------------------------------------------*/
func_18dfb:
/*----------------------------------------------------------------*/
    push   $0x0
    lea    0x11c(%esp),%ecx
    mov    $data_10debe,%edi
    mov    $data_d8668,%esi
    movswl %dx,%edx
    push   $0xff
    mov    0x14(%ebp),%ebx
    mov    0x10(%ebp),%eax
    push   %edx
    sub    $0x1e,%ebx
    sub    $0xc8,%eax
    push   $0x0
    mov    %eax,%edx
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_18e38:
    mov    %ebp,%eax
    mov    0x174(%esp),%edx
    call   func_17260
    test   %edx,%edx
    je     jump_1934e
    mov    data_a0cfc,%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_1934e
    lea    0x34(%edx),%eax
    push   %eax
    mov    0x54(%edx),%eax
    sar    $0x10,%eax
    mov    %eax,%ebp
    shl    $0x5,%ebp
    sub    %eax,%ebp
    shl    $0x3,%ebp
    sub    %eax,%ebp
    xor    %edx,%edx
    mov    data_a2f73(,%ebp,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    push   $data_90613
    lea    0xd4(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
    push   $0x0
    lea    0xcc(%esp),%ecx
    push   %ebx
    mov    $data_10de9e,%edi
    mov    $data_d8668,%esi
    push   %ebx
    mov    $0xfa,%edx
    mov    $data_10de96,%eax
    push   $0x0
    mov    $0xa,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    0x174(%esp),%eax
    mov    0x8c(%eax),%ecx
    push   %ecx
    mov    0x94(%eax),%esi
    push   %esi
    mov    0x88(%eax),%edi
    push   %edi
    push   $data_90619
    lea    0xd8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x14,%esp
    mov    $0x14,%ebx
    mov    $0xfa,%edx
    push   $0x0
    lea    0xcc(%esp),%ecx
    mov    $data_d8668,%esi
    push   $0xffffffff
    mov    $data_10de9e,%edi
    mov    $data_10de96,%eax
    push   $0xffffffff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    lea    0x10(%esp),%edi
    mov    $data_96418,%esi
    call   func_2b8a8
    mov    $0x32,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    mov    $data_90638,%esi
    lea    0xc8(%esp),%edi
    mov    0x174(%esp),%edx
    push   %edi
  jump_18f5a:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_18f72
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_18f5a
  jump_18f72:
    pop    %edi
    mov    0x5a(%edx),%edx
    sar    $0x18,%edx
    test   %edx,%edx
    jl     jump_18f93
    mov    0x174(%esp),%eax
    movsbw 0x5d(%eax),%ax
    cmp    $0x7,%ax
    jle    jump_192a7
  jump_18f93:
    lea    0xc8(%esp),%ecx
    jmp    jump_192b7


/*----------------------------------------------------------------*/
func_18f9f:
/*----------------------------------------------------------------*/
    mov    0x1(%eax),%ebx
    lea    0x24(%ebx),%eax
    push   %eax
    mov    $0x4,%eax
    call   func_1cea8
    push   %eax
    lea    0x120(%esp),%eax
    push   %eax
    call   func_76d09
    xor    %eax,%eax
    mov    0x57(%ebx),%al
    add    $0xc,%esp
    cmp    $0xff,%eax
    je     func_18dfb
    mov    %eax,%edx
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    mov    $0x5,%eax
    call   func_1cea8
    push   %eax
    lea    0x15c(%esp),%eax
    push   %eax
    lea    0x160(%esp),%esi
    call   func_76d09
    add    $0xc,%esp
    lea    0x118(%esp),%edi
    xor    %edx,%edx
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_1902c:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_19044
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1902c
  jump_19044:
    pop    %edi
    mov    0x57(%ebx),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f74(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    lea    0x13(%eax),%edx
    jmp    func_18dfb


/*----------------------------------------------------------------*/
func_1906b:
/*----------------------------------------------------------------*/
    mov    0x1(%eax),%eax
    mov    %eax,%ebx
    mov    %ebx,%edx
    mov    %eax,0x174(%esp)
    mov    0x54(%edx),%edx
    add    $0x34,%eax
    sar    $0x10,%edx
    push   %eax
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    push   $data_9060d
    lea    0x124(%esp),%eax
    push   %eax
    call   func_76d09
    mov    %ebx,%eax
    xor    %edx,%edx
    mov    0x54(%eax),%eax
    mov    data_104bea,%dl
    sar    $0x10,%eax
    add    $0x10,%esp
    cmp    %edx,%eax
    jne    jump_19124
    mov    %ebx,%eax
    cmpb   $0x0,0x5d(%eax)
    je     jump_19124
    mov    $0x6,%eax
    call   func_1cea8
    mov    %eax,%esi
    mov    $0x7,%eax
    mov    %ebx,%edx
    call   func_1cea8
    cmpb   $0x1,0x5d(%edx)
    je     jump_190fb
    mov    %eax,%esi
  jump_190fb:
    lea    0x118(%esp),%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_1910b:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_19123
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1910b
  jump_19123:
    pop    %edi
  jump_19124:
    mov    0x54(%ebx),%edx
    sar    $0x10,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f74(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    lea    0x13(%eax),%edx
    jmp    func_18dfb


/*----------------------------------------------------------------*/
func_1914d:
/*----------------------------------------------------------------*/
    mov    $0x8,%eax
    lea    0x118(%esp),%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_19161:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_19179
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_19161
  jump_19179:
    pop    %edi
    mov    0xaf(%ebp),%eax
    mov    0x1(%eax),%eax
    testb  $0x1,0x23(%eax)
    je     jump_191b6
    mov    $0x9,%eax
    lea    0x118(%esp),%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_1919d:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_191b5
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1919d
  jump_191b5:
    pop    %edi
  jump_191b6:
    mov    0xaf(%ebp),%eax
    mov    0x33(%eax),%bl
    and    $0x1,%bl
    movsbl %bl,%ebx
    test   %ebx,%ebx
    je     jump_191d1
    mov    0x1(%eax),%ebx
    mov    0x4(%ebx),%ebx
    jmp    jump_191d6
  jump_191d1:
    mov    0x1(%eax),%ebx
    mov    (%ebx),%ebx
  jump_191d6:
    mov    $0x1,%esi
    xor    %eax,%eax
    mov    data_104bea,%cl
    mov    0x17(%ebx),%al
    shl    %cl,%esi
    test   %esi,%eax
    je     func_18dfb
    mov    $0xa,%eax
    lea    0x118(%esp),%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_1920c:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_19224
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1920c
  jump_19224:
    pop    %edi
    lea    0x118(%esp),%edi
    lea    0x1c(%ebx),%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_19238:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_19250
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_19238
  jump_19250:
    pop    %edi
    jmp    func_18dfb
  jump_19256:
    mov    $0x2,%eax
    lea    0x118(%esp),%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_1926a:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_19282
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1926a
  jump_19282:
    pop    %edi
    mov    0xaf(%ebp),%eax
    mov    (%eax),%bl
    mov    $0xf3,%edx
    cmp    $0x5,%bl
    ja     func_18dfb
    and    $0xff,%ebx
    jmp    *%cs:vtable_18c90(,%ebx,4)
  jump_192a7:
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %esp,%ecx
    shl    $0x2,%eax
    add    %eax,%ecx
  jump_192b7:
    push   $0x0
    mov    $0x1e,%ebx
    push   $0xffffffff
    mov    $0xfa,%edx
    mov    $data_10de9e,%edi
    push   $0xffffffff
    mov    $data_d8668,%esi
    mov    $data_10de96,%eax
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    0x174(%esp),%eax
    mov    0x5d(%eax),%dl
    cmp    $0x1,%dl
    jne    jump_19318
    push   $0x0
    mov    $0x1e,%ebx
    mov    $0x140,%edx
    mov    $data_10de9e,%edi
    push   $0xffffffff
    mov    $data_d8668,%esi
    mov    0x5e(%eax),%ecx
    push   $0xffffffff
    mov    $data_10de96,%eax
    add    $0x1c,%ecx
    jmp    jump_19342
  jump_19318:
    cmp    $0x2,%dl
    jne    jump_1934e
    push   $0x0
    mov    $0x1e,%ebx
    mov    $0x140,%edx
    mov    $data_10de9e,%edi
    push   $0xffffffff
    mov    $data_d8668,%esi
    mov    0x5e(%eax),%ecx
    push   $0xffffffff
    mov    $data_10de96,%eax
    add    $0x24,%ecx
  jump_19342:
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_1934e:
    mov    $data_9a23c,%edx
    mov    $data_10ae70,%eax
    call   func_552cc
    add    $0x178,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1936c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xf8,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    mov    %edx,0x3c(%esp)
    mov    %edx,0x40(%esp)
    mov    %edx,0x44(%esp)
    mov    %edx,0x48(%esp)
    mov    %edx,0x4c(%esp)
    mov    %edx,0x50(%esp)
    mov    %edx,0x30(%esp)
    mov    %edx,0x34(%esp)
    mov    %edx,0x38(%esp)
    flds   0x4f2a(%eax)
    fmuls  data_90646
    fsts   0xc0(%esp)
    fmuls  0xc0(%esp)
    fstps  0xc0(%esp)
    flds   0x4f2a(%eax)
    fmuls  data_9064a
    call   func_76e98
    fistpl 0x90(%esp)
    mov    0x90(%esp),%eax
    add    $0x2,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    mov    %eax,0xc4(%esp)
    sub    %edx,%eax
    sar    %eax
    flds   0x4f2a(%esi)
    fmuls  data_9064e
    mov    %eax,0xa0(%esp)
    shl    $0x5,%eax
    call   func_76e98
    mov    %eax,0xa0(%esp)
    lea    0x10(%eax),%edx
    fistpl 0x90(%esp)
    mov    %edx,0xa0(%esp)
    mov    0x90(%esp),%edx
    add    $0x2,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    $0x68,%edi
    mov    %eax,0xc8(%esp)
    mov    %eax,%edx
    shl    $0x2,%eax
    mov    $0x61,%ebp
    add    %edx,%eax
    mov    %edi,0xac(%esp)
    shl    $0x5,%eax
    mov    %ebp,0xb8(%esp)
    mov    %eax,0xc8(%esp)
    lea    0x10(%eax),%ebx
    mov    0xa0(%esp),%ecx
    mov    %ebx,0xc8(%esp)
    cmp    %ecx,%ebx
    jle    jump_1948b
    lea    -0xa0(%ebx),%edi
    mov    %edi,0xc8(%esp)
  jump_1948b:
    flds   0x4f2a(%esi)
    mov    $0xffffffff,%ebp
    xor    %eax,%eax
    mov    %ebp,0xcc(%esp)
    mov    %eax,0xbc(%esp)
    fcomps data_90652
    fnstsw %ax
    sahf
    jae    jump_194b8
    mov    %ebp,0xbc(%esp)
  jump_194b8:
    flds   0x4f16(%esi)
    fmuls  data_90656
    mov    0xc4(%esp),%ebx
    xor    %ebp,%ebp
    fstps  0xdc(%esp)
    fildl  0xa0(%esp)
    fstps  0xe4(%esp)
    test   %ebx,%ebx
    jle    jump_197cb
    lea    0x4(%esi),%eax
    lea    0x1d1e(%esi),%edi
    mov    %eax,0xa8(%esp)
    lea    0x4e86(%esi),%eax
    mov    %eax,0xb0(%esp)
  jump_19507:
    fildl  0xc8(%esp)
    fcomps 0xe4(%esp)
    fnstsw %ax
    sahf
    jne    jump_19521
    mov    %ebp,0xcc(%esp)
  jump_19521:
    flds   0xe4(%esp)
    fmul   %st,%st(0)
    fsubrs 0xc0(%esp)
    fstps  0xd4(%esp)
    fldz
    fcomps 0xd4(%esp)
    fnstsw %ax
    sahf
    jae    jump_197a7
    flds   0xd4(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    xor    %edx,%edx
    call   func_76e30
    mov    0xe4(%esp),%eax
    fstps  0xd4(%esp)
    mov    %eax,0x3c(%esp)
    mov    0xdc(%esp),%eax
    flds   0xd4(%esp)
    mov    %eax,0x40(%esp)
    mov    0xd4(%esp),%eax
    mov    %edx,0x60(%esp)
    mov    %eax,0x44(%esp)
    mov    0xe4(%esp),%eax
    fchs
    mov    %eax,0x48(%esp)
    mov    0xdc(%esp),%eax
    fstps  0x84(%esp)
    mov    %eax,0x4c(%esp)
    mov    0x84(%esp),%eax
    mov    %edx,0x64(%esp)
    mov    %eax,0x50(%esp)
    lea    0x54(%esp),%eax
    mov    %edx,0x68(%esp)
    mov    %eax,0x8c(%esp)
    flds   0xe4(%esp)
    fadds  (%edi)
    fstps  0x60(%esp)
    flds   0xdc(%esp)
    fadds  0x4(%edi)
    mov    0x60(%esp),%eax
    fstps  0x64(%esp)
    flds   0xd4(%esp)
    fadds  0x8(%edi)
    mov    %eax,0x54(%esp)
    mov    0x64(%esp),%eax
    fstps  0x68(%esp)
    mov    %eax,0x58(%esp)
    mov    0x68(%esp),%eax
    mov    %eax,0x5c(%esp)
    mov    0x60(%esp),%eax
    mov    %eax,0x3c(%esp)
    mov    0x64(%esp),%eax
    mov    %edx,0x24(%esp)
    mov    %eax,0x40(%esp)
    mov    0x68(%esp),%eax
    mov    %edx,0x28(%esp)
    mov    %eax,0x44(%esp)
    lea    0x6c(%esp),%eax
    mov    %edx,0x2c(%esp)
    mov    %eax,0x88(%esp)
    flds   0xe4(%esp)
    fadds  (%edi)
    fstps  0x24(%esp)
    flds   0xdc(%esp)
    fadds  0x4(%edi)
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    flds   0x84(%esp)
    fadds  0x8(%edi)
    mov    %eax,0x6c(%esp)
    mov    0x28(%esp),%eax
    fstps  0x2c(%esp)
    mov    %eax,0x70(%esp)
    mov    0x2c(%esp),%eax
    mov    %eax,0x74(%esp)
    mov    0x24(%esp),%eax
    mov    %eax,0x48(%esp)
    mov    0x28(%esp),%eax
    lea    0x30(%esp),%ebx
    mov    %eax,0x4c(%esp)
    mov    0x2c(%esp),%eax
    mov    0xb0(%esp),%edx
    mov    %eax,0x50(%esp)
    lea    0x3c(%esp),%eax
    call   func_53384
    lea    0xf0(%esp),%eax
    push   %eax
    lea    0xf0(%esp),%eax
    push   %eax
    mov    0x4f22(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0x40(%esp),%ebx
    push   0x4e6e(%esi)
    lea    0x44(%esp),%eax
    mov    0xc4(%esp),%edx
    call   func_533d4
    lea    0x48(%esp),%eax
    call   func_53384
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xf8(%esp),%eax
    push   %eax
    mov    0x4f22(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xdc(%esp),%ecx
    push   0x4e6e(%esi)
    lea    0x44(%esp),%eax
    mov    $0xffffffff,%ebx
    call   func_533d4
    test   %ecx,%ecx
    jl     jump_19752
    mov    %ebp,%edx
    sub    %ecx,%edx
    mov    $0x5,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    test   %edx,%edx
    jne    jump_19752
    mov    0xb8(%esp),%ebx
    jmp    jump_19763
  jump_19752:
    cmpl   $0x0,0xbc(%esp)
    je     jump_19763
    mov    0xac(%esp),%ebx
  jump_19763:
    cmp    $0xffffffff,%ebx
    je     jump_197a7
    push   %ebx
    mov    0xea(%esp),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    0xfe(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xfe(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xfe(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xc0(%esp),%ebx
    push   %ebx
    call   func_5c001
    add    $0x1c,%esp
  jump_197a7:
    flds   0xe4(%esp)
    mov    0xc4(%esp),%ecx
    fadds  data_9065a
    inc    %ebp
    fstps  0xe4(%esp)
    cmp    %ecx,%ebp
    jl     jump_19507
  jump_197cb:
    fildl  0xa0(%esp)
    mov    $0xffffffff,%edi
    mov    0xc4(%esp),%eax
    fstps  0xe0(%esp)
    xor    %ebp,%ebp
    mov    %edi,0xd0(%esp)
    test   %eax,%eax
    jle    jump_19ad9
    lea    0x4(%esi),%eax
    lea    0x1d1e(%esi),%edi
    mov    %eax,0xa4(%esp)
    lea    0x4e86(%esi),%eax
    mov    %eax,0xb4(%esp)
  jump_19813:
    fildl  0xc8(%esp)
    fcomps 0xe0(%esp)
    fnstsw %ax
    sahf
    jne    jump_1982d
    mov    %ebp,0xd0(%esp)
  jump_1982d:
    flds   0xe0(%esp)
    fmul   %st,%st(0)
    fsubrs 0xc0(%esp)
    fstps  0xd8(%esp)
    fldz
    fcomps 0xd8(%esp)
    fnstsw %ax
    sahf
    jae    jump_19ab5
    flds   0xd8(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fstps  0xd8(%esp)
    mov    0xd8(%esp),%eax
    flds   0xd8(%esp)
    mov    %eax,0x3c(%esp)
    mov    0xdc(%esp),%eax
    fchs
    mov    %eax,0x40(%esp)
    mov    0xe0(%esp),%eax
    fstps  0x94(%esp)
    mov    %eax,0x44(%esp)
    mov    0x94(%esp),%eax
    mov    %eax,0x48(%esp)
    mov    0xdc(%esp),%eax
    mov    %eax,0x4c(%esp)
    mov    0xe0(%esp),%eax
    mov    %eax,0x50(%esp)
    lea    0x78(%esp),%eax
    mov    %eax,0x98(%esp)
    xor    %eax,%eax
    mov    %eax,0x18(%esp)
    mov    %eax,0x1c(%esp)
    mov    %eax,0x20(%esp)
    flds   0xd8(%esp)
    fadds  (%edi)
    fstps  0x18(%esp)
    flds   0xdc(%esp)
    fadds  0x4(%edi)
    mov    0x18(%esp),%eax
    fstps  0x1c(%esp)
    flds   0xe0(%esp)
    fadds  0x8(%edi)
    mov    %eax,0x78(%esp)
    mov    0x1c(%esp),%eax
    fstps  0x20(%esp)
    mov    %eax,0x7c(%esp)
    mov    0x20(%esp),%eax
    mov    %eax,0x80(%esp)
    mov    0x18(%esp),%eax
    xor    %edx,%edx
    mov    %eax,0x3c(%esp)
    mov    0x1c(%esp),%eax
    mov    %edx,0xc(%esp)
    mov    %eax,0x40(%esp)
    mov    0x20(%esp),%eax
    mov    %edx,0x10(%esp)
    mov    %eax,0x44(%esp)
    mov    %esp,%eax
    mov    %edx,0x14(%esp)
    mov    %eax,0x9c(%esp)
    flds   0x94(%esp)
    fadds  (%edi)
    fstps  0xc(%esp)
    flds   0xdc(%esp)
    fadds  0x4(%edi)
    mov    0xc(%esp),%eax
    fstps  0x10(%esp)
    flds   0xe0(%esp)
    fadds  0x8(%edi)
    mov    %eax,(%esp)
    mov    0x10(%esp),%eax
    fstps  0x14(%esp)
    mov    %eax,0x4(%esp)
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%esp)
    mov    0xc(%esp),%eax
    mov    %eax,0x48(%esp)
    mov    0x10(%esp),%eax
    lea    0x30(%esp),%ebx
    mov    %eax,0x4c(%esp)
    mov    0x14(%esp),%eax
    mov    0xb4(%esp),%edx
    mov    %eax,0x50(%esp)
    lea    0x3c(%esp),%eax
    call   func_53384
    lea    0xf0(%esp),%eax
    push   %eax
    lea    0xf0(%esp),%eax
    push   %eax
    mov    0x4f22(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0x40(%esp),%ebx
    push   0x4e6e(%esi)
    lea    0x44(%esp),%eax
    mov    0xc8(%esp),%edx
    call   func_533d4
    lea    0x48(%esp),%eax
    call   func_53384
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xf8(%esp),%eax
    push   %eax
    mov    0x4f22(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xe0(%esp),%ecx
    push   0x4e6e(%esi)
    lea    0x44(%esp),%eax
    mov    $0xffffffff,%ebx
    call   func_533d4
    test   %ecx,%ecx
    jl     jump_19a60
    mov    %ebp,%edx
    sub    %ecx,%edx
    mov    $0x5,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    test   %edx,%edx
    jne    jump_19a60
    mov    0xb8(%esp),%ebx
    jmp    jump_19a71
  jump_19a60:
    cmpl   $0x0,0xbc(%esp)
    je     jump_19a71
    mov    0xac(%esp),%ebx
  jump_19a71:
    cmp    $0xffffffff,%ebx
    je     jump_19ab5
    push   %ebx
    mov    0xea(%esp),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    0xfe(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xfe(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xfe(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xbc(%esp),%ebx
    push   %ebx
    call   func_5c001
    add    $0x1c,%esp
  jump_19ab5:
    flds   0xe0(%esp)
    mov    0xc4(%esp),%ecx
    fadds  data_9065a
    inc    %ebp
    fstps  0xe0(%esp)
    cmp    %ecx,%ebp
    jl     jump_19813
  jump_19ad9:
    add    $0xf8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_19ae8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x36c,%esp
    mov    %eax,0x35c(%esp)
    xor    %edx,%edx
    mov    %edx,0x338(%esp)
    mov    %edx,0x33c(%esp)
    mov    %edx,0x340(%esp)
    mov    data_96bac,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_10ae74(,%eax,4),%eax
    mov    %eax,0x350(%esp)
    test   %eax,%eax
    jne    jump_19b42
    mov    $0x8e7,%ebx
    mov    $data_9065e,%edx
    call   func_26198
  jump_19b42:
    mov    0x35c(%esp),%eax
    add    $0x4,%eax
    mov    $data_a3d21,%esi
    mov    %eax,0x34c(%esp)
    mov    0x35c(%esp),%eax
    xor    %ebp,%ebp
    add    $0x4e46,%eax
    xor    %edi,%edi
    mov    %eax,0x348(%esp)
    lea    0x258(%esp),%eax
    add    $0x8,%esi
    mov    %eax,0x358(%esp)
    lea    0x190(%esp),%eax
    mov    %ebp,0x360(%esp)
    mov    %eax,0x354(%esp)
    jmp    jump_19c38
  jump_19b9a:
    test   %edx,%edx
    jle    jump_19ba5
    mov    $0x1,%eax
    jmp    jump_19bb2
  jump_19ba5:
    cmp    $0xffffff24,%edx
    jle    jump_19bb2
    mov    $0x2,%eax
  jump_19bb2:
    mov    0x360(%esp),%edx
    mov    0x18e(%esp,%edx,1),%edx
    sar    $0x10,%edx
    push   %edx
    mov    0x364(%esp),%edx
    mov    0x25a(%esp,%edx,1),%edx
    sar    $0x10,%edx
    push   %edx
    movswl %bx,%edx
    cwtl
    shl    $0x2,%edx
    add    %eax,%edx
    mov    0x358(%esp),%eax
    push   %edx
    mov    0xab(%eax),%ebx
    push   %ebx
    mov    0x35c(%esp),%ecx
    push   %ecx
    call   func_5cb3c
    add    $0x14,%esp
  jump_19bfe:
    mov    0x358(%esp),%eax
    mov    0x354(%esp),%edx
    mov    0x360(%esp),%ebx
    add    $0x4,%edi
    add    $0x60,%esi
    inc    %ebp
    add    $0x2,%eax
    add    $0x2,%edx
    add    $0x2,%ebx
    mov    %eax,0x358(%esp)
    mov    %edx,0x354(%esp)
    mov    %ebx,0x360(%esp)
  jump_19c38:
    mov    data_a629f,%eax
    sar    $0x10,%eax
    cmp    %eax,%ebp
    jge    jump_19e1d
    imul   $0x60,%ebp,%ebx
    mov    (%esi),%eax
    mov    %eax,0x338(%esp)
    mov    0x4(%esi),%eax
    mov    %eax,0x33c(%esp)
    mov    0x8(%esi),%eax
    lea    0x32c(%esp),%edx
    mov    %eax,0x340(%esp)
    mov    %edx,0x344(%esp)
    xor    %edx,%edx
    mov    data_d3660,%eax
    mov    %edx,0x320(%esp)
    mov    %edx,0x324(%esp)
    mov    %edx,0x328(%esp)
    flds   0x338(%esp)
    fsubs  0x8(%eax)
    fstps  0x320(%esp)
    flds   0x33c(%esp)
    fsubs  0xc(%eax)
    add    $0x8,%eax
    fstps  0x324(%esp)
    flds   0x340(%esp)
    fsubs  0x8(%eax)
    mov    0x320(%esp),%eax
    mov    %eax,0x32c(%esp)
    mov    0x324(%esp),%eax
    fstps  0x328(%esp)
    mov    %eax,0x330(%esp)
    mov    0x328(%esp),%eax
    mov    %eax,0x334(%esp)
    mov    0x320(%esp),%eax
    mov    %eax,0x338(%esp)
    mov    0x324(%esp),%eax
    mov    %eax,0x33c(%esp)
    mov    0x328(%esp),%eax
    mov    %eax,0x340(%esp)
    lea    0x338(%esp),%eax
    mov    %edx,(%esp,%edi,1)
    call   func_53078
    test   %eax,%eax
    jne    jump_19bfe
    mov    0x348(%esp),%edx
    lea    0x338(%esp),%eax
    call   func_53114
    mov    0x340(%esp),%eax
    mov    %eax,(%esp,%edi,1)
    fldz
    fcomps (%esp,%edi,1)
    fnstsw %ax
    sahf
    jae    jump_19bfe
    mov    0x354(%esp),%eax
    push   %eax
    mov    0x360(%esp),%eax
    mov    0x35c(%esp),%edx
    mov    0x4f22(%eax),%eax
    push   %edx
    sar    $0x10,%eax
    push   %eax
    mov    0x368(%esp),%eax
    mov    0x4f20(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x36c(%esp),%eax
    push   0x4e6e(%eax)
    lea    0x34c(%esp),%eax
    call   func_533d4
    flds   0x33c(%esp)
    fmul   %st(0),%st
    flds   0x338(%esp)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x340(%esp)
    fmul   %st(0),%st
    sub    $0x8,%esp
    faddp  %st,%st(1)
    mov    data_a3d21(%ebx),%bx
    fstpl  (%esp)
    call   func_76e30
    fadds  data_9066d
    call   func_76e98
    fistpl 0x364(%esp)
    mov    0x364(%esp),%eax
    mov    %ax,0x368(%esp)
    mov    0x366(%esp),%edx
    sar    $0x10,%edx
    mov    $0x3,%eax
    cmp    $0xdc,%edx
    jle    jump_19b9a
    xor    %eax,%eax
    jmp    jump_19bb2
  jump_19e1d:
    add    $0x36c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_19e2c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3450,%esp
    mov    %eax,%ebp
    mov    %edx,0x3410(%esp)
    add    $0x4eea,%eax
    mov    %eax,0x343c(%esp)
    mov    %ebp,%eax
    add    $0x4ede,%eax
    mov    %eax,0x3440(%esp)
    mov    %ebp,%eax
    add    $0x4e46,%eax
    mov    %eax,0x344c(%esp)
    mov    %ebp,%eax
    add    $0x1d1e,%eax
    mov    %eax,0x3448(%esp)
    mov    %ebp,%eax
    add    $0x150e,%eax
    mov    %eax,0x341c(%esp)
    mov    %ebp,%eax
    add    $0x137e,%eax
    mov    %eax,0x3418(%esp)
    mov    %ebp,%eax
    add    $0x56e,%eax
    lea    0xbe(%ebp),%edi
    mov    %eax,0x3414(%esp)
    mov    %ebp,%eax
    add    $0x4f02,%eax
    mov    %eax,0x342c(%esp)
    mov    %ebp,%eax
    add    $0x4ef6,%eax
    mov    %eax,0x3428(%esp)
    mov    %ebp,%eax
    add    $0x4eba,%eax
    mov    %eax,0x3444(%esp)
    mov    %ebp,%eax
    add    $0x4e7a,%eax
    mov    %eax,0x3430(%esp)
    mov    %ebp,%eax
    add    $0x4e5e,%eax
    mov    %eax,0x3434(%esp)
    mov    %ebp,%eax
    add    $0x4e52,%eax
    mov    %eax,0x3438(%esp)
    mov    %ebp,%eax
    add    $0x4ed2,%eax
    mov    %eax,0x3424(%esp)
    mov    %ebp,%eax
    add    $0x4ec6,%eax
    mov    %eax,0x3420(%esp)
    cmp    $0xffffffff,%ebx
    jne    jump_1a3e9
    mov    $data_959d8,%ebx
    mov    $0x64,%edx
    lea    0x1a08(%esp),%eax
    call   func_77394
    mov    $data_95a3c,%ebx
    mov    $0x64,%edx
    add    $0x4b0,%eax
    call   func_77394
    mov    $data_959d8,%ebx
    mov    $0x64,%edx
    add    $0xfa0,%eax
    call   func_77394
    add    $0x4b0,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    call   func_1b4f0
    add    $0x98,%eax
    xor    %ecx,%ecx
    mov    $0x1,%edx
    movl   $0x0,0x4(%eax)
    xor    %ebx,%ebx
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%esi
    movl   $0x0,(%eax)
    mov    %esi,%eax
    add    $0xc,%esi
    call   func_1aca0
    mov    %esi,%eax
    add    $0xc,%esi
    call   func_1aca0
    mov    %esi,%eax
    sub    $0x18,%esi
    call   func_1aca0
    mov    %esi,%eax
    call   func_1ac70
    mov    $0x1,%ebx
    lea    0xc(%esi),%eax
    xor    %ecx,%ecx
    xor    %edx,%edx
    call   func_1ac70
    mov    $0x1,%ecx
    lea    0x18(%esi),%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_1ac70
    mov    $0x1a08,%ebx
    lea    0x1a08(%esp),%edx
    mov    0x3410(%esp),%eax
    mov    $0x4b0,%ecx
    lea    0x1a08(%esp),%esi
    call   func_1bf94
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    $0xe10,%ecx
    lea    0x1eb8(%esp),%esi
    mov    0x3414(%esp),%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    $0x190,%ecx
    lea    0x2cc8(%esp),%esi
    mov    0x3418(%esp),%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    $0x4b0,%ecx
    lea    0x2e58(%esp),%esi
    mov    0x341c(%esp),%edi
    mov    0x3448(%esp),%edx
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    0x3308(%esp),%eax
    mov    %eax,(%edx)
    mov    0x330c(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x3310(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x344c(%esp),%edx
    mov    0x3314(%esp),%eax
    mov    %eax,(%edx)
    mov    0x3318(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x331c(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x3438(%esp),%edx
    mov    0x3320(%esp),%eax
    mov    %eax,(%edx)
    mov    0x3324(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x3328(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x3434(%esp),%edx
    mov    0x332c(%esp),%eax
    mov    %eax,(%edx)
    mov    0x3330(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x3334(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x344c(%esp),%edx
    mov    0x3338(%esp),%eax
    mov    %eax,0x24(%edx)
    mov    0x333c(%esp),%eax
    mov    %eax,0x28(%edx)
    mov    0x3340(%esp),%eax
    mov    %eax,0x2c(%edx)
    mov    0x3344(%esp),%eax
    mov    %eax,0x30(%edx)
    mov    0x3430(%esp),%edx
    mov    0x3348(%esp),%eax
    mov    %eax,(%edx)
    mov    0x334c(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x3350(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x344c(%esp),%edx
    mov    0x3354(%esp),%eax
    mov    %eax,0x40(%edx)
    mov    0x3358(%esp),%eax
    mov    %eax,0x44(%edx)
    mov    0x335c(%esp),%eax
    mov    %eax,0x48(%edx)
    mov    0x3360(%esp),%eax
    mov    %eax,0x4c(%edx)
    mov    0x3364(%esp),%eax
    mov    %eax,0x50(%edx)
    mov    0x3368(%esp),%eax
    mov    %eax,0x54(%edx)
    mov    0x336c(%esp),%eax
    mov    %eax,0x58(%edx)
    mov    0x3370(%esp),%eax
    mov    %eax,0x5c(%edx)
    mov    0x3374(%esp),%eax
    mov    %eax,0x60(%edx)
    mov    0x3378(%esp),%eax
    mov    %eax,0x64(%edx)
    mov    0x337c(%esp),%eax
    mov    %eax,0x68(%edx)
    mov    0x3380(%esp),%eax
    mov    %eax,0x6c(%edx)
    mov    0x3384(%esp),%eax
    mov    %eax,0x70(%edx)
    mov    0x3444(%esp),%edx
    mov    0x3388(%esp),%eax
    mov    %eax,(%edx)
    mov    0x338c(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x3390(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x3420(%esp),%edx
    mov    0x3394(%esp),%eax
    mov    %eax,(%edx)
    mov    0x3398(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x339c(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x3424(%esp),%edx
    mov    0x33a0(%esp),%eax
    mov    %eax,(%edx)
    mov    0x33a4(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x33a8(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x3440(%esp),%edx
    mov    0x33ac(%esp),%eax
    mov    %eax,(%edx)
    mov    0x33b0(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x33b4(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x343c(%esp),%edx
    mov    0x33b8(%esp),%eax
    mov    %eax,(%edx)
    mov    0x33bc(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x33c0(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x3428(%esp),%edx
    mov    0x33c4(%esp),%eax
    mov    %eax,(%edx)
    mov    0x33c8(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x33cc(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x342c(%esp),%edx
    mov    0x33d0(%esp),%eax
    mov    %eax,(%edx)
    mov    0x33d4(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x33d8(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x33dc(%esp),%eax
    mov    %eax,0x4f0e(%ebp)
    mov    0x33e0(%esp),%eax
    mov    %eax,0x4f12(%ebp)
    mov    0x33e4(%esp),%eax
    mov    %eax,0x4f16(%ebp)
    mov    0x33e8(%esp),%eax
    mov    %eax,0x4f1a(%ebp)
    mov    0x33ec(%esp),%eax
    mov    %eax,0x4f1e(%ebp)
    mov    0x33f0(%esp),%eax
    mov    %ax,0x4f22(%ebp)
    mov    0x33f2(%esp),%eax
    mov    %ax,0x4f24(%ebp)
    mov    0x33f4(%esp),%eax
    mov    %eax,0x4f26(%ebp)
    mov    0x33f8(%esp),%eax
    mov    %eax,0x4f2a(%ebp)
    mov    0x33fc(%esp),%eax
    mov    %eax,0x503a(%ebp)
    mov    0x3400(%esp),%eax
    mov    %eax,0x503e(%ebp)
    mov    0x3404(%esp),%eax
    mov    %eax,0x5042(%ebp)
    mov    0x3408(%esp),%eax
    mov    %eax,0x5046(%ebp)
    mov    0x340c(%esp),%eax
    xor    %edx,%edx
    mov    %eax,0x504a(%ebp)
    lea    0x3314(%esp),%eax
    call   func_1b66c
    lea    0x2e58(%esp),%eax
    xor    %edx,%edx
    call   func_1a9e0
    lea    0x1eb8(%esp),%eax
    xor    %edx,%edx
    call   func_1aa00
    lea    0x1a08(%esp),%eax
    xor    %edx,%edx
    call   func_1a9e0
    add    $0x3450,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_1a3e9:
    mov    $data_959d8,%ebx
    mov    $0x64,%edx
    mov    %esp,%eax
    call   func_77394
    mov    $data_95a3c,%ebx
    mov    $0x64,%edx
    add    $0x4b0,%eax
    call   func_77394
    mov    $data_959d8,%ebx
    mov    $0x64,%edx
    add    $0xfa0,%eax
    call   func_77394
    add    $0x4b0,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    call   func_1b4f0
    add    $0x98,%eax
    xor    %ecx,%ecx
    mov    $0x1,%edx
    movl   $0x0,0x4(%eax)
    xor    %ebx,%ebx
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%esi
    movl   $0x0,(%eax)
    mov    %esi,%eax
    add    $0xc,%esi
    call   func_1aca0
    mov    %esi,%eax
    add    $0xc,%esi
    call   func_1aca0
    mov    %esi,%eax
    sub    $0x18,%esi
    call   func_1aca0
    mov    %esi,%eax
    call   func_1ac70
    mov    $0x1,%ebx
    lea    0xc(%esi),%eax
    xor    %ecx,%ecx
    xor    %edx,%edx
    call   func_1ac70
    mov    $0x1,%ecx
    lea    0x18(%esi),%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_1ac70
    mov    $0x4b0,%ecx
    mov    %edi,%esi
    mov    %esp,%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    $0xe10,%ecx
    mov    0x3414(%esp),%esi
    lea    0x4b0(%esp),%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    $0x190,%ecx
    mov    0x3418(%esp),%esi
    lea    0x12c0(%esp),%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    $0x4b0,%ecx
    mov    0x341c(%esp),%esi
    lea    0x1450(%esp),%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    0x3448(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x1900(%esp)
    mov    0x3448(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x1904(%esp)
    mov    0x3448(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x1908(%esp)
    mov    0x344c(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x190c(%esp)
    mov    0x344c(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x1910(%esp)
    mov    0x344c(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x1914(%esp)
    mov    0x3438(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x1918(%esp)
    mov    0x3438(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x191c(%esp)
    mov    0x3438(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x1920(%esp)
    mov    0x3434(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x1924(%esp)
    mov    0x3434(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x1928(%esp)
    mov    0x3434(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x192c(%esp)
    mov    0x344c(%esp),%eax
    mov    0x24(%eax),%eax
    mov    %eax,0x1930(%esp)
    mov    0x344c(%esp),%eax
    mov    0x28(%eax),%eax
    mov    %eax,0x1934(%esp)
    mov    0x344c(%esp),%eax
    mov    0x2c(%eax),%eax
    mov    %eax,0x1938(%esp)
    mov    0x344c(%esp),%eax
    mov    0x30(%eax),%eax
    mov    %eax,0x193c(%esp)
    mov    0x3430(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x1940(%esp)
    mov    0x3430(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x1944(%esp)
    mov    0x3430(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x1948(%esp)
    mov    0x344c(%esp),%eax
    mov    0x40(%eax),%eax
    mov    %eax,0x194c(%esp)
    mov    0x344c(%esp),%eax
    mov    0x44(%eax),%eax
    mov    %eax,0x1950(%esp)
    mov    0x344c(%esp),%eax
    mov    0x48(%eax),%eax
    mov    %eax,0x1954(%esp)
    mov    0x344c(%esp),%eax
    mov    0x4c(%eax),%eax
    mov    %eax,0x1958(%esp)
    mov    0x344c(%esp),%eax
    mov    0x50(%eax),%eax
    mov    %eax,0x195c(%esp)
    mov    0x344c(%esp),%eax
    mov    0x54(%eax),%eax
    mov    %eax,0x1960(%esp)
    mov    0x344c(%esp),%eax
    mov    0x58(%eax),%eax
    mov    %eax,0x1964(%esp)
    mov    0x344c(%esp),%eax
    mov    0x5c(%eax),%eax
    mov    %eax,0x1968(%esp)
    mov    0x344c(%esp),%eax
    mov    0x60(%eax),%eax
    mov    %eax,0x196c(%esp)
    mov    0x344c(%esp),%eax
    mov    0x64(%eax),%eax
    mov    %eax,0x1970(%esp)
    mov    0x344c(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,0x1974(%esp)
    mov    0x344c(%esp),%eax
    mov    0x6c(%eax),%eax
    mov    %eax,0x1978(%esp)
    mov    0x344c(%esp),%eax
    mov    0x70(%eax),%eax
    mov    %eax,0x197c(%esp)
    mov    0x3444(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x1980(%esp)
    mov    0x3444(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x1984(%esp)
    mov    0x3444(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x1988(%esp)
    mov    0x3420(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x198c(%esp)
    mov    0x3420(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x1990(%esp)
    mov    0x3420(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x1994(%esp)
    mov    0x3424(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x1998(%esp)
    mov    0x3424(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x199c(%esp)
    mov    0x3424(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x19a0(%esp)
    mov    0x3440(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x19a4(%esp)
    mov    0x3440(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x19a8(%esp)
    mov    0x3440(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x19ac(%esp)
    mov    0x343c(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x19b0(%esp)
    mov    0x343c(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x19b4(%esp)
    mov    0x343c(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x19b8(%esp)
    mov    0x3428(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x19bc(%esp)
    mov    0x3428(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x19c0(%esp)
    mov    0x3428(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x19c4(%esp)
    mov    0x342c(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x19c8(%esp)
    mov    0x342c(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x19cc(%esp)
    mov    0x342c(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x19d0(%esp)
    mov    0x4f0e(%ebp),%eax
    mov    %eax,0x19d4(%esp)
    mov    0x4f12(%ebp),%eax
    mov    %eax,0x19d8(%esp)
    mov    0x4f16(%ebp),%eax
    mov    %eax,0x19dc(%esp)
    mov    0x4f1a(%ebp),%eax
    mov    %eax,0x19e0(%esp)
    mov    0x4f1e(%ebp),%eax
    mov    %eax,0x19e4(%esp)
    mov    0x4f22(%ebp),%ax
    mov    %ax,0x19e8(%esp)
    mov    0x4f24(%ebp),%ax
    mov    %ax,0x19ea(%esp)
    mov    0x4f26(%ebp),%eax
    mov    %eax,0x19ec(%esp)
    mov    0x4f2a(%ebp),%eax
    mov    %eax,0x19f0(%esp)
    mov    0x503a(%ebp),%eax
    mov    %eax,0x19f4(%esp)
    mov    0x503e(%ebp),%eax
    mov    %eax,0x19f8(%esp)
    mov    0x5042(%ebp),%eax
    mov    %eax,0x19fc(%esp)
    mov    0x5046(%ebp),%eax
    mov    %eax,0x1a00(%esp)
    mov    $0x1a08,%ebx
    mov    0x504a(%ebp),%eax
    mov    %esp,%edx
    mov    %eax,0x1a04(%esp)
    mov    0x3410(%esp),%eax
    call   func_1c098
    lea    0x190c(%esp),%eax
    xor    %edx,%edx
    call   func_1b66c
    lea    0x1450(%esp),%eax
    xor    %edx,%edx
    call   func_1a9e0
    lea    0x4b0(%esp),%eax
    xor    %edx,%edx
    call   func_1aa00
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1a9e0
    add    $0x3450,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1a9c0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $data_959d8,%ebx
    mov    $0xf,%edx
    call   func_7760c
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1a9e0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $data_959d8,%ebx
    mov    $0x64,%edx
    call   func_7760c
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1aa00:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $data_95a3c,%ebx
    mov    $0x64,%edx
    call   func_7760c
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1aa40:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    flds   (%edx)
    lea    0xc(%edx),%ebx
    fstps  (%eax)
    add    $0xc,%eax
    flds   0x4(%edx)
    add    $0x18,%edx
    fstps  -0x8(%eax)
    add    $0xc,%eax
    mov    -0x10(%edx),%ecx
    mov    %ecx,-0x10(%eax)
    sub    $0x18,%eax
    mov    (%ebx),%ecx
    mov    %ecx,0xc(%eax)
    mov    0x4(%ebx),%ecx
    mov    %ecx,0x10(%eax)
    mov    0x8(%ebx),%ecx
    mov    %ecx,0x14(%eax)
    mov    (%edx),%ebx
    mov    %ebx,0x18(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x1c(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x20(%eax)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1aa90:
/*----------------------------------------------------------------*/
    add    $0x190c,%eax
    xor    %edx,%edx
    call   func_1b66c
    sub    $0x4bc,%eax
    xor    %edx,%edx
    call   func_1a9e0
    sub    $0xfa0,%eax
    xor    %edx,%edx
    call   func_1aa00
    sub    $0x4b0,%eax
    xor    %edx,%edx
    jmp    func_1a9e0


/*----------------------------------------------------------------*/
func_1aac0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    $data_959d8,%ebx
    mov    $0x64,%edx
    call   func_77394
    mov    $data_95a3c,%ebx
    mov    $0x64,%edx
    add    $0x4b0,%eax
    call   func_77394
    mov    $data_959d8,%ebx
    mov    $0x64,%edx
    add    $0xfa0,%eax
    call   func_77394
    add    $0x4b0,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    call   func_1b4f0
    add    $0x98,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    sub    $0x18,%eax
    movl   $0x0,0x1c(%eax)
    movl   $0x0,0x20(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%edx
    movl   $0x3f800000,(%eax)
    movl   $0x0,(%edx)
    movl   $0x3f800000,0x4(%edx)
    movl   $0x0,0x8(%edx)
    lea    0x18(%eax),%edx
    movl   $0x0,(%edx)
    movl   $0x0,0x4(%edx)
    sub    $0x19b0,%eax
    movl   $0x3f800000,0x8(%edx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1abd0:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_1abe0:
/*----------------------------------------------------------------*/
    push   %edx
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    sub    $0x18,%eax
    movl   $0x0,0x1c(%eax)
    movl   $0x0,0x20(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%edx
    movl   $0x3f800000,(%eax)
    movl   $0x0,(%edx)
    movl   $0x3f800000,0x4(%edx)
    movl   $0x0,0x8(%edx)
    lea    0x18(%eax),%edx
    movl   $0x0,(%edx)
    movl   $0x0,0x4(%edx)
    movl   $0x3f800000,0x8(%edx)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_1ac70:
/*----------------------------------------------------------------*/
    sub    $0xc,%esp
    mov    %edx,0x4(%esp)
    mov    %ebx,(%esp)
    mov    %ecx,0x8(%esp)
    fildl  0x4(%esp)
    fstps  (%eax)
    fildl  (%esp)
    fstps  0x4(%eax)
    fildl  0x8(%esp)
    fstps  0x8(%eax)
    add    $0xc,%esp
    ret


/*----------------------------------------------------------------*/
func_1aca0:
/*----------------------------------------------------------------*/
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    ret


/*----------------------------------------------------------------*/
func_1acc0:
/*----------------------------------------------------------------*/
    movl   $0x0,0x2ee4(%eax)
    movl   $0x0,0x2ee8(%eax)
    movw   $0x0,0x2ee0(%eax)
    movw   $0x0,0x2ee2(%eax)
    mov    %eax,%eax


/*----------------------------------------------------------------*/
func_1ace8:
/*----------------------------------------------------------------*/
    movl   $0xffffffff,0x2eec(%eax)
    ret


/*----------------------------------------------------------------*/
func_1acf4:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    mov    0x2ee4(%eax),%eax
    call   func_262cc
    movl   $0x0,0x2ee4(%ebx)
    mov    %ebx,%eax
    movl   $0x0,0x2ee8(%ebx)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1ad1c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %edx,(%esp)
    add    $0x3,%edx
    mov    %edx,(%esp)
    andb   $0xfc,(%esp)
    mov    $data_90674,%ebx
    mov    (%esp),%eax
    mov    $0x5,%edx
    call   func_77604
    call   func_2625c
    mov    %eax,0x2ee4(%ecx)
    test   %eax,%eax
    jne    jump_1ad60
    mov    $0x41,%ebx
    mov    $data_90680,%edx
    call   func_261a8
  jump_1ad60:
    movw   $0x0,0x2ee0(%ecx)
    mov    (%esp),%eax
    movw   $0x0,0x2ee2(%ecx)
    mov    %ecx,%edx
    mov    %eax,0x2ee8(%ecx)
    mov    %ecx,%eax
    lea    0x320(%ecx),%ebx
  jump_1ad85:
    movl   $0x0,(%eax)
    add    $0x4,%eax
    movb   $0x0,0x7d0(%edx)
    add    $0x32,%edx
    movl   $0x0,0x31c(%eax)
    cmp    %ebx,%eax
    jne    jump_1ad85
    add    $0x4,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1adac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    cmpl   $0x0,0x2ee4(%eax)
    jne    jump_1add2
    mov    $0x53,%ebx
    mov    $data_9068d,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1add2:
    mov    %esi,%edi
    mov    $0xffff,%edx
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    %edx,(%esp)
    mov    %ecx,%edi
    test   %ecx,%ecx
    jg     jump_1adfd
    mov    $0x59,%ebx
    mov    $data_9069a,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_1adfd:
    cmp    $0x32,%edi
    jl     jump_1ae21
    push   %esi
    push   $data_906a7
    mov    $0x5b,%ebx
    call   func_2620c
    add    $0x8,%esp
    mov    $data_906c3,%edx
    xor    %eax,%eax
    call   func_261b8
  jump_1ae21:
    mov    0x2ede(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0xc8,%eax
    jl     jump_1ae42
    mov    $0x5c,%ebx
    mov    $data_906d0,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_1ae42:
    mov    %ebp,%eax
    xor    %edx,%edx
  jump_1ae46:
    imul   $0x32,%edx,%ecx
    mov    0x7cd(%eax),%ebx
    sar    $0x18,%ebx
    test   %ebx,%ebx
    jne    jump_1ae96
    lea    0x7d0(%ebp),%edi
    add    %ecx,%edi
    push   %edi
  jump_1ae5f:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1ae77
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1ae5f
  jump_1ae77:
    pop    %edi
    mov    0x2ee0(%ebp),%bx
    inc    %ebx
    mov    %edx,(%esp)
    mov    %bx,0x2ee0(%ebp)
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_1ae96:
    inc    %edx
    add    $0x32,%eax
    cmp    $0xc8,%edx
    jl     jump_1ae46
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1aeb0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    %edx,(%esp)
    mov    %ebx,%esi
    cmpl   $0x0,0x2ee4(%eax)
    jne    jump_1aed8
    mov    $0x70,%ebx
    mov    $data_906dd,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1aed8:
    mov    %esi,%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    %ecx,%edi
    test   %ecx,%ecx
    jg     jump_1aefb
    mov    $0x74,%ebx
    mov    $data_906ea,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_1aefb:
    cmp    $0x32,%edi
    jl     jump_1af1f
    push   %esi
    push   $data_906f7
    mov    $0x76,%ebx
    call   func_2620c
    add    $0x8,%esp
    mov    $data_90713,%edx
    xor    %eax,%eax
    call   func_261b8
  jump_1af1f:
    mov    0x2ede(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0xc8,%eax
    jl     jump_1af40
    mov    $0x77,%ebx
    mov    $data_90720,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_1af40:
    xor    %eax,%eax
    mov    (%esp),%ax
    test   %eax,%eax
    jl     jump_1af51
    cmp    $0xc8,%eax
    jl     jump_1af62
  jump_1af51:
    mov    $0x78,%ebx
    mov    $data_9072d,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1af62:
    xor    %ebx,%ebx
    mov    (%esp),%bx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    add    %eax,%eax
    mov    0x7cd(%eax,%ebp,1),%edx
    sar    $0x18,%edx
    test   %edx,%edx
    je     jump_1afa9
    lea    0x7d0(%ebp),%edx
    add    %eax,%edx
    mov    %esi,%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_1afa0
    mov    $0xffffffff,%eax
    jmp    jump_1aff5
  jump_1afa0:
    mov    %ebx,%edx
    mov    %ebp,%eax
    call   func_1b000
  jump_1afa9:
    xor    %ebx,%ebx
    mov    (%esp),%bx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    lea    0x7d0(%ebp),%edi
    add    %eax,%eax
    add    %eax,%edi
    push   %edi
  jump_1afc8:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1afe0
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1afc8
  jump_1afe0:
    pop    %edi
    mov    0x2ee0(%ebp),%dx
    inc    %edx
    mov    $0xffffffff,%eax
    mov    %dx,0x2ee0(%ebp)
  jump_1aff5:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1b000:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    xor    %eax,%eax
    mov    %dx,%ax
    cmp    $0xc8,%eax
    jl     jump_1b024
    mov    $0x95,%ebx
    mov    $data_9073a,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_1b024:
    xor    %ebx,%ebx
    mov    %si,%bx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    mov    0x7cd(%ecx,%eax,2),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    jne    jump_1b054
    mov    $0x96,%ebx
    mov    $data_90747,%edx
    call   func_261a8
  jump_1b054:
    xor    %ebx,%ebx
    mov    %si,%bx
    mov    %ecx,%eax
    mov    %ebx,%edx
    call   func_1b354
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    movb   $0x0,0x7d0(%ecx,%eax,2)
    decw   0x2ee0(%ecx)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b084:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x118,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    cmpl   $0x0,0x2eec(%eax)
    jne    jump_1b0ad
    mov    $0xa2,%ebx
    mov    $data_90754,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1b0ad:
    xor    %eax,%eax
    mov    %di,%ax
    cmp    $0xc8,%eax
    jl     jump_1b0ca
    mov    $0xa6,%ebx
    mov    $data_90761,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_1b0ca:
    xor    %edx,%edx
    mov    %di,%dx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %edx,%eax
    mov    0x7cd(%esi,%eax,2),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    jne    jump_1b0fa
    mov    $0xa7,%ebx
    mov    $data_9076e,%edx
    call   func_261a8
  jump_1b0fa:
    xor    %edx,%edx
    mov    %di,%dx
    cmpl   $0x0,(%esi,%edx,4)
    jne    jump_1b208
    mov    %esp,%eax
    call   func_1bb78
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    mov    $0x200,%ebx
    add    %edx,%eax
    lea    0x7d0(%esi),%ebp
    add    %eax,%eax
    xor    %ecx,%ecx
    add    %eax,%ebp
    mov    %esp,%eax
    mov    %ebp,%edx
    call   func_1bbfc
    mov    %esp,%eax
    call   func_1be28
    lea    0x3(%eax),%ecx
    and    $0xfc,%cl
    cmp    0x2ee8(%esi),%ecx
    jl     jump_1b16d
    push   %ecx
    push   %ebp
    push   $data_9077b
    mov    $0xb8,%ebx
    call   func_2620c
    add    $0xc,%esp
    mov    $data_907a1,%edx
    xor    %eax,%eax
    call   func_261b8
  jump_1b16d:
    mov    %ecx,%edx
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    %di,%bx
    call   func_1b2dc
    mov    %eax,(%esi,%ebx,4)
    mov    %esp,%eax
    mov    (%esi,%ebx,4),%edx
    mov    %ecx,0x320(%esi,%ebx,4)
    call   func_1bf1c
    test   %eax,%eax
    jne    jump_1b1cb
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    lea    (%ebx,%eax,1),%edx
    lea    0x7d0(%esi),%eax
    add    %edx,%edx
    add    %edx,%eax
    push   %eax
    push   $data_907ae
    mov    $0xc0,%ebx
    call   func_2620c
    add    $0x8,%esp
    mov    $data_907cc,%edx
    xor    %eax,%eax
    call   func_261b8
  jump_1b1cb:
    mov    0x2ee0(%esi),%eax
    sar    $0x10,%eax
    mov    %di,0x640(%esi,%eax,2)
    mov    0x2ee2(%esi),%dx
    inc    %edx
    mov    %esp,%eax
    mov    %dx,0x2ee2(%esi)
    xor    %edx,%edx
    call   func_1bbc8
    xor    %eax,%eax
    mov    %di,%ax
    mov    (%esi,%eax,4),%eax
    add    $0x118,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_1b208:
    mov    %esi,%edx
    xor    %eax,%eax
    jmp    jump_1b212
  jump_1b20e:
    add    $0x2,%edx
    inc    %eax
  jump_1b212:
    mov    0x2ee0(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1b23e
    cmp    0x640(%edx),%di
    je     jump_1b23e
    jmp    jump_1b20e
  jump_1b22a:
    add    $0x2,%edx
    mov    0x640(%edx),%bx
    inc    %eax
    mov    %bx,0x63e(%edx)
    jmp    jump_1b247
  jump_1b23e:
    lea    0x0(,%eax,2),%edx
    add    %esi,%edx
  jump_1b247:
    mov    0x2ee0(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jl     jump_1b22a
    mov    %di,0x63e(%esi,%ebx,2)
    xor    %eax,%eax
    mov    %di,%ax
    mov    (%esi,%eax,4),%eax
    add    $0x118,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b270:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ebx,%ebp
    mov    $0xffff,%edx
    lea    0x7d0(%eax),%ebx
    xor    %ecx,%ecx
    mov    %edx,(%esp)
    jmp    jump_1b293
  jump_1b28f:
    add    $0x32,%ebx
    inc    %ecx
  jump_1b293:
    mov    0x2ede(%edi),%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jge    jump_1b2b0
    mov    %ebx,%edx
    mov    %esi,%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_1b28f
    mov    %ecx,(%esp)
  jump_1b2b0:
    cmp    $0xffffffff,%ebp
    jne    jump_1b2ce
    xor    %eax,%eax
    mov    (%esp),%ax
    cmp    $0xffff,%eax
    jne    jump_1b2ce
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_1adac
    mov    %eax,(%esp)
  jump_1b2ce:
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1b2dc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    mov    %edx,%ebp
    lea    0x320(%eax),%edx
    xor    %esi,%esi
  jump_1b2ed:
    mov    0x320(%eax),%ebx
    add    $0x4,%eax
    add    %ebx,%esi
    cmp    %edx,%eax
    jne    jump_1b2ed
    mov    0x2ee4(%ecx),%eax
    mov    0x2ee8(%ecx),%edx
    xor    %edi,%edi
    sub    %esi,%edx
    add    %esi,%eax
    mov    %edx,%esi
    cmp    %ebp,%edx
    jg     jump_1b34e
  jump_1b314:
    mov    0x2ede(%ecx),%eax
    sar    $0x10,%eax
    cmp    %eax,%edi
    jl     jump_1b332
    mov    $0xff,%ebx
    mov    $data_907d9,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1b332:
    xor    %edx,%edx
    mov    0x640(%ecx),%dx
    add    0x320(%ecx,%edx,4),%esi
    mov    %ecx,%eax
    inc    %edi
    call   func_1b354
    cmp    %ebp,%esi
    jle    jump_1b314
  jump_1b34e:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b354:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ebp
    mov    %edx,0x8(%esp)
    xor    %eax,%eax
    mov    %dx,%ax
    cmp    $0xc8,%eax
    jl     jump_1b37f
    mov    $0x10d,%ebx
    mov    $data_907e6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1b37f:
    xor    %eax,%eax
    mov    0x8(%esp),%ax
    cmpl   $0x0,0x0(%ebp,%eax,4)
    jne    jump_1b394
    xor    %eax,%eax
    jmp    jump_1b48e
  jump_1b394:
    mov    %ebp,%eax
    xor    %edx,%edx
    lea    0x320(%ebp),%ebx
  jump_1b39e:
    mov    0x320(%eax),%ecx
    add    $0x4,%eax
    add    %ecx,%edx
    cmp    %ebx,%eax
    jne    jump_1b39e
    mov    0x2ee4(%ebp),%eax
    add    %edx,%eax
    mov    %eax,0x4(%esp)
    xor    %eax,%eax
    mov    0x8(%esp),%ax
    shl    $0x2,%eax
    lea    (%eax,%ebp,1),%edx
    mov    %edx,(%esp)
    mov    (%esp),%ebx
    mov    (%edx),%edx
    mov    0x320(%ebx),%ebx
    lea    (%edx,%ebx,1),%esi
    mov    0x4(%esp),%ecx
    mov    %edx,%edi
    sub    %esi,%ecx
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    (%esp),%eax
    movl   $0x0,(%eax)
    movl   $0x0,0x320(%eax)
    mov    %ebp,%eax
    lea    0x320(%ebp),%ecx
    jmp    jump_1b413
  jump_1b40c:
    add    $0x4,%eax
    cmp    %ecx,%eax
    je     jump_1b421
  jump_1b413:
    mov    (%eax),%edi
    cmp    %edi,%edx
    jae    jump_1b40c
    mov    %edi,%esi
    sub    %ebx,%esi
    mov    %esi,(%eax)
    jmp    jump_1b40c
  jump_1b421:
    mov    0x4(%esp),%esi
    mov    0x2ee2(%ebp),%dx
    xor    %ecx,%eax
    mov    0x8(%esp),%ecx
    sub    %ebx,%esi
    dec    %edx
    mov    %esi,0x4(%esp)
    mov    %dx,0x2ee2(%ebp)
    mov    %ebp,%edx
    jmp    jump_1b448
  jump_1b444:
    add    $0x2,%edx
    inc    %eax
  jump_1b448:
    mov    0x2ee0(%ebp),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1b474
    cmp    0x640(%edx),%cx
    je     jump_1b474
    jmp    jump_1b444
  jump_1b460:
    add    $0x2,%edx
    mov    0x640(%edx),%bx
    inc    %eax
    mov    %bx,0x63e(%edx)
    jmp    jump_1b47d
  jump_1b474:
    lea    0x0(,%eax,2),%edx
    add    %ebp,%edx
  jump_1b47d:
    mov    0x2ee0(%ebp),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jl     jump_1b460
    mov    0x4(%esp),%eax
  jump_1b48e:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b498:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    xor    %edx,%edx
    jmp    jump_1b4b5
  jump_1b4a1:
    movl   $0x0,(%eax)
    inc    %edx
    movl   $0x0,0x320(%eax)
    add    $0x4,%eax
  jump_1b4b5:
    mov    0x2ede(%ecx),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jl     jump_1b4a1
    movw   $0x0,0x2ee2(%ecx)
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b4d0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_1b498
    movl   $0x0,0x2eec(%edx)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_1b4f0:
/*----------------------------------------------------------------*/
    push   %edx
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    sub    $0x18,%eax
    movl   $0x0,0x1c(%eax)
    movl   $0x0,0x20(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%edx
    movl   $0x3f800000,(%eax)
    movl   $0x0,(%edx)
    movl   $0x3f800000,0x4(%edx)
    movl   $0x0,0x8(%edx)
    lea    0x18(%eax),%edx
    movl   $0x0,(%edx)
    movl   $0x0,0x4(%edx)
    add    $0x34,%eax
    movl   $0x3f800000,0x8(%edx)
    movl   $0x0,(%eax)
    add    $0x40,%eax
    movl   $0x0,-0x3c(%eax)
    movl   $0x0,-0x38(%eax)
    movl   $0x3f800000,-0xc(%eax)
    movl   $0x0,-0x8(%eax)
    mov    -0xc(%eax),%edx
    mov    %edx,-0x20(%eax)
    mov    -0x20(%eax),%edx
    mov    %edx,-0x34(%eax)
    mov    -0x8(%eax),%edx
    mov    %edx,-0x10(%eax)
    mov    -0x10(%eax),%edx
    mov    %edx,-0x14(%eax)
    mov    -0x14(%eax),%edx
    mov    %edx,-0x18(%eax)
    mov    -0x18(%eax),%edx
    mov    %edx,-0x1c(%eax)
    mov    -0x1c(%eax),%edx
    mov    %edx,-0x24(%eax)
    mov    -0x24(%eax),%edx
    mov    %edx,-0x28(%eax)
    mov    -0x28(%eax),%edx
    mov    %edx,-0x2c(%eax)
    mov    -0x2c(%eax),%edx
    mov    %edx,-0x30(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    sub    $0x18,%eax
    movl   $0x3f800000,(%eax)
    movl   $0x0,0x4(%eax)
    lea    0xc(%eax),%edx
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%edx)
    movl   $0x3f800000,0x4(%edx)
    movl   $0x0,0x8(%edx)
    lea    0x18(%eax),%edx
    movl   $0x0,(%edx)
    movl   $0x0,0x4(%edx)
    movl   $0x3f800000,0x8(%edx)
    lea    -0x74(%eax),%edx
    mov    %edx,%eax
    mov    %edx,%eax
    pop    %edx
    nop


/*----------------------------------------------------------------*/
func_1b66c:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_1b808:
/*----------------------------------------------------------------*/
    push   %edx
    mov    0x8(%esp),%edx
    mov    %edx,0x24(%eax)
    mov    0xc(%esp),%edx
    mov    %edx,0x2c(%eax)
    mov    0x10(%esp),%edx
    mov    %edx,0x30(%eax)
    mov    0x14(%esp),%edx
    movl   $0x3f800000,0x70(%eax)
    call   func_1b834
    pop    %edx
    ret    $0x10


/*----------------------------------------------------------------*/
func_1b834:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x4,%esp
    mov    %eax,%ebx
    mov    %edx,(%esp)
    flds   0x24(%eax)
    fmuls  data_95a68
    fmuls  data_907f4
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_775f7
    fildl  (%esp)
    fdivp  %st,%st(1)
    fstps  0x28(%ebx)
    add    $0x4,%esp
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b864:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x64,%esp
    mov    %eax,%edx
    lea    0x54(%esp),%ebx
    mov    %ebx,0x60(%esp)
    xor    %ebx,%ebx
    add    $0x34,%eax
    mov    %ebx,0x48(%esp)
    mov    %ebx,0x4c(%esp)
    mov    %ebx,0x50(%esp)
    flds   (%eax)
    fchs
    fstps  0x48(%esp)
    flds   0x4(%eax)
    fchs
    fstps  0x4c(%esp)
    flds   0x8(%eax)
    mov    0x48(%esp),%eax
    fchs
    mov    %eax,0x54(%esp)
    mov    0x4c(%esp),%eax
    fstps  0x50(%esp)
    mov    %eax,0x58(%esp)
    mov    0x50(%esp),%eax
    lea    0x74(%edx),%ebx
    mov    %eax,0x5c(%esp)
    mov    (%ebx),%eax
    mov    %eax,(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%ebx),%eax
    lea    0xc(%ebx),%ecx
    mov    %eax,0x8(%esp)
    mov    (%ecx),%eax
    mov    %eax,0xc(%esp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x10(%esp)
    mov    0x8(%ecx),%eax
    mov    %eax,0x14(%esp)
    mov    0x18(%ebx),%eax
    mov    %eax,0x18(%esp)
    mov    0x1c(%ebx),%eax
    mov    %eax,0x1c(%esp)
    mov    0x20(%ebx),%eax
    mov    %eax,0x20(%esp)
    mov    (%edx),%eax
    mov    %eax,0x24(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x28(%esp)
    add    $0x18,%ebx
    mov    0x8(%edx),%eax
    lea    0xc(%edx),%ebx
    mov    %eax,0x2c(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x30(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x34(%esp)
    mov    0x8(%ebx),%eax
    lea    0x18(%edx),%ebx
    mov    %eax,0x38(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x3c(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x40(%esp)
    mov    0x8(%ebx),%eax
    lea    0x54(%esp),%ecx
    mov    %eax,0x44(%esp)
    lea    0x40(%edx),%eax
    mov    %esp,%ebx
    lea    0x24(%esp),%edx
    call   func_53b08
    add    $0x64,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b958:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    sub    $0x80,%esp
    mov    %eax,%ebx
    lea    0x48(%esp),%ecx
    mov    %ecx,0x78(%esp)
    xor    %ecx,%ecx
    mov    %ecx,0x60(%esp)
    mov    %ecx,0x64(%esp)
    mov    %ecx,0x68(%esp)
    flds   (%edx)
    fadds  0x34(%eax)
    fstps  0x60(%esp)
    flds   0x4(%edx)
    fadds  0x38(%eax)
    fstps  0x64(%esp)
    flds   0x8(%edx)
    fadds  0x3c(%eax)
    add    $0x34,%eax
    fstps  0x68(%esp)
    mov    0x60(%esp),%eax
    flds   0x60(%esp)
    fchs
    mov    %eax,0x48(%esp)
    fstps  0x54(%esp)
    flds   0x64(%esp)
    mov    0x64(%esp),%eax
    fchs
    mov    %eax,0x4c(%esp)
    mov    0x68(%esp),%eax
    fstps  0x58(%esp)
    mov    %eax,0x50(%esp)
    lea    0x6c(%esp),%eax
    flds   0x68(%esp)
    mov    %eax,0x7c(%esp)
    mov    0x54(%esp),%eax
    fchs
    mov    %eax,0x6c(%esp)
    mov    0x58(%esp),%eax
    fstps  0x5c(%esp)
    mov    %eax,0x70(%esp)
    mov    0x5c(%esp),%eax
    lea    0x74(%ebx),%edx
    mov    %eax,0x74(%esp)
    mov    (%edx),%eax
    mov    %eax,0x24(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x28(%esp)
    mov    0x8(%edx),%eax
    lea    0xc(%edx),%ecx
    mov    %eax,0x2c(%esp)
    mov    (%ecx),%eax
    mov    %eax,0x30(%esp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x34(%esp)
    mov    0x8(%ecx),%eax
    mov    %eax,0x38(%esp)
    mov    0x18(%edx),%eax
    mov    %eax,0x3c(%esp)
    mov    0x1c(%edx),%eax
    mov    %eax,0x40(%esp)
    mov    0x20(%edx),%eax
    mov    %eax,0x44(%esp)
    mov    (%ebx),%eax
    mov    %eax,(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x4(%esp)
    add    $0x18,%edx
    mov    0x8(%ebx),%eax
    lea    0xc(%ebx),%edx
    mov    %eax,0x8(%esp)
    mov    (%edx),%eax
    mov    %eax,0xc(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x10(%esp)
    mov    0x8(%edx),%eax
    lea    0x18(%ebx),%edx
    mov    %eax,0x14(%esp)
    mov    (%edx),%eax
    mov    %eax,0x18(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x1c(%esp)
    mov    0x8(%edx),%eax
    lea    0x6c(%esp),%ecx
    mov    %eax,0x20(%esp)
    lea    0x40(%ebx),%eax
    mov    %esp,%edx
    lea    0x24(%esp),%ebx
    call   func_53b08
    add    $0x80,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1baf0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    add    $0x34,%eax
    push   0x8(%esp)
    call   func_532ac
    mov    %edx,%eax
    push   0x8(%esp)
    call   func_535e4
    pop    %edx
    ret    $0x4


/*----------------------------------------------------------------*/
func_1bb10:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x118,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %esp,%eax
    mov    $0x100,%ebx
    call   func_1bb78
    mov    %edi,%edx
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    mov    $data_907f8,%edx
    mov    (%esp),%eax
    call   func_77673
    mov    %eax,%edi
    test   %esi,%esi
    je     jump_1bb58
    mov    %esi,%edx
    call   func_7776d
    mov    %esp,%eax
    call   func_1be28
    add    %eax,(%esi)
  jump_1bb58:
    mov    $0xffffffff,%ebx
    mov    %esp,%eax
    xor    %edx,%edx
    mov    %ebx,(%esp)
    call   func_1bbc8
    mov    %edi,%eax
    add    $0x118,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1bb78:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    mov    %eax,%edx
    cmpl   $0x0,data_9a250
    jne    jump_1bb9a
    mov    $data_9a254,%eax
    mov    $0xffffffff,%ecx
    call   func_1c3c4
    mov    %ecx,data_9a250
  jump_1bb9a:
    movl   $0xffffffff,(%edx)
    movb   $0x0,0x4(%edx)
    movl   $0x0,0x10c(%edx)
    movl   $0x0,0x110(%edx)
    mov    %edx,%eax
    movl   $0xffffffff,0x108(%edx)
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1bbc8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    call   func_1be00
    cmpl   $0xffffffff,0x110(%ebx)
    jne    jump_1bbeb
    mov    0x10c(%ebx),%ecx
    test   %ecx,%ecx
    je     jump_1bbeb
    mov    %ecx,%eax
    call   func_2627c
  jump_1bbeb:
    mov    0x10c(%ebx),%eax
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1bbfc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %ebx,%edi
    cmpl   $0xffffffff,(%eax)
    je     jump_1bc0c
    call   func_1be00
  jump_1bc0c:
    mov    $0x100,%ebx
    lea    0x4(%esi),%eax
    movl   $0x0,0x110(%esi)
    call   func_77780
    mov    %edi,%edx
    mov    %esi,%eax
    movb   $0x0,0x103(%esi)
    call   func_1bcbc
    mov    %eax,%edi
    test   %eax,%eax
    jne    jump_1bca5
    cmp    $0xffffffff,%ecx
    jne    jump_1bca3
    mov    (%esi),%eax
    call   func_777a5
    mov    %eax,%ecx
    test   %eax,%eax
    jle    jump_1bca3
    mov    $data_907fa,%ebx
    mov    $0x1,%edx
    call   func_77604
    call   func_2625c
    mov    %eax,0x10c(%esi)
    test   %eax,%eax
    je     jump_1bca3
    mov    %eax,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_1bf94
    test   %eax,%eax
    jne    jump_1bc87
    movl   $0xffffffff,0x110(%esi)
    mov    %edi,%eax
    pop    %edi
    pop    %esi
    ret
  jump_1bc87:
    mov    0x10c(%esi),%eax
    call   func_2627c
    mov    0x10c(%esi),%eax
    call   func_76d5c
    mov    %edi,0x10c(%esi)
  jump_1bca3:
    mov    %edi,%eax
  jump_1bca5:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_1bca8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    $0x21,%ebx
    xor    %ecx,%ecx
    call   func_1bbfc
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1bcbc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,0x8(%esp)
    mov    %edx,0x4(%esp)
    cmpl   $0xffffffff,(%eax)
    je     jump_1bcd6
    call   func_1be00
  jump_1bcd6:
    mov    0x8(%esp),%ebp
    mov    0x4(%esp),%ah
    add    $0x4,%ebp
    test   $0x20,%ah
    je     jump_1bd05
    orw    $0x240,0x4(%esp)
    push   $0x180
    mov    0x8(%esp),%edi
    push   %edi
    push   %ebp
    call   func_777e2
    add    $0xc,%esp
    jmp    jump_1bdd8
  jump_1bd05:
    xor    %ebx,%ebx
    mov    %ebx,(%esp)
    test   $0x3,%ah
    jne    jump_1bdbd
    mov    data_a0bcc,%esi
    xor    %edi,%edi
    xor    %ecx,%ecx
    test   %esi,%esi
    jg     jump_1bd38
    jmp    jump_1bdbd
  jump_1bd26:
    mov    data_a0bcc,%eax
    inc    %ecx
    add    $0x32,%ebx
    cmp    %eax,%ecx
    jl     jump_1bd3f
    jmp    jump_1bdbd
  jump_1bd38:
    mov    $data_9a254,%ebx
    xor    %esi,%esi
  jump_1bd3f:
    cmp    data_a0bd0(%esi),%ecx
    jne    jump_1bd4b
    add    $0x4,%esi
    inc    %edi
  jump_1bd4b:
    mov    %ebx,%edx
    mov    %ebp,%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_1bd26
    mov    0x8(%esp),%eax
    mov    %ecx,0x108(%eax)
    lea    0x0(,%edi,4),%eax
    sub    %edi,%eax
    shl    $0x3,%eax
    add    %edi,%eax
    mov    0x4(%esp),%ebx
    add    %eax,%eax
    push   %ebx
    add    $data_a0be4,%eax
    push   %eax
    call   func_777e2
    add    $0x8,%esp
    mov    0x8(%esp),%edx
    mov    %eax,(%edx)
    cmp    $0xffffffff,%eax
    jne    jump_1bda1
    mov    $0xc4,%ebx
    mov    $data_90808,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1bda1:
    mov    0x8(%esp),%eax
    mov    data_a03fc(,%ecx,4),%edx
    xor    %ebx,%ebx
    mov    (%eax),%eax
    mov    $0xffffffff,%edi
    call   func_77a30
    mov    %edi,(%esp)
  jump_1bdbd:
    cmpl   $0x0,(%esp)
    jne    jump_1bdde
    mov    0x4(%esp),%eax
    push   %eax
    mov    0xc(%esp),%eax
    add    $0x4,%eax
    push   %eax
    call   func_777e2
    add    $0x8,%esp
  jump_1bdd8:
    mov    0x8(%esp),%edx
    mov    %eax,(%edx)
  jump_1bdde:
    mov    0x8(%esp),%edx
    mov    0x4(%esp),%eax
    mov    %eax,0x104(%edx)
    cmpl   $0xffffffff,(%edx)
    sete   %al
    and    $0xff,%eax
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1be00:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    (%eax),%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_1be10
    xor    %eax,%eax
    pop    %edx
    pop    %ebx
    ret
  jump_1be10:
    mov    %ebx,%eax
    call   func_77a71
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_1be23
    movl   $0xffffffff,(%edx)
  jump_1be23:
    mov    %ebx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1be28:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebx
    mov    (%eax),%edx
    cmp    $0xffffffff,%edx
    jne    jump_1be3b
    mov    %edx,%eax
    jmp    jump_1be97
  jump_1be3b:
    mov    0x108(%eax),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_1be54
    mov    %edx,%eax
    call   func_777a5
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_1be54:
    mov    data_a0cf2,%ebp
    mov    data_a03fc(,%ecx,4),%edi
    mov    data_a0400(,%ecx,4),%esi
    test   %ebp,%ebp
    jle    jump_1be93
    lea    0x0(,%ebp,4),%ecx
    xor    %eax,%eax
  jump_1be75:
    mov    data_a0bd0(%eax),%edx
    mov    0x108(%ebx),%ebp
    dec    %edx
    cmp    %ebp,%edx
    jne    jump_1be8c
    mov    data_a0cde(%eax),%esi
  jump_1be8c:
    add    $0x4,%eax
    cmp    %ecx,%eax
    jl     jump_1be75
  jump_1be93:
    mov    %esi,%eax
    sub    %edi,%eax
  jump_1be97:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1bea0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    mov    (%eax),%eax
    call   func_77a76
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_1bec5
    mov    0x108(%edx),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_1bec5
    sub    data_a03fc(,%ecx,4),%ebx
  jump_1bec5:
    mov    %ebx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1becc:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    cmpl   $0x0,0x110(%eax)
    je     jump_1bedc
    cmp    $0xffffffff,%ebx
    jne    jump_1bf00
  jump_1bedc:
    mov    0x108(%eax),%esi
    mov    %edx,%ecx
    cmp    $0xffffffff,%esi
    je     jump_1bef2
    mov    data_a03fc(,%esi,4),%ecx
    add    %edx,%ecx
  jump_1bef2:
    mov    %ecx,%edx
    mov    (%eax),%eax
    xor    %ebx,%ebx
    call   func_77a30
    pop    %esi
    pop    %ecx
    ret
  jump_1bf00:
    mov    0x10c(%eax),%eax
    add    %edx,%eax
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1bf0c:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x1,%ebx
    mov    (%eax),%eax
    call   func_77a30
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1bf1c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%ecx
    cmpl   $0xffffffff,(%eax)
    je     jump_1bf89
    call   func_1be28
    mov    %eax,%edi
    xor    %ebp,%ebp
    test   %eax,%eax
    jle    jump_1bf89
    test   %ecx,%ecx
    jne    jump_1bf5a
    mov    $data_90815,%ebx
    mov    $0x5,%edx
    call   func_77604
    call   func_2625c
    mov    %eax,%ecx
    test   %eax,%eax
    je     jump_1bf8b
    mov    $0xffffffff,%ebp
  jump_1bf5a:
    mov    %edi,%ebx
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_1bf94
    cmp    %edi,%eax
    je     jump_1bf85
    cmp    $0xffffffff,%ebp
    jne    jump_1bf75
    mov    %ecx,%eax
    call   func_2627c
  jump_1bf75:
    mov    %ecx,%eax
    call   func_76d5c
    call   func_77a87
    mov    (%eax),%eax
    jmp    jump_1bf89
  jump_1bf85:
    mov    %ecx,%eax
    jmp    jump_1bf8b
  jump_1bf89:
    xor    %eax,%eax
  jump_1bf8b:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1bf94:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    0x108(%eax),%esi
    cmp    $0xffffffff,%esi
    je     jump_1bfc8
    mov    (%eax),%eax
    call   func_77a76
    mov    data_a03fc(,%esi,4),%edi
    mov    %eax,%esi
    sub    %edi,%esi
    mov    %ecx,%eax
    lea    (%esi,%ebx,1),%edi
    call   func_1be28
    cmp    %eax,%edi
    jbe    jump_1bfc8
    mov    %eax,%ebx
    sub    %esi,%ebx
  jump_1bfc8:
    mov    (%ecx),%eax
    call   func_77a93
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1bfd4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,0x8(%esp)
    mov    %edx,%esi
    mov    %ebx,(%esp)
    mov    %ecx,%edi
    mov    %ebx,%eax
    xor    %edx,%edx
    div    %ecx
    xor    %ebp,%ebp
    mov    %eax,0xc(%esp)
    xor    %edx,%edx
    lea    -0x1(%ecx),%eax
    mov    %edx,0x10(%esp)
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    ja     jump_1c019
    jmp    jump_1c05c
  jump_1c004:
    mov    %esi,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    inc    %ebp
    add    %ecx,%esi
    mov    0x4(%esp),%ecx
    call   *0x24(%esp)
    cmp    %ecx,%ebp
    jae    jump_1c05c
  jump_1c019:
    mov    0x8(%esp),%eax
    mov    0xc(%esp),%ebx
    mov    %esi,%edx
    mov    (%eax),%eax
    call   func_77a93
    mov    %eax,%ecx
    cmp    $0xffffffff,%eax
    je     jump_1c08d
    mov    0x10(%esp),%ebx
    add    %eax,%ebx
    mov    0xc(%esp),%eax
    mov    %ebx,0x10(%esp)
    cmp    %eax,%ecx
    jae    jump_1c004
    mov    %ebp,%ecx
    cmp    %edi,%ebp
    jae    jump_1c089
    xor    %esi,%esi
  jump_1c04b:
    mov    %esi,%ebx
    mov    %ecx,%edx
    mov    %edi,%eax
    inc    %ecx
    call   *0x24(%esp)
    cmp    %edi,%ecx
    jb     jump_1c04b
    jmp    jump_1c089
  jump_1c05c:
    mov    (%esp),%ebx
    sub    0x10(%esp),%ebx
    mov    0x8(%esp),%eax
    mov    %esi,%edx
    mov    (%eax),%eax
    call   func_77a93
    cmp    $0xffffffff,%eax
    je     jump_1c08d
    mov    0x10(%esp),%edx
    add    %eax,%edx
    mov    %esi,%ebx
    mov    %edx,0x10(%esp)
    mov    %edi,%eax
    mov    %ebp,%edx
    call   *0x24(%esp)
  jump_1c089:
    mov    0x10(%esp),%eax
  jump_1c08d:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_1c098:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,0x4(%esp)
    mov    %edx,%ebp
    mov    %ebx,%edi
    test   %ebx,%ebx
    je     jump_1c0ff
  jump_1c0ab:
    cmp    $0xfff0,%edi
    jbe    jump_1c0ba
    mov    $0xfff0,%esi
    jmp    jump_1c0bc
  jump_1c0ba:
    mov    %edi,%esi
  jump_1c0bc:
    mov    %esp,%eax
    mov    %ds,%ecx
    push   %eax
    mov    0x8(%esp),%eax
    mov    %esi,%edx
    mov    %ebp,%ebx
    mov    (%eax),%eax
    mov    %esi,0x10(%esp)
    call   func_77bd0
    mov    %eax,0x8(%esp)
    test   %eax,%eax
    jne    jump_1c103
    cmp    (%esp),%esi
    je     jump_1c0f5
    mov    $0x244,%ecx
    mov    $data_90820,%ebx
    mov    $data_9082d,%edx
    call   func_77bd7
  jump_1c0f5:
    mov    0xc(%esp),%edx
    add    %edx,%ebp
    sub    %edx,%edi
    jne    jump_1c0ab
  jump_1c0ff:
    mov    0x8(%esp),%eax
  jump_1c103:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1c278:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    cmpl   $0x5,0x6a9e(%eax)
    jl     jump_1c29e
    mov    $0x28c,%ebx
    mov    $data_9086c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1c29e:
    mov    0x6a9e(%ecx),%ebx
    cmp    $0x5,%ebx
    jge    jump_1c3bb
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    lea    0x6990(%ecx),%edx
    add    %eax,%eax
    mov    $0x32,%ebx
    add    %edx,%eax
    mov    %esi,%edx
    call   func_77780
    push   $0x200
    push   %esi
    call   func_777e2
    mov    %eax,%esi
    add    $0x8,%esp
    mov    %eax,%edi
    cmp    $0xffffffff,%eax
    je     jump_1c3bb
    call   func_777a5
    mov    0x6a9e(%ecx),%edx
    mov    $0x4,%ebx
    mov    %eax,0x6a8a(%ecx,%edx,4)
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_77a93
    mov    $0x1f4,%eax
    mov    0x6978(%ecx),%esi
    mov    (%esp),%ebp
    sub    %esi,%eax
    cmp    %ebp,%eax
    jge    jump_1c331
    mov    $0x2a0,%ebx
    mov    $data_90879,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1c331:
    mov    $0x1f4,%eax
    mov    0x6978(%ecx),%edx
    mov    (%esp),%ebx
    sub    %edx,%eax
    cmp    %ebx,%eax
    jl     jump_1c3bb
    mov    %ebx,%esi
    lea    0x0(,%edx,4),%eax
    shl    $0x2,%ebx
    sub    %edx,%eax
    sub    %esi,%ebx
    shl    $0x3,%eax
    shl    $0x3,%ebx
    add    %edx,%eax
    add    %esi,%ebx
    add    %eax,%eax
    add    %ebx,%ebx
    lea    (%ecx,%eax,1),%edx
    mov    %edi,%eax
    call   func_77a93
    mov    (%esp),%ebx
    mov    0x6978(%ecx),%eax
    lea    0x61a8(%ecx),%edx
    shl    $0x2,%eax
    shl    $0x2,%ebx
    add    %eax,%edx
    mov    %edi,%eax
    call   func_77a93
    mov    %edi,%eax
    call   func_77a71
    mov    (%esp),%eax
    mov    0x6978(%ecx),%esi
    add    %eax,%esi
    mov    0x6a9e(%ecx),%eax
    shl    $0x2,%eax
    lea    (%ecx,%eax,1),%edx
    mov    %esi,0x6978(%ecx)
    mov    %esi,0x697c(%edx)
    incl   0x6a9e(%ecx)
  jump_1c3bb:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1c3c4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x64,%esp
    mov    %eax,%ebx
    mov    $data_90886,%edx
    mov    $data_90888,%eax
    call   func_77f5e
    mov    %eax,%ecx
    test   %eax,%eax
    je     jump_1c409
  jump_1c3e1:
    mov    %esp,%eax
    push   %eax
    push   $data_90890
    push   %ecx
    call   func_78071
    add    $0xc,%esp
    cmp    $0xffffffff,%eax
    je     jump_1c402
    mov    %esp,%edx
    mov    %ebx,%eax
    call   func_1c278
    jmp    jump_1c3e1
  jump_1c402:
    mov    %ecx,%eax
    call   func_7744e
  jump_1c409:
    add    $0x64,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1c410:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    call   func_26160
    call   func_7501c
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1c424:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x55c,%esp
    mov    %eax,%ebp
    mov    %edx,0x558(%esp)
    call   func_78092
    push   $data_90894
    mov    %eax,%edx
    call   func_78097
    add    $0x4,%esp
  jump_1c44c:
    call   func_78092
    sub    %edx,%eax
    cmp    $0xfa,%eax
    jb     jump_1c44c
    mov    $0xab,%eax
    mov    $data_96668,%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_1c46c:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1c484
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1c46c
  jump_1c484:
    pop    %edi
    mov    $func_1c410,%eax
    call   func_780f0
    cmp    $0x1,%ebp
    jle    jump_1c4c2
    mov    0x558(%esp),%eax
    mov    0x4(%eax),%eax
    cmpb   $0x76,(%eax)
    jne    jump_1c4c2
    mov    data_964e0,%edx
    push   %edx
    mov    $0xac,%eax
    call   func_1cea8
    push   %eax
    call   func_78097
    add    $0x8,%esp
    call   func_7812c
  jump_1c4c2:
    xor    %ebx,%ebx
    mov    %ebx,0x554(%esp)
    cmp    $0x1,%ebp
    jle    jump_1c4ea
    mov    0x558(%esp),%eax
    mov    0x4(%eax),%eax
    cmpb   $0x75,(%eax)
    jne    jump_1c4ea
    movl   $0xffffffff,0x554(%esp)
  jump_1c4ea:
    call   func_53dec
    mov    %eax,%edx
    cmp    $0x1,%ebp
    jle    jump_1c51e
    mov    0x558(%esp),%ebx
    mov    0x4(%ebx),%ebx
    cmpb   $0x6d,(%ebx)
    jne    jump_1c51e
    push   %eax
    mov    $0xad,%eax
    call   func_1cea8
    push   %eax
    call   func_78097
    add    $0x8,%esp
    call   func_7812c
  jump_1c51e:
    cmp    $0x300000,%edx
    jge    jump_1c55e
    mov    $0x300000,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    shl    $0xa,%edx
    sbb    %edx,%eax
    sar    $0xa,%eax
    inc    %eax
    push   %eax
    mov    $0xae,%eax
    call   func_1cea8
    push   %eax
    push   $data_96668
    call   func_76d09
    add    $0xc,%esp
    mov    $0x1,%eax
    call   func_7814a
  jump_1c55e:
    lea    0x300(%esp),%eax
    mov    $0x200,%ebx
    mov    $data_908e0,%edx
    call   func_1bb78
    xor    %ecx,%ecx
    lea    0x300(%esp),%eax
    call   func_1bbfc
    mov    %eax,%edx
    lea    0x300(%esp),%eax
    call   func_1be00
    test   %edx,%edx
    je     jump_1c5c9
    mov    $0xaf,%eax
    mov    $data_96668,%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_1c5a6:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1c5be
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1c5a6
  jump_1c5be:
    pop    %edi
    mov    $0x1,%eax
    call   func_7814a
  jump_1c5c9:
    lea    0x300(%esp),%eax
    xor    %edx,%edx
    call   func_1bbc8
    push   $0x101
    call   func_53d22
    add    $0x4,%esp
    test   %eax,%eax
    je     jump_1c5f2
    cmpl   $0xffffffff,0x554(%esp)
    jne    jump_1c62a
  jump_1c5f2:
    push   $0x1
    push   $data_908f1
    call   func_75098
    add    $0x8,%esp
    test   %eax,%eax
    jne    jump_1c62a
    mov    $0xb0,%eax
    call   func_1cea8
    push   %eax
    xor    %ch,%ch
    call   func_78097
    add    $0x4,%esp
    mov    $0x1,%eax
    mov    %ch,data_96668
    call   func_7814a
  jump_1c62a:
    mov    $data_908f4,%ebx
    mov    $data_90900,%edx
    mov    $data_d8654,%eax
    call   func_2bd88
    test   %eax,%eax
    jne    jump_1c651
    mov    $0x9b,%ebx
    mov    $data_90905,%edx
    call   func_261a8
  jump_1c651:
    push   $0x0
    push   $0x1df
    push   $0x27f
    push   $0x0
    push   $0x0
    call   *data_96be0
    mov    $0x100,%ecx
    mov    $data_90911,%edx
    add    $0x14,%esp
    mov    $data_d8654,%eax
    xor    %ebx,%ebx
    call   func_2c158
    mov    $0x300,%ebx
    mov    %esp,%eax
    xor    %edx,%edx
    mov    %esp,%ecx
    call   func_76ec0
    mov    $0x100,%ebx
    mov    $data_d8654,%eax
    xor    %edx,%edx
    call   func_2c224
    lea    0x418(%esp),%eax
    mov    $0x200,%ebx
    mov    $data_9091f,%edx
    call   func_1bb78
    xor    %ecx,%ecx
    lea    0x418(%esp),%eax
    call   func_1bbfc
    lea    0x418(%esp),%eax
    mov    $data_d8da0,%edx
    call   func_1be28
    mov    %eax,%ebx
    lea    0x418(%esp),%eax
    add    $data_d8da0,%ebx
    call   func_1bf1c
    push   %ebx
    push   $data_d8da0
    push   $data_d8668
    call   func_60df1
    add    $0xc,%esp
    push   $0x1df
    push   $0x27f
    push   $0x0
    push   $0x0
    push   $data_d8668
    call   *data_96c00
    add    $0x14,%esp
    push   $0x19
    push   $data_d8a87
    push   $data_d8654
    call   func_615ed
    mov    $0xffffffff,%edx
    add    $0xc,%esp
    mov    $data_10914c,%eax
    xor    %ebx,%ebx
    call   func_4efb0
    test   %eax,%eax
    jne    jump_1c74e
    mov    $data_10914c,%eax
    call   func_4ff08
    jmp    jump_1c779
  jump_1c74e:
    cmpl   $0xffffffff,data_109357
    jne    jump_1c779
    mov    $data_9092d,%edx
    mov    $data_10914c,%eax
    call   func_4f65c
    test   %eax,%eax
    jne    jump_1c779
    mov    $0xbb,%ebx
    mov    $data_90937,%edx
    call   func_26198
  jump_1c779:
    mov    $data_90943,%edx
    mov    $data_90945,%eax
    call   func_77f5e
    test   %eax,%eax
    je     jump_1c79b
    movl   $0xffffffff,data_a0cfc
    call   func_7744e
  jump_1c79b:
    mov    $data_9094f,%edx
    mov    $data_90951,%eax
    call   func_77f5e
    test   %eax,%eax
    je     jump_1c7bd
    movl   $0xffffffff,data_a0d00
    call   func_7744e
  jump_1c7bd:
    call   func_78222
    test   %eax,%eax
    je     jump_1c7d7
    mov    $0xd8,%ebx
    mov    $data_9095b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1c7d7:
    mov    $data_10ae70,%eax
    call   func_545ec
    cmp    $0xffffffff,%eax
    je     jump_1c7f7
    mov    $0xe1,%ebx
    mov    $data_90967,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_1c7f7:
    call   func_78222
    test   %eax,%eax
    je     jump_1c811
    mov    $0xe3,%ebx
    mov    $data_90973,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1c811:
    mov    $data_d85f8,%eax
    call   func_2633c
    test   %eax,%eax
    jne    jump_1c854
    mov    $0xb1,%eax
    mov    $data_96668,%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_1c831:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1c849
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1c831
  jump_1c849:
    pop    %edi
    mov    $0x1,%eax
    call   func_7814a
  jump_1c854:
    mov    $data_d8654,%eax
    call   func_2c744
    call   func_78222
    test   %eax,%eax
    je     jump_1c878
    mov    $0xee,%ebx
    mov    $data_9097f,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1c878:
    xor    %eax,%eax
    call   func_782ac
    call   func_78303
    xor    %eax,%eax
    mov    $data_9098b,%edx
    call   func_1cf14
    mov    $data_9098d,%eax
    call   func_77f5e
    mov    %eax,%edi
    test   %eax,%eax
    jne    jump_1c8c5
    mov    $0x7,%ebx
    mov    $0x32,%edx
    mov    $data_a2f6c,%eax
    xor    %ecx,%ecx
    call   func_1e10c
    mov    $data_a2f6c,%eax
    call   func_1f404
    jmp    jump_1c992
  jump_1c8c5:
    lea    0x550(%esp),%edx
    push   %edx
    lea    0x534(%esp),%edx
    push   %edx
    lea    0x554(%esp),%edx
    push   %edx
    lea    0x53c(%esp),%edx
    push   %edx
    lea    0x554(%esp),%edx
    push   %edx
    lea    0x544(%esp),%edx
    push   %edx
    push   $data_90998
    push   %eax
    call   func_78071
    add    $0x20,%esp
    mov    0x550(%esp),%ecx
    xor    %esi,%esi
    cmp    $0xffffffff,%ecx
    je     jump_1c918
    mov    %ecx,%eax
    call   func_78303
  jump_1c918:
    mov    0x54a(%esp),%ebx
    mov    0x542(%esp),%edx
    mov    $data_a2f6c,%eax
    xor    %ecx,%ecx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    call   func_1e10c
    mov    $data_a2f6c,%eax
    call   func_1f404
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    lea    (%eax,%eax,1),%edx
  jump_1c951:
    lea    0x548(%esp),%eax
    push   %eax
    push   $data_909aa
    push   %edi
    call   func_78071
    add    $0xc,%esp
    cmp    $0xffffffff,%eax
    je     jump_1c98b
    cmp    0x54c(%esp),%esi
    jge    jump_1c98b
    add    $0x1ee,%edx
    mov    0x548(%esp),%al
    inc    %esi
    mov    %al,data_a2d85(%edx)
    jmp    jump_1c951
  jump_1c98b:
    mov    %edi,%eax
    call   func_7744e
  jump_1c992:
    mov    $data_a2f6c,%eax
    xor    %edx,%edx
    call   func_1ee08
    mov    $data_909ad,%eax
    xor    %edx,%edx
    call   func_78313
    test   %eax,%eax
    je     jump_1c9b8
    mov    $data_a2f6c,%eax
    call   func_1f038
  jump_1c9b8:
    mov    $data_d8654,%edx
    mov    $data_10ae70,%eax
    mov    %edx,data_10de7a
    call   func_575bc
    call   func_78222
    test   %eax,%eax
    je     jump_1c9e7
    mov    $0x11f,%ebx
    mov    $data_909b8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1c9e7:
    mov    $data_a2f6c,%eax
    mov    $func_1cc94,%ebx
    call   func_1eea4
    xor    %edx,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0x1,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_22468,%ebx
    mov    $0x1,%edx
    mov    $data_10ae70,%eax
    call   func_57510
    mov    $func_5a320,%ebx
    mov    $0x2,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0x3,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0x4,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0x7,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0x8,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0x9,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0xa,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0xc,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0xd,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0xe,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0xf,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0x10,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0x12,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $func_5a320,%ebx
    mov    $0x14,%edx
    mov    $data_10ae70,%eax
    call   func_574f0
    mov    $data_10ae70,%eax
    call   func_59828
    push   $0x32
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_d8654
    call   func_615ed
    add    $0xc,%esp
    push   $0x0
    push   $0x1df
    push   $0x27f
    push   $0x0
    mov    $0xffffffff,%ebx
    push   $0x0
    mov    %ebx,data_132b60
    call   *data_96be0
    mov    $0x100,%ecx
    mov    $data_909c4,%edx
    add    $0x14,%esp
    mov    $data_d8654,%eax
    xor    %ebx,%ebx
    call   func_2c158
    mov    %esp,%ecx
    mov    $0x100,%ebx
    mov    $data_d8654,%eax
    xor    %edx,%edx
    call   func_2c224
    mov    $0xffffffff,%ebx
    mov    $data_10ae70,%eax
    xor    %edx,%edx
    call   func_56e9c
    call   func_78222
    test   %eax,%eax
    je     jump_1cbd8
    mov    $0x146,%ebx
    mov    $data_909d2,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1cbd8:
    cmp    $0x4,%ebp
    jne    jump_1cc09
    mov    0x558(%esp),%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    mov    0xc(%edx),%edx
    call   func_59988
    cmp    $0xffffffff,%eax
    je     jump_1cc09
    mov    $0x14c,%ebx
    mov    $data_909de,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_1cc09:
    call   func_64eca
    cmpl   $0xffffffff,data_96774
    jne    jump_1cc66
  jump_1cc17:
    cmpl   $0xffffffff,data_10f71a
    jne    jump_1cc2c
    mov    $data_10ae70,%eax
    call   func_59b80
    jmp    jump_1cc36
  jump_1cc2c:
    mov    $data_d85f8,%eax
    call   func_2656c
  jump_1cc36:
    mov    $data_10ae70,%eax
    call   func_5469c
    mov    $data_10ae70,%eax
    call   func_5508c
    cmpl   $0x0,data_10f71a
    je     jump_1cc5d
    mov    $data_10ae70,%eax
    call   func_59a54
  jump_1cc5d:
    cmpl   $0xffffffff,data_96774
    je     jump_1cc17
  jump_1cc66:
    mov    $data_10ae70,%eax
    call   func_5989c
    mov    $data_909ea,%eax
    xor    %edx,%edx
    call   func_54048
    lea    0x418(%esp),%eax
    call   func_1bbc8
    add    $0x55c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1cc94:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x118,%esp
    mov    $data_909f5,%ecx
    mov    $0x1,%ebx
    mov    $0x502e,%eax
    mov    %ebx,%edx
    call   func_262b0
    mov    $0x200,%ebx
    mov    $data_90a01,%edx
    mov    %eax,%edi
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_1bb78
    mov    %esp,%eax
    call   func_1bbfc
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_1ccee
    mov    $0x180,%ebx
    mov    $data_90a13,%edx
    call   func_26198
  jump_1ccee:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    test   %esi,%esi
    je     jump_1cd1a
    test   %edi,%edi
    je     jump_1cd1a
    push   %edi
    push   %esi
    push   $data_d8668
    call   func_60df1
    add    $0xc,%esp
    mov    $data_10ae70,%eax
    xor    %edx,%edx
    call   func_552cc
  jump_1cd1a:
    mov    %esi,%eax
    call   func_2627c
    mov    %esi,%eax
    call   func_76d64
    mov    %edi,%eax
    call   func_262cc
    add    $0x118,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1cd3c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xcc,%esp
    mov    $data_90a1f,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%edi
    test   %eax,%eax
    jne    jump_1cd69
    mov    $0x1a0,%ebx
    mov    $data_90a2a,%edx
    call   func_26198
  jump_1cd69:
    xor    %edx,%edx
    mov    $data_a1024,%esi
    mov    %edx,data_a2f68
    mov    %edx,0xc8(%esp)
  jump_1cd7d:
    cmpl   $0xc8,data_a2f68
    jl     jump_1cd9a
    mov    $0x1ae,%ebx
    mov    $data_90a36,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1cd9a:
    mov    %esp,%edx
    mov    %edi,%eax
    call   func_2fe58
    mov    $data_90a42,%edx
    mov    %esp,%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_1cdc3
    movl   $0xffffffff,0xc8(%esp)
    jmp    jump_1ce7b
  jump_1cdc3:
    cmpb   $0x22,(%esp)
    jne    jump_1ce7b
    mov    data_a2f68,%eax
    mov    %esp,%ecx
    xor    %ebp,%ebp
    mov    %esi,data_a0d04(,%eax,4)
  jump_1cddd:
    mov    %esi,%eax
    sub    $data_a1024,%eax
    inc    %ecx
    cmp    $0x1f40,%eax
    jl     jump_1cdfd
    mov    $0x1c6,%ebx
    mov    $data_90a47,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1cdfd:
    mov    (%ecx),%dl
    cmp    $0x22,%dl
    jne    jump_1ce1a
    mov    $0xffffffff,%ebp
    mov    data_a2f68,%eax
    movb   $0x0,(%esi)
    inc    %eax
    inc    %esi
    mov    %eax,data_a2f68
    jmp    jump_1ce73
  jump_1ce1a:
    cmp    $0xa,%dl
    je     jump_1ce73
    movsbl %dl,%eax
    test   %eax,%eax
    jne    jump_1ce3a
    mov    $0xc8,%edx
    mov    %esp,%eax
    mov    %edi,%ebx
    lea    -0x1(%esp),%ecx
    call   func_7834e
    jmp    jump_1ce73
  jump_1ce3a:
    cmp    $0x5c,%dl
    jne    jump_1ce6f
    mov    0x1(%ecx),%bh
    inc    %ecx
    cmp    $0x6e,%bh
    jne    jump_1ce4e
    movb   $0xa,(%esi)
    inc    %esi
    jmp    jump_1ce73
  jump_1ce4e:
    movsbl %bh,%eax
    test   %eax,%eax
    jne    jump_1ce69
    mov    $0xc8,%edx
    mov    %esp,%eax
    mov    %edi,%ebx
    lea    -0x1(%esp),%ecx
    call   func_7834e
    jmp    jump_1ce73
  jump_1ce69:
    inc    %esi
    mov    %bh,-0x1(%esi)
    jmp    jump_1ce73
  jump_1ce6f:
    inc    %esi
    mov    %dl,-0x1(%esi)
  jump_1ce73:
    test   %ebp,%ebp
    je     jump_1cddd
  jump_1ce7b:
    cmpl   $0x0,0xc8(%esp)
    je     jump_1cd7d
    mov    $0xffffffff,%ebx
    mov    %edi,%eax
    mov    %ebx,data_a2f64
    call   func_7744e
    add    $0xcc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1cea8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    cmpl   $0x0,data_a2f64
    jne    jump_1cebb
    call   func_1cd3c
  jump_1cebb:
    test   %ecx,%ecx
    jl     jump_1cec7
    cmp    data_a2f68,%ecx
    jl     jump_1ced8
  jump_1cec7:
    mov    $0x1f3,%ebx
    mov    $data_90a53,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1ced8:
    mov    data_a0d04(,%ecx,4),%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1cef0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_964e4,%eax
    call   func_786da
    mov    $data_a2f6c,%eax
    mov    $0x1,%edx
    call   func_1de64
    mov    %edx,data_964ec
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_1cf14:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    xor    %edx,%edx
    mov    %al,%dl
    cmp    $0xff,%edx
    jne    jump_1cf28
    xor    %dh,%dh
    mov    $0xff,%dl
    jmp    jump_1cf30
  jump_1cf28:
    mov    %al,%dh
    mov    %al,%cl
    mov    $0x1,%dl
    shl    %cl,%dl
  jump_1cf30:
    mov    %dh,data_104bea
    mov    %dl,data_968dc
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1cf40:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    lea    0x8(%eax),%edx
    movl   $0x0,(%edx)
    sub    $0x8,%edx
    movl   $0x0,0xc(%edx)
    mov    %edx,%eax
    movl   $0x0,0x10(%edx)
    mov    %edx,%eax
    pop    %edx
    mov    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_1cf68:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x94,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    0x42(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_1cf85
    cmp    $0x6,%eax
    jl     jump_1cf96
  jump_1cf85:
    mov    $0x7f,%ebx
    mov    $data_90a68,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1cf96:
    mov    0x42(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_1cfa5
    cmp    $0x6,%eax
    jl     jump_1cfb6
  jump_1cfa5:
    mov    $0x81,%ebx
    mov    $data_90a76,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1cfb6:
    mov    (%ecx),%edx
    mov    0x44(%ecx),%ax
    mov    data_9652e(,%edx,2),%di
    xor    %ebx,%ebx
    cmp    %di,%ax
    je     jump_1d225
    mov    (%esi),%edx
    mov    0x44(%esi),%ax
    cmp    data_9652e(,%edx,2),%ax
    je     jump_1d225
    mov    $data_a2f6c,%eax
    mov    %esi,%ebx
    mov    %ecx,%edx
    call   func_205a0
    mov    %eax,%edx
    mov    %eax,%ebx
    test   %eax,%eax
    je     jump_1d225
    mov    0x42(%ecx),%eax
    sar    $0x10,%eax
    mov    %edx,0x2c(%ecx,%eax,4)
    incw   0x44(%ecx)
    mov    0x42(%esi),%eax
    sar    $0x10,%eax
    mov    %edx,0x2c(%esi,%eax,4)
    incw   0x44(%esi)
    xor    %edi,%edi
    mov    %edi,0x30(%esp)
    mov    %edi,0x34(%esp)
    mov    %edi,0x38(%esp)
    mov    0x8(%esi),%eax
    mov    %eax,0x3c(%esp)
    mov    0xc(%esi),%eax
    mov    %eax,0x40(%esp)
    mov    0x10(%esi),%eax
    mov    %eax,0x44(%esp)
    mov    %edi,0x18(%esp)
    mov    %edi,0x1c(%esp)
    mov    %esp,%eax
    mov    %edi,0x20(%esp)
    mov    %eax,0x78(%esp)
    flds   0x3c(%esp)
    fsubs  0x8(%ecx)
    fstps  0x18(%esp)
    flds   0x40(%esp)
    fsubs  0xc(%ecx)
    fstps  0x1c(%esp)
    flds   0x44(%esp)
    fsubs  0x10(%ecx)
    mov    0x18(%esp),%eax
    fstps  0x20(%esp)
    flds   0x1c(%esp)
    fmul   %st(0),%st
    mov    %eax,(%esp)
    mov    0x1c(%esp),%eax
    flds   0x18(%esp)
    mov    %eax,0x4(%esp)
    mov    0x20(%esp),%eax
    fmuls  0x18(%esp)
    mov    %eax,0x8(%esp)
    faddp  %st,%st(1)
    mov    0x18(%esp),%eax
    flds   0x20(%esp)
    mov    %eax,0x3c(%esp)
    mov    0x1c(%esp),%eax
    fmuls  0x20(%esp)
    mov    %eax,0x40(%esp)
    mov    0x20(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x44(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fld1
    fdiv   %st(1),%st
    lea    0xc(%esp),%eax
    flds   0x3c(%esp)
    fmul   %st(1),%st
    mov    %eax,0x80(%esp)
    fstps  0x6c(%esp)
    flds   0x40(%esp)
    mov    0x6c(%esp),%eax
    fmul   %st(1),%st
    mov    %eax,0xc(%esp)
    fstps  0x70(%esp)
    flds   0x44(%esp)
    mov    0x70(%esp),%eax
    fmulp  %st,%st(1)
    mov    %eax,0x10(%esp)
    fstps  0x74(%esp)
    mov    0x74(%esp),%eax
    fmuls  data_90a84
    mov    %eax,0x14(%esp)
    fstps  0x90(%esp)
    mov    0x6c(%esp),%eax
    flds   0x90(%esp)
    fmuls  data_90a88
    mov    %eax,0x3c(%esp)
    mov    0x70(%esp),%eax
    fadds  data_90a8c
    mov    %eax,0x40(%esp)
    fstps  0x90(%esp)
    mov    0x74(%esp),%eax
    flds   0x6c(%esp)
    fmuls  0x90(%esp)
    mov    %eax,0x44(%esp)
    lea    0x60(%esp),%eax
    fstps  0x24(%esp)
    flds   0x70(%esp)
    fmuls  0x90(%esp)
    mov    %eax,0x84(%esp)
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    flds   0x74(%esp)
    fmuls  0x90(%esp)
    mov    %eax,0x60(%esp)
    mov    0x28(%esp),%eax
    fstps  0x2c(%esp)
    mov    %eax,0x64(%esp)
    mov    0x2c(%esp),%eax
    mov    %eax,0x68(%esp)
    mov    0x24(%esp),%eax
    mov    %eax,0x30(%esp)
    mov    0x28(%esp),%eax
    add    $0x8,%ecx
    mov    %eax,0x34(%esp)
    mov    0x2c(%esp),%eax
    lea    0x8(%edx),%ecx
    mov    %eax,0x38(%esp)
    mov    0x24(%esp),%eax
    mov    %eax,(%ecx)
    mov    0x34(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x38(%esp),%eax
    add    $0x8,%esi
    mov    %eax,0x8(%ecx)
    flds   0x30(%esp)
    lea    0x54(%esp),%eax
    fchs
    fstps  0x48(%esp)
    flds   0x34(%esp)
    mov    %eax,0x88(%esp)
    fchs
    mov    0x48(%esp),%eax
    fstps  0x4c(%esp)
    flds   0x38(%esp)
    fchs
    mov    %eax,0x54(%esp)
    mov    0x4c(%esp),%eax
    fstps  0x50(%esp)
    mov    %eax,0x58(%esp)
    mov    0x50(%esp),%eax
    mov    %eax,0x5c(%esp)
    mov    0x48(%esp),%eax
    mov    %eax,0x14(%edx)
    mov    0x58(%esp),%eax
    mov    %eax,0x18(%edx)
    add    $0x14,%edx
    mov    0x5c(%esp),%eax
    mov    %eax,0x8(%edx)
  jump_1d225:
    mov    %ebx,%eax
    add    $0x94,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1d234:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ecx
    test   %edx,%edx
    jne    jump_1d255
    mov    $0xb3,%ebx
    mov    $data_90a90,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1d255:
    cmp    data_a3cf4,%cx
    jl     jump_1d26f
    mov    $0xb4,%ebx
    mov    $data_90a9e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1d26f:
    xor    %edx,%edx
    movswl %cx,%eax
    mov    0x57(%edi),%dl
    cmp    %eax,%edx
    jne    jump_1d28c
    mov    $0xb5,%ebx
    mov    $data_90aac,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1d28c:
    xor    %eax,%eax
    mov    0x57(%edi),%al
    cmp    $0xff,%eax
    jne    jump_1d2a9
    mov    $0xb7,%ebx
    mov    $data_90aba,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1d2a9:
    xor    %eax,%eax
    mov    0x57(%edi),%al
    mov    %ax,(%esp)
    xor    %eax,%eax
    mov    0x57(%edi),%al
    cmp    $0xff,%eax
    je     jump_1d362
    movswl %cx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_1d2d0
    movb   $0xff,0x57(%edi)
    jmp    jump_1d2da
  jump_1d2d0:
    mov    $0x1,%al
    mov    %cl,0x57(%edi)
    shl    %cl,%al
    or     %al,0x14(%esi)
  jump_1d2da:
    mov    (%esp),%cl
    mov    $0x1,%al
    shl    %cl,%al
    mov    0x14(%esi),%dl
    not    %al
    mov    0x5a(%esi),%bx
    and    %al,%dl
    xor    %eax,%eax
    mov    %dl,0x14(%esi)
    test   %bx,%bx
    jg     jump_1d2ff
    jmp    jump_1d325
  jump_1d2f8:
    inc    %eax
    cmp    0x5a(%esi),%ax
    jge    jump_1d325
  jump_1d2ff:
    movswl %ax,%edx
    mov    0x46(%esi,%edx,4),%edx
    xor    %ebx,%ebx
    mov    0x57(%edx),%bl
    mov    -0x2(%esp),%edx
    sar    $0x10,%edx
    cmp    %edx,%ebx
    jne    jump_1d2f8
    mov    (%esp),%cl
    mov    $0x1,%al
    mov    0x14(%esi),%dh
    shl    %cl,%al
    or     %al,%dh
    mov    %dh,0x14(%esi)
  jump_1d325:
    mov    -0x2(%esp),%eax
    sar    $0x10,%eax
    mov    %eax,%edx
    shl    $0x5,%edx
    sub    %eax,%edx
    shl    $0x3,%edx
    sub    %eax,%edx
    mov    data_a2f79(,%edx,2),%ebx
    cmp    %ebx,%esi
    jne    jump_1d362
    mov    -0x2(%esp),%ecx
    mov    $0x1,%eax
    xor    %edx,%edx
    sar    $0x10,%ecx
    mov    0x14(%ebx),%dl
    shl    %cl,%eax
    test   %eax,%edx
    jne    jump_1d362
    mov    %dl,%bl
    and    $0x7f,%bl
    mov    %bl,0x14(%esi)
  jump_1d362:
    mov    0x54(%edi),%bh
    cmp    $0xff,%bh
    je     jump_1d3de
    cmp    $0x17,%bh
    jne    jump_1d3a3
    xor    %edx,%edx
    mov    %edi,%eax
    mov    0x52(%edi),%dx
    mov    (%esp),%esi
    call   func_35a70
    mov    %eax,%ecx
    cmp    0x56(%eax),%si
    je     jump_1d39c
    mov    $0xe0,%ebx
    mov    $data_90ac8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1d39c:
    mov    %ecx,%eax
    call   func_49940
  jump_1d3a3:
    xor    %eax,%eax
    mov    0x52(%edi),%ax
    cmp    $0xffff,%eax
    je     jump_1d3ce
    cmpb   $0x23,0x54(%edi)
    je     jump_1d3ce
    mov    0x10(%edi),%edx
    movb   $0xff,0x1(%edx,%eax,4)
    xor    %eax,%eax
    mov    0x10(%edi),%edx
    mov    0x52(%edi),%ax
    movw   $0x0,0x2(%edx,%eax,4)
  jump_1d3ce:
    movb   $0xff,0x54(%edi)
    movw   $0x0,0x50(%edi)
    movw   $0xffff,0x52(%edi)
  jump_1d3de:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1d3e8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x10,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    test   %ebx,%ebx
    je     jump_1d407
    mov    $0xfd,%ebx
    mov    $data_90ad6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1d407:
    mov    0x58(%esi),%ah
    cmp    $0x5,%ah
    jne    jump_1d4c5
    xor    %edx,%edx
    mov    0x59(%esi),%eax
    mov    %edx,(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x8(%esp)
    cmp    (%eax),%edi
    jne    jump_1d43f
    lea    0x8(%eax),%edx
    mov    (%edx),%eax
    mov    %eax,(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x8(%esp)
    jmp    jump_1d46d
  jump_1d43f:
    cmp    0x4(%eax),%edi
    jne    jump_1d45c
    lea    0x14(%eax),%edx
    mov    (%edx),%eax
    mov    %eax,(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x8(%esp)
    jmp    jump_1d46d
  jump_1d45c:
    mov    $0x10a,%ebx
    mov    $data_90ae4,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_1d46d:
    flds   0x4(%esp)
    fadds  data_90af2
    fstps  0x4(%esp)
    call   func_782df
    mov    %eax,%edx
    mov    $0xc8,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %edx,0xc(%esp)
    fildl  0xc(%esp)
    fadds  0x8(%esp)
    fstps  0x8(%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %edx,0xc(%esp)
    mov    %esi,%eax
    fildl  0xc(%esp)
    fadds  (%esp)
    mov    %esp,%edx
    fstps  (%esp)
    call   func_496bc
    movb   $0x4,0x58(%esi)
    jmp    jump_1d4ca
  jump_1d4c5:
    cmp    $0x4,%ah
    jne    jump_1d4cd
  jump_1d4ca:
    mov    %edi,0x59(%esi)
  jump_1d4cd:
    mov    $0x1,%al
    mov    0x56(%esi),%cl
    mov    0x15(%edi),%dh
    shl    %cl,%al
    or     %al,%dh
    mov    %dh,0x15(%edi)
    mov    $0x1,%al
    mov    0x56(%esi),%cl
    mov    0x17(%edi),%bl
    shl    %cl,%al
    or     %al,%bl
    mov    %bl,0x17(%edi)
    mov    0x44(%edi),%bx
    xor    %edx,%edx
    test   %bx,%bx
    jle    jump_1d529
  jump_1d4f6:
    mov    $0x1,%bl
    movswl %dx,%eax
    mov    0x56(%esi),%cl
    mov    0x2c(%edi,%eax,4),%eax
    shl    %cl,%bl
    or     %bl,0x20(%eax)
    mov    0x56(%esi),%cl
    mov    $0x1,%ch
    shl    %cl,%ch
    mov    (%eax),%ebx
    mov    %ch,%cl
    or     %cl,0x16(%ebx)
    mov    $0x1,%bl
    mov    0x56(%esi),%cl
    mov    0x4(%eax),%eax
    shl    %cl,%bl
    or     %bl,0x16(%eax)
    inc    %edx
    cmp    0x44(%edi),%dx
    jl     jump_1d4f6
  jump_1d529:
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1d538:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1b0,%esp
    mov    %eax,%edi
    mov    %edx,%ecx
    mov    0x56(%edx),%ax
    mov    %ax,0x1ac(%esp)
    mov    0x1aa(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_1d571
    mov    0x1ac(%esp),%eax
    cmp    data_a3cf4,%ax
    jl     jump_1d582
  jump_1d571:
    mov    $0x139,%ebx
    mov    $data_90af6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1d582:
    mov    0x58(%ecx),%ah
    cmp    $0x3,%ah
    je     jump_1d594
    cmp    $0x1,%ah
    je     jump_1d594
    cmp    $0x2,%ah
    jne    jump_1d5c3
  jump_1d594:
    mov    %ecx,%edx
    mov    0x59(%ecx),%eax
    call   func_35c38
    test   %eax,%eax
    jne    jump_1d5c3
    mov    0x59(%ecx),%edx
    mov    0xa(%edx),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x5,%eax
    movb   $0x4,0x58(%ecx)
    add    $data_a3d21,%eax
    mov    %eax,0x59(%ecx)
  jump_1d5c3:
    cmpb   $0x4,0x58(%ecx)
    jne    jump_1d5ce
    cmp    0x59(%ecx),%edi
    je     jump_1d5df
  jump_1d5ce:
    mov    $0x149,%ebx
    mov    $data_90b04,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1d5df:
    mov    %esp,%edx
    mov    %edi,%eax
    call   func_1d794
    mov    %eax,%esi
    test   %eax,%eax
    jg     jump_1d5ff
    mov    $0x14e,%ebx
    mov    $data_90b12,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_1d5ff:
    mov    $0xffffffff,%ebp
    xor    %edx,%edx
    jmp    jump_1d609
  jump_1d608:
    inc    %edx
  jump_1d609:
    movswl %dx,%eax
    cmp    %esi,%eax
    jge    jump_1d62d
    mov    (%esp,%eax,4),%eax
    mov    0x56(%eax),%bx
    cmp    0x1ac(%esp),%bx
    jne    jump_1d608
    cmp    %ecx,%eax
    je     jump_1d608
    cmpb   $0x1,0x58(%eax)
    je     jump_1d608
    xor    %ebp,%ebp
  jump_1d62d:
    cmp    $0xffffffff,%ebp
    jne    jump_1d642
    mov    0x1ac(%esp),%cl
    mov    $0x1,%al
    shl    %cl,%al
    not    %al
    and    %al,0x15(%edi)
  jump_1d642:
    mov    $0xffffffff,%eax
    add    $0x1b0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1d654:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1b4,%esp
    mov    %eax,%edi
    mov    %edx,%ebp
    mov    %ebx,0x1b0(%esp)
    test   %edx,%edx
    je     jump_1d671
    test   %ebx,%ebx
    jne    jump_1d682
  jump_1d671:
    mov    $0x16c,%ebx
    mov    $data_90b20,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1d682:
    mov    %esp,%edx
    mov    %edi,%eax
    call   func_1d794
    xor    %esi,%esi
    mov    %eax,0x1ac(%esp)
    jmp    jump_1d697
  jump_1d696:
    inc    %esi
  jump_1d697:
    mov    0x1ac(%esp),%ebx
    movswl %si,%ecx
    cmp    %ebx,%ecx
    jge    jump_1d6de
    mov    (%esp,%ecx,4),%ecx
    xor    %edx,%edx
    mov    0x54(%ecx),%eax
    mov    data_104bea,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    jne    jump_1d696
    mov    %ecx,%edx
    mov    %edi,%eax
    call   func_1d538
    xor    %ebx,%ebx
    mov    0x1b0(%esp),%eax
    mov    %ecx,%edx
    mov    %eax,0x59(%ecx)
    mov    %ebp,%eax
    movb   $0x5,0x58(%ecx)
    call   func_1d3e8
    jmp    jump_1d696
  jump_1d6de:
    add    $0x1b4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1d734:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    mov    0x15(%eax),%al
    mov    0x14(%ecx),%ah
    mov    data_a3cf4,%dx
    or     %ah,%al
    xor    %ebx,%ebx
    mov    %al,(%esp)
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_1d789
    movzbl (%esp),%esi
    xor    %edx,%edx
  jump_1d760:
    mov    %al,%cl
    mov    $0x1,%ch
    shl    %cl,%ch
    mov    %ch,%cl
    and    $0xff,%ecx
    test   %esi,%ecx
    je     jump_1d77c
    mov    %edx,%ecx
    inc    %ebx
    add    $0x2,%edx
    mov    %ax,(%ecx,%edi,1)
  jump_1d77c:
    mov    data_a3cf4,%cx
    inc    %eax
    cmp    %cx,%ax
    jl     jump_1d760
  jump_1d789:
    mov    %ebx,%eax
  jump_1d78b:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1d794:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,(%esp)
    mov    %edx,0x4(%esp)
    mov    $data_ca1f1,%eax
    mov    0x4(%esp),%ebx
    xor    %edi,%edi
    xor    %esi,%esi
    xor    %edx,%edx
    jmp    jump_1d7ba
  jump_1d7b4:
    inc    %edx
    add    $0x162,%eax
  jump_1d7ba:
    movswl %dx,%ecx
    cmp    $0x6b,%ecx
    jge    jump_1d827
    mov    data_d35e5,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%esi
    jge    jump_1d827
    mov    0x54(%eax),%ecx
    sar    $0x10,%ecx
    cmp    $0xffffffff,%ecx
    je     jump_1d7b4
    mov    0x58(%eax),%cl
    inc    %esi
    cmp    $0x3,%cl
    je     jump_1d7f1
    cmp    $0x1,%cl
    je     jump_1d7f1
    cmp    $0x2,%cl
    jne    jump_1d80a
  jump_1d7f1:
    mov    0x59(%eax),%ecx
    mov    0xa(%ecx),%ecx
    sar    $0x10,%ecx
    imul   $0x60,%ecx,%ecx
    mov    (%esp),%ebp
    add    $data_a3d21,%ecx
    cmp    %ebp,%ecx
    je     jump_1d818
  jump_1d80a:
    cmpb   $0x4,0x58(%eax)
    jne    jump_1d7b4
    mov    (%esp),%ebp
    cmp    0x59(%eax),%ebp
    jne    jump_1d7b4
  jump_1d818:
    cmpl   $0x0,0x4(%esp)
    je     jump_1d821
    mov    %eax,(%ebx)
  jump_1d821:
    add    $0x4,%ebx
    inc    %edi
    jmp    jump_1d7b4
  jump_1d827:
    mov    %edi,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1d834:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ebx
    mov    %dx,(%esp)
    mov    $data_ca1f1,%ecx
    xor    %edx,%edx
    xor    %edi,%edi
    mov    %edx,0x4(%esp)
    jmp    jump_1d858
  jump_1d851:
    inc    %edi
    add    $0x162,%ecx
  jump_1d858:
    movswl %di,%eax
    cmp    $0x6b,%eax
    jge    jump_1d912
    mov    0x4(%esp),%eax
    cmp    data_d35e7,%ax
    jge    jump_1d912
    mov    0x54(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_1d851
    incl   0x4(%esp)
    cmpb   $0x5,0x58(%ecx)
    jne    jump_1d851
    mov    -0x2(%esp),%esi
    sar    $0x10,%esi
    imul   $0x1ee,%esi,%esi
    cmpb   $0x2,data_a3132(%esi,%eax,1)
    je     jump_1d8b5
    movzbl data_104bea,%esi
    cmp    %esi,%eax
    je     jump_1d8b5
    mov    (%esp),%esi
    cmp    0x56(%ecx),%si
    jne    jump_1d851
  jump_1d8b5:
    mov    0x44(%ebx),%ax
    xor    %edx,%edx
    test   %ax,%ax
    jg     jump_1d8c9
    jmp    jump_1d851
  jump_1d8c2:
    inc    %edx
    cmp    0x44(%ebx),%dx
    jge    jump_1d851
  jump_1d8c9:
    movswl %dx,%eax
    shl    $0x2,%eax
    add    %ebx,%eax
    mov    0x59(%ecx),%ebp
    cmp    0x2c(%eax),%ebp
    jne    jump_1d8c2
    mov    0x2c(%eax),%eax
    cmp    (%eax),%ebx
    jne    jump_1d8ec
    testl  $0x7fffffff,0xa2(%ecx)
    je     jump_1d904
  jump_1d8ec:
    movswl %dx,%eax
    mov    0x2c(%ebx,%eax,4),%eax
    cmp    0x4(%eax),%ebx
    jne    jump_1d8c2
    cmpl   $0x3f800000,0xa2(%ecx)
    jne    jump_1d8c2
  jump_1d904:
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_1d912:
    xor    %eax,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1d920:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x60,%esp
    mov    %eax,%ebp
    mov    %edx,%ecx
    cmp    $0xffffffff,%ebx
    jne    jump_1d9ed
    mov    %esp,%eax
    mov    $0x60,%ebx
    mov    %esp,%edx
    call   func_1cf40
    mov    %ecx,%eax
    call   func_1bf94
    mov    (%esp),%eax
    mov    %eax,0x0(%ebp)
    mov    0x4(%esp),%eax
    mov    %ax,0x4(%ebp)
    mov    0x6(%esp),%eax
    mov    %ax,0x6(%ebp)
    lea    0x8(%ebp),%ecx
    mov    0x8(%esp),%eax
    mov    %eax,(%ecx)
    mov    0xc(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x10(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    0x14(%esp),%al
    mov    %al,0x14(%ebp)
    mov    0x15(%esp),%al
    mov    %al,0x15(%ebp)
    mov    0x16(%esp),%al
    mov    %al,0x16(%ebp)
    mov    0x17(%esp),%al
    mov    %al,0x17(%ebp)
    lea    0x1c(%esp),%esi
    mov    0x18(%esp),%eax
    lea    0x1c(%ebp),%edi
    mov    %eax,0x18(%ebp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0x6,%ecx
    lea    0x2c(%esp),%esi
    lea    0x2c(%ebp),%edi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x44(%esp),%eax
    lea    0x46(%esp),%esi
    lea    0x46(%ebp),%edi
    mov    %ax,0x44(%ebp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x5a(%esp),%eax
    mov    %ax,0x5a(%ebp)
    mov    0x5c(%esp),%eax
    movw   $0x0,0x44(%ebp)
    xor    %edx,%edx
    mov    %eax,0x5c(%ebp)
    mov    %esp,%eax
    movw   $0x0,0x5a(%ebp)
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_1d9ed:
    mov    $0x60,%ebx
    mov    %eax,%edx
    mov    %ecx,%eax
    call   func_1c098
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1da04:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    test   %edx,%edx
    jne    jump_1da20
    mov    $0x21a,%ebx
    mov    $data_90b3c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1da20:
    mov    0x2(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %eax,%edx
    mov    0x2(%ecx),%eax
    shl    $0x2,%edx
    sar    $0x10,%eax
    mov    data_d5d47(%edx,%eax,1),%al
    xor    %ah,%ah
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1da4c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %dx,(%esp)
    mov    %edx,%eax
    cmp    data_a3cf4,%ax
    jle    jump_1da74
    mov    $0x248,%ebx
    mov    $data_90b4a,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1da74:
    cmp    $0x6b,%ecx
    jl     jump_1da8a
    mov    $0x249,%ebx
    mov    $data_90b58,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1da8a:
    mov    -0x2(%esp),%ecx
    mov    $0x1,%eax
    xor    %edx,%edx
    sar    $0x10,%ecx
    mov    0x16(%esi),%dl
    shl    %cl,%eax
    xor    %ebx,%ebx
    test   %eax,%edx
    je     jump_1db62
    lea    0x46(%esi),%ecx
    xor    %edi,%edi
    jmp    jump_1dab2
  jump_1daae:
    inc    %edi
    add    $0x4,%ecx
  jump_1dab2:
    mov    0x58(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%edi
    jge    jump_1dad6
    mov    -0x2(%esp),%edx
    mov    (%ecx),%eax
    sar    $0x10,%edx
    movzbl 0x57(%eax),%ebp
    cmp    %edx,%ebp
    je     jump_1daae
    call   func_364b4
    add    %eax,%ebx
    jmp    jump_1daae
  jump_1dad6:
    xor    %eax,%eax
    xor    %edx,%edx
    jmp    jump_1dae3
  jump_1dadc:
    add    $0x1ee,%edx
    inc    %eax
  jump_1dae3:
    mov    data_a3cf2,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_1db2e
    mov    -0x2(%esp),%edi
    sar    $0x10,%edi
    cmp    %edi,%eax
    je     jump_1dadc
    mov    data_a2f79(%edx),%ecx
    cmp    %ecx,%esi
    jne    jump_1dadc
    mov    0x14(%ecx),%cl
    and    $0x80,%cl
    and    $0xff,%ecx
    je     jump_1dadc
    imul   $0x1ee,%edi,%edi
    cmpb   $0x2,data_a3132(%edi,%eax,1)
    jne    jump_1dadc
    lea    (%ebx,%ebx,2),%ebx
    add    $0xc8,%ebx
    jmp    jump_1dadc
  jump_1db2e:
    mov    0x14(%esi),%al
    and    $0xff,%eax
    jne    jump_1db3a
    add    %ebx,%ebx
  jump_1db3a:
    test   %ebx,%ebx
    jge    jump_1db40
    xor    %ebx,%ebx
  jump_1db40:
    mov    -0x2(%esp),%ecx
    mov    $0x1,%eax
    xor    %edx,%edx
    sar    $0x10,%ecx
    mov    0x17(%esi),%dl
    shl    %cl,%eax
    test   %eax,%edx
    jne    jump_1db67
    shl    $0x2,%ebx
    add    $0x12c,%ebx
    jmp    jump_1db67
  jump_1db62:
    mov    $0x2bc,%ebx
  jump_1db67:
    mov    %ebx,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_1db70:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c8,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,0x1c0(%esp)
    mov    %ecx,0x1bc(%esp)
    cmp    data_a3cf4,%di
    jle    jump_1dba5
    mov    $0x2bd,%ebx
    mov    $data_90b66,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1dba5:
    mov    $0x1,%eax
    xor    %edx,%edx
    movswl %di,%ecx
    mov    %edx,0x1b0(%esp)
    shl    %cl,%eax
    mov    0x16(%esi),%dl
    test   %eax,%edx
    je     jump_1de49
    xor    %edx,%edx
    mov    0x14(%esi),%dl
    test   %eax,%edx
    je     jump_1de49
    xor    %ebx,%ebx
    mov    0x15(%esi),%al
    mov    %ebx,0x1c4(%esp)
    and    $0xff,%eax
    je     jump_1dd7f
    mov    0x1c0(%esp),%ecx
    test   %ecx,%ecx
    je     jump_1dc00
    cmpl   $0x0,0x1bc(%esp)
    jge    jump_1dcad
  jump_1dc00:
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_1d794
    test   %eax,%eax
    jle    jump_1dd65
    shl    $0x2,%eax
    xor    %ebp,%ebp
    mov    %eax,0x1b8(%esp)
  jump_1dc1d:
    mov    (%esp,%ebp,1),%ecx
    test   %ecx,%ecx
    jne    jump_1dc35
    mov    $0x2d6,%ebx
    mov    $data_90b74,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1dc35:
    cmpb   $0x4,0x58(%ecx)
    jne    jump_1dc40
    cmp    0x59(%ecx),%esi
    je     jump_1dc53
  jump_1dc40:
    cmpb   $0x3,0x58(%ecx)
    jne    jump_1dc96
    mov    0x59(%ecx),%eax
    mov    0x4(%esi),%dx
    cmp    0xc(%eax),%dx
    jne    jump_1dc96
  jump_1dc53:
    cmp    0x56(%ecx),%di
    je     jump_1dc96
    movswl %di,%eax
    imul   $0x1ee,%eax,%edx
    mov    0x54(%ecx),%eax
    sar    $0x10,%eax
    mov    data_a3132(%edx,%eax,1),%al
    cmp    $0x2,%al
    jne    jump_1dc96
    mov    %ecx,%eax
    call   func_4a988
    mov    %eax,0x1b4(%esp)
    fildl  0x1b4(%esp)
    fadds  0x1c4(%esp)
    fstps  0x1c4(%esp)
  jump_1dc96:
    mov    0x1b8(%esp),%edx
    add    $0x4,%ebp
    cmp    %edx,%ebp
    jge    jump_1dd65
    jmp    jump_1dc1d
  jump_1dcad:
    mov    0x1bc(%esp),%eax
    xor    %ebp,%ebp
    test   %eax,%eax
    jle    jump_1dd65
    mov    %ecx,0x1ac(%esp)
  jump_1dcc5:
    mov    0x1ac(%esp),%ecx
    mov    (%ecx),%ecx
    test   %ecx,%ecx
    jne    jump_1dce3
    mov    $0x2f1,%ebx
    mov    $data_90b82,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1dce3:
    cmpb   $0x4,0x58(%ecx)
    jne    jump_1dcee
    cmp    0x59(%ecx),%esi
    je     jump_1dd01
  jump_1dcee:
    cmpb   $0x3,0x58(%ecx)
    jne    jump_1dd44
    mov    0x59(%ecx),%eax
    mov    0x4(%esi),%bx
    cmp    0xc(%eax),%bx
    jne    jump_1dd44
  jump_1dd01:
    cmp    0x56(%ecx),%di
    je     jump_1dd44
    movswl %di,%eax
    imul   $0x1ee,%eax,%edx
    mov    0x54(%ecx),%eax
    sar    $0x10,%eax
    mov    data_a3132(%edx,%eax,1),%al
    cmp    $0x2,%al
    jne    jump_1dd44
    mov    %ecx,%eax
    call   func_4a988
    mov    %eax,0x1b4(%esp)
    fildl  0x1b4(%esp)
    fadds  0x1c4(%esp)
    fstps  0x1c4(%esp)
  jump_1dd44:
    mov    0x1ac(%esp),%edx
    mov    0x1bc(%esp),%ebx
    add    $0x4,%edx
    inc    %ebp
    mov    %edx,0x1ac(%esp)
    cmp    %ebx,%ebp
    jl     jump_1dcc5
  jump_1dd65:
    flds   0x1c4(%esp)
    fmuls  data_90b90
    fmuls  data_90b94
    fstps  0x1c4(%esp)
  jump_1dd7f:
    fldz
    fcomps 0x1c4(%esp)
    fnstsw %ax
    sahf
    jae    jump_1de36
    lea    0x46(%esi),%ecx
    xor    %ebp,%ebp
    jmp    jump_1dd9c
  jump_1dd98:
    inc    %ebp
    add    $0x4,%ecx
  jump_1dd9c:
    mov    0x58(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebp
    jge    jump_1ddf5
    mov    (%ecx),%eax
    xor    %ebx,%ebx
    movswl %di,%edx
    mov    0x57(%eax),%bl
    cmp    %edx,%ebx
    jne    jump_1dd98
    mov    0x1b0(%esp),%edx
    call   func_363b0
    add    %eax,%edx
    mov    (%ecx),%eax
    call   func_360d8
    imul   $0xa,%eax,%eax
    mov    %edx,%ebx
    sub    %eax,%ebx
    mov    (%ecx),%eax
    mov    %edx,0x1b0(%esp)
    call   func_36158
    mov    %ebx,%edx
    lea    (%eax,%eax,4),%eax
    mov    %ebx,0x1b0(%esp)
    sub    %eax,%edx
    mov    %edx,0x1b0(%esp)
    jmp    jump_1dd98
  jump_1ddf5:
    movswl %di,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmp    data_a2f79(,%eax,2),%esi
    jne    jump_1de18
    addl   $0x4e20,0x1b0(%esp)
  jump_1de18:
    fildl  0x1b0(%esp)
    fld    %st(0)
    fmuls  0x1c4(%esp)
    fstp   %st(1)
    call   func_76e98
    fistpl 0x1b0(%esp)
  jump_1de36:
    cmpl   $0x0,0x1b0(%esp)
    jge    jump_1de49
    xor    %ecx,%ecx
    mov    %ecx,0x1b0(%esp)
  jump_1de49:
    mov    0x1b0(%esp),%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_1de64:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    $data_95af0,%ebx
    mov    $0x7,%edx
    add    $0x6,%eax
    call   func_77394
    mov    $data_95b04,%ebx
    mov    $0x64,%edx
    add    $0xdaf,%eax
    call   func_77394
    mov    $data_95adc,%ebx
    mov    $0x94,%edx
    add    $0x2582,%eax
    call   func_77394
    mov    $data_95ac8,%ebx
    mov    $0x1f4,%edx
    add    $0x14f10,%eax
    call   func_77394
    mov    $data_95ab4,%ebx
    mov    $0x6b,%edx
    add    $0xf03e,%eax
    call   func_77394
    mov    $data_95aa0,%ebx
    mov    $0x9,%edx
    add    $0x93f8,%eax
    call   func_77394
    mov    $data_95a8c,%ebx
    mov    $0x18,%edx
    add    $0x84,%eax
    call   func_77394
    lea    -0x30701(%eax),%edx
    mov    %edx,%eax
    call   func_1e094
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1e03c:
/*----------------------------------------------------------------*/
    add    $0x30701,%eax
    xor    %edx,%edx
    call   func_222c0
    sub    $0x84,%eax
    xor    %edx,%edx
    call   func_222e0
    sub    $0x93f8,%eax
    xor    %edx,%edx
    call   func_222a0
    sub    $0xf03e,%eax
    xor    %edx,%edx
    call   func_22300
    sub    $0x14f10,%eax
    xor    %edx,%edx
    call   func_22320
    sub    $0x2582,%eax
    xor    %edx,%edx
    call   func_22280
    sub    $0xdaf,%eax
    xor    %edx,%edx
    call   func_22260
    sub    $0x6,%eax
    ret


/*----------------------------------------------------------------*/
func_1e094:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    $data_d84c4,%edx
    mov    $0xb2,%ebx
    lea    0x104(%edx),%ecx
  jump_1e0ac:
    mov    %ebx,%eax
    call   func_1cea8
    mov    %edx,%edi
    mov    %eax,%esi
    push   %edi
  jump_1e0b8:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1e0d0
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1e0b8
  jump_1e0d0:
    pop    %edi
    add    $0x14,%edx
    inc    %ebx
    cmp    %ecx,%edx
    jne    jump_1e0ac
    movw   $0x0,0x3335(%ebp)
    movw   $0x0,0x49c3(%ebp)
    movw   $0x0,0xd88(%ebp)
    movw   $0x0,0x3067b(%ebp)
    movb   $0x1,0xdb4(%ebp)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1e10c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %ebx,%edi
    mov    $0x20,%ebx
    movswl %dx,%edx
    movw   $0x0,0x4(%eax)
    mov    %ebx,data_96b88
    call   func_1e2a0
    mov    $0x9,%edx
    mov    %esi,%eax
    call   func_1e150
    mov    %esi,%eax
    movswl %cx,%ebx
    call   func_1efc0
    movswl %di,%edx
    mov    %esi,%eax
    call   func_1e70c
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_1e150:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x2c,%esp
    mov    %eax,%ebp
    mov    %dx,0x28(%esp)
    mov    0x26(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x9,%eax
    jle    jump_1e172
    movw   $0x9,0x28(%esp)
  jump_1e172:
    mov    0x26(%esp),%ebx
    movw   $0x0,0x306f2(%ebp)
    xor    %edx,%edx
    mov    $0x168,%eax
    mov    %edx,0xc(%esp)
    mov    %edx,0x10(%esp)
    mov    %edx,0x14(%esp)
    mov    %edx,(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x8(%esp)
    mov    %eax,%edx
    sar    $0x10,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0x20(%esp)
    mov    %eax,%edx
    shl    $0x2,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    shl    $0x2,%edx
    sbb    %edx,%eax
    sar    $0x2,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    mov    %eax,0x1c(%esp)
    sub    %edx,%eax
    sar    %eax
    xor    %ecx,%ecx
    lea    0x3067e(%ebp),%ebx
    xor    %edi,%edi
    mov    %ebp,%esi
    mov    %eax,0x18(%esp)
    jmp    jump_1e288
  jump_1e1e1:
    mov    $0x447a0000,%edx
    mov    %cl,0x3067d(%esi)
    mov    $0x43960000,%eax
    mov    %edx,0xc(%esp)
    xor    %edx,%edx
    mov    %eax,0x10(%esp)
    mov    %edx,0x14(%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idivl  0x1c(%esp)
    mov    0x18(%esp),%eax
    add    %edi,%edx
    sub    %eax,%edx
    mov    %edx,0x24(%esp)
    fildl  0x24(%esp)
    sub    $0x4,%esp
    lea    0x10(%esp),%eax
    fstps  (%esp)
    call   func_532ac
    call   func_782df
    mov    %eax,%edx
    movl   $0x258,0x24(%esp)
    sar    $0x1f,%edx
    idivl  0x24(%esp)
    sub    $0x12c,%edx
    mov    %edx,0x24(%esp)
    fildl  0x24(%esp)
    fadds  0x10(%esp)
    mov    0xc(%esp),%eax
    fstps  0x10(%esp)
    mov    %eax,(%ebx)
    mov    0x10(%esp),%eax
    mov    %eax,0x4(%ebx)
    add    $0xd,%ebx
    mov    0x14(%esp),%eax
    add    $0xd,%esi
    mov    %eax,-0x5(%ebx)
    inc    %ecx
    mov    0x306f2(%ebp),%ax
    mov    0x20(%esp),%edx
    inc    %eax
    add    %edx,%edi
    mov    %ax,0x306f2(%ebp)
  jump_1e288:
    mov    0x26(%esp),%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jl     jump_1e1e1
    add    $0x2c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1e2a0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x828,%esp
    mov    %eax,0x80c(%esp)
    mov    %edx,%esi
    mov    $0x43dc0000,%edi
    xor    %edx,%edx
    mov    $data_90bb4,%eax
    mov    %edx,0x7e8(%esp)
    mov    %edx,0x7ec(%esp)
    mov    %edx,0x7f0(%esp)
    mov    %edx,0x810(%esp)
    lea    0x7f4(%esp),%edx
    xor    %ebx,%ebx
    call   func_1bb10
    mov    %eax,0x808(%esp)
    mov    %edi,0x820(%esp)
    mov    0x808(%esp),%ebp
    jmp    jump_1e311
  jump_1e301:
    push   %edx
    push   $data_90bc5
    push   %ebp
    call   func_78071
    add    $0xc,%esp
  jump_1e310:
    inc    %ebx
  jump_1e311:
    movswl %bx,%ecx
    cmp    $0x64,%ecx
    jge    jump_1e354
    lea    0x7f8(%esp),%edx
    mov    0x808(%esp),%eax
    call   func_7776d
    imul   $0x14,%ecx,%edx
    mov    %esp,%eax
    mov    0x7f4(%esp),%edi
    add    %eax,%edx
    cmp    0x7f8(%esp),%edi
    jg     jump_1e301
    push   %ecx
    push   $data_90bbe
    push   %edx
    call   func_76d09
    add    $0xc,%esp
    jmp    jump_1e310
  jump_1e354:
    mov    0x808(%esp),%eax
    call   func_7744e
    movl   $0x64,0x81c(%esp)
    mov    0x80c(%esp),%eax
    movswl %si,%edx
    mov    %si,0x3335(%eax)
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,0x814(%esp)
    xor    %eax,%eax
    jmp    jump_1e3ab
  jump_1e390:
    mov    data_96512(,%edx,2),%edx
    mov    0x810(%esp),%ebx
    sar    $0x10,%edx
    add    %edx,%ebx
    inc    %eax
    mov    %ebx,0x810(%esp)
  jump_1e3ab:
    movswl %ax,%edx
    cmp    $0xd,%edx
    jl     jump_1e390
    mov    0x80c(%esp),%eax
    movw   $0x0,0x27283(%eax)
    mov    0x80c(%esp),%edx
    movw   $0x0,0x18245(%eax)
    add    $0xdb5,%eax
    movl   $0x0,(%edx)
    lea    0x18247(%edx),%ecx
    mov    %eax,0x306f4(%edx)
    mov    %ecx,0x306f8(%edx)
    xor    %edx,%edx
    mov    %dx,0x824(%esp)
    mov    0x80c(%esp),%edx
    cmpw   $0x0,0x3335(%edx)
    jle    jump_1e6f2
    mov    0x81c(%esp),%edx
    mov    %eax,0x7fc(%esp)
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %esp,%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    %eax,0x818(%esp)
  jump_1e434:
    mov    0x822(%esp),%ecx
    sar    $0x10,%ecx
    imul   $0x60,%ecx,%ebp
    add    0x7fc(%esp),%ebp
    movb   $0x0,0x14(%ebp)
    movb   $0x0,0x15(%ebp)
    movb   $0x0,0x16(%ebp)
    movb   $0x0,0x17(%ebp)
    movw   $0x0,0x44(%ebp)
    movw   $0xffff,0x6(%ebp)
    mov    0x824(%esp),%eax
    movw   $0x0,0x5a(%ebp)
    mov    %ax,0x4(%ebp)
    call   func_782df
    mov    %eax,%edx
    mov    0x81c(%esp),%edi
    sar    $0x1f,%edx
    idiv   %edi
    imul   $0x14,%edx,%eax
    mov    %esp,%edx
    add    %eax,%edx
    lea    0x1c(%ebp),%edi
    mov    %edx,%esi
    mov    0x81c(%esp),%ebx
    push   %edi
  jump_1e49c:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1e4b4
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1e49c
  jump_1e4b4:
    pop    %edi
    mov    0x818(%esp),%eax
    dec    %ebx
    sub    $0x14,%eax
    mov    %edx,%edi
    mov    %eax,%esi
    mov    %eax,0x818(%esp)
    push   %edi
  jump_1e4cc:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1e4e4
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1e4cc
  jump_1e4e4:
    pop    %edi
    mov    0x814(%esp),%esi
    mov    %ebx,0x81c(%esp)
    cmp    %esi,%ecx
    jle    jump_1e54d
    flds   0x820(%esp)
    fadds  data_90bc8
    fsts   0x820(%esp)
    fcomps data_90bcc
    fnstsw %ax
    sahf
    jae    jump_1e521
    movl   $0x42480000,0x820(%esp)
  jump_1e521:
    mov    0x80c(%esp),%eax
    mov    0x822(%esp),%edx
    mov    0x3333(%eax),%eax
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    add    %eax,0x814(%esp)
  jump_1e54d:
    movl   $0xc,0x0(%ebp)
    call   func_782df
    mov    %eax,%edx
    mov    0x810(%esp),%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    inc    %edx
    xor    %ebx,%ebx
    mov    %edx,%esi
    xor    %edx,%edx
    jmp    jump_1e571
  jump_1e570:
    inc    %edx
  jump_1e571:
    movswl %dx,%eax
    cmp    $0xd,%eax
    jge    jump_1e589
    add    data_96514(,%eax,2),%bx
    cmp    %bx,%si
    jg     jump_1e570
    mov    %eax,0x0(%ebp)
  jump_1e589:
    call   func_782df
    mov    %eax,%edx
    mov    $0x3e8,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x800(%esp)
    fildl  0x800(%esp)
    fstps  0x7e8(%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x800(%esp)
    fildl  0x800(%esp)
    fstps  0x7ec(%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x800(%esp)
    lea    0x7e8(%esp),%eax
    fildl  0x800(%esp)
    fstps  0x7f0(%esp)
    call   func_53000
    flds   0x7e8(%esp)
    lea    0x7d0(%esp),%eax
    flds   0x820(%esp)
    fxch   %st(1)
    fmul   %st(1),%st
    mov    %eax,0x804(%esp)
    fstps  0x7dc(%esp)
    flds   0x7ec(%esp)
    mov    0x7dc(%esp),%eax
    fmul   %st(1),%st
    mov    %eax,0x7d0(%esp)
    fstps  0x7e0(%esp)
    flds   0x7f0(%esp)
    mov    0x7e0(%esp),%eax
    fmulp  %st,%st(1)
    mov    %eax,0x7d4(%esp)
    fstps  0x7e4(%esp)
    mov    0x7e4(%esp),%eax
    mov    %eax,0x7d8(%esp)
    mov    0x7dc(%esp),%eax
    mov    %eax,0x7e8(%esp)
    mov    0x7e0(%esp),%eax
    mov    %eax,0x7ec(%esp)
    mov    0x7e4(%esp),%eax
    mov    %eax,0x7f0(%esp)
    mov    0x7dc(%esp),%eax
    mov    %eax,0x8(%ebp)
    add    $0x8,%ebp
    mov    0x7ec(%esp),%eax
    mov    %eax,0x4(%ebp)
    mov    0x824(%esp),%ecx
    mov    0x7f0(%esp),%eax
    mov    0x80c(%esp),%edx
    mov    %eax,0x8(%ebp)
    inc    %ecx
    mov    0x3335(%edx),%si
    mov    %cx,0x824(%esp)
    cmp    %si,%cx
    jl     jump_1e434
  jump_1e6f2:
    mov    0x808(%esp),%eax
    call   func_7744e
    add    $0x828,%esp
    pop    %ebp
    pop    %edi
  jump_1e706:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1e70c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%esi
    mov    %bx,0xc(%esp)
    movl   $0xffffffff,0x306fc(%eax)
    movb   $0x0,0x30700(%eax)
    xor    %ebx,%ebx
    mov    %dx,0xd88(%eax)
    mov    %ebx,0x8(%esp)
    xor    %edx,%edx
    mov    0x3335(%eax),%bx
    mov    %dx,0x14(%esp)
    test   %bx,%bx
    jle    jump_1e789
    xor    %dl,%dl
  jump_1e74d:
    mov    0x12(%esp),%eax
    sar    $0x10,%eax
    imul   $0x60,%eax,%eax
    mov    %dl,0xdc9(%esi,%eax,1)
    mov    %dl,0xdca(%esi,%eax,1)
    mov    %dl,0xdcb(%esi,%eax,1)
    mov    0x14(%esp),%ecx
    mov    %dl,0xdcc(%esi,%eax,1)
    inc    %ecx
    mov    0x3335(%esi),%di
    mov    %cx,0x14(%esp)
    cmp    %di,%cx
    jl     jump_1e74d
  jump_1e789:
    xor    %eax,%eax
    mov    0x49c3(%esi),%dx
    mov    %ax,0x14(%esp)
    test   %dx,%dx
    jle    jump_1e7c4
  jump_1e79c:
    mov    0x12(%esp),%eax
    sar    $0x10,%eax
    imul   $0x27,%eax,%eax
    mov    0x14(%esp),%ebx
    movb   $0x0,0x3357(%esi,%eax,1)
    inc    %ebx
    mov    0x49c3(%esi),%cx
    mov    %bx,0x14(%esp)
    cmp    %cx,%bx
    jl     jump_1e79c
  jump_1e7c4:
    mov    $data_105258,%eax
    mov    $0xffff,%ebx
    xor    %edx,%edx
    xor    %edi,%edi
    call   func_46480
    jmp    jump_1e7f0
  jump_1e7d9:
    mov    0x14(%esp),%edi
    xor    %ecx,%ecx
    mov    %bx,data_106fa6(,%eax,2)
    inc    %edi
    mov    %cx,data_106fb4(,%eax,2)
  jump_1e7f0:
    mov    %di,0x14(%esp)
    mov    0x12(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x7,%eax
    jl     jump_1e7d9
    movl   $0x258,0x10(%esp)
    mov    0x3333(%esi),%eax
    sar    $0x10,%eax
    movw   $0x0,0x32dd3(%esi)
    cmp    $0x19,%eax
    jge    jump_1e828
    movl   $0x1c2,0x10(%esp)
  jump_1e828:
    lea    0xdb5(%esi),%ebp
  jump_1e82e:
    mov    0x10(%esp),%edx
    cmp    0x32dd3(%esi),%dx
    jle    jump_1e994
    cmpl   $0x0,0x8(%esp)
    jbe    jump_1e8aa
    mov    0xd88(%esi),%cx
    xor    %edi,%edi
    test   %cx,%cx
    jle    jump_1e8aa
    jmp    jump_1e860
  jump_1e856:
    inc    %edi
    cmp    0xd88(%esi),%di
    jge    jump_1e8aa
  jump_1e860:
    movswl %di,%eax
    imul   $0x1ee,%eax,%eax
    mov    0xd(%esi,%eax,1),%edx
    movb   $0x0,0x14(%edx)
    mov    0xd(%esi,%eax,1),%eax
    xor    %bl,%bl
    movb   $0x0,0x17(%eax)
    xor    %eax,%eax
    jmp    jump_1e895
  jump_1e87f:
    movswl %ax,%ecx
    mov    0x2c(%edx,%ecx,4),%edx
    mov    (%edx),%ecx
    mov    %bl,0x20(%edx)
    mov    %bl,0x16(%ecx)
    mov    0x4(%edx),%edx
    inc    %eax
    mov    %bl,0x16(%edx)
  jump_1e895:
    movswl %di,%edx
    imul   $0x1ee,%edx,%edx
    mov    0xd(%edx,%esi,1),%edx
    cmp    0x44(%edx),%ax
    jge    jump_1e856
    jmp    jump_1e87f
  jump_1e8aa:
    xor    %edx,%edx
    mov    0xd88(%esi),%bx
    mov    %dx,0x18(%esp)
    test   %bx,%bx
    jg     jump_1e8dc
    jmp    jump_1e97f
  jump_1e8c2:
    mov    0x18(%esp),%eax
    inc    %eax
    mov    0xd88(%esi),%dx
    mov    %ax,0x18(%esp)
    cmp    %dx,%ax
    jge    jump_1e97f
  jump_1e8dc:
    mov    0x3333(%esi),%ebx
    call   func_782df
    mov    %eax,%edx
    sar    $0x10,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    imul   $0x60,%edx,%edx
    mov    0x16(%esp),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    add    %esi,%eax
    add    %ebp,%edx
    mov    %edx,0xd(%eax)
    mov    0x14(%edx),%bl
    test   %bl,%bl
    je     jump_1e916
    decw   0x18(%esp)
    jmp    jump_1e8c2
  jump_1e916:
    mov    %bl,%bh
    or     $0x80,%bh
    mov    0x18(%esp),%cl
    mov    %bh,0x14(%edx)
    mov    $0x1,%bl
    mov    0xd(%eax),%edx
    shl    %cl,%bl
    or     %bl,0x14(%edx)
    mov    0x18(%esp),%dl
    mov    %dl,0x6(%eax)
    mov    0xd(%eax),%eax
    mov    0x17(%eax),%ch
    or     %bl,%ch
    xor    %edx,%edx
    mov    %ch,0x17(%eax)
    jmp    jump_1e962
  jump_1e942:
    movswl %dx,%ecx
    mov    0x2c(%eax,%ecx,4),%eax
    mov    0x20(%eax),%bh
    or     %bl,%bh
    mov    (%eax),%ecx
    mov    %bh,0x20(%eax)
    or     %bl,0x16(%ecx)
    mov    0x4(%eax),%eax
    mov    0x16(%eax),%cl
    or     %bl,%cl
    inc    %edx
    mov    %cl,0x16(%eax)
  jump_1e962:
    mov    0x16(%esp),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    mov    0xd(%esi,%eax,1),%eax
    cmp    0x44(%eax),%dx
    jge    jump_1e8c2
    jmp    jump_1e942
  jump_1e97f:
    mov    0x8(%esp),%edi
    mov    %esi,%eax
    inc    %edi
    call   func_220cc
    mov    %edi,0x8(%esp)
    jmp    jump_1e82e
  jump_1e994:
    mov    0xd88(%esi),%bx
    xor    %ecx,%ecx
    test   %bx,%bx
    jle    jump_1ec35
    lea    0x6(%esi),%eax
    mov    %eax,(%esp)
    xor    %ebp,%ebp
  jump_1e9ae:
    movswl %cx,%eax
    test   %eax,%eax
    jne    jump_1e9e2
    mov    0xc(%esp),%bl
  jump_1e9b9:
    movswl %cx,%edx
    imul   $0x1ee,%edx,%eax
    mov    (%esp),%edi
    and    $0xff,%ebx
    add    %edi,%eax
    inc    %ecx
    call   func_3b1fc
    cmp    0xd88(%esi),%cx
    jge    jump_1ec35
    jmp    jump_1e9ae
  jump_1e9e2:
    call   func_782df
    mov    %eax,%edx
    mov    $0x15,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    xor    %edi,%edi
    mov    %dl,%bl
    xor    %eax,%eax
    test   %cx,%cx
    jg     jump_1ea06
    jmp    jump_1ea1a
  jump_1ea00:
    inc    %eax
    cmp    %cx,%ax
    jge    jump_1ea1a
  jump_1ea06:
    movswl %ax,%edx
    imul   $0x1ee,%edx,%edx
    cmp    0x7(%edx,%esi,1),%bl
    jne    jump_1ea00
    mov    $0xffffffff,%edi
  jump_1ea1a:
    test   %edi,%edi
    jne    jump_1e9e2
    jmp    jump_1e9b9
  jump_1ea20:
    mov    0xd88(%esi),%ax
    xor    %edx,%edx
    test   %ax,%ax
    jle    jump_1ec63
    mov    $0x14,%ebx
  jump_1ea37:
    movswl %dx,%eax
    imul   $0x1ee,%eax,%eax
    mov    0x1cf(%esi,%eax,1),%cx
    add    %ebx,%ecx
    mov    0x1d1(%esi,%eax,1),%di
    mov    %cx,0x1cf(%esi,%eax,1)
    add    %ebx,%edi
    mov    0x1d3(%esi,%eax,1),%cx
    mov    %di,0x1d1(%esi,%eax,1)
    add    %ebx,%ecx
    mov    0x1d5(%esi,%eax,1),%di
    mov    %cx,0x1d3(%esi,%eax,1)
    add    %ebx,%edi
    mov    0x1d7(%esi,%eax,1),%cx
    mov    %di,0x1d5(%esi,%eax,1)
    add    %ebx,%ecx
    mov    0x1d9(%esi,%eax,1),%di
    mov    %cx,0x1d7(%esi,%eax,1)
    add    $0x1e,%edi
    mov    0x1db(%esi,%eax,1),%cx
    mov    %di,0x1d9(%esi,%eax,1)
    sub    $0x14,%ecx
    mov    %cx,0x1db(%esi,%eax,1)
    inc    %edx
    cmp    0xd88(%esi),%dx
    jge    jump_1ec63
    jmp    jump_1ea37
  jump_1ead3:
    mov    0xd88(%esi),%di
    xor    %edx,%edx
    test   %di,%di
    jle    jump_1ec63
    mov    $0x1e,%ebx
  jump_1eaea:
    movswl %dx,%eax
    imul   $0x1ee,%eax,%eax
    mov    0x1cf(%esi,%eax,1),%cx
    add    %ebx,%ecx
    mov    0x1d1(%esi,%eax,1),%di
    mov    %cx,0x1cf(%esi,%eax,1)
    add    %ebx,%edi
    mov    0x1d3(%esi,%eax,1),%cx
    mov    %di,0x1d1(%esi,%eax,1)
    add    %ebx,%ecx
    mov    0x1d5(%esi,%eax,1),%di
    mov    %cx,0x1d3(%esi,%eax,1)
    add    %ebx,%edi
    mov    0x1d7(%esi,%eax,1),%cx
    mov    %di,0x1d5(%esi,%eax,1)
    add    %ebx,%ecx
    mov    0x1d9(%esi,%eax,1),%di
    mov    %cx,0x1d7(%esi,%eax,1)
    add    $0x28,%edi
    mov    0x1db(%esi,%eax,1),%cx
    mov    %di,0x1d9(%esi,%eax,1)
    sub    $0x1e,%ecx
    mov    %cx,0x1db(%esi,%eax,1)
    inc    %edx
    cmp    0xd88(%esi),%dx
    jge    jump_1ec63
    jmp    jump_1eaea
  jump_1eb86:
    mov    0xd88(%esi),%cx
    xor    %edx,%edx
    test   %cx,%cx
    jle    jump_1ec63
    mov    $0x14,%ebx
  jump_1eb9d:
    movswl %dx,%eax
    imul   $0x1ee,%eax,%eax
    mov    0x1cf(%esi,%eax,1),%cx
    add    %ebx,%ecx
    mov    0x1d1(%esi,%eax,1),%di
    mov    %cx,0x1cf(%esi,%eax,1)
    add    %ebx,%edi
    mov    0x1d3(%esi,%eax,1),%cx
    mov    %di,0x1d1(%esi,%eax,1)
    add    %ebx,%ecx
    mov    0x1d5(%esi,%eax,1),%di
    mov    %cx,0x1d3(%esi,%eax,1)
    add    %ebx,%edi
    mov    0x1d7(%esi,%eax,1),%cx
    mov    %di,0x1d5(%esi,%eax,1)
    add    %ebx,%ecx
    mov    0x1d9(%esi,%eax,1),%di
    mov    %cx,0x1d7(%esi,%eax,1)
    add    $0x1e,%edi
    mov    0x1db(%esi,%eax,1),%cx
    mov    %di,0x1d9(%esi,%eax,1)
    sub    $0x14,%ecx
    mov    %cx,0x1db(%esi,%eax,1)
    inc    %edx
    cmp    0xd88(%esi),%dx
    jge    jump_1ec63
    jmp    jump_1eb9d
  jump_1ec35:
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0x8(%esi),%dl
    call   func_1ee08
    mov    0xdb4(%esi),%al
    cmp    $0x1,%al
    jb     jump_1ec5b
    jbe    jump_1ead3
    cmp    $0x2,%al
    je     jump_1eb86
    jmp    jump_1ec63
  jump_1ec5b:
    test   %al,%al
    je     jump_1ea20
  jump_1ec63:
    mov    0xd(%esi),%eax
    mov    %eax,0x306f4(%esi)
    xor    %eax,%eax
    movw   $0x0,0x3067b(%esi)
    mov    %ax,0x14(%esp)
    xor    %edx,%edx
    jmp    jump_1eca8
  jump_1ec80:
    imul   $0x162,%eax,%eax
    mov    0x14(%esp),%ecx
    movw   $0xffff,0x272db(%esi,%eax,1)
    inc    %ecx
    mov    %dl,0x272dd(%esi,%eax,1)
    mov    %cx,0x14(%esp)
    mov    %edx,0x272de(%esi,%eax,1)
  jump_1eca8:
    mov    0x12(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x6b,%eax
    jl     jump_1ec80
    xor    %edx,%edx
    mov    0xd88(%esi),%bx
    mov    %dx,0x14(%esp)
    test   %bx,%bx
    jle    jump_21299
    jmp    jump_1ece7
  jump_1eccd:
    mov    0x14(%esp),%edi
    inc    %edi
    mov    0xd88(%esi),%dx
    mov    %di,0x14(%esp)
    cmp    %dx,%di
    jge    jump_21299
  jump_1ece7:
    mov    0x12(%esp),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%edx
    cmpb   $0x3,0x1a3(%edx,%esi,1)
    jne    jump_1ed3b
    xor    %edx,%edx
    mov    data_104bea,%dl
    cmp    %edx,%eax
    jne    jump_1ed3b
    mov    0x14(%esp),%cl
    xor    %edx,%eax
    mov    $0x1,%dl
    shl    %cl,%dl
    mov    %dl,%cl
    mov    %esi,%edx
    jmp    jump_1ed2c
  jump_1ed1a:
    mov    0xd(%edx),%ebx
    mov    0x17(%ebx),%ch
    add    $0x1ee,%edx
    or     %cl,%ch
    inc    %eax
    mov    %ch,0x17(%ebx)
  jump_1ed2c:
    mov    0xd86(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1eccd
    jmp    jump_1ed1a
  jump_1ed3b:
    mov    0x12(%esp),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    add    %esi,%eax
    mov    0x1a3(%eax),%ch
    cmp    $0xf,%ch
    jne    jump_1ed8a
    mov    0x14(%esp),%cl
    mov    $0x1,%dl
    shl    %cl,%dl
    xor    %eax,%eax
    mov    %dl,%cl
    mov    %esi,%edx
    jmp    jump_1ed77
  jump_1ed65:
    mov    0x3357(%edx),%bl
    add    $0x27,%edx
    or     %cl,%bl
    inc    %eax
    mov    %bl,0x3330(%edx)
  jump_1ed77:
    mov    0x49c1(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1eccd
    jmp    jump_1ed65
  jump_1ed8a:
    cmp    $0x4,%ch
    jne    jump_1eccd
    xor    %ecx,%ecx
    mov    %esi,%eax
    mov    %ecx,0x4(%esp)
    jmp    jump_1edae
  jump_1ed9d:
    mov    0x4(%esp),%edx
    add    $0x1ee,%eax
    add    $0x2,%edx
    inc    %ecx
    mov    %edx,0x4(%esp)
  jump_1edae:
    mov    0xd86(%esi),%edx
    sar    $0x10,%edx
    cmp    %edx,%ecx
    jge    jump_1eccd
    mov    0x12(%esp),%edx
    sar    $0x10,%edx
    cmp    %ecx,%edx
    je     jump_1ed9d
    imul   $0x1ee,%edx,%ebx
    add    %esi,%ebx
    mov    0x4(%esp),%ebp
    mov    0x1db(%ebx),%di
    mov    %di,0x1b8(%ebx,%ebp,1)
    movb   $0x1,0x1c6(%ecx,%ebx,1)
    mov    0x1db(%eax),%di
    mov    %di,0x1b8(%eax,%edx,2)
    movb   $0x1,0x1c6(%edx,%eax,1)
    jmp    jump_1ed9d


/*----------------------------------------------------------------*/
func_1ee08:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %dl,0x8(%eax)
    mov    $0x1,%ecx
    mov    0xd88(%eax),%dx
    mov    $0xffffffff,%edi
    cmp    %cx,%dx
    jle    jump_1d78b
    jmp    jump_1ee56
  jump_1ee30:
    movswl %cx,%edx
    imul   $0x1ee,%edx,%edx
    mov    (%esp),%al
    mov    %al,0x8(%edx,%esi,1)
    inc    %ecx
    mov    0xd88(%esi),%bx
    mov    $0xffffffff,%edi
    cmp    %bx,%cx
    jge    jump_1d78b
  jump_1ee56:
    test   %edi,%edi
    je     jump_1ee30
    call   func_782df
    mov    %eax,%edx
    mov    $0x7,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    xor    %edi,%edi
    mov    %dx,(%esp)
    xor    %eax,%eax
    test   %cx,%cx
    jg     jump_1ee80
    jmp    jump_1ee56
  jump_1ee7a:
    inc    %eax
    cmp    %cx,%ax
    jge    jump_1ee56
  jump_1ee80:
    movswl %ax,%edx
    imul   $0x1ee,%edx,%edx
    xor    %ebx,%ebx
    mov    0x8(%edx,%esi,1),%bl
    mov    -0x2(%esp),%edx
    sar    $0x10,%edx
    cmp    %edx,%ebx
    jne    jump_1ee7a
    mov    $0xffffffff,%edi
    jmp    jump_1ee56


/*----------------------------------------------------------------*/
func_1eea4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%ebp
    mov    0xd88(%eax),%dx
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_1efb4
    mov    $0x15,%edx
    mov    $0xe,%edi
    mov    $0x7,%ebx
    mov    %edx,0x1c(%esp)
    mov    %ebx,0x18(%esp)
  jump_1eed8:
    movswl %cx,%edx
    imul   $0x1ee,%edx,%edx
    movzbw 0x7(%edx,%ebp,1),%si
    mov    0x7(%edx,%ebp,1),%dl
    and    $0xff,%edx
    push   %edx
    push   $data_90bd0
    lea    0x8(%esp),%edx
    push   %edx
    lea    0xc(%esp),%ebx
    call   func_76d09
    mov    $data_12fc20,%eax
    xor    %edx,%edx
    add    $0xc,%esp
    mov    %cx,%dx
    movswl %si,%esi
    call   func_1aeb0
    push   %esi
    push   $data_90be4
    lea    0x8(%esp),%edx
    push   %edx
    lea    0xc(%esp),%ebx
    call   func_76d09
    add    $0xc,%esp
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    0x18(%esp),%dx
    call   func_1aeb0
    push   %esi
    push   $data_90bf8
    lea    0x8(%esp),%edx
    push   %edx
    lea    0xc(%esp),%ebx
    call   func_76d09
    add    $0xc,%esp
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    %di,%dx
    call   func_1aeb0
    push   %esi
    push   $data_90c0c
    lea    0x8(%esp),%edx
    inc    %ecx
    push   %edx
    lea    0xc(%esp),%ebx
    inc    %edi
    call   func_76d09
    add    $0xc,%esp
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    0x1c(%esp),%dx
    mov    0x18(%esp),%esi
    call   func_1aeb0
    mov    0x1c(%esp),%ebx
    inc    %esi
    mov    0xd88(%ebp),%ax
    inc    %ebx
    mov    %esi,0x18(%esp)
    mov    %ebx,0x1c(%esp)
    cmp    %ax,%cx
    jl     jump_1eed8
  jump_1efb4:
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
  jump_1efba:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1efc0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    mov    $0x168c,%ebx
    add    $0x3337,%eax
    xor    %edx,%edx
    call   func_76ec0
    mov    $0xffffffff,%ebx
    movw   $0x0,0x49c3(%ecx)
    call   func_1f91c
    movw   $0x2,0x32dd1(%ecx)
  jump_1eff2:
    mov    0x32dcf(%ecx),%edx
    sar    $0x10,%edx
    cmp    $0x1,%edx
    jle    jump_1efba
    mov    0x3335(%ecx),%dx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_1f026
  jump_1f00e:
    movswl %ax,%edx
    imul   $0x60,%edx,%edx
    mov    %bx,0xdbb(%ecx,%edx,1)
    inc    %eax
    cmp    0x3335(%ecx),%ax
    jl     jump_1f00e
  jump_1f026:
    mov    %ecx,%eax
    call   func_1fb34
    mov    %ecx,%eax
    call   func_201d8
    jmp    jump_1eff2


/*----------------------------------------------------------------*/
func_1f038:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x474,%esp
    mov    %eax,%esi
    mov    0x32dcf(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    je     jump_1f065
    mov    $0x5ba,%ebx
    mov    $data_90c20,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1f065:
    mov    0x3333(%esi),%edi
    sar    $0x10,%edi
    lea    -0x1(%edi),%eax
    imul   %eax,%edi
    mov    $data_d8da0,%edx
    mov    %edx,0x450(%esp)
    test   %edx,%edx
    jne    jump_1f095
    mov    $0x5c2,%ebx
    mov    $data_90c2e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1f095:
    mov    0x450(%esp),%edx
    xor    %ecx,%ecx
    jmp    jump_1f0a1
  jump_1f0a0:
    inc    %ecx
  jump_1f0a1:
    mov    0x3333(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jge    jump_1f0cc
    lea    0x1(%ecx),%eax
    jmp    jump_1f0bd
  jump_1f0b3:
    add    $0x2,%edx
    mov    %al,-0x1(%edx)
    mov    %cl,-0x2(%edx)
    inc    %eax
  jump_1f0bd:
    mov    0x3333(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1f0a0
    jmp    jump_1f0b3
  jump_1f0cc:
    sub    0x450(%esp),%edx
    cmp    %edi,%edx
    je     jump_1f0e8
    mov    $0x5d1,%ebx
    mov    $data_90c3c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1f0e8:
    mov    $0x2710,%ebx
    mov    $0xff,%edx
    lea    0x32ddb(%esi),%eax
    sar    %edi
    call   func_76ec0
    xor    %ecx,%ecx
    mov    %edi,0x45c(%esp)
    mov    %esi,%eax
    xor    %bl,%bl
    jmp    jump_1f120
  jump_1f10e:
    inc    %ecx
    mov    %bl,0x32dda(%ecx,%eax,1)
    add    $0x64,%eax
    mov    %bl,0x3e7(%esp,%ecx,1)
  jump_1f120:
    mov    0x3333(%esi),%edx
    sar    $0x10,%edx
    cmp    %edx,%ecx
    jl     jump_1f10e
    lea    0x3337(%esi),%edi
    xor    %ecx,%ecx
    jmp    jump_1f13b
  jump_1f137:
    inc    %ecx
    add    $0x27,%edi
  jump_1f13b:
    mov    0x49c1(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jge    jump_1f20a
    mov    0x4(%edi),%eax
    mov    (%edi),%ebx
    mov    0x4(%eax),%al
    mov    0x4(%ebx),%bl
    mov    %al,0x470(%esp)
    xor    %eax,%eax
    mov    %bl,%al
    imul   $0x64,%eax,%edx
    lea    (%esi,%edx,1),%ebp
    xor    %edx,%edx
    mov    0x470(%esp),%dl
    add    %edx,%ebp
    movb   $0x1,0x32ddb(%ebp)
    imul   $0x64,%edx,%ebp
    add    %esi,%ebp
    add    %eax,%ebp
    movb   $0x1,0x32ddb(%ebp)
    mov    0x3e8(%esp,%eax,1),%bh
    movzbl %bh,%ebp
    mov    %ebp,0x454(%esp)
    imul   $0xa,%eax,%ebp
    inc    %bh
    mov    %bh,0x3e8(%esp,%eax,1)
    add    0x454(%esp),%ebp
    mov    0x3e8(%esp,%edx,1),%bh
    mov    %dl,(%esp,%ebp,1)
    movzbl %bh,%ebp
    mov    %ebp,0x454(%esp)
    imul   $0xa,%edx,%ebp
    inc    %bh
    mov    %bh,0x3e8(%esp,%edx,1)
    add    0x454(%esp),%ebp
    mov    0x3e8(%esp,%eax,1),%al
    mov    %bl,(%esp,%ebp,1)
    and    $0xff,%eax
    cmp    $0xa,%eax
    jge    jump_1f1f4
    xor    %eax,%eax
    mov    %bh,%al
    cmp    $0xa,%eax
    jl     jump_1f137
  jump_1f1f4:
    mov    $0x5f3,%ebx
    mov    $data_90c4a,%edx
    xor    %eax,%eax
    call   func_26198
    jmp    jump_1f137
  jump_1f20a:
    mov    0x45c(%esp),%edx
    mov    0x450(%esp),%eax
    add    %edx,%edx
    add    %eax,%edx
    sub    $0x2,%edx
    cmp    %eax,%edx
    jb     jump_1f270
  jump_1f223:
    mov    (%eax),%bl
    mov    0x1(%eax),%cl
    and    $0xff,%ebx
    imul   $0x64,%ebx,%ebx
    add    %esi,%ebx
    and    $0xff,%ecx
    mov    0x32ddb(%ecx,%ebx,1),%bl
    and    $0xff,%ebx
    cmp    $0x1,%ebx
    jne    jump_1f269
    mov    (%edx),%bl
    mov    %bl,(%eax)
    mov    0x1(%edx),%bl
    mov    %bl,0x1(%eax)
    mov    0x45c(%esp),%ebx
    dec    %ebx
    sub    $0x2,%edx
    mov    %ebx,0x45c(%esp)
    jmp    jump_1f26c
  jump_1f269:
    add    $0x2,%eax
  jump_1f26c:
    cmp    %edx,%eax
    jbe    jump_1f223
  jump_1f270:
    mov    $0x2,%ebp
    mov    0x45c(%esp),%eax
    mov    %ebp,0x44c(%esp)
    test   %eax,%eax
    jle    jump_1f3f6
    movl   $0x1,0x458(%esp)
  jump_1f296:
    mov    0x3333(%esi),%eax
    mov    0x44c(%esp),%edx
    sar    $0x10,%eax
    cmp    %edx,%eax
    jg     jump_1f2bb
    mov    $0x610,%ebx
    mov    $data_90c58,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1f2bb:
    mov    0x45c(%esp),%eax
    mov    0x450(%esp),%ebp
    add    %eax,%eax
    add    %ebp,%eax
    sub    $0x2,%eax
    mov    %eax,0x460(%esp)
    cmp    %eax,%ebp
    ja     jump_1f3c9
    mov    0x458(%esp),%eax
    mov    %eax,0x464(%esp)
  jump_1f2ed:
    mov    0x0(%ebp),%al
    mov    %al,0x46c(%esp)
    mov    0x1(%ebp),%al
    movzbl 0x46c(%esp),%edi
    mov    %al,0x468(%esp)
    movzbl 0x3e8(%esp,%edi,1),%edi
    xor    %eax,%eax
    jmp    jump_1f316
  jump_1f315:
    inc    %eax
  jump_1f316:
    movswl %ax,%edx
    cmp    %edi,%edx
    jge    jump_1f3b7
    xor    %ebx,%ebx
    mov    0x46c(%esp),%bl
    imul   $0xa,%ebx,%ecx
    add    %edx,%ecx
    mov    (%esp,%ecx,1),%cl
    and    $0xff,%ecx
    imul   $0x64,%ecx,%ecx
    xor    %edx,%edx
    mov    0x468(%esp),%dl
    add    %esi,%ecx
    mov    0x32ddb(%ecx,%edx,1),%cl
    and    $0xff,%ecx
    cmp    0x464(%esp),%ecx
    jne    jump_1f315
    imul   $0x64,%ebx,%eax
    add    %esi,%eax
    mov    0x44c(%esp),%cl
    mov    %cl,0x32ddb(%edx,%eax,1)
    imul   $0x64,%edx,%edx
    add    %esi,%edx
    mov    0x460(%esp),%eax
    mov    %cl,0x32ddb(%edx,%ebx,1)
    mov    (%eax),%al
    mov    %al,0x0(%ebp)
    mov    0x460(%esp),%eax
    sub    $0x2,%ebp
    mov    0x1(%eax),%al
    mov    0x45c(%esp),%edx
    mov    %al,0x3(%ebp)
    mov    0x460(%esp),%eax
    dec    %edx
    sub    $0x2,%eax
    mov    %edx,0x45c(%esp)
    mov    %eax,0x460(%esp)
  jump_1f3b7:
    mov    0x460(%esp),%edi
    add    $0x2,%ebp
    cmp    %edi,%ebp
    jbe    jump_1f2ed
  jump_1f3c9:
    mov    0x458(%esp),%ecx
    mov    0x44c(%esp),%edi
    mov    0x45c(%esp),%ebp
    inc    %ecx
    inc    %edi
    mov    %ecx,0x458(%esp)
    mov    %edi,0x44c(%esp)
    test   %ebp,%ebp
    jg     jump_1f296
  jump_1f3f6:
    add    $0x474,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1f404:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x118,%esp
    mov    %eax,0x110(%esp)
    add    $0xdb5,%eax
    mov    %eax,0xf0(%esp)
    mov    0x110(%esp),%eax
    mov    0x110(%esp),%ebp
    add    $0x49c5,%eax
    xor    %edx,%edx
    mov    %eax,0xd8(%esp)
    mov    0xf0(%esp),%eax
    add    $0x18247,%ebp
    add    $0x1c,%eax
    mov    %edx,0xec(%esp)
    mov    %eax,0xd4(%esp)
    jmp    jump_1f8a5
  jump_1f462:
    lea    0x1(%ebx),%esi
    add    $0x1ee,%eax
    mov    %esi,0x114(%esp)
  jump_1f471:
    mov    0x110(%esp),%edx
    mov    0xd86(%edx),%edx
    mov    0x114(%esp),%ebx
    sar    $0x10,%edx
    cmp    %ebx,%edx
    jle    jump_1f498
    cmp    0xd(%eax),%ecx
    jne    jump_1f462
    mov    %ebx,0x108(%esp)
  jump_1f498:
    cmpl   $0x0,0x108(%esp)
    jl     jump_1f4b7
    cmpl   $0x0,0xf4(%esp)
    jne    jump_1f4b7
    movl   $0x1,0xf4(%esp)
  jump_1f4b7:
    xor    %ebx,%ebx
    mov    0x108(%esp),%ecx
    mov    %ebx,0xf8(%esp)
    test   %ecx,%ecx
    jl     jump_1f4e5
    call   func_782df
    mov    %eax,%edx
    mov    0xf4(%esp),%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %edx,0xf8(%esp)
  jump_1f4e5:
    mov    0xf0(%esp),%edx
    mov    0xf4(%esp),%eax
    xor    %edi,%edi
    mov    %ax,0x5a(%edx)
    mov    %edi,0xc0(%esp)
    mov    %edi,0xc4(%esp)
    mov    %edi,0xc8(%esp)
    mov    (%edx),%eax
    filds  data_964fa(,%eax,2)
    mov    $0x168,%eax
    mov    %eax,%edx
    mov    0xf4(%esp),%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %edi,0x100(%esp)
    mov    %edi,0x114(%esp)
    fstps  0xe8(%esp)
    mov    %eax,0xe0(%esp)
    test   %ebx,%ebx
    jle    jump_1f83e
    mov    0xd4(%esp),%eax
    mov    0x108(%esp),%ecx
    mov    %eax,0xdc(%esp)
    imul   $0x1ee,%ecx,%eax
    mov    0x110(%esp),%edx
    add    %eax,%edx
    mov    0xf0(%esp),%eax
    mov    %edi,0x104(%esp)
    mov    %eax,0xfc(%esp)
    lea    0x24(%ebp),%eax
    mov    %edx,0xe4(%esp)
    mov    %eax,0x10c(%esp)
  jump_1f598:
    mov    0xfc(%esp),%eax
    mov    %ebp,0x46(%eax)
    call   func_782df
    mov    %eax,%edx
    mov    $0x5,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    call   func_782df
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    $0xb,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    cmpl   $0x0,0x108(%esp)
    jl     jump_1f611
    mov    0xf8(%esp),%eax
    cmp    0x114(%esp),%eax
    jne    jump_1f611
    mov    $0x15,%ecx
    mov    %esp,%edi
    mov    $data_96548,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    $0x15,%ecx
    lea    0x54(%esp),%edi
    mov    $data_9659c,%esi
    mov    0xe4(%esp),%eax
    xor    %edx,%edx
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x7(%eax),%dl
    mov    (%esp,%edx,4),%ebx
    mov    0x54(%esp,%edx,4),%edx
  jump_1f611:
    movw   $0x0,0x1a(%ebp)
    movl   $0x0,0x10(%ebp)
    mov    0xec(%esp),%eax
    movl   $0x0,0x5a(%ebp)
    mov    %ax,0xc(%ebp)
    mov    0x114(%esp),%eax
    mov    0x110(%esp),%ecx
    mov    %ax,0xe(%ebp)
    mov    0xd8(%esp),%esi
    mov    0x18243(%ecx),%ecx
    xor    %eax,%eax
    sar    $0x10,%ecx
    mov    %dx,%ax
    xor    %edx,%edx
    shl    $0x2,%ecx
    mov    %bx,%dx
    add    %esi,%ecx
    mov    %eax,%ebx
    mov    %ebp,%eax
    call   func_33af0
    mov    0x110(%esp),%edx
    add    %ax,0x18245(%edx)
    mov    0x18243(%edx),%eax
    sar    $0x10,%eax
    cmp    $0x4e20,%eax
    jle    jump_1f699
    mov    $0x67b,%ebx
    mov    $data_90c66,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1f699:
    mov    0xdc(%esp),%edi
    push   %edi
    push   $data_90c74
    mov    0x114(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    mov    0x114(%esp),%edx
    mov    0x10c(%esp),%eax
    inc    %edx
    call   func_31e60
    mov    0x104(%esp),%eax
    filds  data_964f0(%eax)
    fadds  0xe8(%esp)
    fmuls  data_90c86
    lea    0xb4(%esp),%eax
    fmuls  data_90c8a
    mov    %eax,0xd0(%esp)
    fstps  0xcc(%esp)
    fldz
    mov    0xcc(%esp),%eax
    fmuls  0xcc(%esp)
    mov    %eax,0xa8(%esp)
    fstps  0xac(%esp)
    mov    0xac(%esp),%eax
    mov    %eax,0xb0(%esp)
    mov    0xcc(%esp),%eax
    mov    %eax,0xb4(%esp)
    mov    0xac(%esp),%eax
    mov    %eax,0xb8(%esp)
    mov    %eax,0xbc(%esp)
    mov    0xcc(%esp),%eax
    mov    %eax,0xc0(%esp)
    mov    0xac(%esp),%eax
    fildl  0x100(%esp)
    mov    %eax,0xc4(%esp)
    mov    %eax,0xc8(%esp)
    sub    $0x4,%esp
    lea    0xc4(%esp),%eax
    fstps  (%esp)
    lea    0xc4(%esp),%edx
    call   func_532ac
    mov    %ebp,%eax
    call   func_362c8
    cmpl   $0x0,0x108(%esp)
    jl     jump_1f7d3
    mov    0xf8(%esp),%eax
    cmp    0x114(%esp),%eax
    jne    jump_1f7d3
    mov    0x108(%esp),%al
    mov    $0xffffffff,%ebx
    mov    $0x5,%edx
    mov    %al,0x57(%ebp)
    mov    %ebp,%eax
    movw   $0x2,0x42(%ebp)
    call   func_34ae4
  jump_1f7d3:
    mov    0xfc(%esp),%eax
    mov    0x104(%esp),%edx
    mov    0x114(%esp),%ebx
    mov    0x100(%esp),%ecx
    mov    0x10c(%esp),%esi
    mov    0xf4(%esp),%edi
    add    $0x7b,%ebp
    add    $0x4,%eax
    add    $0x2,%edx
    inc    %ebx
    add    $0x7b,%esi
    mov    %eax,0xfc(%esp)
    mov    %edx,0x104(%esp)
    mov    0xe0(%esp),%eax
    mov    %ebx,0x114(%esp)
    add    %eax,%ecx
    mov    %esi,0x10c(%esp)
    mov    %ecx,0x100(%esp)
    cmp    %edi,%ebx
    jl     jump_1f598
  jump_1f83e:
    mov    0x110(%esp),%edx
    mov    0xf4(%esp),%eax
    add    %ax,0x27283(%edx)
    mov    0x27281(%edx),%eax
    sar    $0x10,%eax
    cmp    $0x1f4,%eax
    jl     jump_1f874
    mov    $0x697,%ebx
    mov    $data_90c78,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1f874:
    mov    0xec(%esp),%eax
    mov    0xd4(%esp),%edx
    mov    0xf0(%esp),%ebx
    inc    %eax
    add    $0x60,%edx
    add    $0x60,%ebx
    mov    %eax,0xec(%esp)
    mov    %edx,0xd4(%esp)
    mov    %ebx,0xf0(%esp)
  jump_1f8a5:
    mov    0x110(%esp),%eax
    mov    0x3333(%eax),%eax
    mov    0xec(%esp),%ebx
    sar    $0x10,%eax
    cmp    %ebx,%eax
    jle    jump_1f90c
    call   func_782df
    mov    %eax,%edx
    mov    $0x5,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    inc    %edx
    mov    %edx,0xf4(%esp)
    cmp    %ebx,%edx
    jle    jump_1f8e4
    mov    %ebx,0xf4(%esp)
  jump_1f8e4:
    mov    $0xffffffff,%edi
    mov    0xf0(%esp),%ecx
    xor    %eax,%eax
    mov    %edi,0x108(%esp)
    mov    %eax,0x114(%esp)
    mov    0x110(%esp),%eax
    jmp    jump_1f471
  jump_1f90c:
    add    $0x118,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1f91c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3c,%esp
    mov    $data_a2f6c,%ecx
    mov    $0x2710,%ebx
    xor    %edx,%edx
    lea    0x32ddb(%ecx),%eax
    call   func_76ec0
    mov    data_a62a1,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_1f968
  jump_1f94a:
    movswl %ax,%ebx
    imul   $0x64,%ebx,%edx
    add    $data_a2f6c,%edx
    movb   $0x1,0x32ddb(%edx,%ebx,1)
    inc    %eax
    cmp    0x3335(%ecx),%ax
    jl     jump_1f94a
  jump_1f968:
    xor    %edx,%edx
    xor    %esi,%esi
    mov    %edx,(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x8(%esp)
    xor    %edx,%esi
    mov    0x3335(%ecx),%di
    mov    %si,0x34(%esp)
    test   %di,%di
    jle    jump_1fb28
    lea    0xdb5(%ecx),%eax
    mov    %eax,0x2c(%esp)
  jump_1f998:
    mov    0x32(%esp),%eax
    sar    $0x10,%eax
    imul   $0x60,%eax,%eax
    mov    0x2c(%esp),%edx
    add    %eax,%edx
    mov    (%edx),%eax
    mov    %edx,0x28(%esp)
    mov    0x44(%edx),%dx
    cmp    data_9652e(,%eax,2),%dx
    je     jump_1f9e6
    mov    $0x1388,%esi
    mov    $0xffffffff,%edi
    mov    0x28(%esp),%ebx
    mov    0x3335(%ecx),%ax
    xor    %edx,%edx
    mov    %di,0x38(%esp)
    add    $0x8,%ebx
    test   %ax,%ax
    jle    jump_1faea
    jmp    jump_1fa10
  jump_1f9e6:
    mov    0x34(%esp),%eax
    inc    %eax
    mov    0x3335(%ecx),%dx
    mov    %ax,0x34(%esp)
    cmp    %dx,%ax
    jge    jump_1fb28
    jmp    jump_1f998
  jump_1fa02:
    inc    %edx
    cmp    0x3335(%ecx),%dx
    jge    jump_1faea
  jump_1fa10:
    mov    0x32(%esp),%eax
    sar    $0x10,%eax
    imul   $0x64,%eax,%eax
    lea    (%ecx,%eax,1),%ebp
    movswl %dx,%eax
    cmpb   $0x0,0x32ddb(%eax,%ebp,1)
    jne    jump_1fa02
    imul   $0x60,%eax,%eax
    add    0x2c(%esp),%eax
    mov    0x44(%eax),%di
    mov    (%eax),%ebp
    cmp    data_9652e(,%ebp,2),%di
    je     jump_1fa02
    lea    0xc(%esp),%ebp
    mov    %ebp,0x24(%esp)
    xor    %ebp,%ebp
    mov    %ebp,0x18(%esp)
    mov    %ebp,0x1c(%esp)
    mov    %ebp,0x20(%esp)
    flds   (%ebx)
    fsubs  0x8(%eax)
    fstps  0x18(%esp)
    flds   0x4(%ebx)
    fsubs  0xc(%eax)
    fstps  0x1c(%esp)
    flds   0x8(%ebx)
    fsubs  0x10(%eax)
    add    $0x8,%eax
    fstps  0x20(%esp)
    mov    0x18(%esp),%eax
    flds   0x1c(%esp)
    fmul   %st(0),%st
    mov    %eax,0xc(%esp)
    mov    0x1c(%esp),%eax
    flds   0x18(%esp)
    fmul   %st(0),%st
    mov    %eax,0x10(%esp)
    mov    0x20(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x14(%esp)
    flds   0x20(%esp)
    mov    0x18(%esp),%eax
    fmuls  0x20(%esp)
    mov    %eax,(%esp)
    mov    0x1c(%esp),%eax
    mov    %eax,0x4(%esp)
    mov    0x20(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x8(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    call   func_76e98
    fistpl 0x30(%esp)
    mov    0x30(%esp),%eax
    cmp    %eax,%esi
    jle    jump_1fa02
    mov    %eax,%esi
    mov    %dx,0x38(%esp)
    jmp    jump_1fa02
  jump_1faea:
    mov    0x36(%esp),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_1f9e6
    imul   $0x60,%eax,%eax
    mov    0x2c(%esp),%edx
    add    %eax,%edx
    mov    0x28(%esp),%eax
    call   func_1cf68
    test   %eax,%eax
    jne    jump_1f9e6
    mov    $0x6d0,%ebx
    mov    $data_90c8e,%edx
    call   func_26198
    jmp    jump_1f9e6
  jump_1fb28:
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1fb34:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x40,%esp
    mov    %eax,%edi
    add    $0x30701,%eax
    mov    $0x26d0,%ebx
    xor    %edx,%edx
    movw   $0x0,0x26d0(%eax)
    call   func_76ec0
    mov    0x3335(%edi),%dx
    xor    %ebx,%ebx
    test   %dx,%dx
    jle    jump_1fb9d
    lea    0xdb5(%edi),%ecx
  jump_1fb6d:
    movswl %bx,%eax
    imul   $0x60,%eax,%eax
    mov    0xdb9(%edi,%eax,1),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    jne    jump_1fb93
    lea    (%ecx,%eax,1),%edx
    mov    %edi,%eax
    call   func_1fd18
    incw   0x32dd1(%edi)
  jump_1fb93:
    inc    %ebx
    cmp    0x3335(%edi),%bx
    jl     jump_1fb6d
  jump_1fb9d:
    movw   $0x0,0x32dd5(%edi)
    xor    %eax,%eax
    mov    0x32dd1(%edi),%dx
    mov    %ax,0x3c(%esp)
    test   %dx,%dx
    jle    jump_1fceb
    lea    0x30701(%edi),%ebp
  jump_1fbc3:
    mov    0x3a(%esp),%eax
    sar    $0x10,%eax
    imul   $0x19e,%eax,%eax
    lea    (%eax,%ebp,1),%ecx
    xor    %ebx,%ebx
    mov    0x190(%ecx),%si
    lea    0x192(%ecx),%edx
    test   %si,%si
    jle    jump_1fc56
  jump_1fbe7:
    movswl %bx,%eax
    mov    %esp,%esi
    mov    (%ecx,%eax,4),%eax
    mov    %esi,0x30(%esp)
    xor    %esi,%esi
    mov    %esi,0xc(%esp)
    mov    %esi,0x10(%esp)
    mov    %esi,0x14(%esp)
    flds   (%edx)
    fadds  0x8(%eax)
    fstps  0xc(%esp)
    flds   0x4(%edx)
    fadds  0xc(%eax)
    add    $0x8,%eax
    fstps  0x10(%esp)
    flds   0x8(%edx)
    fadds  0x8(%eax)
    mov    0xc(%esp),%eax
    mov    %eax,(%esp)
    mov    0x10(%esp),%eax
    fstps  0x14(%esp)
    mov    %eax,0x4(%esp)
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%esp)
    mov    0xc(%esp),%eax
    mov    %eax,(%edx)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%edx)
    inc    %ebx
    cmp    0x190(%ecx),%bx
    jl     jump_1fbe7
  jump_1fc56:
    filds  0x190(%ecx)
    fld1
    fdivp  %st,%st(1)
    lea    0x18(%esp),%eax
    xor    %ebx,%ebx
    mov    %eax,0x34(%esp)
    mov    %ebx,0x24(%esp)
    mov    %ebx,0x28(%esp)
    mov    %ebx,0x2c(%esp)
    flds   (%edx)
    fmul   %st(1),%st
    fstps  0x24(%esp)
    flds   0x4(%edx)
    fmul   %st(1),%st
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    fmuls  0x8(%edx)
    mov    %eax,0x18(%esp)
    mov    0x28(%esp),%eax
    fstps  0x2c(%esp)
    mov    %eax,0x1c(%esp)
    mov    0x2c(%esp),%eax
    mov    %eax,0x20(%esp)
    mov    0x24(%esp),%eax
    mov    %eax,(%edx)
    mov    0x1c(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x20(%esp),%eax
    mov    0x3c(%esp),%ebx
    mov    %eax,0x8(%edx)
    inc    %ebx
    mov    0x190(%ecx),%ax
    mov    0x32dd5(%edi),%dx
    mov    %bx,0x3c(%esp)
    add    %eax,%edx
    mov    0x32dd1(%edi),%cx
    mov    %dx,0x32dd5(%edi)
    cmp    %cx,%bx
    jl     jump_1fbc3
  jump_1fceb:
    filds  0x32dd5(%edi)
    filds  0x32dd1(%edi)
    fdivrp %st,%st(1)
    call   func_76e98
    fistpl 0x38(%esp)
    mov    0x38(%esp),%eax
    mov    %ax,0x32dd5(%edi)
    add    $0x40,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1fd18:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    0x32dd1(%eax),%ax
    mov    %ax,0x6(%edx)
    mov    0x32dcf(%ecx),%ebx
    mov    %ecx,%eax
    sar    $0x10,%ebx
    call   func_2016c
    mov    0x44(%esi),%dx
    xor    %ebx,%ebx
    test   %dx,%dx
    jle    jump_1e706
    jmp    jump_1fd56
  jump_1fd4b:
    inc    %ebx
    cmp    0x44(%esi),%bx
    jge    jump_1e706
  jump_1fd56:
    movswl %bx,%edx
    mov    0x2c(%esi,%edx,4),%edx
    mov    (%edx),%edx
    mov    0x4(%edx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_1fd71
    mov    %ecx,%eax
    call   func_1fd18
  jump_1fd71:
    movswl %bx,%eax
    mov    0x2c(%esi,%eax,4),%edx
    mov    0x4(%edx),%edx
    mov    0x4(%edx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_1fd4b
    mov    %ecx,%eax
    call   func_1fd18
    jmp    jump_1fd4b


/*----------------------------------------------------------------*/
func_1fd90:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ebx,%ecx
    test   %edx,%edx
    jne    jump_1fdae
    mov    $0x71e,%ebx
    mov    $data_90c9c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_1fdae:
    mov    data_a62a1,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_1fdd0
  jump_1fdbc:
    mov    data_a62a1,%bx
    movswl %ax,%edx
    inc    %eax
    movb   $0x0,(%edx,%esi,1)
    cmp    %bx,%ax
    jl     jump_1fdbc
  jump_1fdd0:
    mov    %ecx,%edx
    shl    $0x5,%edx
    sub    %ecx,%edx
    shl    $0x3,%edx
    sub    %ecx,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    mov    0xd(%edi,%edx,2),%edx
    call   func_1fdf0
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1fdf0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,(%esp)
    mov    %edx,0x8(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ecx,0xc(%esp)
    mov    data_a3cf4,%bx
    xor    %ah,%ah
    xor    %edx,%edx
    mov    %ah,0x18(%esp)
    mov    %dx,0x14(%esp)
    test   %bx,%bx
    jle    jump_1fe6a
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    (%esp),%esi
    add    %eax,%eax
    mov    data_a3cf4,%di
    add    %eax,%esi
  jump_1fe38:
    mov    0x12(%esp),%eax
    sar    $0x10,%eax
    cmpb   $0x3,0x1c6(%esi,%eax,1)
    jne    jump_1fe5b
    mov    0x14(%esp),%cl
    mov    $0x1,%al
    mov    0x18(%esp),%dh
    shl    %cl,%al
    or     %al,%dh
    mov    %dh,0x18(%esp)
  jump_1fe5b:
    mov    0x14(%esp),%ecx
    inc    %ecx
    mov    %cx,0x14(%esp)
    cmp    %di,%cx
    jl     jump_1fe38
  jump_1fe6a:
    xor    %eax,%eax
    mov    %ax,0x14(%esp)
    mov    0x8(%esp),%eax
    cmpw   $0x0,0x44(%eax)
    jle    jump_1ffd9
    mov    0xc(%esp),%ecx
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    (%esp),%edi
    add    %eax,%eax
    mov    0xc(%esp),%cl
    add    %eax,%edi
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    %eax,0x4(%esp)
  jump_1fea6:
    mov    0x12(%esp),%eax
    sar    $0x10,%eax
    mov    0x8(%esp),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    0x2c(%eax),%esi
    mov    0x1f(%esi),%eax
    mov    0xc(%esp),%ebx
    sar    $0x10,%eax
    cmp    %ebx,%eax
    je     jump_1fed2
    mov    (%esi),%eax
    cmp    %edx,%eax
    jne    jump_1feef
    mov    0x4(%esi),%ebp
    jmp    jump_1fef1
  jump_1fed2:
    mov    0x14(%esp),%ebx
    mov    0x8(%esp),%ecx
    inc    %ebx
    mov    0x44(%ecx),%si
    mov    %bx,0x14(%esp)
    cmp    %si,%bx
    jge    jump_1ffd9
    jmp    jump_1fea6
  jump_1feef:
    mov    %eax,%ebp
  jump_1fef1:
    xor    %eax,%eax
    mov    0x4(%esp),%edx
    mov    0x17(%ebp),%al
    test   %edx,%eax
    je     jump_1ffc2
    mov    0x18(%esp),%ah
    not    %ah
    mov    0x14(%ebp),%al
    mov    0x15(%ebp),%bh
    and    %ah,%al
    and    %bh,%ah
    mov    %edx,%ecx
    or     %ah,%al
    not    %ecx
    and    $0x7f,%al
    and    $0xff,%eax
    test   %ecx,%eax
    jne    jump_1ffab
    xor    %edx,%edx
    xor    %ebx,%ebx
    jmp    jump_1ff2e
  jump_1ff2d:
    inc    %ebx
  jump_1ff2e:
    movswl %bx,%eax
    cmp    $0x6b,%eax
    jge    jump_1ff6c
    cmp    data_d35e7,%dx
    jge    jump_1ff6c
    imul   $0x162,%eax,%ecx
    mov    data_ca245(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_1ff2d
    inc    %edx
    cmp    data_ca24a(%ecx),%esi
    jne    jump_1ff2d
    cmp    0xc(%esp),%eax
    je     jump_1ff2d
    cmpb   $0x3,0x1c6(%edi,%eax,1)
    je     jump_1ff2d
  jump_1ff6c:
    cmp    data_d35e7,%dx
    jl     jump_1ff94
    mov    0xc(%esp),%eax
    mov    0xc(%esp),%ecx
    mov    0x10(%esp),%ebx
    mov    %ebp,%edx
    mov    %ax,0x21(%esi)
    mov    (%esp),%eax
    call   func_1fdf0
    jmp    jump_1fed2
  jump_1ff94:
    mov    0x8(%esp),%eax
    mov    0x2(%eax),%eax
    mov    0x10(%esp),%esi
    sar    $0x10,%eax
    add    %esi,%eax
    incb   (%eax)
    jmp    jump_1fed2
  jump_1ffab:
    mov    0x8(%esp),%eax
    mov    0x2(%eax),%eax
    mov    0x10(%esp),%ecx
    sar    $0x10,%eax
    add    %ecx,%eax
    incb   (%eax)
    jmp    jump_1fed2
  jump_1ffc2:
    mov    0x8(%esp),%eax
    mov    0x2(%eax),%eax
    mov    0x10(%esp),%ebx
    sar    $0x10,%eax
    add    %ebx,%eax
    incb   (%eax)
    jmp    jump_1fed2
  jump_1ffd9:
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_1ffe0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ebp
    mov    %edx,(%esp)
    mov    data_a3cf4,%bx
    xor    %ah,%ah
    xor    %edx,%edx
    mov    %ah,0x8(%esp)
    mov    %dx,0x4(%esp)
    test   %bx,%bx
    jle    jump_2004c
    mov    data_a3cf4,%si
  jump_2000d:
    xor    %eax,%eax
    mov    data_104bea,%al
    imul   $0x1ee,%eax,%ecx
    mov    0x2(%esp),%eax
    sar    $0x10,%eax
    cmpb   $0x3,data_a3132(%ecx,%eax,1)
    jne    jump_2003d
    mov    0x4(%esp),%cl
    mov    $0x1,%al
    mov    0x8(%esp),%dh
    shl    %cl,%al
    or     %al,%dh
    mov    %dh,0x8(%esp)
  jump_2003d:
    mov    0x4(%esp),%ecx
    inc    %ecx
    mov    %cx,0x4(%esp)
    cmp    %si,%cx
    jl     jump_2000d
  jump_2004c:
    mov    (%esp),%eax
    xor    %edi,%edi
    mov    0x44(%eax),%dx
    mov    %di,0x4(%esp)
    test   %dx,%dx
    jle    jump_20160
    jmp    jump_20135
  jump_20068:
    mov    %eax,%edi
  jump_2006a:
    mov    $0x1,%edx
    mov    data_104bea,%cl
    xor    %eax,%eax
    shl    %cl,%edx
    mov    0x17(%edi),%al
    mov    %edx,%ecx
    test   %edx,%eax
    je     jump_2011f
    mov    0x8(%esp),%ah
    not    %ah
    mov    0x14(%edi),%al
    mov    0x15(%edi),%bl
    and    %ah,%al
    and    %bl,%ah
    or     %ah,%al
    not    %ecx
    and    $0x7f,%al
    and    $0xff,%eax
    test   %ecx,%eax
    jne    jump_2011f
    xor    %edx,%edx
    xor    %ebx,%ebx
    jmp    jump_200b0
  jump_200af:
    inc    %ebx
  jump_200b0:
    movswl %bx,%eax
    cmp    $0x6b,%eax
    jge    jump_200fa
    cmp    data_d35e7,%dx
    jge    jump_200fa
    imul   $0x162,%eax,%ecx
    mov    data_ca245(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_200af
    inc    %edx
    cmp    data_ca24a(%ecx),%esi
    jne    jump_200af
    xor    %ecx,%ecx
    mov    data_104bea,%cl
    cmp    %ecx,%eax
    je     jump_200af
    imul   $0x1ee,%ecx,%ecx
    cmpb   $0x3,data_a3132(%ecx,%eax,1)
    je     jump_200af
  jump_200fa:
    cmp    data_d35e7,%dx
    jl     jump_2011f
    movw   $0x1,0x21(%esi)
    mov    0x354eb(%ebp),%ecx
    mov    %ebp,%eax
    inc    %ecx
    mov    %edi,%edx
    mov    %ecx,0x354eb(%ebp)
    call   func_1ffe0
  jump_2011f:
    mov    0x4(%esp),%ebx
    mov    (%esp),%ecx
    inc    %ebx
    mov    0x44(%ecx),%si
    mov    %bx,0x4(%esp)
    cmp    %si,%bx
    jge    jump_20160
  jump_20135:
    mov    0x2(%esp),%eax
    sar    $0x10,%eax
    mov    (%esp),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    0x2c(%eax),%esi
    cmpw   $0x0,0x21(%esi)
    jne    jump_2011f
    mov    (%esi),%eax
    cmp    %edx,%eax
    jne    jump_20068
    mov    0x4(%esi),%edi
    jmp    jump_2006a
  jump_20160:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2016c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ecx
    movswl %bx,%eax
    cmp    $0x18,%eax
    jl     jump_2018e
    mov    $0x7bb,%ebx
    mov    $data_90caa,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2018e:
    movswl %cx,%eax
    imul   $0x19e,%eax,%eax
    lea    0x30701(%esi),%ecx
    add    %eax,%ecx
    mov    0x18e(%ecx),%esi
    sar    $0x10,%esi
    cmp    $0x64,%esi
    jl     jump_201be
    mov    $0x7be,%ebx
    mov    $data_90cb8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_201be:
    mov    0x18e(%ecx),%esi
    sar    $0x10,%esi
    mov    %edi,(%ecx,%esi,4)
    incw   0x190(%ecx)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_201d8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x70,%esp
    mov    %eax,0x58(%esp)
    xor    %ecx,%ecx
    mov    %ecx,0x30(%esp)
    mov    %ecx,0x34(%esp)
    mov    %ecx,0x38(%esp)
    cmpw   $0x0,0x32dd1(%eax)
    jne    jump_2020e
    mov    $0x7dd,%ebx
    mov    $data_90cc6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2020e:
    mov    0x58(%esp),%eax
    mov    0x32dcf(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    je     jump_20595
    mov    0x58(%esp),%eax
    xor    %ebx,%ebx
    mov    0x32dd1(%eax),%si
    mov    %bx,0x6c(%esp)
    test   %si,%si
    jle    jump_20595
    add    $0x30701,%eax
    mov    %eax,0x48(%esp)
  jump_20248:
    mov    0x6a(%esp),%eax
    sar    $0x10,%eax
    imul   $0x19e,%eax,%eax
    mov    0x48(%esp),%esi
    add    %eax,%esi
    mov    0x58(%esp),%ebx
    mov    0x18e(%esi),%edx
    mov    0x32dd3(%ebx),%ebx
    sar    $0x10,%edx
    sar    $0x10,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    cwtl
    test   %eax,%eax
    mov    $0x1869f,%edi
    mov    $0x1869f,%ebp
    xor    %eax,%eax
    xor    %edx,%edx
    mov    %edi,0x50(%esp)
    mov    %ebp,0x54(%esp)
    mov    %eax,0x4c(%esp)
    xor    %edi,%edi
    mov    0x190(%esi),%ax
    mov    %di,0x68(%esp)
    xor    %edi,%edi
    test   %ax,%ax
    jle    jump_20310
    jmp    jump_202ba
  jump_202b0:
    inc    %edx
    cmp    0x190(%esi),%dx
    jge    jump_20310
  jump_202ba:
    movswl %dx,%eax
    mov    (%esi,%eax,4),%eax
    mov    (%eax),%ebx
    add    %ebx,%ebx
    mov    data_9652c(%ebx),%ebp
    sar    $0x10,%ebp
    mov    %ebp,0x3c(%esp)
    mov    0x42(%eax),%ebp
    sar    $0x10,%ebp
    mov    %ebp,0x64(%esp)
    mov    0x3c(%esp),%ebp
    sub    0x64(%esp),%ebp
    mov    %ebp,0x3c(%esp)
    mov    0x66(%esp),%ebp
    sar    $0x10,%ebp
    mov    %ebp,0x64(%esp)
    mov    0x3c(%esp),%ebp
    cmp    0x64(%esp),%ebp
    jle    jump_202b0
    mov    data_9652e(%ebx),%bx
    sub    0x44(%eax),%bx
    mov    %eax,%edi
    mov    %bx,0x68(%esp)
    jmp    jump_202b0
  jump_20310:
    test   %edi,%edi
    jne    jump_20325
    mov    $0x7ff,%ebx
    mov    $data_90cd4,%edx
    xor    %eax,%eax
    call   func_26198
  jump_20325:
    mov    0x58(%esp),%eax
    mov    0x32dd1(%eax),%si
    xor    %edx,%edx
    test   %si,%si
    jle    jump_20409
    lea    0x8(%edi),%esi
  jump_2033e:
    cmp    0x6c(%esp),%dx
    je     jump_203f7
    movswl %dx,%ebx
    imul   $0x19e,%ebx,%ebx
    add    0x48(%esp),%ebx
    lea    0x18(%esp),%ebp
    mov    %ebp,0x44(%esp)
    xor    %ebp,%ebp
    mov    %ebp,(%esp)
    mov    %ebp,0x4(%esp)
    mov    %ebp,0x8(%esp)
    lea    0x192(%ebx),%eax
    flds   (%esi)
    fsubs  (%eax)
    fstps  (%esp)
    flds   0x4(%esi)
    fsubs  0x4(%eax)
    fstps  0x4(%esp)
    flds   0x8(%esi)
    fsubs  0x8(%eax)
    fstps  0x8(%esp)
    mov    (%esp),%eax
    flds   0x4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x18(%esp)
    mov    0x4(%esp),%eax
    flds   (%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c(%esp)
    mov    0x8(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x20(%esp)
    flds   0x8(%esp)
    mov    (%esp),%eax
    fmuls  0x8(%esp)
    mov    %eax,0x30(%esp)
    mov    0x4(%esp),%eax
    mov    %eax,0x34(%esp)
    mov    0x8(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x38(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    0x50(%esp),%ebp
    call   func_76e98
    fistpl 0x60(%esp)
    mov    0x60(%esp),%eax
    cmp    %ebp,%eax
    jge    jump_203f7
    mov    %ebx,%ecx
    mov    %eax,0x50(%esp)
  jump_203f7:
    mov    0x58(%esp),%eax
    inc    %edx
    cmp    0x32dd1(%eax),%dx
    jl     jump_2033e
  jump_20409:
    test   %ecx,%ecx
    jne    jump_2041e
    mov    $0x813,%ebx
    mov    $data_90ce2,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2041e:
    mov    0x190(%ecx),%si
    xor    %ebx,%ebx
    test   %si,%si
    jle    jump_2052c
    lea    0x8(%edi),%esi
  jump_20433:
    movswl %bx,%eax
    mov    (%ecx,%eax,4),%edx
    mov    0x2(%edi),%eax
    sar    $0x10,%eax
    imul   $0x64,%eax,%eax
    mov    0x58(%esp),%ebp
    add    %eax,%ebp
    mov    0x2(%edx),%eax
    sar    $0x10,%eax
    add    %ebp,%eax
    cmpb   $0x0,0x32ddb(%eax)
    jne    jump_2051e
    lea    0x24(%esp),%ebp
    mov    %ebp,0x40(%esp)
    xor    %ebp,%ebp
    mov    %ebp,0xc(%esp)
    mov    %ebp,0x10(%esp)
    mov    %ebp,0x14(%esp)
    lea    0x8(%edx),%eax
    flds   (%esi)
    fsubs  (%eax)
    fstps  0xc(%esp)
    flds   0x4(%esi)
    fsubs  0x4(%eax)
    fstps  0x10(%esp)
    flds   0x8(%esi)
    fsubs  0x8(%eax)
    fstps  0x14(%esp)
    mov    0xc(%esp),%eax
    flds   0x10(%esp)
    fmul   %st(0),%st
    mov    %eax,0x24(%esp)
    mov    0x10(%esp),%eax
    flds   0xc(%esp)
    fmul   %st(0),%st
    mov    %eax,0x28(%esp)
    mov    0x14(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x2c(%esp)
    flds   0x14(%esp)
    mov    0xc(%esp),%eax
    fmuls  0x14(%esp)
    mov    %eax,0x30(%esp)
    mov    0x10(%esp),%eax
    mov    %eax,0x34(%esp)
    mov    0x14(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x38(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    (%edx),%eax
    mov    data_9652c(,%eax,2),%eax
    sar    $0x10,%eax
    call   func_76e98
    mov    %eax,0x64(%esp)
    mov    0x42(%edx),%eax
    mov    0x64(%esp),%ebp
    sar    $0x10,%eax
    fistpl 0x5c(%esp)
    sub    %eax,%ebp
    je     jump_2051e
    mov    0x5c(%esp),%eax
    cmp    0x54(%esp),%eax
    jge    jump_2051e
    mov    %edx,0x4c(%esp)
    mov    %eax,0x54(%esp)
  jump_2051e:
    inc    %ebx
    cmp    0x190(%ecx),%bx
    jl     jump_20433
  jump_2052c:
    mov    0x4c(%esp),%eax
    test   %eax,%eax
    jne    jump_20543
    mov    $0x82c,%ebx
    mov    $data_90cf0,%edx
    call   func_26198
  jump_20543:
    mov    0x4c(%esp),%edx
    mov    %edi,%eax
    call   func_1cf68
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_20563
    mov    $0x832,%ebx
    mov    $data_90cfe,%edx
    call   func_26198
  jump_20563:
    orb    $0x1,0x23(%esi)
    mov    0x18(%edi),%dl
    or     $0x1,%dl
    mov    0x4c(%esp),%eax
    mov    %dl,0x18(%edi)
    orb    $0x1,0x18(%eax)
    mov    0x6c(%esp),%edx
    inc    %edx
    mov    %dx,0x6c(%esp)
    mov    %edx,%eax
    mov    0x58(%esp),%edx
    cmp    0x32dd1(%edx),%ax
    jl     jump_20248
  jump_20595:
    add    $0x70,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_205a0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %ebx,%edi
    test   %edx,%edx
    je     jump_205b1
    test   %ebx,%ebx
    jne    jump_205c2
  jump_205b1:
    mov    $0x83f,%ebx
    mov    $data_90d0c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_205c2:
    mov    0x49c1(%ecx),%ebx
    sar    $0x10,%ebx
    cmp    $0x94,%ebx
    je     jump_2067c
    mov    0x2(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %edx,%eax
    shl    $0x2,%eax
    lea    (%ecx,%eax,1),%edx
    mov    0x2(%edi),%eax
    sar    $0x10,%eax
    cmpb   $0x0,0x32ddb(%edx,%eax,1)
    jne    jump_2067c
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    shl    $0x3,%eax
    lea    0x3337(%ecx),%edx
    sub    %ebx,%eax
    add    %eax,%edx
    movb   $0x0,0x20(%edx)
    mov    %esi,(%edx)
    mov    %edi,0x4(%edx)
    incw   0x49c3(%ecx)
    mov    0x2(%esi),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    shl    $0x2,%eax
    lea    (%ecx,%eax,1),%ebx
    mov    0x2(%edi),%eax
    sar    $0x10,%eax
    movb   $0x1,0x32ddb(%ebx,%eax,1)
    mov    0x2(%edi),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    shl    $0x2,%eax
    add    %eax,%ecx
    mov    0x2(%esi),%eax
    sar    $0x10,%eax
    movb   $0x1,0x32ddb(%ecx,%eax,1)
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2067c:
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_20684:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    movswl %dx,%eax
    test   %eax,%eax
    jl     jump_2069b
    cmp    0xd88(%ecx),%si
    jl     jump_206ac
  jump_2069b:
    mov    $0x863,%ebx
    mov    $data_90d1a,%edx
    xor    %eax,%eax
    call   func_26198
  jump_206ac:
    mov    0x30679(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0x6b,%eax
    jl     jump_206cb
    mov    $0x864,%ebx
    mov    $data_90d28,%edx
    xor    %eax,%eax
    call   func_26198
  jump_206cb:
    lea    0x27285(%ecx),%ebx
    xor    %edx,%edx
    jmp    jump_206dc
  jump_206d5:
    inc    %edx
    add    $0x162,%ebx
  jump_206dc:
    movswl %dx,%eax
    cmp    $0x6b,%eax
    jge    jump_20709
    mov    0x54(%ebx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_206d5
    mov    %ebx,%eax
    xor    %edx,%edx
    call   func_48c5c
    mov    %si,0x56(%ebx)
    mov    %ebx,%eax
    incw   0x3067b(%ecx)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_20709:
    mov    $0x873,%ebx
    mov    $data_90d36,%edx
    xor    %eax,%eax
    call   func_261a8
    xor    %eax,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_20720:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    0x54(%edx),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_2073e
    mov    0x56(%edx),%ax
    cmp    0xd88(%esi),%ax
    jl     jump_2074f
  jump_2073e:
    mov    $0x87e,%ebx
    mov    $data_90d44,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2074f:
    cmpb   $0x0,0x58(%ecx)
    jne    jump_20766
    mov    $0x87f,%ebx
    mov    $data_90d52,%edx
    xor    %eax,%eax
    call   func_26198
  jump_20766:
    movw   $0xffff,0x56(%ecx)
    movb   $0x0,0x58(%ecx)
    movb   $0x0,0x34(%ecx)
    decw   0x3067b(%esi)
    mov    0x30679(%esi),%ecx
    sar    $0x10,%ecx
    test   %ecx,%ecx
    jge    jump_20799
    mov    $0x887,%ebx
    mov    $data_90d60,%edx
    xor    %eax,%eax
    call   func_26198
  jump_20799:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_207a0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    xor    %ah,%ah
    mov    data_104bea,%dl
    mov    %ah,0x10(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    lea    0x6(%esi),%ebp
    add    %eax,%eax
    add    %eax,%ebp
    cmpl   $0xffffffff,0x3(%ebp)
    jne    jump_207d7
    movb   $0x1,0x10(%esp)
  jump_207d7:
    cmpb   $0x0,0x10(%esp)
    jne    jump_20816
    mov    $0x2,%bl
    mov    %esi,%edx
    xor    %eax,%eax
    mov    %bl,0x10(%esp)
    jmp    jump_207f1
  jump_207ea:
    add    $0x1ee,%edx
    inc    %eax
  jump_207f1:
    mov    0xd86(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_20816
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    cmp    %ebx,%eax
    je     jump_207ea
    cmpl   $0x0,0x9(%edx)
    jne    jump_207ea
    xor    %bh,%bh
    mov    %bh,0x10(%esp)
  jump_20816:
    cmpb   $0x0,0x10(%esp)
    jne    jump_20865
    mov    $0x3,%ch
    mov    %esi,%edx
    xor    %eax,%eax
    mov    %ch,0x10(%esp)
    mov    data_104bea,%cl
    jmp    jump_20836
  jump_2082f:
    add    $0x1ee,%edx
    inc    %eax
  jump_20836:
    mov    0xd86(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_20865
    mov    0xd(%edx),%ebx
    mov    0x14(%ebx),%bl
    and    $0xff,%ebx
    and    $0x7f,%bl
    mov    %ebx,%edi
    mov    $0x1,%ebx
    shl    %cl,%ebx
    cmp    %ebx,%edi
    je     jump_2082f
    xor    %al,%al
    mov    %al,0x10(%esp)
  jump_20865:
    mov    0x10(%esp),%ah
    test   %ah,%ah
    jne    jump_20901
    mov    $0x4,%dl
    mov    %ah,0xc(%esp)
    mov    %ebp,%ebx
    mov    %dl,0x10(%esp)
    xor    %eax,%eax
    mov    %esi,%edx
    xor    %edi,%edi
    jmp    jump_2088d
  jump_20885:
    add    $0x1ee,%edx
    inc    %ebx
    inc    %eax
  jump_2088d:
    mov    0xd86(%esi),%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_208cb
    cmp    0x9(%edx),%edi
    jne    jump_208ab
    mov    %al,%cl
    mov    $0x1,%ch
    shl    %cl,%ch
    mov    %ch,%cl
    or     %cl,0xc(%esp)
  jump_208ab:
    xor    %ecx,%ecx
    mov    data_104bea,%cl
    cmp    %ecx,%eax
    je     jump_20885
    cmp    0x9(%edx),%edi
    jne    jump_20885
    cmpb   $0x3,0x1c0(%ebx)
    je     jump_20885
    xor    %ch,%ch
    mov    %ch,0x10(%esp)
  jump_208cb:
    cmpb   $0x4,0x10(%esp)
    jne    jump_20901
    mov    %esi,%edx
    xor    %eax,%eax
    jmp    jump_208dc
  jump_208d8:
    add    $0x60,%edx
    inc    %eax
  jump_208dc:
    mov    0x3333(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_20901
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    0xc(%esp),%bl
    mov    0xdcc(%edx),%cl
    test   %ebx,%ecx
    jne    jump_208d8
    xor    %ah,%ah
    mov    %ah,0x10(%esp)
  jump_20901:
    cmpb   $0x0,0x10(%esp)
    jne    jump_2092f
    mov    0x3333(%esi),%edx
    sar    $0x10,%edx
    add    %edx,%edx
    mov    $0x3,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x354eb(%esi),%edi
    inc    %eax
    cmp    %edi,%eax
    jg     jump_2092f
    movb   $0x5,0x10(%esp)
  jump_2092f:
    cmpb   $0x0,0x10(%esp)
    je     jump_20b30
    mov    data_104bea,%cl
    xor    %eax,%eax
    xor    %edx,%edx
    mov    %eax,0x8(%esp)
    jmp    jump_2094e
  jump_2094a:
    add    $0x4b,%eax
    inc    %edx
  jump_2094e:
    xor    %ebx,%ebx
    mov    data_105258,%bx
    cmp    %ebx,%edx
    jge    jump_20975
    mov    data_10529f(%eax),%ebx
    mov    $0x1,%edi
    sar    $0x18,%ebx
    shl    %cl,%edi
    test   %edi,%ebx
    je     jump_2094a
    incl   0x8(%esp)
    jmp    jump_2094a
  jump_20975:
    mov    data_104bea,%bh
    mov    %esi,%ecx
    xor    %eax,%eax
    jmp    jump_20985
  jump_20981:
    add    $0x7b,%ecx
    inc    %eax
  jump_20985:
    mov    0x27281(%esi),%edx
    sar    $0x10,%edx
    cmp    %edx,%eax
    jge    jump_209a1
    cmp    0x1829e(%ecx),%bh
    jne    jump_20981
    addl   $0x2,0x8(%esp)
    jmp    jump_20981
  jump_209a1:
    mov    %ebp,%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x8(%esp),%ecx
    call   func_40224
    add    %eax,%ecx
    xor    %edx,%edx
    mov    %ecx,0x8(%esp)
    mov    %esi,%eax
    mov    data_104bea,%cl
    jmp    jump_209c6
  jump_209c2:
    add    $0x60,%eax
    inc    %edx
  jump_209c6:
    mov    0x3333(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jge    jump_209eb
    mov    $0x1,%ebx
    movzbl 0xdcc(%eax),%edi
    shl    %cl,%ebx
    test   %ebx,%edi
    je     jump_209c2
    incl   0x8(%esp)
    jmp    jump_209c2
  jump_209eb:
    mov    %esi,%ecx
    mov    %ebp,%edx
    xor    %eax,%eax
    jmp    jump_20a05
  jump_209f3:
    cmp    $0x2,%bl
    jne    jump_209fd
    subl   $0xa,0x8(%esp)
  jump_209fd:
    add    $0x1ee,%ecx
    inc    %edx
    inc    %eax
  jump_20a05:
    mov    0xd86(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_20a36
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    cmp    %ebx,%eax
    je     jump_209fd
    cmpl   $0xffffffff,0x9(%ecx)
    je     jump_209fd
    mov    0x1c0(%edx),%bl
    cmp    $0x3,%bl
    jne    jump_209f3
    addl   $0xf,0x8(%esp)
    jmp    jump_209fd
  jump_20a36:
    cmpb   $0x4,0x10(%esp)
    jne    jump_20a42
    addl   $0x32,0x8(%esp)
  jump_20a42:
    mov    (%esi),%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0xfa0,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    $0x64,%edx
    sub    %eax,%edx
    mov    %edx,%eax
    cmp    $0x19,%edx
    jge    jump_20a75
    mov    $0x19,%eax
    jmp    jump_20a7f
  jump_20a75:
    cmp    $0x64,%edx
    jle    jump_20a7f
    mov    $0x64,%eax
  jump_20a7f:
    mov    0x8(%esp),%edx
    imul   %eax,%edx
    mov    $0x64,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0xdb4(%esi),%ch
    mov    %eax,0x8(%esp)
    cmp    $0x1,%ch
    jne    jump_20aaf
    fildl  0x8(%esp)
    fld    %st(0)
    fmull  data_90d76
    jmp    jump_20ac0
  jump_20aaf:
    cmp    $0x2,%ch
    jne    jump_20acb
    fildl  0x8(%esp)
    fld    %st(0)
    fmull  data_90d6e
  jump_20ac0:
    fstp   %st(1)
    call   func_76e98
    fistpl 0x8(%esp)
  jump_20acb:
    cmpl   $0x0,0x8(%esp)
    jge    jump_20ad8
    xor    %ebp,%ebp
    mov    %ebp,0x8(%esp)
  jump_20ad8:
    mov    0x8(%esp),%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %eax,%edx
    shl    $0x2,%edx
    mov    $0x258,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    $0x1,%ecx
    mov    %eax,0x8(%esp)
    mov    0x10(%esp),%al
    mov    $0x9,%ebx
    mov    %al,0x30700(%esi)
    mov    0x8(%esp),%eax
    xor    %edx,%edx
    mov    %eax,0x306fc(%esi)
    mov    $data_10ae70,%eax
    mov    %dx,data_10f5ca
    mov    %ecx,%edx
    call   func_56b60
  jump_20b30:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_20b3c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1b4,%esp
    mov    %eax,%ebp
    mov    data_104bea,%cl
    xor    %ebx,%ebx
    mov    %cl,%bl
    mov    %ebx,%edx
    shl    $0x5,%edx
    mov    $0x1,%al
    sub    %ebx,%edx
    shl    %cl,%al
    shl    $0x3,%edx
    mov    %al,0x1b0(%esp)
    sub    %ebx,%edx
    mov    $data_a2f72,%eax
    add    %edx,%edx
    add    %edx,%eax
    mov    $0xffffffff,%edx
    lea    0xdb5(%ebp),%esi
    call   func_43374
    mov    %al,0x1ac(%esp)
    mov    %ebp,%eax
    mov    0x2(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_20bbb
    mov    %ebp,%edx
    mov    0x3335(%edx),%bx
    xor    %eax,%eax
    test   %bx,%bx
    jle    jump_20bbb
  jump_20ba7:
    movswl %ax,%edx
    andb   $0xfe,data_d8460(%edx)
    inc    %eax
    cmp    0x3335(%ebp),%ax
    jl     jump_20ba7
  jump_20bbb:
    mov    0x3335(%ebp),%dx
    xor    %edi,%edi
    test   %dx,%dx
    jg     jump_20be2
    jmp    jump_20c82
  jump_20bce:
    inc    %edi
    mov    0x3335(%ebp),%bx
    add    $0x60,%esi
    cmp    %bx,%di
    jge    jump_20c82
  jump_20be2:
    movswl %di,%edx
    mov    data_d8460(%edx),%al
    xor    %ebx,%ebx
    and    $0x1,%al
    mov    %al,%bl
    test   %ebx,%ebx
    jne    jump_20bce
    orb    $0x1,data_d8460(%edx)
    mov    0x15(%esi),%al
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x1b0(%esp),%bl
    mov    %al,%dl
    test   %ebx,%edx
    je     jump_20bce
    xor    %ebx,%ebx
    mov    0x1ac(%esp),%bl
    test   %ebx,%edx
    je     jump_20bce
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_1d794
    mov    %eax,%ecx
    xor    %eax,%eax
    jmp    jump_20c2d
  jump_20c2c:
    inc    %eax
  jump_20c2d:
    movswl %ax,%edx
    cmp    %ecx,%edx
    jge    jump_20bce
    mov    (%esp,%edx,4),%edx
    xor    %ebx,%ebx
    mov    0x54(%edx),%edx
    mov    data_104bea,%bl
    sar    $0x10,%edx
    cmp    %ebx,%edx
    je     jump_20c59
    imul   $0x1ee,%ebx,%ebx
    cmpb   $0x2,data_a3132(%edx,%ebx,1)
    jne    jump_20c2c
  jump_20c59:
    movswl %ax,%edx
    mov    (%esp,%edx,4),%edx
    cmpl   $0x0,0x88(%edx)
    jle    jump_20c2c
    mov    0x4(%ebp),%cx
    inc    %ecx
    mov    %esi,%edx
    mov    %cx,0x4(%ebp)
    mov    %edx,%eax
    add    $0x1b4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_20c82:
    xor    %edx,%edx
    mov    %edx,%eax
    add    $0x1b4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_20c94:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c0,%esp
    mov    %eax,%ebp
    cmpl   $0xffffffff,data_a0d00
    jne    jump_20d73
    cmpl   $0x1388,(%eax)
    jl     jump_20d73
    call   func_782df
    mov    %eax,%edx
    mov    $0x15,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    call   func_782df
    movswl %dx,%ecx
    mov    %eax,%edx
    mov    $0x5,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x3,%edx
    call   func_782df
    movswl %dx,%ebx
    mov    %eax,%edx
    mov    $0x4c,%esi
    sar    $0x1f,%edx
    idiv   %esi
    add    $0x19,%edx
    mov    %ebp,%eax
    movswl %dx,%edx
    call   func_1e10c
    mov    %ebp,%eax
    call   func_1f038
    mov    %ebp,%eax
    call   func_1f404
    mov    %ebp,%eax
    call   func_1eea4
    call   func_782df
    mov    %eax,%edx
    mov    $0x6,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    xor    %ecx,%ecx
    movswl %dx,%edx
    mov    %ebp,%eax
    mov    $0x1,%ebx
    call   func_1ee08
    mov    $data_90d7e,%edx
    mov    $data_10ae70,%eax
    movl   $0x0,0x0(%ebp)
    call   func_56e18
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_20d66
    mov    $0x9b7,%ebx
    mov    $data_90d8b,%edx
    call   func_26198
  jump_20d66:
    mov    0xa7(%ecx),%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_20d73:
    mov    $0x64,%ebx
    mov    $data_d8460,%eax
    xor    %edx,%edx
    movw   $0x0,0x4(%ebp)
    call   func_76ec0
    mov    %ebp,%eax
    call   func_21170
    mov    %ebp,%eax
    call   func_21314
    mov    $data_105258,%eax
    xor    %edx,%edx
    call   func_466fc
    lea    0x18247(%ebp),%esi
    jmp    jump_20db7
  jump_20dac:
    mov    %esi,%eax
    call   func_352e0
    inc    %edx
    add    $0x7b,%esi
  jump_20db7:
    mov    0x27281(%ebp),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jl     jump_20dac
    mov    %ebp,%eax
    call   func_2106c
    xor    %edx,%edx
    lea    0x6(%ebp),%esi
    jmp    jump_20dd9
  jump_20dd2:
    add    $0x1ee,%esi
    inc    %edx
  jump_20dd9:
    mov    0xd86(%ebp),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jge    jump_20dfa
    xor    %eax,%eax
    mov    data_104bea,%al
    cmp    %eax,%edx
    je     jump_20dd2
    mov    %esi,%eax
    call   func_3b220
    jmp    jump_20dd2
  jump_20dfa:
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    $data_a2f72,%eax
    call   func_3b220
    cmpl   $0xffffffff,data_a0cfc
    jne    jump_20fba
    mov    $data_90d99,%edx
    mov    $data_90d9c,%eax
    mov    $data_a3d21,%esi
    call   func_77f5e
    mov    data_a62a1,%bx
    xor    %edx,%edx
    mov    %eax,0x1ac(%esp)
    mov    %edx,0x1bc(%esp)
    test   %bx,%bx
    jle    jump_20fae
    lea    0x1c(%esi),%eax
    mov    %eax,0x1b0(%esp)
  jump_20e65:
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_1d794
    mov    %eax,%ebx
    mov    data_a3cf4,%ax
    xor    %edx,%edx
    test   %ax,%ax
    jle    jump_20f36
    mov    0x1b0(%esp),%eax
    mov    %eax,0x1b8(%esp)
  jump_20e8f:
    mov    $0x1,%eax
    movswl %dx,%ecx
    movzbl 0x15(%esi),%edi
    shl    %cl,%eax
    test   %eax,%edi
    je     jump_20eda
    xor    %ecx,%ecx
    jmp    jump_20eea
  jump_20ea5:
    mov    0x1bc(%esp),%ecx
    mov    0x1b0(%esp),%edi
    add    $0x60,%esi
    add    $0x60,%edi
    inc    %ecx
    mov    %edi,0x1b0(%esp)
    mov    data_a62a1,%di
    mov    %ecx,0x1bc(%esp)
    cmp    %di,%cx
    jge    jump_20fae
    jmp    jump_20e65
  jump_20eda:
    mov    data_a3cf4,%cx
    inc    %edx
    cmp    %cx,%dx
    jge    jump_20f36
    jmp    jump_20e8f
  jump_20ee9:
    inc    %ecx
  jump_20eea:
    movswl %cx,%eax
    cmp    %ebx,%eax
    jge    jump_20efa
    mov    (%esp,%eax,4),%eax
    cmp    0x56(%eax),%dx
    jne    jump_20ee9
  jump_20efa:
    movswl %cx,%eax
    cmp    %ebx,%eax
    jl     jump_20eda
    movswl %dx,%eax
    push   %eax
    xor    %eax,%eax
    mov    0x15(%esi),%al
    push   %eax
    incw   data_d845c
    mov    0x1c0(%esp),%eax
    push   %eax
    mov    0x0(%ebp),%eax
    inc    %eax
    push   %eax
    push   $data_90da9
    mov    0x1c0(%esp),%ecx
    push   %ecx
    call   func_786ea
    add    $0x18,%esp
    jmp    jump_20eda
  jump_20f36:
    mov    0x1b0(%esp),%eax
    xor    %edx,%edx
    mov    %eax,0x1b4(%esp)
    jmp    jump_20f49
  jump_20f48:
    inc    %edx
  jump_20f49:
    movswl %dx,%eax
    cmp    %ebx,%eax
    jge    jump_20ea5
    mov    (%esp,%eax,4),%eax
    cmpb   $0x1,0x58(%eax)
    je     jump_20f48
    mov    0x54(%eax),%ecx
    mov    $0x1,%edi
    sar    $0x10,%ecx
    shl    %cl,%edi
    xor    %ecx,%ecx
    mov    0x15(%esi),%cl
    test   %edi,%ecx
    jne    jump_20f48
    push   %ecx
    mov    0x1b8(%esp),%ecx
    mov    0x54(%eax),%eax
    push   %ecx
    sar    $0x10,%eax
    push   %eax
    mov    0x0(%ebp),%eax
    inc    %eax
    mov    data_d845c,%di
    push   %eax
    inc    %edi
    push   $data_90dde
    mov    %di,data_d845c
    mov    0x1c0(%esp),%edi
    push   %edi
    call   func_786ea
    add    $0x18,%esp
    jmp    jump_20f48
  jump_20fae:
    mov    0x1ac(%esp),%eax
    call   func_7744e
  jump_20fba:
    mov    data_a792f,%bx
    lea    0x3337(%ebp),%edx
    xor    %eax,%eax
    test   %bx,%bx
    jle    jump_20fe4
  jump_20fce:
    movw   $0x0,0x21(%edx)
    inc    %eax
    mov    data_a792f,%cx
    add    $0x27,%edx
    cmp    %cx,%ax
    jl     jump_20fce
  jump_20fe4:
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    mov    data_a2f79(%eax),%edx
    mov    0x14(%edx),%dl
    mov    $0x1,%ebx
    mov    data_104bea,%cl
    and    $0xff,%edx
    shl    %cl,%ebx
    test   %ebx,%edx
    je     jump_21033
    movl   $0x1,0x354eb(%ebp)
    mov    data_a2f79(%eax),%edx
    mov    %ebp,%eax
    call   func_1ffe0
    jmp    jump_2103d
  jump_21033:
    movl   $0x0,0x354eb(%ebp)
  jump_2103d:
    mov    0x0(%ebp),%esi
    inc    %esi
    mov    0x30700(%ebp),%ch
    mov    %esi,0x0(%ebp)
    test   %ch,%ch
    jne    jump_2105e
    cmpl   $0x0,data_a0d00
    jne    jump_2105e
    mov    %ebp,%eax
    call   func_207a0
  jump_2105e:
    add    $0x1c0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2106c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%edi
    mov    data_a3cf4,%dx
    xor    %esi,%esi
    test   %dx,%dx
    jle    jump_210c9
  jump_21085:
    movswl %si,%ebp
    imul   $0x1ee,%ebp,%ecx
    mov    %esp,%ebx
    add    $data_a2f72,%ecx
    xor    %edx,%edx
    mov    %ecx,%eax
    call   func_40224
    imul   $0x6,%ebp,%edx
    mov    %eax,(%esp)
    mov    (%esp),%eax
    mov    %ax,0xd8c(%edx,%edi,1)
    mov    %ecx,%eax
    call   func_402e0
    mov    %ax,0xd8e(%edx,%edi,1)
    inc    %esi
    cmp    data_a3cf4,%si
    jl     jump_21085
  jump_210c9:
    mov    data_a3cf4,%cx
    xor    %esi,%esi
    test   %cx,%cx
    jle    jump_21163
    jmp    jump_210f9
  jump_210dd:
    movswl %si,%eax
    imul   $0x6,%eax,%eax
    mov    %bx,0xd8a(%edi,%eax,1)
    inc    %esi
    cmp    data_a3cf4,%si
    jge    jump_21163
  jump_210f9:
    movswl %si,%eax
    imul   $0x6,%eax,%eax
    lea    (%edi,%eax,1),%edx
    mov    0xd8c(%edx),%ax
    add    0xd8e(%edx),%ax
    mov    data_a3cf4,%cx
    mov    %ax,0x4(%esp)
    xor    %ebx,%ebx
    xor    %eax,%eax
    test   %cx,%cx
    jle    jump_210dd
    jmp    jump_21134
  jump_21127:
    mov    data_a3cf4,%dx
    inc    %eax
    cmp    %dx,%ax
    jge    jump_210dd
  jump_21134:
    cmp    %ax,%si
    je     jump_21127
    movswl %ax,%edx
    imul   $0x6,%edx,%edx
    mov    0xd8a(%edx,%edi,1),%ecx
    mov    0xd8c(%edx,%edi,1),%edx
    sar    $0x10,%ecx
    sar    $0x10,%edx
    add    %ecx,%edx
    mov    0x2(%esp),%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%edx
    jle    jump_21127
    inc    %ebx
    jmp    jump_21127
  jump_21163:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_21170:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%edi
    lea    0xdb5(%eax),%esi
    mov    data_104bea,%cl
    mov    $0x1,%al
    shl    %cl,%al
    mov    0x3335(%edi),%dx
    mov    %al,(%esp)
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_211e1
    jmp    jump_211ad
  jump_2119d:
    inc    %ecx
    mov    0x3335(%edi),%bx
    add    $0x60,%esi
    cmp    %bx,%cx
    jge    jump_211e1
  jump_211ad:
    mov    0x15(%esi),%al
    xor    %ebx,%ebx
    mov    0x14(%esi),%ah
    xor    %edx,%edx
    or     %ah,%al
    mov    (%esp),%bl
    mov    %al,%dl
    movl   $0x0,0x5c(%esi)
    test   %edx,%ebx
    jne    jump_2119d
    test   %al,%al
    je     jump_211d8
    mov    %esi,%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_211ec
  jump_211d8:
    movl   $0xffffffff,0x5c(%esi)
    jmp    jump_2119d
  jump_211e1:
    add    $0x4,%esp
  jump_211e4:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_211ec:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,%edx
    mov    data_a0d00,%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_21206
    mov    %ebx,%edx
  jump_21206:
    mov    0xd88(%ebp),%cx
    xor    %ebx,%ebx
    xor    %eax,%eax
    mov    %bx,0x18(%esp)
    test   %cx,%cx
    jle    jump_2126e
    jmp    jump_21227
  jump_2121d:
    inc    %eax
    cmp    0xd88(%ebp),%ax
    jge    jump_2126e
  jump_21227:
    test   %edx,%edx
    jne    jump_2123a
    xor    %ebx,%ebx
    movswl %ax,%edi
    mov    data_104bea,%bl
    cmp    %ebx,%edi
    je     jump_2121d
  jump_2123a:
    mov    $0x1,%bh
    mov    %al,%cl
    shl    %cl,%bh
    mov    0x15(%esi),%bl
    mov    0x14(%esi),%cl
    or     %bl,%cl
    mov    %bh,%bl
    and    $0xff,%ebx
    movzbl %cl,%edi
    test   %edi,%ebx
    je     jump_2121d
    mov    0x18(%esp),%edi
    mov    0x16(%esp),%ebx
    inc    %edi
    sar    $0x10,%ebx
    mov    %di,0x18(%esp)
    mov    %ax,(%esp,%ebx,2)
    jmp    jump_2121d
  jump_2126e:
    mov    0x16(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_21299
    add    $0x6,%ebp
  jump_2127c:
    mov    0x18(%esp),%eax
    xor    %edi,%edi
    xor    %ecx,%ecx
    test   %ax,%ax
    jle    jump_21295
    jmp    jump_212a1
  jump_2128b:
    mov    0x18(%esp),%edx
    inc    %ecx
    cmp    %dx,%cx
    jl     jump_212a1
  jump_21295:
    test   %edi,%edi
    jne    jump_2127c
  jump_21299:
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_212a1:
    xor    %al,%al
    mov    %al,0x10(%esp)
    movswl %cx,%eax
    mov    -0x2(%esp,%eax,2),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    lea    0x10(%esp),%ebx
    mov    %esi,%edx
    add    %ebp,%eax
    call   func_406c4
    or     %eax,%edi
    mov    0x10(%esp),%ah
    test   %ah,%ah
    jne    jump_212f0
    jmp    jump_2128b
  jump_212d0:
    mov    $0x1,%edx
    mov    0x11(%esp),%eax
    call   func_49b3c
    jmp    jump_2128b
  jump_212e0:
    mov    $0x1,%edx
    mov    0x11(%esp),%eax
    call   func_3676c
    jmp    jump_2128b
  jump_212f0:
    cmp    $0x2,%ah
    jb     jump_212fc
    jbe    jump_212e0
    cmp    $0x3,%ah
    je     jump_212d0
  jump_212fc:
    mov    $0xae2,%ebx
    mov    $data_90e1c,%edx
    xor    %eax,%eax
    call   func_261a8
    jmp    jump_2128b


/*----------------------------------------------------------------*/
func_21314:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%esi
    lea    0xdb5(%eax),%ecx
    mov    0x3335(%eax),%dx
    xor    %edi,%edi
    test   %dx,%dx
    jle    jump_211e4
    jmp    jump_21349
  jump_21335:
    inc    %edi
    mov    0x3335(%esi),%bx
    add    $0x60,%ecx
    cmp    %bx,%di
    jge    jump_211e4
  jump_21349:
    cmpl   $0xffffffff,0x5c(%ecx)
    je     jump_21335
    xor    %eax,%eax
    xor    %edx,%edx
    mov    0x15(%ecx),%al
    mov    0x14(%ecx),%dl
    or     %edx,%eax
    je     jump_2136b
    mov    $0xffffffff,%ebx
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_211ec
  jump_2136b:
    movl   $0xffffffff,0x5c(%ecx)
    jmp    jump_21335


/*----------------------------------------------------------------*/
func_21374:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x238,%esp
    mov    %eax,0x1e8(%esp)
    mov    %edx,%ebp
    mov    $0x1d72,%edx
    mov    $0x60,%ebx
    mov    $0x7b,%ecx
    mov    $0x1ee,%esi
    mov    $0x27,%edi
    mov    $0x19e,%eax
    mov    %edx,0x1c8(%esp)
    mov    %ebx,0x1cc(%esp)
    mov    %ecx,0x1d0(%esp)
    mov    %esi,0x1d4(%esp)
    mov    %eax,0x1dc(%esp)
    mov    $0xd,%edx
    mov    $0x354ef,%ebx
    mov    %ebp,%eax
    mov    %edx,0x1e0(%esp)
    mov    %ebx,0x1e4(%esp)
    mov    $0x20,%ebx
    lea    0x1c8(%esp),%edx
    mov    %edi,0x1d8(%esp)
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    $0x4,%ebx
    mov    (%eax),%eax
    lea    0x1ec(%esp),%edx
    mov    %eax,0x1ec(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x306f4(%eax),%eax
    mov    0x2(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x1f0(%esp),%edx
    mov    %eax,0x1f0(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%edx
    mov    0x1e8(%esp),%eax
    add    $0x18247,%edx
    mov    0x306f8(%eax),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    mov    $0x4,%ebx
    lea    0x1f4(%esp),%edx
    mov    %eax,0x1f4(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x306fd(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x18,%eax
    lea    0x1f8(%esp),%edx
    mov    %eax,0x1f8(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    $0x4,%ebx
    mov    0x306fc(%eax),%eax
    lea    0x1fc(%esp),%edx
    mov    %eax,0x1fc(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    $0x4,%ebx
    mov    data_105248,%eax
    lea    0x200(%esp),%edx
    mov    %eax,0x200(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    $0x4,%ebx
    mov    data_10524c,%eax
    lea    0x204(%esp),%edx
    mov    %eax,0x204(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    $0x4,%ebx
    mov    data_105250,%eax
    lea    0x208(%esp),%edx
    mov    %eax,0x208(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    $data_105258,%eax
    mov    %ebp,%edx
    xor    %ebx,%ebx
    call   func_46bb0
    mov    0x1e8(%esp),%eax
    mov    0x3333(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x20c(%esp),%edx
    mov    %eax,0x20c(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x3335(%eax),%dx
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_215ab
    lea    0xdb5(%eax),%esi
  jump_21589:
    movswl %cx,%eax
    imul   $0x60,%eax,%eax
    mov    %ebp,%edx
    xor    %ebx,%ebx
    add    %esi,%eax
    call   func_1d920
    mov    0x1e8(%esp),%eax
    inc    %ecx
    cmp    0x3335(%eax),%cx
    jl     jump_21589
  jump_215ab:
    mov    0x1e8(%esp),%eax
    mov    0x18243(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x210(%esp),%edx
    mov    %eax,0x210(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%ebx
    mov    0x1e8(%esp),%edx
    mov    0x18243(%ebx),%ebx
    mov    %ebp,%eax
    sar    $0x10,%ebx
    add    $0x49c5,%edx
    shl    $0x2,%ebx
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x27281(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x214(%esp),%edx
    mov    %eax,0x214(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x27283(%eax),%si
    xor    %ecx,%ecx
    test   %si,%si
    jle    jump_21663
    lea    0x18247(%eax),%esi
  jump_21641:
    movswl %cx,%eax
    imul   $0x7b,%eax,%eax
    mov    %ebp,%edx
    xor    %ebx,%ebx
    add    %esi,%eax
    call   func_370b8
    mov    0x1e8(%esp),%eax
    inc    %ecx
    cmp    0x27283(%eax),%cx
    jl     jump_21641
  jump_21663:
    mov    0x1e8(%esp),%eax
    mov    $0x4,%ebx
    lea    0x218(%esp),%edx
    mov    0x1e8(%esp),%edi
    mov    0x30679(%eax),%eax
    xor    %esi,%esi
    sar    $0x10,%eax
    xor    %ecx,%ecx
    mov    %eax,0x218(%esp)
    mov    %ebp,%eax
    add    $0x27285,%edi
    call   func_1c098
    jmp    jump_216a1
  jump_216a0:
    inc    %ecx
  jump_216a1:
    movswl %cx,%eax
    cmp    $0x6b,%eax
    jge    jump_21712
    imul   $0x162,%eax,%eax
    add    0x1e8(%esp),%eax
    mov    0x272d9(%eax),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_216a0
    cmpb   $0x0,0x272dd(%eax)
    jne    jump_216de
    mov    $0xb57,%ebx
    mov    $data_90e2a,%edx
    xor    %eax,%eax
    call   func_26198
  jump_216de:
    mov    $0x4,%ebx
    movswl %cx,%eax
    lea    0x21c(%esp),%edx
    mov    %eax,0x21c(%esp)
    mov    %ebp,%eax
    call   func_1c098
    movswl %cx,%eax
    imul   $0x162,%eax,%eax
    mov    %ebp,%edx
    xor    %ebx,%ebx
    add    %edi,%eax
    inc    %esi
    call   func_4ae8c
    jmp    jump_216a0
  jump_21712:
    mov    0x1e8(%esp),%eax
    cmp    0x3067b(%eax),%si
    je     jump_21733
    mov    $0xb65,%ebx
    mov    $data_90e38,%edx
    xor    %eax,%eax
    call   func_26198
  jump_21733:
    mov    0x1e8(%esp),%eax
    mov    0xd86(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x220(%esp),%edx
    mov    %eax,0x220(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0xd88(%eax),%bx
    xor    %ecx,%ecx
    test   %bx,%bx
    jle    jump_2179a
    lea    0x6(%eax),%esi
  jump_21775:
    movswl %cx,%eax
    imul   $0x1ee,%eax,%eax
    mov    %ebp,%edx
    xor    %ebx,%ebx
    add    %esi,%eax
    call   func_43bdc
    mov    0x1e8(%esp),%eax
    inc    %ecx
    cmp    0xd88(%eax),%cx
    jl     jump_21775
  jump_2179a:
    mov    0x1e8(%esp),%eax
    mov    0x49c1(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x224(%esp),%edx
    mov    %eax,0x224(%esp)
    mov    %ebp,%eax
    call   func_1c098
    lea    0x1a0(%esp),%eax
    add    $0x8,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    mov    0x1e8(%esp),%eax
    mov    0x49c3(%eax),%dx
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_218e3
    lea    0x3337(%eax),%esi
  jump_21818:
    movswl %cx,%edx
    imul   $0x27,%edx,%edx
    add    %esi,%edx
    mov    (%edx),%eax
    mov    %eax,0x1a0(%esp)
    mov    0x4(%edx),%eax
    lea    0x8(%edx),%ebx
    mov    %eax,0x1a4(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x1a8(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x1ac(%esp)
    mov    0x8(%ebx),%eax
    lea    0x14(%edx),%ebx
    mov    %eax,0x1b0(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x1b4(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x1b8(%esp)
    mov    0x8(%ebx),%eax
    mov    %eax,0x1bc(%esp)
    mov    0x20(%edx),%al
    mov    %al,0x1c0(%esp)
    mov    0x21(%edx),%ax
    mov    %ax,0x1c1(%esp)
    mov    0x23(%edx),%eax
    mov    %eax,0x1c3(%esp)
    mov    0x1a0(%esp),%eax
    mov    0x2(%eax),%eax
    sar    $0x10,%eax
    mov    %eax,0x1a0(%esp)
    mov    0x1a4(%esp),%eax
    mov    0x2(%eax),%eax
    mov    $0x27,%ebx
    sar    $0x10,%eax
    lea    0x1a0(%esp),%edx
    mov    %eax,0x1a4(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    inc    %ecx
    cmp    0x49c3(%eax),%cx
    jl     jump_21818
  jump_218e3:
    mov    0x1e8(%esp),%edx
    mov    $0x2710,%ebx
    mov    %ebp,%eax
    add    $0x32ddb,%edx
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x32dcf(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x228(%esp),%edx
    mov    %eax,0x228(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    %esp,%eax
    add    $0x192,%eax
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    mov    0x1e8(%esp),%eax
    xor    %ecx,%ecx
    mov    0x32dd1(%eax),%si
    mov    %cx,0x234(%esp)
    test   %si,%si
    jle    jump_21a28
    add    $0x30701,%eax
    mov    %eax,0x230(%esp)
  jump_2196e:
    mov    0x232(%esp),%edx
    sar    $0x10,%edx
    imul   $0x19e,%edx,%edx
    mov    0x230(%esp),%ebx
    mov    $0x64,%ecx
    add    %ebx,%edx
    mov    %esp,%edi
    mov    %edx,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x190(%edx),%ax
    mov    %ax,0x190(%esp)
    mov    0x192(%edx),%eax
    mov    %eax,0x192(%esp)
    mov    0x196(%edx),%eax
    add    $0x192,%edx
    mov    %eax,0x196(%esp)
    mov    0x8(%edx),%eax
    mov    0x190(%esp),%edi
    mov    %eax,0x19a(%esp)
    xor    %eax,%eax
    test   %di,%di
    jle    jump_219f3
  jump_219d9:
    movswl %ax,%edx
    mov    (%esp,%edx,4),%ebx
    mov    0x2(%ebx),%ebx
    sar    $0x10,%ebx
    mov    %ebx,(%esp,%edx,4)
    inc    %eax
    cmp    0x190(%esp),%ax
    jl     jump_219d9
  jump_219f3:
    mov    $0x19e,%ebx
    mov    %esp,%edx
    mov    %ebp,%eax
    mov    0x234(%esp),%edi
    call   func_1c098
    mov    0x1e8(%esp),%edx
    inc    %edi
    mov    0x32dd1(%edx),%bx
    mov    %di,0x234(%esp)
    cmp    %bx,%di
    jl     jump_2196e
  jump_21a28:
    mov    0x1e8(%esp),%eax
    mov    0x306f0(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x22c(%esp),%edx
    mov    %eax,0x22c(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x306f2(%eax),%si
    xor    %ecx,%ecx
    test   %si,%si
    jle    jump_21a93
    lea    0x3067d(%eax),%esi
  jump_21a6d:
    movswl %cx,%eax
    imul   $0xd,%eax,%eax
    mov    $0xd,%ebx
    lea    (%esi,%eax,1),%edx
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    inc    %ecx
    cmp    0x306f2(%eax),%cx
    jl     jump_21a6d
  jump_21a93:
    add    $0x238,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_21aa0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1e0,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    $0x20,%ebx
    lea    0x1a0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    cmpl   $0x1d72,0x1a0(%esp)
    je     jump_21ae0
    mov    $0xbaa,%ebx
    mov    $data_90e46,%edx
    xor    %eax,%eax
    call   func_26198
  jump_21ae0:
    cmpl   $0x60,0x1a4(%esp)
    je     jump_21afb
    mov    $0xbab,%ebx
    mov    $data_90e54,%edx
    xor    %eax,%eax
    call   func_26198
  jump_21afb:
    cmpl   $0x7b,0x1a8(%esp)
    je     jump_21b16
    mov    $0xbac,%ebx
    mov    $data_90e62,%edx
    xor    %eax,%eax
    call   func_26198
  jump_21b16:
    cmpl   $0x1ee,0x1ac(%esp)
    je     jump_21b34
    mov    $0xbad,%ebx
    mov    $data_90e70,%edx
    xor    %eax,%eax
    call   func_26198
  jump_21b34:
    cmpl   $0x27,0x1b0(%esp)
    je     jump_21b4f
    mov    $0xbae,%ebx
    mov    $data_90e7e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_21b4f:
    cmpl   $0x19e,0x1b4(%esp)
    je     jump_21b6d
    mov    $0xbaf,%ebx
    mov    $data_90e8c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_21b6d:
    cmpl   $0xd,0x1b8(%esp)
    je     jump_21b88
    mov    $0xbb0,%ebx
    mov    $data_90e9a,%edx
    xor    %eax,%eax
    call   func_26198
  jump_21b88:
    cmpl   $0x354ef,0x1bc(%esp)
    je     jump_21ba6
    mov    $0xbb1,%ebx
    mov    $data_90ea8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_21ba6:
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %eax,(%edi)
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    lea    0xdb5(%edi),%ebp
    shl    $0x5,%eax
    mov    $0x4,%ebx
    lea    (%eax,%ebp,1),%edx
    mov    %esi,%eax
    mov    %edx,0x306f4(%edi)
    lea    0x1c0(%esp),%edx
    call   func_1bf94
    mov    0x1c0(%esp),%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    sub    %edx,%eax
    lea    0x18247(%edi),%edx
    mov    $0x4,%ebx
    add    %eax,%edx
    mov    %esi,%eax
    mov    %edx,0x306f8(%edi)
    lea    0x1c0(%esp),%edx
    call   func_1bf94
    mov    0x1c0(%esp),%al
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %al,0x30700(%edi)
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %eax,0x306fc(%edi)
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %eax,data_105248
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %eax,data_10524c
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    $0xffffffff,%ebx
    mov    %esi,%edx
    mov    %eax,data_105250
    mov    $data_105258,%eax
    call   func_46bb0
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    xor    %ecx,%ecx
    mov    %ax,0x3335(%edi)
    test   %ax,%ax
    jle    jump_21d1f
  jump_21d01:
    movswl %cx,%eax
    imul   $0x60,%eax,%eax
    mov    $0xffffffff,%ebx
    mov    %esi,%edx
    add    %ebp,%eax
    inc    %ecx
    call   func_1d920
    cmp    0x3335(%edi),%cx
    jl     jump_21d01
  jump_21d1f:
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    %ax,0x18245(%edi)
    lea    0x49c5(%edi),%ebp
    mov    0x18243(%edi),%ebx
    mov    %ebp,%edx
    sar    $0x10,%ebx
    mov    %esi,%eax
    shl    $0x2,%ebx
    call   func_1bf94
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    xor    %ecx,%ecx
    mov    %ax,0x27283(%edi)
    test   %ax,%ax
    jle    jump_21de6
    lea    0x18247(%edi),%eax
    mov    %eax,0x1cc(%esp)
  jump_21d90:
    movswl %cx,%eax
    imul   $0x7b,%eax,%eax
    mov    %eax,0x1c4(%esp)
    mov    0x1cc(%esp),%eax
    mov    0x1c4(%esp),%edx
    mov    $0xffffffff,%ebx
    add    %edx,%eax
    mov    %esi,%edx
    call   func_370b8
    mov    0x1c4(%esp),%eax
    mov    %ebp,0x18257(%edi,%eax,1)
    mov    0x18261(%edi,%eax,1),%ax
    and    $0xffff,%eax
    inc    %ecx
    shl    $0x2,%eax
    mov    0x27283(%edi),%dx
    add    %eax,%ebp
    cmp    %dx,%cx
    jl     jump_21d90
  jump_21de6:
    xor    %eax,%eax
    jmp    jump_21e03
  jump_21dea:
    imul   $0x162,%edx,%edx
    movw   $0xffff,0x272db(%edx,%edi,1)
    inc    %eax
    movb   $0x0,0x272dd(%edx,%edi,1)
  jump_21e03:
    movswl %ax,%edx
    cmp    $0x6b,%edx
    jl     jump_21dea
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    lea    0x27285(%edi),%ebp
    mov    0x1c0(%esp),%eax
    xor    %ecx,%ecx
    mov    %ax,0x3067b(%edi)
    jmp    jump_21e37
  jump_21e36:
    inc    %ecx
  jump_21e37:
    movswl %cx,%eax
    cmp    $0x6b,%eax
    jge    jump_21e76
    cmp    0x3067b(%edi),%cx
    jge    jump_21e36
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    imul   $0x162,0x1c0(%esp),%eax
    mov    %esi,%edx
    mov    $0xffffffff,%ebx
    add    %ebp,%eax
    call   func_4ae8c
    jmp    jump_21e36
  jump_21e76:
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    xor    %ecx,%ecx
    mov    %ax,0xd88(%edi)
    test   %ax,%ax
    jle    jump_21ec2
    lea    0x6(%edi),%ebp
  jump_21ea1:
    movswl %cx,%eax
    imul   $0x1ee,%eax,%eax
    mov    $0xffffffff,%ebx
    mov    %esi,%edx
    add    %ebp,%eax
    inc    %ecx
    call   func_43bdc
    cmp    0xd88(%edi),%cx
    jl     jump_21ea1
  jump_21ec2:
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    xor    %ebx,%ebx
    mov    0x1c0(%esp),%eax
    mov    %bx,0x1d8(%esp)
    mov    %ax,0x49c3(%edi)
    test   %ax,%ax
    jle    jump_21fb5
    lea    0x3337(%edi),%eax
    mov    %eax,0x1d0(%esp)
    lea    0xdb5(%edi),%eax
    mov    %eax,0x1c8(%esp)
  jump_21f10:
    mov    0x1d6(%esp),%ebp
    sar    $0x10,%ebp
    imul   $0x27,%ebp,%ebp
    mov    0x1d0(%esp),%ecx
    mov    $0x27,%ebx
    add    %ebp,%ecx
    mov    %esi,%eax
    mov    %ecx,%edx
    call   func_1bf94
    imul   $0x60,0x3337(%edi,%ebp,1),%ebx
    add    0x1c8(%esp),%ebx
    imul   $0x60,0x333b(%edi,%ebp,1),%eax
    mov    0x1c8(%esp),%edx
    mov    %ebx,0x3337(%edi,%ebp,1)
    add    %edx,%eax
    mov    %eax,0x333b(%edi,%ebp,1)
    mov    0x44(%ebx),%dx
    mov    %dx,0x1d4(%esp)
    mov    0x1d2(%esp),%ebp
    inc    %edx
    sar    $0x10,%ebp
    mov    %dx,0x44(%ebx)
    mov    %ecx,0x2c(%ebx,%ebp,4)
    mov    0x44(%eax),%dx
    movswl %dx,%ebx
    inc    %edx
    shl    $0x2,%ebx
    mov    %dx,0x44(%eax)
    add    %ebx,%eax
    mov    %ecx,0x2c(%eax)
    mov    0x1d8(%esp),%eax
    inc    %eax
    mov    0x49c3(%edi),%dx
    mov    %ax,0x1d8(%esp)
    cmp    %dx,%ax
    jl     jump_21f10
  jump_21fb5:
    mov    $0x2710,%ebx
    lea    0x32ddb(%edi),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    %ax,0x32dd1(%edi)
    mov    %esp,%eax
    add    $0x192,%eax
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    xor    %ebx,%ebx
    mov    0x32dd1(%edi),%cx
    mov    %ebx,0x1dc(%esp)
    test   %cx,%cx
    jle    jump_2206c
    lea    0xdb5(%edi),%ecx
  jump_2201e:
    mov    $0x19e,%ebx
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x190(%esp),%edx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_22051
  jump_2203a:
    movswl %ax,%edx
    imul   $0x60,(%esp,%edx,4),%ebx
    add    %ecx,%ebx
    mov    %ebx,(%esp,%edx,4)
    inc    %eax
    cmp    0x190(%esp),%ax
    jl     jump_2203a
  jump_22051:
    mov    0x1dc(%esp),%eax
    inc    %eax
    mov    0x32dd1(%edi),%dx
    mov    %eax,0x1dc(%esp)
    cmp    %dx,%ax
    jl     jump_2201e
  jump_2206c:
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    xor    %ecx,%ecx
    mov    %ax,0x306f2(%edi)
    test   %ax,%ax
    jle    jump_220b9
    lea    0x3067d(%edi),%ebp
  jump_2209a:
    movswl %cx,%eax
    imul   $0xd,%eax,%eax
    mov    $0xd,%ebx
    lea    (%eax,%ebp,1),%edx
    mov    %esi,%eax
    inc    %ecx
    call   func_1bf94
    cmp    0x306f2(%edi),%cx
    jl     jump_2209a
  jump_220b9:
    mov    %edi,%eax
    call   func_1eea4
    add    $0x1e0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_220cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x6c,%esp
    mov    %eax,%ecx
    mov    $0x38,%ebx
    mov    %esp,%eax
    xor    %edx,%edx
    xor    %edi,%edi
    mov    %edx,0x44(%esp)
    mov    %edx,0x48(%esp)
    mov    %edx,0x4c(%esp)
    call   func_76ec0
    mov    0xd88(%ecx),%dx
    movw   $0x0,0x32dd3(%ecx)
    test   %dx,%dx
    jle    jump_22231
    jmp    jump_2215b
  jump_2210e:
    mov    0xd86(%ecx),%ebx
    sar    $0x10,%ebx
    dec    %ebx
    mov    %ebx,0x68(%esp)
    movswl %di,%eax
    fildl  0x68(%esp)
    fdivrl (%esp,%eax,8)
    fstpl  (%esp,%eax,8)
    filds  0x32dd3(%ecx)
    fld    %st(0)
    faddl  (%esp,%eax,8)
    inc    %edi
    fstp   %st(1)
    call   func_76e98
    fistpl 0x68(%esp)
    mov    0x68(%esp),%eax
    mov    0xd88(%ecx),%bx
    mov    %ax,0x32dd3(%ecx)
    cmp    %bx,%di
    jge    jump_22231
  jump_2215b:
    mov    0xd88(%ecx),%si
    xor    %edx,%edx
    test   %si,%si
    jle    jump_2210e
    movswl %di,%esi
  jump_2216c:
    cmp    %dx,%di
    je     jump_2221e
    movswl %dx,%eax
    imul   $0x1ee,%eax,%eax
    mov    0xd(%ecx,%eax,1),%ebx
    imul   $0x1ee,%esi,%eax
    lea    0x50(%esp),%ebp
    mov    0xd(%ecx,%eax,1),%eax
    mov    %ebp,0x64(%esp)
    xor    %ebp,%ebp
    mov    %ebp,0x38(%esp)
    mov    %ebp,0x3c(%esp)
    mov    %ebp,0x40(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%ebx)
    fstps  0x38(%esp)
    flds   0xc(%eax)
    fsubs  0xc(%ebx)
    add    $0x8,%eax
    fstps  0x3c(%esp)
    flds   0x8(%eax)
    fsubs  0x10(%ebx)
    mov    0x38(%esp),%eax
    fstps  0x40(%esp)
    flds   0x3c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x50(%esp)
    mov    0x3c(%esp),%eax
    flds   0x38(%esp)
    fmul   %st(0),%st
    mov    %eax,0x54(%esp)
    faddp  %st,%st(1)
    mov    0x40(%esp),%eax
    flds   0x40(%esp)
    fmul   %st(0),%st
    mov    %eax,0x58(%esp)
    mov    0x38(%esp),%eax
    add    $0x8,%ebx
    mov    %eax,0x44(%esp)
    mov    0x3c(%esp),%eax
    lea    (%esp,%esi,8),%ebx
    mov    %eax,0x48(%esp)
    mov    0x40(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x4c(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    faddl  (%ebx)
    fstpl  (%ebx)
  jump_2221e:
    inc    %edx
    cmp    0xd88(%ecx),%dx
    jge    jump_2210e
    jmp    jump_2216c
  jump_22231:
    mov    0x32dd3(%ecx),%ax
    mov    0xd88(%ecx),%bx
    cwtd
    idiv   %bx
    mov    %ax,0x32dd3(%ecx)
    add    $0x6c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_22260:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $data_95af0,%ebx
    mov    $0x7,%edx
    call   func_7760c
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_22280:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $data_95b04,%ebx
    mov    $0x64,%edx
    call   func_7760c
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_222a0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $data_95ab4,%ebx
    mov    $0x6b,%edx
    call   func_7760c
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_222c0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $data_95a8c,%ebx
    mov    $0x18,%edx
    call   func_7760c
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_222e0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $data_95aa0,%ebx
    mov    $0x9,%edx
    call   func_7760c
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_22300:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $data_95ac8,%ebx
    mov    $0x1f4,%edx
    call   func_7760c
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_22320:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $data_95adc,%ebx
    mov    $0x94,%edx
    call   func_7760c
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_22340:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_22350:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_22360:
/*----------------------------------------------------------------*/
    add    $0x8,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    sub    $0x14,%eax
    ret


/*----------------------------------------------------------------*/
func_223a0:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_223b0:
/*----------------------------------------------------------------*/
    inc    %eax
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    dec    %eax
    ret


/*----------------------------------------------------------------*/
func_223d0:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_223e0:
/*----------------------------------------------------------------*/
    add    $0x192,%eax
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    sub    $0x192,%eax
    ret


/*----------------------------------------------------------------*/
func_22400:
/*----------------------------------------------------------------*/
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movw   $0x0,0x1a(%eax)
    movl   $0x0,0x10(%eax)
    movl   $0x0,0x5a(%eax)
    ret


/*----------------------------------------------------------------*/
func_22430:
/*----------------------------------------------------------------*/
    sub    $0x8,%esp
    mov    (%eax),%eax
    mov    0xd(%eax),%eax
    mov    %eax,0x4(%esp)
    mov    (%edx),%eax
    mov    0xd(%eax),%eax
    flds   0x4(%esp)
    mov    %eax,(%esp)
    xor    %edx,%edx
    fcomps (%esp)
    fnstsw %ax
    sahf
    jbe    jump_22459
    mov    $0xffffffff,%edx
    jmp    jump_22460
  jump_22459:
    jae    jump_22460
    mov    $0x1,%edx
  jump_22460:
    mov    %edx,%eax
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_22468:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    $0x1,%ebx
    mov    $data_90eb8,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    call   func_56e18
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_22495
    mov    $0x69,%ebx
    mov    $data_90ec5,%edx
    call   func_26198
  jump_22495:
    movl   $0x0,0xab(%ecx)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_224a4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    call   func_2c830
    add    $0xda,%eax
    call   func_1b4f0
    add    $0x98,%eax
    call   func_254a4
    movl   $data_95bb4,-0xcb(%eax)
    movl   $0x0,-0xc7(%eax)
    movl   $0x0,-0xc3(%eax)
    movl   $0x0,-0xbf(%eax)
    movw   $0x0,-0xbb(%eax)
    movl   $0x0,-0xb7(%eax)
    movl   $0x0,-0xb2(%eax)
    movl   $0xffffffff,-0xae(%eax)
    movl   $0xffffffff,-0xaa(%eax)
    movl   $0xffffffff,-0xa6(%eax)
    movl   $0xffffffff,-0xa2(%eax)
    movl   $0x0,-0x9e(%eax)
    movl   $0x0,0x420(%eax)
    movb   $0xff,-0x9a(%eax)
    movl   $0x2,0x40c(%eax)
    movl   $0x0,0x41c(%eax)
    mov    $0x1,%dl
    movl   $0x0,0x418(%eax)
    mov    data_104bea,%cl
    movl   $0x0,0x410(%eax)
    sub    $0x172,%eax
    shl    %cl,%dl
    mov    %dl,0xd9(%eax)
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_22588:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_225a9
    mov    $data_95b70,%edx
    call   func_76d3c
    call   func_76d5c
    jmp    jump_2263b
  jump_225a9:
    mov    0xab(%eax),%edx
    movl   $data_95bb4,0xa7(%eax)
    test   %edx,%edx
    je     jump_225c4
    mov    %edx,%eax
    call   func_2627c
  jump_225c4:
    mov    0xab(%ebx),%eax
    call   func_76d5c
    mov    0xaf(%ebx),%esi
    test   %esi,%esi
    je     jump_225e0
    mov    %esi,%eax
    call   func_2627c
  jump_225e0:
    mov    0xaf(%ebx),%eax
    call   func_76d5c
    mov    0xb3(%ebx),%edi
    test   %edi,%edi
    je     jump_225fc
    mov    %edi,%eax
    call   func_2627c
  jump_225fc:
    mov    0xb3(%ebx),%eax
    call   func_76d5c
    xor    %edx,%edx
    lea    0x172(%ebx),%eax
    call   func_254b0
    sub    $0x98,%eax
    xor    %edx,%edx
    call   func_1b66c
    mov    $0x1,%edx
    sub    $0xda,%eax
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2263b
    call   func_76d64
  jump_2263b:
    mov    %ebx,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_22644:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x118,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    test   %edx,%edx
    jne    jump_22669
    mov    $0x9e,%ebx
    mov    $data_90ed3,%edx
    xor    %eax,%eax
    call   func_26198
  jump_22669:
    test   %ebp,%ebp
    jne    jump_2267e
    mov    $0x9f,%ebx
    mov    $data_90ee1,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2267e:
    mov    %esp,%eax
    call   func_1bb78
    mov    0xab(%esi),%edx
    test   %edx,%edx
    je     jump_22696
    mov    %edx,%eax
    call   func_2627c
  jump_22696:
    mov    0xab(%esi),%eax
    mov    $0x200,%ebx
    call   func_76d5c
    mov    %edi,%edx
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    je     jump_226c6
    mov    $0xaa,%ebx
    mov    $data_90eef,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_226c6:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,0xab(%esi)
    test   %eax,%eax
    jne    jump_226e8
    mov    $0xac,%ebx
    mov    $data_90efd,%edx
    call   func_26198
  jump_226e8:
    mov    0xaf(%esi),%ecx
    test   %ecx,%ecx
    je     jump_226f9
    mov    %ecx,%eax
    call   func_2627c
  jump_226f9:
    mov    0xaf(%esi),%eax
    mov    $0x200,%ebx
    call   func_76d5c
    mov    %ebp,%edx
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    je     jump_22729
    mov    $0xb5,%ebx
    mov    $data_90f0b,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_22729:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,0xaf(%esi)
    test   %eax,%eax
    jne    jump_2274b
    mov    $0xb7,%ebx
    mov    $data_90f19,%edx
    call   func_26198
  jump_2274b:
    mov    0x10(%esi),%ax
    sub    0x8(%esi),%ax
    mov    0xc(%esi),%cx
    mov    %ax,0x576(%esi)
    mov    %eax,%ebx
    mov    0x14(%esi),%ax
    sar    %bx
    sub    %ecx,%eax
    mov    %bx,0x576(%esi)
    mov    %eax,%edi
    sar    %di
    mov    %esi,%eax
    mov    %di,0x578(%esi)
    call   func_2280c
    mov    0xb3(%esi),%ebp
    mov    $0x163,%ecx
    test   %ebp,%ebp
    je     jump_22799
    mov    %ebp,%eax
    call   func_2627c
  jump_22799:
    mov    0xb3(%esi),%eax
    movswl %cx,%edi
    call   func_76d5c
    lea    0x0(,%edi,4),%eax
    add    %edi,%eax
    shl    $0x2,%eax
    mov    $data_90f27,%ebx
    add    %edi,%eax
    mov    $0x1,%edx
    call   func_77604
    call   func_2625c
    mov    %eax,0xb3(%esi)
    test   %eax,%eax
    jne    jump_227e2
    mov    $0xcc,%ebx
    mov    $data_90f37,%edx
    call   func_26198
  jump_227e2:
    mov    %esp,%eax
    movw   $0x0,0xb7(%esi)
    xor    %edx,%edx
    mov    %cx,0xb9(%esi)
    call   func_1bbc8
    mov    $0xffffffff,%eax
    add    $0x118,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2280c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    movl   $0x420c0000,0x57a(%eax)
    mov    0x574(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    push   $0x47c35000
    push   $0x3f800000
    lea    0xda(%edx),%eax
    push   0x57a(%edx)
    call   func_1b808
    lea    0x10e(%edx),%eax
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    add    $0x14e,%edx
    movl   $0xc4bb8000,0x8(%eax)
    movl   $0x3f800000,(%edx)
    movl   $0x0,0x4(%edx)
    lea    0xc(%edx),%eax
    movl   $0x0,0x8(%edx)
    movl   $0x0,(%eax)
    movl   $0x3f800000,0x4(%eax)
    add    $0x18,%edx
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%edx)
    movl   $0x0,0x4(%edx)
    movl   $0x3f800000,0x8(%edx)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_228a4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3c,%esp
    mov    %eax,%esi
    mov    %dx,0x38(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ecx,0x2c(%esp)
    mov    %edx,%eax
    cmp    $0x1a,%dx
    jb     jump_23b3a
    jbe    jump_22f4a
    cmp    $0x3b,%dx
    jb     jump_23a9a
    jbe    jump_23788
    cmp    $0x3e,%dx
    jb     jump_23a3e
    jbe    jump_23594
    cmp    $0x3f,%dx
    jbe    jump_23842
    cmp    $0x42,%dx
    je     jump_238f7
  jump_228ff:
    mov    0x36(%esp),%edx
    mov    0x2c(%esp),%ecx
    mov    0x10(%esp),%ebx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2f424
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2291c:
    mov    $0x1,%al
    mov    data_a3cf4,%cl
    shl    %cl,%al
    xor    %ebx,%ebx
    dec    %al
    mov    %ebx,0xc(%esp)
    mov    %al,0xd9(%esi)
    jmp    jump_22948
  jump_22936:
    mov    0xc(%esp),%ebx
    inc    %ebx
    mov    %ebx,0xc(%esp)
    cmp    $0x7,%ebx
    jge    jump_229d6
  jump_22948:
    mov    0xc(%esp),%cl
    mov    $0x1,%eax
    shl    %cl,%eax
    xor    %ebp,%ebp
    mov    %ax,0x34(%esp)
    xor    %edx,%edx
    mov    0x32(%esp),%eax
    mov    0xd9(%esi),%dl
    sar    $0x10,%eax
    mov    %ebp,0x8(%esp)
    test   %eax,%edx
    je     jump_2298d
    movl   $0x1,0x8(%esp)
    xor    %edx,%edx
    mov    0xd8(%esi),%dl
    test   %eax,%edx
    je     jump_2298d
    movl   $0x5,0x8(%esp)
  jump_2298d:
    xor    %ecx,%ecx
    xor    %edi,%edi
    mov    %ecx,0x28(%esp)
    jmp    jump_229c2
  jump_22997:
    mov    0x67(%esi),%eax
    mov    0x32(%esp),%ebx
    mov    (%edi,%eax,1),%eax
    mov    0x8(%esp),%ecx
    mov    $0x9,%edx
    mov    0xa7(%eax),%ebp
    sar    $0x10,%ebx
    call   *0x8(%ebp)
    mov    0x28(%esp),%ebp
    inc    %ebp
    add    $0x4,%edi
    mov    %ebp,0x28(%esp)
  jump_229c2:
    mov    0x69(%esi),%eax
    mov    0x28(%esp),%ecx
    sar    $0x10,%eax
    cmp    %ecx,%eax
    jle    jump_22936
    jmp    jump_22997
  jump_229d6:
    push   $0x0
    mov    $0x3b,%ebx
    mov    $data_10ae70,%eax
    mov    $0x168,%ebp
    mov    0x41(%esi),%edx
    push   $0x0
    xor    %ecx,%ecx
    xor    %edi,%edi
    call   func_56400
    mov    %edi,0x24(%esp)
    movl   $0x0,0xc0(%esi)
    xor    %ecx,%ecx
    jmp    jump_22a9b
  jump_22a0a:
    flds   0x24(%esp)
    fmuls  data_95b2c
    fstpl  (%esp)
    mov    0x4(%esp),%eax
    push   %eax
    mov    0x4(%esp),%edx
    push   %edx
    mov    0xc(%esp),%ebx
    call   func_775e6
    fmull  data_90fd1
    push   %ebx
    filds  0x576(%esi)
    fsubp  %st,%st(1)
    push   %edx
    call   func_76e98
    fistpl 0x38(%esp)
    mov    0x38(%esp),%eax
    mov    %ebp,%edx
    mov    %ax,data_d85c8(%edi)
    call   func_775da
    fmull  data_90fd1
    sar    $0x1f,%edx
    filds  0x578(%esi)
    fsubp  %st,%st(1)
    mov    data_a3cf2,%ebx
    call   func_76e98
    fistpl 0x30(%esp)
    mov    0x30(%esp),%eax
    sar    $0x10,%ebx
    mov    %ax,data_d85ca(%edi)
    mov    %ebp,%eax
    idiv   %ebx
    mov    %eax,0x30(%esp)
    add    $0x4,%edi
    fildl  0x30(%esp)
    fadds  0x24(%esp)
    inc    %ecx
    fstps  0x24(%esp)
  jump_22a9b:
    mov    data_a3cf2,%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jl     jump_22a0a
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jne    jump_22b84
    movl   $0x11,0x8(%esi)
    movl   $0xc,0xc(%esi)
    movl   $0x144,0x10(%esi)
    mov    0x10(%esi),%ax
    mov    0x8(%esi),%cx
    movl   $0x140,0x14(%esi)
    sub    %ecx,%eax
    mov    0xc(%esi),%dx
    mov    %ax,0x576(%esi)
    mov    %eax,%edi
    mov    0x14(%esi),%ax
    sar    %di
    sub    %edx,%eax
    mov    %di,0x576(%esi)
    mov    %ax,0x578(%esi)
    mov    %eax,%ebx
    mov    0x574(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    movl   $0x420c0000,0x57a(%esi)
    push   $0x47c35000
    sar    %bx
    push   $0x3f800000
    lea    0xda(%esi),%eax
    push   0x57a(%esi)
    mov    %bx,0x578(%esi)
    call   func_1b808
    movl   $0x1,0xc0(%esi)
    movl   $0x0,0xc4(%esi)
    movl   $0x0,0xc8(%esi)
    movl   $0x0,0xcc(%esi)
    movl   $0x0,0xd0(%esi)
    movl   $0x0,0x58a(%esi)
    movb   $0xff,0xd8(%esi)
  jump_22b84:
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x7,%eax
    setne  %al
    and    $0xff,%eax
    dec    %eax
    mov    %eax,0xd4(%esi)
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0xd,%eax
    jne    jump_22cd5
    movl   $0x143,0x10(%esi)
    mov    0x8(%esi),%cx
    mov    0x10(%esi),%ax
    movl   $0x13b,0x14(%esi)
    sub    %ecx,%eax
    mov    0xc(%esi),%dx
    mov    %ax,0x576(%esi)
    mov    %eax,%edi
    mov    0x14(%esi),%ax
    sar    %di
    sub    %edx,%eax
    mov    %di,0x576(%esi)
    mov    %ax,0x578(%esi)
    mov    %eax,%ebx
    mov    0x574(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    movl   $0x420c0000,0x57a(%esi)
    push   $0x47c35000
    sar    %bx
    push   $0x3f800000
    lea    0xda(%esi),%eax
    push   0x57a(%esi)
    mov    %bx,0x578(%esi)
    call   func_1b808
    mov    0x6b(%esi),%cx
    xor    %edi,%edi
    test   %cx,%cx
    jle    jump_22c53
    mov    $0xfffffe2d,%ebp
  jump_22c36:
    movswl %di,%eax
    mov    0x67(%esi),%edx
    mov    (%edx,%eax,4),%eax
    xor    %ebx,%ebx
    mov    0xa7(%eax),%ecx
    mov    %ebp,%edx
    inc    %edi
    call   *0x4(%ecx)
    cmp    0x6b(%esi),%di
    jl     jump_22c36
  jump_22c53:
    xor    %eax,%eax
    push   $0x7
    mov    data_968dd,%al
    push   $0x150
    xor    %edx,%edx
    mov    data_ffeae(,%eax,2),%ax
    push   $0x0
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   $data_d8668
    call   func_5cb3c
    mov    $0x8,%ebx
    mov    $0x151,%edx
    add    $0x14,%esp
    xor    %ecx,%ecx
    mov    $data_d8668,%eax
    mov    data_968dd,%cl
    call   func_53e38
    xor    %edx,%edx
    mov    data_968dd,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f73(,%eax,2),%al
    xor    %ah,%ah
    add    $0x8,%eax
    xor    %ebx,%ebx
    movswl %ax,%edx
    mov    $data_10914c,%eax
    call   func_4f8cc
  jump_22cd5:
    mov    %esi,%eax
    call   func_24d30
    lea    0x172(%esi),%eax
    call   func_254b0
    mov    %esi,%eax
    call   func_2422c
    movl   $0xffffffff,0x39(%esi)
    xor    %edx,%edx
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    movl   $0xffffffff,0x35(%esi)
    call   *0xc(%ebx)
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    je     jump_22f41
    xor    %edi,%edi
    xor    %ebp,%ebp
    jmp    jump_22d2c
  jump_22d20:
    add    $0x4,%edi
    cmp    $0x50,%edi
    je     jump_22f41
  jump_22d2c:
    mov    0x67(%esi),%eax
    add    %edi,%eax
    mov    (%eax),%edx
    cmp    %edx,%ebp
    je     jump_22d20
    lea    0x20(%edx),%eax
    mov    $data_90f45,%edx
    call   func_76d70
    test   %eax,%eax
    jne    jump_22d55
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_22d20
  jump_22d55:
    mov    0x2c(%esp),%ebx
    mov    0x67(%esi),%eax
    mov    0x10(%esp),%ecx
    push   %ebx
    mov    (%edi,%eax,1),%edx
    mov    0x3a(%esp),%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%edx),%edx
    sar    $0x10,%ebx
    call   func_56d30
    jmp    jump_22d20
  jump_22d7a:
    mov    $0xffffffff,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_564c0
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_22da1
    xor    %edx,%edx
    mov    %edx,data_12fc0c
  jump_22da1:
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0xd,%eax
    jne    jump_22e77
    mov    0x6b(%esi),%dx
    xor    %edi,%edi
    test   %dx,%dx
    jle    jump_22dfb
  jump_22dbd:
    movswl %di,%ecx
    mov    0x67(%esi),%eax
    mov    (%eax,%ecx,4),%eax
    mov    0xa7(%eax),%ebp
    mov    $0x1d3,%edx
    xor    %ebx,%ebx
    call   *0x4(%ebp)
    mov    0x67(%esi),%eax
    mov    0x36(%esp),%edx
    mov    0x10(%esp),%ebx
    mov    (%eax,%ecx,4),%eax
    sar    $0x10,%edx
    mov    0xa7(%eax),%ebp
    mov    0x2c(%esp),%ecx
    inc    %edi
    call   *0x8(%ebp)
    cmp    0x6b(%esi),%di
    jl     jump_22dbd
  jump_22dfb:
    movl   $0x1d1,0x10(%esi)
    mov    0x8(%esi),%cx
    mov    0x10(%esi),%ax
    movl   $0x1d8,0x14(%esi)
    sub    %ecx,%eax
    mov    0xc(%esi),%dx
    mov    %ax,0x576(%esi)
    mov    %eax,%edi
    mov    0x14(%esi),%ax
    sar    %di
    sub    %edx,%eax
    mov    %di,0x576(%esi)
    mov    %ax,0x578(%esi)
    mov    %eax,%ebx
    mov    0x574(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    movl   $0x420c0000,0x57a(%esi)
    push   $0x47c35000
    sar    %bx
    push   $0x3f800000
    lea    0xda(%esi),%eax
    push   0x57a(%esi)
    mov    %bx,0x578(%esi)
    call   func_1b808
    jmp    jump_22f2b
  jump_22e77:
    cmp    $0x3,%eax
    jne    jump_22f2b
    movl   $0x7,0x8(%esi)
    movl   $0x7,0xc(%esi)
    movl   $0x1d1,0x10(%esi)
    mov    0x10(%esi),%ax
    mov    0x8(%esi),%bx
    movl   $0x1d8,0x14(%esi)
    sub    %ebx,%eax
    mov    0xc(%esi),%di
    mov    %ax,0x576(%esi)
    mov    %eax,%ecx
    mov    0x14(%esi),%ax
    sar    %cx
    sub    %edi,%eax
    mov    %cx,0x576(%esi)
    sar    %ax
    mov    %ax,0x578(%esi)
    mov    0x574(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   $0x47c35000
    movl   $0x420c0000,0x57a(%esi)
    push   $0x3f800000
    lea    0xda(%esi),%eax
    push   0x57a(%esi)
    call   func_1b808
    movl   $0xffffffff,0xc4(%esi)
    movl   $0xffffffff,0xc8(%esi)
    movl   $0xffffffff,0xcc(%esi)
    movl   $0xffffffff,0xd0(%esi)
    movb   $0xff,0xd8(%esi)
  jump_22f2b:
    mov    0x36(%esp),%edx
    mov    0x2c(%esp),%ecx
    mov    0x10(%esp),%ebx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2f424
  jump_22f41:
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22f4a:
    mov    0x10(%esp),%al
    mov    %al,0xd9(%esi)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22f5d:
    mov    %ebx,%eax
    cmp    0x8(%esi),%eax
    jle    jump_22f41
    cmp    0x10(%esi),%eax
    jge    jump_22f41
    mov    0x2c(%esp),%eax
    cmp    0xc(%esi),%eax
    jle    jump_22f41
    cmp    0x14(%esi),%eax
    jge    jump_22f41
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0xd,%eax
    jne    jump_22f95
    mov    $data_965f0,%ebx
    mov    $0x5,%edx
    mov    $data_10ae70,%eax
    jmp    jump_22fb5
  jump_22f95:
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_22fbc
    cmpb   $0x30,0x4f(%esi)
    je     jump_22fbc
    mov    $0x5,%edx
    mov    $data_10ae70,%eax
    lea    0x4f(%esi),%ebx
  jump_22fb5:
    xor    %ecx,%ecx
    call   func_56b60
  jump_22fbc:
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22fc8:
    mov    data_a3cf4,%cx
    inc    %eax
    add    %dl,%dl
    cmp    %cx,%ax
    jl     jump_22fe8
    jmp    jump_230b3
  jump_22fdc:
    xor    %ebx,%ebx
    mov    0xd8(%esi),%bl
    mov    %ebx,0x20(%esp)
  jump_22fe8:
    xor    %ebx,%ebx
    mov    0x20(%esp),%ecx
    mov    %dl,%bl
    test   %ecx,%ebx
    je     jump_22fc8
    xor    %ecx,%ecx
    mov    data_104bea,%cl
    imul   $0x1ee,%ecx,%ecx
    movswl %ax,%ebx
    cmpb   $0x0,data_a3132(%ecx,%ebx,1)
    je     jump_22fc8
    imul   $0x1ee,%ebx,%ecx
    cmpl   $0x0,data_a2f75(%ecx)
    jne    jump_22fc8
    shl    $0x2,%ebx
    mov    data_d85c6(%ebx),%ecx
    sar    $0x10,%ecx
    mov    0x10(%esp),%ebp
    lea    -0x32(%ecx),%edi
    cmp    %ebp,%edi
    jge    jump_22fc8
    add    $0x32,%ecx
    cmp    %ebp,%ecx
    jle    jump_22fc8
    mov    data_d85c8(%ebx),%ebx
    sar    $0x10,%ebx
    mov    0x2c(%esp),%ebp
    lea    -0x32(%ebx),%ecx
    cmp    %ebp,%ecx
    jge    jump_22fc8
    add    $0x32,%ebx
    cmp    %ebp,%ebx
    jle    jump_22fc8
    mov    $0x1,%ecx
    mov    $0xd,%ebx
    mov    %al,data_968dd
    mov    $data_10ae70,%eax
    mov    %ecx,%edx
    call   func_56b60
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23086:
    cmpl   $0x0,0xbb(%esi)
    je     jump_230b3
    cmpl   $0x0,data_12fc0c
    jne    jump_230b3
    mov    0x2c(%esp),%ebx
    mov    0x10(%esp),%edx
    mov    %esi,%eax
    call   func_24be0
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_230b3:
    cmpl   $0xffffffff,0x582(%esi)
    jne    jump_230d3
    mov    %esi,%eax
    mov    0xa7(%esi),%ebx
    movl   $0x0,0x582(%esi)
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_230d3:
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_230df:
    cmpl   $0x0,data_a0cfc
    je     jump_22f41
    mov    0x58e(%esi),%edx
    not    %edx
    mov    %esi,%eax
    mov    %edx,0x58e(%esi)
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23110:
    cmpl   $0x0,data_a0cfc
    je     jump_22f41
    mov    data_a792f,%cx
    xor    %ebx,%ebx
    mov    $data_a62a3,%eax
    cmp    %cx,%bx
    jge    jump_2314d
  jump_23130:
    mov    $0x1,%dl
    mov    data_104bea,%cl
    shl    %cl,%dl
    or     %dl,0x20(%eax)
    inc    %ebx
    mov    data_a792f,%di
    add    $0x27,%eax
    cmp    %di,%bx
    jl     jump_23130
  jump_2314d:
    mov    %esi,%eax
    call   func_24d30
    mov    %esi,%eax
    call   func_2422c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23171:
    cmpl   $0x0,data_a0cfc
    je     jump_22f41
    mov    data_a62a1,%di
    xor    %ebx,%ebx
    cmp    %di,%bx
    jge    jump_231c2
    mov    $0x1,%dl
    mov    data_104bea,%cl
    shl    %cl,%dl
  jump_23196:
    movswl %bx,%eax
    imul   $0x60,%eax,%eax
    mov    data_a3d38(%eax),%ch
    or     %dl,%ch
    mov    data_a3d37(%eax),%dh
    mov    %ch,data_a3d38(%eax)
    or     %dl,%dh
    mov    %dh,data_a3d37(%eax)
    inc    %ebx
    cmp    data_a62a1,%bx
    jl     jump_23196
  jump_231c2:
    mov    %esi,%eax
    call   func_24d30
    mov    %esi,%eax
    call   func_2422c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_231e6:
    cmpl   $0x0,data_a0cfc
    je     jump_22f41
    mov    data_a3cf4,%dx
    xor    %ebx,%ebx
    mov    $data_a2f72,%eax
    jmp    jump_23210
  jump_23203:
    mov    data_a3cf4,%dx
    inc    %ebx
    add    $0x1ee,%eax
  jump_23210:
    cmp    %dx,%bx
    jge    jump_231c2
    movzbl data_104bea,%ebp
    imul   $0x1ee,%ebp,%edi
    mov    $data_a2f72,%edx
    add    %edi,%edx
    cmp    %edx,%eax
    je     jump_23203
    movswl %bx,%edx
    mov    %edx,%ecx
    imul   $0x1ee,%edx,%edx
    mov    %edx,0x30(%esp)
    mov    data_a3147(%edx),%dx
    mov    %dx,data_a3124(%edi,%ecx,2)
    mov    0x30(%esp),%edx
    mov    data_a3147(%edx),%dx
    mov    %dx,0x1b2(%eax,%ebp,2)
    add    %ecx,%edi
    mov    $0x1,%cl
    mov    %cl,data_a3132(%edi)
    mov    %cl,0x1c0(%eax,%ebp,1)
    mov    $0x1,%dl
    mov    data_a3cf4,%cl
    shl    %cl,%dl
    dec    %dl
    mov    %dl,0xd9(%esi)
    jmp    jump_23203
  jump_23283:
    cmpl   $0x0,data_a0cfc
    je     jump_22f41
    cmp    $0x9,%ecx
    jne    jump_2329c
    mov    $0xff,%eax
    jmp    jump_232bf
  jump_2329c:
    mov    0x2c(%esp),%al
    mov    data_a3cf2,%edx
    sub    $0x2,%al
    sar    $0x10,%edx
    and    $0xff,%eax
    cmp    %edx,%eax
    jge    jump_232c4
    mov    0x2c(%esp),%al
    sub    $0x2,%al
    and    $0xff,%eax
  jump_232bf:
    call   func_1cf14
  jump_232c4:
    mov    $0x1,%ebx
    mov    $data_90f50,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    call   func_56e18
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_232ef
    mov    $0x26c,%ebx
    mov    $data_90f5a,%edx
    call   func_26198
  jump_232ef:
    mov    0xa7(%ecx),%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    %esi,%eax
    call   func_24d30
    mov    %esi,%eax
    call   func_2422c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23320:
    flds   data_12fc1c
    fcompl data_90fc1
    fnstsw %ax
    sahf
    jbe    jump_22f41
    flds   data_12fc1c
    fld    %st(0)
    fmull  data_90fc9
    fstp   %st(1)
    fstps  data_12fc1c
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23354:
    flds   data_12fc1c
    fcomps data_90fb5
    fnstsw %ax
    sahf
    jae    jump_22f41
    flds   data_12fc1c
    fmull  data_90fb9
    fstps  data_12fc1c
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23384:
    mov    %ecx,%eax
    cmp    $0x13,%ecx
    jb     jump_233c0
    jbe    jump_231e6
    cmp    $0x26,%ecx
    jb     jump_233ae
    jbe    jump_23110
    cmp    $0x2e,%ecx
    je     jump_230df
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_233ae:
    cmp    $0x1f,%ecx
    je     jump_23171
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_233c0:
    cmp    $0xc,%ecx
    jb     jump_233d9
    jbe    jump_23320
    cmp    $0xd,%ecx
    je     jump_23354
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_233d9:
    cmp    $0x2,%ecx
    jb     jump_22f41
    cmp    $0x9,%ecx
    jbe    jump_23283
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_233f4:
    mov    $0x1,%al
    mov    data_104bea,%cl
    shl    %cl,%al
    mov    %al,0xd9(%esi)
    mov    data_a3cf4,%dx
    xor    %eax,%eax
    cmp    %dx,%ax
    jmp    jump_2341d
  jump_23412:
    mov    data_a3cf4,%bx
    inc    %eax
    cmp    %bx,%ax
  jump_2341d:
    jge    jump_23448
    xor    %edx,%edx
    mov    data_104bea,%dl
    imul   $0x1ee,%edx,%ebx
    movswl %ax,%edx
    cmpb   $0x0,data_a3132(%edx,%ebx,1)
    je     jump_23412
    mov    $0x1,%dl
    mov    %al,%cl
    shl    %cl,%dl
    or     %dl,0xd9(%esi)
    jmp    jump_23412
  jump_23448:
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_2348a
    mov    $data_90f68,%edx
    mov    %eax,%ebx
    xor    %ecx,%ecx
    mov    $data_10ae70,%eax
    call   func_56e18
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_2347d
    mov    $0x298,%ebx
    mov    $data_90f6e,%edx
    call   func_26198
  jump_2347d:
    mov    0xa7(%ecx),%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_2348a:
    mov    %esi,%eax
    call   func_24d30
    mov    %esi,%eax
    call   func_2422c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_234ae:
    testb  $0x15,0xc0(%esi)
    jne    jump_22f41
    cmpl   $0x0,data_12fc0c
    jne    jump_22f41
    mov    data_d8648,%ebp
    mov    data_d864c,%edi
    mov    0x8(%esi),%edx
    mov    0xc(%esi),%ebx
    mov    0x582(%esi),%ecx
    sub    %edx,%ebp
    sub    %ebx,%edi
    cmp    $0xffffffff,%ecx
    jne    jump_23580
    mov    %esi,%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    push   $0xf1
    push   $0x0
    mov    0x586(%esi),%eax
    push   %edi
    mov    0x5(%eax),%eax
    push   %ebp
    sar    $0x10,%eax
    push   %eax
    mov    0x586(%esi),%eax
    mov    0x3(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0x4(%esi),%eax
    push   %eax
    call   func_5c001
    mov    0x586(%esi),%eax
    mov    0x3(%eax),%eax
    sar    $0x10,%eax
    add    $0x1c,%esp
    cmp    %ebp,%eax
    jle    jump_23549
    mov    0x586(%esi),%ecx
    mov    0x3(%ecx),%ecx
    mov    %ebp,%edx
    sar    $0x10,%ecx
    jmp    jump_23557
  jump_23549:
    mov    0x586(%esi),%edx
    mov    0x3(%edx),%edx
    mov    %ebp,%ecx
    sar    $0x10,%edx
  jump_23557:
    mov    0x586(%esi),%eax
    mov    0x5(%eax),%eax
    sar    $0x10,%eax
    mov    %eax,0x1c(%esp)
    cmp    %eax,%edi
    jge    jump_2356f
    mov    %edi,%ebx
    jmp    jump_23575
  jump_2356f:
    mov    0x1c(%esp),%ebx
    mov    %edi,%eax
  jump_23575:
    push   %eax
    mov    $data_10ae70,%eax
    call   func_55274
  jump_23580:
    mov    %edi,%ebx
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_24948
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23594:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x10(%esp),%dl
    mov    0xd8(%esi),%al
    test   %eax,%edx
    je     jump_235b2
    mov    %dl,%al
    not    %al
    and    %al,0xd8(%esi)
    jmp    jump_235bc
  jump_235b2:
    mov    %al,%ah
    or     %dl,%ah
    mov    %ah,0xd8(%esi)
  jump_235bc:
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_235d5:
    mov    %dl,%cl
    and    $0xfe,%cl
    mov    %cl,0xc0(%esi)
    jmp    jump_235f2
  jump_235e2:
    mov    %dl,%dh
    or     $0x1,%dh
    mov    %dh,%bl
    and    $0xfd,%bl
    mov    %bl,0xc0(%esi)
  jump_235f2:
    mov    $0x1,%eax
  jump_235f7:
    mov    0x36(%esp),%edx
    sar    $0x10,%edx
    cmp    $0x33,%edx
    jne    jump_2363b
    mov    0xc0(%esi),%al
    test   $0x1,%al
    je     jump_2362b
    test   $0x2,%al
    je     jump_2361e
    mov    %al,%bl
    and    $0xfe,%bl
    mov    %bl,0xc0(%esi)
    jmp    jump_23636
  jump_2361e:
    mov    %al,%dh
    or     $0x2,%dh
    mov    %dh,0xc0(%esi)
    jmp    jump_23636
  jump_2362b:
    mov    %al,%ah
    or     $0x3,%ah
    mov    %ah,0xc0(%esi)
  jump_23636:
    mov    $0x1,%eax
  jump_2363b:
    mov    0x36(%esp),%edx
    sar    $0x10,%edx
    cmp    $0x34,%edx
    jne    jump_23686
    mov    0xc0(%esi),%bh
    test   $0x4,%bh
    je     jump_23671
    test   $0x8,%bh
    je     jump_23664
    mov    %bh,%dl
    and    $0xf7,%dl
    mov    %dl,0xc0(%esi)
    jmp    jump_23681
  jump_23664:
    mov    %bh,%ah
    and    $0xfb,%ah
    mov    %ah,0xc0(%esi)
    jmp    jump_23681
  jump_23671:
    mov    %bh,%cl
    or     $0x4,%cl
    mov    %cl,%ch
    and    $0xf7,%ch
    mov    %ch,0xc0(%esi)
  jump_23681:
    mov    $0x4,%eax
  jump_23686:
    mov    0x36(%esp),%edx
    sar    $0x10,%edx
    cmp    $0x35,%edx
    jne    jump_236cc
    mov    0xc0(%esi),%dh
    test   $0x4,%dh
    je     jump_236bc
    test   $0x8,%dh
    je     jump_236af
    mov    %dh,%ch
    and    $0xfb,%ch
    mov    %ch,0xc0(%esi)
    jmp    jump_236c7
  jump_236af:
    mov    %dh,%cl
    or     $0x8,%cl
    mov    %cl,0xc0(%esi)
    jmp    jump_236c7
  jump_236bc:
    mov    %dh,%bl
    or     $0xc,%bl
    mov    %bl,0xc0(%esi)
  jump_236c7:
    mov    $0x4,%eax
  jump_236cc:
    mov    0x36(%esp),%edx
    sar    $0x10,%edx
    cmp    $0x36,%edx
    jne    jump_23715
    mov    0xc0(%esi),%al
    test   $0x10,%al
    je     jump_23700
    test   $0x20,%al
    je     jump_236f3
    mov    %al,%bh
    and    $0xdf,%bh
    mov    %bh,0xc0(%esi)
    jmp    jump_23710
  jump_236f3:
    mov    %al,%bl
    and    $0xef,%bl
    mov    %bl,0xc0(%esi)
    jmp    jump_23710
  jump_23700:
    mov    %al,%ah
    or     $0x10,%ah
    mov    %ah,%dl
    and    $0xdf,%dl
    mov    %dl,0xc0(%esi)
  jump_23710:
    mov    $0x10,%eax
  jump_23715:
    mov    0x36(%esp),%edx
    sar    $0x10,%edx
    cmp    $0x37,%edx
    jne    jump_2375b
    mov    0xc0(%esi),%cl
    test   $0x10,%cl
    je     jump_2374b
    test   $0x20,%cl
    je     jump_2373e
    mov    %cl,%dl
    and    $0xef,%dl
    mov    %dl,0xc0(%esi)
    jmp    jump_23756
  jump_2373e:
    mov    %cl,%ah
    or     $0x20,%ah
    mov    %ah,0xc0(%esi)
    jmp    jump_23756
  jump_2374b:
    mov    %cl,%ch
    or     $0x30,%ch
    mov    %ch,0xc0(%esi)
  jump_23756:
    mov    $0x10,%eax
  jump_2375b:
    cmpl   $0x4,0x10(%esp)
    jne    jump_2377c
    push   $0x0
    mov    $0x3f,%ecx
    mov    $0x1,%ebx
    push   %eax
    mov    0x41(%esi),%edx
    mov    $data_10ae70,%eax
    call   func_56728
  jump_2377c:
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23788:
    mov    0xc0(%esi),%dh
    test   $0x1,%dh
    je     jump_237c0
    test   $0x2,%dh
    je     jump_237a2
    movl   $0xfffffffe,0x14(%esp)
    jmp    jump_237aa
  jump_237a2:
    movl   $0x2,0x14(%esp)
  jump_237aa:
    fildl  0x14(%esp)
    mov    $0xffffffff,%edx
    sub    $0x4,%esp
    mov    %esi,%eax
    fstps  (%esp)
    call   func_24154
  jump_237c0:
    mov    0xc0(%esi),%bh
    test   $0x4,%bh
    je     jump_237f5
    test   $0x8,%bh
    je     jump_237da
    movl   $0x2,0x18(%esp)
    jmp    jump_237e2
  jump_237da:
    movl   $0xfffffffe,0x18(%esp)
  jump_237e2:
    fildl  0x18(%esp)
    sub    $0x4,%esp
    mov    %esi,%eax
    xor    %edx,%edx
    fstps  (%esp)
    call   func_24154
  jump_237f5:
    mov    0xc0(%esi),%ch
    test   $0x10,%ch
    je     jump_23818
    test   $0x20,%ch
    je     jump_2380c
    mov    $0x1,%edx
    jmp    jump_23811
  jump_2380c:
    mov    $0xffffffff,%edx
  jump_23811:
    mov    %esi,%eax
    call   func_24198
  jump_23818:
    testb  $0x15,0xc0(%esi)
    je     jump_22f41
    mov    %esi,%eax
    call   func_2422c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23842:
    mov    %ebx,%eax
    mov    0xc0(%esi),%edx
    not    %eax
    and    %eax,%edx
    mov    $0x3f,%ebx
    mov    %edx,0xc0(%esi)
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_567bc
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23872:
    mov    %esi,%eax
    call   func_2280c
    mov    %esi,%eax
    call   func_2422c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23899:
    cmpl   $0xffffffff,0x58a(%esi)
    sete   %al
    and    $0xff,%eax
    mov    0xa7(%esi),%ebx
    dec    %eax
    xor    %edx,%edx
    mov    %eax,0x58a(%esi)
    mov    %esi,%eax
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_238c8:
    cmpl   $0xffffffff,0xc4(%esi)
    sete   %al
    and    $0xff,%eax
    mov    0xa7(%esi),%ebx
    dec    %eax
    xor    %edx,%edx
    mov    %eax,0xc4(%esi)
    mov    %esi,%eax
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_238f7:
    xor    %edx,%edx
    mov    data_104339,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    data_104bea,%cl
    mov    data_10529f(%eax),%edx
    mov    $0x1,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_23963
    mov    $data_90f8a,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    mov    $0x1,%ecx
    call   func_56da8
    mov    $0x8,%ebx
    mov    %ecx,%edx
    movl   $0x0,0xab(%eax)
    mov    $data_10ae70,%eax
    call   func_56b60
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23963:
    mov    $data_90f98,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    $data_90fa3,%ebx
    mov    $data_90fac,%edx
    mov    %eax,%ecx
    call   func_2fcb0
    mov    $data_10ae70,%eax
    mov    %ecx,%edx
    xor    %ebx,%ebx
    call   func_552f8
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2399c:
    mov    $data_10ae70,%eax
    mov    0x57e(%esi),%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_5a270
    push   $0x0
    mov    $0x8,%ecx
    mov    $0x4,%ebx
    push   $0x0
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_56728
    testb  $0x15,0xc0(%esi)
    jne    jump_23a04
    cmpl   $0x0,data_12fc0c
    jne    jump_23a04
    mov    data_d8648,%edx
    mov    0x8(%esi),%ebx
    mov    0xc(%esi),%ecx
    sub    %ebx,%edx
    mov    data_d864c,%ebx
    mov    %esi,%eax
    sub    %ecx,%ebx
    movl   $0x0,0xbb(%esi)
    call   func_24948
  jump_23a04:
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23a10:
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_5a270
    mov    $0x8,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_567bc
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23a3e:
    cmp    $0x3c,%dx
    jbe    jump_23899
    cmpl   $0xffffffff,0xd0(%esi)
    sete   %al
    and    $0xff,%eax
    mov    0xa7(%esi),%ebx
    dec    %eax
    xor    %edx,%edx
    mov    %eax,0xd0(%esi)
    mov    %esi,%eax
    call   *0xc(%ebx)
    cmpl   $0xffffffff,0xcc(%esi)
    sete   %al
    and    $0xff,%eax
    mov    0xa7(%esi),%ebx
    dec    %eax
    xor    %edx,%edx
    mov    %eax,0xcc(%esi)
    mov    %esi,%eax
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23a9a:
    cmp    $0x38,%dx
    jb     jump_23adf
    jbe    jump_23872
    cmp    $0x39,%dx
    jbe    jump_238c8
    cmpl   $0xffffffff,0xc8(%esi)
    sete   %al
    and    $0xff,%eax
    mov    0xa7(%esi),%ebx
    dec    %eax
    xor    %edx,%edx
    mov    %eax,0xc8(%esi)
    mov    %esi,%eax
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23adf:
    cmp    $0x32,%dx
    jb     jump_228ff
    cmpl   $0xffffffff,0x39(%esi)
    je     jump_23b00
    mov    $0x2ec,%ebx
    mov    $data_90f7c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_23b00:
    mov    0x36(%esp),%edx
    sar    $0x10,%edx
    xor    %eax,%eax
    cmp    $0x32,%edx
    jne    jump_235f7
    mov    0xc0(%esi),%dl
    test   $0x1,%dl
    je     jump_235e2
    test   $0x2,%dl
    je     jump_235d5
    mov    %dl,%ch
    and    $0xfd,%ch
    mov    %ch,0xc0(%esi)
    jmp    jump_235f2
  jump_23b3a:
    cmp    $0x6,%dx
    jb     jump_23b75
    jbe    jump_23a10
    cmp    $0x8,%dx
    jb     jump_2399c
    jbe    jump_234ae
    cmp    $0xc,%dx
    jb     jump_228ff
    jbe    jump_22f5d
    cmp    $0xd,%dx
    je     jump_233f4
    jmp    jump_228ff
  jump_23b75:
    cmp    $0x2,%dx
    jb     jump_23be1
    jbe    jump_22d7a
    cmp    $0x3,%dx
    jbe    jump_23384
    cmp    0x8(%esi),%ebx
    jle    jump_22f41
    cmp    0x10(%esi),%ebx
    jge    jump_22f41
    cmp    0xc(%esi),%ecx
    jle    jump_22f41
    cmp    0x14(%esi),%ecx
    jge    jump_22f41
    mov    $data_10914c,%eax
    xor    %edx,%edx
    call   func_4fb90
    cmpl   $0xffffffff,0xd4(%esi)
    jne    jump_23086
    mov    data_a3cf4,%bx
    xor    %eax,%eax
    mov    $0x1,%dl
    cmp    %bx,%ax
    jl     jump_22fdc
    jmp    jump_230b3
  jump_23be1:
    cmp    $0x1,%dx
    je     jump_2291c
    jmp    jump_228ff


/*----------------------------------------------------------------*/
func_23bf0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xe4,%esp
    mov    %eax,%ebp
    mov    %edx,0xe0(%esp)
    add    $0x172,%eax
    mov    %ebp,%edx
    call   func_254f8
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jne    jump_23c55
    mov    $data_90fd9,%edx
    mov    %eax,%ebx
    xor    %ecx,%ecx
    mov    $data_10ae70,%eax
    call   func_56e18
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_23c45
    mov    $0x414,%ebx
    mov    $data_90fe4,%edx
    call   func_26198
  jump_23c45:
    mov    0xa7(%esi),%ebx
    mov    $0x1,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
  jump_23c55:
    cmpl   $0xffffffff,0xd4(%ebp)
    jne    jump_23c65
    mov    %ebp,%eax
    call   func_23fd4
  jump_23c65:
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    je     jump_23c89
    mov    $0x3,%ebx
    xor    %ecx,%ecx
    lea    0x4(%ebp),%eax
    mov    data_104bea,%cl
    mov    %ebx,%edx
    call   func_53e38
  jump_23c89:
    cmpl   $0x0,0xbb(%ebp)
    jne    jump_23d86
    jmp    jump_23da3
  jump_23c9b:
    mov    (%eax),%eax
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    data_968dc,%bl
    mov    0x17(%eax),%cl
    test   %ebx,%ecx
    je     jump_23cfd
    mov    %esp,%edi
    lea    0x1c(%eax),%esi
    push   %edi
  jump_23cb4:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_23ccc
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_23cb4
  jump_23ccc:
    pop    %edi
    xor    %esi,%esi
    jmp    jump_23cd4
  jump_23cd1:
    inc    %esi
    add    %dl,%dl
  jump_23cd4:
    movswl %si,%eax
    cmp    $0x7,%eax
    jge    jump_23cfd
    xor    %eax,%eax
    movsbl %dl,%edi
    mov    0xd9(%ebp),%al
    and    %eax,%edi
    mov    0xbb(%ebp),%eax
    mov    (%eax),%eax
    mov    0x14(%eax),%al
    and    $0xff,%eax
    test   %eax,%edi
    je     jump_23cd1
  jump_23cfd:
    movswl %si,%eax
    cmp    $0x7,%eax
    push   $0x0
    lea    0x4(%esp),%ecx
    mov    $data_10deb6,%eax
    mov    $data_10debe,%edi
    mov    $data_d8668,%esi
    mov    0x14(%ebp),%ebx
    mov    0x10(%ebp),%edx
    push   $0xffffffff
    sub    $0x1b,%ebx
    sub    $0x82,%edx
    push   $0xffffffff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    mov    $data_10de9e,%edi
    mov    $data_d8668,%esi
    call   func_2b8a8
    push   $0x0
    mov    0xbb(%ebp),%eax
    mov    $data_d84c4,%ecx
    push   $0xffffffff
    mov    (%eax),%edx
    mov    0x14(%ebp),%ebx
    push   $0xffffffff
    mov    (%edx),%edx
    sub    $0xc,%ebx
    lea    0x0(,%edx,4),%eax
    push   $0x0
    add    %edx,%eax
    mov    0x10(%ebp),%edx
    shl    $0x2,%eax
    sub    $0x82,%edx
    add    %eax,%ecx
    mov    $data_10de96,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    jmp    jump_23da3
  jump_23d86:
    xor    %ah,%ah
    mov    %ah,(%esp)
    mov    0xbb(%ebp),%eax
    mov    $0x1,%dl
    mov    0x4(%eax),%dh
    mov    $0x7,%esi
    test   %dh,%dh
    je     jump_23c9b
  jump_23da3:
    cmpl   $0xa,0xe0(%esp)
    je     jump_23dba
    mov    $data_d85e4,%edi
    lea    0x4(%ebp),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
  jump_23dba:
    mov    $data_d85e4,%edx
    mov    $data_10ae70,%eax
    call   func_552cc
    mov    data_a0cfc,%esi
    cmp    $0xffffffff,%esi
    jne    jump_23fc6
    cmp    0x58e(%ebp),%esi
    jne    jump_23fc6
    mov    data_d8457,%eax
    push   %eax
    push   $data_90ff2
    lea    0x8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    push   $0x0
    lea    0x4(%esp),%ecx
    mov    $0x18c,%ebx
    push   $0xff
    mov    $0xa,%edx
    mov    $data_10de9e,%edi
    push   $0xffffffff
    mov    $data_d8668,%esi
    mov    $data_10de96,%eax
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    data_d8457,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %eax,%edx
    mov    data_a629f,%ebx
    shl    $0x2,%edx
    sar    $0x10,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    push   %eax
    push   $data_91006
    lea    0x8(%esp),%eax
    push   %eax
    call   func_76d09
    mov    data_a3d1d,%edx
    sar    $0x18,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    lea    0xb4(%esp),%edx
    shl    $0x2,%eax
    add    $0xc,%esp
    add    %edx,%eax
    push   %eax
    mov    data_104be6,%eax
    sar    $0x10,%eax
    lea    0xac(%esp),%edi
    push   %eax
    mov    $data_96608,%esi
    mov    $0x9,%ecx
    push   $data_9101c
    lea    0xc(%esp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    push   %eax
    lea    0x10(%esp),%ecx
    mov    $data_10debe,%edi
    call   func_76d09
    add    $0x10,%esp
    mov    $data_d8668,%esi
    mov    $data_10deb6,%eax
    push   $0x0
    mov    0xc(%ebp),%ebx
    mov    0x8(%ebp),%edx
    push   $0xff
    add    $0x1e,%ebx
    add    $0x5,%edx
    push   $0xffffffff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    lea    0x90(%esp),%edi
    mov    $data_9662c,%esi
    call   func_2b8a8
    mov    $0xa,%ecx
    xor    %dl,%dl
    mov    data_a3cf4,%bx
    mov    %dl,(%esp)
    rep movsl %ds:(%esi),%es:(%edi)
    xor    %dh,%dh
    test   %bx,%bx
    jle    jump_23f92
  jump_23f13:
    movzbl data_104bea,%esi
    imul   $0x1ee,%esi,%esi
    movswl %dx,%eax
    mov    data_a3122(%esi,%eax,2),%edi
    mov    data_a312f(%esi,%eax,1),%esi
    sar    $0x18,%esi
    imul   $0xa,%esi,%esi
    sar    $0x10,%edi
    push   %edi
    lea    0x84(%esp),%edi
    add    %edi,%esi
    push   %esi
    push   %eax
    push   $data_9102f
    lea    0xdc(%esp),%eax
    push   %eax
    lea    0x14(%esp),%edi
    call   func_76d09
    add    $0x14,%esp
    lea    0xcc(%esp),%esi
    inc    %edx
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_23f70:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_23f88
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_23f70
  jump_23f88:
    pop    %edi
    cmp    data_a3cf4,%dx
    jl     jump_23f13
  jump_23f92:
    push   $0x0
    lea    0x4(%esp),%ecx
    mov    $data_10deb6,%eax
    mov    $data_10debe,%edi
    mov    $data_d8668,%esi
    push   $0xff
    mov    0xc(%ebp),%ebx
    mov    0x8(%ebp),%edx
    push   $0xffffffff
    add    $0x37,%ebx
    add    $0x5,%edx
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_23fc6:
    add    $0xe4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_23fd4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,0x4(%esp)
    mov    $0x1,%ah
    mov    $data_a2f72,%ebp
    xor    %esi,%esi
    mov    %ah,0x1c(%esp)
    mov    0x4(%esp),%eax
    xor    %edi,%edi
    add    $0x4,%eax
    mov    %esi,(%esp)
    mov    %eax,0x8(%esp)
    jmp    jump_2401d
  jump_24000:
    mov    0x1c(%esp),%bh
    mov    (%esp),%edx
    add    $0x4,%edi
    inc    %esi
    add    $0x1ee,%ebp
    add    %bh,%bh
    add    $0x2,%edx
    mov    %bh,0x1c(%esp)
    mov    %edx,(%esp)
  jump_2401d:
    mov    data_a3cf2,%eax
    sar    $0x10,%eax
    cmp    %eax,%esi
    jge    jump_2414a
    mov    data_d85c6(%edi),%eax
    sar    $0x10,%eax
    mov    %eax,0x10(%esp)
    mov    data_d85c8(%edi),%eax
    sar    $0x10,%eax
    mov    %eax,0xc(%esp)
    mov    0x4(%esp),%eax
    xor    %edx,%edx
    mov    0xd8(%eax),%dl
    mov    0x19(%esp),%eax
    sar    $0x18,%eax
    test   %edx,%eax
    je     jump_240f5
    xor    %eax,%eax
    mov    data_104bea,%al
    imul   $0x1ee,%eax,%edx
    cmpb   $0x0,data_a3132(%edx,%esi,1)
    jne    jump_2407d
    cmp    %eax,%esi
    jne    jump_240f5
  jump_2407d:
    mov    (%esp),%eax
    mov    0x3(%ebp),%ecx
    xor    %ebx,%ebx
    mov    data_ffea0(%eax),%ax
    mov    %ebx,0x14(%esp)
    mov    %eax,0x18(%esp)
    cmp    $0xffffffff,%ecx
    jne    jump_240b4
    movl   $0x1,0x14(%esp)
    mov    data_d8d8f,%eax
    add    $0x1600,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
  jump_240b4:
    mov    0x14(%esp),%edx
    push   %edx
    push   $0x10000
    push   $0x10000
    push   $0x0
    push   $data_d8da0
    mov    0x20(%esp),%ebx
    push   %ebx
    mov    0x28(%esp),%ecx
    push   %ecx
    xor    %edx,%edx
    push   $0x0
    mov    $data_12fc20,%eax
    mov    0x38(%esp),%dx
    call   func_1b084
    push   %eax
    mov    0x2c(%esp),%eax
    push   %eax
    call   func_5d631
    add    $0x28,%esp
  jump_240f5:
    mov    0x4(%esp),%edx
    xor    %eax,%eax
    mov    0xd8(%edx),%al
    mov    0x19(%esp),%edx
    sar    $0x18,%edx
    test   %eax,%edx
    je     jump_24000
    mov    0xc(%esp),%ebx
    push   %ebx
    mov    0x14(%esp),%ecx
    xor    %eax,%eax
    push   %ecx
    mov    0x2(%ebp),%al
    mov    data_ffee2,%dx
    push   %eax
    mov    $data_12fc20,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    mov    0x18(%esp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_24000
  jump_2414a:
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_24154:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x4,%esp
    mov    %eax,%ebx
    add    $0x172,%eax
    call   func_254b0
    flds   0xc(%esp)
    fmuls  data_12fc1c
    lea    0x14e(%ebx),%eax
    fstps  (%esp)
    cmp    $0xffffffff,%edx
    jne    jump_24186
    push   (%esp)
    call   func_535e4
    jmp    jump_2418e
  jump_24186:
    push   (%esp)
    call   func_535b4
  jump_2418e:
    add    $0x4,%esp
    pop    %ebx
    ret    $0x4


/*----------------------------------------------------------------*/
func_24198:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x8,%esp
    mov    %eax,%ebx
    mov    %edx,0x4(%esp)
    flds   0x57a(%eax)
    fcomps data_9103c
    fnstsw %ax
    sahf
    jae    jump_241b7
    test   %edx,%edx
    jl     jump_241cf
  jump_241b7:
    flds   0x57a(%ebx)
    fcomps data_91040
    fnstsw %ax
    sahf
    jbe    jump_241db
    cmpl   $0x0,0x4(%esp)
    jle    jump_241db
  jump_241cf:
    andb   $0xef,0xc0(%ebx)
    add    $0x8,%esp
    pop    %ebx
    ret
  jump_241db:
    fildl  0x4(%esp)
    mov    0x574(%ebx),%eax
    fld    %st(0)
    fmuls  data_12fc1c
    sar    $0x10,%eax
    fstp   %st(1)
    fadds  0x57a(%ebx)
    push   %eax
    fstps  0x57a(%ebx)
    push   $0x47c35000
    push   $0x3f800000
    lea    0xda(%ebx),%eax
    push   0x57a(%ebx)
    call   func_1b808
    lea    0x172(%ebx),%eax
    call   func_254b0
    add    $0x8,%esp
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2422c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xfc,%esp
    mov    %eax,%edi
    xor    %edx,%edx
    mov    %edx,0x9c(%esp)
    mov    %edx,0xa0(%esp)
    mov    %edx,0xa4(%esp)
    mov    %edx,0x30(%esp)
    mov    %edx,0x34(%esp)
    mov    %edx,0x38(%esp)
    lea    0x172(%eax),%edx
    mov    0xb3(%eax),%esi
    mov    %edx,%eax
    call   func_254b0
    lea    0xda(%edi),%eax
    xor    %ebx,%ebx
    call   func_1b864
    mov    %edi,%eax
    mov    %ebx,0xc8(%esp)
    add    $0x11a,%eax
    mov    %edx,0xcc(%esp)
    mov    %eax,0xdc(%esp)
    lea    -0x15(%esi),%eax
    mov    %edx,0xd4(%esp)
    jmp    jump_248fc
  jump_242a8:
    lea    0x9c(%esp),%ebx
    mov    (%esi),%eax
    mov    0xdc(%esp),%edx
    mov    %eax,0xd8(%esp)
    add    $0x8,%eax
    call   func_53384
    movl   $0xffffffff,0x11(%esi)
    flds   0xa4(%esp)
    fcomps 0x106(%edi)
    fnstsw %ax
    sahf
    jbe    jump_248e0
    flds   0xa4(%esp)
    fcomps 0x10a(%edi)
    fnstsw %ax
    sahf
    jae    jump_248e0
    lea    0xf4(%esp),%eax
    push   %eax
    lea    0xfc(%esp),%eax
    push   %eax
    mov    0x576(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x574(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xac(%esp),%eax
    push   0x102(%edi)
    call   func_533d4
    mov    0xf8(%esp),%eax
    mov    %ax,0x5(%esi)
    mov    0xf4(%esp),%eax
    mov    %ax,0x7(%esi)
    mov    0xa4(%esp),%eax
    mov    %esi,%edx
    mov    %eax,0xd(%esi)
    mov    0xd4(%esp),%eax
    movl   $0x0,0x11(%esi)
    call   func_254bc
    jmp    jump_248e0
  jump_2436a:
    mov    (%esi),%ebp
    lea    0x9c(%esp),%ebx
    mov    0x0(%ebp),%eax
    mov    0xdc(%esp),%edx
    add    $0x8,%eax
    call   func_53384
    lea    0x30(%esp),%ebx
    mov    0x4(%ebp),%eax
    mov    0xdc(%esp),%edx
    add    $0x8,%eax
    call   func_53384
    movl   $0xffffffff,0x11(%esi)
    flds   0xa4(%esp)
    fcomps 0x106(%edi)
    fnstsw %ax
    sahf
    jbe    jump_248e0
    flds   0xa4(%esp)
    fcomps 0x10a(%edi)
    fnstsw %ax
    sahf
    jae    jump_248e0
    flds   0x38(%esp)
    fcomps 0x106(%edi)
    fnstsw %ax
    sahf
    jbe    jump_248e0
    flds   0x38(%esp)
    fcomps 0x10a(%edi)
    fnstsw %ax
    sahf
    jae    jump_248e0
    lea    0xf4(%esp),%eax
    push   %eax
    lea    0xfc(%esp),%eax
    push   %eax
    mov    0x576(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x574(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xac(%esp),%eax
    push   0x102(%edi)
    call   func_533d4
    lea    0xec(%esp),%eax
    push   %eax
    lea    0xf4(%esp),%eax
    push   %eax
    mov    0x576(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x574(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0x40(%esp),%eax
    push   0x102(%edi)
    call   func_533d4
    mov    0xf8(%esp),%eax
    mov    %ax,0x5(%esi)
    mov    0xf4(%esp),%eax
    mov    %ax,0x7(%esi)
    mov    0xf0(%esp),%eax
    mov    %ax,0x9(%esi)
    mov    0xec(%esp),%eax
    mov    %ax,0xb(%esi)
    flds   0xa4(%esp)
    fadds  0x38(%esp)
    fmuls  data_91060
    mov    %esi,%edx
    movl   $0x0,0x11(%esi)
    mov    0xd4(%esp),%eax
    fstps  0xd(%esi)
    call   func_254bc
    jmp    jump_248e0
  jump_244b7:
    mov    (%esi),%edx
    cmpb   $0x5,0x58(%edx)
    jne    jump_247e9
    xor    %eax,%eax
    mov    0x59(%edx),%ebx
    mov    %eax,0x84(%esp)
    mov    %eax,0x88(%esp)
    mov    %eax,0x8c(%esp)
    mov    %eax,0x48(%esp)
    mov    %eax,0x4c(%esp)
    mov    %eax,0x50(%esp)
    testl  $0x7fffffff,0xa2(%edx)
    jne    jump_2451a
    mov    0x4(%ebx),%ebp
    mov    0x8(%ebp),%eax
    mov    %eax,0x84(%esp)
    mov    0xc(%ebp),%eax
    mov    %eax,0x88(%esp)
    mov    0x10(%ebp),%eax
    mov    %eax,0x8c(%esp)
    mov    (%ebx),%ebx
    jmp    jump_2453d
  jump_2451a:
    mov    (%ebx),%ebp
    mov    0x8(%ebp),%eax
    mov    %eax,0x84(%esp)
    mov    0xc(%ebp),%eax
    mov    %eax,0x88(%esp)
    mov    0x10(%ebp),%eax
    mov    %eax,0x8c(%esp)
    mov    0x4(%ebx),%ebx
  jump_2453d:
    mov    0x8(%ebx),%eax
    mov    %eax,0x48(%esp)
    mov    0xc(%ebx),%eax
    mov    %eax,0x4c(%esp)
    add    $0x8,%ebp
    mov    0x10(%ebx),%eax
    add    $0x8,%ebx
    mov    %eax,0x50(%esp)
    flds   0x48(%esp)
    fsubs  0x84(%esp)
    mov    %esp,%eax
    fstps  0x90(%esp)
    flds   0x4c(%esp)
    fsubs  0x88(%esp)
    mov    %eax,0xa8(%esp)
    fstps  0x94(%esp)
    flds   0x50(%esp)
    fsubs  0x8c(%esp)
    mov    0x90(%esp),%eax
    fstps  0x98(%esp)
    flds   0x94(%esp)
    fmul   %st(0),%st
    mov    %eax,(%esp)
    mov    0x94(%esp),%eax
    flds   0x90(%esp)
    fmul   %st(0),%st
    mov    %eax,0x4(%esp)
    faddp  %st,%st(1)
    mov    0x98(%esp),%eax
    flds   0x98(%esp)
    fmul   %st(0),%st
    mov    %eax,0x8(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    lea    0x3c(%esp),%eax
    flds   0x48(%esp)
    fsubs  0x84(%esp)
    mov    %eax,0xb0(%esp)
    fstps  0x6c(%esp)
    flds   0x4c(%esp)
    mov    0x6c(%esp),%eax
    fsubs  0x88(%esp)
    mov    %eax,0x3c(%esp)
    fstps  0x70(%esp)
    flds   0x50(%esp)
    mov    0x70(%esp),%eax
    fsubs  0x8c(%esp)
    mov    %eax,0x40(%esp)
    fstps  0x74(%esp)
    mov    0x74(%esp),%eax
    mov    %eax,0x44(%esp)
    lea    0x60(%esp),%eax
    mov    %eax,0xb4(%esp)
    mov    0x9e(%edx),%eax
    mov    %eax,0xb8(%esp)
    flds   0x6c(%esp)
    fmuls  0xb8(%esp)
    fstps  0x78(%esp)
    flds   0x70(%esp)
    fmuls  0xb8(%esp)
    fstps  0x7c(%esp)
    flds   0x74(%esp)
    fmuls  0xb8(%esp)
    fstps  0x80(%esp)
    fld1
    fdivp  %st,%st(1)
    mov    0x78(%esp),%eax
    mov    %eax,0x60(%esp)
    mov    0x7c(%esp),%eax
    mov    %eax,0x64(%esp)
    mov    0x80(%esp),%eax
    flds   0x78(%esp)
    fmul   %st(1),%st
    mov    %eax,0x68(%esp)
    lea    0x18(%esp),%eax
    fstps  0x24(%esp)
    flds   0x7c(%esp)
    fmul   %st(1),%st
    mov    %eax,0xbc(%esp)
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    fmuls  0x80(%esp)
    mov    %eax,0x18(%esp)
    mov    0x28(%esp),%eax
    lea    0x9c(%esp),%ebx
    mov    %eax,0x1c(%esp)
    fstps  0x2c(%esp)
    flds   0x84(%esp)
    mov    0x2c(%esp),%eax
    fadds  0x24(%esp)
    mov    %eax,0x20(%esp)
    fstps  0x54(%esp)
    lea    0xc(%esp),%eax
    flds   0x88(%esp)
    mov    %eax,0xc0(%esp)
    fadds  0x28(%esp)
    mov    0x54(%esp),%eax
    fstps  0x58(%esp)
    flds   0x8c(%esp)
    mov    %eax,0xc(%esp)
    fadds  0x2c(%esp)
    mov    0x58(%esp),%eax
    fstps  0x5c(%esp)
    mov    %eax,0x10(%esp)
    mov    0x5c(%esp),%eax
    mov    0xdc(%esp),%edx
    mov    %eax,0x14(%esp)
    lea    0xc(%esp),%eax
    call   func_53384
    movl   $0xffffffff,0x11(%esi)
    flds   0xa4(%esp)
    fcomps 0x106(%edi)
    fnstsw %ax
    sahf
    jbe    jump_248b7
    flds   0xa4(%esp)
    fcomps 0x10a(%edi)
    fnstsw %ax
    sahf
    jae    jump_248b7
    lea    0xf4(%esp),%eax
    push   %eax
    lea    0xfc(%esp),%eax
    push   %eax
    mov    0x576(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x574(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xac(%esp),%eax
    push   0x102(%edi)
    call   func_533d4
    mov    0xf8(%esp),%eax
    add    $0x3,%eax
    mov    %ax,0x5(%esi)
    mov    0xf4(%esp),%eax
    mov    %ax,0x7(%esi)
    mov    0xa4(%esp),%eax
    movl   $0x0,0x11(%esi)
    mov    %eax,0xd(%esi)
    mov    0xcc(%esp),%eax
    mov    %esi,%edx
    call   func_254bc
    jmp    jump_248e0
  jump_247e9:
    mov    0xe4(%esp),%eax
    mov    0x11(%eax),%ebp
    mov    %eax,0xe0(%esp)
    test   %ebp,%ebp
    jne    jump_248b7
    cmpb   $0x0,0x4(%eax)
    je     jump_24819
    mov    $0x56e,%ebx
    mov    $data_91044,%edx
    xor    %eax,%eax
    call   func_26198
  jump_24819:
    mov    0xe0(%esp),%eax
    mov    $0x4,%edx
    mov    0xd8(%esp),%ebp
    xor    %ebx,%ebx
    mov    (%eax),%eax
    movzbl 0x14(%ebp),%ebp
    mov    0xd8(%edi),%bl
    mov    %eax,0xd0(%esp)
    mov    %ebx,0xe8(%esp)
    xor    %eax,%eax
    jmp    jump_24852
  jump_2484c:
    inc    %eax
    cmp    $0x7,%eax
    jge    jump_2486d
  jump_24852:
    mov    $0x1,%ebx
    mov    %al,%cl
    shl    %cl,%ebx
    mov    0xe8(%esp),%ecx
    and    %ebp,%ebx
    test   %ecx,%ebx
    je     jump_2484c
    add    $0x2,%edx
    jmp    jump_2484c
  jump_2486d:
    mov    0xd0(%esp),%ebp
    cmp    data_d3660,%ebp
    jne    jump_2487f
    add    $0x2,%edx
  jump_2487f:
    mov    0xe0(%esp),%eax
    mov    0x5(%eax),%ax
    add    %edx,%eax
    mov    %ax,0x5(%esi)
    mov    0xe0(%esp),%eax
    mov    0x7(%eax),%ax
    mov    %ax,0x7(%esi)
    mov    0xe0(%esp),%eax
    flds   0xd(%eax)
    fld1
    faddp  %st,%st(1)
    movl   $0x0,0x11(%esi)
    fstps  0xd(%esi)
  jump_248b7:
    mov    0xcc(%esp),%eax
    mov    %esi,%edx
    call   func_254bc
    jmp    jump_248e0
  jump_248c7:
    test   %al,%al
    je     jump_242a8
  jump_248cf:
    mov    $0x588,%ebx
    mov    $data_91052,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_248e0:
    mov    0xc8(%esp),%ebp
    mov    0xe4(%esp),%eax
    add    $0x15,%esi
    inc    %ebp
    add    $0x15,%eax
    mov    %ebp,0xc8(%esp)
  jump_248fc:
    mov    %eax,0xe4(%esp)
    mov    0xb5(%edi),%eax
    mov    0xc8(%esp),%ecx
    sar    $0x10,%eax
    cmp    %ecx,%eax
    jle    jump_2492e
    mov    0x4(%esi),%al
    cmp    $0x1,%al
    jb     jump_248c7
    jbe    jump_2436a
    cmp    $0x2,%al
    je     jump_244b7
    jmp    jump_248cf
  jump_2492e:
    mov    0xd4(%esp),%eax
    call   func_254dc
    add    $0xfc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_24948:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%ebp
    mov    %edx,0x14(%esp)
    mov    %ebx,0x18(%esp)
    cmpl   $0xffffffff,0xd4(%eax)
    je     jump_24bd7
    mov    0xbb(%eax),%ebx
    test   %ebx,%ebx
    je     jump_24a0a
    mov    0x14(%esp),%ecx
    mov    0x18(%esp),%esi
    mov    $0x28,%edi
    mov    0x3(%ebx),%edx
    mov    0x5(%ebx),%eax
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %ecx,%edx
    mov    0x4(%ebx),%cl
    sub    %esi,%eax
    cmp    $0x2,%cl
    jne    jump_249b4
    mov    data_965f5,%ebx
    sar    $0x18,%ebx
    add    %ebx,%edx
    mov    data_965fd,%ebx
    sar    $0x18,%ebx
    mov    $0x14,%edi
    add    %ebx,%eax
  jump_249b4:
    imul   %edx,%edx
    imul   %eax,%eax
    add    %edx,%eax
    cmp    %edi,%eax
    jle    jump_24bd7
    mov    $data_10ae70,%eax
    mov    0x57e(%ebp),%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    movl   $0x0,0xbb(%ebp)
    call   func_5a270
    mov    0x10(%ebp),%eax
    sub    $0x82,%eax
    mov    %eax,data_d85e8
    mov    0x14(%ebp),%eax
    mov    $0xa,%edx
    sub    $0x1b,%eax
    mov    0xa7(%ebp),%ebx
    mov    %eax,data_d85ec
    mov    %ebp,%eax
    call   *0xc(%ebx)
  jump_24a0a:
    mov    0xb5(%ebp),%edx
    sar    $0x10,%edx
    dec    %edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    0xb3(%ebp),%ebx
    shl    $0x2,%eax
    mov    0xb7(%ebp),%si
    add    %edx,%eax
    dec    %esi
    add    %eax,%ebx
    jmp    jump_24a38
  jump_24a34:
    dec    %esi
    sub    $0x15,%ebx
  jump_24a38:
    movswl %si,%eax
    test   %eax,%eax
    jl     jump_24a97
    cmpb   $0x1,0x4(%ebx)
    je     jump_24a34
    mov    0x14(%esp),%edi
    mov    0x18(%esp),%ecx
    mov    0x3(%ebx),%eax
    mov    0x5(%ebx),%edx
    sar    $0x10,%eax
    sar    $0x10,%edx
    sub    %edi,%eax
    sub    %ecx,%edx
    mov    0x4(%ebx),%cl
    mov    $0x28,%edi
    cmp    $0x2,%cl
    jne    jump_24a85
    mov    data_965f5,%edi
    sar    $0x18,%edi
    add    %edi,%eax
    mov    data_965fd,%edi
    sar    $0x18,%edi
    add    %edi,%edx
    mov    $0x14,%edi
  jump_24a85:
    imul   %eax,%eax
    imul   %edx,%edx
    add    %edx,%eax
    cmp    %edi,%eax
    jge    jump_24a34
    mov    %ebx,0xbb(%ebp)
  jump_24a97:
    cmpl   $0x0,0xbb(%ebp)
    je     jump_24bd7
    mov    $data_10ae70,%eax
    mov    0x57e(%ebp),%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    inc    %edx
    call   func_5a270
    mov    0xbb(%ebp),%eax
    cmpb   $0x0,0x4(%eax)
    jne    jump_24bd7
    mov    %esp,%edi
    mov    $data_96654,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0xbb(%ebp),%eax
    mov    $0x1,%dl
    xor    %ebx,%ebx
    mov    (%eax),%eax
    xor    %ecx,%ecx
    mov    data_968dc,%bl
    mov    0x17(%eax),%cl
    mov    $0x7,%esi
    test   %ebx,%ecx
    je     jump_24b44
    mov    %esp,%edi
    lea    0x1c(%eax),%esi
    push   %edi
  jump_24afb:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_24b13
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_24afb
  jump_24b13:
    pop    %edi
    xor    %esi,%esi
    jmp    jump_24b1b
  jump_24b18:
    inc    %esi
    add    %dl,%dl
  jump_24b1b:
    movswl %si,%eax
    cmp    $0x7,%eax
    jge    jump_24b44
    xor    %eax,%eax
    movsbl %dl,%ebx
    mov    0xd9(%ebp),%al
    and    %eax,%ebx
    mov    0xbb(%ebp),%eax
    mov    (%eax),%eax
    mov    0x14(%eax),%al
    and    $0xff,%eax
    test   %eax,%ebx
    je     jump_24b18
  jump_24b44:
    movswl %si,%eax
    cmp    $0x7,%eax
    cmpb   $0x0,(%esp)
    je     jump_24b87
    push   $0x0
    lea    0x4(%esp),%ecx
    mov    $data_10deb6,%eax
    mov    $data_10debe,%edi
    mov    $data_d8668,%esi
    push   $0xff
    mov    0x14(%ebp),%ebx
    mov    0x10(%ebp),%edx
    push   $0xffffffff
    sub    $0x1b,%ebx
    sub    $0x82,%edx
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_24b87:
    mov    $data_d84c4,%ecx
    push   $0x0
    mov    $data_10de9e,%edi
    mov    0xbb(%ebp),%edx
    mov    $data_d8668,%esi
    push   $0xff
    mov    (%edx),%edx
    mov    0x14(%ebp),%ebx
    push   $0xffffffff
    mov    (%edx),%edx
    sub    $0xc,%ebx
    lea    0x0(,%edx,4),%eax
    push   $0x0
    add    %edx,%eax
    mov    0x10(%ebp),%edx
    shl    $0x2,%eax
    sub    $0x82,%edx
    add    %eax,%ecx
    mov    $data_10de96,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_24bd7:
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_24be0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    0xbb(%eax),%eax
    cmpb   $0x0,0x4(%eax)
    jne    jump_24d29
    cmpl   $0x0,0x582(%esi)
    jne    jump_24ca3
    mov    data_10f096,%edx
    sar    $0x10,%edx
    cmp    $0x1,%edx
    jne    jump_24c52
    mov    (%eax),%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    data_968dc,%dl
    mov    0x17(%eax),%bl
    test   %edx,%ebx
    je     jump_24d29
    mov    $0x1,%ecx
    mov    $0x10,%ebx
    mov    %eax,data_d3660
    mov    $data_10ae70,%eax
    mov    %ecx,%edx
    movl   $0x0,0xbb(%esi)
    call   func_56b60
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_24c52:
    cmp    $0xd,%edx
    jne    jump_24d29
    mov    %edx,%ebx
    mov    (%eax),%eax
    xor    %ecx,%ecx
    mov    $data_91064,%edx
    mov    %eax,data_d3660
    mov    $data_10ae70,%eax
    call   func_56e18
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_24c8a
    mov    $0x612,%ebx
    mov    $data_9106e,%edx
    call   func_26198
  jump_24c8a:
    mov    %ecx,%eax
    call   func_32a1c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_24ca3:
    mov    (%eax),%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    data_968dc,%dl
    mov    0x16(%eax),%bl
    test   %edx,%ebx
    je     jump_24d29
    mov    %eax,%edx
    xor    %ecx,%ecx
    jmp    jump_24cc4
  jump_24cc0:
    add    $0x4,%edx
    inc    %ecx
  jump_24cc4:
    mov    0x42(%eax),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%ecx
    jge    jump_24d29
    mov    0x2c(%edx),%ebx
    cmp    (%ebx),%eax
    jne    jump_24ce2
    mov    0x4(%ebx),%ebp
    mov    0x586(%esi),%edi
    cmp    (%edi),%ebp
    je     jump_24cf3
  jump_24ce2:
    mov    (%ebx),%ebp
    mov    0x586(%esi),%edi
    cmp    (%edi),%ebp
    jne    jump_24cc0
    cmp    0x4(%ebx),%eax
    jne    jump_24cc0
  jump_24cf3:
    mov    0x586(%esi),%ecx
    mov    (%ecx),%ecx
    mov    %eax,%edx
    mov    %ecx,%eax
    call   func_1d654
    mov    %esi,%eax
    movl   $0x0,0x582(%esi)
    call   func_24d30
    mov    %esi,%eax
    call   func_2422c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
  jump_24d29:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_24d30:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x1c0,%esp
    mov    %eax,%ecx
    movw   $0x0,0xb7(%eax)
    mov    data_a62a1,%dx
    xor    %edi,%edi
    test   %dx,%dx
    jle    jump_24e88
    jmp    jump_24d6b
  jump_24d5a:
    mov    data_a62a1,%bx
    inc    %edi
    cmp    %bx,%di
    jge    jump_24e88
  jump_24d6b:
    mov    0xb7(%ecx),%ax
    cmp    0xb9(%ecx),%ax
    jl     jump_24d8c
    mov    $0x659,%ebx
    mov    $data_9107c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_24d8c:
    movswl %di,%esi
    imul   $0x60,%esi,%esi
    mov    0xb5(%ecx),%eax
    sar    $0x10,%eax
    imul   $0x15,%eax,%eax
    mov    0xb3(%ecx),%edx
    add    $data_a3d21,%esi
    mov    %esi,(%edx,%eax,1)
    mov    0xb5(%ecx),%eax
    sar    $0x10,%eax
    imul   $0x15,%eax,%eax
    mov    0xb3(%ecx),%edx
    movb   $0x0,0x4(%edx,%eax,1)
    mov    0xb7(%ecx),%bx
    inc    %ebx
    mov    %bx,0xb7(%ecx)
    cmpb   $0x0,0x15(%esi)
    je     jump_24d5a
    cmp    0xb9(%ecx),%bx
    jl     jump_24df3
    mov    $0x66b,%ebx
    mov    $data_9108a,%edx
    xor    %eax,%eax
    call   func_26198
  jump_24df3:
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_1d794
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_24e44
    cmpl   $0xffffffff,data_a0cfc
    jne    jump_24e44
    mov    data_a2f6c,%ebx
    push   %ebx
    push   $data_91098
    lea    0x1b4(%esp),%eax
    push   %eax
    mov    $data_910a4,%edx
    call   func_76d09
    add    $0xc,%esp
    lea    0x1ac(%esp),%eax
    mov    $0x676,%ebx
    call   func_54048
    xor    %eax,%eax
    call   func_261a8
  jump_24e44:
    test   %esi,%esi
    jle    jump_24d5a
    mov    0xb5(%ecx),%eax
    sar    $0x10,%eax
    imul   $0x15,%eax,%eax
    mov    0xb3(%ecx),%edx
    add    %eax,%edx
    mov    (%esp),%eax
    mov    %eax,(%edx)
    mov    0xb5(%ecx),%eax
    sar    $0x10,%eax
    imul   $0x15,%eax,%eax
    mov    0xb3(%ecx),%edx
    movb   $0x2,0x4(%edx,%eax,1)
    incw   0xb7(%ecx)
    jmp    jump_24d5a
  jump_24e88:
    mov    data_a792f,%di
    xor    %esi,%esi
    test   %di,%di
    jle    jump_24f24
    jmp    jump_24ead
  jump_24e9c:
    mov    data_a792f,%di
    inc    %esi
    cmp    %di,%si
    jge    jump_24f24
  jump_24ead:
    movswl %si,%eax
    imul   $0x27,%eax,%eax
    mov    $data_a62a3,%edi
    xor    %edx,%edx
    add    %eax,%edi
    xor    %eax,%eax
    mov    data_968dc,%dl
    mov    0x20(%edi),%al
    test   %edx,%eax
    je     jump_24e9c
    mov    0xb7(%ecx),%ax
    cmp    0xb9(%ecx),%ax
    jl     jump_24eec
    mov    $0x68b,%ebx
    mov    $data_910b2,%edx
    xor    %eax,%eax
    call   func_26198
  jump_24eec:
    mov    0xb5(%ecx),%eax
    sar    $0x10,%eax
    imul   $0x15,%eax,%eax
    mov    0xb3(%ecx),%edx
    mov    %edi,(%edx,%eax,1)
    mov    0xb5(%ecx),%eax
    sar    $0x10,%eax
    imul   $0x15,%eax,%eax
    mov    0xb3(%ecx),%edx
    movb   $0x1,0x4(%edx,%eax,1)
    incw   0xb7(%ecx)
    jmp    jump_24e9c
  jump_24f24:
    xor    %edi,%edi
    xor    %esi,%esi
    jmp    jump_24f2b
  jump_24f2a:
    inc    %esi
  jump_24f2b:
    movswl %si,%eax
    cmp    $0x6b,%eax
    jge    jump_24fbf
    cmp    data_d35e7,%di
    jge    jump_24fbf
    mov    0xb7(%ecx),%ax
    cmp    0xb9(%ecx),%ax
    jl     jump_24f65
    mov    $0x698,%ebx
    mov    $data_910c0,%edx
    xor    %eax,%eax
    call   func_26198
  jump_24f65:
    movswl %si,%eax
    imul   $0x162,%eax,%eax
    add    $data_ca1f1,%eax
    mov    0x54(%eax),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_24f2a
    mov    0x58(%eax),%dl
    inc    %edi
    cmp    $0x5,%dl
    jne    jump_24f2a
    mov    0xb5(%ecx),%edx
    sar    $0x10,%edx
    imul   $0x15,%edx,%edx
    mov    0xb3(%ecx),%ebx
    mov    %eax,(%edx,%ebx,1)
    mov    0xb5(%ecx),%edx
    sar    $0x10,%edx
    imul   $0x15,%edx,%edx
    mov    0xb3(%ecx),%eax
    movb   $0x2,0x4(%edx,%eax,1)
    incw   0xb7(%ecx)
    jmp    jump_24f2a
  jump_24fbf:
    add    $0x1c0,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_24fcc:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x194,%esp
    mov    %eax,%esi
    mov    %edx,0x180(%esp)
    lea    0xda(%eax),%ecx
    add    $0x14e,%eax
    mov    %eax,0x184(%esp)
    mov    %esi,%eax
    add    $0x10e,%eax
    lea    0xf2(%esi),%edi
    mov    %eax,0x190(%esp)
    mov    %esi,%eax
    add    $0xe6,%eax
    lea    0x166(%esi),%ebp
    mov    %eax,0x18c(%esp)
    mov    %esi,%eax
    add    $0x15a,%eax
    mov    %eax,0x188(%esp)
    cmp    $0xffffffff,%ebx
    jne    jump_25284
    lea    0xc0(%esp),%eax
    mov    $0xbe,%ebx
    add    $0x1e,%eax
    lea    0xc0(%esp),%edx
    call   func_1b4f0
    mov    0x180(%esp),%eax
    call   func_1bf94
    mov    0xc0(%esp),%eax
    mov    %eax,0xc0(%esi)
    mov    0xc4(%esp),%eax
    mov    %eax,0xc4(%esi)
    mov    0xc8(%esp),%eax
    mov    %eax,0x58a(%esi)
    mov    0xcc(%esp),%eax
    mov    %eax,0xc8(%esi)
    mov    0xd0(%esp),%eax
    mov    %eax,0xcc(%esi)
    mov    0xd4(%esp),%eax
    mov    %eax,0xd0(%esi)
    mov    0xd8(%esp),%eax
    mov    %eax,0xd4(%esi)
    mov    0xdc(%esp),%al
    mov    %al,0xd8(%esi)
    mov    0xdd(%esp),%al
    mov    %al,0xd9(%esi)
    mov    0xde(%esp),%eax
    mov    %eax,(%ecx)
    mov    0xe2(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0xe6(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    0x18c(%esp),%edx
    mov    0xea(%esp),%eax
    mov    %eax,(%edx)
    mov    0xee(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0xf2(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0xf6(%esp),%eax
    mov    %eax,(%edi)
    mov    0xfa(%esp),%eax
    mov    %eax,0x4(%edi)
    mov    0xfe(%esp),%eax
    mov    %eax,0x8(%edi)
    mov    0x102(%esp),%eax
    mov    %eax,0x24(%ecx)
    mov    0x106(%esp),%eax
    mov    %eax,0x28(%ecx)
    mov    0x10a(%esp),%eax
    mov    %eax,0x2c(%ecx)
    mov    0x10e(%esp),%eax
    mov    %eax,0x30(%ecx)
    mov    0x190(%esp),%edx
    mov    0x112(%esp),%eax
    mov    %eax,(%edx)
    mov    0x116(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x11a(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x11e(%esp),%eax
    mov    %eax,0x40(%ecx)
    mov    0x122(%esp),%eax
    mov    %eax,0x44(%ecx)
    mov    0x126(%esp),%eax
    mov    %eax,0x48(%ecx)
    mov    0x12a(%esp),%eax
    mov    %eax,0x4c(%ecx)
    mov    0x12e(%esp),%eax
    mov    %eax,0x50(%ecx)
    mov    0x132(%esp),%eax
    mov    %eax,0x54(%ecx)
    mov    0x136(%esp),%eax
    mov    %eax,0x58(%ecx)
    mov    0x13a(%esp),%eax
    mov    %eax,0x5c(%ecx)
    mov    0x13e(%esp),%eax
    mov    %eax,0x60(%ecx)
    mov    0x142(%esp),%eax
    mov    %eax,0x64(%ecx)
    mov    0x146(%esp),%eax
    mov    %eax,0x68(%ecx)
    mov    0x14a(%esp),%eax
    mov    %eax,0x6c(%ecx)
    mov    0x14e(%esp),%eax
    mov    %eax,0x70(%ecx)
    mov    0x184(%esp),%edx
    mov    0x152(%esp),%eax
    mov    %eax,(%edx)
    mov    0x156(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x15a(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x188(%esp),%edx
    mov    0x15e(%esp),%eax
    mov    %eax,(%edx)
    mov    0x162(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x166(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x16a(%esp),%eax
    mov    %eax,0x0(%ebp)
    mov    0x16e(%esp),%eax
    mov    %eax,0x4(%ebp)
    mov    0x172(%esp),%eax
    mov    %eax,0x8(%ebp)
    xor    %edx,%edx
    fildl  0x176(%esp)
    lea    0xde(%esp),%eax
    fstps  0x57a(%esi)
    call   func_1b66c
    add    $0x194,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_25284:
    mov    %esp,%eax
    add    $0x1e,%eax
    call   func_1b4f0
    mov    0xc0(%esi),%eax
    mov    %eax,(%esp)
    mov    0xc4(%esi),%eax
    mov    %eax,0x4(%esp)
    mov    0x58a(%esi),%eax
    mov    %eax,0x8(%esp)
    mov    0xc8(%esi),%eax
    mov    %eax,0xc(%esp)
    mov    0xcc(%esi),%eax
    mov    %eax,0x10(%esp)
    mov    0xd0(%esi),%eax
    mov    %eax,0x14(%esp)
    mov    0xd4(%esi),%eax
    mov    %eax,0x18(%esp)
    mov    0xd8(%esi),%al
    mov    %al,0x1c(%esp)
    mov    0xd9(%esi),%al
    mov    %al,0x1d(%esp)
    mov    (%ecx),%eax
    mov    %eax,0x1e(%esp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x22(%esp)
    mov    0x8(%ecx),%eax
    mov    %eax,0x26(%esp)
    mov    0x18c(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x2a(%esp)
    mov    0x18c(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x2e(%esp)
    mov    0x18c(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x32(%esp)
    mov    (%edi),%eax
    mov    %eax,0x36(%esp)
    mov    0x4(%edi),%eax
    mov    %eax,0x3a(%esp)
    mov    0x8(%edi),%eax
    mov    %eax,0x3e(%esp)
    mov    0x24(%ecx),%eax
    mov    %eax,0x42(%esp)
    mov    0x28(%ecx),%eax
    mov    %eax,0x46(%esp)
    mov    0x2c(%ecx),%eax
    mov    %eax,0x4a(%esp)
    mov    0x30(%ecx),%eax
    mov    %eax,0x4e(%esp)
    mov    0x190(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x52(%esp)
    mov    0x190(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x56(%esp)
    mov    0x190(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x5a(%esp)
    mov    0x40(%ecx),%eax
    mov    %eax,0x5e(%esp)
    mov    0x44(%ecx),%eax
    mov    %eax,0x62(%esp)
    mov    0x48(%ecx),%eax
    mov    %eax,0x66(%esp)
    mov    0x4c(%ecx),%eax
    mov    %eax,0x6a(%esp)
    mov    0x50(%ecx),%eax
    mov    %eax,0x6e(%esp)
    mov    0x54(%ecx),%eax
    mov    %eax,0x72(%esp)
    mov    0x58(%ecx),%eax
    mov    %eax,0x76(%esp)
    mov    0x5c(%ecx),%eax
    mov    %eax,0x7a(%esp)
    mov    0x60(%ecx),%eax
    mov    %eax,0x7e(%esp)
    mov    0x64(%ecx),%eax
    mov    %eax,0x82(%esp)
    mov    0x68(%ecx),%eax
    mov    %eax,0x86(%esp)
    mov    0x6c(%ecx),%eax
    mov    %eax,0x8a(%esp)
    mov    0x70(%ecx),%eax
    mov    %eax,0x8e(%esp)
    mov    0x184(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x92(%esp)
    mov    0x184(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x96(%esp)
    mov    0x184(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x9a(%esp)
    mov    0x188(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x9e(%esp)
    mov    0x188(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0xa2(%esp)
    mov    0x188(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0xa6(%esp)
    mov    0x0(%ebp),%eax
    mov    %eax,0xaa(%esp)
    mov    0x4(%ebp),%eax
    mov    %eax,0xae(%esp)
    mov    0x8(%ebp),%eax
    mov    $0xbe,%ebx
    mov    %eax,0xb2(%esp)
    mov    %esp,%edx
    flds   0x57a(%esi)
    mov    0x180(%esp),%eax
    call   func_76e98
    fistpl 0xb6(%esp)
    call   func_1c098
    lea    0x1e(%esp),%eax
    xor    %edx,%edx
    call   func_1b66c
    add    $0x194,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_254a4:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_254b0
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_254b0:
/*----------------------------------------------------------------*/
    movl   $0x0,0x400(%eax)
    ret


/*----------------------------------------------------------------*/
func_254bc:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    0x400(%eax),%ebx
    cmp    $0x100,%ebx
    jge    jump_254d8
    test   %edx,%edx
    je     jump_254d8
    mov    %edx,(%eax,%ebx,4)
    incl   0x400(%eax)
  jump_254d8:
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_254dc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    $func_22430,%ecx
    mov    $0x4,%ebx
    mov    0x400(%eax),%edx
    call   func_76f56
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_254f8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x58,%esp
    mov    %eax,0x4(%esp)
    mov    %edx,0x3c(%esp)
    xor    %eax,%eax
    mov    0xbf(%edx),%al
    push   %eax
    lea    0x4(%edx),%esi
    push   %esi
    call   func_5e9d0
    add    $0x8,%esp
    xor    %edx,%edx
    mov    0x4(%esp),%eax
    mov    data_104bea,%dl
    mov    %eax,0x8(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f74(,%eax,2),%al
    mov    %al,0x4c(%esp)
    shl    $0x2,%al
    add    $0x13,%al
    mov    %al,0x4c(%esp)
    mov    0x4(%esp),%eax
    xor    %edx,%edx
    mov    0x400(%eax),%ebx
    mov    %edx,0x28(%esp)
    test   %ebx,%ebx
    jle    jump_25bee
    mov    %esi,0x2c(%esp)
    mov    %esi,0x24(%esp)
    mov    %esi,0x20(%esp)
    mov    %esi,0x10(%esp)
    mov    %esi,0x30(%esp)
    mov    %esi,(%esp)
    mov    %esi,0x18(%esp)
    mov    %esi,0x1c(%esp)
  jump_25584:
    mov    0x8(%esp),%esi
    mov    (%esi),%esi
    flds   0xd(%esi)
    fadds  data_910ea
    mov    0x4(%esi),%al
    call   func_76e98
    fistpl 0xc(%esp)
    cmp    $0x1,%al
    jb     jump_25be1
    jbe    jump_25920
    cmp    $0x2,%al
    je     jump_25a36
  jump_255b5:
    mov    0x28(%esp),%ecx
    mov    0x8(%esp),%esi
    mov    0x4(%esp),%edx
    inc    %ecx
    add    $0x4,%esi
    mov    0x400(%edx),%edi
    mov    %ecx,0x28(%esp)
    mov    %esi,0x8(%esp)
    cmp    %edi,%ecx
    jge    jump_25bee
    jmp    jump_25584
  jump_255dd:
    mov    (%esi),%eax
    mov    %eax,0x14(%esp)
    mov    $0x3,%eax
    mov    0xc(%esp),%edx
    mov    %eax,0x38(%esp)
    cmp    $0xdc,%edx
    jle    jump_25600
    xor    %eax,%eax
    mov    %eax,0x38(%esp)
    jmp    jump_2561e
  jump_25600:
    test   %edx,%edx
    jle    jump_2560e
    movl   $0x1,0x38(%esp)
    jmp    jump_2561e
  jump_2560e:
    cmp    $0xffffff24,%edx
    jle    jump_2561e
    movl   $0x2,0x38(%esp)
  jump_2561e:
    mov    0x5(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x1c(%esp),%eax
    mov    (%eax),%eax
    mov    0x40(%esp),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    push   %eax
    mov    0x48(%esp),%eax
    mov    0xab(%eax),%ebx
    push   %ebx
    mov    0x10(%esp),%ecx
    push   %ecx
    call   func_5cb3c
    mov    data_10f098,%ax
    add    $0x14,%esp
    mov    %ax,0x44(%esp)
    mov    0x14(%esp),%eax
    xor    %edx,%edx
    mov    data_104bea,%cl
    mov    0x17(%eax),%dl
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    $0x4,%edi
    test   %eax,%edx
    jne    jump_2568e
    mov    0x42(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jne    jump_2572b
  jump_2568e:
    mov    0x3c(%esp),%eax
    cmpl   $0x0,0xcc(%eax)
    je     jump_2572b
    mov    0x14(%esp),%eax
    cmpb   $0x0,0x14(%eax)
    je     jump_2572b
    mov    $0x1,%bl
    xor    %ebp,%ebp
    mov    %bl,0x54(%esp)
    jmp    jump_256cf
  jump_256b7:
    mov    0x54(%esp),%cl
    add    %cl,%cl
    add    $0x1ee,%ebp
    mov    %cl,0x54(%esp)
    cmp    $0xd82,%ebp
    je     jump_2572b
  jump_256cf:
    mov    0x14(%esp),%eax
    xor    %edx,%edx
    xor    %ecx,%ecx
    mov    0x54(%esp),%dl
    mov    0x14(%eax),%cl
    mov    0x3c(%esp),%eax
    and    %ecx,%edx
    xor    %ecx,%ecx
    mov    0xd8(%eax),%cl
    test   %ecx,%edx
    je     jump_256b7
    mov    data_a2f74(%ebp),%al
    shl    $0x2,%al
    xor    %edx,%edx
    add    $0x13,%al
    mov    %al,%dl
    mov    0x38(%esp),%ebx
    sub    $0x3,%edx
    add    %ebx,%edx
    push   %edx
    push   %edi
    mov    0x5(%esi),%edx
    push   %edi
    sar    $0x10,%edx
    push   %edx
    mov    0x3(%esi),%edx
    sar    $0x10,%edx
    push   %edx
    mov    0x44(%esp),%ecx
    push   %ecx
    add    $0x2,%edi
    call   func_5f048
    add    $0x18,%esp
    jmp    jump_256b7
  jump_2572b:
    mov    0x14(%esp),%eax
    cmp    data_d3660,%eax
    jne    jump_25766
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    je     jump_25766
    push   $0xf3
    push   %edi
    mov    0x5(%esi),%eax
    push   %edi
    sar    $0x10,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x34(%esp),%eax
    push   %eax
    call   func_5f048
    add    $0x18,%esp
  jump_25766:
    mov    0x14(%esp),%eax
    xor    %edx,%edx
    mov    data_104bea,%cl
    mov    0x17(%eax),%dl
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    jne    jump_25790
    mov    0x42(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jne    jump_25866
  jump_25790:
    mov    0x14(%esp),%eax
    mov    0x14(%eax),%al
    and    $0x80,%al
    and    $0xff,%eax
    je     jump_25866
    mov    0x3c(%esp),%eax
    cmpl   $0xffffffff,0xd0(%eax)
    jne    jump_25866
    xor    %ebx,%ebx
    mov    data_a3cf4,%cx
    mov    %bx,0x48(%esp)
    test   %cx,%cx
    jg     jump_257e2
    jmp    jump_257fb
  jump_257ca:
    mov    0x48(%esp),%edi
    inc    %edi
    mov    data_a3cf4,%dx
    mov    %di,0x48(%esp)
    cmp    %dx,%di
    jl     jump_257e6
    jmp    jump_257fb
  jump_257e2:
    mov    0x14(%esp),%ebx
  jump_257e6:
    mov    0x46(%esp),%edx
    sar    $0x10,%edx
    imul   $0x1ee,%edx,%edx
    cmp    data_a2f79(%edx),%ebx
    jne    jump_257ca
  jump_257fb:
    mov    0x48(%esp),%eax
    cmp    data_a3cf4,%ax
    jl     jump_25819
    mov    $0x786,%ebx
    mov    $data_910ce,%edx
    xor    %eax,%eax
    call   func_26198
  jump_25819:
    mov    0x48(%esp),%cl
    mov    0x3c(%esp),%ebx
    xor    %eax,%eax
    mov    $0x1,%dl
    mov    0xd8(%ebx),%al
    shl    %cl,%dl
    and    $0xff,%edx
    test   %eax,%edx
    jne    jump_25844
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jne    jump_25866
  jump_25844:
    mov    0x46(%esp),%ecx
    mov    0x24(%esp),%eax
    mov    0x5(%esi),%ebx
    mov    0x3(%esi),%edx
    sar    $0x10,%ecx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    add    $0x3,%ebx
    sub    $0x7,%edx
    call   func_53e38
  jump_25866:
    mov    0x14(%esp),%eax
    xor    %edx,%edx
    mov    data_104bea,%cl
    mov    0x17(%eax),%dl
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_255b5
    mov    0x3c(%esp),%edx
    cmpl   $0x0,0xcc(%edx)
    je     jump_255b5
    mov    0x14(%esp),%ebx
    xor    %edx,%edx
    mov    0x14(%ebx),%dl
    test   %eax,%edx
    jne    jump_255b5
    movzbl 0x4c(%esp),%edi
    mov    0x5(%esi),%eax
    push   %edi
    sar    $0x10,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    sub    $0x4,%eax
    push   %eax
    mov    0x38(%esp),%ebp
    push   %ebp
    call   func_5be50
    mov    0x5(%esi),%eax
    add    $0x10,%esp
    sar    $0x10,%eax
    push   %edi
    sub    $0x4,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   %ebp
    call   func_5be50
    add    $0x10,%esp
    mov    0x5(%esi),%eax
    push   %edi
    sar    $0x10,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    add    $0x4,%eax
    push   %eax
    push   %ebp
    call   func_5be50
    mov    0x5(%esi),%eax
    add    $0x10,%esp
    sar    $0x10,%eax
    push   %edi
    add    $0x4,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   %ebp
    call   func_5be50
    add    $0x10,%esp
    jmp    jump_255b5
  jump_25920:
    mov    0x3c(%esp),%eax
    cmpl   $0x0,0xc4(%eax)
    jne    jump_2593a
    cmpl   $0x0,0x58a(%eax)
    je     jump_255b5
  jump_2593a:
    mov    $0x7,%ecx
    mov    0xc(%esp),%edi
    mov    (%esi),%ebx
    cmp    $0xdc,%edi
    jle    jump_25951
    xor    %ecx,%ecx
    jmp    jump_2599f
  jump_25951:
    cmp    $0x93,%edi
    jle    jump_25960
    mov    $0x1,%ecx
    jmp    jump_2599f
  jump_25960:
    cmp    $0x49,%edi
    jle    jump_2596c
    mov    $0x2,%ecx
    jmp    jump_2599f
  jump_2596c:
    test   %edi,%edi
    jle    jump_25977
    mov    $0x3,%ecx
    jmp    jump_2599f
  jump_25977:
    cmp    $0xffffffb7,%edi
    jle    jump_25983
    mov    $0x4,%ecx
    jmp    jump_2599f
  jump_25983:
    cmp    $0xffffff6d,%edi
    jle    jump_25992
    mov    $0x5,%ecx
    jmp    jump_2599f
  jump_25992:
    cmp    $0xffffff24,%edi
    jle    jump_2599f
    mov    $0x6,%ecx
  jump_2599f:
    mov    0x3c(%esp),%eax
    cmpl   $0xffffffff,0x58a(%eax)
    jne    jump_259e1
    cmpw   $0x0,0x21(%ebx)
    je     jump_259dc
    xor    %eax,%eax
    mov    data_104bea,%al
    imul   $0x1ee,%eax,%eax
    mov    %ecx,%edx
    sar    $0x1f,%edx
    movzbl data_a2f74(%eax),%edi
    mov    %ecx,%eax
    sub    %edx,%eax
    sar    %eax
    shl    $0x2,%edi
    add    $0x10,%edi
    add    %edi,%eax
    jmp    jump_259e4
  jump_259dc:
    lea    0x30(%ecx),%eax
    jmp    jump_259e4
  jump_259e1:
    lea    0x68(%ecx),%eax
  jump_259e4:
    mov    0x3c(%esp),%edx
    cmpl   $0x0,0x58a(%edx)
    jne    jump_25a05
    testb  $0x1,0x23(%ebx)
    je     jump_25a05
    mov    %ecx,%edx
    mov    %ecx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    add    $0x70,%eax
  jump_25a05:
    push   %eax
    mov    0x9(%esi),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    0x7(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x5(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x30(%esp),%ebp
    push   %ebp
    call   func_5c001
    add    $0x1c,%esp
    jmp    jump_255b5
  jump_25a36:
    mov    0x3c(%esp),%eax
    cmpl   $0x0,0xc8(%eax)
    je     jump_255b5
    mov    $0x3,%ebp
    mov    0xc(%esp),%edx
    mov    (%esi),%eax
    cmp    $0xdc,%edx
    jle    jump_25a5e
    xor    %ebp,%ebp
    jmp    jump_25a76
  jump_25a5e:
    test   %edx,%edx
    jle    jump_25a69
    mov    $0x1,%ebp
    jmp    jump_25a76
  jump_25a69:
    cmp    $0xffffff24,%edx
    jle    jump_25a76
    mov    $0x2,%ebp
  jump_25a76:
    mov    0x58(%eax),%dl
    cmp    $0x5,%dl
    jne    jump_25aee
    mov    0x59(%eax),%ebx
    mov    0x20(%ebx),%bl
    mov    $0x1,%edx
    mov    data_104bea,%cl
    and    $0xff,%ebx
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_255b5
    mov    0x54(%eax),%ecx
    mov    $0x1,%ebx
    sar    $0x10,%ecx
    shl    %cl,%ebx
    mov    0x3c(%esp),%ecx
    xor    %edx,%edx
    mov    0xd8(%ecx),%dl
    test   %ebx,%edx
    je     jump_255b5
    mov    0x54(%eax),%eax
    mov    0x3c(%esp),%edx
    sar    $0x10,%eax
    mov    %ebp,%ebx
    push   %eax
    mov    0x5(%esi),%eax
    mov    0x3(%esi),%ecx
    sar    $0x10,%eax
    sar    $0x10,%ecx
    push   %eax
    mov    0xaf(%edx),%edx
    mov    0x24(%esp),%eax
    call   func_53eb8
    jmp    jump_255b5
  jump_25aee:
    movb   $0x1,0x50(%esp)
    cmp    $0x4,%dl
    jne    jump_25b01
    mov    0x59(%eax),%eax
    mov    %eax,0x34(%esp)
    jmp    jump_25b18
  jump_25b01:
    mov    0x59(%eax),%eax
    mov    0xa(%eax),%eax
    sar    $0x10,%eax
    imul   $0x60,%eax,%eax
    mov    $data_a3d21,%edx
    add    %eax,%edx
    mov    %edx,0x34(%esp)
  jump_25b18:
    cmpl   $0x0,0x34(%esp)
    jne    jump_25b30
    mov    $0x822,%ebx
    mov    $data_910dc,%edx
    xor    %eax,%eax
    call   func_26198
  jump_25b30:
    mov    0x34(%esp),%eax
    xor    %edx,%edx
    mov    data_104bea,%cl
    mov    0x17(%eax),%dl
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_255b5
    xor    %edi,%edi
    mov    %edi,0x40(%esp)
    jmp    jump_25b69
  jump_25b56:
    mov    0x50(%esp),%bh
    mov    0x40(%esp),%edx
    add    %bh,%bh
    inc    %edx
    mov    %bh,0x50(%esp)
    mov    %edx,0x40(%esp)
  jump_25b69:
    mov    data_a3cf2,%edx
    mov    0x40(%esp),%eax
    sar    $0x10,%edx
    cmp    %eax,%edx
    jle    jump_255b5
    mov    0x34(%esp),%eax
    xor    %edx,%edx
    xor    %ecx,%ecx
    mov    0x50(%esp),%dl
    mov    0x15(%eax),%cl
    mov    0x3c(%esp),%eax
    and    %edx,%ecx
    xor    %edx,%edx
    mov    0xd8(%eax),%dl
    test   %edx,%ecx
    je     jump_25b56
    mov    0x3e(%esp),%edx
    sar    $0x10,%edx
    mov    0x5(%esi),%ecx
    push   %edx
    mov    data_965fd(%edi),%edx
    sar    $0x10,%ecx
    sar    $0x18,%edx
    add    %ecx,%edx
    push   %edx
    mov    data_965f5(%edi),%ecx
    mov    0x3(%esi),%edx
    sar    $0x18,%ecx
    sar    $0x10,%edx
    mov    %ebp,%ebx
    add    %edx,%ecx
    mov    0xaf(%eax),%edx
    mov    0x18(%esp),%eax
    inc    %edi
    call   func_53eb8
    jmp    jump_25b56
  jump_25be1:
    test   %al,%al
    je     jump_255dd
    jmp    jump_255b5
  jump_25bee:
    add    $0x58,%esp
  jump_25bf1:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_25bf8:
/*----------------------------------------------------------------*/
    call   func_2c830
    movl   $data_95b9c,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_25c08:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_25c27
    mov    $data_95b48,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_25c27:
    mov    $0x1,%edx
    movl   $data_95b9c,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_25c47
    call   func_76d64
  jump_25c47:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_25c4c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    call   func_2cd24
    mov    $0x2f,%edi
    mov    data_a3cf4,%dx
    xor    %esi,%esi
    test   %dx,%dx
    jle    jump_25bf1
    add    $0x4,%ebp
  jump_25c6e:
    xor    %ecx,%ecx
    movswl %si,%edx
    mov    data_104bea,%cl
    cmp    %ecx,%edx
    je     jump_25c8d
    imul   $0x1ee,%ecx,%ecx
    cmpb   $0x0,data_a3132(%ecx,%edx,1)
    je     jump_25ca2
  jump_25c8d:
    mov    $0x3,%ebx
    movswl %si,%ecx
    movswl %di,%edx
    mov    %ebp,%eax
    call   func_53e38
    add    $0x10,%edi
  jump_25ca2:
    mov    data_a3cf4,%bx
    inc    %esi
    cmp    %bx,%si
    jge    jump_25bf1
    jmp    jump_25c6e


/*----------------------------------------------------------------*/
func_25cb8:
/*----------------------------------------------------------------*/
    call   func_2c830
    movl   $data_95b84,0xa7(%eax)
    movw   $0x0,0xab(%eax)
    ret


/*----------------------------------------------------------------*/
func_25cd4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_25cf3
    mov    $data_95b34,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_25cf3:
    mov    $0x1,%edx
    movl   $data_95b84,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_25d13
    call   func_76d64
  jump_25d13:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_25d18:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4c,%esp
    mov    %eax,%ebp
    cmpl   $0x0,0x39(%eax)
    je     jump_25fa8
    mov    $0xffffffff,%esi
    xor    %ecx,%ecx
    mov    $0xf2,%edi
    mov    %ecx,0x44(%esp)
    mov    %edi,0x40(%esp)
    test   %edx,%edx
    je     jump_25d48
    mov    %edx,0x40(%esp)
  jump_25d48:
    mov    0xa9(%ebp),%ecx
    sar    $0x10,%ecx
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    %ecx,%ebx
    add    %eax,%eax
    xor    %ecx,%ebx
    mov    data_a2f75(%eax),%edx
    mov    data_104bea,%bl
    mov    %edx,0x34(%esp)
    mov    %ebx,%edx
    shl    $0x5,%edx
    sub    %ebx,%edx
    shl    $0x3,%edx
    sub    %ebx,%edx
    mov    data_a3132(%ecx,%edx,2),%dl
    mov    %dl,0x48(%esp)
    test   %dl,%dl
    je     jump_25dca
    mov    0x34(%esp),%edx
    test   %edx,%edx
    jne    jump_25dca
    mov    data_a2f74(%eax),%dl
    shl    $0x2,%edx
    add    $0x13,%edx
    mov    data_a2f73(%eax),%al
    mov    %edx,0x38(%esp)
    and    $0xff,%eax
    lea    0x0(,%eax,4),%edx
    add    %eax,%edx
    mov    $data_1050a4,%eax
    shl    $0x2,%edx
    add    %edx,%eax
    mov    %eax,0x3c(%esp)
    jmp    jump_25dd2
  jump_25dca:
    movl   $0xffffffff,0x44(%esp)
  jump_25dd2:
    xor    %eax,%eax
    mov    0xa9(%ebp),%edx
    mov    data_104bea,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    jne    jump_25e73
    mov    data_a3cf4,%dx
    xor    %ecx,%ecx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_25e2b
    jmp    jump_25e09
  jump_25dfc:
    mov    data_a3cf4,%bx
    inc    %eax
    cmp    %bx,%ax
    jge    jump_25e2b
  jump_25e09:
    xor    %ebx,%ebx
    movswl %ax,%edx
    mov    data_104bea,%bl
    cmp    %ebx,%edx
    je     jump_25dfc
    imul   $0x1ee,%ebx,%ebx
    cmpb   $0x0,data_a3132(%edx,%ebx,1)
    je     jump_25dfc
    inc    %ecx
    jmp    jump_25dfc
  jump_25e2b:
    mov    data_a3cf2,%eax
    sar    $0x10,%eax
    dec    %eax
    push   %eax
    movswl %cx,%eax
    push   %eax
    mov    $0xb,%eax
    call   func_1cea8
    push   %eax
    lea    0xc(%esp),%eax
    push   %eax
    mov    $0xf3,%esi
    mov    $0xf2,%edi
    call   func_76d09
    lea    0x10(%esp),%eax
    add    $0x10,%esp
    xor    %ecx,%ecx
    mov    %eax,0x3c(%esp)
    mov    %ecx,0x44(%esp)
    mov    %esi,0x38(%esp)
    mov    %edi,0x40(%esp)
    xor    %esi,%esi
  jump_25e73:
    cmpl   $0xffffffff,0x34(%esp)
    jne    jump_25ea9
    mov    $0xc,%eax
    call   func_1cea8
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    mov    $0xf3,%edx
    call   func_76d09
    lea    0x8(%esp),%eax
    add    $0x8,%esp
    xor    %ebx,%ebx
    mov    %eax,0x3c(%esp)
    mov    %edx,0x38(%esp)
    mov    %ebx,0x44(%esp)
  jump_25ea9:
    mov    0x44(%esp),%ecx
    test   %ecx,%ecx
    jne    jump_25f0e
    cmp    $0xffffffff,%esi
    jne    jump_25edf
    mov    0x40(%esp),%esi
    push   %esi
    lea    0x4(%ebp),%eax
    push   %eax
    call   func_5e9d0
    add    $0x8,%esp
    mov    0x3e(%esp),%eax
    push   $0x0
    sar    $0x10,%eax
    mov    $data_10debe,%edi
    push   %eax
    mov    0x3e(%esp),%eax
    lea    0x4(%ebp),%esi
    jmp    jump_25ef1
  jump_25edf:
    mov    0x36(%esp),%eax
    push   %ecx
    mov    $data_10debe,%edi
    lea    0x4(%ebp),%esi
    push   $0xff
  jump_25ef1:
    sar    $0x10,%eax
    xor    %ebx,%ebx
    push   %eax
    xor    %edx,%edx
    mov    0x48(%esp),%ecx
    push   $0x43
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_25f0e:
    cmpb   $0x0,0x48(%esp)
    je     jump_25f9b
    xor    %eax,%eax
    mov    0xa9(%ebp),%ecx
    mov    data_104bea,%al
    sar    $0x10,%ecx
    cmp    %eax,%ecx
    je     jump_25f9b
    cmpl   $0xffffffff,0x44(%esp)
    je     jump_25f9b
    mov    $0x3,%ebx
    mov    $0xe,%edx
    lea    0x4(%ebp),%eax
    call   func_53e38
    mov    0x34(%esp),%eax
    mov    $0xffffffff,%ebx
    test   %eax,%eax
    jne    jump_25f71
    mov    0x48(%esp),%cl
    cmp    $0x3,%cl
    jne    jump_25f67
    mov    $0x9,%ebx
    jmp    jump_25f71
  jump_25f67:
    cmp    $0x2,%cl
    jne    jump_25f71
    mov    $0x8,%ebx
  jump_25f71:
    cmp    $0xffffffff,%ebx
    je     jump_25f9b
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffef2,%dx
    call   func_1b084
    push   $0x3
    push   $0xe
    push   %ebx
    push   %eax
    lea    0x4(%ebp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
  jump_25f9b:
    mov    $data_10ae70,%eax
    lea    0x4(%ebp),%edx
    call   func_552cc
  jump_25fa8:
    add    $0x4c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_25fb4:
/*----------------------------------------------------------------*/
    push   %ebx
    cmpl   $0x0,0x39(%eax)
    je     jump_25fc9
    mov    0xa7(%eax),%ebx
    mov    $0x96,%edx
    call   *0xc(%ebx)
  jump_25fc9:
    pop    %ebx
    ret

vtable_25fcc:
    .long   func_26024
    .long   func_26049
    .long   func_260d4
    .long   func_26077
    .long   func_26077
    .long   func_2610a
    .long   func_26123
    .long   func_260d4
    .long   func_260d4
    .long   func_260d4
    .long   func_26103
    .long   func_260d4
    .long   func_260e5


/*----------------------------------------------------------------*/
func_26000:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %edx,%eax
    dec    %eax
    cmp    $0xc,%ax
    ja     func_260d4
    and    $0xffff,%eax
    jmp    *%cs:vtable_25fcc(,%eax,4)


/*----------------------------------------------------------------*/
func_26024:
/*----------------------------------------------------------------*/
    movsbw 0x25(%esi),%ax
    sub    $0x31,%eax
    mov    %ax,0xab(%esi)
    cmp    data_a3cf4,%ax
    jl     func_260d4
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_26049:
/*----------------------------------------------------------------*/
    movl   $0x0,0x39(%esi)
    mov    $data_10ae70,%eax
    mov    0x14(%esi),%ebx
    mov    0x10(%esi),%ecx
    mov    0x8(%esi),%edx
    push   %ebx
    mov    0xc(%esi),%ebx
    movl   $0x0,0x35(%esi)
    call   func_55214
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_26077:
/*----------------------------------------------------------------*/
    movzbl data_104bea,%ebp
    mov    %ebp,%eax
    shl    $0x5,%eax
    sub    %ebp,%eax
    shl    $0x3,%eax
    sub    %ebp,%eax
    add    %eax,%eax
    mov    %eax,(%esp)
    mov    0xa9(%esi),%eax
    mov    (%esp),%edx
    sar    $0x10,%eax
    add    %eax,%edx
    cmpb   $0x0,data_a3132(%edx)
    je     jump_260c0
    cmp    %ebp,%eax
    je     jump_260c0
    mov    %eax,%edx
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmpl   $0xffffffff,data_a2f75(,%eax,2)
    jne    jump_260c9
  jump_260c0:
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_260c9:
    mov    0xab(%esi),%al
    mov    %al,data_968dd


/*----------------------------------------------------------------*/
func_260d4:
/*----------------------------------------------------------------*/
    movswl %di,%edx
    mov    %esi,%eax
    call   func_2f424
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_260e5:
/*----------------------------------------------------------------*/
    mov    0xa7(%esi),%ebp
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebp)
    movswl %di,%edx
    mov    %esi,%eax
    call   func_2f424
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_26103:
/*----------------------------------------------------------------*/
    mov    %bx,0xab(%esi)


/*----------------------------------------------------------------*/
func_2610a:
/*----------------------------------------------------------------*/
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_26123:
/*----------------------------------------------------------------*/
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0x10(%ebx)
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_26140:
/*----------------------------------------------------------------*/
    add    $0x1e,%eax
    xor    %edx,%edx
    call   func_1b66c
    sub    $0x1e,%eax
    ret


/*----------------------------------------------------------------*/
func_26150:
/*----------------------------------------------------------------*/
    add    $0x1e,%eax
    call   func_1b4f0
    sub    $0x1e,%eax
    ret


/*----------------------------------------------------------------*/
func_26160:
/*----------------------------------------------------------------*/
    mov    $data_d85f8,%eax
    call   func_2632c
    mov    $data_d8654,%eax
    call   func_2c6cc
    mov    $data_10914c,%eax
    call   func_4fe8c
    push   $data_96668
    push   $data_910f0
    call   func_78097
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_26194:
/*----------------------------------------------------------------*/
    int3
  jump_26195:
    ret


/*----------------------------------------------------------------*/
func_26198:
/*----------------------------------------------------------------*/
    test   %eax,%eax
    jne    jump_26195
    push   %ebx
    push   %edx
    push   $data_910f6
    jmp    jump_2623c


/*----------------------------------------------------------------*/
func_261a8:
/*----------------------------------------------------------------*/
    test   %eax,%eax
    jne    jump_26195
    push   %ebx
    push   %edx
    push   $data_91114
    jmp    jump_2623c


/*----------------------------------------------------------------*/
func_261b8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x100,%esp
    test   %eax,%eax
    jne    jump_26201
    mov    $data_96668,%esi
    mov    %esp,%edi
    push   %edi
  jump_261cc:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_261e4
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_261cc
  jump_261e4:
    pop    %edi
    mov    %esp,%eax
    push   %eax
    push   %ebx
    push   %edx
    push   $data_91132
    push   $data_96668
    call   func_76d09
    add    $0x14,%esp
    call   func_2624c
  jump_26201:
    add    $0x100,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2620c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x4,%esp
    lea    0x14(%esp),%ebx
    mov    0x10(%esp),%edx
    mov    $data_96668,%eax
    mov    %ebx,(%esp)
    mov    %esp,%ebx
    call   func_7871f
    xor    %edx,%edx
    mov    %edx,(%esp)
    add    $0x4,%esp
    pop    %edx
    pop    %ebx
    ret
  jump_2623c:
    push   $data_96668
    call   func_76d09
    add    $0x10,%esp
    lea    0x0(%eax),%eax


/*----------------------------------------------------------------*/
func_2624c:
/*----------------------------------------------------------------*/
    call   func_26194
    mov    $0x1,%eax
    jmp    func_7814a


/*----------------------------------------------------------------*/
func_2625c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_26276
    mov    %ebx,%ecx
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_5a094
    mov    %esi,%eax
  jump_26276:
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2627c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_5a144
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2628c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    call   func_78734
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_262ab
    mov    %ebx,%ecx
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_5a094
    mov    %esi,%eax
  jump_262ab:
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_262b0:
/*----------------------------------------------------------------*/
    push   %esi
    call   func_78817
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_262ca
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_5a094
    mov    %esi,%eax
  jump_262ca:
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_262cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_5a144
    mov    %ebx,%eax
    call   func_7882f
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_262f0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_96768,%eax
    call   func_786da
    mov    $data_d85f8,%eax
    mov    $0x1,%edx
    call   func_26314
    mov    %edx,data_96770
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_26314:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2631c:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    call   func_2632c
    mov    %ebx,%eax
    pop    %ebx
    nop
  jump_26328:
    ret


/*----------------------------------------------------------------*/
func_2632c:
/*----------------------------------------------------------------*/
    cmpl   $0x0,data_d8628
    je     jump_26328
    jmp    jump_660ff


/*----------------------------------------------------------------*/
func_2633c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $0x1e0,%edx
    mov    $0x280,%eax
    call   func_65ea4
    mov    %eax,data_d8628
    test   %eax,%eax
    sete   %al
    and    $0xff,%eax
    dec    %eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_26360:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    $0x2,%ah
    mov    %ah,%dh
    int    $0x16
    jne    jump_26375
    and    $0xf,%dh
    dec    %dh
    jne    jump_26375
    sub    %eax,%eax
  jump_26375:
    mov    %eax,%ebx
    mov    %eax,%edx
    xor    %ah,%bh
    mov    %ax,data_d8624
    and    $0x1,%bl
    and    $0xffff,%ebx
    jne    jump_26399
    xor    %ah,%dh
    and    $0x2,%dl
    and    $0xffff,%edx
    je     jump_263a5
  jump_26399:
    movl   $0xffffffff,data_d8608
    jmp    jump_263ab
  jump_263a5:
    mov    %ebx,data_d8608
  jump_263ab:
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x4,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_d8604
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x8,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_d8600
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x10,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_d8614
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x20,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_d8610
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x40,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    xor    %ah,%ah
    dec    %edx
    and    $0x80,%al
    mov    %edx,data_d860c
    and    $0xffff,%eax
    sete   %al
    and    $0xff,%eax
    dec    %eax
    mov    %eax,data_d8618
    mov    $0x1,%ah
    mov    %ah,%dh
    int    $0x16
    jne    jump_26464
    and    $0xf,%dh
    dec    %dh
    jne    jump_26464
    sub    %eax,%eax
  jump_26464:
    test   %ax,%ax
    je     jump_264a5
    xor    %ah,%ah
    mov    %ah,%dh
    int    $0x16
    jne    jump_2647a
    and    $0xf,%dh
    dec    %dh
    jne    jump_2647a
    sub    %eax,%eax
  jump_2647a:
    mov    %eax,%edx
    xor    %ah,%dh
    mov    %dx,data_d8622
    xor    %al,%al
    and    $0xffff,%eax
    mov    $0xffffffff,%esi
    sar    $0x8,%eax
    mov    %esi,data_d85fc
    mov    %ax,data_d8620
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_264a5:
    xor    %ecx,%ecx
    mov    %ecx,data_d85fc
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_264b4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    lea    0x10(%esp),%eax
    lea    0xc(%esp),%ecx
    lea    0x8(%esp),%ebx
    push   %eax
    lea    0x8(%esp),%edx
    lea    0x4(%esp),%eax
    call   func_64ffe
    mov    (%esp),%eax
    cmp    data_d8648,%eax
    jne    jump_264ee
    mov    0x4(%esp),%eax
    cmp    data_d864c,%eax
    je     jump_2650c
  jump_264ee:
    mov    (%esp),%eax
    mov    $0xffffffff,%esi
    mov    %eax,data_d8648
    mov    0x4(%esp),%eax
    mov    %esi,data_d8644
    mov    %eax,data_d864c
    jmp    jump_26514
  jump_2650c:
    xor    %ecx,%ecx
    mov    %ecx,data_d8644
  jump_26514:
    mov    0x8(%esp),%edi
    cmp    data_d862c,%edi
    je     jump_26532
    mov    $0xffffffff,%eax
    mov    %edi,data_d862c
    mov    %eax,data_d8638
    jmp    jump_2653a
  jump_26532:
    xor    %ebp,%ebp
    mov    %ebp,data_d8638
  jump_2653a:
    mov    0xc(%esp),%edx
    cmp    data_d8630,%edx
    je     jump_26559
    mov    $0xffffffff,%ecx
    mov    %edx,data_d8630
    mov    %ecx,data_d863c
    jmp    jump_26561
  jump_26559:
    xor    %ebx,%ebx
    mov    %ebx,data_d863c
  jump_26561:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2656c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    xor    %ebx,%ebx
    mov    %ebx,data_d8638
    mov    %ebx,data_d863c
    mov    %ebx,data_d8644
    mov    %ebx,data_d85fc
    call   func_26360
    cmpl   $0x0,data_d8628
    je     jump_2659f
    mov    %edx,%eax
    call   func_264b4
  jump_2659f:
    mov    data_96774,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_265a8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    push   %edi
    push   %ebp
    xor    %edx,%edx
    mov    %edx,data_d8644
    mov    %edx,data_d8638
    mov    %edx,data_d863c
    mov    %edx,data_d85fc
    mov    0x8(%eax),%dx
    cmp    $0x2,%dx
    jb     jump_26784
    jbe    jump_26612
    cmp    $0x3,%dx
    je     jump_2666e
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_265e5:
    mov    0xc(%eax),%edx
    mov    0x10(%eax),%eax
    mov    %edx,data_d8648
    mov    %eax,data_d864c
    mov    %eax,%edx
    mov    data_d8648,%eax
    mov    $0xffffffff,%ecx
    call   func_6507c
    mov    %ecx,data_d8644
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_26612:
    cmpl   $0x0,0xc(%eax)
    jne    jump_26656
    mov    0x10(%eax),%edx
    mov    $0xffffffff,%ebp
    mov    %edx,data_d862c
    mov    0xa(%eax),%dx
    mov    %ebp,data_d8638
    test   %dx,%dx
    je     jump_26649
    cmpl   $0x0,data_d862c
    je     jump_26649
    mov    %ebp,data_d8608
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_26649:
    xor    %edx,%edx
    mov    %edx,data_d8608
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_26656:
    mov    0x10(%eax),%eax
    mov    $0xffffffff,%edi
    mov    %eax,data_d8630
    mov    %edi,data_d863c
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_2666e:
    mov    0xa(%eax),%dx
    mov    %dx,data_d8624
    mov    0xc(%eax),%dx
    mov    0x10(%eax),%ax
    mov    %ax,data_d8622
    mov    data_d8624,%ax
    mov    %dx,data_d8620
    mov    %eax,%edx
    mov    $0xffffffff,%edi
    xor    %ah,%dh
    mov    %edi,data_d85fc
    and    $0x1,%dl
    and    $0xffff,%edx
    jne    jump_266bd
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x2,%dl
    and    $0xffff,%edx
    je     jump_266c9
  jump_266bd:
    movl   $0xffffffff,data_d8608
    jmp    jump_266cf
  jump_266c9:
    mov    %edx,data_d8608
  jump_266cf:
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x4,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_d8604
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x8,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_d8600
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x10,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_d8614
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x20,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_d8610
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x40,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    xor    %ah,%ah
    dec    %edx
    and    $0x80,%al
    mov    %edx,data_d860c
    and    $0xffff,%eax
    je     jump_2677a
    movl   $0xffffffff,data_d8618
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_2677a:
    mov    %eax,data_d8618
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_26784:
    cmp    $0x1,%dx
    je     jump_265e5
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_267a0:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2fc50
    mov    %eax,%edx
    movl   $data_95c70,0xa7(%eax)
    call   func_26800
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_267bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_267db
    mov    $data_95c2c,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_267db:
    mov    $0x1,%edx
    movl   $data_95c70,0xa7(%eax)
    call   func_2fc68
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_267fb
    call   func_76d64
  jump_267fb:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26800:
/*----------------------------------------------------------------*/
    movl   $0x0,0xdaf(%eax)
    ret

vtable_2680c:
    .long   func_26995
    .long   func_26a6a
    .long   func_26e36
    .long   func_26be4
    .long   func_26be4
    .long   func_26be4
    .long   func_26be4
    .long   func_26be4
    .long   func_26cee
    .long   func_26cee
    .long   func_26e8f
    .long   func_26eeb
    .long   func_26eeb
    .long   func_26f34
    .long   func_270ea
    .long   func_26fe1
    .long   func_26b62
    .long   func_26ae6
    .long   func_26ae6
    .long   func_26bc2
    .long   func_26be4
    .long   func_27030
    .long   func_269f0
    .long   func_26da3
    .long   func_270ea
    .long   func_27091


/*----------------------------------------------------------------*/
func_26874:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x290,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    test   %edx,%edx
    jne    jump_2689a
    mov    $0x48,%ebx
    mov    $data_91168,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2689a:
    mov    %esi,0xdaf(%ecx)
    movswl (%esi),%eax
    push   %eax
    push   $data_91178
    lea    -0x38(%ebp),%eax
    push   %eax
    lea    -0x38(%ebp),%ebx
    call   func_76d09
    add    $0xc,%esp
    mov    $data_91182,%edx
    mov    %ecx,%eax
    call   func_2fcb0
    lea    0xc95(%ecx),%eax
    mov    %eax,-0x10(%ebp)
    lea    0xcb0(%ecx),%eax
    mov    %eax,-0x4(%ebp)
    mov    -0x10(%ebp),%eax
    cmpb   $0x1,(%eax)
    je     jump_268ef
    mov    $0x55,%ebx
    mov    $data_9118b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_268ef:
    cmpl   $0x1,0xda3(%ecx)
    jle    jump_26919
    mov    -0x4(%ebp),%eax
    cmpb   $0x0,(%eax)
    je     jump_26919
    mov    $0x57,%ebx
    mov    $data_9119b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_26919:
    mov    -0x10(%ebp),%esi
    lea    -0x290(%ebp),%edi
    mov    0x5(%esi),%esi
    push   %edi
  jump_26926:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2693e
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_26926
  jump_2693e:
    pop    %edi
    mov    0xdaf(%ecx),%ebx
    mov    0x2(%ebx),%edx
    mov    (%ebx),%ax
    mov    0x6(%ebx),%esi
    cmp    $0x19,%ax
    ja     func_270ea
    and    $0xffff,%eax
    shl    $0x2,%eax
    mov    %eax,-0x18(%ebp)
    lea    0x24(%edx),%eax
    mov    %eax,-0x8(%ebp)
    lea    0x24(%esi),%eax
    mov    %edx,-0x14(%ebp)
    mov    %eax,-0xc(%ebp)
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,-0x14(%ebp)
    mov    -0x14(%ebp),%edi
    shl    $0x4,%eax
    sub    %edi,%eax
    mov    -0x18(%ebp),%edi
    add    $data_10525a,%eax
    jmp    *%cs:vtable_2680c(%edi)


/*----------------------------------------------------------------*/
func_26995:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    push   %eax
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    xor    %ebx,%ebx
    mov    data_a2f73(,%eax,2),%bl
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edi
    push   %edi
    call   func_76d09
    mov    -0x4(%ebp),%eax
    movw   $0x1f,0x1(%eax)
    add    $0x10,%esp
    mov    %dx,0x3(%eax)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_269f0:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    push   %eax
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    xor    %ebx,%ebx
    mov    data_a2f73(,%eax,2),%bl
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    mov    -0xc(%ebp),%edi
    shl    $0x2,%eax
    push   %edi
    add    $data_1050a4,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ebx
    push   %ebx
    call   func_76d09
    mov    -0x4(%ebp),%eax
    movw   $0x1f,0x1(%eax)
    mov    %dx,0x3(%eax)
    movw   $0x1d,0xccc(%ecx)
    imul   $0x5,0x16(%esi),%dx
    mov    0x14(%esi),%ax
    add    %eax,%edx
    add    $0x14,%esp
    mov    %dx,0xcce(%ecx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26a6a:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    xor    %esi,%esi
    mov    0x42(%edx),%ax
    mov    0x4c(%edx),%si
    sub    %esi,%eax
    push   %eax
    mov    -0x8(%ebp),%esi
    push   %esi
    mov    0x6(%ebx),%bl
    push   %esi
    movzbl %bl,%esi
    lea    0x0(,%esi,4),%eax
    add    %esi,%eax
    shl    $0x3,%eax
    add    $data_103f9c,%eax
    add    $0xa,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%esi
    push   %esi
    call   func_76d09
    mov    -0x4(%ebp),%eax
    movw   $0x1e,0x1(%eax)
    xor    %ah,%ah
    mov    %bl,%al
    mov    -0x4(%ebp),%ebx
    mov    %ax,0x3(%ebx)
    movw   $0x1d,0xccc(%ecx)
    imul   $0x5,0x16(%edx),%bx
    mov    0x14(%edx),%ax
    add    %eax,%ebx
    add    $0x18,%esp
    mov    %bx,0xcce(%ecx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26ae6:
/*----------------------------------------------------------------*/
    mov    0xdaf(%ecx),%ebx
    mov    0x6(%ebx),%edx
    xor    %esi,%esi
    xor    %eax,%eax
    mov    0x42(%edx),%si
    mov    0x4c(%edx),%ax
    sub    %eax,%esi
    push   %esi
    lea    0x24(%edx),%eax
    push   %eax
    mov    0x2(%ebx),%ebx
    push   %eax
    lea    0x34(%ebx),%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edi
    push   %edi
    call   func_76d09
    xor    %ah,%ah
    mov    data_104bea,%al
    mov    -0x4(%ebp),%esi
    add    $0xe,%eax
    mov    %ax,0x1(%esi)
    movsbw 0xaa(%ebx),%ax
    mov    %ax,0x3(%esi)
    movw   $0x1d,0xccc(%ecx)
    imul   $0x5,0x16(%edx),%bx
    mov    0x14(%edx),%ax
    add    %eax,%ebx
    add    $0x18,%esp
    mov    %bx,0xcce(%ecx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26b62:
/*----------------------------------------------------------------*/
    mov    -0xc(%ebp),%eax
    push   %eax
    lea    0x34(%edx),%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ebx
    push   %ebx
    call   func_76d09
    xor    %ah,%ah
    mov    data_104bea,%al
    mov    -0x4(%ebp),%ebx
    add    $0xe,%eax
    mov    %ax,0x1(%ebx)
    movsbw 0xaa(%edx),%ax
    mov    %ax,0x3(%ebx)
    movw   $0x1d,0xccc(%ecx)
    imul   $0x5,0x16(%esi),%dx
    mov    0x14(%esi),%ax
    add    %eax,%edx
    add    $0x10,%esp
    mov    %dx,0xcce(%ecx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26bc2:
/*----------------------------------------------------------------*/
    add    $0x1c,%edx
    push   %edx
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%esi
    push   %esi
    call   func_76d09
    add    $0xc,%esp
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26be4:
/*----------------------------------------------------------------*/
    mov    0xdaf(%ecx),%eax
    mov    0x2(%eax),%esi
    mov    0x6(%eax),%edi
    cmpb   $0x4,0x58(%esi)
    je     jump_26c07
    mov    $0xb3,%ebx
    mov    $data_911ab,%edx
    xor    %eax,%eax
    call   func_26198
  jump_26c07:
    mov    0xdaf(%ecx),%eax
    movswl (%eax),%eax
    mov    0x59(%esi),%edx
    cmp    $0x14,%eax
    jne    jump_26c80
    mov    0x42(%edx),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_26c2a
    mov    $0xd,%eax
    jmp    jump_26c2f
  jump_26c2a:
    mov    $0xe,%eax
  jump_26c2f:
    call   func_1cea8
    push   %eax
    mov    0x42(%edx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x58(%edx),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_26c4e
    mov    $0xd,%eax
    jmp    jump_26c53
  jump_26c4e:
    mov    $0xe,%eax
  jump_26c53:
    call   func_1cea8
    push   %eax
    mov    0x58(%edx),%eax
    sar    $0x10,%eax
    push   %eax
    add    $0x1c,%edx
    push   %edx
    lea    0x34(%esi),%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edi
    push   %edi
    call   func_76d09
    add    $0x20,%esp
    jmp    jump_26cc7
  jump_26c80:
    mov    %edi,%eax
    shl    $0x5,%eax
    sub    %edi,%eax
    shl    $0x3,%eax
    mov    %edi,%ebx
    sub    %edi,%eax
    xor    %edi,%ebx
    mov    data_a2f73(,%eax,2),%bl
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    add    $0x1c,%edx
    push   %edx
    lea    0x34(%esi),%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ecx
    push   %ecx
    call   func_76d09
    add    $0x14,%esp
  jump_26cc7:
    xor    %ah,%ah
    mov    data_104bea,%al
    mov    -0x4(%ebp),%edx
    add    $0xe,%eax
    mov    %ax,0x1(%edx)
    movsbw 0xaa(%esi),%ax
    mov    %ax,0x3(%edx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26cee:
/*----------------------------------------------------------------*/
    mov    0xdaf(%ecx),%edi
    mov    0x2(%edi),%esi
    mov    0x58(%esi),%bh
    mov    0x6(%edi),%edi
    cmp    $0x4,%bh
    je     jump_26d15
    je     jump_26d15
    mov    $0xcd,%ebx
    mov    $data_911bb,%edx
    xor    %eax,%eax
    call   func_26198
  jump_26d15:
    mov    0xdaf(%ecx),%edx
    mov    0x59(%esi),%eax
    movswl (%edx),%edx
    add    $0x1c,%eax
    cmp    $0x9,%edx
    jne    jump_26d6b
    push   %eax
    mov    %edi,%eax
    shl    $0x5,%eax
    sub    %edi,%eax
    shl    $0x3,%eax
    mov    %edi,%edx
    sub    %edi,%eax
    xor    %edi,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ebx
    push   %ebx
    call   func_76d09
    add    $0x10,%esp
    jmp    jump_26d82
  jump_26d6b:
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edx
    push   %edx
    call   func_76d09
    add    $0xc,%esp
  jump_26d82:
    mov    -0x4(%ebp),%eax
    add    $0xe,%edi
    mov    %di,0x1(%eax)
    mov    -0x4(%ebp),%edx
    movsbw 0xaa(%esi),%ax
    mov    %ax,0x3(%edx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26da3:
/*----------------------------------------------------------------*/
    mov    0x58(%edx),%bl
    mov    %edx,%esi
    cmp    $0x5,%bl
    je     jump_26dbe
    mov    $0xe0,%ebx
    mov    $data_911cb,%edx
    xor    %eax,%eax
    call   func_26198
  jump_26dbe:
    mov    0x59(%esi),%edi
    test   %edi,%edi
    jne    jump_26dd6
    mov    $0xe3,%ebx
    mov    $data_911db,%edx
    xor    %eax,%eax
    call   func_26198
  jump_26dd6:
    mov    $0x1,%edx
    mov    (%edi),%eax
    xor    %ebx,%ebx
    mov    data_104bea,%cl
    mov    0x17(%eax),%bl
    shl    %cl,%edx
    test   %edx,%ebx
    jne    jump_26df1
    mov    0x4(%edi),%eax
  jump_26df1:
    add    $0x1c,%eax
    push   %eax
    lea    0x34(%esi),%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ebx
    push   %ebx
    call   func_76d09
    xor    %ah,%ah
    mov    data_104bea,%al
    mov    -0x4(%ebp),%edx
    add    $0xe,%eax
    mov    %ax,0x1(%edx)
    movsbw 0xaa(%esi),%ax
    add    $0x10,%esp
    mov    %ax,0x3(%edx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26e36:
/*----------------------------------------------------------------*/
    mov    0x2(%ebx),%bx
    movswl %bx,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edx
    push   %edx
    call   func_76d09
    mov    -0x4(%ebp),%eax
    movw   $0x0,0x3(%eax)
    add    $0xc,%esp
    mov    %bx,0x1(%eax)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26e8f:
/*----------------------------------------------------------------*/
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%esi
    push   %esi
    call   func_76d09
    mov    0xdaf(%ecx),%eax
    mov    -0x4(%ebp),%edx
    mov    0x2(%eax),%ax
    movw   $0x0,0x3(%edx)
    add    $0xc,%esp
    mov    %ax,0x1(%edx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26eeb:
/*----------------------------------------------------------------*/
    mov    0xdaf(%ecx),%eax
    mov    0x2(%eax),%edx
    mov    0x6(%eax),%eax
    test   %eax,%eax
    je     jump_26f15
    add    $0x1c,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ebx
    push   %ebx
    call   func_76d09
    add    $0xc,%esp
  jump_26f15:
    xor    %ah,%ah
    mov    -0x4(%ebp),%ebx
    mov    data_104bea,%al
    mov    %dx,0x3(%ebx)
    add    $0xe,%eax
    mov    %ax,0x1(%ebx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26f34:
/*----------------------------------------------------------------*/
    mov    %edx,%ecx
    test   %edx,%edx
    jne    jump_26f4b
    mov    $0x114,%ebx
    mov    $data_911eb,%edx
    xor    %eax,%eax
    call   func_26198
  jump_26f4b:
    xor    %edx,%edx
    mov    0x57(%ecx),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    lea    0x24(%ecx),%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edx
    push   %edx
    xor    %ebx,%ebx
    call   func_76d09
    add    $0x10,%esp
    mov    $data_911fb,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    -0x4(%ebp),%edx
    mov    %ax,0x1(%edx)
    xor    %eax,%eax
    mov    0x1(%edx),%ax
    cmp    $0xffff,%eax
    jne    jump_26fc7
    mov    $0x118,%ebx
    mov    $data_9120c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_26fc7:
    imul   $0x5,0x16(%ecx),%dx
    mov    0x14(%ecx),%ax
    add    %edx,%eax
    mov    -0x4(%ebp),%edx
    mov    %ax,0x3(%edx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26fe1:
/*----------------------------------------------------------------*/
    mov    -0x8(%ebp),%esi
    push   %esi
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edi
    push   %edi
    call   func_76d09
    mov    -0x4(%ebp),%eax
    movw   $0x1d,0x1(%eax)
    imul   $0x5,0x16(%edx),%bx
    mov    0x14(%edx),%ax
    mov    -0x4(%ebp),%edx
    add    %ebx,%eax
    mov    %ax,0x3(%edx)
    movw   $0x2c,0xccc(%ecx)
    add    $0xc,%esp
    movw   $0x2,0xcce(%ecx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_27030:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ecx
    push   %ecx
    mov    -0x4(%ebp),%edx
    call   func_76d09
    xor    %ah,%ah
    movw   $0x0,0x3(%edx)
    mov    data_104bea,%al
    add    $0xc,%esp
    mov    %ax,0x1(%edx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_27091:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edx
    push   %edx
    call   func_76d09
    xor    %ah,%ah
    mov    -0x4(%ebp),%edx
    mov    data_104bea,%al
    movw   $0x0,0x3(%edx)
    add    $0xc,%esp
    mov    %ax,0x1(%edx)


/*----------------------------------------------------------------*/
func_270ea:
/*----------------------------------------------------------------*/
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_270f4:
/*----------------------------------------------------------------*/
    cmp    $0x1,%dx
    jb     jump_27100
    jbe    jump_27108
    cmp    $0x32,%dx
  jump_27100:
    movswl %dx,%edx
    jmp    func_2fd68
  jump_27108:
    movl   $0xffffffff,0x35(%eax)
    mov    0xa7(%eax),%ebx
    movl   $0xffffffff,0x39(%eax)
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_27124:
/*----------------------------------------------------------------*/
    jmp    func_30774


/*----------------------------------------------------------------*/
func_2712c:
/*----------------------------------------------------------------*/
    call   func_2c830
    movl   $data_95c58,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_2713c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2715b
    mov    $data_95c18,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2715b:
    mov    $0x1,%edx
    movl   $data_95c58,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2717b
    call   func_76d64
  jump_2717b:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_27184:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,%edi
    cmp    $0x1,%dx
    jb     jump_271ce
    jbe    jump_2719d
    cmp    $0x2,%dx
    je     jump_271de
    jmp    jump_271ce
  jump_2719d:
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f73(,%eax,2),%al
    xor    %ah,%ah
    add    $0x8,%eax
    xor    %ebx,%ebx
    movswl %ax,%edx
    mov    $data_10914c,%eax
    call   func_4f8cc
  jump_271ce:
    movswl %si,%edx
    mov    %edi,%ebx
    mov    %ebp,%eax
    call   func_2f424
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_271de:
    mov    $0x1,%ecx
    mov    $data_10ae70,%eax
    mov    %ecx,%ebx
    mov    %ecx,%edx
    call   func_56b60
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_271fc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x610,%esp
    mov    %eax,0x5d4(%esp)
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %ecx,%ecx
    mov    $data_d8da0,%edx
    mov    data_a2f73(,%eax,2),%cl
    xor    %ah,%ah
    mov    %edx,0x604(%esp)
    mov    %ah,data_d8da0
    mov    %ah,(%esp)
    xor    %edx,%edx
    mov    $data_9121c,%eax
    call   func_1bb10
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_27263
    mov    $0x1c1,%ebx
    mov    $data_91228,%edx
    call   func_26198
  jump_27263:
    xor    %ebx,%ebx
    mov    $data_91274,%edi
    mov    %ebx,0x5e8(%esp)
    xor    %esi,%esi
  jump_27273:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    call   func_2fe58
    lea    0x584(%esp),%eax
    push   %eax
    push   $data_91238
    lea    0x3f4(%esp),%eax
    push   %eax
    call   func_7742d
    add    $0xc,%esp
    mov    $data_9123b,%edx
    lea    0x584(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_272ee
    lea    0x5e0(%esp),%eax
    push   %eax
    lea    0x588(%esp),%eax
    push   %eax
    push   $data_91243
    lea    0x3f8(%esp),%eax
    push   %eax
    call   func_7742d
    add    $0x10,%esp
    cmp    0x5e0(%esp),%ecx
    jne    jump_2731f
    movl   $0x1,0x5e8(%esp)
    jmp    jump_2731f
  jump_272ee:
    mov    $data_91249,%edx
    lea    0x584(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_2731f
    push   %ecx
    push   $data_9124d
    mov    $0x1e8,%ebx
    call   func_2620c
    add    $0x8,%esp
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_261b8
  jump_2731f:
    mov    0x5e8(%esp),%ebx
    cmp    %ebx,%esi
    je     jump_27273
    xor    %esi,%esi
    mov    %esi,0x5dc(%esp)
    cmp    $0x2,%ebx
    je     jump_2792c
    lea    0x0(,%ecx,4),%eax
    add    %ecx,%eax
    mov    $data_1050a4,%edx
    shl    $0x2,%eax
    add    %eax,%edx
    mov    %edx,0x5d8(%esp)
  jump_2735a:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    call   func_2fe58
    lea    0x584(%esp),%eax
    push   %eax
    push   $data_91284
    lea    0x3f4(%esp),%eax
    push   %eax
    call   func_7742d
    add    $0xc,%esp
    mov    $data_91287,%edx
    lea    0x584(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    je     jump_273af
    mov    $data_9128f,%edx
    lea    0x584(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_273bf
  jump_273af:
    movl   $0x2,0x5e8(%esp)
    jmp    jump_2791e
  jump_273bf:
    mov    $data_91293,%edx
    lea    0x584(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_274b5
    mov    0x5d8(%esp),%ecx
    push   %ecx
    mov    %eax,0x5f4(%esp)
    push   $data_91299
    mov    %eax,0x604(%esp)
    lea    0x4c0(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
  jump_27403:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    mov    $0x8,%ebx
    call   func_2fe58
    mov    $data_9129e,%edx
    lea    0x3ec(%esp),%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_27438
    movl   $0xffffffff,0x5f0(%esp)
    jmp    jump_274a2
  jump_27438:
    lea    0x3ec(%esp),%edi
    mov    0x5fc(%esp),%esi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    add    %ecx,%esi
    mov    %esi,0x5fc(%esp)
    cmp    $0xc4,%esi
    jl     jump_27472
    mov    $0x238,%ebx
    mov    $data_912a7,%edx
    xor    %eax,%eax
    call   func_26198
  jump_27472:
    lea    0x3ec(%esp),%esi
    lea    0x4b8(%esp),%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_27489:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_274a1
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_27489
  jump_274a1:
    pop    %edi
  jump_274a2:
    cmpl   $0x0,0x5f0(%esp)
    je     jump_27403
    jmp    jump_2791e
  jump_274b5:
    mov    $data_912b7,%edx
    lea    0x584(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_27591
    mov    %eax,0x608(%esp)
    mov    %eax,0x5f8(%esp)
  jump_274dc:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    mov    $0x8,%ebx
    call   func_2fe58
    mov    $data_912bd,%edx
    lea    0x3ec(%esp),%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_27519
    mov    $0xffffffff,%edx
    mov    %edx,0x608(%esp)
    mov    %edx,0x5dc(%esp)
    jmp    jump_2757e
  jump_27519:
    lea    0x3ec(%esp),%edi
    mov    0x5f8(%esp),%esi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    add    %ecx,%esi
    mov    %esi,0x5f8(%esp)
    cmp    $0x3e4,%esi
    jl     jump_27553
    mov    $0x24d,%ebx
    mov    $data_912c6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_27553:
    lea    0x3ec(%esp),%esi
    mov    %esp,%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_27565:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2757d
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_27565
  jump_2757d:
    pop    %edi
  jump_2757e:
    cmpl   $0x0,0x608(%esp)
    je     jump_274dc
    jmp    jump_2791e
  jump_27591:
    mov    $data_912d6,%edx
    lea    0x584(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_2767b
    cmpl   $0xffffffff,0x5dc(%esp)
    jne    jump_2767b
    cmpb   $0x0,data_a3d20
    jne    jump_2767b
    xor    %edx,%edx
    mov    %edx,0x5e4(%esp)
  jump_275ce:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    mov    $0x8,%ebx
    call   func_2fe58
    mov    $data_912dc,%edx
    lea    0x3ec(%esp),%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_27603
    movl   $0xffffffff,0x5e4(%esp)
    jmp    jump_27668
  jump_27603:
    lea    0x3ec(%esp),%edi
    mov    0x5f8(%esp),%ebx
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    add    %ecx,%ebx
    mov    %ebx,0x5f8(%esp)
    cmp    $0x3e4,%ebx
    jl     jump_2763d
    mov    $0x25f,%ebx
    mov    $data_912e5,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2763d:
    lea    0x3ec(%esp),%esi
    mov    %esp,%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_2764f:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_27667
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2764f
  jump_27667:
    pop    %edi
  jump_27668:
    cmpl   $0x0,0x5e4(%esp)
    je     jump_275ce
    jmp    jump_2791e
  jump_2767b:
    mov    $data_912f5,%edx
    lea    0x584(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_27762
    cmpl   $0xffffffff,0x5dc(%esp)
    jne    jump_27762
    cmpb   $0x1,data_a3d20
    jne    jump_27762
    mov    %eax,0x600(%esp)
  jump_276b6:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    mov    $0xa,%ebx
    call   func_2fe58
    mov    $data_912fd,%edx
    lea    0x3ec(%esp),%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_276eb
    movl   $0xffffffff,0x600(%esp)
    jmp    jump_2774f
  jump_276eb:
    lea    0x3ec(%esp),%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    0x5f8(%esp),%eax
    add    %ecx,%eax
    mov    %eax,0x5f8(%esp)
    cmp    $0x3e4,%eax
    jl     jump_27724
    mov    $0x271,%ebx
    mov    $data_91308,%edx
    xor    %eax,%eax
    call   func_26198
  jump_27724:
    lea    0x3ec(%esp),%esi
    mov    %esp,%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_27736:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2774e
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_27736
  jump_2774e:
    pop    %edi
  jump_2774f:
    cmpl   $0x0,0x600(%esp)
    je     jump_276b6
    jmp    jump_2791e
  jump_27762:
    mov    $data_91318,%edx
    lea    0x584(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_2784a
    cmpl   $0xffffffff,0x5dc(%esp)
    jne    jump_2784a
    cmpb   $0x2,data_a3d20
    jne    jump_2784a
    mov    %eax,0x5ec(%esp)
  jump_2779d:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    mov    $0xa,%ebx
    call   func_2fe58
    mov    $data_91320,%edx
    lea    0x3ec(%esp),%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_277d2
    movl   $0xffffffff,0x5ec(%esp)
    jmp    jump_27837
  jump_277d2:
    lea    0x3ec(%esp),%edi
    mov    0x5f8(%esp),%esi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    add    %ecx,%esi
    mov    %esi,0x5f8(%esp)
    cmp    $0x3e4,%esi
    jl     jump_2780c
    mov    $0x283,%ebx
    mov    $data_9132b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2780c:
    lea    0x3ec(%esp),%esi
    mov    %esp,%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_2781e:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_27836
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2781e
  jump_27836:
    pop    %edi
  jump_27837:
    cmpl   $0x0,0x5ec(%esp)
    je     jump_2779d
    jmp    jump_2791e
  jump_2784a:
    mov    $data_9133b,%edx
    lea    0x584(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_2791e
    mov    %eax,0x60c(%esp)
    mov    %eax,0x5f4(%esp)
  jump_27871:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    mov    $0x7,%ebx
    call   func_2fe58
    mov    $data_91340,%edx
    lea    0x3ec(%esp),%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_278a6
    movl   $0xffffffff,0x60c(%esp)
    jmp    jump_27910
  jump_278a6:
    lea    0x3ec(%esp),%edi
    mov    0x5f4(%esp),%ebx
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    add    %ecx,%ebx
    mov    %ebx,0x5f4(%esp)
    cmp    $0xbb4,%ebx
    jl     jump_278e0
    mov    $0x295,%ebx
    mov    $data_91348,%edx
    xor    %eax,%eax
    call   func_26198
  jump_278e0:
    lea    0x3ec(%esp),%esi
    mov    0x604(%esp),%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_278f7:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2790f
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_278f7
  jump_2790f:
    pop    %edi
  jump_27910:
    cmpl   $0x0,0x60c(%esp)
    je     jump_27871
  jump_2791e:
    cmpl   $0x2,0x5e8(%esp)
    jne    jump_2735a
  jump_2792c:
    mov    %ebp,%eax
    mov    %esp,%ecx
    call   func_7744e
    mov    (%esp),%al
    xor    %esi,%esi
    test   %al,%al
    je     jump_2797d
    mov    $data_91358,%ebp
    mov    $0x2ab,%edi
  jump_27948:
    cmp    $0x3e5,%esi
    jl     jump_2795b
    mov    %edi,%ebx
    mov    %ebp,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2795b:
    mov    (%ecx),%ah
    cmp    $0xa,%ah
    je     jump_27971
    cmp    $0x40,%ah
    jne    jump_2796c
    movb   $0xa,(%ecx)
    jmp    jump_27974
  jump_2796c:
    cmp    $0x5f,%ah
    jne    jump_27974
  jump_27971:
    movb   $0x20,(%ecx)
  jump_27974:
    mov    0x1(%ecx),%bl
    inc    %ecx
    inc    %esi
    test   %bl,%bl
    jne    jump_27948
  jump_2797d:
    cmpl   $0x0,0x604(%esp)
    jne    jump_27998
    mov    $0x2b7,%ebx
    mov    $data_91368,%edx
    xor    %eax,%eax
    call   func_26198
  jump_27998:
    mov    0x604(%esp),%ecx
    mov    (%ecx),%bh
    xor    %esi,%esi
    test   %bh,%bh
    je     jump_279e3
    mov    $data_91378,%edi
    mov    $0x2bd,%ebp
  jump_279b1:
    cmp    $0xbb5,%esi
    jl     jump_279c4
    mov    %ebp,%ebx
    mov    %edi,%edx
    xor    %eax,%eax
    call   func_26198
  jump_279c4:
    mov    (%ecx),%al
    cmp    $0xa,%al
    je     jump_279d7
    cmp    $0x40,%al
    jne    jump_279d3
    movb   $0xa,(%ecx)
    jmp    jump_279da
  jump_279d3:
    cmp    $0x5f,%al
    jne    jump_279da
  jump_279d7:
    movb   $0x20,(%ecx)
  jump_279da:
    mov    0x1(%ecx),%dh
    inc    %ecx
    inc    %esi
    test   %dh,%dh
    jne    jump_279b1
  jump_279e3:
    xor    %eax,%eax
    push   $0x2e
    mov    data_104bea,%al
    push   $0x7
    xor    %edx,%edx
    mov    data_ffeae(,%eax,2),%ax
    push   $0x0
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   $data_d8668
    call   func_5cb3c
    add    $0x14,%esp
    mov    0x5d4(%esp),%esi
    lea    0x5c0(%esp),%edi
    lea    0x4(%esi),%esi
    mov    $0x278,%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    %edx,0x5cc(%esp)
    xor    %edx,%edx
    mov    $0x7,%eax
    mov    data_104bea,%dl
    mov    %eax,0x5c4(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    mov    $0x105,%ebx
    shl    $0x3,%eax
    mov    $0x1d1,%ecx
    sub    %edx,%eax
    mov    %ebx,0x5c8(%esp)
    mov    %ecx,0x5d0(%esp)
    mov    data_a2f74(,%eax,2),%al
    lea    0x5c0(%esp),%esi
    push   $0x257
    mov    0x608(%esp),%ecx
    mov    $0xa,%ebx
    xor    %ah,%ah
    mov    $0x278,%ebp
    shl    $0x2,%eax
    mov    $data_10debe,%edi
    add    $0x13,%eax
    push   $0xff
    cwtl
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %eax
    mov    %ebx,%edx
    lea    0x5cc(%esp),%edi
    push   $0x0
    mov    $data_10deb6,%eax
    mov    0x5e4(%esp),%esi
    call   func_2b8a8
    mov    $0xf5,%eax
    push   $0x126
    lea    0x4(%esp),%ecx
    lea    0x4(%esi),%esi
    mov    $0xa,%ebx
    push   $0xff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    %ebx,%edx
    mov    $0x138,%esi
    mov    $0x2e,%edi
    push   $0xf3
    mov    %ebp,0x5d8(%esp)
    mov    %eax,0x5dc(%esp)
    mov    %esi,0x5d0(%esp)
    mov    %edi,0x5d4(%esp)
    lea    0x5cc(%esp),%esi
    mov    $data_10debe,%edi
    push   $0x0
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    lea    0x5c0(%esp),%edi
    mov    0x5d4(%esp),%esi
    mov    $0x7,%edx
    mov    $0x3,%ebx
    mov    %ebp,%ecx
    lea    0x4(%esi),%esi
    lea    0x5c0(%esp),%eax
    xor    %ebp,%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    data_104bea,%cl
    mov    $0x25,%esi
    mov    %edx,0x5c4(%esp)
    mov    %edx,0x5c8(%esp)
    mov    %ebp,0x5cc(%esp)
    mov    %ebx,%edx
    mov    %esi,0x5d0(%esp)
    call   func_53e38
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f74(,%eax,2),%al
    xor    %ah,%ah
    shl    $0x2,%eax
    add    $0x13,%eax
    push   $0x25a
    lea    0x5c4(%esp),%esi
    lea    0x4bc(%esp),%ecx
    push   $0xff
    cwtl
    mov    $0xa,%ebx
    push   %eax
    mov    $data_10debe,%edi
    xor    %edx,%edx
    push   $0x2
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    add    $0x610,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_27bf8:
/*----------------------------------------------------------------*/
    call   func_2c830
    movl   $data_95c40,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_27c08:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_27c27
    mov    $data_95c04,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_27c27:
    mov    $0x1,%edx
    movl   $data_95c40,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_27c47
    call   func_76d64
  jump_27c47:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_27c50:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %eax,%edi
    mov    %dx,0x4(%esp)
    mov    %ebx,%esi
    cmp    $0x1,%dx
    jne    jump_27ceb
    xor    %ah,%ah
    mov    %esp,%edx
    mov    %ah,0x2(%esp)
    mov    %ah,0x1(%esp)
    mov    %ah,(%esp)
    mov    $data_d8654,%eax
    xor    %ebx,%ebx
    call   func_2c2f8
    mov    $0xffffffff,%edx
    mov    $0x5,%eax
    mov    %ebx,data_132b64
    mov    data_d366c,%bl
    mov    %edx,data_132b60
    cmp    $0x1,%bl
    jne    jump_27cc6
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f73(,%eax,2),%al
    xor    %ah,%ah
    add    $0x8,%eax
  jump_27cc6:
    movswl %ax,%edx
    xor    %ebx,%ebx
    mov    $data_10914c,%eax
    call   func_4f8cc
    mov    0x2(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x10,%edx
    call   func_2f424
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret
  jump_27ceb:
    mov    0x2(%esp),%edx
    sar    $0x10,%edx
    call   func_2f424
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret

vtable_27d00:
    .long   func_27daa
    .long   func_27dbd
    .long   func_27dd4
    .long   func_27deb
    .long   func_27e02
    .long   func_27e19


/*----------------------------------------------------------------*/
func_27d18:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x344,%esp
    mov    %eax,0x2c8(%esp)
    mov    data_d3669,%eax
    sar    $0x18,%eax
    dec    %eax
    test   %eax,%eax
    jl     jump_27d3a
    cmp    $0x4,%eax
  jump_27d3a:
    mov    data_d3668,%eax
    mov    %eax,%edx
    mov    $0xa,%ebx
    sar    $0x1f,%edx
    mov    %eax,0x2cc(%esp)
    idiv   %ebx
    dec    %eax
    mov    %eax,0x2d0(%esp)
    test   %eax,%eax
    jge    jump_27d6c
    xor    %esi,%esi
    mov    %esi,0x2d0(%esp)
    jmp    jump_27d80
  jump_27d6c:
    cmp    $0x9,%eax
    jle    jump_27d80
    movl   $0x9,0x2d0(%esp)
  jump_27d80:
    xor    %ah,%ah
    mov    $data_d8da0,%edi
    mov    %ah,data_d8da0
    mov    data_d366c,%al
    mov    %edi,0x2d4(%esp)
    cmp    $0x5,%al
    ja     func_27daa
    and    $0xff,%eax
    jmp    *%cs:vtable_27d00(,%eax,4)


/*----------------------------------------------------------------*/
func_27daa:
/*----------------------------------------------------------------*/
    mov    $0x34e,%ebx
    mov    $data_91388,%edx
    xor    %eax,%eax
    call   func_261a8
    jmp    jump_27e2e


/*----------------------------------------------------------------*/
func_27dbd:
/*----------------------------------------------------------------*/
    push   $data_91398
    lea    0x2b8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x8,%esp
    jmp    jump_27e2e


/*----------------------------------------------------------------*/
func_27dd4:
/*----------------------------------------------------------------*/
    push   $data_913a5
    lea    0x2b8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x8,%esp
    jmp    jump_27e2e


/*----------------------------------------------------------------*/
func_27deb:
/*----------------------------------------------------------------*/
    push   $data_913b2
    lea    0x2b8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x8,%esp
    jmp    jump_27e2e


/*----------------------------------------------------------------*/
func_27e02:
/*----------------------------------------------------------------*/
    push   $data_913bf
    lea    0x2b8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x8,%esp
    jmp    jump_27e2e


/*----------------------------------------------------------------*/
func_27e19:
/*----------------------------------------------------------------*/
    push   $data_913cc
    lea    0x2b8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x8,%esp
  jump_27e2e:
    lea    0x2b4(%esp),%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_27e68
    lea    0x2b4(%esp),%eax
    push   %eax
    push   $data_913d9
    mov    $0x370,%ebx
    call   func_2620c
    add    $0x8,%esp
    mov    $data_913ea,%edx
    xor    %eax,%eax
    call   func_261b8
  jump_27e68:
    xor    %dl,%dl
    xor    %eax,%eax
    mov    %dl,(%esp)
    mov    %eax,0x2dc(%esp)
  jump_27e76:
    lea    0x198(%esp),%edx
    mov    %ebp,%eax
    call   func_2fe58
    lea    0x264(%esp),%eax
    push   %eax
    push   $data_913fa
    lea    0x1a0(%esp),%eax
    push   %eax
    call   func_7742d
    add    $0xc,%esp
    mov    $data_913fd,%edx
    lea    0x264(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_27ec6
    movl   $0xffffffff,0x2dc(%esp)
    jmp    jump_280f5
  jump_27ec6:
    mov    $data_91401,%edx
    lea    0x264(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_27f9a
    mov    %eax,0x2fc(%esp)
    mov    %eax,0x300(%esp)
  jump_27eed:
    lea    0x198(%esp),%edx
    mov    %ebp,%eax
    mov    $0x7,%ebx
    call   func_2fe58
    mov    $data_91409,%edx
    lea    0x198(%esp),%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_27f22
    movl   $0xffffffff,0x2fc(%esp)
    jmp    jump_27f87
  jump_27f22:
    lea    0x198(%esp),%edi
    mov    0x300(%esp),%ebx
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    add    %ecx,%ebx
    mov    %ebx,0x300(%esp)
    cmp    $0xc4,%ebx
    jl     jump_27f5c
    mov    $0x3a1,%ebx
    mov    $data_91411,%edx
    xor    %eax,%eax
    call   func_26198
  jump_27f5c:
    lea    0x198(%esp),%esi
    mov    %esp,%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_27f6e:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_27f86
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_27f6e
  jump_27f86:
    pop    %edi
  jump_27f87:
    cmpl   $0x0,0x2fc(%esp)
    je     jump_27eed
    jmp    jump_280f5
  jump_27f9a:
    mov    $data_91421,%edx
    lea    0x264(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_28072
    mov    %eax,0x304(%esp)
    mov    %eax,0x308(%esp)
  jump_27fc1:
    lea    0x198(%esp),%edx
    mov    %ebp,%eax
    mov    $0x7,%ebx
    call   func_2fe58
    mov    $data_91429,%edx
    lea    0x198(%esp),%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_27ff6
    movl   $0xffffffff,0x304(%esp)
    jmp    jump_2805f
  jump_27ff6:
    lea    0x198(%esp),%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    0x308(%esp),%eax
    add    %ecx,%eax
    mov    %eax,0x308(%esp)
    cmp    $0x3e4,%eax
    jl     jump_2802f
    mov    $0x3b3,%ebx
    mov    $data_91431,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2802f:
    lea    0x198(%esp),%esi
    mov    0x2d4(%esp),%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_28046:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2805e
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_28046
  jump_2805e:
    pop    %edi
  jump_2805f:
    cmpl   $0x0,0x304(%esp)
    je     jump_27fc1
    jmp    jump_280f5
  jump_28072:
    mov    $data_91441,%edx
    lea    0x264(%esp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_280f5
    mov    0x2d0(%esp),%eax
    xor    %ebx,%ebx
    test   %eax,%eax
    jle    jump_280ae
    mov    0x2d0(%esp),%ecx
  jump_2809b:
    lea    0x198(%esp),%edx
    mov    %ebp,%eax
    inc    %ebx
    call   func_2fe58
    cmp    %ecx,%ebx
    jl     jump_2809b
  jump_280ae:
    lea    0x198(%esp),%edx
    mov    %ebp,%eax
    lea    0x198(%esp),%esi
    call   func_2fe58
    xor    %dh,%dh
    lea    0xcc(%esp),%edi
    mov    %dh,0xcc(%esp)
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_280dc:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_280f4
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_280dc
  jump_280f4:
    pop    %edi
  jump_280f5:
    cmpl   $0xffffffff,0x2dc(%esp)
    jne    jump_27e76
    mov    %ebp,%eax
    mov    %esp,%ecx
    call   func_7744e
    xor    %edi,%edi
    mov    (%esp),%bl
    mov    %edi,0x2e0(%esp)
    test   %bl,%bl
    je     jump_2816e
    mov    $data_91447,%edi
    mov    $0x3d7,%esi
  jump_28126:
    cmpl   $0xc5,0x2e0(%esp)
    jl     jump_2813e
    mov    %esi,%ebx
    mov    %edi,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2813e:
    mov    (%ecx),%bh
    cmp    $0xa,%bh
    je     jump_28154
    cmp    $0x40,%bh
    jne    jump_2814f
    movb   $0xa,(%ecx)
    jmp    jump_28157
  jump_2814f:
    cmp    $0x5f,%bh
    jne    jump_28157
  jump_28154:
    movb   $0x20,(%ecx)
  jump_28157:
    mov    0x2e0(%esp),%eax
    mov    0x1(%ecx),%dl
    inc    %eax
    inc    %ecx
    mov    %eax,0x2e0(%esp)
    test   %dl,%dl
    jne    jump_28126
  jump_2816e:
    xor    %edx,%edx
    mov    %edx,0x2e0(%esp)
    mov    0xcc(%esp),%dh
    lea    0xcc(%esp),%ecx
    test   %dh,%dh
    je     jump_281db
    mov    $data_91457,%esi
    mov    $0x3e9,%edi
  jump_28193:
    cmpl   $0xc5,0x2e0(%esp)
    jl     jump_281ab
    mov    %edi,%ebx
    mov    %esi,%edx
    xor    %eax,%eax
    call   func_26198
  jump_281ab:
    mov    (%ecx),%bl
    cmp    $0xa,%bl
    je     jump_281c1
    cmp    $0x40,%bl
    jne    jump_281bc
    movb   $0xa,(%ecx)
    jmp    jump_281c4
  jump_281bc:
    cmp    $0x5f,%bl
    jne    jump_281c4
  jump_281c1:
    movb   $0x20,(%ecx)
  jump_281c4:
    mov    0x2e0(%esp),%ebp
    mov    0x1(%ecx),%ah
    inc    %ebp
    inc    %ecx
    mov    %ebp,0x2e0(%esp)
    test   %ah,%ah
    jne    jump_28193
  jump_281db:
    mov    0x2d4(%esp),%eax
    test   %eax,%eax
    jne    jump_281f5
    mov    $0x3f5,%ebx
    mov    $data_91467,%edx
    call   func_26198
  jump_281f5:
    xor    %edx,%edx
    mov    0x2d4(%esp),%ecx
    mov    %edx,0x2e0(%esp)
    cmpb   $0x0,(%ecx)
    je     jump_2825c
    mov    $data_91477,%esi
    mov    $0x3fb,%edi
  jump_28214:
    cmpl   $0x3e5,0x2e0(%esp)
    jl     jump_2822c
    mov    %edi,%ebx
    mov    %esi,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2822c:
    mov    (%ecx),%dh
    cmp    $0xa,%dh
    je     jump_28242
    cmp    $0x40,%dh
    jne    jump_2823d
    movb   $0xa,(%ecx)
    jmp    jump_28245
  jump_2823d:
    cmp    $0x5f,%dh
    jne    jump_28245
  jump_28242:
    movb   $0x20,(%ecx)
  jump_28245:
    mov    0x2e0(%esp),%ebp
    mov    0x1(%ecx),%al
    inc    %ebp
    inc    %ecx
    mov    %ebp,0x2e0(%esp)
    test   %al,%al
    jne    jump_28214
  jump_2825c:
    mov    0x2c8(%esp),%esi
    lea    0x2a0(%esp),%edi
    mov    $0x7,%eax
    lea    0x4(%esi),%esi
    mov    $0xd7,%edx
    mov    $0x12f,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0x17d,%ecx
    mov    %eax,0x2a4(%esp)
    mov    %edx,0x2a8(%esp)
    mov    %ebx,0x2ac(%esp)
    mov    data_d366c,%ah
    mov    %ecx,0x2b0(%esp)
    cmp    $0x1,%ah
    je     jump_282e0
    push   $0x53
    push   $0x94
    mov    0x2d8(%esp),%esi
    xor    %edx,%edx
    push   %esi
    mov    $data_12fc20,%eax
    mov    data_ffef6,%dx
    call   func_1b084
    push   %eax
    lea    0x2b0(%esp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
  jump_282e0:
    mov    $0x12f,%eax
    mov    $0x7,%edi
    mov    %eax,0x2ac(%esp)
    mov    %esp,%eax
    mov    $0xd7,%ebp
    push   %eax
    mov    $0x107,%edx
    mov    %edi,0x2a8(%esp)
    push   $data_91487
    lea    0x1a0(%esp),%eax
    mov    %ebp,0x2b0(%esp)
    push   %eax
    mov    %edx,0x2bc(%esp)
    xor    %edx,%edx
    call   func_76d09
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0xc,%esp
    mov    data_a2f74(,%eax,2),%al
    lea    0x2a0(%esp),%esi
    push   $0x118
    lea    0x19c(%esp),%ecx
    mov    $0xe,%edx
    xor    %ah,%ah
    mov    0x2d0(%esp),%ebp
    shl    $0x2,%eax
    mov    $data_10debe,%edi
    add    $0x13,%eax
    push   $0xff
    cwtl
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %eax
    xor    %ebx,%ebx
    mov    $0x12f,%esi
    push   $0x1
    mov    $data_10deb6,%eax
    mov    $0x17d,%edi
    call   func_2b8a8
    mov    $0x7,%ebx
    mov    $0x14d,%ecx
    lea    0xcc(%esp),%eax
    mov    %esi,0x2ac(%esp)
    push   %eax
    mov    %edi,0x2b4(%esp)
    mov    %ebx,0x2a8(%esp)
    push   %ebp
    mov    $0xf,%eax
    mov    %ecx,0x2b0(%esp)
    call   func_1cea8
    push   %eax
    lea    0x1a4(%esp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_76d09
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0x10,%esp
    mov    data_a2f74(,%eax,2),%al
    xor    %ah,%ah
    shl    $0x2,%eax
    add    $0x13,%eax
    push   $0x118
    lea    0x2a4(%esp),%esi
    lea    0x19c(%esp),%ecx
    push   $0xff
    cwtl
    mov    $data_10debe,%edi
    push   %eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    push   $0x3
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    movl   $0x278,0x2ac(%esp)
    xor    %edx,%edx
    mov    $0x7,%eax
    mov    data_104bea,%dl
    mov    %eax,0x2a4(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    mov    $0x18d,%ebx
    shl    $0x3,%eax
    mov    $0x1d1,%ecx
    sub    %edx,%eax
    mov    %ebx,0x2a8(%esp)
    mov    %ecx,0x2b0(%esp)
    mov    data_a2f74(,%eax,2),%al
    lea    0x2a0(%esp),%esi
    xor    %ah,%ah
    push   $0x25a
    shl    $0x2,%eax
    mov    0x2d8(%esp),%ecx
    add    $0x13,%eax
    push   $0xff
    cwtl
    mov    $0x7,%edx
    push   %eax
    mov    $data_10debe,%edi
    xor    %ebx,%ebx
    push   $0x1
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    xor    %eax,%eax
    push   $0x7
    mov    data_104bea,%al
    push   $0x7
    xor    %edx,%edx
    mov    data_ffeae(,%eax,2),%ax
    push   $0x0
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    $0x2,%ebp
    push   $data_d8668
    mov    $0x1,%esi
    mov    $0x2a,%edi
    call   func_5cb3c
    mov    $0xa,%ebx
    add    $0x14,%esp
    xor    %ecx,%ecx
    mov    0x2c8(%esp),%eax
    mov    data_104bea,%cl
    mov    %ebx,%edx
    mov    %esi,0x2e0(%esp)
    mov    %ebp,0x324(%esp)
    add    $0x4,%eax
    mov    $0x15b,%esi
    call   func_53e38
    jmp    jump_28593
  jump_28537:
    cmp    $0x2,%dl
    jne    jump_28541
    mov    $0x8,%ebx
  jump_28541:
    cmp    $0xffffffff,%ebx
    je     jump_28570
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffef2,%dx
    call   func_1b084
    lea    0x21(%edi),%edx
    push   %edx
    lea    -0x7(%esi),%edx
    push   %edx
    push   %ebx
    push   %eax
    push   $data_d8668
    call   func_5cb3c
    add    $0x14,%esp
  jump_28570:
    mov    0x324(%esp),%ebp
    mov    0x2e0(%esp),%eax
    add    $0x3e,%esi
    add    $0x2,%ebp
    inc    %eax
    mov    %ebp,0x324(%esp)
    mov    %eax,0x2e0(%esp)
  jump_28593:
    mov    data_a3cf2,%eax
    mov    0x2e0(%esp),%edx
    sar    $0x10,%eax
    cmp    %edx,%eax
    jle    jump_2867a
    cmp    $0x4,%edx
    jne    jump_285b9
    mov    $0x15b,%esi
    mov    $0x85,%edi
  jump_285b9:
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_d8da0
    push   %edi
    mov    0x33c(%esp),%eax
    push   %esi
    xor    %edx,%edx
    mov    data_ffea0(%eax),%ax
    push   $0x0
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   $data_d8668
    call   func_5d631
    add    $0x28,%esp
    mov    0x2de(%esp),%ebp
    mov    data_ffef2,%ax
    sar    $0x10,%ebp
    xor    %edx,%edx
    push   %ebp
    mov    $0x3,%ebx
    mov    %ax,%dx
    push   %edi
    mov    $data_12fc20,%eax
    mov    %esi,%ecx
    call   func_1b084
    mov    %eax,%edx
    mov    $data_d8668,%eax
    call   func_53eb8
    mov    $data_d8668,%eax
    lea    0x21(%edi),%ebx
    lea    -0x7(%esi),%edx
    mov    %ebp,%ecx
    call   func_53e38
    xor    %eax,%eax
    mov    data_104bea,%al
    imul   $0x1ee,%eax,%eax
    mov    0x2e0(%esp),%ecx
    add    $data_a2f72,%eax
    add    %ecx,%eax
    mov    0x1c0(%eax),%dl
    mov    $0xffffffff,%ebx
    cmp    $0x3,%dl
    jne    jump_28537
    mov    $0x9,%ebx
    jmp    jump_28541
  jump_2867a:
    mov    $0x1fe,%edi
    mov    $0x7,%ecx
    mov    $0x278,%ebx
    xor    %edx,%edx
    mov    $0xba,%ebp
    mov    data_104bea,%dl
    mov    $0x138,%esi
    mov    %ebx,0x2e4(%esp)
    mov    data_ffebc(,%edx,2),%ax
    mov    %esi,0x2a4(%esp)
    mov    %eax,0x33c(%esp)
    mov    %edx,%eax
    mov    %ecx,0x2a8(%esp)
    shl    $0x5,%eax
    mov    %ebx,0x2ac(%esp)
    sub    %edx,%eax
    mov    $0x17d,%ebx
    shl    $0x3,%eax
    mov    %ebx,0x2b0(%esp)
    sub    %edx,%eax
    xor    %ebx,%ebx
    add    %eax,%eax
    xor    %edx,%edx
    add    $data_a2f72,%eax
    mov    %ecx,%esi
    call   func_40224
    mov    %eax,0x2e8(%esp)
    cmp    $0x14,%eax
    jge    jump_2871a
    mov    $0x14,%edx
    sub    %eax,%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x11,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    sub    %eax,%esi
  jump_2871a:
    test   %esi,%esi
    jge    jump_28722
    xor    %esi,%esi
    jmp    jump_2872c
  jump_28722:
    cmp    $0x6,%esi
    jle    jump_2872c
    mov    $0x6,%esi
  jump_2872c:
    mov    0x2e8(%esp),%eax
    mov    %eax,%edx
    lea    0x1(%esi),%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0x2ec(%esp)
    xor    %eax,%eax
    mov    %eax,0x2f0(%esp)
    mov    0x2e4(%esp),%eax
    sub    %ecx,%ebp
    sub    %edi,%eax
    sub    $0x14,%ebp
    sub    $0x14,%eax
    mov    %ebp,0x2f8(%esp)
    mov    %eax,0x2f4(%esp)
    cmp    $0x2,%eax
    jge    jump_2877c
    movl   $0x2,0x2f4(%esp)
  jump_2877c:
    cmpl   $0x2,0x2f8(%esp)
    jge    jump_28791
    movl   $0x2,0x2f8(%esp)
  jump_28791:
    add    $0xa,%edi
    add    $0xa,%ecx
    xor    %edx,%edx
    mov    %esi,%ebp
    mov    %edx,0x2e0(%esp)
    mov    %edi,0x2d8(%esp)
    shl    $0x8,%ebp
    mov    %ecx,0x30c(%esp)
    neg    %ebp
    mov    $data_ca1f1,%edi
    add    $0x700,%ebp
    jmp    jump_287e6
  jump_287c2:
    mov    0x2e0(%esp),%edx
    mov    0x2f0(%esp),%ebx
    add    $0x162,%edi
    inc    %edx
    inc    %ebx
    mov    %edx,0x2e0(%esp)
    mov    %ebx,0x2f0(%esp)
  jump_287e6:
    mov    data_d35e5,%eax
    mov    0x2e0(%esp),%edx
    sar    $0x10,%eax
    cmp    %edx,%eax
    jle    jump_288ef
    xor    %edx,%edx
    mov    0x54(%edi),%eax
    mov    data_104bea,%dl
    sar    $0x10,%eax
    mov    %edi,0x2c4(%esp)
    cmp    %edx,%eax
    jne    jump_287c2
    mov    0x2f0(%esp),%eax
    mov    0x2ec(%esp),%edx
    xor    %ebx,%ebx
    cmp    %edx,%eax
    jle    jump_28835
    test   %esi,%esi
    jle    jump_28835
    add    $0x100,%ebp
    dec    %esi
  jump_28835:
    test   %esi,%esi
    jle    jump_2884e
    mov    data_d8d8f,%eax
    add    %ebp,%eax
    push   %eax
    call   func_5d007
    mov    $0x1,%ebx
    add    $0x4,%esp
  jump_2884e:
    mov    0x2d8(%esp),%ecx
    sub    0x2a4(%esp),%ecx
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idivl  0x2f4(%esp)
    mov    0x30c(%esp),%eax
    add    %edx,%ecx
    mov    0x2a8(%esp),%edx
    sub    %edx,%eax
    mov    %eax,0x32c(%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idivl  0x2f8(%esp)
    push   %ebx
    push   $0x5555
    push   $0x5555
    push   $0x0
    mov    0x33c(%esp),%eax
    push   $data_d8da0
    add    %eax,%edx
    mov    0x2d8(%esp),%eax
    push   %edx
    mov    0xa7(%eax),%eax
    push   %ecx
    sar    $0x18,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x35c(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    lea    0x2c4(%esp),%eax
    push   %eax
    call   func_5d631
    add    $0x28,%esp
    jmp    jump_287c2
  jump_288ef:
    xor    %edx,%edx
    mov    data_ffeda,%ax
    mov    data_104bea,%dl
    mov    %eax,0x340(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    mov    $0x138,%ebx
    sub    %edx,%eax
    mov    $0xd2,%ecx
    shl    $0x3,%eax
    mov    $0x1ff,%esi
    sub    %edx,%eax
    mov    $0x17d,%ebp
    add    %eax,%eax
    mov    %esi,0x330(%esp)
    add    $data_a2f72,%eax
    mov    $0x7,%esi
    call   func_402e0
    cmp    $0x14,%eax
    jge    jump_28964
    mov    $0x14,%edx
    sub    %eax,%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x11,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    $0x7,%esi
    sub    %eax,%esi
  jump_28964:
    test   %esi,%esi
    jge    jump_2896c
    xor    %esi,%esi
    jmp    jump_28976
  jump_2896c:
    cmp    $0x6,%esi
    jle    jump_28976
    mov    $0x6,%esi
  jump_28976:
    mov    0x2e8(%esp),%eax
    mov    %eax,%edx
    lea    0x1(%esi),%edi
    sar    $0x1f,%edx
    idiv   %edi
    mov    %eax,0x334(%esp)
    mov    0x330(%esp),%eax
    sub    %ebx,%eax
    sub    $0x14,%eax
    mov    %eax,0x328(%esp)
    mov    %ebp,%eax
    xor    %edi,%edi
    sub    %ecx,%eax
    mov    %edi,0x338(%esp)
    sub    $0x14,%eax
    mov    0x328(%esp),%ebp
    mov    %eax,0x310(%esp)
    cmp    $0x2,%ebp
    jge    jump_289cf
    movl   $0x2,0x328(%esp)
  jump_289cf:
    cmpl   $0x2,0x310(%esp)
    jge    jump_289e4
    movl   $0x2,0x310(%esp)
  jump_289e4:
    mov    $data_bb1b3,%edi
    xor    %ebp,%ebp
    add    $0xa,%ebx
    mov    %ebp,0x2e0(%esp)
    mov    %esi,%ebp
    add    $0xa,%ecx
    shl    $0x8,%ebp
    mov    %ebx,0x318(%esp)
    neg    %ebp
    mov    %ecx,0x31c(%esp)
    add    $0x700,%ebp
    jmp    jump_28a36
  jump_28a15:
    mov    0x2e0(%esp),%ecx
    mov    0x338(%esp),%eax
    add    $0x7b,%edi
    inc    %ecx
    inc    %eax
    mov    %ecx,0x2e0(%esp)
    mov    %eax,0x338(%esp)
  jump_28a36:
    mov    data_ca1ed,%eax
    mov    0x2e0(%esp),%ecx
    sar    $0x10,%eax
    cmp    %ecx,%eax
    jle    jump_28b49
    mov    data_104bea,%bl
    mov    0x57(%edi),%al
    mov    %edi,0x314(%esp)
    cmp    %bl,%al
    jne    jump_28a15
    mov    0x338(%esp),%eax
    mov    0x334(%esp),%edx
    xor    %ebx,%ebx
    cmp    %edx,%eax
    jle    jump_28a80
    test   %esi,%esi
    jle    jump_28a80
    add    $0x100,%ebp
    dec    %esi
  jump_28a80:
    test   %esi,%esi
    jle    jump_28a99
    mov    data_d8d8f,%eax
    add    %ebp,%eax
    push   %eax
    call   func_5d007
    mov    $0x1,%ebx
    add    $0x4,%esp
  jump_28a99:
    mov    0x318(%esp),%ecx
    sub    0x2a4(%esp),%ecx
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idivl  0x328(%esp)
    add    %edx,%ecx
    mov    0x2a8(%esp),%edx
    mov    %ecx,0x32c(%esp)
    mov    0x31c(%esp),%ecx
    call   func_782df
    sub    %edx,%ecx
    mov    %eax,%edx
    sar    $0x1f,%edx
    idivl  0x310(%esp)
    push   %ebx
    push   $0x5555
    push   $0x5555
    push   $0x0
    push   $data_d8da0
    add    %ecx,%edx
    push   %edx
    mov    0x32c(%esp),%edx
    xor    %eax,%eax
    mov    0x344(%esp),%ebx
    mov    0x16(%edx),%ax
    push   %ebx
    lea    (%eax,%eax,4),%edx
    mov    0x330(%esp),%ebx
    xor    %eax,%eax
    mov    0x14(%ebx),%ax
    add    %edx,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x360(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    lea    0x2c4(%esp),%eax
    push   %eax
    call   func_5d631
    add    $0x28,%esp
    jmp    jump_28a15
  jump_28b49:
    mov    $0xcb,%ebp
    mov    0x2c8(%esp),%eax
    xor    %esi,%esi
    xor    %edi,%edi
    mov    %esi,0x2e0(%esp)
    add    $0x4,%eax
    mov    $0x213,%esi
    mov    %eax,0x320(%esp)
    jmp    jump_28b86
  jump_28b71:
    mov    0x2e0(%esp),%edx
    add    $0x11,%esi
    inc    %edx
    add    $0x4b,%edi
    mov    %edx,0x2e0(%esp)
  jump_28b86:
    xor    %eax,%eax
    mov    0x2e0(%esp),%edx
    mov    data_105258,%ax
    cmp    %edx,%eax
    jle    jump_28c19
    test   %edx,%edx
    je     jump_28bb9
    mov    $0x6,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    test   %edx,%edx
    jne    jump_28bb9
    mov    $0x213,%esi
    add    $0x11,%ebp
  jump_28bb9:
    mov    $0x1,%eax
    mov    data_10529f(%edi),%edx
    mov    data_104bea,%cl
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_28b71
    push   $0x0
    push   $0x5555
    push   $0x5555
    push   $0x0
    push   $data_d8da0
    push   %ebp
    push   %esi
    mov    0x2fc(%esp),%ecx
    xor    %edx,%edx
    push   %ecx
    mov    $data_12fc20,%eax
    mov    data_ffede,%dx
    call   func_1b084
    push   %eax
    mov    0x344(%esp),%eax
    push   %eax
    call   func_5d631
    add    $0x28,%esp
    jmp    jump_28b71
  jump_28c19:
    mov    $data_d8668,%edx
    mov    $data_10ae70,%eax
    call   func_552cc
    add    $0x344,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_28c40:
/*----------------------------------------------------------------*/
    movl   $0xffffffff,data_d8650
    ret


/*----------------------------------------------------------------*/
func_28c4c:
/*----------------------------------------------------------------*/
    movswl (%eax),%eax
    movswl (%edx),%edx
    sub    %edx,%eax
    ret


/*----------------------------------------------------------------*/
func_28c74:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    call   func_1bb78
    add    $0x90a,%eax
    call   func_2b2c0
    lea    -0x90a(%eax),%ecx
    movl   $0x0,0x198(%ecx)
    movl   $0x0,0x1a8(%ecx)
    movl   $0x0,0x1ac(%ecx)
    mov    $0x80,%ebx
    movl   $0x0,0x1b0(%ecx)
    xor    %edx,%edx
    movl   $0x0,0x1b4(%ecx)
    lea    0x118(%ecx),%eax
    movl   $0xffffffff,0x19c(%ecx)
    call   func_76ec0
    movl   $0x0,0x1e4(%ecx)
    movl   $0x0,0x1e8(%ecx)
    mov    $0x600,%ebx
    movl   $0x0,0x1ec(%ecx)
    lea    0x204(%ecx),%eax
    movl   $0x0,0x1f0(%ecx)
    xor    %edx,%edx
    movl   $0x0,0x946(%ecx)
    call   func_76ec0
    mov    $0x100,%ebx
    lea    0x808(%ecx),%eax
    xor    %edx,%edx
    call   func_76ec0
    movw   $0x0,0x804(%ecx)
    movw   $0x0,0x806(%ecx)
    movw   $0x0,0x908(%ecx)
    movl   $0x0,0x92e(%ecx)
    movw   $0x0,0x932(%ecx)
    movw   $0x0,0x934(%ecx)
    movl   $0xffffffff,0x936(%ecx)
    movl   $0x12,0x1e0(%ecx)
    movl   $0x0,0x93a(%ecx)
    movl   $0xffffffff,0x93e(%ecx)
    mov    %ecx,%eax
    movl   $0x0,0x942(%ecx)
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_28da4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    cmpl   $0xffffffff,0x1b0(%eax)
    jne    jump_28dbd
    mov    0x1ac(%eax),%eax
    call   func_2627c
  jump_28dbd:
    mov    0x1ac(%ecx),%eax
    call   func_76d64
    cmpl   $0xffffffff,0x1b4(%ecx)
    jne    jump_28dfd
    mov    0x198(%ecx),%eax
    call   func_2627c
    mov    0x198(%ecx),%eax
    call   func_76d64
    mov    0x1a8(%ecx),%eax
    call   func_2627c
    mov    0x1a8(%ecx),%eax
    call   func_76d64
  jump_28dfd:
    mov    %ecx,%edx
    xor    %ebx,%ebx
    jmp    jump_28e12
  jump_28e03:
    mov    0x808(%edx),%eax
    call   func_2627c
    add    $0x8,%edx
    inc    %ebx
  jump_28e12:
    mov    0x906(%ecx),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jl     jump_28e03
    mov    0x808(%edx),%eax
    call   func_76d64
    xor    %ebx,%ebx
    mov    %ecx,%edx
    jmp    jump_28e34
  jump_28e30:
    add    $0xc,%edx
    inc    %ebx
  jump_28e34:
    mov    0x804(%ecx),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jge    jump_28e71
    mov    0x204(%edx),%eax
    sar    $0x10,%eax
    cmp    $0xa,%eax
    jne    jump_28e30
    mov    0x20c(%edx),%eax
    call   func_2627c
    mov    0x20c(%edx),%eax
    call   func_76d64
    movl   $0x0,0x20c(%edx)
    jmp    jump_28e30
  jump_28e71:
    mov    0x92e(%ecx),%esi
    test   %esi,%esi
    je     jump_28e82
    mov    %esi,%eax
    call   func_2627c
  jump_28e82:
    mov    0x92e(%ecx),%eax
    call   func_76d64
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_2ad08
    lea    0x90a(%ecx),%eax
    call   func_2b2e0
    sub    $0x90a,%eax
    xor    %edx,%edx
    call   func_1bbc8
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_28eb4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,(%esp)
    mov    %ecx,%ebp
    test   %edx,%edx
    jne    jump_28ece
    xor    %eax,%eax
    jmp    jump_2902e
  jump_28ece:
    mov    $data_9148c,%edx
    mov    $0x200,%ebx
    call   func_2a1dc
    xor    %ecx,%ecx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_1bbfc
    test   %eax,%eax
    jne    jump_28f1f
    lea    0x118(%esi),%edx
    mov    $0x80,%ebx
    mov    %esi,%eax
    call   func_1bf94
    cmp    $0xffffffff,%eax
    jne    jump_28f3b
    mov    $0xe3,%ebx
    mov    $data_91499,%edx
    xor    %eax,%eax
    call   func_261a8
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_28f1f:
    mov    $0xe9,%ebx
    mov    $data_914a5,%edx
    xor    %eax,%eax
    call   func_261a8
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_28f3b:
    xor    %eax,%eax
    mov    0x11c(%esi),%ax
    cmp    $0xaf12,%eax
    je     jump_28f67
    mov    $0xef,%ebx
    mov    $data_914b1,%edx
    xor    %eax,%eax
    call   func_261a8
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_28f67:
    cmp    $0xffffffff,%ebp
    jne    jump_28f87
    xor    %edx,%edx
    mov    $0x280,%eax
    mov    0x120(%esi),%dx
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    jmp    jump_28f89
  jump_28f87:
    mov    %ebp,%eax
  jump_28f89:
    mov    0x14(%esp),%edx
    mov    %eax,0x1a0(%esi)
    cmp    $0xffffffff,%edx
    jne    jump_28fb3
    xor    %edx,%edx
    mov    $0x1e0,%eax
    mov    0x122(%esi),%dx
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    jmp    jump_28fb5
  jump_28fb3:
    mov    %edx,%eax
  jump_28fb5:
    movl   $0x27f,0x1bc(%esi)
    movl   $0x1df,0x1c0(%esi)
    mov    %eax,0x1a4(%esi)
    lea    0x1b8(%esi),%eax
    mov    (%esp),%ebx
    mov    %eax,0x1cc(%esi)
    test   %ebx,%ebx
    jne    jump_28ff9
    mov    data_d8654,%eax
    mov    %eax,0x1ac(%esi)
    test   %eax,%eax
    je     jump_2902e
    mov    %ebx,0x1b0(%esi)
    jmp    jump_29009
  jump_28ff9:
    movl   $0x0,0x1b0(%esi)
    mov    %ebx,0x1ac(%esi)
  jump_29009:
    movl   $0x0,0x1c4(%esi)
    mov    0x1ac(%esi),%eax
    movl   $0x0,0x1c8(%esi)
    mov    %eax,0x1b8(%esi)
    mov    $0xffffffff,%eax
  jump_2902e:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_29038:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%ebp
    mov    %ebx,%edi
    movw   $0x0,0x804(%eax)
    movw   $0x0,0x92a(%eax)
    movl   $0x0,0x942(%eax)
    movw   $0x0,0x92c(%eax)
    cmp    %ebx,%edx
    jae    jump_2907b
    mov    $0x15e,%ebx
    mov    $data_914bd,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2907b:
    mov    %ebp,%eax
    sub    %ecx,%eax
    cmp    %edi,%eax
    jae    jump_29085
    mov    %eax,%edi
  jump_29085:
    mov    0x1b4(%esi),%edx
    movl   $0xffffffff,0x19c(%esi)
    cmp    $0xffffffff,%edx
    jne    jump_290e4
    mov    0x198(%esi),%eax
    call   func_2627c
    mov    0x198(%esi),%eax
    call   func_76d5c
    mov    0x1a8(%esi),%eax
    call   func_2627c
    mov    0x1a8(%esi),%eax
    call   func_76d5c
    movl   $0x0,0x198(%esi)
    movl   $0x0,0x1a8(%esi)
    movl   $0x0,0x1b4(%esi)
  jump_290e4:
    mov    0x14(%esp),%ebx
    test   %ebx,%ebx
    je     jump_290f2
    mov    %ebx,0x1e8(%esi)
  jump_290f2:
    cmpl   $0x0,0x1e8(%esi)
    jne    jump_29131
    mov    $data_914c9,%ebx
    mov    %ebp,%eax
    mov    $0x1,%edx
    call   func_77604
    call   func_2625c
    mov    %eax,0x1e8(%esi)
    test   %eax,%eax
    jne    jump_29131
    mov    $0x183,%ebx
    mov    $data_914d5,%edx
    call   func_261a8
    xor    %eax,%eax
    jmp    jump_291ef
  jump_29131:
    mov    0x1e8(%esi),%eax
    mov    %ebp,0x1f4(%esi)
    add    %ebp,%eax
    mov    0x168(%esi),%edx
    mov    %eax,0x1ec(%esi)
    sub    %ecx,%eax
    xor    %ebx,%ebx
    mov    %eax,0x1f0(%esi)
    mov    $0x40,%ecx
    mov    0x1f0(%esi),%ebp
    mov    0x10(%esp),%eax
    sub    %edi,%ebp
    mov    %eax,0x1fc(%esi)
    mov    %esi,%eax
    mov    %ebp,0x1e4(%esi)
    call   func_1becc
    push   $func_2bcf4
    mov    %edi,%ebx
    mov    %esi,%eax
    mov    0x1e4(%esi),%edx
    call   func_1bfd4
    cmp    %edi,%eax
    setge  %al
    push   $0x0
    push   $0x1df
    push   $0x27f
    and    $0xff,%eax
    push   $0x0
    dec    %eax
    push   $0x0
    mov    %eax,0x200(%esi)
    call   *data_96be0
    mov    0x1e4(%esi),%eax
    mov    %eax,0x198(%esi)
    add    $0x10,%eax
    mov    %eax,0x1a8(%esi)
    mov    0x1e8(%esi),%eax
    mov    %eax,0x1e4(%esi)
    mov    0x198(%esi),%eax
    sub    0x1e4(%esi),%eax
    add    $0x14,%esp
    mov    %eax,0x1f8(%esi)
    mov    $0xffffffff,%eax
  jump_291ef:
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_296b4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    cmpl   $0x0,data_d8650
    je     jump_29b17
    cmpl   $0xffffffff,0x946(%eax)
    jne    jump_296d7
    call   func_29b24
  jump_296d7:
    cmpl   $0xffffffff,data_d8650
    je     jump_296ed
    cmpl   $0xffffffff,0x93a(%ebp)
    jne    jump_299ec
  jump_296ed:
    mov    0x93a(%ebp),%edi
    test   %edi,%edi
    jne    jump_29700
    cli
    mov    %edi,data_d8650
    sti
    cld
  jump_29700:
    mov    0x19c(%ebp),%edx
    inc    %edx
    mov    %edx,0x19c(%ebp)
    jne    jump_2972b
    mov    0x926(%ebp),%ecx
    push   %ecx
    push   $0x1df
    push   $0x27f
    push   %edx
    push   %edx
    call   *data_96be0
    add    $0x14,%esp
  jump_2972b:
    xor    %eax,%eax
    mov    0x19c(%ebp),%esi
    mov    0x11e(%ebp),%ax
    cmp    %esi,%eax
    jg     jump_29745
    xor    %eax,%eax
    jmp    jump_29b1c
  jump_29745:
    mov    0x198(%ebp),%eax
    mov    0x4(%eax),%ax
    mov    data_a0cf8,%edi
    inc    %edi
    and    $0xffff,%eax
    mov    %edi,data_a0cf8
    cmp    $0xf1fa,%eax
    je     jump_29779
    mov    $0x32e,%ebx
    mov    $data_91535,%edx
    xor    %eax,%eax
    call   func_26198
  jump_29779:
    mov    0x1a8(%ebp),%esi
    xor    %edi,%edi
    jmp    jump_297d2
  jump_29783:
    mov    %ebp,%eax
    movw   $0x0,0x92c(%ebp)
    call   func_29c6c
    jmp    jump_297d1
  jump_29795:
    mov    0x1a4(%ebp),%ebx
    push   %ebx
    mov    0x1a0(%ebp),%ecx
    push   %ecx
    push   %edx
    call   func_2ad40
    add    $0xc,%esp
    jmp    jump_297d1
  jump_297ae:
    mov    %ebp,%eax
    call   func_29d54
    jmp    jump_297d1
  jump_297b7:
    mov    %ebp,%eax
    call   func_29f58
    jmp    jump_297d1
  jump_297c0:
    mov    $0x355,%ebx
    mov    $data_91541,%edx
    xor    %eax,%eax
    call   func_26198
  jump_297d1:
    inc    %edi
  jump_297d2:
    mov    0x198(%ebp),%edx
    mov    0x6(%edx),%dx
    and    $0xffff,%edx
    cmp    %edx,%edi
    jge    jump_29861
    mov    (%esi),%eax
    mov    %esi,%edx
    add    %eax,%esi
    mov    0x4(%edx),%ax
    add    $0x6,%edx
    cmp    $0xf,%ax
    jb     jump_2980d
    jbe    jump_297ae
    cmp    $0x10,%ax
    jbe    jump_297b7
    cmp    $0x12,%ax
    je     jump_297d1
    jmp    jump_297c0
  jump_2980d:
    cmp    $0x4,%ax
    jb     jump_297c0
    jbe    jump_29783
    cmp    $0x7,%ax
    je     jump_29795
    jmp    jump_297c0
  jump_29825:
    mov    $data_d8654,%eax
    mov    0x932(%ebp),%ebx
    mov    0x930(%ebp),%edx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    call   func_2c418
    jmp    jump_29876
  jump_29843:
    mov    $data_d8654,%eax
    mov    0x932(%ebp),%ebx
    mov    0x930(%ebp),%edx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    call   func_2c4c0
    jmp    jump_29876
  jump_29861:
    mov    0x92a(%ebp),%ax
    cmp    $0x1,%ax
    jb     jump_29876
    jbe    jump_29843
    cmp    $0x2,%ax
    je     jump_29825
  jump_29876:
    mov    0x802(%ebp),%eax
    sar    $0x10,%eax
    lea    0x0(,%eax,4),%edx
    sub    %eax,%edx
    mov    0x202(%ebp,%edx,4),%eax
    sar    $0x10,%eax
    cmp    0x19c(%ebp),%eax
    jne    jump_298a1
    mov    %ebp,%eax
    call   func_2aa88
  jump_298a1:
    cmpw   $0x0,0x92c(%ebp)
    je     jump_298df
    mov    0x92c(%ebp),%al
    xor    %edx,%edx
    dec    %al
    mov    %al,%dl
    mov    $data_d8654,%eax
    call   func_2c5e4
    incw   0x92c(%ebp)
    mov    0x92a(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x40,%eax
    jle    jump_298df
    movw   $0x0,0x92c(%ebp)
  jump_298df:
    mov    0x93a(%ebp),%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_2990d
    mov    0x93e(%ebp),%eax
    cmp    0x19c(%ebp),%eax
    jne    jump_2990d
    call   func_7812c
    movl   $0x0,0x93a(%ebp)
    mov    %ebx,0x93e(%ebp)
  jump_2990d:
    mov    0x198(%ebp),%eax
    mov    0x1f8(%ebp),%esi
    mov    (%eax),%eax
    add    %eax,%esi
    mov    %esi,0x1f8(%ebp)
    mov    0x198(%ebp),%esi
    add    (%esi),%esi
    mov    0x1f0(%ebp),%edx
    mov    %esi,0x198(%ebp)
    cmp    %edx,%esi
    jb     jump_29950
    mov    0x1e8(%ebp),%eax
    add    %eax,%esi
    sub    %edx,%esi
    mov    %esi,0x198(%ebp)
    jmp    jump_299dd
  jump_29950:
    lea    0x10(%esi),%ebx
    mov    0x1f0(%ebp),%ecx
    mov    %ebx,%edx
    sub    %ecx,%edx
    test   %edx,%edx
    jle    jump_29994
    mov    %ebx,%edi
    mov    %edx,%ecx
    mov    0x1e8(%ebp),%esi
    sub    %edx,%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    0x198(%ebp),%ecx
    mov    %ebx,%edi
    mov    0x1e8(%ebp),%esi
    mov    (%ecx),%ecx
    add    %edx,%esi
    sub    $0x10,%ecx
    jmp    jump_299cd
  jump_29994:
    mov    (%esi),%ecx
    add    %esi,%ecx
    mov    0x1f0(%ebp),%esi
    sub    %esi,%ecx
    test   %ecx,%ecx
    jle    jump_299dd
    mov    0x1ec(%ebp),%eax
    sub    %esi,%eax
    cmp    %eax,%ecx
    jl     jump_299c1
    mov    $0x3d0,%ebx
    mov    $data_9154d,%edx
    xor    %eax,%eax
    call   func_26198
  jump_299c1:
    mov    0x1e8(%ebp),%esi
    mov    0x1f0(%ebp),%edi
  jump_299cd:
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
  jump_299dd:
    mov    0x198(%ebp),%eax
    add    $0x10,%eax
    mov    %eax,0x1a8(%ebp)
  jump_299ec:
    cmpl   $0x0,0x200(%ebp)
    jne    jump_29a7c
    mov    0x1f8(%ebp),%eax
    mov    0x1fc(%ebp),%edi
    cmp    %edi,%eax
    jb     jump_29a0d
    mov    %edi,%edx
    jmp    jump_29a0f
  jump_29a0d:
    mov    %eax,%edx
  jump_29a0f:
    mov    0x1e4(%ebp),%eax
    mov    0x1f0(%ebp),%ebx
    add    %edx,%eax
    sub    %ebx,%eax
    mov    %edx,%esi
    test   %eax,%eax
    jle    jump_29a27
    sub    %eax,%esi
  jump_29a27:
    mov    %esi,%ebx
    mov    %ebp,%eax
    mov    0x1e4(%ebp),%edx
    call   func_1bf94
    cmp    %esi,%eax
    jge    jump_29a44
    movl   $0xffffffff,0x200(%ebp)
  jump_29a44:
    mov    0x1e4(%ebp),%ecx
    mov    0x1f8(%ebp),%edi
    add    %esi,%ecx
    mov    0x1f0(%ebp),%edx
    mov    %ecx,0x1e4(%ebp)
    sub    %esi,%edi
    mov    0x1e4(%ebp),%eax
    mov    %edi,0x1f8(%ebp)
    cmp    %edx,%eax
    jb     jump_29a7c
    mov    0x1e8(%ebp),%eax
    mov    %eax,0x1e4(%ebp)
  jump_29a7c:
    mov    0x198(%ebp),%edx
    mov    0x1f8(%ebp),%eax
    mov    (%edx),%ebx
    mov    0x1ec(%ebp),%ecx
    add    %ebx,%eax
    mov    0x1f0(%ebp),%esi
    add    %ecx,%eax
    mov    0x1f4(%ebp),%edi
    sub    %esi,%eax
    cmp    %edi,%eax
    jb     jump_29b17
    mov    0x1f8(%ebp),%esi
    mov    0x1e4(%ebp),%eax
    mov    0x1f0(%ebp),%edx
    add    %esi,%eax
    sub    %edx,%eax
    test   %eax,%eax
    jle    jump_29ac2
    sub    %eax,%esi
  jump_29ac2:
    mov    %esi,%ebx
    mov    %ebp,%eax
    mov    0x1e4(%ebp),%edx
    call   func_1bf94
    cmp    %esi,%eax
    jge    jump_29adf
    movl   $0xffffffff,0x200(%ebp)
  jump_29adf:
    mov    0x1e4(%ebp),%ebx
    add    %esi,%ebx
    mov    0x1f8(%ebp),%ecx
    mov    %ebx,0x1e4(%ebp)
    sub    %esi,%ecx
    mov    0x1f0(%ebp),%esi
    mov    0x1e4(%ebp),%eax
    mov    %ecx,0x1f8(%ebp)
    cmp    %esi,%eax
    jb     jump_29b17
    mov    0x1e8(%ebp),%eax
    mov    %eax,0x1e4(%ebp)
  jump_29b17:
    mov    $0xffffffff,%eax
  jump_29b1c:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_29b24:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    $0x27f,%ebx
    mov    0x1f4(%eax),%eax
    xor    %edx,%edx
    div    %ebx
    mov    0x1e8(%esi),%ecx
    mov    0x1e4(%esi),%edx
    sub    %ecx,%edx
    mov    %eax,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x198(%esi),%edx
    sub    %ecx,%edx
    mov    %eax,%edi
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    xor    %dl,%dl
    mov    %dl,0x1(%esp)
    mov    %dl,0x2(%esp)
    mov    %esp,%edx
    push   %edx
    mov    %eax,%esi
    mov    $0xff,%ah
    push   $0xfe
    mov    %ah,0x8(%esp)
    call   *data_96bf8
    add    $0x8,%esp
    mov    %esp,%edx
    xor    %bl,%bl
    push   %edx
    mov    %bl,0x4(%esp)
    mov    $0xff,%bh
    push   $0xff
    mov    %bh,0x9(%esp)
    call   *data_96bf8
    add    $0x8,%esp
    cmp    %edi,%esi
    jl     jump_29bf5
    push   $0xff
    push   $0x1df
    push   %edi
    push   $0x1c2
    push   $0x0
    call   *data_96be0
    add    $0x14,%esp
    push   $0xfe
    push   $0x1df
    push   %esi
    push   $0x1c2
    push   %edi
    call   *data_96be0
    add    $0x14,%esp
    push   $0xff
    push   $0x1df
    push   $0x27f
    push   $0x1c2
    push   %esi
    jmp    jump_29c3f
  jump_29bf5:
    push   $0xfe
    push   $0x1df
    push   %esi
    push   $0x1c2
    push   $0x0
    call   *data_96be0
    add    $0x14,%esp
    push   $0xff
    push   $0x1df
    push   %edi
    push   $0x1c2
    push   %esi
    call   *data_96be0
    add    $0x14,%esp
    push   $0xfe
    push   $0x1df
    push   $0x27f
    push   $0x1c2
    push   %edi
  jump_29c3f:
    call   *data_96be0
    add    $0x14,%esp
    push   $0xfe
    push   $0x1df
    push   %esi
    push   $0x1c2
    push   %esi
    call   *data_96be0
    add    $0x14,%esp
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_29c6c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%ebp
    lea    0x2(%edx),%esi
    mov    (%edx),%ax
    xor    %ebx,%ebx
    mov    %eax,(%esp)
    mov    %ebx,0x8(%esp)
    xor    %ah,%ah
    mov    (%esp),%ecx
    mov    %ah,0xc(%esp)
    test   %cx,%cx
    jbe    jump_29d48
    jmp    jump_29cae
  jump_29c99:
    mov    0x8(%esp),%edi
    inc    %edi
    mov    (%esp),%edx
    mov    %edi,0x8(%esp)
    cmp    %dx,%di
    jae    jump_29d48
  jump_29cae:
    mov    %esi,%eax
    mov    0xc(%esp),%dl
    mov    (%eax),%al
    inc    %esi
    add    %al,%dl
    xor    %ah,%ah
    mov    (%esi),%al
    inc    %esi
    mov    %eax,0x4(%esp)
    xor    %eax,%eax
    mov    -0x1(%esi),%al
    mov    %dl,0xc(%esp)
    test   %eax,%eax
    jne    jump_29cd7
    movl   $0x100,0x4(%esp)
  jump_29cd7:
    mov    0x4(%esp),%ecx
    xor    %edi,%edi
    test   %cx,%cx
    jbe    jump_29c99
    jmp    jump_29cee
  jump_29ce4:
    mov    0x4(%esp),%eax
    inc    %edi
    cmp    %ax,%di
    jae    jump_29c99
  jump_29cee:
    mov    0x930(%ebp),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    %di,%ax
    cmp    %edx,%eax
    jl     jump_29d0f
    mov    0x932(%ebp),%ebx
    sar    $0x10,%ebx
    add    %ebx,%edx
    cmp    %edx,%eax
    jl     jump_29ce4
  jump_29d0f:
    push   %esi
    mov    (%esi),%dh
    mov    0x1(%esi),%bl
    xor    %eax,%eax
    shr    $0x2,%bl
    mov    0x10(%esp),%al
    mov    %bl,0x1(%esi)
    shr    $0x2,%dh
    mov    0x2(%esi),%bh
    mov    %dh,(%esi)
    shr    $0x2,%bh
    push   %eax
    mov    %bh,0x2(%esi)
    call   *data_96bf8
    add    $0x8,%esp
    mov    0xc(%esp),%cl
    inc    %cl
    add    $0x3,%esi
    mov    %cl,0xc(%esp)
    jmp    jump_29ce4
  jump_29d48:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_29d54:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    %eax,0x4(%esp)
    mov    %edx,%ebp
    mov    0x1ac(%eax),%edx
    mov    %edx,0x8(%esp)
    xor    %edx,%edx
    mov    %edx,(%esp)
    jmp    jump_29de1
  jump_29d73:
    mov    0x11(%esp),%ebx
    mov    0x8(%esp),%eax
    xor    %edx,%edx
    sar    $0x18,%ebx
    mov    0x0(%ebp),%dl
    inc    %ebp
    call   func_76ec0
  jump_29d89:
    movsbw 0x14(%esp),%dx
    mov    0x10(%esp),%edi
    add    %edx,%edi
    mov    0x11(%esp),%edx
    mov    0x8(%esp),%eax
    sar    $0x18,%edx
    add    %edx,%eax
    mov    0x4(%esp),%ebx
    mov    %eax,0x8(%esp)
    mov    0x120(%ebx),%ax
    mov    %edi,0x10(%esp)
    cmp    %ax,%di
    jb     jump_29e0a
  jump_29dba:
    mov    0x4(%esp),%ebx
    xor    %edx,%edx
    mov    0x120(%ebx),%dx
    mov    $0x280,%ebx
    sub    %edx,%ebx
    mov    (%esp),%ecx
    mov    %ebx,%edx
    mov    0x8(%esp),%ebx
    inc    %ecx
    add    %edx,%ebx
    mov    %ecx,(%esp)
    mov    %ebx,0x8(%esp)
  jump_29de1:
    mov    0x4(%esp),%ebx
    xor    %edx,%edx
    mov    0x122(%ebx),%dx
    cmp    (%esp),%edx
    jle    jump_29e56
    xor    %edx,%edx
    mov    %edx,0x10(%esp)
    mov    0x4(%esp),%edx
    mov    0x120(%edx),%bx
    inc    %ebp
    test   %bx,%bx
    jbe    jump_29dba
  jump_29e0a:
    mov    0x0(%ebp),%dl
    mov    %dl,0x14(%esp)
    mov    0x11(%esp),%edx
    sar    $0x18,%edx
    inc    %ebp
    test   %edx,%edx
    jge    jump_29d73
    mov    0x14(%esp),%bl
    neg    %bl
    mov    0x8(%esp),%edi
    mov    %bl,0x14(%esp)
    mov    %ebp,%esi
    mov    0x11(%esp),%ecx
    mov    0x11(%esp),%edx
    sar    $0x18,%ecx
    sar    $0x18,%edx
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    add    %edx,%ebp
    jmp    jump_29d89
  jump_29e56:
    mov    $0x100,%ebx
    xor    %ah,%ah
    xor    %ecx,%ecx
    xor    %edx,%edx
    mov    %ah,0xc(%esp)
    mov    %ah,0xd(%esp)
    mov    %ah,0xe(%esp)
    mov    $data_d8654,%eax
    call   func_2c2b0
    lea    0xc(%esp),%ecx
    mov    $0x100,%ebx
    mov    $data_d8654,%eax
    xor    %edx,%edx
    call   func_2c670
    mov    0x4(%esp),%edx
    movl   $0x0,0x1d0(%edx)
    mov    0x4(%esp),%ebx
    movl   $0x0,0x1d4(%edx)
    xor    %edx,%edx
    mov    0x120(%ebx),%dx
    dec    %edx
    mov    %edx,0x1d8(%ebx)
    xor    %edx,%edx
    mov    0x122(%ebx),%dx
    dec    %edx
    mov    %edx,0x1dc(%ebx)
    mov    0x1a4(%ebx),%edx
    add    0x1dc(%ebx),%edx
    mov    0x1d8(%ebx),%esi
    push   %edx
    mov    0x1a0(%ebx),%edx
    add    %esi,%edx
    push   %edx
    mov    0x1a4(%ebx),%edi
    push   %edi
    mov    0x1a0(%ebx),%ebp
    push   %ebp
    lea    0x1cc(%ebx),%edx
    push   %edx
    call   *data_96c00
    add    $0x14,%esp
    mov    0x4(%esp),%edx
    mov    $data_d8654,%ecx
    mov    0x4(%esp),%ebx
    movw   $0x0,0x92c(%edx)
    jmp    jump_29f30
  jump_29f1a:
    xor    %edx,%edx
    mov    %ecx,%eax
    mov    0x92c(%ebx),%dl
    call   func_2c5e4
    incw   0x92c(%ebx)
  jump_29f30:
    mov    0x4(%esp),%edx
    mov    0x92a(%edx),%edx
    sar    $0x10,%edx
    cmp    $0x20,%edx
    jl     jump_29f1a
    mov    0x4(%esp),%edx
    incw   0x92c(%edx)
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_29f58:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    xor    %ecx,%ecx
    mov    0x1ac(%eax),%edi
    mov    0x120(%eax),%cx
    xor    %eax,%eax
    mov    0x122(%ebx),%ax
    imul   %eax,%ecx
    mov    %edx,%esi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    xor    %eax,%eax
    mov    0x120(%ebx),%ax
    dec    %eax
    mov    %eax,0x1d8(%ebx)
    xor    %eax,%eax
    mov    0x122(%ebx),%ax
    dec    %eax
    mov    %eax,0x1dc(%ebx)
    mov    0x1a4(%ebx),%eax
    add    0x1dc(%ebx),%eax
    mov    0x1d8(%ebx),%ecx
    push   %eax
    mov    0x1a0(%ebx),%eax
    add    %ecx,%eax
    push   %eax
    mov    0x1a4(%ebx),%esi
    push   %esi
    mov    0x1a0(%ebx),%edi
    add    $0x1cc,%ebx
    push   %edi
    movl   $0x0,0x4(%ebx)
    push   %ebx
    movl   $0x0,0x8(%ebx)
    call   *data_96c00
    add    $0x14,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2a1dc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x2e0,%esp
    mov    %eax,%ebp
    mov    %edx,%eax
    test   %edx,%edx
    je     jump_2aa79
    xor    %edx,%edx
    mov    %dx,0x2dc(%esp)
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,0x2d0(%esp)
    test   %eax,%eax
    je     jump_2aa79
    mov    %ebp,%eax
    xor    %edx,%edx
    add    $0x90a,%eax
    mov    %edx,0x2d4(%esp)
    mov    %eax,0x2d8(%esp)
  jump_2a22a:
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_9157c
    mov    0x2dc(%esp),%ebx
    push   %ebx
    call   func_78071
    add    $0x10,%esp
    mov    0x2cc(%esp),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_2aa4f
    mov    0x2d4(%esp),%esi
    inc    %esi
    mov    %esi,0x2d4(%esp)
    cmp    $0x2,%ecx
    jb     jump_2a8e0
    jbe    jump_2a384
    cmp    $0xb,%ecx
    jb     jump_2a8d2
    jbe    jump_2a7c0
    cmp    $0x10,%ecx
    je     jump_2a6b7
  jump_2a295:
    mov    0x2d4(%esp),%ebx
    push   %ebx
    mov    0x2d0(%esp),%ecx
    push   %ecx
    lea    0x2a0(%esp),%eax
    push   %eax
    push   $data_9167b
    push   $data_96668
    call   func_76d09
    add    $0x14,%esp
    call   func_2624c
    jmp    jump_2a22a
  jump_2a2c9:
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_91582
    push   %ebx
    call   func_78071
    add    $0x10,%esp
    mov    0x2cc(%esp),%eax
    mov    %eax,0x916(%ebp)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_91588
    push   %ebx
    call   func_78071
    add    $0x10,%esp
    mov    0x2cc(%esp),%eax
    mov    %eax,0x91a(%ebp)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_9158e
    push   %ebx
    call   func_78071
    add    $0x10,%esp
    mov    0x2cc(%esp),%eax
    mov    %eax,0x91e(%ebp)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_91594
    push   %ebx
    call   func_78071
    add    $0x10,%esp
    lea    0x5(%esi),%edx
    mov    0x2cc(%esp),%eax
    mov    %edx,0x2d4(%esp)
    mov    %eax,0x922(%ebp)
    jmp    jump_2a22a
  jump_2a384:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x80,%eax
    jl     jump_2a3a5
    mov    $0x5ff,%ebx
    mov    $data_915dc,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2a3a5:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    movw   $0x1,0x206(%eax,%ebp,1)
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    mov    0x2da(%esp),%edx
    sar    $0x10,%edx
    mov    %edx,0x208(%eax,%ebp,1)
    lea    0x118(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_915e8
    mov    0x2dc(%esp),%eax
    push   %eax
    call   func_78071
    add    $0x10,%esp
    lea    0x118(%esp),%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    lea    0x118(%esp),%eax
    mov    0x118(%esp),%dl
    mov    %ecx,%edi
    test   %dl,%dl
    je     jump_2a432
  jump_2a422:
    cmpb   $0x5f,(%eax)
    jne    jump_2a42a
    movb   $0x20,(%eax)
  jump_2a42a:
    mov    0x1(%eax),%dh
    inc    %eax
    test   %dh,%dh
    jne    jump_2a422
  jump_2a432:
    lea    0x118(%esp),%edx
    mov    0x2d8(%esp),%eax
    call   func_2b5bc
    mov    %eax,%esi
    cmp    $0xffffffff,%eax
    jne    jump_2a45d
    mov    $0x613,%ebx
    mov    $data_915ee,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_2a45d:
    mov    0x2da(%esp),%ecx
    sar    $0x10,%ecx
    mov    %si,0x80c(%ebp,%ecx,8)
    xor    %si,%si
    mov    %esi,%eax
    shr    $0x10,%eax
    mov    %ax,0x80e(%ebp,%ecx,8)
    movswl %di,%eax
    mov    $data_915fa,%ebx
    inc    %eax
    mov    $0x1,%edx
    call   func_77604
    call   func_2625c
    mov    %eax,0x808(%ebp,%ecx,8)
    test   %eax,%eax
    jne    jump_2a4b1
    mov    $0x61b,%ebx
    mov    $data_91603,%edx
    call   func_26198
  jump_2a4b1:
    mov    0x2da(%esp),%eax
    sar    $0x10,%eax
    lea    0x118(%esp),%esi
    mov    0x808(%ebp,%eax,8),%edi
    push   %edi
  jump_2a4ca:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2a4e2
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2a4ca
  jump_2a4e2:
    pop    %edi
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_9160f
    mov    0x2dc(%esp),%edi
    push   %edi
    call   func_78071
    add    $0x10,%esp
    mov    0x2cc(%esp),%eax
    sub    $0x20,%eax
    mov    %eax,0x2cc(%esp)
    test   %eax,%eax
    jg     jump_2a52e
    mov    $0x622,%ebx
    mov    $data_91615,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_2a52e:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %ax,0x204(%edx)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_91621
    mov    0x806(%ebp),%ax
    mov    0x2dc(%esp),%ebx
    inc    %eax
    push   %ebx
    mov    %ax,0x806(%ebp)
    call   func_78071
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    incw   0x2ec(%esp)
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %ax,0x204(%edx)
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    movw   $0x2,0x206(%eax,%ebp,1)
    mov    0x2d4(%esp),%ecx
    mov    0x806(%ebp),%dx
    add    $0x4,%ecx
    inc    %edx
    mov    %ecx,0x2d4(%esp)
    mov    %dx,0x806(%ebp)
    jmp    jump_2a22a
  jump_2a5df:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x80,%eax
    jl     jump_2a600
    mov    $0x635,%ebx
    mov    $data_91627,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2a600:
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_91633
    mov    0x2dc(%esp),%ecx
    push   %ecx
    call   func_78071
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %ax,0x204(%edx)
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    movw   $0x3,0x206(%eax,%ebp,1)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_91639
    push   %ecx
    call   func_78071
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %eax,0x208(%edx)
    mov    0x2d4(%esp),%edi
    mov    0x806(%ebp),%si
    add    $0x3,%edi
    inc    %esi
    mov    %edi,0x2d4(%esp)
    mov    %si,0x806(%ebp)
    jmp    jump_2a22a
  jump_2a6b7:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x80,%eax
    jl     jump_2a6d8
    mov    $0x68a,%ebx
    mov    $data_9163f,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2a6d8:
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_9164b
    mov    0x2dc(%esp),%esi
    push   %esi
    call   func_78071
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %eax,0x208(%edx)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_91651
    push   %esi
    call   func_78071
    add    $0x10,%esp
    cmpl   $0x1,0x2cc(%esp)
    setne  %al
    and    $0xff,%eax
    add    $0x1e,%eax
    mov    %eax,%edx
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    mov    %dx,0x206(%eax,%ebp,1)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_91657
    push   %esi
    call   func_78071
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %ax,0x204(%edx)
    mov    0x2d4(%esp),%ecx
    mov    0x806(%ebp),%bx
    add    $0x4,%ecx
    inc    %ebx
    mov    %ecx,0x2d4(%esp)
    mov    %bx,0x806(%ebp)
    jmp    jump_2a22a
  jump_2a7c0:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x80,%eax
    jl     jump_2a7e1
    mov    $0x703,%ebx
    mov    $data_9165d,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2a7e1:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    movw   $0xb,0x206(%eax,%ebp,1)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_91669
    mov    0x2dc(%esp),%esi
    push   %esi
    call   func_78071
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %eax,0x208(%edx)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_9166f
    push   %esi
    call   func_78071
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %eax,0x20c(%edx)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_91675
    push   %esi
    call   func_78071
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %ax,0x204(%edx)
    mov    0x2d4(%esp),%edx
    mov    0x806(%ebp),%cx
    add    $0x4,%edx
    inc    %ecx
    mov    %edx,0x2d4(%esp)
    mov    %cx,0x806(%ebp)
    jmp    jump_2a22a
  jump_2a8d2:
    cmp    $0x3,%ecx
    je     jump_2a5df
    jmp    jump_2a295
  jump_2a8e0:
    test   %ecx,%ecx
    jbe    jump_2a2c9
    lea    0x218(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_9159a
    push   %ebx
    call   func_78071
    add    $0x10,%esp
    lea    0x218(%esp),%edx
    mov    0x2d8(%esp),%eax
    call   func_2b360
    test   %eax,%eax
    jne    jump_2a92c
    mov    $0x5e3,%ebx
    mov    $data_915a0,%edx
    call   func_261a8
  jump_2a92c:
    lea    0x218(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_915ac
    mov    0x2dc(%esp),%ecx
    push   %ecx
    mov    $0x200,%ebx
    call   func_78071
    add    $0x10,%esp
    mov    %esp,%eax
    lea    0x218(%esp),%edx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    je     jump_2a982
    mov    $0x5eb,%ebx
    mov    $data_915b2,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_2a982:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,0x92e(%ebp)
    test   %eax,%eax
    jne    jump_2a9a4
    mov    $0x5ee,%ebx
    mov    $data_915be,%edx
    call   func_26198
  jump_2a9a4:
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_915ca
    mov    0x2dc(%esp),%edi
    push   %edi
    call   func_78071
    add    $0x10,%esp
    mov    0x2cc(%esp),%eax
    mov    %ax,0x932(%ebp)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_915d0
    push   %edi
    call   func_78071
    add    $0x10,%esp
    mov    0x2cc(%esp),%eax
    mov    %ax,0x934(%ebp)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_915d6
    push   %edi
    mov    %edi,%edx
    call   func_78071
    add    $0x10,%esp
    xor    %edi,%edx
    mov    0x2d4(%esp),%ebx
    mov    0x2cc(%esp),%eax
    add    $0x6,%ebx
    mov    %eax,0x926(%ebp)
    mov    %esp,%eax
    mov    %ebx,0x2d4(%esp)
    call   func_1bbc8
    jmp    jump_2a22a
  jump_2aa4f:
    mov    %ebx,%eax
    mov    $func_28c4c,%ecx
    call   func_7744e
    mov    $0xc,%ebx
    mov    0x804(%ebp),%edx
    lea    0x204(%ebp),%eax
    sar    $0x10,%edx
    call   func_76f56
    mov    $0xffffffff,%eax
  jump_2aa79:
    add    $0x2e0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2aa88:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    lea    0x808(%eax),%edx
    mov    %edx,-0x8(%ebp)
    lea    0x90a(%eax),%edx
    mov    %edx,-0x4(%ebp)
  jump_2aaa7:
    mov    0x802(%esi),%edx
    sar    $0x10,%edx
    imul   $0xc,%edx,%edx
    add    %esi,%edx
    mov    0x202(%edx),%ebx
    mov    0x19c(%esi),%ecx
    sar    $0x10,%ebx
    cmp    %ecx,%ebx
    je     jump_2ac0e
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_2aad5:
    mov    0x942(%esi),%ebx
    test   %ebx,%ebx
    jne    jump_2ab59
    mov    -0x8(%ebp),%edi
    mov    0x208(%edx),%edx
    mov    $data_d8654,%eax
    shl    $0x3,%edx
    mov    0x92e(%esi),%ecx
    add    %edx,%edi
    xor    %edx,%edx
    mov    0x934(%esi),%bx
    mov    0x932(%esi),%dx
    call   func_2c1e0
    mov    $data_d8654,%eax
    mov    0x932(%esi),%ebx
    mov    0x930(%esi),%edx
    xor    %ecx,%ecx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    call   func_2c670
    push   $0x0
    mov    -0x4(%ebp),%eax
    mov    (%edi),%ecx
    push   $0xffffffff
    mov    0x4(%edi),%ebx
    mov    0x2(%edi),%edx
    push   $0xffffffff
    sar    $0x10,%ebx
    push   $0x80
    sar    $0x10,%edx
    call   func_2b8a8
    movw   $0x1,0x92a(%esi)
  jump_2ab59:
    incw   0x804(%esi)
    jmp    jump_2aaa7
  jump_2ab65:
    mov    0x208(%edx),%edx
    mov    0x936(%esi),%eax
    mov    %edx,0x1e0(%esi)
    cmp    $0xffffffff,%eax
    je     jump_2ab59
    test   %edx,%edx
    jne    jump_2ab95
    push   %eax
    call   func_67c15
    add    $0x4,%esp
    incw   0x804(%esi)
    jmp    jump_2aaa7
  jump_2ab95:
    push   %edx
    push   %eax
    call   func_6797c
    add    $0x8,%esp
    incw   0x804(%esi)
    jmp    jump_2aaa7
  jump_2abab:
    mov    $data_10914c,%eax
    mov    0x208(%edx),%edx
    xor    %ecx,%ebx
    movswl %dx,%edx
    call   func_4f8cc
    incw   0x804(%esi)
    jmp    jump_2aaa7
  jump_2abcc:
    mov    $data_10914c,%eax
    call   func_4fa1c
    incw   0x804(%esi)
    jmp    jump_2aaa7
  jump_2abe2:
    cmpl   $0xffffffff,data_109357
    jne    jump_2ab59
    mov    0x20c(%edx),%edx
    mov    $data_10914c,%eax
    movsbl %dl,%edx
    call   func_4ff4c
    incw   0x804(%esi)
    jmp    jump_2aaa7
  jump_2ac0e:
    mov    0x206(%edx),%ax
    cmp    $0x3,%ax
    jb     jump_2ac54
    jbe    jump_2ab65
    cmp    $0x1e,%ax
    jb     jump_2ac31
    jbe    jump_2abab
    cmp    $0x1f,%ax
    je     jump_2abcc
    jmp    jump_2ac37
  jump_2ac31:
    cmp    $0xb,%ax
    je     jump_2abe2
  jump_2ac37:
    mov    $0x80f,%ebx
    mov    $data_916a7,%edx
    xor    %eax,%eax
    call   func_261a8
    incw   0x804(%esi)
    jmp    jump_2aaa7
  jump_2ac54:
    cmp    $0x1,%ax
    jb     jump_2ac37
    jbe    jump_2aad5
    cmpl   $0x0,0x942(%esi)
    jne    jump_2ab59
    movw   $0x2,0x92a(%esi)
    incw   0x804(%esi)
    jmp    jump_2aaa7


/*----------------------------------------------------------------*/
func_2ac84:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %edx,0x1e0(%eax)
    mov    0x936(%eax),%edx
    cmp    $0xffffffff,%edx
    jne    jump_2ace8
    push   $func_28c40
    call   func_67728
    add    $0x4,%esp
    mov    %eax,0x936(%esi)
    cmp    $0xffffffff,%eax
    jne    jump_2acc7
    mov    $0x823,%ebx
    mov    $data_916b3,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_2acc7:
    push   %edi
    mov    0x936(%esi),%edi
    push   %edi
    call   func_6797c
    add    $0x8,%esp
    mov    0x936(%esi),%ebp
    push   %ebp
    call   func_67b46
    add    $0x4,%esp
    jmp    jump_2acf2
  jump_2ace8:
    push   %edi
    push   %edx
    call   func_6797c
    add    $0x8,%esp
  jump_2acf2:
    cmpl   $0xffffffff,0x936(%esi)
    sete   %al
    and    $0xff,%eax
    dec    %eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ad08:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    mov    0x936(%eax),%edx
    cmp    $0xffffffff,%edx
    je     jump_2ad3b
    push   %edx
    call   func_67c15
    add    $0x4,%esp
    mov    0x936(%esi),%ecx
    push   %ecx
    call   func_67ce4
    add    $0x4,%esp
    movl   $0xffffffff,0x936(%esi)
  jump_2ad3b:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ad40:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xfffffff0,%esp
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %ds
    pop    %es
    cld
    mov    0x8(%ebp),%esi
    mov    0x10(%ebp),%ebx
    mov    $0x0,%ecx
    mov    (%esi),%cx
    inc    %esi
    inc    %esi
  jump_2ad5d:
    lods   %ds:(%esi),%ax
    cmp    $0x0,%ax
    jg     jump_2ad79
    test   $0x4000,%ax
    je     jump_2ad5d
    sub    %ax,%bx
    jmp    jump_2ad5d
  jump_2ad70:
    dec    %ecx
    jne    jump_2ad5d
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    leave
    ret
  jump_2ad79:
    mov    0xc(%ebp),%edx
    push   %ecx
  jump_2ad7d:
    push   %ax
    mov    $0x0,%eax
    lods   %ds:(%esi),%al
    add    %eax,%edx
    lods   %ds:(%esi),%al
    movsbl %al,%ecx
    test   $0x80,%cx
    je     jump_2aded
    neg    %ecx
    lods   %ds:(%esi),%ax
    push   %ebx
    push   %eax
    shl    %ecx
    push   %ecx
    lea    -0x8(%ebp),%eax
    push   %eax
    lea    -0x4(%ebp),%eax
    push   %eax
    push   %ebx
    push   %edx
    call   *data_96c04
    pop    %edx
    pop    %ebx
    add    $0x8,%esp
    pop    %ecx
    pop    %eax
    mov    -0x4(%ebp),%edi
    cmp    -0x8(%ebp),%ecx
    jle    jump_2ade3
    sub    -0x8(%ebp),%ecx
    push   %ecx
    mov    -0x8(%ebp),%ecx
    add    %ecx,%edx
    shr    %ecx
    rep stos %ax,%es:(%edi)
    push   %eax
    lea    -0x8(%ebp),%eax
    push   %eax
    lea    -0x4(%ebp),%eax
    push   %eax
    push   %ebx
    push   %edx
    call   *data_96c04
    pop    %edx
    pop    %ebx
    add    $0x8,%esp
    pop    %eax
    pop    %ecx
    mov    -0x4(%ebp),%edi
  jump_2ade3:
    add    %ecx,%edx
    shr    %ecx
    rep stos %ax,%es:(%edi)
    pop    %ebx
    jmp    jump_2ae36
  jump_2aded:
    shl    %ecx
    push   %ecx
    lea    -0x10(%ebp),%eax
    push   %eax
    lea    -0xc(%ebp),%eax
    push   %eax
    push   %ebx
    push   %edx
    call   *data_96c04
    pop    %edx
    pop    %ebx
    add    $0x8,%esp
    pop    %ecx
    mov    -0xc(%ebp),%edi
    cmp    -0x10(%ebp),%ecx
    jle    jump_2ae32
    sub    -0x10(%ebp),%ecx
    push   %ecx
    mov    -0x10(%ebp),%ecx
    add    %ecx,%edx
    rep movsb %ds:(%esi),%es:(%edi)
    lea    -0x10(%ebp),%eax
    push   %eax
    lea    -0xc(%ebp),%eax
    push   %eax
    push   %ebx
    push   %edx
    call   *data_96c04
    pop    %edx
    pop    %ebx
    add    $0x8,%esp
    pop    %ecx
    mov    -0xc(%ebp),%edi
  jump_2ae32:
    add    %ecx,%edx
    rep movsb %ds:(%esi),%es:(%edi)
  jump_2ae36:
    pop    %ax
    dec    %ax
    jne    jump_2ad7d
    pop    %ecx
    inc    %bx
    jmp    jump_2ad70


/*----------------------------------------------------------------*/
func_2ae80:
/*----------------------------------------------------------------*/
    call   func_2c830
    add    $0xab,%eax
    call   func_28c74
    movl   $data_95cb4,-0x4(%eax)
    movw   $0x1,0x94a(%eax)
    movw   $0x0,0x94c(%eax)
    sub    $0xab,%eax
    ret


/*----------------------------------------------------------------*/
func_2aeb0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2aecf
    mov    $data_95ca0,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2aecf:
    add    $0xab,%eax
    xor    %edx,%edx
    movl   $data_95cb4,-0x4(%eax)
    call   func_28da4
    mov    $0x1,%edx
    sub    $0xab,%eax
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2aefd
    call   func_76d64
  jump_2aefd:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2af04:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   $0xffffffff
    mov    data_10de7a,%ebx
    mov    $0xffffffff,%ecx
    add    $0xab,%eax
    mov    (%ebx),%ebx
    call   func_28eb4
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_2af34
    mov    $0x4e,%ebx
    mov    $data_916c0,%edx
    call   func_261a8
  jump_2af34:
    mov    %ecx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2af3c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%edx
    mov    0x9ff(%eax),%esi
    sar    $0x10,%esi
    mov    data_132b08,%ebx
    shl    $0x14,%esi
    cmp    %ebx,%esi
    jle    jump_2af70
    mov    $0x67,%ebx
    mov    $data_916cf,%edx
    xor    %eax,%eax
    call   func_261a8
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_2af70:
    mov    0xa01(%eax),%ebx
    sar    $0x10,%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_2af88
    mov    data_132b08,%esi
    mov    %esi,%ebx
    jmp    jump_2af8b
  jump_2af88:
    shl    $0x14,%ebx
  jump_2af8b:
    mov    $data_12fc20,%eax
    call   func_1b4d0
    mov    0xa05(%edx),%eax
    mov    data_132b04,%ecx
    sar    $0x10,%eax
    push   %ecx
    shl    $0xa,%eax
    mov    0xa03(%edx),%ecx
    push   %eax
    sar    $0x10,%ecx
    lea    0xab(%edx),%eax
    shl    $0xa,%ecx
    mov    %esi,%edx
    call   func_29038
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_2afc8:
    .long   func_2b03e
    .long   func_2b0fb
    .long   func_2b246
    .long   func_2b246
    .long   func_2b246
    .long   func_2b28a
    .long   func_2b28a
    .long   func_2b28a
    .long   func_2b28a
    .long   func_2b209


/*----------------------------------------------------------------*/
func_2aff0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x310,%esp
    mov    %eax,%esi
    mov    %dx,0x308(%esp)
    mov    %ebx,%ebp
    mov    %ecx,%edi
    mov    0x308(%esp),%eax
    xor    %edx,%edx
    dec    %eax
    mov    %edx,0x304(%esp)
    cmp    $0x9,%ax
    ja     func_2b28a
    mov    %esi,%edx
    add    $0xab,%edx
    and    $0xffff,%eax
    mov    %edx,0x300(%esp)
    jmp    *%cs:vtable_2afc8(,%eax,4)


/*----------------------------------------------------------------*/
func_2b03e:
/*----------------------------------------------------------------*/
    movl   $0xffffffff,0x247(%esi)
    movw   $0x0,0x9f7(%esi)
    movl   $0x0,0x9f9(%esi)
    movl   $0x0,0x9fd(%esi)
    call   func_64f06
    xor    %eax,%eax
    mov    %eax,data_132b60
    mov    %esi,%eax
    call   func_2af3c
    test   %eax,%eax
    jne    jump_2b0a6
    mov    $data_12fc20,%eax
    call   func_1ace8
    call   func_64eca
    mov    $data_10ae70,%eax
    mov    0x4b(%esi),%ecx
    mov    0x43(%esi),%edx
    mov    0x47(%esi),%ebx
    sar    $0x10,%edx
    call   func_56b60
    jmp    jump_2b2a9
  jump_2b0a6:
    mov    $data_10914c,%eax
    mov    0x306(%esp),%edx
    call   func_4fa1c
    sar    $0x10,%edx
    mov    %esi,%eax
    call   func_2f424
    push   $0x0
    mov    $0xa,%ebx
    mov    $data_10ae70,%eax
    push   $0x0
    mov    0x41(%esi),%edx
    xor    %ecx,%ecx
    call   func_56400
    mov    $0x12,%edx
    mov    0x300(%esp),%eax
    call   func_2ac84
    mov    0x304(%esp),%eax
    add    $0x310,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2b0fb:
/*----------------------------------------------------------------*/
    xor    %ecx,%ecx
    mov    %edx,%eax
    mov    %cl,%dl
    add    %cl,%dl
    neg    %dl
    add    $0x81,%dl
    call   func_2ad08
    mov    %dl,0x30c(%esp)
    jmp    jump_2b14c
  jump_2b116:
    mov    $data_d8654,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %cl,%dl
    call   func_2bd04
    mov    0x309(%esp),%edx
    mov    $data_10914c,%eax
    sar    $0x18,%edx
    call   func_4ff4c
    mov    0x30c(%esp),%ah
    sub    $0x2,%ah
    inc    %ecx
    mov    %ah,0x30c(%esp)
  jump_2b14c:
    movswl %cx,%edx
    cmp    $0x40,%edx
    jl     jump_2b116
    mov    $data_10914c,%eax
    mov    $0x300,%ebx
    call   func_4fa1c
    mov    $data_12fc20,%eax
    xor    %edx,%edx
    call   func_1ace8
    mov    %esp,%eax
    mov    %esp,%ecx
    call   func_76ec0
    mov    $0x100,%ebx
    mov    $data_d8654,%eax
    xor    %edx,%edx
    call   func_2c224
    push   $0x0
    push   $0x1df
    push   $0x27f
    push   $0x0
    push   $0x0
    call   *data_96be0
    mov    $0x100,%ecx
    mov    $data_916de,%edx
    add    $0x14,%esp
    mov    $data_d8654,%eax
    xor    %ebx,%ebx
    call   func_2c158
    mov    %esp,%ecx
    mov    $0x100,%ebx
    mov    $data_d8654,%eax
    xor    %edx,%edx
    call   func_2c224
    mov    $0xffffffff,%edx
    mov    %edi,%ecx
    xor    %ebx,%ebx
    mov    %edx,data_132b60
    mov    %ebx,data_132b64
    call   func_64eca
    mov    0x306(%esp),%edx
    mov    %ebp,%ebx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2f424
    mov    0x304(%esp),%eax
    add    $0x310,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2b209:
/*----------------------------------------------------------------*/
    mov    %edx,%eax
    call   func_296b4
    test   %eax,%eax
    jne    jump_2b236
    mov    0x9f7(%esi),%dx
    inc    %edx
    mov    0x9f5(%esi),%bx
    mov    %dx,0x9f7(%esi)
    cmp    %bx,%dx
    jge    jump_2b236
    mov    %esi,%eax
    call   func_2af3c
  jump_2b236:
    mov    0x9f7(%esi),%ax
    cmp    0x9f5(%esi),%ax
    jl     jump_2b26e


/*----------------------------------------------------------------*/
func_2b246:
/*----------------------------------------------------------------*/
    mov    $0xa,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_564c0
    mov    $data_10ae70,%eax
    mov    0x4b(%esi),%ecx
    mov    0x43(%esi),%edx
    mov    0x47(%esi),%ebx
    sar    $0x10,%edx
    call   func_56b60
  jump_2b26e:
    movl   $0xffffffff,0x304(%esp)
    mov    0x304(%esp),%eax
    add    $0x310,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2b28a:
/*----------------------------------------------------------------*/
    mov    0x306(%esp),%edx
    mov    %edi,%ecx
    mov    %ebp,%ebx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2f424
    add    $0x310,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2b2a9:
    mov    0x304(%esp),%eax
    add    $0x310,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    lea    0x0(%eax),%eax
    ret


/*----------------------------------------------------------------*/
func_2b2c0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    movl   $0x0,(%eax)
    xor    %edx,%edx
    movl   $0x0,0x8(%eax)
    call   func_2b2fc
    mov    %ebx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2b2e0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    mov    (%eax),%edx
    test   %edx,%edx
    je     jump_2b2f0
    mov    %edx,%eax
    call   func_2627c
  jump_2b2f0:
    mov    (%ebx),%eax
    call   func_76d64
    mov    %ebx,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2b2fc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ecx
    mov    %edx,%eax
    movl   $data_d8654,0x8(%ecx)
    test   %edx,%edx
    je     jump_2b317
    mov    %ecx,%eax
    call   func_2b360
    pop    %ecx
    pop    %ebx
    ret
  jump_2b317:
    mov    $0x100,%eax
    mov    $data_916ec,%ebx
    mov    $0x1,%edx
    call   func_77604
    call   func_2625c
    mov    %eax,0x4(%ecx)
    test   %eax,%eax
    jne    jump_2b346
    mov    $0x5d,%ebx
    mov    $data_916fb,%edx
    call   func_26198
  jump_2b346:
    xor    %eax,%eax
  jump_2b348:
    mov    0x4(%ecx),%edx
    mov    %al,(%edx,%eax,1)
    inc    %eax
    cmp    $0x100,%eax
    jl     jump_2b348
    mov    $0xffffffff,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2b360:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    sub    $0x118,%esp
    mov    %eax,%esi
    test   %edx,%edx
    je     jump_2b3ce
    mov    %esp,%eax
    mov    $0x200,%ebx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    je     jump_2b395
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    xor    %esi,%esi
    jmp    jump_2b3d3
  jump_2b395:
    mov    (%esi),%edx
    test   %edx,%edx
    je     jump_2b3a2
    mov    %edx,%eax
    call   func_2627c
  jump_2b3a2:
    mov    (%esi),%eax
    call   func_76d64
    xor    %edx,%edx
    mov    %esp,%eax
    call   func_1bf1c
    mov    %eax,(%esi)
    test   %eax,%eax
    jne    jump_2b3c5
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    xor    %esi,%esi
    jmp    jump_2b3d3
  jump_2b3c5:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
  jump_2b3ce:
    mov    $0xffffffff,%esi
  jump_2b3d3:
    mov    %esi,%eax
    add    $0x118,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2b3e0:
/*----------------------------------------------------------------*/
    mov    %edx,0xc(%eax)
    mov    %ebx,0x10(%eax)
    mov    %ecx,0x14(%eax)
    mov    0x4(%esp),%edx
    mov    %edx,0x18(%eax)
    ret    $0x4


/*----------------------------------------------------------------*/
func_2b3f4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,0x4(%esp)
    mov    %edx,%ebp
    mov    %ebx,%edi
    mov    %ecx,%ebx
    mov    $0x7c,%dl
    mov    %ebp,%esi
  jump_2b408:
    mov    (%esi),%al
    cmp    %dl,%al
    je     jump_2b420
    cmp    $0x0,%al
    je     jump_2b41e
    inc    %esi
    mov    (%esi),%al
    cmp    %dl,%al
    je     jump_2b420
    inc    %esi
    cmp    $0x0,%al
    jne    jump_2b408
  jump_2b41e:
    sub    %esi,%esi
  jump_2b420:
    xor    %ecx,%ecx
    test   %esi,%esi
    je     jump_2b4cc
    mov    %esi,%ecx
    sub    %ebp,%ecx
    jne    jump_2b4b4
    lea    0x1(%esi),%ebp
    mov    %ebp,%esi
    movb   $0x0,(%edi)
  jump_2b43c:
    mov    (%esi),%al
    cmp    %dl,%al
    je     jump_2b454
    cmp    $0x0,%al
    je     jump_2b452
    inc    %esi
    mov    (%esi),%al
    cmp    %dl,%al
    je     jump_2b454
    inc    %esi
    cmp    $0x0,%al
    jne    jump_2b43c
  jump_2b452:
    sub    %esi,%esi
  jump_2b454:
    test   %esi,%esi
    jne    jump_2b462
    mov    $0x1,%ecx
    jmp    jump_2b4e8
  jump_2b462:
    mov    %esi,%eax
    sub    %ebp,%eax
    lea    0x2(%eax),%ecx
    cmp    %ebp,%esi
    jne    jump_2b47c
    movb   $0x0,0x1(%edi)
    mov    %dl,(%edi)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2b47c:
    cmp    $0xffffffff,%ebx
    jne    jump_2b4e8
    mov    $0x3,%ebx
    mov    %esp,%eax
    mov    %ebp,%edx
    call   func_77780
    xor    %ah,%ah
    mov    %ah,0x3(%esp)
    mov    %esp,%eax
    call   func_788e4
    mov    %eax,%ebx
    mov    0x4(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %bl,0xf3(%eax)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2b4b4:
    mov    %ecx,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_77780
    movb   $0x0,(%ecx,%edi,1)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2b4cc:
    mov    %ebp,%esi
    push   %edi
  jump_2b4cf:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2b4e7
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2b4cf
  jump_2b4e7:
    pop    %edi
  jump_2b4e8:
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2b4f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    test   %edx,%edx
    jne    jump_2b515
    mov    $0xd7,%ebx
    mov    $data_91707,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2b515:
    cmpl   $0x0,0x0(%ebp)
    jne    jump_2b52c
    mov    $0xd8,%ebx
    mov    $data_91713,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2b52c:
    mov    %esi,%eax
    mov    %esi,0x8(%esp)
    call   func_7893b
    xor    %edi,%edi
    mov    %eax,0x4(%esp)
  jump_2b53d:
    mov    0x4(%esp),%ebx
    mov    0x8(%esp),%edx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    mov    0x4(%esp),%esi
    call   func_2b3f4
    mov    (%esi),%dl
    mov    %eax,(%esp)
    test   %dl,%dl
    je     jump_2b575
  jump_2b55b:
    xor    %eax,%eax
    mov    (%esi),%al
    push   %eax
    mov    0x0(%ebp),%ebx
    push   %ebx
    inc    %esi
    call   func_60653
    add    $0x8,%esp
    mov    (%esi),%dh
    add    %eax,%edi
    test   %dh,%dh
    jne    jump_2b55b
  jump_2b575:
    mov    (%esp),%eax
    add    %eax,0x8(%esp)
    test   %eax,%eax
    jg     jump_2b53d
    mov    0x4(%esp),%eax
    call   func_7882f
    mov    %edi,%eax
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2b594:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ecx
    cmpl   $0x0,(%eax)
    jne    jump_2b5ae
    mov    $0x104,%ebx
    mov    $data_9171f,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2b5ae:
    mov    (%ecx),%ebx
    push   %ebx
    call   func_60640
    add    $0x4,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2b5bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ebx
    mov    %edx,%ecx
    call   func_2b594
    mov    %eax,%esi
    mov    %ecx,%edx
    mov    %ebx,%eax
    call   func_2b4f4
    mov    %eax,%edx
    mov    0x10(%ebx),%ecx
    mov    0x18(%ebx),%eax
    sub    %ecx,%eax
    mov    %eax,%ecx
    mov    0x14(%ebx),%eax
    sub    %esi,%ecx
    mov    0xc(%ebx),%esi
    mov    %eax,%ebx
    sub    %esi,%ebx
    sub    %edx,%ebx
    test   %ecx,%ecx
    jl     jump_2b5f5
    test   %ebx,%ebx
    jge    jump_2b5fe
  jump_2b5f5:
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_2b5fe:
    mov    %ecx,%eax
    sar    %eax
    sar    %ebx
    shl    $0x10,%eax
    add    %ebx,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2b610:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x2c,%esp
    mov    %eax,%ebp
    mov    %edx,0x18(%esp)
    mov    %ebx,0x24(%esp)
    mov    %ecx,0x1c(%esp)
    mov    0x40(%esp),%ecx
    cmpl   $0x0,0x1c(%esp)
    jne    jump_2b640
    mov    $0x13b,%ebx
    mov    $data_9172b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2b640:
    cmpl   $0x0,0x0(%ebp)
    jne    jump_2b657
    mov    $0x13c,%ebx
    mov    $data_91737,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2b657:
    mov    0x42(%esp),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_2b66c
    mov    0x1c(%ebp),%ax
    mov    %ax,0x44(%esp)
  jump_2b66c:
    movswl %cx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_2b679
    mov    $0xf3,%ecx
  jump_2b679:
    movswl %cx,%eax
    cmp    $0xfffffffe,%eax
    je     jump_2b68a
    mov    0x4(%ebp),%eax
    mov    %cl,0xf3(%eax)
  jump_2b68a:
    mov    0x1c(%esp),%edx
    mov    %ebp,%eax
    mov    %esp,%edi
    call   func_2b594
    lea    0x8(%ebp),%esi
    mov    0x1c(%esp),%edx
    mov    %eax,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x18(%esp),%eax
    mov    0x4(%esp),%ecx
    mov    0x8(%esp),%esi
    add    %eax,%ecx
    mov    0x24(%esp),%eax
    mov    %ecx,0x4(%esp)
    add    %eax,%esi
    mov    %ebp,%eax
    mov    %esi,0x8(%esp)
    call   func_2b4f4
    mov    0x4(%esp),%edx
    add    %eax,%edx
    mov    0x8(%esp),%eax
    add    %ebx,%eax
    mov    %edx,0xc(%esp)
    mov    %eax,0x10(%esp)
    mov    0x4(%esp),%eax
    mov    0x14(%ebp),%edi
    cmp    %edi,%eax
    jg     jump_2b7f8
    mov    %edx,%eax
    mov    0xc(%ebp),%edx
    cmp    %edx,%eax
    jl     jump_2b7f8
    mov    0x8(%esp),%eax
    cmp    0x18(%ebp),%eax
    jg     jump_2b7f8
    mov    0x10(%esp),%eax
    cmp    0x10(%ebp),%eax
    jl     jump_2b7f8
    cmp    0x4(%esp),%edx
    jle    jump_2b71e
    mov    %edx,0x4(%esp)
    jmp    jump_2b728
  jump_2b71e:
    cmp    0xc(%esp),%edi
    jge    jump_2b728
    mov    %edi,0xc(%esp)
  jump_2b728:
    mov    0x8(%esp),%eax
    mov    0x10(%ebp),%edx
    cmp    %edx,%eax
    jge    jump_2b739
    mov    %edx,0x8(%esp)
    jmp    jump_2b748
  jump_2b739:
    mov    0x10(%esp),%eax
    mov    0x18(%ebp),%ebx
    cmp    %ebx,%eax
    jle    jump_2b748
    mov    %ebx,0x10(%esp)
  jump_2b748:
    mov    0x42(%esp),%eax
    sar    $0x10,%eax
    cmp    $0xff,%eax
    je     jump_2b764
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    call   func_5e9d0
    add    $0x8,%esp
  jump_2b764:
    mov    0x1c(%esp),%eax
    call   func_7893b
    mov    %eax,%esi
    mov    0x18(%esp),%eax
    mov    %eax,0x28(%esp)
    lea    0x8(%ebp),%eax
    mov    0x1c(%esp),%edi
    mov    %eax,0x20(%esp)
  jump_2b782:
    mov    $0xffffffff,%ecx
    mov    %esi,%ebx
    mov    %edi,%edx
    mov    %ebp,%eax
    call   func_2b3f4
    mov    %eax,0x14(%esp)
    cmpb   $0x0,(%esi)
    je     jump_2b7bb
    mov    0x4(%ebp),%ecx
    push   %ecx
    push   %esi
    mov    0x0(%ebp),%eax
    push   %eax
    mov    0x30(%esp),%edx
    push   %edx
    mov    0x38(%esp),%ebx
    push   %ebx
    mov    0x34(%esp),%ecx
    push   %ecx
    call   func_60806
    add    $0x18,%esp
  jump_2b7bb:
    mov    %esi,%edx
    mov    %ebp,%eax
    call   func_2b4f4
    mov    0x28(%esp),%edx
    mov    0x14(%esp),%ebx
    add    %eax,%edx
    add    %ebx,%edi
    mov    %edx,0x28(%esp)
    test   %ebx,%ebx
    jg     jump_2b782
    mov    %esi,%eax
    call   func_7882f
    mov    0x3c(%esp),%eax
    xor    %ah,%ah
    and    $0xc0,%al
    cwtl
    test   %eax,%eax
    jne    jump_2b7f8
    mov    %esp,%edx
    mov    $data_10ae70,%eax
    call   func_552cc
  jump_2b7f8:
    add    $0x2c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0xc


/*----------------------------------------------------------------*/
func_2b8a8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x34,%esp
    mov    %eax,%esi
    mov    %edx,0x1c(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ecx,0x8(%esp)
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x80,%al
    cwtl
    test   %eax,%eax
    je     jump_2b8f3
    mov    0x4a(%esp),%edx
    sar    $0x10,%edx
    cmp    $0xff,%edx
    je     jump_2b8f3
    mov    0x4c(%esp),%eax
    cmp    $0xffffffff,%edx
    jne    jump_2b8e5
    mov    0x1c(%esi),%ax
  jump_2b8e5:
    cwtl
    push   %eax
    lea    0x8(%esi),%eax
    push   %eax
    call   func_5e9d0
    add    $0x8,%esp
  jump_2b8f3:
    mov    0x46(%esp),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_2b906
    movw   $0xf3,0x48(%esp)
  jump_2b906:
    mov    0x4(%esi),%eax
    mov    0x48(%esp),%dl
    mov    %dl,0xf3(%eax)
    cmpl   $0x1,0x50(%esp)
    jge    jump_2b926
    mov    0x14(%esi),%eax
    mov    0xc(%esi),%ebx
    sub    %ebx,%eax
    mov    %eax,0x50(%esp)
  jump_2b926:
    mov    0x8(%esp),%eax
    mov    $0x1,%edi
    call   func_7893b
    mov    %eax,0xc(%esp)
    mov    %eax,%ebp
    mov    %eax,%ebx
    mov    %eax,%ecx
    mov    %edi,0x20(%esp)
    xor    %edi,%edi
  jump_2b944:
    movsbl (%ebx),%eax
    test   %eax,%eax
    jne    jump_2b950
    mov    $0xffffffff,%edi
  jump_2b950:
    mov    (%ebx),%al
    mov    %ebp,%edx
    mov    %al,0x30(%esp)
    mov    %esi,%eax
    movb   $0x0,(%ebx)
    call   func_2b4f4
    mov    0x30(%esp),%dl
    mov    %dl,(%ebx)
    cmp    $0xa,%dl
    jne    jump_2b97e
    mov    0x20(%esp),%edx
    movb   $0x0,(%ebx)
    inc    %ebx
    inc    %edx
    mov    %ebx,%ebp
    mov    %edx,0x20(%esp)
    jmp    jump_2b9a3
  jump_2b97e:
    cmp    0x50(%esp),%eax
    jle    jump_2b99b
    cmp    %ebp,%ecx
    jbe    jump_2b99b
    mov    0x20(%esp),%eax
    lea    0x1(%ecx),%ebp
    movb   $0x0,(%ecx)
    inc    %eax
    mov    %ebp,%ebx
    mov    %eax,0x20(%esp)
    jmp    jump_2b9a3
  jump_2b99b:
    cmpb   $0x20,(%ebx)
    jne    jump_2b9a2
    mov    %ebx,%ecx
  jump_2b9a2:
    inc    %ebx
  jump_2b9a3:
    test   %edi,%edi
    je     jump_2b944
    mov    0x8(%esp),%edx
    mov    %esi,%eax
    call   func_2b594
    add    $0x2,%eax
    mov    0x20(%esp),%ebx
    mov    %eax,0x18(%esp)
    imul   %ebx,%eax
    mov    %eax,(%esp)
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x10,%al
    cwtl
    test   %eax,%eax
    je     jump_2b9db
    mov    0x10(%esp),%eax
    mov    (%esp),%edi
    sub    %edi,%eax
    jmp    jump_2ba25
  jump_2b9db:
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x1,%al
    mov    (%esp),%edx
    cwtl
    inc    %edx
    test   %eax,%eax
    je     jump_2b9ff
    mov    0x18(%esi),%eax
    sub    0x10(%esi),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    jmp    jump_2ba25
  jump_2b9ff:
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x4,%al
    cwtl
    test   %eax,%eax
    je     jump_2ba21
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    0x10(%esp),%edx
    sub    %eax,%edx
    mov    %edx,0x4(%esp)
    jmp    jump_2ba29
  jump_2ba21:
    mov    0x10(%esp),%eax
  jump_2ba25:
    mov    %eax,0x4(%esp)
  jump_2ba29:
    mov    0xc(%esp),%ebp
    xor    %eax,%eax
    mov    0x20(%esp),%edx
    mov    %eax,0x14(%esp)
    test   %edx,%edx
    jle    jump_2bb1d
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x8,%al
    mov    %ax,0x24(%esp)
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x2,%al
    mov    %ax,0x28(%esp)
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x20,%al
    mov    %ax,0x2c(%esp)
  jump_2ba66:
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_2b4f4
    mov    %eax,%edx
    mov    0x2a(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_2bad3
    mov    0x1c(%esp),%eax
    sub    %edx,%eax
    mov    %eax,%edx
  jump_2ba84:
    mov    0x4a(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x8(%esp),%ebx
    mov    0x46(%esp),%eax
    push   $0xfffffffe
    sar    $0x10,%eax
    mov    %ebp,%ecx
    push   %eax
    mov    %esi,%eax
    mov    %ebp,%edi
    call   func_2b610
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    0x18(%esp),%eax
    mov    0x4(%esp),%edi
    mov    0x20(%esp),%edx
    inc    %ecx
    add    %eax,%edi
    mov    0x14(%esp),%eax
    add    %ecx,%ebp
    inc    %eax
    mov    %edi,0x4(%esp)
    mov    %eax,0x14(%esp)
    cmp    %edx,%eax
    jge    jump_2bb1d
    jmp    jump_2ba66
  jump_2bad3:
    mov    0x26(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_2baf5
    mov    0x14(%esi),%ebx
    sub    0xc(%esi),%ebx
    sub    %edx,%ebx
    mov    %ebx,%edx
    mov    %ebx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,%edx
    jmp    jump_2ba84
  jump_2baf5:
    mov    0x22(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_2bb14
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    0x1c(%esp),%edx
    sub    %eax,%edx
    jmp    jump_2ba84
  jump_2bb14:
    mov    0x1c(%esp),%edx
    jmp    jump_2ba84
  jump_2bb1d:
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x80,%al
    cwtl
    test   %eax,%eax
    je     jump_2bb37
    mov    $data_10ae70,%eax
    lea    0x8(%esi),%edx
    call   func_552cc
  jump_2bb37:
    mov    0xc(%esp),%eax
    call   func_7882f
    mov    (%esp),%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x10


/*----------------------------------------------------------------*/
func_2bb50:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_96780,%eax
    call   func_786da
    mov    $data_d8654,%eax
    mov    $0x1,%edx
    call   func_2bd4c
    mov    %edx,data_96788
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2bb74:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%ebp
    mov    %edx,0x1c(%esp)
    mov    %ebx,0x18(%esp)
    mov    %ecx,0x14(%esp)
    mov    0x34(%esp),%al
    cmpl   $0xffffffff,0x38(%esp)
    jne    jump_2bbcf
    mov    %esp,%edi
    mov    %ebp,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x1c(%esp),%esi
    mov    %esi,0x4(%esp)
    mov    0x30(%esp),%esi
    mov    %esi,0x10(%esp)
    movzbl %al,%esi
    push   %esi
    push   %ebx
    mov    %ecx,0x14(%esp)
    mov    0x24(%esp),%ecx
    push   %ecx
    push   %ebp
    push   $0x0
    push   $0x0
    lea    0x18(%esp),%esi
    push   %esi
    mov    %ebx,0x24(%esp)
    call   func_5eaaf
    jmp    jump_2bc33
  jump_2bbcf:
    movzbl %al,%esi
    push   %esi
    push   $0x0
    push   %ebx
    push   %ecx
    push   %ebx
    mov    0x30(%esp),%eax
    push   %eax
    push   %ebp
    call   func_5c001
    add    $0x1c,%esp
    push   %esi
    push   $0x0
    mov    0x38(%esp),%edx
    push   %edx
    mov    0x20(%esp),%ebx
    push   %ebx
    push   %edx
    mov    0x30(%esp),%edi
    push   %edi
    push   %ebp
    call   func_5c001
    add    $0x1c,%esp
    push   %esi
    push   $0x0
    mov    0x38(%esp),%eax
    push   %eax
    push   %edi
    mov    0x28(%esp),%ebx
    push   %ebx
    push   %edi
    push   %ebp
    call   func_5c001
    add    $0x1c,%esp
    push   %esi
    push   $0x0
    mov    0x38(%esp),%esi
    push   %esi
    mov    0x20(%esp),%edi
    push   %edi
    mov    0x28(%esp),%eax
    push   %eax
    push   %edi
    push   %ebp
    call   func_5c001
  jump_2bc33:
    add    $0x1c,%esp
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0xc


/*----------------------------------------------------------------*/
func_2bc40:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    0x28(%esp),%ebp
    mov    %eax,%edi
    mov    %edx,0x14(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ecx,%esi
    test   %eax,%eax
    jne    jump_2bc69
    mov    $0x40,%ebx
    mov    $data_91744,%edx
    call   func_26198
  jump_2bc69:
    cmpl   $0x0,0x14(%esp)
    jne    jump_2bc81
    mov    $0x41,%ebx
    mov    $data_91753,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2bc81:
    mov    %esp,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    mov    0x20(%esp),%ebx
    push   %ebx
    mov    0x28(%esp),%ecx
    push   %ecx
    call   func_5e1dd
    add    $0x18,%esp
    mov    0x8(%esp),%edx
    mov    (%esp),%eax
    mov    0xc(%esp),%ebx
    mov    0x4(%esp),%ecx
    sub    %eax,%edx
    sub    %ecx,%ebx
    mov    0xc(%edi),%eax
    sub    0x4(%edi),%eax
    sub    %edx,%eax
    mov    %eax,(%esi)
    je     jump_2bcc6
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,(%esi)
  jump_2bcc6:
    mov    0x10(%edi),%eax
    sub    0x8(%edi),%eax
    sub    %ebx,%eax
    mov    %eax,0x0(%ebp)
    je     jump_2bcdf
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,0x0(%ebp)
  jump_2bcdf:
    mov    (%esp),%eax
    sub    %eax,(%esi)
    mov    0x4(%esp),%eax
    sub    %eax,0x0(%ebp)
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_2bcf4:
/*----------------------------------------------------------------*/
    mov    $data_d8654,%eax
    and    $0xff,%edx
    xor    %ebx,%ebx
    lea    0x0(%eax),%eax


/*----------------------------------------------------------------*/
func_2bd04:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %dl,0x4(%esp)
    mov    %ebx,%edi
    xor    %eax,%eax
    mov    %dl,%al
    test   %eax,%eax
    jne    jump_2bd2e
    mov    $0x100,%ebx
    lea    0x133(%esi),%ecx
    xor    %edx,%edx
    mov    %esi,%eax
    call   func_2c2b0
  jump_2bd2e:
    test   %edi,%edi
    jne    jump_2c321
    xor    %ah,%ah
    xor    %dl,%dl
    mov    %ah,(%esp)
    mov    %dl,0x1(%esp)
    mov    %dl,0x2(%esp)
    jmp    jump_2c334


/*----------------------------------------------------------------*/
func_2bd4c:
/*----------------------------------------------------------------*/
    movl   $0x0,(%eax)
    movl   $0x0,0x14(%eax)
    movl   $0x0,0x12f(%eax)
    movb   $0x0,0x30(%eax)
    movl   $0x0,0x73b(%eax)
    movw   $0x0,0x73f(%eax)
    ret


/*----------------------------------------------------------------*/
func_2bd7c:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    call   func_2c6cc
    mov    %ebx,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2bd88:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x220,%esp
    mov    %eax,%ebp
    mov    %edx,0x218(%esp)
    lea    0x30(%eax),%edx
    mov    0x218(%esp),%esi
    mov    %edx,%edi
    push   %edi
  jump_2bda8:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2bdc0
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2bda8
  jump_2bdc0:
    pop    %edi
    mov    $data_91762,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_2bdcf:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2bde7
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2bdcf
  jump_2bde7:
    pop    %edi
    test   %ebx,%ebx
    jne    jump_2bf0c
    mov    0x218(%esp),%esi
    lea    0x118(%esp),%edi
    push   %edi
  jump_2bdff:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2be17
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2bdff
  jump_2be17:
    pop    %edi
    mov    $data_91764,%esi
    lea    0x118(%esp),%edi
    mov    $0x200,%ebx
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_2be32:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2be4a
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2be32
  jump_2be4a:
    pop    %edi
    mov    %esp,%eax
    lea    0x118(%esp),%edx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_2be80
    mov    $0x9f,%ebx
    mov    $data_91771,%edx
    call   func_26198
  jump_2be80:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    test   %esi,%esi
    jne    jump_2be94
    xor    %eax,%eax
    jmp    jump_2bfd0
  jump_2be94:
    push   $0x0
    push   $0x5
    push   %esi
    call   func_664bc
    mov    %eax,0x228(%esp)
    add    $0xc,%esp
    mov    %esi,%eax
    call   func_2627c
    mov    %esi,%eax
    mov    0x21c(%esp),%edx
    call   func_76d64
    test   %edx,%edx
    jne    jump_2bece
    xor    %eax,%eax
    add    $0x220,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2bece:
    push   %edx
    call   func_5be08
    add    $0x4,%esp
    lea    0x30(%ebp),%edi
    mov    %eax,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_2bee5:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2befd
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2bee5
  jump_2befd:
    pop    %edi
    mov    0x21c(%esp),%eax
    call   func_7882f
    jmp    jump_2bf30
  jump_2bf0c:
    mov    %ebx,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_2bf17:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2bf2f
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2bf17
  jump_2bf2f:
    pop    %edi
  jump_2bf30:
    mov    %ebp,%eax
    call   func_2bfdc
    test   %eax,%eax
    je     jump_2bfd0
    call   *data_96bd8
    mov    0x0(%ebp),%ecx
    movl   $0xffffffff,0x12f(%ebp)
    test   %ecx,%ecx
    je     jump_2bf5d
    mov    %ecx,%eax
    call   func_262cc
  jump_2bf5d:
    mov    0x28(%ebp),%eax
    imul   0x2c(%ebp),%eax
    mov    $0x1,%ebx
    mov    $data_91780,%ecx
    mov    %ebx,%edx
    call   func_262b0
    movl   $0x0,0xc(%ebp)
    mov    %eax,0x0(%ebp)
    mov    0x28(%ebp),%eax
    movl   $0x0,0x10(%ebp)
    dec    %eax
    mov    %eax,0x4(%ebp)
    mov    0x2c(%ebp),%eax
    movl   $0x0,0x18(%ebp)
    dec    %eax
    mov    %eax,0x8(%ebp)
    mov    0x28(%ebp),%eax
    movl   $0x0,0x1c(%ebp)
    dec    %eax
    mov    %eax,0x20(%ebp)
    mov    0x2c(%ebp),%eax
    mov    %ebp,0x14(%ebp)
    dec    %eax
    mov    0x0(%ebp),%edi
    mov    %eax,0x24(%ebp)
    test   %edi,%edi
    jne    jump_2bfcb
    mov    $0xd9,%ebx
    mov    $data_91791,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2bfcb:
    mov    $0xffffffff,%eax
  jump_2bfd0:
    add    $0x220,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2bfdc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x118,%esp
    mov    %eax,%edi
    mov    %esp,%eax
    mov    $0x200,%ebx
    call   func_1bb78
    lea    0x30(%edi),%edx
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_2c01f
    mov    $0xeb,%ebx
    mov    $data_917a0,%edx
    call   func_26198
  jump_2c01f:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    test   %esi,%esi
    jne    jump_2c030
    xor    %eax,%eax
    jmp    jump_2c07e
  jump_2c030:
    push   $0x0
    push   $0x5
    push   %esi
    call   func_664bc
    add    $0xc,%esp
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_2627c
    mov    %esi,%eax
    call   func_76d64
    test   %edx,%edx
    jne    jump_2c05f
    xor    %eax,%eax
    add    $0x118,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_2c05f:
    push   %edx
    call   func_5be31
    add    $0x4,%esp
    call   *data_96bd4
    mov    (%eax),%edx
    mov    %edx,0x28(%edi)
    mov    0x4(%eax),%eax
    mov    %eax,0x2c(%edi)
    mov    $0xffffffff,%eax
  jump_2c07e:
    add    $0x118,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c08c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    xor    %eax,%eax
    mov    %dx,%ax
    mov    $data_917af,%ebx
    shl    $0x8,%eax
    mov    $0x1,%edx
    call   func_77604
    call   func_2625c
    mov    %eax,0x73b(%esi)
    mov    %cx,0x73f(%esi)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c0c0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x118,%esp
    mov    %eax,%ebp
    mov    %edx,%edi
    mov    %ebx,%esi
    mov    0x73d(%eax),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    %bx,%dx
    cmp    %eax,%edx
    jl     jump_2c0f3
    mov    $0x11f,%ebx
    mov    $data_917c3,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2c0f3:
    mov    %esp,%eax
    mov    $0x200,%ebx
    call   func_1bb78
    mov    %edi,%edx
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    xor    %eax,%eax
    mov    %si,%ax
    mov    0x73b(%ebp),%edx
    shl    $0x8,%eax
    add    %eax,%edx
    mov    %esp,%eax
    call   func_1bf1c
    mov    %eax,%edi
    test   %eax,%eax
    jne    jump_2c136
    mov    $0x127,%ebx
    mov    $data_917d2,%edx
    call   func_261a8
  jump_2c136:
    test   %edi,%edi
    sete   %al
    xor    %edx,%edx
    movzbl %al,%edi
    mov    %esp,%eax
    dec    %edi
    call   func_1bbc8
    mov    %edi,%eax
    add    $0x118,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2c158:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x11c,%esp
    mov    %eax,%esi
    mov    %ebx,0x118(%esp)
    mov    %ecx,%edi
    mov    %esp,%eax
    mov    $0x200,%ebx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    mov    %esp,%eax
    lea    0x433(%esi),%edx
    call   func_1bf1c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_2c1a2
    mov    $0x13c,%ebx
    mov    $data_917e1,%edx
    call   func_26198
  jump_2c1a2:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    test   %ecx,%ecx
    je     jump_2c1d2
    lea    0x433(%esi),%ecx
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    0x118(%esp),%dx
    mov    %di,%bx
    mov    %esi,%eax
    call   func_2c224
    mov    $0xffffffff,%eax
    jmp    jump_2c1d4
  jump_2c1d2:
    xor    %eax,%eax
  jump_2c1d4:
    add    $0x11c,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2c1e0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ebp
    mov    %edx,(%esp)
    mov    %ebx,0x4(%esp)
    mov    %ecx,%eax
    xor    %edx,%edx
    jmp    jump_2c210
  jump_2c1f5:
    xor    %ebx,%ebx
    mov    (%esp),%bx
    add    %edx,%ebx
    lea    (%ebx,%ebx,2),%ebx
    mov    %eax,%esi
    lea    0x433(%ebx,%ebp,1),%edi
    add    $0x3,%eax
    inc    %edx
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
  jump_2c210:
    xor    %ebx,%ebx
    mov    0x4(%esp),%bx
    cmp    %ebx,%edx
    jl     jump_2c1f5
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2c224:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %edx,%esi
    mov    %ecx,%edi
    add    %edx,%ebx
    mov    %bx,(%esp)
    call   *data_96be8
    and    $0xffff,%esi
    jmp    jump_2c250
  jump_2c241:
    push   %edi
    push   %esi
    add    $0x3,%edi
    call   *data_96bf8
    add    $0x8,%esp
    inc    %esi
  jump_2c250:
    mov    -0x2(%esp),%eax
    sar    $0x10,%eax
    cmp    %eax,%esi
    jl     jump_2c241
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2c2b0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %edx,%esi
    mov    %ecx,%edi
    test   %ecx,%ecx
    jne    jump_2c2c3
    lea    0x433(%eax),%edi
  jump_2c2c3:
    add    %esi,%ebx
    mov    %bx,(%esp)
    call   *data_96be8
    and    $0xffff,%esi
    jmp    jump_2c2e6
  jump_2c2d7:
    push   %edi
    push   %esi
    add    $0x3,%edi
    call   *data_96bf4
    add    $0x8,%esp
    inc    %esi
  jump_2c2e6:
    mov    -0x2(%esp),%eax
    sar    $0x10,%eax
    cmp    %eax,%esi
    jl     jump_2c2d7
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2c2f8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%edi
    mov    %edx,%esi
    xor    %ecx,%ecx
  jump_2c302:
    mov    %esi,%ebx
    xor    %edx,%edx
    mov    %edi,%eax
    mov    %cl,%dl
    call   func_2bd04
    mov    %ecx,%eax
    inc    %ecx
    call   func_78980
    cmp    $0x40,%ecx
    jl     jump_2c302
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_2c321:
    mov    (%edi),%al
    mov    %al,(%esp)
    mov    0x1(%edi),%al
    mov    %al,0x1(%esp)
    mov    0x2(%edi),%al
    mov    %al,0x2(%esp)
  jump_2c334:
    mov    $0x40,%dh
    sub    0x4(%esp),%dh
    movsbl %dh,%eax
    test   %eax,%eax
    jge    jump_2c343
    xor    %dh,%dh
  jump_2c343:
    mov    %esi,%eax
    lea    0x300(%esi),%ecx
    jmp    jump_2c3cc
  jump_2c350:
    sub    %dh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jle    jump_2c35f
    decb   0x133(%eax)
  jump_2c35f:
    mov    0x1(%esp),%bh
    mov    0x134(%eax),%dl
    sub    %bh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jge    jump_2c383
    add    %dh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jge    jump_2c392
    incb   0x134(%eax)
    jmp    jump_2c392
  jump_2c383:
    sub    %dh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jle    jump_2c392
    decb   0x134(%eax)
  jump_2c392:
    mov    0x2(%esp),%bh
    mov    0x135(%eax),%dl
    sub    %bh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jge    jump_2c3b6
    add    %dh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jge    jump_2c3c5
    incb   0x135(%eax)
    jmp    jump_2c3c5
  jump_2c3b6:
    sub    %dh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jle    jump_2c3c5
    decb   0x135(%eax)
  jump_2c3c5:
    add    $0x3,%eax
    cmp    %ecx,%eax
    je     jump_2c3fa
  jump_2c3cc:
    mov    (%esp),%bh
    mov    0x133(%eax),%dl
    sub    %bh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jge    jump_2c350
    add    %dh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jge    jump_2c35f
    incb   0x133(%eax)
    jmp    jump_2c35f
  jump_2c3fa:
    mov    $0x100,%ebx
    lea    0x133(%esi),%ecx
    xor    %edx,%edx
    mov    %esi,%eax
    call   func_2c224
  jump_2c40e:
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2c418:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %edx,0x4(%esp)
    mov    %edx,%edi
    mov    0x4(%esp),%esi
    add    %ebx,%edi
    call   *data_96be8
    cmp    %si,%di
    jle    jump_2c40e
    jmp    jump_2c44d
  jump_2c437:
    mov    %esp,%eax
    push   %eax
    movswl %si,%eax
    push   %eax
    inc    %esi
    call   *data_96bf8
    add    $0x8,%esp
    cmp    %di,%si
    jge    jump_2c40e
  jump_2c44d:
    mov    %esp,%eax
    push   %eax
    movswl %si,%eax
    push   %eax
    call   *data_96bf4
    add    $0x8,%esp
    mov    (%esp),%ah
    test   %ah,%ah
    je     jump_2c46b
    mov    %ah,%dl
    dec    %dl
    mov    %dl,(%esp)
  jump_2c46b:
    mov    (%esp),%dh
    test   %dh,%dh
    je     jump_2c479
    mov    %dh,%bl
    dec    %bl
    mov    %bl,(%esp)
  jump_2c479:
    mov    0x1(%esp),%bh
    test   %bh,%bh
    je     jump_2c489
    mov    %bh,%cl
    dec    %cl
    mov    %cl,0x1(%esp)
  jump_2c489:
    mov    0x1(%esp),%ch
    test   %ch,%ch
    je     jump_2c499
    mov    %ch,%al
    dec    %al
    mov    %al,0x1(%esp)
  jump_2c499:
    mov    0x2(%esp),%ah
    test   %ah,%ah
    je     jump_2c4a9
    mov    %ah,%dl
    dec    %dl
    mov    %dl,0x2(%esp)
  jump_2c4a9:
    mov    0x2(%esp),%dh
    test   %dh,%dh
    je     jump_2c437
    mov    %dh,%bl
    dec    %bl
    mov    %bl,0x2(%esp)
    jmp    jump_2c437


/*----------------------------------------------------------------*/
func_2c4c0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%edi
    mov    %edx,0x4(%esp)
    mov    %edx,%esi
    add    %ebx,%esi
    call   *data_96be8
    mov    %esi,0x8(%esp)
    mov    0x4(%esp),%esi
    jmp    jump_2c4f2
  jump_2c4e1:
    mov    %esp,%ebp
    push   %ebp
    movswl %si,%ebp
    push   %ebp
    call   *data_96bf8
    add    $0x8,%esp
    inc    %esi
  jump_2c4f2:
    cmp    0x8(%esp),%si
    jge    jump_2c5b5
    mov    %esp,%ebp
    push   %ebp
    movswl %si,%ebp
    push   %ebp
    call   *data_96bf4
    add    $0x8,%esp
    lea    0x0(%ebp,%ebp,2),%ebp
    mov    (%esp),%al
    cmp    0x433(%edi,%ebp,1),%al
    jae    jump_2c524
    mov    %al,%dl
    inc    %dl
    mov    %dl,(%esp)
  jump_2c524:
    movswl %si,%ebp
    lea    0x0(%ebp,%ebp,2),%ebp
    mov    (%esp),%al
    cmp    0x433(%edi,%ebp,1),%al
    jae    jump_2c53e
    mov    %al,%bl
    inc    %bl
    mov    %bl,(%esp)
  jump_2c53e:
    movswl %si,%ebp
    lea    0x0(%ebp,%ebp,2),%ebp
    mov    0x1(%esp),%al
    cmp    0x434(%edi,%ebp,1),%al
    jae    jump_2c55a
    mov    %al,%cl
    inc    %cl
    mov    %cl,0x1(%esp)
  jump_2c55a:
    movswl %si,%ebp
    lea    0x0(%ebp,%ebp,2),%ebp
    mov    0x1(%esp),%al
    cmp    0x434(%edi,%ebp,1),%al
    jae    jump_2c574
    inc    %al
    mov    %al,0x1(%esp)
  jump_2c574:
    movswl %si,%ebp
    lea    0x0(%ebp,%ebp,2),%ebp
    mov    0x2(%esp),%al
    cmp    0x435(%edi,%ebp,1),%al
    jae    jump_2c590
    mov    %al,%dl
    inc    %dl
    mov    %dl,0x2(%esp)
  jump_2c590:
    movswl %si,%ebp
    lea    0x0(%ebp,%ebp,2),%ebp
    mov    0x2(%esp),%al
    cmp    0x435(%edi,%ebp,1),%al
    jae    jump_2c4e1
    mov    %al,%bl
    inc    %bl
    mov    %bl,0x2(%esp)
    jmp    jump_2c4e1
  jump_2c5b5:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2c5e4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %dl,(%esp)
    xor    %eax,%eax
    mov    %dl,%al
    test   %eax,%eax
    jne    jump_2c60c
    mov    $0x100,%ebx
    lea    0x133(%edi),%ecx
    xor    %edx,%edx
    mov    %edi,%eax
    call   func_2c2b0
  jump_2c60c:
    mov    $0x40,%dh
    lea    0x133(%edi),%esi
    mov    (%esp),%ah
    lea    0x433(%edi),%ebx
    sub    %ah,%dh
    mov    %esi,%eax
    add    $0x300,%esi
    jmp    jump_2c63a
  jump_2c629:
    sub    %dh,%dl
    movsbl %dl,%ecx
    test   %ecx,%ecx
    jle    jump_2c634
    decb   (%eax)
  jump_2c634:
    inc    %eax
    inc    %ebx
    cmp    %esi,%eax
    je     jump_2c652
  jump_2c63a:
    mov    (%eax),%dl
    sub    (%ebx),%dl
    movsbl %dl,%ecx
    test   %ecx,%ecx
    jge    jump_2c629
    add    %dh,%dl
    movsbl %dl,%ecx
    test   %ecx,%ecx
    jge    jump_2c634
    incb   (%eax)
    jmp    jump_2c634
  jump_2c652:
    mov    $0x100,%ebx
    lea    0x133(%edi),%ecx
    xor    %edx,%edx
    mov    %edi,%eax
    call   func_2c224
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c670:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0xc,%esp
    mov    %edx,0x8(%esp)
    mov    %ecx,%edi
    test   %ecx,%ecx
    jne    jump_2c692
    mov    %esp,%edi
    xor    %dl,%dl
    xor    %ah,%ah
    mov    %dl,0x1(%esp)
    xor    %dh,%dh
    mov    %ah,0x2(%esp)
    mov    %dh,(%esp)
  jump_2c692:
    mov    0x8(%esp),%eax
    add    %ebx,%eax
    mov    0x8(%esp),%esi
    mov    %eax,0x4(%esp)
    call   *data_96be8
    cmp    0x4(%esp),%si
    jge    jump_2c6c3
  jump_2c6ad:
    push   %edi
    movswl %si,%eax
    push   %eax
    call   *data_96bf8
    add    $0x8,%esp
    inc    %esi
    cmp    0x4(%esp),%si
    jl     jump_2c6ad
  jump_2c6c3:
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2c6cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    cmpl   $0xffffffff,0x12f(%eax)
    jne    jump_2c6e1
    call   *data_96bdc
  jump_2c6e1:
    mov    (%esi),%ebx
    movl   $0x0,0x12f(%esi)
    test   %ebx,%ebx
    je     jump_2c6fe
    mov    %ebx,%eax
    call   func_262cc
    movl   $0x0,(%esi)
  jump_2c6fe:
    mov    0x10(%esi),%ecx
    test   %ecx,%ecx
    je     jump_2c713
    mov    %ecx,%eax
    call   func_262cc
    movl   $0x0,0x10(%esi)
  jump_2c713:
    mov    0x73b(%esi),%eax
    call   func_2627c
    mov    0x73b(%esi),%eax
    call   func_76d5c
    movl   $0x0,0x73b(%esi)
    movw   $0x0,0x73f(%esi)
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c744:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x118,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_d8628
    je     jump_2c7c2
    cmpl   $0x0,0x733(%eax)
    jne    jump_2c7b1
    mov    %esp,%eax
    mov    $0x200,%ebx
    mov    $data_917f0,%edx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,0x733(%esi)
    test   %eax,%eax
    jne    jump_2c79e
    mov    $0x2b3,%ebx
    mov    $data_917ff,%edx
    call   func_26198
  jump_2c79e:
    mov    %esp,%eax
    xor    %edx,%edx
    movl   $0x0,0x737(%esi)
    call   func_1bbc8
  jump_2c7b1:
    mov    0x737(%esi),%edx
    mov    0x733(%esi),%eax
    call   func_64f39
  jump_2c7c2:
    add    $0x118,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c7d0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %edx,%esi
    mov    %ebx,%ecx
    test   %ebx,%ebx
    jne    jump_2c7e0
    mov    0x733(%eax),%ecx
  jump_2c7e0:
    test   %ecx,%ecx
    jne    jump_2c7f5
    mov    $0x2c7,%ebx
    mov    $data_9180e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2c7f5:
    test   %esi,%esi
    jge    jump_2c80a
    mov    $0x2c8,%ebx
    mov    $data_9181d,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2c80a:
    test   %ecx,%ecx
    jne    jump_2c813
    xor    %eax,%eax
    pop    %esi
    pop    %ecx
    ret
  jump_2c813:
    mov    %esi,%edx
    mov    %ecx,%eax
    call   func_64f39
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2c830:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    movl   $data_95e20,0xa7(%eax)
    call   func_2c8e4
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2c848:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %edx,(%esp)
    testb  $0x4,(%esp)
    je     jump_2c86e
    mov    $data_95d7c,%edx
    mov    %ecx,%eax
    call   func_76d3c
    call   func_76d5c
    jmp    jump_2c8d9
  jump_2c86e:
    mov    0x67(%ecx),%edx
    movl   $data_95e20,0xa7(%ecx)
    test   %edx,%edx
    je     jump_2c8ae
    xor    %eax,%eax
    jmp    jump_2c884
  jump_2c883:
    inc    %eax
  jump_2c884:
    movswl %ax,%edx
    cmp    $0x14,%edx
    jge    jump_2c8a6
    lea    0x0(,%edx,4),%ebx
    mov    0x67(%ecx),%edx
    mov    (%edx,%ebx,1),%edx
    test   %edx,%edx
    je     jump_2c883
    movl   $0x0,0x63(%edx)
    jmp    jump_2c883
  jump_2c8a6:
    mov    0x67(%ecx),%eax
    call   func_262cc
  jump_2c8ae:
    mov    0x63(%ecx),%ebx
    test   %ebx,%ebx
    je     jump_2c8cc
    lea    0x0(,%ebx,4),%edx
    sub    %ebx,%edx
    mov    data_10ae74(,%edx,4),%eax
    mov    %ecx,%edx
    call   func_2ca0c
  jump_2c8cc:
    testb  $0x2,(%esp)
    je     jump_2c8d9
    mov    %ecx,%eax
    call   func_76d64
  jump_2c8d9:
    mov    %ecx,%eax
    add    $0x4,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c8e4:
/*----------------------------------------------------------------*/
    movl   $0x0,0x41(%eax)
    movl   $0x0,0x4(%eax)
    movw   $0xffff,0x18(%eax)
    movl   $0x0,0x1a(%eax)
    movw   $0xffff,0x1e(%eax)
    movb   $0x0,0x20(%eax)
    movl   $0x0,0x35(%eax)
    movl   $0x0,0x39(%eax)
    movl   $0x0,0x3d(%eax)
    movw   $0xffff,0x59(%eax)
    movw   $0xffff,0x5b(%eax)
    movw   $0xffff,0x5d(%eax)
    movl   $0x0,0x5f(%eax)
    movw   $0x0,0x45(%eax)
    movl   $0x0,0x47(%eax)
    movl   $0x0,0x4b(%eax)
    movb   $0x0,0x4f(%eax)
    movl   $0x0,0x63(%eax)
    movl   $0x0,0x67(%eax)
    movw   $0x0,0x6b(%eax)
    movw   $0x0,0xa1(%eax)
    movl   $0xffffffff,0xa3(%eax)
    ret


/*----------------------------------------------------------------*/
func_2c978:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_571b8
    mov    %eax,0x41(%ebx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c990:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    0x69(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_2c9d2
    mov    0x67(%ecx),%edx
    test   %edx,%edx
    je     jump_2c9af
    mov    %edx,%eax
    call   func_262cc
  jump_2c9af:
    mov    $data_9182c,%ebx
    mov    $0x1,%edx
    mov    $0x50,%eax
    call   func_2628c
    mov    $0x50,%ebx
    xor    %edx,%edx
    mov    %eax,0x67(%ecx)
    call   func_76ec0
  jump_2c9d2:
    mov    0x69(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0x14,%eax
    jl     jump_2c9ee
    mov    $0x94,%ebx
    mov    $data_9183a,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2c9ee:
    mov    0x6b(%ecx),%ax
    movswl %ax,%edx
    inc    %eax
    mov    %ax,0x6b(%ecx)
    mov    0x67(%ecx),%eax
    mov    %esi,(%eax,%edx,4)
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ca0c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%edi
    mov    0x67(%eax),%edx
    xor    %esi,%esi
    test   %edx,%edx
    je     jump_2ca4e
    xor    %edx,%edx
    jmp    jump_2ca20
  jump_2ca1f:
    inc    %edx
  jump_2ca20:
    movswl %dx,%ebx
    cmp    $0x14,%ebx
    jge    jump_2ca4e
    lea    0x0(,%ebx,4),%ecx
    mov    0x67(%eax),%ebx
    add    %ecx,%ebx
    cmp    (%ebx),%edi
    jne    jump_2ca1f
    movl   $0x0,(%ebx)
    mov    0x6b(%eax),%bx
    dec    %ebx
    mov    $0xffffffff,%esi
    mov    %bx,0x6b(%eax)
    jmp    jump_2ca1f
  jump_2ca4e:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ca78:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    movswl %dx,%edx
    mov    0x8(%eax),%ecx
    mov    0x10(%eax),%esi
    mov    0xc(%eax),%edi
    mov    0x14(%eax),%ebp
    add    %edx,%ecx
    add    %edx,%esi
    mov    %ecx,0x8(%eax)
    movswl %bx,%edx
    mov    %esi,0x10(%eax)
    add    %edx,%edi
    add    %edx,%ebp
    mov    %edi,0xc(%eax)
    mov    %ebp,0x14(%eax)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2caa7:
    movl   $0xffffffff,0x39(%eax)
    mov    0xa7(%eax),%ebp
    movl   $0xffffffff,0x35(%eax)
    xor    %edx,%edx
    call   *0xc(%ebp)
    movswl %di,%edx
    mov    %esi,%eax
    call   func_2d258
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2cad3:
    movswl %dx,%edx
    call   func_2d258
    movl   $0x0,0x39(%esi)
    movl   $0x0,0x35(%esi)
    mov    0x41(%esi),%edx
    cmp    data_10de72,%edx
    jne    jump_2cafe
    movl   $0xffffffff,data_10de72
  jump_2cafe:
    mov    $0xffffffff,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_567bc
    mov    $0xffffffff,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_564c0
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2cb2b:
    movl   $0xffffffff,0x35(%eax)
    movl   $0xffffffff,0x39(%eax)
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2cb42:
    movl   $0x0,0x35(%eax)
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2cb52:
    cmpl   $0x0,0x39(%eax)
    je     jump_2cb72
    cmpl   $0x0,0x35(%eax)
    je     jump_2cb72
    cmpl   $0x0,0x3d(%eax)
    je     jump_2cb72
    mov    0xa7(%eax),%ebx
    mov    $0x3,%edx
    call   *0xc(%ebx)
  jump_2cb72:
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2cb7e:
    cmp    0x8(%eax),%ebx
    jl     jump_2cd19
    cmp    0x10(%eax),%ebx
    jg     jump_2cd19
    cmp    0xc(%eax),%ecx
    jl     jump_2cd19
    cmp    0x14(%esi),%ecx
    jg     jump_2cd19
    mov    0x47(%esi),%eax
    mov    0x45(%esi),%cx
    mov    %eax,(%esp)
    movswl %cx,%eax
    mov    0x4b(%esi),%ebx
    cmp    $0x3e7,%eax
    jne    jump_2cbbb
    mov    %edi,%ecx
  jump_2cbbb:
    cmpl   $0x3e7,(%esp)
    jne    jump_2cbca
    movswl %di,%eax
    mov    %eax,(%esp)
  jump_2cbca:
    cmp    $0x3e7,%ebx
    jne    jump_2cbd5
    movswl %di,%ebx
  jump_2cbd5:
    mov    0x57(%esi),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_2cbea
    mov    $data_10914c,%eax
    call   func_4fb90
  jump_2cbea:
    cmpl   $0x0,0x63(%esi)
    jne    jump_2cc04
    mov    $data_10ae70,%eax
    movswl %cx,%edx
    mov    %ebx,%ecx
    mov    (%esp),%ebx
    call   func_56b60
    jmp    jump_2cc40
  jump_2cc04:
    movswl %cx,%eax
    cmp    $0x3e6,%eax
    jne    jump_2cc2d
    mov    -0x2(%esp),%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    sar    $0x10,%edx
    call   func_56b60
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2cc2d:
    mov    (%esp),%ecx
    push   %ebx
    mov    0x63(%esi),%edx
    mov    %eax,%ebx
    mov    $data_10ae70,%eax
    call   func_56d30
  jump_2cc40:
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2cc4c:
    cmp    0x8(%eax),%ebx
    jl     jump_2cd19
    cmp    0x10(%eax),%ebx
    jg     jump_2cd19
    cmp    0xc(%eax),%ecx
    jl     jump_2cd19
    cmp    0x14(%eax),%ecx
    jg     jump_2cd19
    cmpb   $0x30,0x4f(%esi)
    je     jump_2cc8a
    mov    $0x5,%edx
    mov    $data_10ae70,%eax
    lea    0x4f(%esi),%ebx
    xor    %ecx,%ecx
    call   func_56b60
  jump_2cc8a:
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2cc96:
    mov    $data_10ae70,%eax
    movswl %dx,%ebx
    xor    %ecx,%ecx
    mov    $0x6,%edx
    call   func_56b60
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2ccb6:
    cmp    $0xc,%dx
    je     jump_2cc4c
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2ccc5:
    cmp    $0x2,%dx
    jb     jump_2cd0f
    jbe    jump_2cad3
    cmp    $0x4,%dx
    jb     jump_2cd19
    cmp    $0x5,%dx
    jbe    jump_2cb7e
    cmpl   $0x0,0x39(%eax)
    je     jump_2cd03
    cmpl   $0x0,0x35(%eax)
    je     jump_2cd03
    cmpl   $0x0,0x3d(%eax)
    je     jump_2cd03
    mov    0xa7(%esi),%ebx
    mov    $0x2,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
  jump_2cd03:
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2cd0f:
    cmp    $0x1,%dx
    je     jump_2caa7
  jump_2cd19:
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2cd24:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x4,%esp
    mov    %eax,-0x4(%ebp)
    mov    %edx,%eax
    mov    -0x4(%ebp),%edx
    cmpl   $0x0,0x39(%edx)
    je     jump_2cf1f
    mov    data_10de72,%ecx
    cmp    0x41(%edx),%ecx
    je     jump_2cd50
    cmp    $0x3,%eax
    jne    jump_2cd71
  jump_2cd50:
    mov    -0x4(%ebp),%edx
    cmpl   $0x0,0x3d(%edx)
    je     jump_2cd71
    cmp    $0x2,%eax
    je     jump_2cd71
    mov    0xa7(%edx),%ebx
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    call   *0x10(%ebx)
    jmp    jump_2cf0e
  jump_2cd71:
    mov    -0x4(%ebp),%eax
    mov    0x1c(%eax),%eax
    mov    -0x4(%ebp),%esi
    sar    $0x10,%eax
    add    $0x4,%esi
    cmp    $0xffffffff,%eax
    je     jump_2cdaf
    push   $0x0
    push   $0x0
    push   %eax
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    mov    0x18(%eax),%ax
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_2cef4
  jump_2cdaf:
    mov    -0x4(%ebp),%eax
    mov    0x9f(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_2ceea
    push   $0xf2
    push   %esi
    mov    -0x4(%ebp),%esi
    mov    $data_10debe,%edi
    call   func_5e9d0
    lea    0x4(%esi),%esi
    mov    -0x4(%ebp),%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x59(%edx),%edx
    add    $0x8,%esp
    sar    $0x10,%edx
    xor    %eax,%eax
    cmp    $0xffffffff,%edx
    jne    jump_2cdf6
    mov    $0x2,%eax
  jump_2cdf6:
    mov    -0x4(%ebp),%edx
    mov    0x5b(%edx),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    jne    jump_2ce06
    or     $0x1,%al
  jump_2ce06:
    push   $0x0
    mov    -0x4(%ebp),%ecx
    mov    -0x4(%ebp),%ebx
    mov    -0x4(%ebp),%edx
    cwtl
    push   $0xff
    add    $0x20,%ecx
    mov    0x5b(%ebx),%ebx
    mov    0x59(%edx),%edx
    push   $0xffffffff
    sar    $0x10,%ebx
    push   %eax
    sar    $0x10,%edx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    mov    -0x4(%ebp),%eax
    cmpl   $0xffffffff,0x5f(%eax)
    jne    jump_2cef4
    push   $0xf3
    mov    -0x4(%ebp),%edx
    push   $0x0
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ebx
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    lea    0x4(%edx),%esi
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%ecx
    push   $0x0
    sub    %ecx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%edi
    push   $0x0
    sub    %edi,%eax
    push   %eax
    push   $0x0
    mov    0x8(%edx),%ebx
    push   %eax
    mov    0x10(%edx),%eax
    sub    %ebx,%eax
    push   %eax
    push   %esi
    call   func_5c001
    mov    -0x4(%ebp),%eax
    add    $0x1c,%esp
    mov    -0x4(%ebp),%edx
    mov    -0x4(%ebp),%ebx
    push   $0xf3
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ecx
    mov    0xc(%ebx),%edi
    push   $0x0
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    push   $0x0
    sub    %ecx,%edx
    mov    0x14(%eax),%eax
    push   %edx
    sub    %edi,%eax
    push   %eax
    push   %edx
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
    jmp    jump_2cef4
  jump_2ceea:
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    call   func_2d0f4
  jump_2cef4:
    mov    -0x4(%ebp),%eax
    mov    0x14(%eax),%edx
    mov    0x10(%eax),%ecx
    mov    0xc(%eax),%ebx
    push   %edx
    mov    0x8(%eax),%edx
    mov    $data_10ae70,%eax
    call   func_55274
  jump_2cf0e:
    mov    -0x4(%ebp),%eax
    cmpw   $0x0,0x6b(%eax)
    je     jump_2cf1f
    xor    %edx,%edx
    call   func_2d218
  jump_2cf1f:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2cf28:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x4,%esp
    mov    %eax,-0x4(%ebp)
    mov    0x1c(%eax),%eax
    mov    -0x4(%ebp),%esi
    sar    $0x10,%eax
    add    $0x4,%esi
    cmp    $0xffffffff,%eax
    je     jump_2cf87
    mov    data_10de82,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    mov    -0x4(%ebp),%eax
    push   $0x0
    mov    0x1c(%eax),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    mov    0x18(%eax),%ax
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5d026
    add    $0x14,%esp
    jmp    jump_2d0cf
  jump_2cf87:
    mov    -0x4(%ebp),%eax
    mov    0x9f(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_2d0c2
    push   $0x96
    push   %esi
    mov    -0x4(%ebp),%esi
    mov    $data_10debe,%edi
    call   func_5e9d0
    lea    0x4(%esi),%esi
    mov    -0x4(%ebp),%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x59(%edx),%edx
    add    $0x8,%esp
    sar    $0x10,%edx
    xor    %eax,%eax
    cmp    $0xffffffff,%edx
    jne    jump_2cfce
    mov    $0x2,%eax
  jump_2cfce:
    mov    -0x4(%ebp),%edx
    mov    0x5b(%edx),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    jne    jump_2cfde
    or     $0x1,%al
  jump_2cfde:
    push   $0x0
    mov    -0x4(%ebp),%ecx
    mov    -0x4(%ebp),%ebx
    mov    -0x4(%ebp),%edx
    cwtl
    push   $0xff
    add    $0x20,%ecx
    mov    0x5b(%ebx),%ebx
    mov    0x59(%edx),%edx
    push   $0xffffffff
    sar    $0x10,%ebx
    push   %eax
    sar    $0x10,%edx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    mov    -0x4(%ebp),%eax
    cmpl   $0xffffffff,0x5f(%eax)
    jne    jump_2d0cf
    push   $0xf3
    mov    -0x4(%ebp),%edx
    push   $0x0
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ebx
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    lea    0x4(%edx),%esi
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%ecx
    push   $0x0
    sub    %ecx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%edi
    push   $0x0
    sub    %edi,%eax
    push   %eax
    push   $0x0
    mov    0x8(%edx),%ebx
    push   %eax
    mov    0x10(%edx),%eax
    sub    %ebx,%eax
    push   %eax
    push   %esi
    call   func_5c001
    mov    -0x4(%ebp),%eax
    add    $0x1c,%esp
    mov    -0x4(%ebp),%edx
    mov    -0x4(%ebp),%ebx
    push   $0xf3
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ecx
    mov    0xc(%ebx),%edi
    push   $0x0
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    push   $0x0
    sub    %ecx,%edx
    mov    0x14(%eax),%eax
    push   %edx
    sub    %edi,%eax
    push   %eax
    push   %edx
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
    jmp    jump_2d0cf
  jump_2d0c2:
    mov    $0x1,%edx
    mov    -0x4(%ebp),%eax
    call   func_2d0f4
  jump_2d0cf:
    mov    -0x4(%ebp),%eax
    mov    0x14(%eax),%edx
    mov    0x10(%eax),%ecx
    mov    0xc(%eax),%ebx
    push   %edx
    mov    0x8(%eax),%edx
    mov    $data_10ae70,%eax
    call   func_55274
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d0f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,(%esp)
    mov    $0xf2,%eax
    test   %edx,%edx
    je     jump_2d10d
    mov    $0x96,%eax
  jump_2d10d:
    mov    (%esp),%esi
    push   %eax
    add    $0x4,%esi
    push   %esi
    call   func_5e9d0
    add    $0x8,%esp
    xor    %edx,%edx
    mov    (%esp),%eax
    mov    (%esp),%ebp
    mov    %edx,0x8(%esp)
    mov    0xa1(%eax),%bx
    add    $0x6d,%ebp
    test   %bx,%bx
    jle    jump_2d20c
    mov    %esi,0x4(%esp)
  jump_2d140:
    test   %ebp,%ebp
    jne    jump_2d159
    mov    $0x1ce,%ebx
    mov    $data_91849,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2d159:
    mov    0x0(%ebp),%al
    test   %al,%al
    jbe    jump_2d166
    cmp    $0x1,%al
    je     jump_2d1aa
    jmp    jump_2d1dc
  jump_2d166:
    mov    0x4(%esp),%esi
    mov    0x1(%ebp),%eax
    mov    $data_10debe,%edi
    call   func_2d3d0
    push   $0x0
    mov    0x9(%ebp),%ebx
    mov    0x7(%ebp),%edx
    mov    0x5(%ebp),%cx
    push   $0xff
    sar    $0x10,%ebx
    movswl %cx,%ecx
    push   $0xf3
    sar    $0x10,%edx
    push   %ecx
    mov    %eax,%ecx
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    jmp    jump_2d1ed
  jump_2d1aa:
    mov    0x9(%ebp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x7(%ebp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x5(%ebp),%edx
    push   %edx
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    0x1(%ebp),%dx
    call   func_1b084
    push   %eax
    mov    0x14(%esp),%ebx
    push   %ebx
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_2d1ed
  jump_2d1dc:
    mov    $0x1df,%ebx
    mov    $data_91858,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_2d1ed:
    mov    0x8(%esp),%ecx
    mov    (%esp),%edx
    add    $0xd,%ebp
    inc    %ecx
    mov    0xa1(%edx),%si
    mov    %ecx,0x8(%esp)
    cmp    %si,%cx
    jl     jump_2d140
  jump_2d20c:
    add    $0xc,%esp
    pop    %ebp
  jump_2d210:
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d218:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    cmpl   $0x0,0x67(%eax)
    je     jump_2d210
    xor    %ebx,%ebx
    jmp    jump_2d229
  jump_2d228:
    inc    %ebx
  jump_2d229:
    movswl %bx,%eax
    cmp    $0x14,%eax
    jge    jump_2d210
    shl    $0x2,%eax
    mov    0x67(%esi),%ecx
    add    %ecx,%eax
    mov    (%eax),%ecx
    test   %ecx,%ecx
    je     jump_2d228
    mov    0x39(%ecx),%edi
    mov    %ecx,%eax
    cmp    $0xffffffff,%edi
    jne    jump_2d228
    mov    0xa7(%ecx),%ecx
    xor    %edx,%edx
    call   *0xc(%ecx)
    jmp    jump_2d228


/*----------------------------------------------------------------*/
func_2d258:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%edi
    mov    %dx,0x8(%esp)
    mov    %ebx,(%esp)
    mov    %ecx,0x4(%esp)
    cmpl   $0x0,0x67(%eax)
    je     jump_2d2c5
    xor    %esi,%esi
    jmp    jump_2d277
  jump_2d276:
    inc    %esi
  jump_2d277:
    movswl %si,%eax
    cmp    $0x14,%eax
    jge    jump_2d2c5
    lea    0x0(,%eax,4),%edx
    mov    0x67(%edi),%eax
    add    %edx,%eax
    mov    (%eax),%ebx
    test   %ebx,%ebx
    je     jump_2d276
    cmpl   $0x0,0x35(%ebx)
    jne    jump_2d2a3
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_2d276
  jump_2d2a3:
    mov    0x67(%edi),%edx
    movswl %si,%eax
    mov    0x4(%esp),%ecx
    mov    (%edx,%eax,4),%eax
    mov    (%esp),%ebx
    mov    0x6(%esp),%edx
    mov    0xa7(%eax),%ebp
    sar    $0x10,%edx
    call   *0x8(%ebp)
    jmp    jump_2d276
  jump_2d2c5:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2d2cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x34,%esp
    mov    $data_91867,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_2d2f3
    mov    $0x214,%ebx
    mov    $data_91873,%edx
    call   func_26198
  jump_2d2f3:
    xor    %ebx,%ebx
  jump_2d2f5:
    mov    %esp,%edx
    push   %edx
    push   $data_91882
    push   %ecx
    lea    0xc(%esp),%edx
    call   func_78071
    add    $0xc,%esp
    mov    $data_12fc20,%eax
    add    $0x2,%ebx
    call   func_1adac
    mov    %ax,data_ffe9e(%ebx)
    cmp    $0x5a,%ebx
    jne    jump_2d2f5
    mov    %ecx,%eax
    call   func_7744e
    add    $0x34,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d334:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_2d351
    mov    $0x226,%ebx
    mov    $data_91885,%edx
    call   func_26198
  jump_2d351:
    mov    %esi,%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    data_100302,%eax
    sar    $0x10,%eax
    add    %ecx,%eax
    mov    %ecx,(%esp)
    cmp    $0x400,%eax
    jl     jump_2d382
    mov    $0x229,%ebx
    mov    $data_91894,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2d382:
    mov    data_100302,%edi
    sar    $0x10,%edi
    mov    (%esp),%ecx
    add    $data_fff04,%edi
    inc    %ecx
    push   %edi
  jump_2d396:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2d3ae
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2d396
  jump_2d3ae:
    pop    %edi
    mov    data_100304,%dx
    mov    data_100302,%eax
    add    %ecx,%edx
    sar    $0x10,%eax
    mov    %dx,data_100304
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d3d0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    mov    data_100302,%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jl     jump_2d3f2
    mov    $0x237,%ebx
    mov    $data_918a3,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2d3f2:
    mov    $data_fff04,%eax
    add    %ecx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d400:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    mov    %edx,%esi
    mov    0x9f(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x4,%eax
    jl     jump_2d42e
    mov    $0x241,%ebx
    mov    $data_918b2,%edx
    xor    %eax,%eax
    call   func_261a8
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_2d42e:
    mov    0xa1(%ebx),%cx
    movswl %cx,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    inc    %ecx
    add    %edx,%eax
    mov    %cx,0xa1(%ebx)
    lea    0x6d(%ebx,%eax,1),%edi
    mov    $0xffffffff,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_2d464:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_95e08,0xa7(%eax)
    call   func_2d4c4
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2d480:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2d49f
    mov    $data_95d68,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2d49f:
    mov    $0x1,%edx
    movl   $data_95e08,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2d4bf
    call   func_76d64
  jump_2d4bf:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d4c4:
/*----------------------------------------------------------------*/
    movl   $0x0,0xab(%eax)
    ret


/*----------------------------------------------------------------*/
func_2d4d0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    cmp    $0x4,%dx
    jb     jump_2d4e3
    cmp    $0x5,%dx
    jbe    jump_2d4f1
  jump_2d4e3:
    movswl %di,%edx
    mov    %esi,%eax
    call   func_2f424
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2d4f1:
    cmp    0x8(%eax),%ebx
    jl     jump_2d4e3
    cmp    0x10(%eax),%ebx
    jg     jump_2d4e3
    cmp    0xc(%eax),%ecx
    jl     jump_2d4e3
    cmp    0x14(%esi),%ecx
    jg     jump_2d4e3
    notl   0xab(%esi)
    mov    0xa7(%esi),%ebp
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0x10(%ebp)
    movswl %di,%edx
    mov    %esi,%eax
    call   func_2f424
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2d528:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x4,%esp
    mov    %eax,-0x4(%ebp)
    mov    %edx,%eax
    mov    -0x4(%ebp),%edx
    cmpl   $0x0,0x39(%edx)
    je     jump_2d792
    mov    data_10de72,%ecx
    cmp    0x41(%edx),%ecx
    je     jump_2d554
    cmp    $0x3,%eax
    jne    jump_2d575
  jump_2d554:
    mov    -0x4(%ebp),%edx
    cmpl   $0x0,0x3d(%edx)
    je     jump_2d575
    cmp    $0x2,%eax
    je     jump_2d575
    mov    0xa7(%edx),%ebx
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    call   *0x10(%ebx)
    jmp    jump_2d781
  jump_2d575:
    mov    -0x4(%ebp),%eax
    mov    0x1c(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_2d616
    mov    -0x4(%ebp),%edx
    mov    -0x4(%ebp),%esi
    mov    0xab(%edx),%ebx
    add    $0x4,%esi
    cmp    $0xffffffff,%ebx
    jne    jump_2d5ef
    mov    data_10de82,%eax
    push   %eax
    movb   $0x50,0xf2(%eax)
    call   func_5d007
    add    $0x4,%esp
    mov    -0x4(%ebp),%eax
    push   $0x0
    mov    0x1c(%eax),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    mov    0x18(%eax),%ax
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5d026
    mov    data_10de82,%eax
    add    $0x14,%esp
    movb   $0x96,0xf2(%eax)
    jmp    jump_2d767
  jump_2d5ef:
    push   $0x0
    push   $0x0
    push   %eax
    mov    0x18(%edx),%ax
    xor    %edx,%edx
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_2d767
  jump_2d616:
    mov    -0x4(%ebp),%edx
    mov    0xab(%edx),%edi
    mov    $0xf2,%eax
    cmp    $0xffffffff,%edi
    jne    jump_2d62e
    mov    $0x50,%eax
  jump_2d62e:
    push   %eax
    mov    -0x4(%ebp),%eax
    add    $0x4,%eax
    push   %eax
    mov    -0x4(%ebp),%esi
    mov    $data_10debe,%edi
    call   func_5e9d0
    lea    0x4(%esi),%esi
    mov    -0x4(%ebp),%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x59(%eax),%eax
    sar    $0x10,%eax
    add    $0x8,%esp
    cmp    $0xffffffff,%eax
    jne    jump_2d685
    mov    -0x4(%ebp),%eax
    mov    0x5b(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_2d685
    push   $0x0
    push   $0xff
    mov    -0x4(%ebp),%ecx
    push   %eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    push   $0x3
    add    $0x20,%ecx
    mov    $data_10deb6,%eax
    jmp    jump_2d6ad
  jump_2d685:
    push   $0x0
    mov    -0x4(%ebp),%ecx
    mov    -0x4(%ebp),%ebx
    mov    -0x4(%ebp),%edx
    mov    $data_10deb6,%eax
    push   $0xff
    add    $0x20,%ecx
    mov    0x5b(%ebx),%ebx
    mov    0x59(%edx),%edx
    push   $0xffffffff
    sar    $0x10,%ebx
    push   $0x0
    sar    $0x10,%edx
  jump_2d6ad:
    call   func_2b8a8
    mov    -0x4(%ebp),%eax
    cmpl   $0xffffffff,0x5f(%eax)
    jne    jump_2d767
    push   $0xf3
    mov    -0x4(%ebp),%edx
    push   $0x0
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ebx
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    lea    0x4(%edx),%esi
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%ecx
    push   $0x0
    sub    %ecx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%edi
    push   $0x0
    sub    %edi,%eax
    push   %eax
    push   $0x0
    mov    0x8(%edx),%ebx
    push   %eax
    mov    0x10(%edx),%eax
    sub    %ebx,%eax
    push   %eax
    push   %esi
    call   func_5c001
    mov    -0x4(%ebp),%eax
    add    $0x1c,%esp
    mov    -0x4(%ebp),%edx
    mov    -0x4(%ebp),%ebx
    push   $0xf3
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ecx
    mov    0xc(%ebx),%edi
    push   $0x0
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    push   $0x0
    sub    %ecx,%edx
    mov    0x14(%eax),%eax
    push   %edx
    sub    %edi,%eax
    push   %eax
    push   %edx
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
  jump_2d767:
    mov    -0x4(%ebp),%eax
    mov    0x14(%eax),%esi
    mov    0x10(%eax),%ecx
    mov    0xc(%eax),%ebx
    push   %esi
    mov    0x8(%eax),%edx
    mov    $data_10ae70,%eax
    call   func_55274
  jump_2d781:
    mov    -0x4(%ebp),%eax
    cmpw   $0x0,0x6b(%eax)
    je     jump_2d792
    xor    %edx,%edx
    call   func_2d218
  jump_2d792:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d79c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x8,%esp
    mov    %eax,-0x4(%ebp)
    mov    0x1c(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_2d861
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%esi
    mov    0xab(%eax),%edi
    add    $0x4,%esi
    cmp    $0xffffffff,%edi
    jne    jump_2d820
    mov    data_10de82,%eax
    push   %eax
    movb   $0xca,0xf2(%eax)
    call   func_5d007
    add    $0x4,%esp
    mov    -0x4(%ebp),%eax
    push   $0x0
    mov    0x1c(%eax),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    mov    0x18(%eax),%ax
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5d026
    mov    data_10de82,%eax
    add    $0x14,%esp
    movb   $0x96,0xf2(%eax)
    jmp    jump_2d979
  jump_2d820:
    mov    data_10de82,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    mov    -0x4(%ebp),%eax
    push   $0x0
    mov    0x1c(%eax),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    mov    0x18(%eax),%ax
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5d026
    add    $0x14,%esp
    jmp    jump_2d979
  jump_2d861:
    mov    -0x4(%ebp),%edx
    mov    0xab(%edx),%ebx
    mov    $0x96,%eax
    cmp    $0xffffffff,%ebx
    jne    jump_2d879
    mov    $0xca,%eax
  jump_2d879:
    push   %eax
    mov    -0x4(%ebp),%eax
    add    $0x4,%eax
    push   %eax
    mov    %eax,-0x8(%ebp)
    call   func_5e9d0
    add    $0x8,%esp
    mov    -0x4(%ebp),%esi
    mov    $data_10debe,%edi
    push   $0x0
    mov    -0x4(%ebp),%ecx
    mov    $data_10deb6,%eax
    push   $0xff
    lea    0x4(%esi),%esi
    xor    %ebx,%ebx
    push   $0xffffffff
    xor    %edx,%edx
    add    $0x20,%ecx
    push   $0x3
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    -0x4(%ebp),%eax
    cmpl   $0xffffffff,0x5f(%eax)
    jne    jump_2d979
    push   $0xf3
    mov    -0x4(%ebp),%edx
    push   $0x0
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%edi
    push   $0x0
    sub    %edi,%eax
    push   %eax
    push   $0x0
    push   $0x0
    mov    -0x8(%ebp),%eax
    push   %eax
    call   func_5c001
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%ebx
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    mov    -0x8(%ebp),%ecx
    push   %ecx
    call   func_5c001
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%esi
    push   $0x0
    sub    %esi,%eax
    push   %eax
    push   $0x0
    mov    0x8(%edx),%edi
    push   %eax
    mov    0x10(%edx),%eax
    sub    %edi,%eax
    push   %eax
    mov    -0x8(%ebp),%eax
    push   %eax
    call   func_5c001
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ebx
    push   $0x0
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    sub    %ebx,%edx
    mov    -0x4(%ebp),%ebx
    push   $0x0
    mov    0x14(%eax),%eax
    mov    0xc(%ebx),%ecx
    push   %edx
    sub    %ecx,%eax
    push   %eax
    push   %edx
    mov    -0x8(%ebp),%esi
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
  jump_2d979:
    mov    -0x4(%ebp),%eax
    mov    0x14(%eax),%ebx
    mov    0x10(%eax),%ecx
    mov    0x8(%eax),%edx
    push   %ebx
    mov    0xc(%eax),%ebx
    mov    $data_10ae70,%eax
    call   func_55274
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d99c:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    mov    %edx,%eax
    lea    0xab(%ecx),%edx
    cmp    $0xffffffff,%ebx
    jne    jump_2d9b8
    mov    $0x4,%ebx
    call   func_1bf94
    pop    %ecx
    ret
  jump_2d9b8:
    mov    $0x4,%ebx
    call   func_1c098
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2d9c4:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    movl   $data_95df0,0xa7(%eax)
    movl   $0x0,0xab(%eax)
    movw   $0x0,0xaf(%eax)
    mov    %eax,%edx
    movw   $0xffff,0xb1(%eax)
    call   func_2da60
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2d9fc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2da1b
    mov    $data_95d54,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2da1b:
    mov    0xab(%eax),%edx
    movl   $data_95df0,0xa7(%eax)
    test   %edx,%edx
    je     jump_2da40
    mov    %edx,%eax
    call   func_262cc
    movl   $0x0,0xab(%ebx)
  jump_2da40:
    mov    $0x1,%edx
    mov    %ebx,%eax
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2da58
    call   func_76d64
  jump_2da58:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2da60:
/*----------------------------------------------------------------*/
    movw   $0x7,0x59(%eax)
    ret


/*----------------------------------------------------------------*/
func_2da68:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_571b8
    mov    %eax,0x41(%ebx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2da80:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    movswl %dx,%eax
    test   %eax,%eax
    jg     jump_2da96
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_2da96:
    mov    $data_918c1,%ecx
    mov    $0x1,%ebx
    movswl %dx,%eax
    mov    $0xe,%edx
    call   func_262b0
    mov    %eax,0xab(%esi)
    test   %eax,%eax
    je     jump_2dac3
    mov    $0xffffffff,%eax
    mov    %di,0xaf(%esi)
  jump_2dac3:
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2dac8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,(%esp)
    mov    %ecx,%ebp
    xor    %eax,%eax
    xor    %edx,%edx
    jmp    jump_2dae1
  jump_2dadd:
    add    $0xe,%edx
    inc    %eax
  jump_2dae1:
    mov    0xad(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_2dafa
    mov    0xab(%esi),%ebx
    cmp    (%edx,%ebx,1),%di
    jne    jump_2dadd
  jump_2dafa:
    mov    0xad(%esi),%edx
    sar    $0x10,%edx
    cmp    %edx,%eax
    jge    jump_2db4b
    mov    %eax,%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    test   %ebp,%ebp
    je     jump_2db35
    mov    $0xe,%ecx
    mov    0xab(%esi),%edi
    mov    %ebp,%esi
    add    %eax,%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    jmp    jump_2db44
  jump_2db35:
    mov    0xab(%esi),%edx
    add    %edx,%eax
    mov    (%esp),%edx
    mov    %dx,0xa(%eax)
  jump_2db44:
    mov    $0xffffffff,%eax
    jmp    jump_2db4d
  jump_2db4b:
    xor    %eax,%eax
  jump_2db4d:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2db54:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %edx,%esi
    mov    %bx,(%esp)
    movswl %dx,%edx
    mov    0x8(%eax),%ebx
    mov    0x10(%eax),%ecx
    mov    0xc(%eax),%edi
    mov    0x14(%eax),%ebp
    add    %edx,%ebx
    add    %edx,%ecx
    mov    -0x2(%esp),%edx
    mov    %ebx,0x8(%eax)
    sar    $0x10,%edx
    mov    %ecx,0x10(%eax)
    add    %edx,%edi
    xor    %ebx,%ebx
    mov    %edi,0xc(%eax)
    add    %edx,%ebp
    mov    0xaf(%eax),%dx
    mov    %ebp,0x14(%eax)
    test   %dx,%dx
    jle    jump_2dbdb
  jump_2db99:
    movswl %bx,%edx
    imul   $0xe,%edx,%edx
    mov    0xab(%eax),%ecx
    add    %si,0x2(%ecx,%edx,1)
    mov    0xab(%eax),%ecx
    add    %si,0x4(%ecx,%edx,1)
    mov    0xab(%eax),%ecx
    mov    (%esp),%edi
    add    %di,0x6(%ecx,%edx,1)
    mov    0xab(%eax),%ecx
    add    %ecx,%edx
    mov    %edi,%ecx
    add    %cx,0x8(%edx)
    inc    %ebx
    cmp    0xaf(%eax),%bx
    jl     jump_2db99
  jump_2dbdb:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2dbe4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    %edx,%ecx
    mov    0xaf(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_2dc3c
    mov    %eax,%esi
    shl    $0x3,%eax
    sub    %esi,%eax
    lea    (%eax,%eax,1),%esi
    mov    0xab(%edi),%eax
    add    %esi,%eax
    mov    0x2(%eax),%esi
    sar    $0x10,%esi
    cmp    %esi,%edx
    jg     jump_2dc3c
    mov    (%eax),%esi
    sar    $0x10,%esi
    cmp    %esi,%edx
    jl     jump_2dc3c
    mov    0x6(%eax),%esi
    sar    $0x10,%esi
    cmp    %esi,%ebx
    jg     jump_2dc3c
    mov    0x4(%eax),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jl     jump_2dc3c
    mov    0xb1(%edi),%dx
    jmp    jump_2dc99
  jump_2dc3c:
    mov    0xaf(%edi),%si
    xor    %edx,%edx
    test   %si,%si
    jg     jump_2dc58
    jmp    jump_2dc94
  jump_2dc4c:
    inc    %edx
    cmp    0xaf(%edi),%dx
    jl     jump_2dc5e
    jmp    jump_2dc94
  jump_2dc58:
    mov    0xab(%edi),%ebp
  jump_2dc5e:
    movswl %dx,%eax
    imul   $0xe,%eax,%eax
    add    %ebp,%eax
    mov    0x2(%eax),%esi
    sar    $0x10,%esi
    cmp    %esi,%ecx
    jg     jump_2dc4c
    mov    (%eax),%esi
    sar    $0x10,%esi
    cmp    %esi,%ecx
    jl     jump_2dc4c
    mov    0x6(%eax),%esi
    sar    $0x10,%esi
    cmp    %esi,%ebx
    jg     jump_2dc4c
    mov    0x4(%eax),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jl     jump_2dc4c
    mov    %edx,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2dc94:
    mov    $0xffffffff,%edx
  jump_2dc99:
    mov    %edx,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2dca0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    cmp    0xb1(%eax),%si
    je     jump_2dd26
    cmp    0xaf(%eax),%si
    jl     jump_2dcce
    mov    $0x396,%ebx
    mov    $data_918ca,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2dcce:
    mov    0xaf(%ecx),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_2dcf0
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    0xab(%ecx),%edx
    andb   $0xfd,0xa(%edx,%eax,2)
  jump_2dcf0:
    movswl %si,%edx
    cmp    $0xffffffff,%edx
    je     jump_2dd1f
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    0xab(%ecx),%edx
    add    %eax,%eax
    add    %edx,%eax
    mov    0xa(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_2dd1f
    orb    $0x2,0xa(%eax)
  jump_2dd1f:
    mov    %si,0xb1(%ecx)
  jump_2dd26:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2dd70:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    mov    data_a3cf4,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_2ddb3
  jump_2dd84:
    movswl %ax,%edx
    imul   $0x1ee,%edx,%ebx
    mov    data_a2f74(%ebx),%bl
    imul   $0xe,%edx,%ecx
    xor    %bh,%bh
    imul   $0x5,%ebx,%ebx
    mov    0xab(%esi),%edx
    add    $0x14,%ebx
    mov    %bx,0xc(%ecx,%edx,1)
    inc    %eax
    cmp    data_a3cf4,%ax
    jl     jump_2dd84
  jump_2ddb3:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ddb8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    cmp    0xaf(%eax),%cx
    jl     jump_2ddd9
    mov    $0x3cd,%ebx
    mov    $data_918d9,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2ddd9:
    movswl %cx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_2ddf2
    mov    $0x3ce,%ebx
    mov    $data_918e8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2ddf2:
    movswl %cx,%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    lea    (%eax,%eax,1),%edx
    mov    0xab(%esi),%eax
    add    %edx,%eax
    mov    0xa(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    movswl %dx,%edx
    test   %edx,%edx
    jne    jump_2de1f
    xor    %eax,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_2de1f:
    mov    0xa(%eax),%dx
    xor    %dh,%dh
    and    $0x4,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_2de35
    andb   $0xfb,0xa(%eax)
    jmp    jump_2de39
  jump_2de35:
    orb    $0x4,0xa(%eax)
  jump_2de39:
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret

vtable_2de44:
    .long   func_2de92
    .long   func_2deaf
    .long   func_2e048
    .long   func_2df3a
    .long   func_2df3a
    .long   func_2dee9
    .long   func_2dec3
    .long   func_2df06
    .long   func_2dfe6


/*----------------------------------------------------------------*/
func_2de68:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %dx,(%esp)
    mov    %ecx,%edi
    mov    %ebx,%edx
    mov    (%esp),%eax
    dec    %eax
    cmp    $0x8,%ax
    ja     func_2e048
    and    $0xffff,%eax
    jmp    *%cs:vtable_2de44(,%eax,4)


/*----------------------------------------------------------------*/
func_2de92:
/*----------------------------------------------------------------*/
    mov    %esi,%eax
    mov    -0x2(%esp),%edx
    call   func_2dd70
    sar    $0x10,%edx
    mov    %esi,%eax
    call   func_2f424
  jump_2dea7:
    xor    %eax,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2deaf:
/*----------------------------------------------------------------*/
    mov    -0x2(%esp),%edx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2f424
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2dec3:
/*----------------------------------------------------------------*/
    push   $0x0
    mov    $0x8,%ecx
    mov    $0x4,%ebx
    push   $0x0
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_56728
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2dee9:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_567bc
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2df06:
/*----------------------------------------------------------------*/
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_2dbe4
    cmp    0xb1(%esi),%ax
    je     jump_2df2f
    movswl %ax,%edx
    mov    %esi,%eax
    call   func_2dca0
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_2df2f:
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2df3a:
/*----------------------------------------------------------------*/
    cmp    0x8(%esi),%edx
    jl     jump_2dea7
    cmp    0x10(%esi),%edx
    jg     jump_2dea7
    cmp    0xc(%esi),%edi
    jl     jump_2dea7
    cmp    0x14(%esi),%edi
    jg     jump_2dea7
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_2dbe4
    mov    %eax,%ebx
    cwtl
    cmp    $0xffffffff,%eax
    je     jump_2dfdb
    mov    0x57(%esi),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_2df84
    mov    $data_10914c,%eax
    call   func_4fb90
  jump_2df84:
    movswl %bx,%edi
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_2dca0
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_2ddb8
    mov    %eax,%ebx
    mov    0xa7(%esi),%ecx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ecx)
    cmp    $0xffffffff,%ebx
    jne    jump_2dfdb
    cmpl   $0x0,0x63(%esi)
    je     jump_2dfdb
    push   $0x0
    lea    0x0(,%edi,8),%eax
    mov    0xab(%esi),%edx
    mov    0x43(%esi),%ebx
    sub    %edi,%eax
    sar    $0x10,%ebx
    movswl (%edx,%eax,2),%ecx
    mov    $data_10ae70,%eax
    mov    0x63(%esi),%edx
    call   func_56d30
  jump_2dfdb:
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2dfe6:
/*----------------------------------------------------------------*/
    cmp    $0xffffffff,%ebx
    je     jump_2dffb
    movswl %bx,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    mov    %edi,%ebx
    call   func_2dac8
    jmp    jump_2e03d
  jump_2dffb:
    xor    %ebx,%edx
    mov    0xaf(%esi),%bx
    mov    %dx,0x4(%esp)
    test   %bx,%bx
    jle    jump_2e03d
  jump_2e00e:
    mov    0x4(%esp),%cl
    mov    $0x1,%edx
    mov    %edi,%ebx
    shl    %cl,%edx
    mov    %esi,%eax
    movswl %dx,%edx
    xor    %ecx,%ecx
    call   func_2dac8
    mov    0x4(%esp),%eax
    inc    %eax
    mov    0xaf(%esi),%dx
    mov    %ax,0x4(%esp)
    cmp    %dx,%ax
    jl     jump_2e00e
  jump_2e03d:
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2e048:
/*----------------------------------------------------------------*/
    mov    -0x2(%esp),%eax
    mov    %edi,%ecx
    sar    $0x10,%eax
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_2f424
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret

vtable_2e064:
    .long   func_2e121
    .long   func_2e11d
    .long   func_2e128
    .long   func_2e116
    .long   func_2e128
    .long   func_2e10f
    .long   func_2e128
    .long   func_2e108


/*----------------------------------------------------------------*/
func_2e084:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    mov    %eax,%edi
    push   $0x0
    mov    0x1c(%eax),%eax
    push   $0x0
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x18(%edi),%ax
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    %edi,%eax
    add    $0x4,%eax
    push   %eax
    mov    %eax,-0x8(%ebp)
    call   func_5cb3c
    add    $0x14,%esp
    xor    %edx,%edx
    mov    0xaf(%edi),%bx
    mov    %dx,-0x4(%ebp)
    test   %bx,%bx
    jle    jump_2e194
    mov    -0x8(%ebp),%eax
    mov    %eax,-0xc(%ebp)
  jump_2e0dc:
    mov    -0x6(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xe,%eax,%eax
    mov    0xab(%edi),%ecx
    add    %eax,%ecx
    mov    0xa(%ecx),%ax
    cmp    $0x7,%ax
    ja     func_2e128
    and    $0xffff,%eax
    jmp    *%cs:vtable_2e064(,%eax,4)


/*----------------------------------------------------------------*/
func_2e108:
/*----------------------------------------------------------------*/
    mov    $0x3,%esi
    jmp    jump_2e139


/*----------------------------------------------------------------*/
func_2e10f:
/*----------------------------------------------------------------*/
    mov    $0x2,%esi
    jmp    jump_2e139


/*----------------------------------------------------------------*/
func_2e116:
/*----------------------------------------------------------------*/
    mov    $0x1,%esi
    jmp    jump_2e139


/*----------------------------------------------------------------*/
func_2e11d:
/*----------------------------------------------------------------*/
    xor    %esi,%esi
    jmp    jump_2e139


/*----------------------------------------------------------------*/
func_2e121:
/*----------------------------------------------------------------*/
    mov    $0x4,%esi
    jmp    jump_2e139


/*----------------------------------------------------------------*/
func_2e128:
/*----------------------------------------------------------------*/
    mov    $0x48a,%ebx
    mov    $data_918f7,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_2e139:
    mov    0x4(%ecx),%eax
    mov    0xc(%edi),%ebx
    sar    $0x10,%eax
    sub    %ebx,%eax
    push   %eax
    mov    (%ecx),%eax
    mov    0x8(%edi),%edx
    sar    $0x10,%eax
    sub    %edx,%eax
    mov    0xa(%ecx),%edx
    push   %eax
    sar    $0x10,%edx
    movswl %si,%eax
    add    %edx,%eax
    push   %eax
    xor    %edx,%edx
    mov    0x18(%edi),%ax
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    -0xc(%ebp),%ebx
    push   %ebx
    call   func_5cb3c
    mov    -0x4(%ebp),%ecx
    add    $0x14,%esp
    inc    %ecx
    mov    0xaf(%edi),%dx
    mov    %cx,-0x4(%ebp)
    cmp    %dx,%cx
    jl     jump_2e0dc
  jump_2e194:
    mov    $data_10ae70,%eax
    mov    0x14(%edi),%ecx
    mov    0xc(%edi),%ebx
    push   %ecx
    mov    0x8(%edi),%edx
    mov    0x10(%edi),%ecx
    call   func_55274
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e1b4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    cmp    $0xffffffff,%ebx
    jne    jump_2e1e3
    mov    0xad(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,8),%ebx
    sub    %edx,%ebx
    mov    0xab(%eax),%edx
    add    %ebx,%ebx
    mov    %esi,%eax
    call   func_1bf94
    pop    %esi
    pop    %ecx
    ret
  jump_2e1e3:
    mov    0xad(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,8),%ebx
    sub    %edx,%ebx
    mov    0xab(%eax),%edx
    add    %ebx,%ebx
    mov    %esi,%eax
    call   func_1c098
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2e208:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    $0xf2,%ebx
    cmp    $0xffffffff,%ecx
    jne    jump_2e219
    mov    $0x96,%ebx
  jump_2e219:
    push   $0x0
    mov    %eax,%esi
    movswl %bx,%eax
    mov    $data_10debe,%edi
    push   %eax
    mov    %edx,%ecx
    mov    $0x1,%ebx
    push   $0xffffffff
    mov    $data_10deb6,%eax
    mov    %ebx,%edx
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2e248:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_95dd8,0xa7(%eax)
    call   func_2e2b8
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2e264:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2e283
    mov    $data_95d40,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2e283:
    movl   $data_95dd8,0xa7(%eax)
    call   func_2ed4c
    mov    %ebx,%eax
    mov    $0x1,%edx
    call   func_2f2b4
    mov    %ebx,%eax
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2e2b1
    call   func_76d64
  jump_2e2b1:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e2b8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    call   func_2c8e4
    movl   $0x0,0xab(%ecx)
    movl   $0x0,0xaf(%ecx)
    movl   $0x0,0xb3(%ecx)
    movl   $0x0,0xb7(%ecx)
    movl   $0x0,0xbb(%ecx)
    mov    $0x800,%ebx
    movb   $0x31,0xc4(%ecx)
    lea    0xc7(%ecx),%eax
    movb   $0xf2,0xc5(%ecx)
    xor    %edx,%edx
    movb   $0x0,0xc6(%ecx)
    call   func_76ec0
    mov    $data_91906,%edx
    mov    $data_10deb6,%eax
    movw   $0x0,0x8c7(%ecx)
    call   func_2b594
    movw   $0x0,0x8cb(%ecx)
    movw   $0x0,0x8cd(%ecx)
    movw   $0xffff,0x8cf(%ecx)
    movb   $0x0,0x8e5(%ecx)
    movl   $0x0,0x8e6(%ecx)
    movl   $0x0,0x8ea(%ecx)
    movl   $0x0,0x8ee(%ecx)
    add    $0x3,%eax
    movl   $0x0,0x8f2(%ecx)
    mov    $func_2e208,%edx
    mov    %ax,0x8c9(%ecx)
    mov    %ecx,%eax
    movl   $0x0,0x8f6(%ecx)
    call   func_2f1c8
    mov    data_ffee8,%ax
    mov    $0x1,%edx
    mov    %ax,0x18(%ecx)
    mov    %ecx,%eax
    call   func_2e9cc
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e3bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_571b8
    mov    %eax,0x41(%ebx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e3d4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    mov    %ecx,%ebx
    cmp    $0x8,%dx
    jb     jump_2e64a
    jbe    jump_2e490
    cmp    $0x191,%dx
    jb     jump_2e62e
    jbe    jump_2e523
    cmp    $0x192,%dx
    jbe    jump_2e597
    cmp    $0x193,%dx
    je     jump_2e4f6
    movswl %di,%edx
    mov    %ebx,%ecx
    mov    %esi,%eax
    mov    %ebp,%ebx
    call   func_2f424
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2e428:
    mov    0xc0(%eax),%edx
    sar    $0x18,%edx
    mov    %ebp,%ebx
    call   func_2e9cc
    movswl %di,%edx
    mov    %esi,%eax
    call   func_2f424
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2e446:
    mov    $0xffffffff,%ebx
    mov    0x41(%eax),%edx
    mov    $data_10ae70,%eax
    call   func_567bc
    mov    $0xffffffff,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_564c0
    movw   $0xffff,0x8cf(%esi)
    mov    %esi,%eax
    mov    0xa7(%esi),%ebx
    movb   $0x0,0x8e5(%esi)
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2e490:
    mov    %ebp,%edx
    call   func_2edc8
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2e4a0:
    cmp    0x8(%esi),%ebp
    jl     jump_2e6b7
    cmp    0x10(%esi),%ebp
    jg     jump_2e6b7
    cmp    0xc(%esi),%ebx
    jl     jump_2e6b7
    cmp    0x14(%esi),%ebx
    jg     jump_2e6b7
    movswl %di,%edx
    cmp    $0xc,%edx
    jne    jump_2e4e1
    cmpb   $0x30,0x4f(%esi)
    je     jump_2e4e1
    mov    %ebx,%ecx
    mov    %esi,%eax
    mov    %ebp,%ebx
    call   func_2f424
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2e4e1:
    movswl %di,%ecx
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_2f090
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2e4f6:
    mov    $0x193,%ebx
    mov    0x41(%eax),%edx
    mov    $data_10ae70,%eax
    call   func_567bc
    mov    $0xffffffff,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_564c0
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2e523:
    movswl %dx,%ebx
    mov    0x41(%eax),%edx
    mov    $data_10ae70,%eax
    call   func_56528
    cmp    $0xffff,%eax
    je     jump_2e56a
    lea    0x0(,%eax,2),%edx
    mov    $0x3,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    lea    -0x1(%eax),%edx
    test   %edx,%edx
    jge    jump_2e556
    xor    %edx,%edx
  jump_2e556:
    movswl %di,%ebx
    mov    0x41(%esi),%eax
    mov    %edx,%ecx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_56564
  jump_2e56a:
    xor    %eax,%eax
    mov    0x8cd(%esi),%ax
    test   %eax,%eax
    je     jump_2e58e
    mov    %eax,%ebx
    dec    %ebx
    mov    %bx,0x8cd(%esi)
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
  jump_2e58e:
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2e597:
    movswl %dx,%ebx
    mov    0x41(%eax),%edx
    mov    $data_10ae70,%eax
    call   func_56528
    cmp    $0xffff,%eax
    je     jump_2e5de
    lea    0x0(,%eax,2),%edx
    mov    $0x3,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    lea    -0x1(%eax),%edx
    test   %edx,%edx
    jge    jump_2e5ca
    xor    %edx,%edx
  jump_2e5ca:
    movswl %di,%ebx
    mov    0x41(%esi),%eax
    mov    %edx,%ecx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_56564
  jump_2e5de:
    mov    0x14(%esi),%edx
    mov    0xc(%esi),%ebx
    sub    %ebx,%edx
    mov    %edx,%eax
    xor    %ebx,%ebx
    sar    $0x1f,%edx
    mov    0x8c9(%esi),%bx
    idiv   %ebx
    xor    %edx,%edx
    mov    0x8c7(%esi),%dx
    sub    %eax,%edx
    mov    %edx,%eax
    xor    %edx,%edx
    mov    0x8cd(%esi),%dx
    cmp    %eax,%edx
    jge    jump_2e625
    inc    %edx
    mov    %esi,%eax
    mov    0xa7(%esi),%ebx
    mov    %dx,0x8cd(%esi)
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_2e625:
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2e62e:
    cmp    $0xc,%dx
    je     jump_2e4a0
    movswl %di,%edx
    mov    %ebx,%ecx
    mov    %esi,%eax
    mov    %ebp,%ebx
    call   func_2f424
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2e64a:
    cmp    $0x4,%dx
    jb     jump_2e69b
    cmp    $0x5,%dx
    jbe    jump_2e4a0
    cmp    $0x6,%dx
    jbe    jump_2e446
    push   $0x0
    mov    $0x8,%ecx
    mov    $0x4,%ebx
    push   $0x0
    mov    0x41(%eax),%edx
    mov    $data_10ae70,%eax
    call   func_56728
    mov    data_d864c,%ebx
    mov    data_d8648,%edx
    mov    %esi,%eax
    call   func_2edc8
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2e69b:
    cmp    $0x1,%dx
    je     jump_2e428
    movswl %di,%edx
    mov    %ebx,%ecx
    mov    %esi,%eax
    mov    %ebp,%ebx
    call   func_2f424
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2e6b7:
    xor    %eax,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2e6c0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%esi
    xor    %eax,%eax
    mov    0xc5(%esi),%al
    push   %eax
    lea    0x4(%esi),%ebp
    push   %ebp
    call   func_5e9d0
    mov    0x10(%esi),%eax
    mov    0x8(%esi),%edx
    add    $0x8,%esp
    sub    %edx,%eax
    mov    %eax,0x14(%esp)
    xor    %eax,%eax
    mov    0xc4(%esi),%al
    push   %eax
    push   $0x0
    push   $0x0
    mov    0x20(%esp),%ecx
    push   %ecx
    push   $0x0
    push   $0x0
    mov    0x14(%esi),%edi
    mov    0xc(%esi),%ebx
    push   %ebp
    sub    %ebx,%edi
    call   func_5c001
    xor    %eax,%eax
    add    $0x1c,%esp
    mov    0xc4(%esi),%al
    push   %eax
    push   $0x0
    push   %edi
    push   $0x0
    push   $0x0
    push   $0x0
    push   %ebp
    call   func_5c001
    xor    %eax,%eax
    add    $0x1c,%esp
    mov    0xc4(%esi),%al
    push   %eax
    push   $0x0
    push   $0x0
    mov    0x20(%esp),%eax
    push   %eax
    push   %edi
    push   %eax
    push   %ebp
    call   func_5c001
    xor    %eax,%eax
    add    $0x1c,%esp
    mov    0xc4(%esi),%al
    push   %eax
    push   $0x0
    push   %edi
    push   $0x0
    push   %edi
    mov    0x28(%esp),%ebx
    push   %ebx
    push   %ebp
    call   func_5c001
    mov    0xb3(%esi),%ecx
    add    $0x1c,%esp
    cmp    $0xffffffff,%ecx
    jne    jump_2e77b
    mov    %esi,%eax
    xor    %edx,%edx
    call   func_2e868
  jump_2e77b:
    mov    0x8(%esi),%eax
    inc    %eax
    mov    %eax,0x4(%esp)
    mov    0xc(%esi),%eax
    inc    %eax
    mov    %eax,0x8(%esp)
    mov    0x4(%esi),%eax
    mov    %eax,(%esp)
    mov    0x10(%esi),%eax
    dec    %eax
    mov    %eax,0xc(%esp)
    cmpl   $0xffffffff,0xb3(%esi)
    jne    jump_2e7b2
    mov    0xc(%esp),%ebp
    mov    0xbf(%esi),%eax
    sub    %eax,%ebp
    mov    %ebp,0xc(%esp)
  jump_2e7b2:
    lea    0xc7(%esi),%eax
    mov    0x8cd(%esi),%di
    xor    %ebp,%ebp
    mov    %eax,0x18(%esp)
    jmp    jump_2e81c
  jump_2e7c7:
    mov    0x8c9(%esi),%ax
  jump_2e7ce:
    mov    0x8(%esp),%edx
    and    $0xffff,%eax
    add    %edx,%eax
    dec    %eax
    mov    %eax,0x10(%esp)
    mov    0x14(%esi),%ecx
    cmp    %ecx,%eax
    jl     jump_2e7f1
    lea    -0x1(%ecx),%eax
    mov    $0xffffffff,%ebp
    mov    %eax,0x10(%esp)
  jump_2e7f1:
    mov    0x8cf(%esi),%dx
    xor    %ecx,%ecx
    cmp    %dx,%di
    setne  %al
    mov    %al,%cl
    mov    (%ebx),%edx
    mov    0x4(%ebx),%eax
    dec    %ecx
    mov    %eax,%ebx
    mov    %esp,%eax
    call   *0x8fa(%esi)
    mov    0x10(%esp),%eax
    inc    %eax
    inc    %edi
    mov    %eax,0x8(%esp)
  jump_2e81c:
    xor    %edx,%edx
    movswl %di,%eax
    mov    0x8c7(%esi),%dx
    cmp    %edx,%eax
    jge    jump_2e852
    test   %ebp,%ebp
    jne    jump_2e852
    mov    0x18(%esp),%ebx
    shl    $0x3,%eax
    add    %eax,%ebx
    cmpl   $0x0,0x8f6(%esi)
    je     jump_2e7c7
    mov    0x4(%ebx),%edx
    mov    (%ebx),%eax
    call   *0x8f6(%esi)
    jmp    jump_2e7ce
  jump_2e852:
    mov    $data_10ae70,%eax
    lea    0x4(%esi),%edx
    call   func_552cc
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e868:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x28,%esp
    mov    %eax,%esi
    mov    %edx,-0xc(%ebp)
    mov    0x10(%eax),%edi
    mov    0x8(%eax),%edx
    mov    0xbf(%eax),%ebx
    mov    0xc(%esi),%ecx
    mov    0x14(%eax),%eax
    sub    %ecx,%eax
    mov    %eax,-0x4(%ebp)
    xor    %eax,%eax
    mov    0xc4(%esi),%al
    push   %eax
    push   $0x0
    mov    -0x4(%ebp),%eax
    sub    %edx,%edi
    push   %eax
    sub    %ebx,%edi
    push   %edi
    push   $0x0
    push   %edi
    lea    0x4(%esi),%eax
    push   %eax
    call   func_5c001
    mov    0x14(%esi),%edx
    mov    0xc(%esi),%ebx
    sub    %ebx,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    lea    (%ebx,%eax,1),%edx
    mov    0x4(%esi),%eax
    mov    %eax,-0x28(%ebp)
    mov    0x10(%esi),%eax
    sub    0xbf(%esi),%eax
    inc    %eax
    mov    %eax,-0x24(%ebp)
    mov    0x10(%esi),%eax
    dec    %eax
    mov    %eax,-0x1c(%ebp)
    mov    0xc(%esi),%eax
    inc    %eax
    mov    %eax,-0x20(%ebp)
    mov    0x14(%esi),%eax
    dec    %eax
    mov    %eax,-0x18(%ebp)
    xor    %eax,%eax
    add    $0x1c,%esp
    mov    0xc6(%esi),%al
    push   %eax
    lea    -0x28(%ebp),%eax
    push   %eax
    mov    %edx,-0x8(%ebp)
    call   func_5e9d0
    xor    %eax,%eax
    mov    0x8e5(%esi),%al
    add    $0x8,%esp
    cmp    $0x1,%eax
    jle    jump_2e936
    cmp    $0x2,%eax
    jne    jump_2e91f
    mov    -0x8(%ebp),%eax
    mov    %eax,-0x18(%ebp)
    jmp    jump_2e925
  jump_2e91f:
    mov    -0x8(%ebp),%eax
    mov    %eax,-0x20(%ebp)
  jump_2e925:
    push   $0x96
    lea    -0x28(%ebp),%eax
    push   %eax
    call   func_5e9d0
    add    $0x8,%esp
  jump_2e936:
    lea    0x2(%edi),%eax
    push   $0x2
    mov    %eax,-0x14(%ebp)
    push   %eax
    mov    0x1c(%esi),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x18(%esi),%ax
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    lea    0x4(%esi),%eax
    push   %eax
    mov    %eax,-0x10(%ebp)
    call   func_5cb3c
    mov    -0x4(%ebp),%eax
    sub    0xbf(%esi),%eax
    add    $0x14,%esp
    add    $0x2,%eax
    push   %eax
    mov    0x1c(%esi),%eax
    mov    -0x14(%ebp),%ecx
    sar    $0x10,%eax
    push   %ecx
    inc    %eax
    xor    %edx,%edx
    push   %eax
    mov    0x18(%esi),%ax
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    -0x10(%ebp),%eax
    push   %eax
    call   func_5cb3c
    mov    -0xc(%ebp),%edx
    add    $0x14,%esp
    cmp    $0xffffffff,%edx
    jne    jump_2e9c3
    mov    $data_10ae70,%eax
    mov    0x14(%esi),%ebx
    mov    0x10(%esi),%ecx
    mov    0x8(%esi),%edx
    push   %ebx
    add    %edi,%edx
    mov    0xc(%esi),%ebx
    call   func_55274
  jump_2e9c3:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e9cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    cmp    $0x1,%dl
    jne    jump_2e9de
    movw   $0x0,0x1e(%eax)
    jmp    jump_2e9e4
  jump_2e9de:
    movw   $0x2,0x1e(%eax)
  jump_2e9e4:
    mov    0x1c(%esi),%eax
    mov    %dl,0xc3(%esi)
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x18(%esi),%ax
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    call   func_610e8
    mov    %eax,0xbf(%esi)
    mov    %eax,%edx
    mov    0x4(%esi),%eax
    mov    %eax,0x8d1(%esi)
    shr    $0x10,%edx
    mov    0x8(%esi),%eax
    mov    %edx,0xbf(%esi)
    inc    %eax
    add    $0x8,%esp
    mov    %eax,0x8d5(%esi)
    lea    0x3(%edx),%ebx
    mov    0x10(%esi),%eax
    mov    %ebx,0xbf(%esi)
    dec    %eax
    mov    0xb3(%esi),%ecx
    mov    %eax,0x8dd(%esi)
    cmp    $0xffffffff,%ecx
    jne    jump_2ea5b
    mov    0xbf(%esi),%eax
    sub    %eax,0x8dd(%esi)
  jump_2ea5b:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ea8c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    %ecx,(%esp)
    xor    %eax,%eax
    mov    0x8c7(%ebp),%ax
    cmp    $0x100,%eax
    jl     jump_2eabc
    mov    $0x62a,%ebx
    mov    $data_91908,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2eabc:
    movswl %di,%eax
    cmp    $0xffffffff,%eax
    jne    jump_2eacb
    mov    0x8c9(%ebp),%di
  jump_2eacb:
    add    %di,0x8cb(%ebp)
    mov    0x14(%ebp),%eax
    sub    0xc(%ebp),%eax
    xor    %edx,%edx
    dec    %eax
    mov    0x8cb(%ebp),%dx
    cmp    %eax,%edx
    jle    jump_2eb21
    cmpl   $0xffffffff,0xb7(%ebp)
    jne    jump_2eafa
    add    0xc(%ebp),%edx
    add    $0x2,%edx
    mov    %edx,0x14(%ebp)
    jmp    jump_2eb21
  jump_2eafa:
    cmpl   $0x0,0xb3(%ebp)
    jne    jump_2eb21
    mov    0xbf(%ebp),%eax
    mov    0x8dd(%ebp),%edi
    movl   $0xffffffff,0xb3(%ebp)
    sub    %eax,%edi
    mov    %edi,0x8dd(%ebp)
  jump_2eb21:
    cmpl   $0xffffffff,0xab(%ebp)
    jne    jump_2ebf7
    mov    %ds,%ecx
    mov    %esi,%edi
    push   %es
    mov    %ecx,%es
    xor    %eax,%eax
    mov    %eax,%ecx
    dec    %ecx
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    pop    %es
    mov    0x8e6(%ebp),%ebx
    lea    0x1(%ecx),%eax
    test   %ebx,%ebx
    jne    jump_2eb7a
    mov    $data_91917,%ebx
    mov    $0x1,%edx
    call   func_77604
    call   func_2625c
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jne    jump_2ebc1
    mov    $0x648,%ebx
    mov    $data_91926,%edx
    call   func_26198
    jmp    jump_2ebc1
  jump_2eb7a:
    mov    0x8f2(%ebp),%edx
    mov    0x8ee(%ebp),%ecx
    sub    %ecx,%edx
    cmp    %eax,%edx
    jae    jump_2eba7
    mov    $0x653,%ebx
    mov    $data_91935,%edx
    xor    %eax,%eax
    call   func_261a8
    mov    $0xffffffff,%eax
    jmp    jump_2ec47
  jump_2eba7:
    mov    0x8ea(%ebp),%edx
    mov    0x8ee(%ebp),%edi
    add    %edx,%ecx
    add    %eax,%edi
    mov    %ecx,0x4(%esp)
    mov    %edi,0x8ee(%ebp)
  jump_2ebc1:
    mov    0x4(%esp),%eax
    mov    %ds,%ecx
    mov    %ds,%edx
    mov    %esi,%ebx
    push   %ds
    push   %es
    push   %eax
    mov    %dx,%es
    mov    %cx,%ds
    mov    %ebx,%esi
    mov    %eax,%edi
  jump_2ebd8:
    mov    (%esi),%al
    mov    %al,%es:(%edi)
    cmp    $0x0,%al
    je     jump_2ebf2
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,%es:0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2ebd8
  jump_2ebf2:
    pop    %eax
    pop    %es
    pop    %ds
    mov    %eax,%esi
  jump_2ebf7:
    xor    %eax,%eax
    mov    0x8c7(%ebp),%ax
    mov    %esi,0xc7(%ebp,%eax,8)
    xor    %eax,%eax
    mov    0x8c7(%ebp),%ax
    movl   $0x0,0xcb(%ebp,%eax,8)
    mov    0x8c7(%ebp),%bx
    inc    %ebx
    mov    (%esp),%eax
    mov    %bx,0x8c7(%ebp)
    cmp    $0xffffffff,%eax
    jne    jump_2ec3f
    mov    0xa7(%ebp),%ecx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ecx)
  jump_2ec3f:
    mov    0x8c7(%ebp),%ax
    dec    %eax
  jump_2ec47:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2ec50:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    %ebx,%edi
    xor    %eax,%eax
    mov    %dx,%ax
    test   %eax,%eax
    jl     jump_2ec69
    cmp    $0x100,%eax
    jl     jump_2ec7a
  jump_2ec69:
    mov    $0x66b,%ebx
    mov    $data_91944,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2ec7a:
    xor    %eax,%eax
    mov    %cx,%ax
    shl    $0x3,%eax
    add    %eax,%esi
    cmpl   $0x0,0xc7(%esi)
    jne    jump_2ec93
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2ec93:
    mov    $0xffffffff,%eax
    mov    %edi,0xcb(%esi)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2eca4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    xor    %eax,%eax
    mov    %dx,%ax
    test   %eax,%eax
    jl     jump_2ecbb
    cmp    $0x100,%eax
    jl     jump_2eccc
  jump_2ecbb:
    mov    $0x679,%ebx
    mov    $data_91953,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2eccc:
    xor    %eax,%eax
    mov    %cx,%ax
    mov    0xcb(%esi,%eax,8),%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ecdc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    0x14(%eax),%ebx
    mov    0xc(%eax),%ecx
    sub    %ecx,%ebx
    mov    %ebx,%ecx
    xor    %ebx,%ebx
    dec    %ecx
    mov    0x8cb(%eax),%bx
    cmp    %ecx,%ebx
    jle    jump_2ed0f
    cmp    0x8c7(%eax),%dx
    jae    jump_2ed0f
    movw   $0xffff,0x8cf(%eax)
    mov    %dx,0x8cd(%eax)
  jump_2ed0f:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ed14:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    xor    %eax,%eax
    mov    %dx,%ax
    test   %eax,%eax
    jl     jump_2ed2b
    cmp    $0x100,%eax
    jl     jump_2ed3c
  jump_2ed2b:
    mov    $0x68d,%ebx
    mov    $data_91962,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2ed3c:
    xor    %eax,%eax
    mov    %cx,%ax
    mov    0xc7(%esi,%eax,8),%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ed4c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    movl   $0x0,0x8ee(%eax)
    xor    %edx,%edx
    jmp    jump_2ed63
  jump_2ed5f:
    add    $0x8,%eax
    inc    %edx
  jump_2ed63:
    xor    %ebx,%ebx
    mov    0x8c7(%ecx),%bx
    cmp    %ebx,%edx
    jge    jump_2ed85
    cmpl   $0x0,0xc7(%eax)
    je     jump_2ed5f
    movl   $0x0,0xc7(%eax)
    jmp    jump_2ed5f
  jump_2ed85:
    movw   $0x0,0x8c7(%ecx)
    movw   $0x0,0x8cb(%ecx)
    movw   $0xffff,0x8cf(%ecx)
    mov    0x10(%ecx),%eax
    movw   $0x0,0x8cd(%ecx)
    dec    %eax
    mov    0xaf(%ecx),%edx
    mov    %eax,0x8dd(%ecx)
    test   %edx,%edx
    jne    jump_2edc3
    mov    %edx,0xb3(%ecx)
  jump_2edc3:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2edc8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,(%esp)
    mov    %ebx,%ebp
    mov    0x8cd(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_2eeab
    cmp    0x8d9(%esi),%ebx
    jb     jump_2ee5d
    cmp    0x8e1(%esi),%ebp
    ja     jump_2ee5d
    mov    (%esp),%eax
    cmp    0x8dd(%esi),%eax
    ja     jump_2ee5d
    cmpl   $0xffffffff,0xbb(%esi)
    jne    jump_2f087
    xor    %eax,%eax
    mov    0xc5(%esi),%al
    push   %eax
    lea    0x8d1(%esi),%ebp
    push   %ebp
    call   func_5e9d0
    mov    $0xffffffff,%ecx
    mov    0x8cd(%esi),%edx
    add    $0x8,%esp
    sar    $0x10,%edx
    mov    %ebp,%eax
    mov    0xcb(%esi,%edx,8),%ebx
    mov    0xc7(%esi,%edx,8),%edx
    call   *0x8fa(%esi)
    mov    $data_10ae70,%eax
    mov    %ebp,%edx
    call   func_552cc
    jmp    jump_2f087
  jump_2ee5d:
    xor    %eax,%eax
    mov    0xc5(%esi),%al
    push   %eax
    lea    0x8d1(%esi),%edi
    push   %edi
    call   func_5e9d0
    mov    0x8cd(%esi),%eax
    add    $0x8,%esp
    sar    $0x10,%eax
    xor    %ecx,%ecx
    mov    0xcb(%esi,%eax,8),%ebx
    mov    0xc7(%esi,%eax,8),%edx
    mov    %edi,%eax
    call   *0x8fa(%esi)
    mov    $data_10ae70,%eax
    mov    %edi,%edx
    call   func_552cc
    movw   $0xffff,0x8cf(%esi)
  jump_2eeab:
    mov    0xb3(%esi),%edi
    mov    0x10(%esi),%eax
    cmp    $0xffffffff,%edi
    jne    jump_2eebf
    sub    0xbf(%esi),%eax
  jump_2eebf:
    cmp    (%esp),%eax
    jbe    jump_2f01d
    xor    %eax,%eax
    mov    0x8e5(%esi),%al
    cmp    $0x1,%eax
    jle    jump_2ef0c
    mov    $0xffffffff,%edx
    mov    $0x193,%ebx
    mov    %esi,%eax
    movb   $0x1,0x8e5(%esi)
    call   func_2e868
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_567bc
    mov    $0xffffffff,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_564c0
  jump_2ef0c:
    mov    0xc(%esi),%eax
    mov    0x8cd(%esi),%di
    mov    0x8c7(%esi),%dx
    inc    %eax
    xor    %ebx,%ebx
    mov    %eax,0x8d9(%esi)
    cmp    %dx,%di
    jb     jump_2ef51
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2ef33:
    mov    0x8e1(%esi),%eax
    inc    %edi
    inc    %eax
    mov    0x8c7(%esi),%cx
    mov    %eax,0x8d9(%esi)
    cmp    %cx,%di
    jae    jump_2f087
  jump_2ef51:
    test   %ebx,%ebx
    jne    jump_2f087
    mov    0x8f6(%esi),%eax
    test   %eax,%eax
    je     jump_2ef83
    xor    %eax,%eax
    mov    %di,%ax
    mov    0xcb(%esi,%eax,8),%edx
    mov    0xc7(%esi,%eax,8),%eax
    call   *0x8f6(%esi)
    and    $0xffff,%eax
    jmp    jump_2ef8a
  jump_2ef83:
    mov    0x8c9(%esi),%ax
  jump_2ef8a:
    add    0x8d9(%esi),%eax
    dec    %eax
    mov    %eax,0x8e1(%esi)
    mov    0x8e1(%esi),%eax
    mov    0x14(%esi),%edx
    cmp    %edx,%eax
    jl     jump_2efb2
    lea    -0x1(%edx),%eax
    mov    $0xffffffff,%ebx
    mov    %eax,0x8e1(%esi)
  jump_2efb2:
    cmp    0x8d9(%esi),%ebp
    jb     jump_2ef33
    cmp    0x8e1(%esi),%ebp
    ja     jump_2ef33
    xor    %eax,%eax
    mov    0xc5(%esi),%al
    push   %eax
    lea    0x8d1(%esi),%ebp
    push   %ebp
    mov    %di,0x8cf(%esi)
    call   func_5e9d0
    xor    %eax,%eax
    mov    %di,%ax
    mov    $0xffffffff,%ecx
    add    $0x8,%esp
    mov    0xcb(%esi,%eax,8),%ebx
    mov    0xc7(%esi,%eax,8),%edx
    mov    %ebp,%eax
    call   *0x8fa(%esi)
    mov    $data_10ae70,%eax
    mov    %ebp,%edx
    call   func_552cc
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2f01d:
    mov    0xb3(%esi),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_2f087
    mov    0x14(%esi),%edx
    mov    0xc(%esi),%edi
    sub    %edi,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    lea    (%edi,%eax,1),%edx
    xor    %eax,%eax
    mov    0x8e5(%esi),%al
    cmp    $0x1,%eax
    jg     jump_2f05c
    cmp    %edx,%ebp
    seta   %al
    add    $0x2,%al
    mov    %ecx,%edx
    mov    %al,0x8e5(%esi)
    mov    %esi,%eax
    jmp    jump_2f082
  jump_2f05c:
    cmp    %edx,%ebp
    jbe    jump_2f072
    cmp    $0x3,%eax
    je     jump_2f087
    mov    %ecx,%edx
    mov    %esi,%eax
    movb   $0x3,0x8e5(%esi)
    jmp    jump_2f082
  jump_2f072:
    cmp    $0x2,%eax
    je     jump_2f087
    mov    %ecx,%edx
    mov    %esi,%eax
    movb   $0x2,0x8e5(%esi)
  jump_2f082:
    call   func_2e868
  jump_2f087:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2f090:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %edx,0x4(%esp)
    mov    %ebx,(%esp)
    mov    %ecx,%edi
    mov    0x10(%eax),%edx
    mov    0xbf(%eax),%ebx
    mov    0x4(%esp),%ecx
    sub    %ebx,%edx
    cmp    %ecx,%edx
    jbe    jump_2f124
    mov    0x8cd(%eax),%ecx
    sar    $0x10,%ecx
    cmp    $0xffffffff,%ecx
    je     jump_2f1bf
    cmpl   $0x0,data_12fc14
    jne    jump_2f0fb
    mov    0x57(%eax),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_2f0e4
    mov    $data_10914c,%eax
    call   func_4fb90
  jump_2f0e4:
    mov    $0x1c01,%ebx
    movswl %di,%eax
    mov    0x8cd(%esi),%ecx
    mov    0x63(%esi),%edx
    push   %eax
    sar    $0x10,%ecx
    jmp    jump_2f107
  jump_2f0fb:
    movswl %di,%eax
    mov    $0x1c02,%ebx
    push   %eax
    mov    0x63(%esi),%edx
  jump_2f107:
    mov    $data_10ae70,%eax
    call   func_56d30
    mov    (%esp),%ebx
    mov    0x4(%esp),%edx
    mov    %esi,%eax
    call   func_2edc8
    jmp    jump_2f1bf
  jump_2f124:
    cmpl   $0xffffffff,0xb3(%eax)
    jne    jump_2f1bf
    mov    0x14(%eax),%edx
    mov    0xc(%eax),%eax
    sub    %eax,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    0xc(%esi),%edx
    mov    (%esp),%ebx
    add    %edx,%eax
    cmp    %ebx,%eax
    jbe    jump_2f16b
    mov    $0x191,%edx
    mov    %esi,%eax
    mov    0xa7(%esi),%ebp
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   *0x8(%ebp)
    push   $0x1e
    mov    $0x191,%ebx
    jmp    jump_2f186
  jump_2f16b:
    mov    $0x192,%edx
    mov    %esi,%eax
    mov    0xa7(%esi),%ebp
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   *0x8(%ebp)
    push   $0x1e
    mov    $0x192,%ebx
  jump_2f186:
    mov    $data_10ae70,%eax
    push   $0x0
    mov    0x41(%esi),%edx
    xor    %ecx,%ecx
    call   func_56400
    movswl %di,%eax
    mov    $0x1,%ebx
    cmp    $0x5,%eax
    jne    jump_2f1a9
    mov    $0x2,%ebx
  jump_2f1a9:
    push   $0x0
    mov    $0x193,%ecx
    push   $0x0
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_56728
  jump_2f1bf:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2f1c8:
/*----------------------------------------------------------------*/
    mov    %edx,0x8fa(%eax)
    ret


/*----------------------------------------------------------------*/
func_2f1d8:
/*----------------------------------------------------------------*/
    mov    %edx,0x8fe(%eax)
    ret


/*----------------------------------------------------------------*/
func_2f1e0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    cmpl   $0x0,0x8fe(%eax)
    jne    jump_2f200
    mov    $0x7ab,%ebx
    mov    $data_91971,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2f200:
    mov    $0x8,%ebx
    lea    0xc7(%ecx),%esi
    xor    %edx,%edx
    mov    0x8fe(%ecx),%eax
    mov    0x8c7(%ecx),%dx
    mov    %eax,%ecx
    mov    %esi,%eax
    call   func_76f56
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2f228:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    call   func_2ed4c
    mov    0x8ea(%ecx),%edx
    test   %edx,%edx
    je     jump_2f24e
    mov    %edx,%eax
    call   func_262cc
    movl   $0x0,0x8ea(%ecx)
  jump_2f24e:
    test   %ebx,%ebx
    je     jump_2f25a
    mov    %ebx,0x8ea(%ecx)
    jmp    jump_2f271
  jump_2f25a:
    mov    $data_91980,%ebx
    mov    $0x1,%edx
    mov    %esi,%eax
    call   func_2628c
    mov    %eax,0x8ea(%ecx)
  jump_2f271:
    mov    0x8ea(%ecx),%ebx
    test   %ebx,%ebx
    je     jump_2f29d
    movl   $0xffffffff,0x8e6(%ecx)
    movl   $0x0,0x8ee(%ecx)
    mov    $0xffffffff,%eax
    mov    %esi,0x8f2(%ecx)
    pop    %esi
    pop    %ecx
    ret
  jump_2f29d:
    mov    %ebx,0x8e6(%ecx)
    mov    %ebx,0x8f2(%ecx)
    xor    %eax,%eax
    mov    %ebx,0x8ee(%ecx)
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2f2b4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    0x8ea(%eax),%ebx
    test   %ebx,%ebx
    je     jump_2f2d3
    mov    %ebx,%eax
    call   func_262cc
    movl   $0x0,0x8ea(%edx)
  jump_2f2d3:
    movl   $0x0,0x8f2(%edx)
    movl   $0x0,0x8ee(%edx)
    movl   $0x0,0x8e6(%edx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2f2f4:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_95dc0,0xa7(%eax)
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2f30c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2f32b
    mov    $data_95d2c,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2f32b:
    mov    $0x1,%edx
    movl   $data_95dc0,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2f34b
    call   func_76d64
  jump_2f34b:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_2f354:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x14,%esp
    mov    %eax,%edi
    push   $0x0
    mov    0xab(%eax),%eax
    push   $0x0
    add    $0xc,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x18(%edi),%ax
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    %edi,%eax
    add    $0x4,%eax
    push   %eax
    mov    %eax,-0x8(%ebp)
    call   func_5cb3c
    add    $0x14,%esp
    mov    data_a2f6c,%ebx
    push   %ebx
    push   $data_91990
    lea    -0x14(%ebp),%eax
    push   %eax
    xor    %esi,%esi
    call   func_76d09
    mov    -0x8(%ebp),%eax
    add    $0xc,%esp
    mov    %eax,-0x4(%ebp)
    jmp    jump_2f3f6
  jump_2f3b5:
    mov    -0x17(%eax,%ebp,1),%ebx
    imul   $0x1f,%eax,%eax
    xor    %edx,%edx
    sar    $0x18,%ebx
    mov    data_104bea,%dl
    sub    $0x30,%ebx
    lea    0x2(%eax),%ecx
    push   %edx
    mov    0xab(%edi),%eax
    xor    %edx,%edx
    add    %eax,%ebx
    mov    0x18(%edi),%ax
    push   $0x0
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    inc    %esi
    call   func_53eb8
  jump_2f3f6:
    movswl %si,%eax
    cmp    $0x5,%eax
    jl     jump_2f3b5
    mov    -0x4(%ebp),%edx
    mov    $data_10ae70,%eax
    call   func_552cc
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2f414:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    0xa7(%eax),%ebx
    call   *0xc(%ebx)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2f420:
/*----------------------------------------------------------------*/
    movswl %dx,%edx
    nop


/*----------------------------------------------------------------*/
func_2f424:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    cmp    $0x7,%dx
    jb     jump_2ccc5
    jbe    jump_2cb52
    cmp    $0xe,%dx
    jb     jump_2ccb6
    jbe    jump_2cb2b
    cmp    $0xf,%dx
    jbe    jump_2cb42
    cmp    $0xc9,%dx
    jb     jump_2cd19
    cmp    $0xca,%dx
    jbe    jump_2cc96
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2f478:
/*----------------------------------------------------------------*/
    cmp    $0xd,%dx
    jne    func_2f420
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_2f48c:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_95da8,0xa7(%eax)
    call   func_2f4ec
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2f4a8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2f4c7
    mov    $data_95d18,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2f4c7:
    mov    $0x1,%edx
    movl   $data_95da8,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2f4e7
    call   func_76d64
  jump_2f4e7:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2f4ec:
/*----------------------------------------------------------------*/
    push   %edx
    movl   $0x0,0xab(%eax)
    movw   $0x0,0xb1(%eax)
    movw   $0x0,0xaf(%eax)
    movw   $0x0,0xb3(%eax)
    movw   $0xf2,0xb7(%eax)
    movl   $data_10deb6,0xb9(%eax)
    xor    %edx,%edx
    movl   $0xffffffff,0xbd(%eax)
    mov    data_96778,%dl
    mov    %dx,0xb5(%eax)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2f540:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    0xb5(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    mov    %ebp,%eax
    add    $0x4,%eax
    push   %eax
    mov    %eax,0x8(%esp)
    call   func_5e9d0
    add    $0x8,%esp
    push   $0xf3
    push   $0x0
    mov    0x10(%ebp),%eax
    mov    0x8(%ebp),%ebx
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    mov    0x18(%esp),%ecx
    push   %ecx
    call   func_5c001
    add    $0x1c,%esp
    push   $0xf3
    mov    0x14(%ebp),%eax
    mov    0xc(%ebp),%esi
    push   $0x0
    sub    %esi,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    mov    0x18(%esp),%edi
    push   %edi
    call   func_5c001
    add    $0x1c,%esp
    push   $0xf3
    mov    0x14(%ebp),%eax
    mov    0xc(%ebp),%edx
    push   $0x0
    sub    %edx,%eax
    push   %eax
    push   $0x0
    mov    0x8(%ebp),%ebx
    push   %eax
    mov    0x10(%ebp),%eax
    sub    %ebx,%eax
    push   %eax
    push   %edi
    call   func_5c001
    add    $0x1c,%esp
    push   $0xf3
    mov    0x10(%ebp),%ecx
    push   $0x0
    mov    0x8(%ebp),%esi
    mov    0x14(%ebp),%eax
    push   $0x0
    sub    %esi,%ecx
    mov    0xc(%ebp),%edi
    push   %ecx
    sub    %edi,%eax
    push   %eax
    push   %ecx
    mov    0x18(%esp),%eax
    push   %eax
    call   func_5c001
    add    $0x1c,%esp
    mov    (%esp),%esi
    push   $0x0
    mov    $0x4,%ebx
    mov    0xb5(%ebp),%dx
    push   $0xff
    movswl %dx,%edx
    mov    0xb9(%ebp),%eax
    push   %edx
    mov    0xab(%ebp),%ecx
    lea    0x8(%eax),%edi
    push   $0x0
    mov    $0x2,%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    0xb1(%ebp),%edx
    mov    0xab(%ebp),%eax
    sar    $0x10,%edx
    mov    (%edx,%eax,1),%cl
    movb   $0x0,(%edx,%eax,1)
    mov    0xab(%ebp),%edx
    mov    0xb9(%ebp),%eax
    call   func_2b4f4
    mov    0xb1(%ebp),%ebx
    mov    %eax,%edx
    sar    $0x10,%ebx
    mov    0xab(%ebp),%eax
    mov    %cl,(%ebx,%eax,1)
    mov    0x14(%ebp),%eax
    mov    0xc(%ebp),%ebx
    push   $0x98
    sub    %ebx,%eax
    push   $0x0
    sub    $0x3,%eax
    push   %eax
    lea    0x2(%edx),%eax
    push   %eax
    push   $0x3
    push   %eax
    mov    0x18(%esp),%ecx
    push   %ecx
    call   func_5c001
    add    $0x1c,%esp
    mov    $data_10ae70,%eax
    mov    (%esp),%edx
    call   func_552cc
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_2f6b0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%edx
    mov    %ecx,%eax
    cmp    $0x3,%di
    jne    jump_2f88f
    mov    0xbd(%esi),%ecx
    movl   $0x0,0xbd(%esi)
    cmp    $0x30,%bl
    jl     jump_2f6de
    cmp    $0x39,%bl
    jle    jump_2f700
  jump_2f6de:
    cmp    $0x41,%bl
    jl     jump_2f6e8
    cmp    $0x5a,%bl
    jle    jump_2f700
  jump_2f6e8:
    cmp    $0x61,%bl
    jl     jump_2f6f2
    cmp    $0x7a,%bl
    jle    jump_2f700
  jump_2f6f2:
    cmp    $0x20,%bl
    je     jump_2f700
    cmp    $0x2d,%bl
    jne    jump_2f862
  jump_2f700:
    test   %ecx,%ecx
    je     jump_2f724
    movw   $0x0,0xb3(%esi)
    mov    0xb3(%esi),%ax
    mov    %ax,0xb1(%esi)
    mov    0xab(%esi),%eax
    movb   $0x0,(%eax)
  jump_2f724:
    mov    0xb1(%esi),%ax
    cmp    0xaf(%esi),%ax
    jge    jump_2f770
    mov    $data_10deb6,%eax
    mov    0xab(%esi),%edx
    call   func_2b4f4
    cmp    $0x5f,%eax
    jge    jump_2f770
    movsbl %bl,%ebx
    mov    0xb1(%esi),%edx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2f8f8
    incw   0xb3(%esi)
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_2f770:
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    ret
  jump_2f778:
    mov    $0x6,%edx
    mov    $data_10ae70,%eax
    movswl %di,%ebx
    xor    %ecx,%ecx
    call   func_56b60
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    ret
  jump_2f794:
    mov    0xb3(%esi),%ax
    cmp    0xb1(%esi),%ax
    jge    jump_2f7c1
    mov    0xb1(%esi),%edx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2f8a4
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_2f7c1:
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    ret
  jump_2f7c9:
    mov    0xb1(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_2f7fa
    decw   0xb3(%esi)
    mov    0xb1(%esi),%edx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2f8a4
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_2f7fa:
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    ret
  jump_2f802:
    mov    0xb1(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_2f82b
    mov    %esi,%eax
    mov    0xb3(%esi),%di
    mov    0xa7(%esi),%ebx
    dec    %edi
    xor    %edx,%edx
    mov    %di,0xb3(%esi)
    call   *0xc(%ebx)
  jump_2f82b:
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    ret
  jump_2f833:
    mov    0xb3(%esi),%ax
    cmp    0xb1(%esi),%ax
    jge    jump_2f85a
    mov    %eax,%ecx
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    inc    %ecx
    mov    %esi,%eax
    mov    %cx,0xb3(%esi)
    call   *0xc(%ebx)
  jump_2f85a:
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    ret
  jump_2f862:
    cmp    $0x4b,%eax
    jb     jump_2f87b
    jbe    jump_2f802
    cmp    $0x4d,%eax
    jb     jump_2f88f
    jbe    jump_2f833
    cmp    $0x53,%eax
    je     jump_2f794
    jmp    jump_2f88f
  jump_2f87b:
    cmp    $0xe,%eax
    jb     jump_2f88f
    jbe    jump_2f7c9
    cmp    $0x1c,%eax
    je     jump_2f778
  jump_2f88f:
    movswl %di,%edi
    mov    %eax,%ecx
    mov    %edx,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_2f424
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2f8a4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    cmp    0xaf(%eax),%si
    jl     jump_2f8c5
    mov    $0x8f2,%ebx
    mov    $data_91995,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2f8c5:
    mov    0xb1(%ecx),%bx
    mov    %esi,%eax
    cmp    %bx,%si
    jge    jump_2f8ed
  jump_2f8d3:
    movswl %ax,%edx
    mov    0xab(%ecx),%ebx
    add    %ebx,%edx
    mov    0x1(%edx),%bl
    mov    %bl,(%edx)
    inc    %eax
    cmp    0xb1(%ecx),%ax
    jl     jump_2f8d3
  jump_2f8ed:
    decw   0xb1(%ecx)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2f8f8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %bl,(%esp)
    cmp    0xb1(%eax),%si
    jle    jump_2f91f
    mov    $0x903,%ebx
    mov    $data_919a4,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2f91f:
    mov    0xb1(%ecx),%ax
    cmp    0xaf(%ecx),%ax
    jl     jump_2f940
    mov    $0x904,%ebx
    mov    $data_919b3,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2f940:
    mov    0xb1(%ecx),%di
    cmp    %di,%si
    jne    jump_2f968
    mov    0xab(%ecx),%ebx
    movswl %di,%edx
    mov    (%esp),%al
    mov    %al,(%edx,%ebx,1)
    mov    0xab(%ecx),%ebx
    movb   $0x0,0x1(%edx,%ebx,1)
    jmp    jump_2f985
  jump_2f968:
    mov    %edi,%eax
    cmp    %si,%di
    jl     jump_2f985
  jump_2f96f:
    movswl %ax,%ebx
    mov    0xab(%ecx),%edx
    add    %ebx,%edx
    mov    (%edx),%bl
    dec    %eax
    mov    %bl,0x1(%edx)
    cmp    %si,%ax
    jge    jump_2f96f
  jump_2f985:
    mov    0xab(%ecx),%edx
    movswl %si,%ebx
    mov    (%esp),%al
    mov    %al,(%edx,%ebx,1)
    incw   0xb1(%ecx)
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2f9a4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,(%esp)
    test   %edx,%edx
    jne    jump_2f9c6
    mov    $0x91b,%ebx
    mov    $data_919c2,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2f9c6:
    mov    (%esp),%ecx
    mov    %edi,0xab(%esi)
    mov    (%esp),%edx
    mov    %cx,0xaf(%esi)
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    %cx,0xb1(%esi)
    cmp    %dx,%cx
    jle    jump_2fa00
    mov    $0x921,%ebx
    mov    $data_919d1,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2fa00:
    mov    0xb1(%esi),%cx
    mov    %cx,0xb3(%esi)
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2fa18:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_95d90,0xa7(%eax)
    call   func_2fa78
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2fa34:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2fa53
    mov    $data_95d04,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2fa53:
    mov    $0x1,%edx
    movl   $data_95d90,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2fa73
    call   func_76d64
  jump_2fa73:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2fa78:
/*----------------------------------------------------------------*/
    movl   $0x0,0xab(%eax)
    movw   $0x3,0xaf(%eax)
    movw   $0xf3,0xb1(%eax)
    ret


/*----------------------------------------------------------------*/
func_2fa98:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    push   $0xf2
    lea    0x4(%eax),%esi
    push   %esi
    call   func_5e9d0
    mov    0x5f(%ebp),%edx
    add    $0x8,%esp
    cmp    $0xffffffff,%edx
    jne    jump_2fb44
    push   $0xf3
    push   $0x0
    mov    0x10(%ebp),%eax
    mov    0x8(%ebp),%ebx
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
    push   $0xf3
    mov    0x14(%ebp),%eax
    mov    0xc(%ebp),%ecx
    push   $0x0
    sub    %ecx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
    push   $0xf3
    mov    0x14(%ebp),%eax
    mov    0xc(%ebp),%edi
    push   $0x0
    sub    %edi,%eax
    push   %eax
    push   $0x0
    mov    0x8(%ebp),%edx
    push   %eax
    mov    0x10(%ebp),%eax
    sub    %edx,%eax
    push   %eax
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
    push   $0xf3
    mov    0x10(%ebp),%edx
    push   $0x0
    mov    0x8(%ebp),%ebx
    mov    0x14(%ebp),%eax
    push   $0x0
    sub    %ebx,%edx
    mov    0xc(%ebp),%ecx
    push   %edx
    sub    %ecx,%eax
    push   %eax
    push   %edx
    push   %esi
    call   func_5c001
    add    $0x1c,%esp
  jump_2fb44:
    mov    0x10(%ebp),%eax
    sub    0x8(%ebp),%eax
    mov    0xab(%ebp),%edi
    lea    -0x5(%eax),%edx
    test   %edi,%edi
    je     jump_2fb8e
    lea    0x4(%ebp),%esi
    mov    %edi,%ecx
    push   %edx
    mov    0xaf(%ebp),%bx
    mov    0xb1(%ebp),%ax
    push   $0xff
    cwtl
    mov    $data_10debe,%edi
    push   %eax
    movswl %bx,%eax
    xor    %edx,%edx
    push   %eax
    xor    %ebx,%ebx
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_2fb8e:
    mov    $data_10ae70,%eax
    lea    0x4(%ebp),%edx
    call   func_552cc
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2fba4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    data_10de72,%ebx
    mov    0x41(%esi),%ecx
    mov    $0xf2,%eax
    cmp    %ecx,%ebx
    jne    jump_2fbc1
    cmp    $0x2,%edx
    jne    jump_2fbc6
  jump_2fbc1:
    cmp    $0x3,%edx
    jne    jump_2fbcb
  jump_2fbc6:
    mov    $0x96,%eax
  jump_2fbcb:
    push   %eax
    lea    0x4(%esi),%eax
    push   %eax
    call   func_5e9d0
    mov    0x1c(%esi),%eax
    sar    $0x10,%eax
    add    $0x8,%esp
    cmp    $0xffffffff,%eax
    jne    jump_2fbf4
    mov    $0x9a0,%ebx
    mov    $data_919e0,%edx
    xor    %eax,%eax
    call   func_26198
  jump_2fbf4:
    mov    0x1c(%esi),%ebx
    sar    $0x10,%ebx
    cmp    $0xffffffff,%ebx
    je     jump_2fc2a
    xor    %eax,%eax
    mov    data_104bea,%al
    lea    0x4(%esi),%edi
    push   %eax
    xor    %edx,%edx
    mov    0x18(%esi),%ax
    push   $0x0
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    xor    %ecx,%ecx
    call   func_1b084
    mov    %eax,%edx
    mov    %edi,%eax
    call   func_53eb8
  jump_2fc2a:
    mov    $data_10ae70,%eax
    lea    0x4(%esi),%edx
    call   func_552cc
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2fc3c:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    0xa7(%eax),%ebx
    mov    $0x3,%edx
    call   *0xc(%ebx)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2fc50:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_95e54,0xa7(%eax)
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2fc68:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2fc87
    mov    $data_95e40,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2fc87:
    mov    $0x1,%edx
    movl   $data_95e54,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2fca7
    call   func_76d64
  jump_2fca7:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_2fcb0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    movl   $0x0,0xdab(%eax)
    lea    0xab(%ecx),%edi
    mov    0xdab(%eax),%eax
    mov    %edx,%esi
    mov    %eax,0xda7(%ecx)
    push   %edi
  jump_2fcd4:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2fcec
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2fcd4
  jump_2fcec:
    pop    %edi
    lea    0xc9(%ecx),%edi
    mov    %ebx,%esi
    push   %edi
  jump_2fcf6:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2fd0e
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2fcf6
  jump_2fd0e:
    pop    %edi
    mov    %ecx,%eax
    call   func_2feb8
    mov    data_10f096,%eax
    mov    $0x78,%edx
    sar    $0x10,%eax
    mov    $0x98,%ebx
    test   %eax,%eax
    je     jump_2fd45
    cmp    $0x1,%eax
    je     jump_2fd45
    cmp    $0x7,%eax
    je     jump_2fd45
    cmp    $0x8,%eax
    je     jump_2fd45
    cmp    $0x10,%eax
    je     jump_2fd45
    cmp    $0x14,%eax
    jne    jump_2fd4a
  jump_2fd45:
    mov    $0x50,%ebx
  jump_2fd4a:
    mov    %ebx,0x8(%ecx)
    mov    %edx,0xc(%ecx)
    add    $0x14f,%ebx
    add    $0xff,%edx
    mov    %ebx,0x10(%ecx)
    mov    %edx,0x14(%ecx)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2fd68:
/*----------------------------------------------------------------*/
    push   %edi
    cmp    $0x6,%dx
    jb     jump_2fe26
    cmp    $0x7,%dx
    jbe    jump_2fd99
    cmp    $0xd,%dx
    jb     jump_2fe16
    jbe    jump_2fd99
    cmp    $0x32,%dx
    jb     jump_2fd99
    jbe    jump_2fddd
    cmp    $0xc9,%dx
    jb     jump_2fd99
    cmp    $0xca,%dx
  jump_2fd99:
    movswl %dx,%edx
    call   func_2f424
    pop    %edi
    ret
  jump_2fda3:
    movl   $0xffffffff,0x35(%eax)
    mov    0xa7(%eax),%ebx
    movl   $0xffffffff,0x39(%eax)
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    pop    %edi
    ret
  jump_2fdc0:
    mov    $0xca,%ebx
    mov    $0x6,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    call   func_56b60
    mov    $0xffffffff,%eax
    pop    %edi
    ret
  jump_2fddd:
    mov    0xda7(%eax),%edx
    cmp    0xdab(%eax),%edx
    jge    jump_2fe03
    lea    0x1(%edx),%edi
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    mov    %edi,0xda7(%eax)
    call   *0xc(%ebx)
    xor    %eax,%eax
    pop    %edi
    ret
  jump_2fe03:
    mov    $0x6,%edx
    mov    $data_10ae70,%eax
    call   func_56b60
    xor    %eax,%eax
    pop    %edi
    ret
  jump_2fe16:
    cmp    $0xc,%dx
    je     jump_2fdc0
    movswl %dx,%edx
    call   func_2f424
    pop    %edi
    ret
  jump_2fe26:
    cmp    $0x2,%dx
    jb     jump_2fe42
    jbe    jump_2fd99
    cmp    $0x5,%dx
    je     jump_2fdc0
    movswl %dx,%edx
    call   func_2f424
    pop    %edi
    ret
  jump_2fe42:
    cmp    $0x1,%dx
    je     jump_2fda3
    movswl %dx,%edx
    call   func_2f424
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_2fe58:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%ecx
    xor    %edi,%edi
    xor    %ebp,%ebp
  jump_2fe65:
    mov    $0xc8,%edx
    mov    %esi,%ebx
    mov    %ecx,%eax
    call   func_7834e
    test   %eax,%eax
    jne    jump_2fe88
    mov    $0x9e,%ebx
    mov    $data_919f0,%edx
    mov    %ebp,%eax
    call   func_261a8
  jump_2fe88:
    mov    (%ecx),%ah
    cmp    $0x20,%ah
    je     jump_2fead
    cmp    $0x9,%ah
    je     jump_2fead
    cmp    $0xa,%ah
    je     jump_2fead
    cmp    $0xd,%ah
    je     jump_2fead
    cmp    $0x2f,%ah
    je     jump_2fead
    cmp    $0x23,%ah
    je     jump_2fead
    mov    $0xffffffff,%edi
  jump_2fead:
    test   %edi,%edi
    je     jump_2fe65
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2feb8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1bc,%esp
    sub    $0x82,%ebp
    mov    %eax,0x76(%ebp)
    mov    $0x2,%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_2d258
    mov    0x76(%ebp),%eax
    lea    0x10e(%eax),%edx
  jump_2fee6:
    add    $0x1b,%eax
    movl   $0x0,0xc91(%eax)
    cmp    %edx,%eax
    jne    jump_2fee6
    mov    0x76(%ebp),%eax
    mov    $0xbb8,%ebx
    add    $0xdd,%eax
    xor    %edx,%edx
    xor    %ecx,%ecx
    movl   $0x0,0xcc6(%eax)
    call   func_76ec0
    xor    %edx,%edx
    mov    %ecx,0x6e(%ebp)
    mov    %edx,0x66(%ebp)
    mov    %edx,0x62(%ebp)
    mov    0x76(%ebp),%edx
    mov    data_ffeea,%ax
    mov    0x76(%ebp),%ecx
    mov    %ax,0x18(%edx)
    lea    0xab(%edx),%eax
    movw   $0x0,0x1e(%edx)
    xor    %edx,%edx
    add    $0xc9,%ecx
    call   func_1bb10
    mov    %eax,0x3e(%ebp)
    mov    $0xe8,%edi
    xor    %esi,%esi
  jump_2ff55:
    lea    -0x13a(%ebp),%edx
    mov    0x3e(%ebp),%eax
    call   func_2fe58
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_919ff
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_7742d
    add    $0xc,%esp
    mov    $data_91a02,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_2ffec
    lea    -0x6e(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_91a07
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_7742d
    add    $0x10,%esp
    lea    -0x6e(%ebp),%edx
    mov    %ecx,%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_2ffbf
    movl   $0x1,0x6e(%ebp)
    jmp    jump_2ffec
  jump_2ffbf:
    lea    -0x6e(%ebp),%edx
    mov    $data_91a0d,%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_2ffec
    push   %ecx
    push   $data_91a11
    mov    $data_91a35,%edx
    call   func_2620c
    add    $0x8,%esp
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_261b8
  jump_2ffec:
    mov    0x6e(%ebp),%edx
    cmp    %edx,%esi
    je     jump_2ff55
    mov    0x76(%ebp),%eax
    mov    $0xffffffff,%ebx
    add    $0xc95,%eax
    mov    %ebx,0x6a(%ebp)
    mov    %ebx,0x5a(%ebp)
    mov    %eax,0x42(%ebp)
    cmp    $0x2,%edx
    je     jump_3075f
    mov    0x76(%ebp),%eax
    add    $0xdd,%eax
    mov    %eax,0x56(%ebp)
    mov    0x66(%ebp),%eax
    shl    $0x2,%eax
    mov    0x62(%ebp),%edx
    mov    %eax,0x72(%ebp)
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    %eax,0x5e(%ebp)
  jump_30043:
    lea    -0x13a(%ebp),%edx
    mov    0x3e(%ebp),%eax
    call   func_2fe58
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_91a44
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_7742d
    add    $0xc,%esp
    mov    $data_91a47,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_30086
    movl   $0x2,0x6e(%ebp)
    jmp    jump_30755
  jump_30086:
    mov    $data_91a4c,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_300cd
    lea    0x4a(%ebp),%eax
    push   %eax
    lea    0x46(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_91a50
    lea    -0x13a(%ebp),%eax
    push   %eax
    mov    0x42(%ebp),%edx
    call   func_7742d
    mov    0x46(%ebp),%eax
    mov    %ax,0x13(%edx)
    mov    0x4a(%ebp),%eax
    add    $0x14,%esp
    mov    %ax,0x15(%edx)
    jmp    jump_30755
  jump_300cd:
    mov    $data_91a59,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_3018c
    mov    0x76(%ebp),%eax
    mov    0xda3(%eax),%edx
    inc    %edx
    mov    %edx,0xda3(%eax)
    cmp    $0xa,%edx
    jl     jump_30108
    mov    $0x124,%ebx
    mov    $data_91a5f,%edx
    xor    %eax,%eax
    call   func_26198
  jump_30108:
    cmpl   $0xffffffff,0x6a(%ebp)
    jne    jump_30115
    xor    %edi,%edi
    mov    %edi,0x6a(%ebp)
    jmp    jump_30119
  jump_30115:
    addl   $0x1b,0x42(%ebp)
  jump_30119:
    mov    0x42(%ebp),%eax
    movb   $0x0,(%eax)
    movw   $0x0,0x1(%eax)
    movw   $0x0,0x3(%eax)
    movw   $0x0,0x13(%eax)
    movw   $0x0,0x15(%eax)
    lea    0x52(%ebp),%eax
    push   %eax
    lea    0x4e(%ebp),%eax
    push   %eax
    lea    0x4a(%ebp),%eax
    push   %eax
    lea    0x46(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_91a6e
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_7742d
    add    $0x1c,%esp
    cmp    $0x5,%eax
    jne    jump_30755
    mov    0x42(%ebp),%edx
    mov    0x46(%ebp),%eax
    mov    %ax,0x1(%edx)
    mov    0x4a(%ebp),%eax
    mov    %ax,0x3(%edx)
    mov    0x4e(%ebp),%eax
    mov    %ax,0x13(%edx)
    mov    0x52(%ebp),%eax
    mov    %ax,0x15(%edx)
    jmp    jump_30755
  jump_3018c:
    mov    $data_91a7d,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_30203
    cmpl   $0xffffffff,0x5a(%ebp)
    jne    jump_301aa
    xor    %ecx,%ecx
    mov    %ecx,0x5a(%ebp)
    jmp    jump_301ba
  jump_301aa:
    mov    0x72(%ebp),%edx
    mov    0x66(%ebp),%ebx
    add    $0x4,%edx
    inc    %ebx
    mov    %edx,0x72(%ebp)
    mov    %ebx,0x66(%ebp)
  jump_301ba:
    mov    0x76(%ebp),%eax
    mov    0x69(%eax),%eax
    mov    0x66(%ebp),%esi
    sar    $0x10,%eax
    cmp    %esi,%eax
    jg     jump_301db
    mov    $0x145,%ebx
    mov    $data_91a84,%edx
    xor    %eax,%eax
    call   func_26198
  jump_301db:
    mov    0x76(%ebp),%edx
    mov    0x72(%ebp),%edi
    mov    0x67(%edx),%edx
    add    %edi,%edx
    push   $0x0
    mov    $0xe,%ebx
    mov    (%edx),%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_56d30
    jmp    jump_30755
  jump_30203:
    mov    $data_91a93,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_30242
    mov    0x76(%ebp),%eax
    mov    0x72(%ebp),%edx
    mov    0x67(%eax),%eax
    add    %edx,%eax
    mov    (%eax),%eax
    add    $0x20,%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_91a99
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_7742d
    add    $0x10,%esp
    jmp    jump_30755
  jump_30242:
    mov    $data_91a9f,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_30287
    lea    0x46(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_91aa3
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_7742d
    mov    0x76(%ebp),%eax
    mov    0x72(%ebp),%ebx
    mov    0x67(%eax),%eax
    add    %ebx,%eax
    mov    (%eax),%edx
    mov    0x46(%ebp),%eax
    add    $0x10,%esp
    mov    %eax,0x47(%edx)
    jmp    jump_30755
  jump_30287:
    mov    $data_91aa9,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_302ed
    lea    0x52(%ebp),%eax
    push   %eax
    lea    0x4e(%ebp),%eax
    push   %eax
    lea    0x4a(%ebp),%eax
    push   %eax
    lea    0x46(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_91aae
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_7742d
    mov    0x76(%ebp),%eax
    mov    0x72(%ebp),%ecx
    mov    0x67(%eax),%eax
    add    %ecx,%eax
    mov    (%eax),%edx
    mov    0x46(%ebp),%eax
    mov    %eax,0x8(%edx)
    mov    0x4a(%ebp),%eax
    mov    %eax,0xc(%edx)
    mov    0x4e(%ebp),%eax
    mov    %eax,0x10(%edx)
    add    $0x4,%edx
    mov    0x52(%ebp),%eax
    add    $0x1c,%esp
    mov    %eax,0x10(%edx)
    jmp    jump_30755
  jump_302ed:
    mov    $data_91abd,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_303be
    lea    0xa(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_91ac2
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_7742d
    mov    0x76(%ebp),%eax
    mov    0x72(%ebp),%esi
    mov    0x67(%eax),%eax
    add    %esi,%eax
    mov    $data_91ac8,%edx
    add    $0x10,%esp
    mov    (%eax),%ebx
    lea    0xa(%ebp),%eax
    add    $0x4,%ebx
    call   func_7763a
    test   %eax,%eax
    jne    jump_30374
    mov    0x76(%ebp),%eax
    mov    0x8(%eax),%eax
    add    $0xf,%eax
    mov    %eax,0x4(%ebx)
    mov    0x76(%ebp),%eax
    mov    0x14(%eax),%eax
    sub    $0x32,%eax
    mov    %eax,0x8(%ebx)
    mov    0x76(%ebp),%eax
    mov    0x8(%eax),%eax
    add    $0x5a,%eax
    mov    %eax,0xc(%ebx)
    mov    0x76(%ebp),%eax
    mov    0x14(%eax),%eax
    sub    $0xf,%eax
    mov    %eax,0x10(%ebx)
    jmp    jump_30755
  jump_30374:
    mov    $data_91acb,%edx
    lea    0xa(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_30755
    mov    0x76(%ebp),%eax
    mov    0x10(%eax),%eax
    sub    $0x5a,%eax
    mov    %eax,0x4(%ebx)
    mov    0x76(%ebp),%eax
    mov    0x14(%eax),%eax
    sub    $0x32,%eax
    mov    %eax,0x8(%ebx)
    mov    0x76(%ebp),%eax
    mov    0x10(%eax),%eax
    sub    $0xf,%eax
    mov    %eax,0xc(%ebx)
    mov    0x76(%ebp),%eax
    mov    0x14(%eax),%eax
    sub    $0xf,%eax
    mov    %eax,0x10(%ebx)
    jmp    jump_30755
  jump_303be:
    mov    $data_91ace,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_305b3
    mov    0x76(%ebp),%eax
    mov    0xda3(%eax),%edi
    inc    %edi
    mov    %edi,0xda3(%eax)
    cmp    $0xa,%edi
    jl     jump_303f9
    mov    $0x177,%ebx
    mov    $data_91ad3,%edx
    xor    %eax,%eax
    call   func_26198
  jump_303f9:
    cmpl   $0x5,0x62(%ebp)
    jl     jump_30410
    mov    $0x178,%ebx
    mov    $data_91ae2,%edx
    xor    %eax,%eax
    call   func_26198
  jump_30410:
    cmpl   $0xffffffff,0x6a(%ebp)
    jne    jump_3041d
    xor    %edi,%edi
    mov    %edi,0x6a(%ebp)
    jmp    jump_30421
  jump_3041d:
    addl   $0x1b,0x42(%ebp)
  jump_30421:
    mov    0x42(%ebp),%eax
    movb   $0x1,(%eax)
    movl   $0x0,0xf(%eax)
    mov    0x5e(%ebp),%eax
    lea    0x258(%eax),%edx
    mov    %edx,0x5e(%ebp)
    mov    0x56(%ebp),%edx
    add    %eax,%edx
    mov    0x42(%ebp),%eax
    mov    %edx,0x5(%eax)
    movb   $0x0,(%edx)
    movl   $data_10deb6,0xb(%eax)
    movw   $0x0,0x13(%eax)
    movw   $0x0,0x15(%eax)
    movw   $0xffff,0x9(%eax)
    lea    0x4e(%ebp),%eax
    push   %eax
    lea    0x4a(%ebp),%eax
    push   %eax
    lea    0x46(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    mov    0x62(%ebp),%ebx
    push   $data_91af1
    lea    -0x13a(%ebp),%eax
    inc    %ebx
    push   %eax
    mov    %ebx,0x62(%ebp)
    call   func_7742d
    add    $0x18,%esp
    cmp    $0x4,%eax
    jne    jump_304a9
    mov    0x42(%ebp),%edx
    mov    0x46(%ebp),%eax
    mov    %ax,0x13(%edx)
    mov    0x4a(%ebp),%eax
    mov    %ax,0x15(%edx)
    mov    0x4e(%ebp),%eax
    mov    %ax,0x9(%edx)
  jump_304a9:
    xor    %ecx,%ecx
    mov    %ecx,0x7a(%ebp)
    mov    %ecx,0x7e(%ebp)
  jump_304b1:
    lea    -0x13a(%ebp),%edx
    mov    0x3e(%ebp),%eax
    mov    $0x7,%ebx
    call   func_2fe58
    mov    $data_91afd,%edx
    lea    -0x13a(%ebp),%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_304e1
    movl   $0xffffffff,0x7a(%ebp)
    jmp    jump_30540
  jump_304e1:
    lea    -0x13a(%ebp),%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    0x7e(%ebp),%edi
    add    %ecx,%edi
    mov    %edi,0x7e(%ebp)
    cmp    $0x254,%edi
    jl     jump_30512
    mov    $0x19e,%ebx
    mov    $data_91b05,%edx
    xor    %eax,%eax
    call   func_26198
  jump_30512:
    mov    0x42(%ebp),%edi
    lea    -0x13a(%ebp),%esi
    mov    0x5(%edi),%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_30527:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3053f
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_30527
  jump_3053f:
    pop    %edi
  jump_30540:
    cmpl   $0x0,0x7a(%ebp)
    je     jump_304b1
    mov    0x42(%ebp),%eax
    cmpl   $0x0,0x5(%eax)
    jne    jump_30564
    mov    $0x1a6,%ebx
    mov    $data_91b14,%edx
    xor    %eax,%eax
    call   func_26198
  jump_30564:
    mov    0x42(%ebp),%ecx
    mov    0x5(%ecx),%ecx
    mov    (%ecx),%ah
    xor    %esi,%esi
    test   %ah,%ah
    je     jump_30755
    mov    $data_91b23,%edi
  jump_3057b:
    cmp    $0x255,%esi
    jl     jump_30591
    mov    $0x1ac,%ebx
    mov    %edi,%edx
    xor    %eax,%eax
    call   func_26198
  jump_30591:
    mov    (%ecx),%dl
    cmp    $0xa,%dl
    jne    jump_3059d
    movb   $0x20,(%ecx)
    jmp    jump_305a5
  jump_3059d:
    cmp    $0x40,%dl
    jne    jump_305a5
    movb   $0xa,(%ecx)
  jump_305a5:
    mov    0x1(%ecx),%bl
    inc    %ecx
    inc    %esi
    test   %bl,%bl
    jne    jump_3057b
    jmp    jump_30755
  jump_305b3:
    mov    $data_91b32,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_30605
    mov    0x76(%ebp),%edx
    mov    0x76(%ebp),%eax
    mov    0x10(%edx),%edx
    mov    0x8(%eax),%edi
    sub    %edi,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    0x42(%ebp),%edx
    mov    %ax,0x13(%edx)
    mov    0x76(%ebp),%eax
    mov    0x14(%eax),%edx
    mov    0xc(%eax),%ebx
    sub    $0x32,%edx
    sub    %ebx,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    0x42(%ebp),%edx
    mov    %ax,0x15(%edx)
    jmp    jump_30755
  jump_30605:
    mov    $data_91b3c,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_30676
    lea    0xa(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_91b41
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_7742d
    add    $0x10,%esp
    mov    $data_91b47,%edx
    lea    0xa(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_30652
    mov    0x42(%ebp),%eax
    movl   $data_10deb6,0xb(%eax)
    jmp    jump_30755
  jump_30652:
    mov    $data_91b4d,%edx
    lea    0xa(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_30755
    mov    0x42(%ebp),%eax
    movl   $data_10de96,0xb(%eax)
    jmp    jump_30755
  jump_30676:
    mov    $data_91b53,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_30731
    xor    %ecx,%ecx
    imul   $0xa,%ecx,%ebx
    lea    0x32(%ebp),%eax
    push   %eax
    lea    0x28(%ebp),%eax
    push   %eax
    lea    0x1e(%ebp),%eax
    push   %eax
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0xa(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    mov    $data_91b59,%eax
    push   %eax
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_7742d
    lea    -0x1(%eax),%esi
    lea    0xa(%ebp),%eax
    add    $0x20,%esp
    add    %eax,%ebx
    jmp    jump_30714
  jump_306c7:
    mov    $data_91b71,%edx
    mov    %ebx,%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_306e0
    mov    0x42(%ebp),%eax
    orb    $0x1,0xf(%eax)
    jmp    jump_30710
  jump_306e0:
    mov    $data_91b77,%edx
    mov    %ebx,%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_306f9
    mov    0x42(%ebp),%eax
    orb    $0x20,0xf(%eax)
    jmp    jump_30710
  jump_306f9:
    mov    $data_91b7c,%edx
    mov    %ebx,%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_30710
    mov    0x42(%ebp),%eax
    orb    $0x10,0xf(%eax)
  jump_30710:
    inc    %ecx
    add    $0xa,%ebx
  jump_30714:
    cmp    %esi,%ecx
    jge    jump_30755
    mov    $data_91b6b,%edx
    mov    %ebx,%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_306c7
    mov    0x42(%ebp),%eax
    orb    $0x2,0xf(%eax)
    jmp    jump_30710
  jump_30731:
    mov    $data_91b81,%edx
    lea    -0x32(%ebp),%eax
    call   func_7763a
    test   %eax,%eax
    jne    jump_30755
    mov    0x42(%ebp),%eax
    movl   $0xffffffff,0x17(%eax)
    mov    0x76(%ebp),%eax
    incl   0xdab(%eax)
  jump_30755:
    cmpl   $0x2,0x6e(%ebp)
    jne    jump_30043
  jump_3075f:
    mov    0x3e(%ebp),%eax
    call   func_7744e
    lea    0x82(%ebp),%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_30774:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x80,%esp
    mov    %eax,0x74(%esp)
    push   $0xf2
    lea    0x4(%eax),%esi
    push   %esi
    call   func_5e9d0
    add    $0x8,%esp
    mov    0x74(%esp),%edx
    xor    %eax,%eax
    mov    0x18(%edx),%ax
    cmp    $0xffff,%eax
    je     jump_307ce
    push   $0x0
    mov    0x1c(%edx),%edx
    push   $0x0
    sar    $0x10,%edx
    push   %edx
    xor    %edx,%edx
    mov    data_ffea0(,%eax,2),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5cb3c
    add    $0x14,%esp
  jump_307ce:
    mov    0x74(%esp),%edx
    mov    $data_10ae70,%eax
    xor    %edi,%edi
    add    $0x4,%edx
    xor    %esi,%esi
    call   func_552cc
    xor    %eax,%eax
    xor    %edx,%edx
    jmp    jump_307ed
  jump_307e9:
    add    $0x4,%edx
    inc    %eax
  jump_307ed:
    mov    0x74(%esp),%ebx
    mov    0x69(%ebx),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_30815
    mov    0x74(%esp),%ebx
    mov    0x67(%ebx),%ebx
    mov    (%edx,%ebx,1),%ebx
    cmpl   $0xffffffff,0x35(%ebx)
    jne    jump_307e9
    add    $0x4,%esi
    inc    %edi
    mov    %eax,-0x4(%esp,%esi,1)
    jmp    jump_307e9
  jump_30815:
    mov    0x74(%esp),%esi
    mov    0x74(%esp),%ebx
    mov    0x8(%esi),%esi
    mov    0x8(%ebx),%ebx
    add    $0x8,%esi
    add    $0x147,%ebx
    test   %edi,%edi
    jle    jump_3088f
    mov    %edi,%ecx
    shl    $0x2,%edi
    xor    %ebp,%ebp
    mov    %edi,0x68(%esp)
  jump_3083b:
    mov    0x74(%esp),%edx
    mov    (%esp,%ebp,1),%eax
    mov    0x67(%edx),%edx
    mov    (%edx,%eax,4),%edi
    mov    0x74(%esp),%eax
    mov    %esi,0x8(%edi)
    mov    0xc(%eax),%eax
    add    $0xd9,%eax
    mov    %eax,0xc(%edi)
    mov    0x74(%esp),%eax
    mov    0xc(%eax),%eax
    mov    %ebx,%edx
    add    $0xf7,%eax
    sub    %esi,%edx
    mov    %eax,0x14(%edi)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    add    %eax,%esi
    add    $0x4,%edi
    cmp    %ebx,%esi
    jle    jump_3087f
    mov    %ebx,%esi
  jump_3087f:
    dec    %ecx
    add    $0x4,%ebp
    mov    %esi,0xc(%edi)
    mov    0x68(%esp),%edi
    inc    %esi
    cmp    %edi,%ebp
    jl     jump_3083b
  jump_3088f:
    mov    0x74(%esp),%esi
    lea    0x50(%esp),%edi
    lea    0x4(%esi),%esi
    mov    0x74(%esp),%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x8(%eax),%eax
    add    $0xa,%eax
    mov    %eax,0x54(%esp)
    mov    0x74(%esp),%eax
    mov    0xc(%eax),%eax
    add    $0xa,%eax
    mov    %eax,0x58(%esp)
    mov    0x74(%esp),%eax
    mov    0x8(%eax),%eax
    add    $0x145,%eax
    mov    %eax,0x5c(%esp)
    mov    0x74(%esp),%eax
    mov    0xc(%eax),%eax
    add    $0xcf,%eax
    mov    %eax,0x60(%esp)
    mov    0x74(%esp),%eax
    xor    %edx,%edx
    mov    0xda7(%eax),%ebx
    mov    %edx,0x70(%esp)
    test   %ebx,%ebx
    jle    jump_30923
  jump_308ef:
    mov    0x74(%esp),%ecx
    mov    0x70(%esp),%ebx
    cmp    0xda3(%ecx),%ebx
    jge    jump_30923
    cmpl   $0xffffffff,0xcac(%eax)
    jne    jump_30909
    inc    %edx
  jump_30909:
    mov    0x70(%esp),%ecx
    mov    0x74(%esp),%ebx
    add    $0x1b,%eax
    inc    %ecx
    mov    0xda7(%ebx),%esi
    mov    %ecx,0x70(%esp)
    cmp    %esi,%edx
    jl     jump_308ef
  jump_30923:
    mov    0x70(%esp),%edx
    xor    %ebp,%ebp
    lea    0x0(,%edx,8),%eax
    mov    %ebp,0x6c(%esp)
    sub    %edx,%eax
    mov    0x74(%esp),%ebp
    shl    $0x2,%eax
    add    $0xc95,%ebp
    sub    %edx,%eax
    add    %eax,%ebp
    mov    %edx,%eax
    mov    0x74(%esp),%edx
    cmp    0xda3(%edx),%eax
    jge    jump_30a72
  jump_30959:
    cmpl   $0xffffffff,0x6c(%esp)
    je     jump_30a72
    mov    0x17(%ebp),%eax
    mov    %eax,0x6c(%esp)
    mov    0x0(%ebp),%ah
    test   %ah,%ah
    jne    jump_309b8
    mov    0x13(%ebp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x11(%ebp),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    xor    %eax,%eax
    mov    0x1(%ebp),%dx
    mov    0x3(%ebp),%ax
    mov    data_ffea0(,%edx,2),%dx
    push   %eax
    mov    $data_12fc20,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    lea    0x60(%esp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_30a54
  jump_309b8:
    cmp    $0x1,%ah
    jne    jump_30a3e
    mov    0xf(%ebp),%bl
    xor    %edx,%edx
    test   $0x2,%bl
    jne    jump_309dd
    mov    0x5c(%esp),%eax
    sub    0x54(%esp),%eax
    mov    0x11(%ebp),%edx
    sar    $0x10,%edx
    sub    %edx,%eax
    mov    %eax,%edx
  jump_309dd:
    push   %edx
    mov    0x13(%ebp),%ebx
    mov    0x11(%ebp),%eax
    mov    0x5(%ebp),%ecx
    mov    0xf(%ebp),%si
    push   $0xff
    mov    %si,0x80(%esp)
    mov    0x9(%ebp),%si
    sar    $0x10,%ebx
    mov    %si,0x84(%esp)
    sar    $0x10,%eax
    mov    0x82(%esp),%edx
    mov    %eax,0x6c(%esp)
    sar    $0x10,%edx
    mov    0xb(%ebp),%eax
    push   %edx
    mov    0x82(%esp),%edx
    lea    0x5c(%esp),%esi
    sar    $0x10,%edx
    lea    0x8(%eax),%edi
    push   %edx
    mov    0x74(%esp),%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    jmp    jump_30a54
  jump_30a3e:
    cmp    $0x2,%ah
    je     jump_30a54
    mov    $0x245,%ebx
    mov    $data_91b89,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_30a54:
    mov    0x70(%esp),%esi
    mov    0x74(%esp),%edx
    add    $0x1b,%ebp
    inc    %esi
    mov    0xda3(%edx),%edi
    mov    %esi,0x70(%esp)
    cmp    %edi,%esi
    jl     jump_30959
  jump_30a72:
    mov    0x74(%esp),%eax
    xor    %edx,%edx
    call   func_2d218
    add    $0x80,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_30a90:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x84,%esp
    mov    %eax,%ebp
    mov    $0x9,%esi
    mov    %edx,0x70(%esp)
    mov    %esi,0x48(%esp)
    test   %ecx,%ecx
    je     jump_30ac1
    cmp    $0x1,%ebx
    je     jump_30ab7
    cmpl   $0xffffffff,0x8(%edx)
    je     jump_30ac1
  jump_30ab7:
    movl   $0xf3,0x48(%esp)
    jmp    jump_30ae7
  jump_30ac1:
    mov    0x70(%esp),%eax
    mov    0x8(%eax),%edx
    cmp    $0xffffffff,%edx
    je     jump_30ae7
    mov    0x70(%esp),%ebx
    lea    0x0(,%edx,4),%eax
    add    %ebx,%eax
    mov    0x28(%eax),%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0x48(%esp)
  jump_30ae7:
    mov    0x70(%esp),%eax
    mov    0x6c(%eax),%esi
    push   %esi
    push   $data_91b98
    lea    0x8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    mov    %esp,%ecx
    mov    $0x5,%ebx
    push   $0x0
    mov    $data_10debe,%edi
    mov    0x4a(%esp),%eax
    push   $0xff
    sar    $0x10,%eax
    mov    %ebx,%edx
    push   %eax
    mov    %ebp,%esi
    mov    %eax,0x50(%esp)
    push   $0x0
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    0x70(%esp),%eax
    cmpl   $0xffffffff,0x8(%eax)
    jne    jump_30b7e
    mov    $0x10,%eax
    call   func_1cea8
    push   $0x0
    mov    0x48(%esp),%ecx
    push   $0xff
    mov    $0x5,%ebx
    mov    $0x1e,%edx
    push   %ecx
    mov    $data_10debe,%edi
    mov    %ebp,%esi
    push   $0x0
    mov    %eax,%ecx
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    jmp    jump_3114e
  jump_30b7e:
    mov    data_ffee0,%ax
    mov    %eax,0x80(%esp)
    mov    0x70(%esp),%eax
    mov    0x8(%eax),%eax
    mov    0x70(%esp),%ebx
    shl    $0x2,%eax
    add    %ebx,%eax
    mov    0xc(%eax),%edx
    mov    0x28(%eax),%eax
    mov    %eax,0x74(%esp)
    mov    $0x19,%ecx
    mov    0x72(%esp),%eax
    mov    %edx,0x3c(%esp)
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    $data_10debe,%edi
    mov    0x84(%esp),%dx
    push   $0x5
    mov    $data_12fc20,%eax
    mov    0x44(%esp),%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    mov    %ebp,%esi
    call   func_53f40
    mov    0x3c(%esp),%edx
    mov    $data_1050a4,%ecx
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0xff
    mov    0x4c(%esp),%esi
    lea    0x0(,%edx,4),%eax
    push   %esi
    mov    $0x5,%ebx
    add    %edx,%eax
    push   $0x0
    shl    $0x2,%eax
    mov    $0x2d,%edx
    add    %eax,%ecx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    mov    0x70(%esp),%eax
    mov    (%eax),%edi
    push   %edi
    mov    $0x11,%eax
    call   func_1cea8
    push   %eax
    lea    0x8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    push   $0x0
    mov    %ebp,%esi
    lea    0x4(%esp),%ecx
    push   $0xff
    mov    0x4c(%esp),%eax
    mov    $0x14,%ebx
    push   %eax
    mov    $0x2d,%edx
    mov    $data_10debe,%edi
    push   $0x0
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    0x70(%esp),%eax
    mov    0x70(%eax),%ax
    xor    %al,%al
    and    $0xfe,%ah
    and    $0xffff,%eax
    sar    $0x9,%eax
    lea    0x50(%eax),%edx
    mov    0x70(%esp),%eax
    mov    0x70(%eax),%ax
    and    $0x1e0,%eax
    mov    %eax,%ecx
    mov    0x70(%esp),%eax
    mov    0x70(%eax),%ax
    xor    %ah,%ah
    xor    %ebx,%ebx
    and    $0x1f,%al
    mov    %ax,%bx
    mov    0x70(%esp),%eax
    mov    0x72(%eax),%ax
    and    $0xffff,%ecx
    xor    %al,%al
    sar    $0x5,%ecx
    and    $0xf8,%ah
    and    $0xffff,%eax
    sar    $0xb,%eax
    mov    %eax,0x50(%esp)
    mov    $0x12,%eax
    mov    0x50(%esp),%esi
    call   func_1cea8
    mov    %eax,0x40(%esp)
    test   %esi,%esi
    jne    jump_30ce9
    movl   $0xc,0x50(%esp)
    jmp    jump_30d11
  jump_30ce9:
    cmp    $0xc,%esi
    jne    jump_30cfa
    mov    $0x13,%eax
    call   func_1cea8
    jmp    jump_30d0d
  jump_30cfa:
    jle    jump_30d11
    mov    $0x13,%eax
    sub    $0xc,%esi
    call   func_1cea8
    mov    %esi,0x50(%esp)
  jump_30d0d:
    mov    %eax,0x40(%esp)
  jump_30d11:
    mov    0x70(%esp),%eax
    mov    0x72(%eax),%ax
    and    $0x7e0,%eax
    push   %edx
    push   %ebx
    and    $0xffff,%eax
    push   %ecx
    sar    $0x5,%eax
    push   $data_91b9c
    mov    %eax,0x44(%esp)
    lea    0x10(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x14,%esp
    mov    $data_10debe,%edi
    mov    %ebp,%esi
    push   $0x0
    mov    $0x2d,%edx
    mov    0x4a(%esp),%eax
    push   $0xff
    sar    $0x10,%eax
    mov    $0x32,%ebx
    push   %eax
    lea    0xc(%esp),%ecx
    mov    %eax,0x44(%esp)
    push   $0x0
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    0x40(%esp),%edx
    push   %edx
    mov    0x38(%esp),%ebx
    push   %ebx
    mov    0x58(%esp),%ecx
    push   %ecx
    push   $data_91ba5
    lea    0x10(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x14,%esp
    mov    $data_10debe,%edi
    mov    %ebp,%esi
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0xff
    mov    0x40(%esp),%esi
    push   %esi
    mov    $0x2d,%edx
    mov    $0x41,%ebx
    push   $0x0
    lea    0x10(%esp),%ecx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_d8da0
    push   $0x1e
    push   $0x96
    mov    0x58(%esp),%edi
    xor    %edx,%edx
    push   %edi
    mov    $data_12fc20,%eax
    mov    data_ffef4,%dx
    call   func_1b084
    push   %eax
    push   %ebp
    call   func_5d631
    add    $0x28,%esp
    mov    0x72(%esp),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    $0x96,%ecx
    mov    data_ffef2,%dx
    push   $0x1e
    mov    $data_12fc20,%eax
    mov    $0x3,%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_53f40
    mov    data_ffef2,%ax
    mov    %ebp,%esi
    mov    %eax,0x78(%esp)
    mov    $0xc8,%eax
    mov    $0x14,%edx
    mov    %eax,0x4c(%esp)
    mov    %edx,%eax
    mov    $data_10de9e,%edi
    call   func_1cea8
    push   $0x0
    mov    0x3c(%esp),%ebx
    mov    %edx,0x64(%esp)
    push   $0xff
    mov    $0xc8,%edx
    mov    %eax,%ecx
    push   %ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $data_10de96,%eax
    push   $0x0
    mov    $0x5,%ebx
    xor    %edi,%edi
    call   func_2b8a8
    jmp    jump_30e8f
  jump_30e8e:
    inc    %edi
  jump_30e8f:
    mov    0x70(%esp),%eax
    movswl %di,%esi
    cmp    0x60(%eax),%esi
    jge    jump_30ef8
    mov    0x72(%esp),%eax
    mov    0x4c(%esp),%ecx
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x64(%esp),%eax
    mov    0x7c(%esp),%dx
    push   %eax
    mov    $data_12fc20,%eax
    mov    $0x5,%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_53f40
    mov    $0x9,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x8,0x4c(%esp)
    cmp    $0x8,%edx
    jne    jump_30e8e
    mov    0x60(%esp),%esi
    mov    $0xc8,%ecx
    add    %edx,%esi
    mov    %ecx,0x4c(%esp)
    mov    %esi,0x60(%esp)
    jmp    jump_30e8e
  jump_30ef8:
    mov    $0x118,%ebx
    mov    $0x14,%ecx
    mov    $0x15,%eax
    mov    0x46(%esp),%edx
    mov    $data_10de9e,%edi
    call   func_1cea8
    mov    %ebp,%esi
    push   $0x0
    mov    %ebx,0x68(%esp)
    mov    %ecx,0x60(%esp)
    sar    $0x10,%edx
    push   $0xff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0x5,%ebx
    push   %edx
    mov    %eax,%ecx
    mov    $data_10de96,%eax
    push   $0x0
    mov    $0x118,%edx
    xor    %edi,%edi
    call   func_2b8a8
    jmp    jump_30f4c
  jump_30f4b:
    inc    %edi
  jump_30f4c:
    mov    0x70(%esp),%eax
    movswl %di,%esi
    cmp    0x64(%eax),%esi
    jge    jump_30fb5
    mov    0x72(%esp),%eax
    mov    0x64(%esp),%ecx
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x60(%esp),%eax
    mov    0x7c(%esp),%dx
    push   %eax
    mov    $data_12fc20,%eax
    mov    $0x6,%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_53f40
    mov    $0x9,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x8,0x64(%esp)
    cmp    $0x8,%edx
    jne    jump_30f4b
    mov    0x5c(%esp),%esi
    mov    $0x118,%ecx
    add    %edx,%esi
    mov    %ecx,0x64(%esp)
    mov    %esi,0x5c(%esp)
    jmp    jump_30f4b
  jump_30fb5:
    mov    $0x168,%ebx
    mov    $0x14,%ecx
    mov    0x46(%esp),%edx
    mov    $data_10de9e,%edi
    mov    0x68(%eax),%eax
    mov    %ebp,%esi
    sar    $0x2,%eax
    mov    %ebx,0x68(%esp)
    mov    %eax,0x54(%esp)
    mov    $0x16,%eax
    mov    %ecx,0x58(%esp)
    call   func_1cea8
    push   $0x0
    sar    $0x10,%edx
    push   $0xff
    mov    $0x5,%ebx
    mov    %eax,%ecx
    push   %edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $data_10de96,%eax
    push   $0x0
    mov    $0x168,%edx
    xor    %edi,%edi
    call   func_2b8a8
    jmp    jump_31013
  jump_31012:
    inc    %edi
  jump_31013:
    mov    0x54(%esp),%eax
    movswl %di,%esi
    cmp    %eax,%esi
    jge    jump_3107b
    mov    0x72(%esp),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x5c(%esp),%ebx
    mov    0x7c(%esp),%dx
    push   %ebx
    mov    $data_12fc20,%eax
    mov    0x70(%esp),%ecx
    call   func_1b084
    mov    $0x7,%ebx
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_53f40
    mov    $0x9,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x8,0x68(%esp)
    cmp    $0x8,%edx
    jne    jump_31012
    mov    0x58(%esp),%eax
    mov    $0x168,%esi
    add    %edx,%eax
    mov    %esi,0x68(%esp)
    mov    %eax,0x58(%esp)
    jmp    jump_31012
  jump_3107b:
    movl   $0x5,0x6c(%esp)
    xor    %edx,%edx
    mov    $0x1cc,%esi
    mov    %dx,0x7c(%esp)
    jmp    jump_310e4
  jump_31091:
    cmp    $0x2,%ecx
    jne    jump_3109b
    mov    $0x8,%ebx
  jump_3109b:
    cmp    $0xffffffff,%ebx
    je     jump_310c4
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffef2,%dx
    call   func_1b084
    mov    0x6c(%esp),%edx
    push   %edx
    push   %esi
    push   %ebx
    push   %eax
    push   %ebp
    call   func_5cb3c
    add    $0x14,%esp
  jump_310c4:
    add    $0x39,%esi
    cmp    $0x258,%esi
    jle    jump_310df
    mov    0x6c(%esp),%ebx
    add    $0x1b,%ebx
    mov    $0x1cc,%esi
    mov    %ebx,0x6c(%esp)
  jump_310df:
    incw   0x7c(%esp)
  jump_310e4:
    mov    0x7a(%esp),%eax
    mov    0x70(%esp),%edx
    sar    $0x10,%eax
    cmp    0x4(%edx),%eax
    jge    jump_3114e
    cmp    0x8(%edx),%eax
    je     jump_310df
    shl    $0x2,%eax
    lea    (%edx,%eax,1),%edi
    cmpl   $0x0,0x44(%edi)
    je     jump_310df
    mov    0x26(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x70(%esp),%edx
    mov    %esi,%ecx
    push   %edx
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    0x88(%esp),%dx
    mov    0xc(%edi),%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_53f40
    mov    0x44(%edi),%ecx
    mov    $0xffffffff,%ebx
    cmp    $0x3,%ecx
    jne    jump_31091
    mov    $0x9,%ebx
    jmp    jump_3109b
  jump_3114e:
    add    $0x84,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_31158:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%ebp
    mov    %edx,0x10(%esp)
    mov    $0x9,%edx
    test   %ecx,%ecx
    je     jump_31172
    mov    $0xf3,%edx
  jump_31172:
    mov    0x10(%esp),%ecx
    mov    0xdc(%ecx),%ebx
    push   %ebx
    push   $data_91bb2
    lea    0x8(%esp),%ecx
    push   %ecx
    mov    $data_10debe,%edi
    mov    %ebp,%esi
    call   func_76d09
    add    $0xc,%esp
    movswl %dx,%edx
    mov    $0x5,%ebx
    push   $0x0
    lea    0x4(%esp),%ecx
    mov    $data_10deb6,%eax
    push   $0xff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %edx
    mov    $data_10debe,%edi
    mov    %edx,0x18(%esp)
    push   $0x0
    mov    %ebx,%edx
    mov    %ebp,%esi
    call   func_2b8a8
    push   $0x226
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0xff
    mov    0x14(%esp),%esi
    mov    0x18(%esp),%ecx
    push   %esi
    mov    $0x5,%ebx
    mov    $0x1e,%edx
    push   $0x0
    mov    $data_10deb6,%eax
    add    $0x14,%ecx
    call   func_2b8a8
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_31200:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_95e88,0xa7(%eax)
    call   func_2c8e4
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_3121c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_3123b
    mov    $data_95e74,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_3123b:
    mov    $0x1,%edx
    movl   $data_95e88,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_3125b
    call   func_76d64
  jump_3125b:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31268:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x144,%esp
    mov    %eax,%ebp
    mov    %dx,0x140(%esp)
    mov    %ebx,0x13c(%esp)
    mov    %ecx,0x138(%esp)
    cmp    $0x3,%dx
    jb     jump_315fa
    jbe    jump_313e0
    cmp    $0x1c01,%dx
    je     jump_31429
  jump_312a4:
    mov    0x13e(%esp),%edx
    mov    0x138(%esp),%ecx
    mov    0x13c(%esp),%ebx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2f424
    mov    %eax,%ecx
    mov    %ecx,%eax
    add    $0x144,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_312d1:
    mov    data_10f096,%eax
    sar    $0x10,%eax
    mov    $data_91bb6,%ecx
    cmp    $0x2,%eax
    jne    jump_312ec
    movb   $0x1,0xaf(%ebp)
    jmp    jump_3130b
  jump_312ec:
    cmp    $0x4,%eax
    jne    jump_312ff
    mov    $data_91bbe,%ecx
    movb   $0x0,0xaf(%ebp)
    jmp    jump_3130b
  jump_312ff:
    mov    $data_91bc6,%ecx
    movb   $0x2,0xaf(%ebp)
  jump_3130b:
    mov    $data_91bcd,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    0xaf(%ebp),%bl
    mov    %eax,0xab(%ebp)
    cmp    $0x2,%bl
    jne    jump_3134f
    movw   $0x3c,0x8c9(%eax)
    mov    $func_31158,%edx
    mov    0xab(%ebp),%eax
    call   func_2f1c8
    mov    %ebp,%eax
    call   func_317d0
    jmp    jump_3136f
  jump_3134f:
    movw   $0x55,0x8c9(%eax)
    mov    $func_30a90,%edx
    mov    0xab(%ebp),%eax
    call   func_2f1c8
    mov    %ebp,%eax
    call   func_316a8
  jump_3136f:
    mov    0x13e(%esp),%edx
    lea    0x4f(%ebp),%edi
    mov    %ecx,%esi
    mov    0x13c(%esp),%ebx
    push   %edi
  jump_31383:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3139b
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_31383
  jump_3139b:
    pop    %edi
    mov    %ecx,%esi
    mov    0xab(%ebp),%edi
    sar    $0x10,%edx
    add    $0x4f,%edi
    mov    0x138(%esp),%ecx
    push   %edi
  jump_313b2:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_313ca
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_313b2
  jump_313ca:
    pop    %edi
    mov    %ebp,%eax
    call   func_2f424
  jump_313d2:
    xor    %ecx,%ecx
    mov    %ecx,%eax
    add    $0x144,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_313e0:
    cmp    $0x31,%ebx
    jl     jump_313d2
    cmp    $0x39,%ebx
    jg     jump_313d2
    mov    $0x9,%eax
    mov    0xaf(%ebp),%dh
    sub    $0x30,%ebx
    cmp    $0x1,%dh
    jne    jump_31402
    mov    $0xa,%eax
  jump_31402:
    cmp    %eax,%ebx
    jge    jump_313d2
    mov    $0x1c01,%edx
    mov    0xa7(%ebp),%esi
    mov    %ebp,%eax
    xor    %ecx,%ecx
    call   *0x8(%esi)
    mov    $0xffffffff,%ecx
    mov    %ecx,%eax
    add    $0x144,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_31429:
    xor    %edx,%edx
    mov    0xab(%eax),%eax
    mov    0x13c(%esp),%dx
    call   func_2ed14
    mov    0x6c(%eax),%edx
    push   %edx
    push   $data_91bd6
    mov    %eax,%esi
    lea    0x120(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    mov    %esp,%eax
    call   func_1bb78
    mov    0xaf(%ebp),%ah
    cmp    $0x1,%ah
    jne    jump_3148f
    lea    0x118(%esp),%eax
    mov    $0x3,%edx
    call   func_54048
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    $data_10ae70,%eax
    call   func_56b60
    jmp    jump_315e0
  jump_3148f:
    test   %ah,%ah
    jne    jump_314dc
    cmpl   $0xffffffff,0x8(%esi)
    je     jump_315e0
    lea    0x118(%esp),%eax
    mov    $0x1,%esi
    mov    $0x1,%ebx
    call   func_53fb0
    xor    %ecx,%ecx
    mov    %si,data_10f5c8
    xor    %eax,%eax
    mov    %ebx,%edx
    mov    %ax,data_10f5a6
    mov    $data_10ae70,%eax
    mov    %si,data_10f5c6
    call   func_56b60
    jmp    jump_315e0
  jump_314dc:
    lea    0x0(,%ebx,8),%eax
    sub    %ebx,%eax
    add    $0x9c0,%ebp
    shl    $0x5,%eax
    add    %eax,%ebp
    lea    0x118(%esp),%edi
    mov    %ebp,%esi
    mov    $0x3,%edx
    push   %edi
  jump_314ff:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_31517
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_314ff
  jump_31517:
    pop    %edi
    mov    $data_91bdf,%esi
    lea    0x118(%esp),%edi
    xor    %ebx,%ebx
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_3152f:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_31547
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3152f
  jump_31547:
    pop    %edi
    lea    0x118(%esp),%eax
    lea    0x118(%esp),%edi
    call   func_53fb0
    xor    %ecx,%ecx
    mov    $data_10ae70,%eax
    mov    %ebp,%esi
    call   func_56b60
    xor    %eax,%eax
    mov    $0x3f800000,%ebx
    call   func_78303
    mov    data_12fc1c,%eax
    mov    %eax,data_96bbc
    mov    %ebx,data_12fc1c
    push   %edi
  jump_31586:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3159e
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_31586
  jump_3159e:
    pop    %edi
    mov    $data_91be4,%esi
    lea    0x118(%esp),%edi
    lea    0x118(%esp),%edx
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_315bb:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_315d3
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_315bb
  jump_315d3:
    pop    %edi
    xor    %ebx,%ebx
    mov    $data_10ae70,%eax
    call   func_59988
  jump_315e0:
    mov    %esp,%eax
    xor    %edx,%edx
    mov    $0xffffffff,%ecx
    call   func_1bbc8
    mov    %ecx,%eax
    add    $0x144,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_315fa:
    cmp    $0x1,%dx
    je     jump_312d1
    jmp    jump_312a4


/*----------------------------------------------------------------*/
func_3160c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    $0x17,%eax
    call   func_1cea8
    mov    %eax,(%esp)
    mov    0xaf(%ebp),%ah
    mov    $0x10,%edx
    cmp    $0x1,%ah
    jne    jump_31644
    mov    $0x18,%eax
    mov    $0x73,%edx
    call   func_1cea8
    jmp    jump_31655
  jump_31644:
    cmp    $0x2,%ah
    jne    jump_31658
    mov    $0x19,%eax
    call   func_1cea8
    xor    %edx,%edx
  jump_31655:
    mov    %eax,(%esp)
  jump_31658:
    test   %edx,%edx
    je     jump_31669
    push   %edx
    lea    0x4(%ebp),%eax
    push   %eax
    call   func_5e9d0
    add    $0x8,%esp
  jump_31669:
    push   $0x0
    mov    0x4(%esp),%ecx
    mov    $0x4,%ebx
    push   $0xff
    mov    $data_10deb6,%eax
    mov    $data_10debe,%edi
    push   $0xffffffff
    lea    0x4(%ebp),%esi
    xor    %edx,%edx
    push   $0x3
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_2d218
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_316a8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x140,%esp
    mov    %eax,0x13c(%esp)
    mov    0xab(%eax),%eax
    mov    0x13c(%esp),%esi
    call   func_2ed4c
    mov    %esp,%eax
    xor    %edi,%edi
    call   func_1bb78
    add    $0xb0,%esi
    jmp    jump_31749
  jump_316de:
    movl   $0xffffffff,0x8(%esi)
  jump_316e5:
    mov    0x138(%esp),%eax
    mov    $0xffffffff,%ebx
    mov    %eax,0x6c(%ebp)
    mov    0x13c(%esp),%eax
    mov    %ebp,%edx
    xor    %ecx,%ecx
    mov    0xab(%eax),%eax
    call   func_2ea8c
    mov    0x13c(%esp),%eax
    mov    0xaf(%eax),%bl
    xor    %edx,%edx
    cmp    $0x1,%bl
    jne    jump_31723
    mov    $0x1,%edx
  jump_31723:
    mov    0x13c(%esp),%ebp
    mov    %edx,%ebx
    xor    %eax,%eax
    add    $0x74,%esi
    mov    %di,%ax
    mov    0xab(%ebp),%ebp
    mov    %eax,%edx
    mov    %ebp,%eax
    inc    %edi
    call   func_2ec50
    cmp    $0x14,%edi
    jge    jump_317b7
  jump_31749:
    lea    0x1(%edi),%eax
    push   %eax
    push   $data_91be9
    mov    %eax,0x140(%esp)
    lea    0x120(%esp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_76d09
    add    $0xc,%esp
    lea    0x118(%esp),%eax
    mov    %esi,%ebp
    call   func_78313
    test   %eax,%eax
    jne    jump_316de
    mov    $0x200,%ebx
    lea    0x118(%esp),%edx
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_1bbfc
    mov    $0x74,%ebx
    mov    %esp,%eax
    mov    %esi,%edx
    call   func_1bf94
    lea    0x72(%esi),%ebx
    mov    (%esp),%eax
    lea    0x70(%esi),%edx
    call   func_78986
    jmp    jump_316e5
  jump_317b7:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x140,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_317d0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,0x4(%esp)
    mov    0xab(%eax),%eax
    call   func_2ed4c
    xor    %edx,%edx
    mov    $data_91bf2,%eax
    mov    %esp,%esi
    call   func_1bb10
    push   %esi
    push   $data_91bff
    push   %eax
    mov    %eax,%ebp
    call   func_78071
    add    $0xc,%esp
    cmpl   $0x7,(%esp)
    jle    jump_3181e
    mov    $0x1ea,%ebx
    mov    $data_91c02,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3181e:
    mov    0x4(%esp),%esi
    mov    (%esp),%ecx
    xor    %ebx,%ebx
    add    $0x9c0,%esi
    mov    %ebx,0x8(%esp)
    test   %ecx,%ecx
    jle    jump_3188a
    lea    0x14(%esi),%edi
  jump_31838:
    push   %esi
    push   $data_91c11
    push   %ebp
    mov    %edi,%edx
    call   func_78071
    add    $0xc,%esp
    mov    %ebp,%eax
    mov    $0xffffffff,%ebx
    call   func_2fe58
    mov    0x4(%esp),%eax
    xor    %ecx,%ecx
    mov    %esi,%edx
    mov    0xab(%eax),%eax
    call   func_2ea8c
    mov    0x8(%esp),%eax
    inc    %eax
    add    $0xe0,%edi
    mov    %eax,0xdc(%esi)
    add    $0xe0,%esi
    mov    (%esp),%edx
    mov    %eax,0x8(%esp)
    cmp    %edx,%eax
    jl     jump_31838
  jump_3188a:
    mov    %ebp,%eax
    call   func_7744e
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_318a0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %dl,%bl
    xor    %edx,%edx
    mov    %ax,%dx
    lea    0x0(,%edx,2),%ecx
    mov    data_10032c,%edx
    xor    %esi,%esi
    mov    (%ecx,%edx,1),%dx
    mov    %dx,%si
    cmp    $0xffff,%esi
    je     jump_3192d
    xor    %edx,%edx
    mov    data_100330,%dx
    mov    data_100328,%ecx
    shl    $0x2,%edx
    add    %ecx,%edx
    mov    %ebx,%edi
    xor    %ebx,%ebx
    and    $0xff,%edi
    mov    %ax,%bx
    lea    0x0(,%esi,4),%eax
    shl    $0x10,%edi
    add    %ecx,%eax
    add    %edi,%ebx
    cmp    %edx,%eax
    jb     jump_31905
    jmp    jump_3192d
  jump_318fe:
    add    $0x4,%eax
    cmp    %edx,%eax
    jae    jump_3192d
  jump_31905:
    cmp    (%eax),%ebx
    jne    jump_318fe
    mov    data_100328,%esi
    sub    %esi,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    shl    $0x2,%edx
    sbb    %edx,%eax
    sar    $0x2,%eax
    and    $0xffff,%eax
    add    $0x102,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3192d:
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31934:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    data_100335,%ch
    mov    %eax,%esi
    mov    %ch,%cl
    mov    %esi,%edx
    mov    data_100324,%ebx
    shl    %cl,%edx
    mov    (%ebx),%dh
    inc    %ebx
    or     %dl,%dh
    mov    %ebx,data_100324
    mov    %dh,-0x1(%ebx)
    mov    data_100324,%dx
    sub    data_100338,%dx
    xor    %ebx,%ebx
    mov    %dx,%bx
    mov    data_100334,%al
    cmp    $0x100,%ebx
    jne    jump_31998
    mov    data_100338,%ebx
    movb   $0xff,(%ebx)
    mov    data_100324,%ebx
    mov    %ebx,data_100338
    lea    0x1(%ebx),%edx
    mov    %edx,data_100324
  jump_31998:
    xor    %ebx,%ebx
    mov    $0x8,%edx
    mov    %ch,%bl
    sub    %ebx,%edx
    and    $0xffff,%esi
    mov    %dl,%cl
    mov    $0x8,%bl
    sar    %cl,%esi
    sub    %ch,%bl
    mov    %esi,%edx
    sub    %bl,%al
    xor    %ch,%ch
    mov    data_100324,%ebx
    movzbl %al,%esi
    mov    %dl,(%ebx)
    cmp    $0x8,%esi
    jge    jump_319cb
    mov    %al,%ch
    jmp    jump_31a26
  jump_319cb:
    inc    %ebx
    mov    %ebx,data_100324
    mov    data_100338,%si
    mov    data_100324,%bx
    sub    %esi,%ebx
    and    $0xffff,%ebx
    cmp    $0x100,%ebx
    jne    jump_31a0c
    mov    data_100338,%ebx
    movb   $0xff,(%ebx)
    mov    data_100324,%ebx
    mov    %ebx,data_100338
    inc    %ebx
    mov    %ebx,data_100324
  jump_31a0c:
    xor    %ebx,%ebx
    mov    %al,%bl
    cmp    $0x8,%ebx
    jle    jump_31a26
    mov    data_100324,%ebx
    mov    %al,%ch
    shr    $0x8,%dx
    sub    $0x8,%ch
    mov    %dl,(%ebx)
  jump_31a26:
    mov    %ch,data_100335
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31a34:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    xor    %ebx,%ebx
    mov    data_100328,%ecx
    mov    data_100330,%bx
    mov    %dl,0x2(%ecx,%ebx,4)
    xor    %edx,%edx
    mov    %ax,(%ecx,%ebx,4)
    mov    %ax,%dx
    mov    data_10032c,%ebx
    add    %edx,%edx
    add    %ebx,%edx
    xor    %ebx,%ebx
    mov    (%edx),%bx
    cmp    $0xffff,%ebx
    jne    jump_31a74
    mov    data_100330,%bx
    mov    %bx,(%edx)
  jump_31a74:
    and    $0xffff,%eax
    call   func_31934
    mov    data_100330,%dx
    inc    %edx
    xor    %eax,%eax
    mov    %dx,data_100330
    mov    %dx,%ax
    xor    %edx,%edx
    add    $0x102,%eax
    mov    data_100332,%dx
    cmp    %edx,%eax
    jle    jump_31b03
    cmp    $0x1000,%eax
    jle    jump_31aea
    mov    $0x100,%eax
    mov    $0x9,%dl
    mov    $0x200,%ecx
    mov    $0x2008,%ebx
    call   func_31934
    xor    %esi,%esi
    mov    data_10032c,%eax
    mov    %dl,data_100334
    mov    %cx,data_100332
    mov    $0xff,%edx
    mov    %si,data_100330
    call   func_76ec0
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_31aea:
    mov    %edx,%ebx
    mov    data_100334,%ah
    add    %edx,%ebx
    inc    %ah
    mov    %bx,data_100332
    mov    %ah,data_100334
  jump_31b03:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31b08:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    $0x9,%ah
    mov    $0x200,%edx
    mov    data_100324,%ebx
    mov    %ah,data_100334
    mov    %dx,data_100332
    movb   $0x8,(%ebx)
    xor    %dl,%dl
    inc    %ebx
    mov    %dl,data_100335
    mov    %ebx,data_100324
    mov    %ebx,data_100338
    lea    0x1(%ebx),%edx
    mov    $0x100,%eax
    mov    %edx,data_100324
    call   func_31934
    mov    data_10030c,%eax
    mov    (%eax),%al
    mov    $0x1,%esi
    xor    %ah,%ah
    jmp    jump_31b6a
  jump_31b61:
    inc    %esi
    cmp    $0x4b000,%esi
    jge    jump_31b99
  jump_31b6a:
    mov    data_10030c,%ebx
    mov    (%esi,%ebx,1),%bl
    xor    %ecx,%ecx
    mov    %bl,%cl
    xor    %ebx,%ebx
    mov    %ax,%bx
    mov    %ecx,%edx
    mov    %ebx,%eax
    call   func_318a0
    test   %ax,%ax
    jne    jump_31b61
    mov    %ecx,%edx
    mov    %ebx,%eax
    call   func_31a34
    xor    %ah,%ah
    mov    %cl,%al
    jmp    jump_31b61
  jump_31b99:
    and    $0xffff,%eax
    call   func_31934
    mov    $0x101,%eax
    call   func_31934
    mov    data_100324,%ax
    mov    data_100338,%bx
    mov    data_100335,%dh
    sub    %ebx,%eax
    test   %dh,%dh
    je     jump_31be1
    mov    data_100338,%ebx
    mov    %al,(%ebx)
    mov    data_100324,%ebx
    inc    %ebx
    mov    %ebx,data_100324
    movb   $0x0,(%ebx)
    inc    %ebx
    jmp    jump_31c0a
  jump_31be1:
    xor    %ebx,%ebx
    mov    %ax,%bx
    cmp    $0x1,%ebx
    jne    jump_31bf7
    mov    data_100338,%eax
    mov    %dh,(%eax)
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_31bf7:
    mov    data_100338,%eax
    dec    %bl
    mov    %bl,(%eax)
    mov    data_100324,%ebx
    inc    %ebx
    mov    %dh,-0x1(%ebx)
  jump_31c0a:
    mov    %ebx,data_100324
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31c18:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    data_100324,%ebp
    cmp    $0x9a6e8,%edx
    jl     jump_31e4a
    mov    $0x1df,%ebx
    push   %ebx
    mov    $0x27f,%edx
    push   %edx
    xor    %ecx,%ecx
    mov    %eax,data_10030c
    push   %ecx
    mov    %edx,data_100310
    mov    %ebx,data_100314
    push   %ecx
    mov    %ecx,data_10031c
    add    $0x4b000,%eax
    push   $data_10030c
    mov    %ecx,data_100318
    mov    %eax,0x28(%esp)
    call   *data_96bf0
    add    $0x14,%esp
    mov    0x14(%esp),%eax
    mov    %eax,data_100308
    mov    %eax,%edi
    add    $0x300,%eax
    xor    %esi,%esi
    mov    %eax,0x14(%esp)
  jump_31c8c:
    push   %edi
    push   %esi
    add    $0x3,%edi
    call   *data_96bf4
    inc    %esi
    add    $0x8,%esp
    cmp    $0x100,%esi
    jl     jump_31c8c
    mov    0x14(%esp),%eax
    mov    $0x493e0,%ebx
    mov    %eax,data_100320
    lea    0x493e0(%eax),%edx
    mov    $0x6,%ecx
    mov    %edx,0x14(%esp)
    xor    %edx,%edx
    mov    $data_91c14,%esi
    call   func_76ec0
    mov    0x14(%esp),%eax
    mov    data_100320,%ebp
    xor    %edx,%edx
    mov    %eax,data_100328
    mov    %dx,data_100330
    lea    0x4000(%eax),%ebx
    mov    $0xff,%edx
    mov    %ebx,0x14(%esp)
    mov    %ebx,%eax
    mov    %ebx,data_10032c
    mov    $0x2008,%ebx
    mov    %ebp,data_100324
    call   func_76ec0
    mov    data_100324,%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    data_100324,%ebp
    add    $0x6,%ebp
    movw   $0x280,0x0(%ebp)
    add    $0x2,%ebp
    movw   $0x1e0,0x0(%ebp)
    add    $0x2,%ebp
    movb   $0x87,0x0(%ebp)
    inc    %ebp
    movb   $0xff,0x0(%ebp)
    inc    %ebp
    xor    %esi,%esi
    movb   $0x0,0x0(%ebp)
    inc    %ebp
  jump_31d4d:
    mov    data_100308,%ebx
    mov    (%esi,%ebx,1),%bl
    and    $0xff,%ebx
    imul   $0xff,%ebx,%ebx
    mov    %ebx,%eax
    mov    %ebx,%edx
    mov    $0x3f,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    inc    %ebp
    mov    %eax,%ebx
    inc    %esi
    mov    %bl,-0x1(%ebp)
    cmp    $0x300,%esi
    jl     jump_31d4d
    movb   $0x2c,0x0(%ebp)
    inc    %ebp
    movw   $0x0,0x0(%ebp)
    add    $0x2,%ebp
    movw   $0x0,0x0(%ebp)
    add    $0x2,%ebp
    movw   $0x280,0x0(%ebp)
    add    $0x2,%ebp
    movw   $0x1e0,0x0(%ebp)
    add    $0x2,%ebp
    movb   $0x7,0x0(%ebp)
    inc    %ebp
    mov    %ebp,data_100324
    call   func_31b08
    mov    data_10033c,%esi
    push   %esi
    mov    data_100324,%ebp
    lea    0x4(%esp),%eax
    push   $data_91c1b
    movb   $0x3b,0x0(%ebp)
    inc    %ebp
    push   %eax
    mov    data_100320,%ecx
    mov    %ebp,data_100324
    call   func_76d09
    add    $0xc,%esp
    push   $0x1c0
    push   $0x262
    lea    0x8(%esp),%eax
    mov    %ebp,%ebx
    push   %eax
    sub    %ecx,%ebx
    call   func_777e2
    add    $0xc,%esp
    mov    data_100320,%edx
    mov    %eax,%esi
    call   func_77bf6
    mov    %esi,%eax
    xor    %ebp,%ebp
    call   func_77a71
    mov    data_10033c,%esi
    mov    %ebp,data_100324
    mov    %ebp,data_10032c
    mov    %ebp,data_100328
    mov    %ebp,data_100320
    mov    %ebp,data_10030c
    inc    %esi
    mov    %ebp,data_100308
    mov    %esi,data_10033c
  jump_31e4a:
    mov    data_100324,%ebp
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31e60:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    %edx,(%esp)
    test   %edx,%edx
    jl     jump_31e75
    test   %eax,%eax
    jne    jump_31e86
  jump_31e75:
    mov    $0x29,%ebx
    mov    $data_91c28,%edx
    xor    %eax,%eax
    call   func_26198
  jump_31e86:
    mov    $0x3e8,%edx
    cmp    (%esp),%edx
    jl     jump_31ec6
    jmp    jump_31ed0
  jump_31e92:
    mov    $data_91c34,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_31ea0:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_31eb8
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_31ea0
  jump_31eb8:
    pop    %edi
    add    $0x3e8,%edx
    cmp    (%esp),%edx
    jl     jump_31ec8
    jmp    jump_31ed0
  jump_31ec6:
    mov    %ebp,%edi
  jump_31ec8:
    cmp    $0xfa0,%edx
    jl     jump_31e92
  jump_31ed0:
    mov    (%esp),%eax
    mov    %eax,%edx
    mov    $0x64,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %eax,%edx
    mov    $0xa,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %edx,%esi
    shl    $0x2,%edx
    add    %esi,%edx
    mov    $data_9678c,%esi
    mov    %ebp,%edi
    add    %edx,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_31f04:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_31f1c
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_31f04
  jump_31f1c:
    pop    %edi
    mov    (%esp),%eax
    mov    %eax,%edx
    mov    $0xa,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %esi
    mov    %edx,%esi
    shl    $0x2,%edx
    add    %esi,%edx
    mov    $data_967be,%esi
    add    %edx,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_31f4a:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_31f62
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_31f4a
  jump_31f62:
    pop    %edi
    mov    (%esp),%eax
    mov    %eax,%edx
    mov    $0xa,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %edx,%esi
    shl    $0x2,%edx
    add    %esi,%edx
    mov    $data_967f0,%esi
    add    %edx,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_31f89:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_31fa1
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_31f89
  jump_31fa1:
    pop    %edi
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31fb0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%ebp
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f74(,%eax,2),%al
    mov    %al,%dl
    shl    $0x2,%dl
    add    $0x13,%dl
    cmp    $0xffffffff,%ecx
    jne    jump_31fe1
    mov    $0xf3,%dl
  jump_31fe1:
    mov    0xc(%esi),%eax
    sub    0x4(%esi),%eax
    sub    $0x10,%eax
    push   %eax
    mov    $data_10debe,%edi
    xor    %eax,%eax
    push   $0xff
    mov    %dl,%al
    mov    %ebp,%ecx
    push   %eax
    mov    $0x3,%ebx
    mov    $0x8,%edx
    push   $0x0
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_3201c:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_95f1c,0xa7(%eax)
    call   func_3207c
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_32038:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_32057
    mov    $data_95ed8,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_32057:
    mov    $0x1,%edx
    movl   $data_95f1c,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_32077
    call   func_76d64
  jump_32077:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3207c:
/*----------------------------------------------------------------*/
    movl   $0x0,0xab(%eax)
    movl   $0x0,0xaf(%eax)
    movl   $0x0,0xb3(%eax)
    movw   $0xffff,0xbb(%eax)
    movw   $0xffff,0xbd(%eax)
    movw   $0xffff,0xbf(%eax)
    ret


/*----------------------------------------------------------------*/
func_320b8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x44,%esp
    mov    %eax,%esi
    mov    %dx,-0x4(%ebp)
    mov    %ebx,%edi
    mov    %ecx,-0x8(%ebp)
    xor    %eax,%eax
    mov    data_104bea,%al
    mov    %eax,-0x14(%ebp)
    xor    %eax,%eax
    mov    data_968dd,%al
    mov    %eax,-0xc(%ebp)
    cmp    $0x4,%dx
    jb     jump_323f4
    cmp    $0x5,%dx
    jbe    jump_3237b
    cmp    $0xc,%dx
    jb     jump_3230d
    jbe    jump_3233a
    cmp    $0x1c01,%dx
    je     jump_323bd
    jmp    jump_3230d
  jump_32113:
    cmpl   $0x0,0xab(%esi)
    jne    jump_3214b
    mov    $0xd,%ebx
    mov    $data_91c38,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    call   func_56e18
    mov    %eax,0xab(%esi)
    test   %eax,%eax
    jne    jump_3214b
    mov    $0x7b,%ebx
    mov    $data_91c42,%edx
    call   func_26198
  jump_3214b:
    mov    0xab(%esi),%eax
    movl   $0x0,0xab(%eax)
    mov    0xab(%esi),%eax
    movw   $0x1d,0x8c9(%eax)
    mov    $func_31fb0,%edx
    mov    0xab(%esi),%eax
    call   func_2f1c8
    mov    0xab(%esi),%eax
    xor    %edx,%edx
    call   func_2e9cc
    mov    0xab(%esi),%eax
    movb   $0xf2,0xc6(%eax)
    cmpl   $0x0,0xaf(%esi)
    jne    jump_321cc
    mov    $0xd,%ebx
    mov    $data_91c50,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    call   func_56e18
    mov    %eax,0xaf(%esi)
    test   %eax,%eax
    jne    jump_321cc
    mov    $0x88,%ebx
    mov    $data_91c59,%edx
    call   func_26198
  jump_321cc:
    cmpl   $0x0,0xb3(%esi)
    jne    jump_32204
    mov    $0xd,%ebx
    mov    $data_91c67,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    call   func_56e18
    mov    %eax,0xb3(%esi)
    test   %eax,%eax
    jne    jump_32204
    mov    $0x8f,%ebx
    mov    $data_91c71,%edx
    call   func_26198
  jump_32204:
    mov    %esi,%eax
    call   func_32658
    mov    %esi,%eax
    xor    %edx,%edx
    call   func_32e84
    mov    data_968dd,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f74(,%eax,2),%al
    xor    %ah,%ah
    shl    $0x2,%eax
    mov    0xaf(%esi),%edx
    add    $0x13,%eax
    mov    $0xf,%ebx
    mov    %ax,0xb1(%edx)
    mov    $data_101dc4,%eax
    xor    %edx,%edx
    call   func_76ec0
    mov    -0xc(%ebp),%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    -0x14(%ebp),%edx
    mov    data_a315b(,%eax,2),%bl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    movl   $0x0,0xb7(%esi)
    add    $data_a2f72,%eax
    cmp    $0xe,%bl
    je     jump_322ca
    movsbl %bl,%edx
    lea    -0x44(%ebp),%ecx
    mov    %edx,-0x10(%ebp)
    mov    -0xe(%ebp),%edx
    mov    -0x10(%ebp),%ebx
    sar    $0x10,%edx
    movl   $0xffffffff,0xb7(%esi)
    call   func_44a2c
    lea    -0x44(%ebp),%edx
    movswl %ax,%ebx
    mov    %esi,%eax
    call   func_32b44
    mov    -0x10(%ebp),%edx
    mov    %esi,%eax
    call   func_32bdc
    jmp    jump_3230d
  jump_322ca:
    mov    0xbd(%esi),%edx
    sar    $0x10,%edx
    lea    -0x24(%ebp),%ebx
    mov    data_96840(,%edx,2),%ecx
    xor    %edx,%edx
    sar    $0x10,%ecx
    mov    data_968dd,%dl
    call   func_44238
    push   $0xffffffff
    mov    $0xffffffff,%ecx
    lea    -0x24(%ebp),%edx
    movswl %ax,%ebx
    mov    %esi,%eax
    call   func_32a48
    mov    $0x1d,%edx
    mov    %esi,%eax
    call   func_32c14
  jump_3230d:
    mov    -0x6(%ebp),%edx
    mov    -0x8(%ebp),%ecx
    mov    %edi,%ebx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2f424
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_32325:
    mov    -0x6(%ebp),%edx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2d258
  jump_32332:
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3233a:
    cmp    $0xae,%ebx
    jl     jump_3230d
    cmp    $0x147,%ebx
    jg     jump_3230d
    cmp    $0x145,%ecx
    jl     jump_3230d
    cmp    $0x1d8,%ecx
    jg     jump_3230d
    mov    $data_96824,%ebx
    mov    $0x5,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    call   func_56b60
    mov    $0xffffffff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3237b:
    cmp    $0xae,%ebx
    jl     jump_32332
    cmp    $0x147,%ebx
    jg     jump_32332
    cmp    $0x145,%ecx
    jl     jump_32332
    cmp    $0x1d8,%ecx
    jg     jump_32332
    mov    $data_10914c,%eax
    xor    %edx,%edx
    call   func_4fb90
    mov    %ecx,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_32714
    mov    $0xffffffff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_323bd:
    xor    %edx,%edx
    mov    0xab(%esi),%eax
    mov    %bx,%dx
    call   func_2eca4
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_32800
    cmpl   $0xffffffff,0xb7(%esi)
    jne    jump_323e9
    movl   $0x0,0xb7(%esi)
  jump_323e9:
    mov    $0xffffffff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_323f4:
    cmp    $0x1,%dx
    jb     jump_3230d
    jbe    jump_32113
    cmp    $0x2,%dx
    je     jump_32325
    jmp    jump_3230d


/*----------------------------------------------------------------*/
func_32414:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,0x14(%esp)
    mov    %esp,%edi
    mov    $data_d8668,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    cmpw   $0x0,0xc1(%eax)
    je     jump_32590
    mov    $0xae,%edx
    mov    $0x145,%ebx
    mov    $0x147,%ecx
    mov    $0x1d8,%esi
    push   $0xf2
    lea    0x4(%esp),%eax
    mov    %edx,0x8(%esp)
    mov    %ebx,0xc(%esp)
    push   %eax
    mov    %ecx,0x14(%esp)
    mov    %esi,0x18(%esp)
    call   func_5e9d0
    add    $0x8,%esp
    mov    %esp,%edx
    mov    $data_10ae70,%eax
    call   func_552cc
    xor    %ebx,%ebx
    mov    $data_91c7f,%edx
    mov    $data_10ae70,%eax
    call   func_56da8
    mov    data_ffef2,%ax
    mov    %eax,0x1c(%esp)
    mov    0x14(%esp),%eax
    mov    0xc1(%eax),%bx
    xor    %edi,%edi
    test   %bx,%bx
    jle    jump_32590
    jmp    jump_324eb
  jump_324af:
    mov    0x18(%esp),%eax
    push   %ebp
    xor    %edx,%edx
    mov    $0x3,%ebx
    mov    0x20(%esp),%dx
    push   %eax
    mov    $data_12fc20,%eax
    mov    %esi,%ecx
    call   func_1b084
    mov    %eax,%edx
    mov    $data_d8668,%eax
    call   func_53eb8
  jump_324d9:
    mov    0x14(%esp),%eax
    inc    %edi
    cmp    0xc1(%eax),%di
    jge    jump_32590
  jump_324eb:
    push   $0x0
    movswl %di,%esi
    push   $0x8000
    mov    data_96842(,%esi,2),%bx
    push   $0x8000
    mov    data_9682e(,%esi,2),%ax
    mov    data_96838(,%esi,2),%dx
    push   $0x0
    movswl %dx,%edx
    push   $data_d8da0
    movswl %ax,%esi
    push   %edx
    movswl %bx,%ebp
    push   %esi
    mov    %edx,0x34(%esp)
    mov    data_ffea0(,%ebp,2),%dx
    push   $0x0
    mov    $data_12fc20,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    push   $data_d8668
    call   func_5d631
    add    $0x28,%esp
    mov    0x14(%esp),%eax
    cmp    0xbf(%eax),%di
    jne    jump_324af
    push   %ebp
    mov    0x1c(%esp),%edx
    mov    $data_12fc20,%eax
    push   %edx
    xor    %edx,%edx
    mov    $0x4,%ebx
    mov    0x24(%esp),%dx
    mov    %esi,%ecx
    call   func_1b084
    mov    %eax,%edx
    mov    $data_d8668,%eax
    call   func_53eb8
    jmp    jump_324d9
  jump_32590:
    mov    $0x7,%ebx
    mov    $0x145,%ecx
    mov    $0xa5,%esi
    mov    $0x163,%edi
    push   $0xf2
    lea    0x4(%esp),%eax
    mov    %ebx,0x8(%esp)
    mov    %ecx,0xc(%esp)
    push   %eax
    mov    %esi,0x14(%esp)
    mov    %edi,0x18(%esp)
    call   func_5e9d0
    add    $0x8,%esp
    mov    %esp,%edx
    mov    $data_10ae70,%eax
    call   func_552cc
    mov    $0x1a,%eax
    mov    %esp,%esi
    call   func_1cea8
    push   $0x0
    mov    $0x2,%ebx
    mov    $data_10de9e,%edi
    push   $0xff
    mov    %ebx,%edx
    mov    %eax,%ecx
    push   $0xffffffff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    mov    $data_10de96,%eax
    lea    0x10(%esp),%esi
    call   func_2b8a8
    push   $0x0
    mov    $data_10debe,%edi
    mov    $0xd,%ebx
    push   $0xff
    mov    $0xa,%edx
    mov    data_d3660,%ecx
    push   $0xffffffff
    mov    $data_10deb6,%eax
    add    $0x1c,%ecx
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    0x14(%esp),%eax
    cmpw   $0x0,0x6b(%eax)
    je     jump_3264e
    xor    %edx,%edx
    call   func_2d218
  jump_3264e:
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32658:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    $0xa,%ebx
    movw   $0x0,0xc1(%eax)
    mov    $0xffffffff,%edx
    movw   $0x0,0xbf(%eax)
    mov    $data_96842,%eax
    call   func_76ec0
    mov    data_a3cf4,%bx
    xor    %edx,%edx
    test   %bx,%bx
    jle    jump_3270c
    jmp    jump_326a6
  jump_32699:
    mov    data_a3cf4,%cx
    inc    %edx
    cmp    %cx,%dx
    jge    jump_3270c
  jump_326a6:
    xor    %ecx,%ecx
    movswl %dx,%eax
    mov    data_104bea,%cl
    cmp    %ecx,%eax
    je     jump_32699
    xor    %ebx,%ebx
    mov    data_968dd,%bl
    cmp    %ebx,%eax
    je     jump_32699
    imul   $0x1ee,%eax,%edi
    cmpl   $0xffffffff,data_a2f75(%edi)
    je     jump_32699
    imul   $0x1ee,%ecx,%ecx
    cmpb   $0x0,data_a3132(%ecx,%eax,1)
    je     jump_32699
    imul   $0x1ee,%ebx,%ebx
    cmpb   $0x0,data_a3132(%ebx,%eax,1)
    je     jump_32699
    mov    0xc1(%esi),%ax
    movswl %ax,%ebx
    inc    %eax
    mov    %ax,0xc1(%esi)
    mov    %dx,data_96842(,%ebx,2)
    jmp    jump_32699
  jump_3270c:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32714:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x14,%esp
    mov    %eax,%esi
    mov    %edx,0x10(%esp)
    mov    %ebx,%edi
    mov    0xc1(%esi),%dx
    xor    %eax,%eax
    test   %dx,%dx
    jg     jump_3273c
    jmp    jump_3276f
  jump_32732:
    inc    %eax
    cmp    0xc1(%esi),%ax
    jge    jump_3276f
  jump_3273c:
    movswl %ax,%edx
    mov    0x10(%esp),%ecx
    sub    data_9682e(,%edx,2),%cx
    mov    %edi,%ebx
    sub    data_96838(,%edx,2),%bx
    movswl %cx,%edx
    cmp    $0x16,%edx
    jge    jump_32732
    cmp    $0xffffffea,%edx
    jle    jump_32732
    movswl %bx,%edx
    cmp    $0x16,%edx
    jge    jump_32732
    cmp    $0xffffffea,%edx
    jle    jump_32732
  jump_3276f:
    cmp    0xc1(%esi),%ax
    jge    jump_327f6
    cmp    0xbf(%esi),%ax
    je     jump_327f6
    mov    0xb7(%esi),%edx
    mov    %ax,0xbf(%esi)
    test   %edx,%edx
    jne    jump_327e9
    mov    %esp,%ebx
    movzbl data_104bea,%edi
    mov    0xbd(%esi),%ecx
    mov    %edi,%edx
    xor    %eax,%eax
    shl    $0x5,%edx
    mov    data_968dd,%al
    sub    %edi,%edx
    sar    $0x10,%ecx
    shl    $0x3,%edx
    mov    data_96840(,%ecx,2),%ecx
    sub    %edi,%edx
    mov    $data_a2f72,%edi
    add    %edx,%edx
    sar    $0x10,%ecx
    add    %edx,%edi
    mov    %eax,%edx
    mov    %edi,%eax
    call   func_44238
    push   $0xffffffff
    lea    0x4(%esp),%edx
    movswl %ax,%ebx
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_32a48
  jump_327e9:
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_327f6:
    add    $0x14,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_32800:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x30,%esp
    mov    %eax,%esi
    xor    %ecx,%ecx
    mov    data_968dd,%cl
    mov    %ecx,%ebx
    shl    $0x5,%ebx
    xor    %eax,%eax
    sub    %ecx,%ebx
    mov    data_104bea,%al
    shl    $0x3,%ebx
    mov    %eax,-0x8(%ebp)
    sub    %ecx,%ebx
    mov    %eax,%ecx
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    $data_a2f72,%ecx
    add    %eax,%eax
    mov    $data_a2f72,%edi
    add    %eax,%ecx
    add    %ebx,%ebx
    mov    %ecx,-0x4(%ebp)
    mov    0xb7(%esi),%ecx
    add    %ebx,%edi
    cmp    $0xffffffff,%ecx
    jne    jump_32915
    cmp    $0x1,%dl
    jne    jump_32885
    mov    $0x1,%edx
    mov    data_a315c(%ebx),%eax
    xor    %ecx,%ecx
    mov    $0x10,%ebx
    mov    %eax,data_d3660
    mov    $data_10ae70,%eax
    call   func_56b60
    jmp    jump_32a12
  jump_32885:
    push   $0x0
    movsbl %dl,%ecx
    mov    0x1ea(%edi),%ebx
    mov    %edi,%eax
    push   %ebx
    mov    0x1e6(%edi),%ebx
    mov    -0x8(%ebp),%edx
    sar    $0x18,%ebx
    call   func_450b0
    push   $0x0
    mov    $0xd,%ebx
    mov    0xb3(%esi),%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_56d30
    movb   $0xe,0x1e9(%edi)
    lea    -0x30(%ebp),%ebx
    mov    0xbd(%esi),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    data_968dd,%dl
    mov    data_96840(,%eax,2),%ecx
    mov    -0x4(%ebp),%eax
    sar    $0x10,%ecx
    call   func_44238
    push   $0xffffffff
    mov    $0xffffffff,%ecx
    lea    -0x30(%ebp),%edx
    movswl %ax,%ebx
    mov    %esi,%eax
    call   func_32a48
    mov    $0xe,%edx
    mov    %esi,%eax
    call   func_32bdc
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_32915:
    xor    %eax,%eax
    mov    %dl,%bl
    mov    %eax,-0x10(%ebp)
    cmp    $0xe,%dl
    jne    jump_3295e
    mov    $0x3,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_56b60
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3293c:
    mov    0xbd(%esi),%eax
    sar    $0x10,%eax
    mov    data_96840(,%eax,2),%eax
    sar    $0x10,%eax
    mov    %eax,-0x10(%ebp)
    jmp    jump_3297b
  jump_32954:
    mov    data_d3660,%eax
    mov    %eax,-0x10(%ebp)
    jmp    jump_3297b
  jump_3295e:
    movb   $0x1,data_101dc4(%edx)
    cmp    $0x9,%dl
    jb     jump_32976
    cmp    $0xb,%dl
    jbe    jump_3293c
    cmp    $0xc,%dl
    je     jump_32954
    jmp    jump_3297b
  jump_32976:
    cmp    $0x7,%dl
    je     jump_3293c
  jump_3297b:
    push   $0x0
    mov    -0x10(%ebp),%ecx
    xor    %edx,%edx
    movsbl %bl,%eax
    mov    data_104bea,%dl
    mov    %eax,-0xc(%ebp)
    mov    %eax,%ebx
    mov    %edi,%eax
    call   func_44bcc
    movsbl %al,%ecx
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_32c14
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    -0xc(%ebp),%ebx
    push   %edx
    xor    %edx,%edx
    mov    -0x4(%ebp),%eax
    mov    data_968dd,%dl
    call   func_450b0
    push   $0x0
    mov    $0xd,%ebx
    mov    0xb3(%esi),%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_56d30
    lea    -0x20(%ebp),%ebx
    mov    0xbd(%esi),%ecx
    mov    -0x4(%ebp),%eax
    sar    $0x10,%ecx
    xor    %edx,%edx
    mov    data_96840(,%ecx,2),%ecx
    mov    data_968dd,%dl
    sar    $0x10,%ecx
    call   func_44238
    push   $0xffffffff
    mov    $0xffffffff,%ecx
    lea    -0x20(%ebp),%edx
    movswl %ax,%ebx
    mov    %esi,%eax
    call   func_32a48
  jump_32a12:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32a1c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    mov    0xb7(%eax),%edx
    test   %edx,%edx
    jne    jump_32a36
    push   %edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_32a48
  jump_32a36:
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32a48:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ebp
    mov    %ecx,0x4(%esp)
    xor    %ecx,%ecx
    mov    %cx,data_103f94
    cmpl   $0x0,0x1c(%esp)
    je     jump_32a87
    mov    $0xf,%ecx
    mov    $data_100340,%edi
    mov    %edx,%esi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    %bx,data_100350
  jump_32a87:
    mov    0xab(%ebp),%eax
    xor    %esi,%esi
    mov    0x8cd(%eax),%dx
    call   func_2ed4c
    mov    data_100350,%di
    mov    %edx,0x8(%esp)
    test   %di,%di
    jle    jump_32b11
    jmp    jump_32ab9
  jump_32aad:
    mov    data_100350,%ax
    inc    %esi
    cmp    %ax,%si
    jge    jump_32b11
  jump_32ab9:
    movswl %si,%edi
    mov    data_10033d(%edi),%edx
    sar    $0x18,%edx
    cmpb   $0x0,data_101dc4(%edx)
    jne    jump_32aad
    mov    $0xffffffff,%ecx
    mov    %ebp,%eax
    mov    %ecx,%ebx
    call   func_32c48
    mov    $0xffffffff,%ebx
    mov    0xab(%ebp),%edx
    xor    %ecx,%ecx
    mov    %edx,(%esp)
    mov    %eax,%edx
    mov    (%esp),%eax
    call   func_2ea8c
    mov    data_10033d(%edi),%ebx
    xor    %edx,%edx
    sar    $0x18,%ebx
    mov    %ax,%dx
    mov    0xab(%ebp),%eax
    call   func_2ec50
    jmp    jump_32aad
  jump_32b11:
    cmpl   $0x0,0x4(%esp)
    jne    jump_32b2a
    xor    %edx,%edx
    mov    0xab(%ebp),%eax
    mov    0x8(%esp),%dx
    call   func_2ecdc
  jump_32b2a:
    mov    0xab(%ebp),%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_32b44:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%esi
    mov    %edx,0x4(%esp)
    mov    %ebx,0x8(%esp)
    mov    0xab(%eax),%eax
    xor    %edx,%edx
    xor    %edi,%edi
    mov    %dx,data_103f94
    call   func_2ed4c
    test   %bx,%bx
    jle    jump_32bc3
  jump_32b70:
    mov    0x4(%esp),%edx
    movswl %di,%eax
    mov    $0xffffffff,%ebx
    add    %eax,%edx
    xor    %ecx,%ecx
    mov    %edx,(%esp)
    mov    %esi,%eax
    movsbl (%edx),%edx
    call   func_32c48
    mov    $0xffffffff,%ebx
    mov    %eax,%edx
    mov    0xab(%esi),%ebp
    xor    %ecx,%ecx
    mov    %ebp,%eax
    call   func_2ea8c
    mov    (%esp),%ebx
    xor    %edx,%edx
    inc    %edi
    mov    %ax,%dx
    movsbl (%ebx),%ebx
    mov    0xab(%esi),%eax
    mov    0x8(%esp),%ecx
    call   func_2ec50
    cmp    %cx,%di
    jl     jump_32b70
  jump_32bc3:
    mov    0xab(%esi),%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_32bdc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    $0xffffffff,%ecx
    movsbl %dl,%edx
    xor    %ebx,%ebx
    call   func_32c48
    mov    0xaf(%esi),%edx
    mov    %eax,0xab(%edx)
    mov    0xaf(%esi),%eax
    mov    0xa7(%eax),%esi
    xor    %edx,%edx
    call   *0xc(%esi)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32c14:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    movsbl %dl,%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_32c48
    mov    0xaf(%esi),%edx
    mov    %eax,0xab(%edx)
    mov    0xaf(%esi),%eax
    mov    0xa7(%eax),%esi
    xor    %edx,%edx
    call   *0xc(%esi)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32c48:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,0x8(%esp)
    mov    %edx,0xc(%esp)
    mov    %ebx,%ebp
    mov    %ecx,(%esp)
    mov    data_103f92,%edx
    sar    $0x10,%edx
    cmp    $0xf,%edx
    jl     jump_32c7a
    mov    $0x27b,%ebx
    mov    $data_91c8b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_32c7a:
    test   %ebp,%ebp
    je     jump_32ca8
    mov    data_103f92,%ebx
    sar    $0x10,%ebx
    inc    %ebx
    lea    0x0(,%ebx,4),%edx
    sub    %ebx,%edx
    shl    $0x2,%edx
    mov    %edx,%ebx
    shl    $0x4,%edx
    sub    %ebx,%edx
    mov    $data_103454,%ebx
    add    %edx,%ebx
    mov    %ebx,0x4(%esp)
    jmp    jump_32cb0
  jump_32ca8:
    movl   $data_103454,0x4(%esp)
  jump_32cb0:
    cmpl   $0x0,(%esp)
    je     jump_32cde
    test   %ebp,%ebp
    je     jump_32ccc
    mov    0x9(%esp),%ebx
    sar    $0x18,%ebx
    shl    $0x7,%ebx
    add    $data_100744,%ebx
    jmp    jump_32d01
  jump_32ccc:
    mov    0x9(%esp),%ebx
    sar    $0x18,%ebx
    shl    $0x7,%ebx
    add    $data_101dd4,%ebx
    jmp    jump_32d01
  jump_32cde:
    test   %ebp,%ebp
    je     jump_32cf0
    mov    0x9(%esp),%edx
    sar    $0x18,%edx
    mov    $data_100ec4,%ebx
    jmp    jump_32cfc
  jump_32cf0:
    mov    0x9(%esp),%edx
    sar    $0x18,%edx
    mov    $data_102554,%ebx
  jump_32cfc:
    shl    $0x7,%edx
    add    %edx,%ebx
  jump_32d01:
    mov    0x4(%esp),%edx
    jmp    jump_32e57
  jump_32d0a:
    test   %ebp,%ebp
    je     jump_32d3b
  jump_32d0e:
    xor    %ecx,%ecx
    mov    data_104bea,%cl
    imul   $0x1ee,%ecx,%ecx
    mov    data_a2f73(%ecx),%cl
    and    $0xff,%ecx
    imul   $0x14,%ecx,%ecx
    mov    $data_1050a4,%esi
    add    %ecx,%esi
    jmp    jump_32e21
  jump_32d37:
    test   %ebp,%ebp
    je     jump_32d0e
  jump_32d3b:
    xor    %ecx,%ecx
    mov    data_968dd,%cl
    imul   $0x1ee,%ecx,%ecx
    mov    data_a2f73(%ecx),%cl
    and    $0xff,%ecx
    imul   $0x14,%ecx,%ecx
    mov    $data_1050a4,%esi
    add    %ecx,%esi
    jmp    jump_32e21
  jump_32d64:
    cmp    $0xffffffff,%ebp
    jne    jump_32da6
    cmp    (%esp),%ebp
    jne    jump_32da6
    mov    0x8(%esp),%ecx
    mov    0xbd(%ecx),%ecx
    sar    $0x10,%ecx
    mov    data_96840(,%ecx,2),%ecx
    sar    $0x10,%ecx
    imul   $0x1ee,%ecx,%ecx
    mov    data_a2f73(%ecx),%cl
    and    $0xff,%ecx
    imul   $0x14,%ecx,%ecx
    mov    $data_1050a4,%esi
    add    %ecx,%esi
    jmp    jump_32e21
  jump_32da6:
    xor    %ecx,%ecx
    mov    data_968dd,%cl
    imul   $0x1ee,%ecx,%ecx
    imul   $0x1ee,data_a315c(%ecx),%ecx
    mov    data_a2f73(%ecx),%cl
    and    $0xff,%ecx
    imul   $0x14,%ecx,%ecx
    mov    $data_1050a4,%esi
    add    %ecx,%esi
    jmp    jump_32e21
  jump_32dd6:
    test   %ebp,%ebp
    je     jump_32de5
    mov    data_d3660,%esi
    add    $0x1c,%esi
    jmp    jump_32e21
  jump_32de5:
    xor    %ecx,%ecx
    mov    data_968dd,%cl
    imul   $0x1ee,%ecx,%ecx
    mov    data_a315c(%ecx),%esi
    add    $0x1c,%esi
    jmp    jump_32e21
  jump_32dfe:
    mov    0x1(%ebx),%al
    cmp    $0x73,%al
    jb     jump_32e19
    jbe    jump_32dd6
    cmp    $0x74,%al
    jbe    jump_32d64
    cmp    $0x79,%al
    je     jump_32d37
    jmp    jump_32e21
  jump_32e19:
    cmp    $0x6d,%al
    je     jump_32d0a
  jump_32e21:
    test   %esi,%esi
    je     jump_32e50
    mov    %edx,%edi
    push   %edi
  jump_32e28:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_32e40
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_32e28
  jump_32e40:
    pop    %edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    inc    %ebx
    add    %ecx,%edx
    jmp    jump_32e56
  jump_32e50:
    inc    %edx
    mov    (%ebx),%al
    mov    %al,-0x1(%edx)
  jump_32e56:
    inc    %ebx
  jump_32e57:
    movsbl (%ebx),%ecx
    test   %ecx,%ecx
    je     jump_32e69
    mov    (%ebx),%ah
    xor    %esi,%esi
    cmp    $0x25,%ah
    je     jump_32dfe
    jmp    jump_32e21
  jump_32e69:
    movb   $0x0,(%edx)
    test   %ebp,%ebp
    je     jump_32e77
    incw   data_103f94
  jump_32e77:
    mov    0x4(%esp),%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_32e84:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x20,%esp
    mov    %eax,%ecx
    xor    %eax,%eax
    mov    data_968dd,%al
    test   %eax,%eax
    jl     jump_32e9e
    cmp    $0x15,%eax
    jl     jump_32eaf
  jump_32e9e:
    mov    $0x2d6,%ebx
    mov    $data_91c99,%edx
    xor    %eax,%eax
    call   func_26198
  jump_32eaf:
    xor    %eax,%eax
    mov    data_104bea,%al
    test   %eax,%eax
    jl     jump_32ebf
    cmp    $0x15,%eax
    jl     jump_32ed0
  jump_32ebf:
    mov    $0x2d7,%ebx
    mov    $data_91ca7,%edx
    xor    %eax,%eax
    call   func_26198
  jump_32ed0:
    movzbl data_968dd,%esi
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    mov    data_a2f73(,%eax,2),%al
    and    $0xff,%eax
    push   %eax
    push   $data_91cb5
    lea    0x8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    mov    $data_91cc2,%esi
    lea    0x10(%esp),%edi
    push   %edi
  jump_32f0c:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_32f24
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_32f0c
  jump_32f24:
    pop    %edi
    mov    0xb9(%ecx),%eax
    movzbl data_968dd,%esi
    sar    $0x10,%eax
    cmp    %esi,%eax
    je     jump_32f77
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_32f57
    mov    $0x2e4,%ebx
    mov    $data_91ccd,%edx
    call   func_26198
  jump_32f57:
    mov    %esi,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_32fd8
    mov    %esi,%eax
    call   func_7744e
    xor    %eax,%eax
    mov    data_968dd,%al
    mov    %ax,0xbb(%ecx)
  jump_32f77:
    mov    0xbb(%ecx),%eax
    movzbl data_104bea,%esi
    sar    $0x10,%eax
    cmp    %esi,%eax
    je     jump_32fce
    lea    0x10(%esp),%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_32fab
    mov    $0x2ef,%ebx
    mov    $data_91cdb,%edx
    call   func_26198
  jump_32fab:
    mov    $0xffffffff,%ebx
    mov    %esi,%edx
    mov    %ecx,%eax
    call   func_32fd8
    mov    %esi,%eax
    call   func_7744e
    xor    %eax,%eax
    mov    data_104bea,%al
    mov    %ax,0xbd(%ecx)
  jump_32fce:
    add    $0x20,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32fd8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xcc,%esp
    mov    $data_91ce9,%ebp
    mov    %edx,%ecx
    mov    %ebx,%edi
    mov    $0x7,%esi
  jump_32ff0:
    mov    %esp,%eax
    mov    %esi,%ebx
    mov    %ebp,%edx
    call   func_789ba
    test   %eax,%eax
    je     jump_3300a
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2fe58
    jmp    jump_32ff0
  jump_3300a:
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2fe58
    xor    %esi,%esi
    mov    $0x7f,%ebp
  jump_3301a:
    mov    $0x9,%ebx
    mov    $data_91cf1,%edx
    mov    %esp,%eax
    call   func_789ba
    test   %eax,%eax
    je     jump_3306d
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2fe58
    test   %edi,%edi
    je     jump_3304d
    movswl %si,%eax
    mov    %esp,%edx
    shl    $0x7,%eax
    mov    %ebp,%ebx
    add    $data_100744,%eax
    jmp    jump_3305c
  jump_3304d:
    movswl %si,%eax
    mov    %esp,%edx
    shl    $0x7,%eax
    mov    %ebp,%ebx
    add    $data_101dd4,%eax
  jump_3305c:
    inc    %esi
    call   func_77780
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2fe58
    jmp    jump_3301a
  jump_3306d:
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2fe58
    xor    %esi,%esi
    mov    $0x7f,%ebp
  jump_3307d:
    mov    $0x9,%ebx
    mov    $data_91cfb,%edx
    mov    %esp,%eax
    call   func_789ba
    test   %eax,%eax
    je     jump_330d0
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2fe58
    test   %edi,%edi
    je     jump_330b0
    movswl %si,%eax
    mov    %esp,%edx
    shl    $0x7,%eax
    mov    %ebp,%ebx
    add    $data_100ec4,%eax
    jmp    jump_330bf
  jump_330b0:
    movswl %si,%eax
    mov    %esp,%edx
    shl    $0x7,%eax
    mov    %ebp,%ebx
    add    $data_102554,%eax
  jump_330bf:
    inc    %esi
    call   func_77780
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2fe58
    jmp    jump_3307d
  jump_330d0:
    add    $0xcc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_330dc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4c,%esp
    mov    %eax,%ebp
    mov    %edx,0x14(%esp)
    mov    $data_91d05,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    data_ffef2,%ax
    mov    %eax,0x48(%esp)
    mov    0x14(%esp),%eax
    mov    0x14(%esp),%edx
    mov    %eax,0x24(%esp)
    xor    %eax,%eax
    mov    (%edx),%al
    mov    %eax,%esi
    shl    $0x5,%esi
    sub    %eax,%esi
    shl    $0x3,%esi
    sub    %eax,%esi
    add    %esi,%esi
    mov    %eax,0x2c(%esp)
    xor    %eax,%eax
    mov    data_a2f74(%esi),%al
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0x10(%esp)
    mov    0x2a(%esp),%eax
    mov    $0x3,%ebx
    sar    $0x10,%eax
    mov    %ebx,%edx
    mov    %eax,0x4(%esp)
    mov    %eax,%ecx
    mov    %ebp,%eax
    call   func_53e38
    xor    %edx,%edx
    mov    data_a2f73(%esi),%dl
    mov    $data_10debe,%edi
    lea    0x0(,%edx,4),%eax
    mov    $data_1050a4,%ecx
    add    %edx,%eax
    push   $0x0
    shl    $0x2,%eax
    mov    $0x5,%ebx
    add    %eax,%ecx
    mov    0x12(%esp),%eax
    push   $0xff
    sar    $0x10,%eax
    mov    %ebp,%esi
    push   %eax
    mov    $0x14,%edx
    mov    %eax,0x18(%esp)
    push   $0x0
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_d8da0
    push   $0x1e
    mov    0x44(%esp),%edx
    push   $0x96
    mov    data_ffea0(,%edx,2),%dx
    push   $0x0
    mov    $data_12fc20,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    push   %ebp
    mov    $0xc8,%esi
    call   func_5d631
    add    $0x28,%esp
    mov    $0x14,%edi
    mov    0x4(%esp),%ebx
    mov    $data_12fc20,%eax
    push   %ebx
    mov    $0x96,%ecx
    xor    %edx,%edx
    push   $0x1e
    mov    0x50(%esp),%dx
    mov    $0x3,%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    mov    %esi,0x40(%esp)
    call   func_53eb8
    mov    %esp,%ebx
    mov    0x14(%esp),%eax
    xor    %ecx,%ecx
    xor    %edx,%edx
    mov    %ecx,(%esp)
    call   func_40224
    mov    %edi,%eax
    mov    %edi,0x30(%esp)
    call   func_1cea8
    push   %ecx
    mov    %ebp,%esi
    mov    0x10(%esp),%edx
    push   $0xff
    mov    $data_10de9e,%edi
    mov    $0x5,%ebx
    push   %edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0xc8,%edx
    push   %ecx
    mov    %eax,%ecx
    mov    $data_10de96,%eax
    xor    %edi,%edi
    call   func_2b8a8
    jmp    jump_3326d
  jump_3326c:
    inc    %edi
  jump_3326d:
    mov    (%esp),%ebx
    movswl %di,%esi
    cmp    %ebx,%esi
    jge    jump_332d6
    mov    0x2a(%esp),%eax
    mov    0x38(%esp),%ecx
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x34(%esp),%eax
    mov    data_ffef2,%dx
    push   %eax
    mov    $data_12fc20,%eax
    mov    $0x5,%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_53eb8
    mov    $0x9,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x8,0x38(%esp)
    cmp    $0x8,%edx
    jne    jump_3326c
    mov    0x30(%esp),%esi
    mov    $0xc8,%ecx
    add    %edx,%esi
    mov    %ecx,0x38(%esp)
    mov    %esi,0x30(%esp)
    jmp    jump_3326c
  jump_332d6:
    mov    0x24(%esp),%eax
    mov    $0x118,%ecx
    mov    $0x14,%esi
    mov    0xe(%esp),%edx
    mov    $0x5,%ebx
    mov    $data_10de9e,%edi
    call   func_402e0
    mov    %eax,0x18(%esp)
    mov    %ecx,0x44(%esp)
    mov    $0x15,%eax
    mov    %esi,0x28(%esp)
    call   func_1cea8
    push   $0x0
    sar    $0x10,%edx
    push   $0xff
    mov    %ebp,%esi
    mov    %eax,%ecx
    push   %edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $data_10de96,%eax
    push   $0x0
    mov    $0x118,%edx
    xor    %edi,%edi
    call   func_2b8a8
    jmp    jump_33337
  jump_33336:
    inc    %edi
  jump_33337:
    mov    0x18(%esp),%eax
    movswl %di,%esi
    cmp    %eax,%esi
    jge    jump_333a2
    mov    0x2a(%esp),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x2c(%esp),%ecx
    mov    data_ffef2,%dx
    push   %ecx
    mov    $data_12fc20,%eax
    mov    $0x6,%ebx
    call   func_1b084
    mov    0x4c(%esp),%ecx
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_53eb8
    mov    $0x9,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x8,0x44(%esp)
    cmp    $0x8,%edx
    jne    jump_33336
    mov    0x28(%esp),%edx
    mov    $0x118,%eax
    add    $0x8,%edx
    mov    %eax,0x44(%esp)
    mov    %edx,0x28(%esp)
    jmp    jump_33336
  jump_333a2:
    mov    0x24(%esp),%eax
    mov    $0x168,%edx
    mov    $0x14,%ebx
    mov    $data_10de9e,%edi
    call   func_40664
    mov    %ebp,%esi
    sar    $0x2,%eax
    mov    %edx,0x40(%esp)
    mov    %eax,0x20(%esp)
    mov    $0x16,%eax
    mov    %ebx,0x34(%esp)
    call   func_1cea8
    push   $0x0
    mov    0x12(%esp),%edx
    mov    $0x5,%ebx
    push   $0xff
    sar    $0x10,%edx
    mov    %eax,%ecx
    push   %edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $data_10de96,%eax
    push   $0x0
    mov    $0x168,%edx
    xor    %edi,%edi
    call   func_2b8a8
    jmp    jump_33406
  jump_33405:
    inc    %edi
  jump_33406:
    mov    0x20(%esp),%ebx
    movswl %di,%esi
    cmp    %ebx,%esi
    jge    jump_33470
    mov    0x2a(%esp),%eax
    mov    0x40(%esp),%ecx
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x38(%esp),%eax
    mov    data_ffef2,%dx
    push   %eax
    mov    $data_12fc20,%eax
    mov    $0x7,%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_53eb8
    mov    $0x9,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x8,0x40(%esp)
    cmp    $0x8,%edx
    jne    jump_33405
    mov    0x34(%esp),%esi
    mov    $0x168,%ecx
    add    %edx,%esi
    mov    %ecx,0x40(%esp)
    mov    %esi,0x34(%esp)
    jmp    jump_33405
  jump_33470:
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    mov    $0x1cc,%esi
    sub    %edx,%eax
    mov    $data_a2f72,%edx
    add    %eax,%eax
    mov    $0x5,%ecx
    add    %eax,%edx
    xor    %edi,%edi
    mov    %edx,0x1c(%esp)
    mov    data_a3cf4,%dx
    mov    %ecx,0x3c(%esp)
    test   %dx,%dx
    jle    jump_33590
    jmp    jump_33512
  jump_334b3:
    cmp    $0x2,%cl
    jne    jump_334bd
    mov    $0x8,%ebx
  jump_334bd:
    cmp    $0xffffffff,%ebx
    je     jump_334e6
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffef2,%dx
    call   func_1b084
    mov    0x3c(%esp),%edx
    push   %edx
    push   %esi
    push   %ebx
    push   %eax
    push   %ebp
    call   func_5cb3c
    add    $0x14,%esp
  jump_334e6:
    add    $0x39,%esi
    cmp    $0x258,%esi
    jle    jump_33501
    mov    0x3c(%esp),%ebx
    add    $0x1b,%ebx
    mov    $0x1cc,%esi
    mov    %ebx,0x3c(%esp)
  jump_33501:
    mov    data_a3cf4,%bx
    inc    %edi
    cmp    %bx,%di
    jge    jump_33590
  jump_33512:
    mov    0x2c(%esp),%edx
    movswl %di,%eax
    cmp    %edx,%eax
    je     jump_33501
    mov    0x24(%esp),%edx
    cmpb   $0x0,0x1c0(%edx,%eax,1)
    je     jump_33501
    imul   $0x1ee,%eax,%edx
    cmpl   $0x0,data_a2f75(%edx)
    jne    jump_33501
    mov    0x1c(%esp),%edx
    cmpb   $0x0,0x1c0(%edx,%eax,1)
    jne    jump_33554
    xor    %edx,%edx
    mov    data_104bea,%dl
    cmp    %edx,%eax
    jne    jump_33501
  jump_33554:
    mov    0x3c(%esp),%ebx
    movswl %di,%eax
    mov    %esi,%edx
    mov    %eax,0x8(%esp)
    mov    %eax,%ecx
    mov    %ebp,%eax
    call   func_53e38
    mov    0x24(%esp),%eax
    add    0x8(%esp),%eax
    mov    0x1c0(%eax),%cl
    mov    $0xffffffff,%ebx
    cmp    $0x3,%cl
    jne    jump_334b3
    mov    $0x9,%ebx
    jmp    jump_334bd
  jump_33590:
    add    $0x4c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_33598:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_95f04,0xa7(%eax)
    call   func_335f8
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_335b4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_335d3
    mov    $data_95ec4,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_335d3:
    mov    $0x1,%edx
    movl   $data_95f04,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_335f3
    call   func_76d64
  jump_335f3:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_335f8:
/*----------------------------------------------------------------*/
    movl   $0x0,0xab(%eax)
    ret


/*----------------------------------------------------------------*/
func_33604:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %dx,(%esp)
    mov    %ebx,%edi
    cmp    $0x1,%dx
    jne    jump_33662
    cmpl   $0x0,0xab(%eax)
    jne    jump_33650
    mov    $data_91d11,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,0xab(%esi)
    movw   $0x3c,0x8c9(%eax)
    mov    $func_330dc,%edx
    mov    0xab(%esi),%eax
    call   func_2f1c8
  jump_33650:
    mov    -0x2(%esp),%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2f424
    jmp    jump_3366e
  jump_33662:
    mov    -0x2(%esp),%edx
    sar    $0x10,%edx
    call   func_2f424
  jump_3366e:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_33674:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x40,%esp
    mov    %eax,0x34(%esp)
    lea    0x4(%eax),%esi
    mov    $0x3,%ebx
    mov    $data_10ae70,%eax
    mov    %esi,%edx
    xor    %ecx,%ecx
    call   func_552cc
    mov    data_104bea,%cl
    mov    %ebx,%edx
    mov    %esi,%eax
    call   func_53e38
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    mov    $0x1b,%eax
    call   func_1cea8
    push   %eax
    lea    0x8(%esp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_76d09
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0xc,%esp
    mov    data_a2f74(,%eax,2),%al
    push   $0x0
    xor    %ah,%ah
    lea    0x4(%esp),%ecx
    shl    $0x2,%eax
    mov    $0x9,%ebx
    add    $0x13,%eax
    push   $0xff
    cwtl
    mov    $data_a2f72,%ebp
    push   %eax
    mov    $data_10debe,%edi
    xor    %edx,%edx
    push   $0x2
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    0x34(%esp),%eax
    mov    %ebp,%edi
    mov    0xab(%eax),%eax
    xor    %esi,%esi
    call   func_2ed4c
    jmp    jump_33762
  jump_33755:
    add    $0x1ee,%edi
    inc    %esi
    add    $0x1ee,%ebp
  jump_33762:
    mov    data_a3cf2,%eax
    sar    $0x10,%eax
    cmp    %eax,%esi
    jge    jump_337f9
    xor    %eax,%eax
    mov    data_104bea,%al
    cmp    %eax,%esi
    je     jump_3379c
    imul   $0x1ee,%eax,%eax
    cmpb   $0x0,data_a3132(%esi,%eax,1)
    je     jump_33755
    imul   $0x1ee,%esi,%eax
    cmpl   $0x0,data_a2f75(%eax)
    jne    jump_33755
  jump_3379c:
    mov    %edi,%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    %ebx,0x38(%esp)
    lea    0x38(%esp),%ebx
    call   func_40224
    mov    %edi,%eax
    xor    %ecx,%ecx
    call   func_402e0
    mov    %eax,0x3c(%esp)
    mov    0x34(%esp),%eax
    mov    $0xffffffff,%ebx
    mov    %ebp,%edx
    mov    0xab(%eax),%eax
    call   func_2ea8c
    mov    0x38(%esp),%ebx
    add    0x3c(%esp),%ebx
    movswl %ax,%edx
    neg    %ebx
    mov    0x34(%esp),%eax
    and    $0xffff,%edx
    mov    0xab(%eax),%eax
    call   func_2ec50
    jmp    jump_33755
  jump_337f9:
    mov    0x34(%esp),%eax
    mov    $func_10a14,%edx
    mov    0xab(%eax),%eax
    call   func_2f1d8
    mov    0x34(%esp),%eax
    mov    0xab(%eax),%eax
    xor    %edx,%edx
    call   func_2f1e0
    mov    0x34(%esp),%eax
    call   func_2d218
    add    $0x40,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_33830:
/*----------------------------------------------------------------*/
    call   func_2fc50
    movl   $data_95eec,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_33840:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_3385f
    mov    $data_95eb0,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_3385f:
    mov    $0x1,%edx
    movl   $data_95eec,0xa7(%eax)
    call   func_2fc68
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_3387f
    call   func_76d64
  jump_3387f:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_33884:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x14,%esp
    mov    %eax,%ecx
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    $data_a2f72,%eax
    mov    0x19a(%eax),%eax
    sar    $0x18,%eax
    push   %eax
    push   $data_91d1b
    lea    0x8(%esp),%eax
    push   %eax
    lea    0xc(%esp),%ebx
    call   func_76d09
    add    $0xc,%esp
    mov    $data_91d24,%edx
    mov    %ecx,%eax
    call   func_2fcb0
    add    $0x14,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_338dc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x78,%esp
    mov    %eax,%ebp
    movzbl data_104bea,%esi
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    mov    $data_a2f72,%esi
    add    %eax,%eax
    add    %eax,%esi
    cmp    $0x1,%dx
    jb     jump_33a11
    jbe    jump_3391b
    cmp    $0x32,%dx
    je     jump_33a0c
    jmp    jump_33a11
  jump_3391b:
    mov    %esi,%eax
    xor    %edx,%edx
    call   func_434e4
    cmp    $0xffffffff,%eax
    jne    jump_33935
    movb   $0x2,0xccb(%ebp)
    jmp    jump_339e8
  jump_33935:
    mov    0x67(%ebp),%eax
    push   $0x0
    mov    $0x2,%ebx
    mov    (%eax),%edx
    xor    %ecx,%ecx
    mov    $data_10ae70,%eax
    mov    0x41(%edx),%edx
    call   func_56d30
    mov    0x19a(%esi),%eax
    xor    %edx,%edx
    sar    $0x18,%eax
    mov    0x19e(%esi),%ebx
    mov    data_968e8(,%eax,2),%dx
    sub    %ebx,%edx
    cmp    $0x1,%edx
    jne    jump_33977
    mov    $0x1c,%eax
    jmp    jump_3397c
  jump_33977:
    mov    $0x1d,%eax
  jump_3397c:
    call   func_1cea8
    push   %eax
    push   %edx
    mov    0xcd0(%ebp),%ecx
    push   %ecx
    lea    0xc(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
    mov    %esp,%esi
    mov    0xcd0(%ebp),%edi
    push   %edi
  jump_339a0:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_339b8
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_339a0
  jump_339b8:
    pop    %edi
    mov    $0x1e,%eax
    call   func_1cea8
    mov    0x67(%ebp),%edx
    mov    0x4(%edx),%edi
    mov    %eax,%esi
    add    $0x20,%edi
    push   %edi
  jump_339cf:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_339e7
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_339cf
  jump_339e7:
    pop    %edi
  jump_339e8:
    movl   $0xffffffff,0x35(%ebp)
    mov    %ebp,%eax
    mov    0xa7(%ebp),%ebx
    movl   $0xffffffff,0x39(%ebp)
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x78,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_33a0c:
    cmp    $0x1,%ebx
    je     jump_33a1d
  jump_33a11:
    movswl %dx,%edx
    mov    %ebp,%eax
    call   func_2fd68
    jmp    jump_33a61
  jump_33a1d:
    mov    %ebx,%edx
    mov    %esi,%eax
    call   func_434e4
    mov    0x19a(%esi),%eax
    sar    $0x18,%eax
    push   %eax
    push   $data_91d2d
    lea    0x6c(%esp),%eax
    push   %eax
    lea    0x70(%esp),%ebx
    call   func_76d09
    add    $0xc,%esp
    mov    $data_91d37,%edx
    mov    %ebp,%eax
    call   func_2fcb0
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
  jump_33a61:
    add    $0x78,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_33a68:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ebx
    xor    %edx,%edx
    call   func_30774
    push   $0x41
    push   $0xfa
    xor    %edx,%edx
    push   $0x0
    mov    $data_12fc20,%eax
    mov    data_104bea,%dl
    call   func_1b084
    push   %eax
    lea    0x4(%ebx),%esi
    push   %esi
    call   func_5cb3c
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    add    $0x14,%esp
    shl    $0x3,%eax
    push   $0x41
    sub    %ebx,%eax
    push   $0xfa
    mov    data_a2f74(,%eax,2),%al
    and    $0xff,%eax
    push   %eax
    mov    $0x21,%edx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5cb3c
    add    $0x14,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_33af0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,0xc(%esp)
    cmpl   $0x0,0x10(%eax)
    je     jump_33b1b
    cmp    0x14(%eax),%di
    je     jump_33b1b
    mov    $0x41,%ebx
    mov    $data_91d40,%edx
    xor    %eax,%eax
    call   func_26198
  jump_33b1b:
    mov    data_1045b4,%ebx
    mov    %ecx,0x10(%esi)
    test   %ebx,%ebx
    jne    jump_33b2f
    mov    %esi,%eax
    call   func_33d30
  jump_33b2f:
    xor    %eax,%eax
    mov    %di,%ax
    cmp    $0x5,%eax
    jge    jump_33b3f
    mov    %di,0x14(%esi)
    jmp    jump_33b45
  jump_33b3f:
    movw   $0x4,0x14(%esi)
  jump_33b45:
    movw   $0x0,0x18(%esi)
    xor    %eax,%eax
  jump_33b4d:
    xor    %edx,%edx
    mov    0x14(%esi),%dx
    imul   $0xf,%edx,%edx
    mov    data_104604(%edx,%eax,1),%dl
    mov    0x18(%esi),%bx
    xor    %dh,%dh
    add    %edx,%ebx
    inc    %eax
    mov    %bx,0x18(%esi)
    cmp    $0xf,%eax
    jl     jump_33b4d
    xor    %eax,%eax
    mov    %bx,%ax
    cmp    $0x64,%eax
    jle    jump_33b8a
    mov    $0x52,%ebx
    mov    $data_91d4e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_33b8a:
    mov    0x18(%esi),%ax
    add    $0xa,%eax
    mov    %ax,0x1a(%esi)
    xor    %eax,%eax
    mov    0xc(%esp),%ax
    cmp    $0xb,%eax
    jge    jump_33ba9
    mov    %ax,0x16(%esi)
    jmp    jump_33baf
  jump_33ba9:
    movw   $0x2,0x16(%esi)
  jump_33baf:
    xor    %eax,%eax
    mov    0x16(%esi),%ax
    mov    $data_104650,%ebx
    shl    $0x2,%eax
    add    %eax,%ebx
    xor    %edx,%edx
    mov    (%ebx),%dl
    mov    %edx,%eax
    shl    $0xf,%eax
    mov    $0x64,%ecx
    sub    %edx,%eax
    xor    %edx,%edx
    div    %ecx
    xor    %edx,%edx
    mov    0x1(%ebx),%dl
    mov    %eax,%ebp
    mov    %edx,%eax
    shl    $0xf,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    div    %ecx
    mov    %ebp,%edx
    add    %eax,%edx
    mov    %edx,0x8(%esp)
    xor    %edx,%edx
    mov    0x2(%ebx),%dl
    mov    %edx,%eax
    shl    $0xf,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    div    %ecx
    mov    0x8(%esp),%edx
    add    %eax,%edx
    mov    %edx,(%esp)
    xor    %edx,%edx
    mov    0x3(%ebx),%dl
    mov    %edx,%eax
    shl    $0xf,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    div    %ecx
    mov    (%esp),%edx
    xor    %ebx,%ebx
    add    %eax,%edx
    xor    %ecx,%ecx
    mov    %edx,0x4(%esp)
    xor    %edx,%edx
    jmp    jump_33c60
  jump_33c27:
    mov    0x8(%esp),%edi
    inc    %ecx
    cmp    %edi,%eax
    jge    jump_33c37
    mov    $0x2,%eax
    jmp    jump_33c55
  jump_33c37:
    cmp    (%esp),%eax
    jge    jump_33c43
    mov    $0x3,%eax
    jmp    jump_33c55
  jump_33c43:
    cmp    0x4(%esp),%eax
    jge    jump_33c50
    mov    $0x4,%eax
    jmp    jump_33c55
  jump_33c50:
    mov    $0x1,%eax
  jump_33c55:
    add    $0x4,%edx
    mov    0x10(%esi),%edi
    inc    %ebx
    mov    %al,-0x4(%edx,%edi,1)
  jump_33c60:
    xor    %eax,%eax
    mov    0x1a(%esi),%ax
    cmp    %eax,%ebx
    jge    jump_33c98
    mov    0x10(%esi),%eax
    movb   $0xff,0x1(%edx,%eax,1)
    mov    0x10(%esi),%eax
    xor    %edi,%edi
    movw   $0x0,0x2(%edx,%eax,1)
    mov    0x18(%esi),%di
    mov    $0x1,%eax
    cmp    %edi,%ebx
    jge    jump_33c55
    call   func_782df
    cmp    %ebp,%eax
    jge    jump_33c27
    xor    %eax,%eax
    jmp    jump_33c55
  jump_33c98:
    movb   $0x0,0x66(%esi)
    xor    %ah,%ah
    mov    0x66(%esi),%al
    mov    %ax,0x50(%esi)
    mov    %ax,0x4e(%esi)
    mov    %ax,0x4c(%esi)
    mov    %ax,0x48(%esi)
    mov    %ax,0x46(%esi)
    mov    %ax,0x44(%esi)
    mov    %ax,0x42(%esi)
    call   func_782df
    mov    %eax,%edx
    mov    $0x7,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    test   %edx,%edx
    jne    jump_33cef
    xor    %ebx,%ebx
    mov    0x18(%esi),%bx
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x10(%esi),%eax
    orb    $0x8,(%eax,%edx,4)
    orb    $0x2,0x66(%esi)
  jump_33cef:
    mov    $0x3,%ebx
    mov    %ecx,%edx
    mov    %ecx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    movw   $0xffff,0x52(%esi)
    movb   $0xff,0x54(%esi)
    add    $0x5,%eax
    mov    %ax,0x55(%esi)
    mov    %ax,0x4a(%esi)
    mov    %esi,%eax
    movb   $0xff,0x57(%esi)
    call   func_34e70
    movl   $0x0,0x5e(%esi)
    mov    0x1a(%esi),%ax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_33d30:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xec,%esp
    mov    $data_91d5c,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_34064
    xor    %edi,%edi
    mov    $0xc3,%ecx
  jump_33d59:
    mov    %esp,%eax
    mov    %esi,%ebx
    mov    %ecx,%edx
    call   func_7834e
    cmpb   $0x23,(%esp)
    jne    jump_33d6f
    mov    $0xffffffff,%edi
  jump_33d6f:
    test   %edi,%edi
    je     jump_33d59
    lea    0xc8(%esp),%eax
    push   %eax
    push   $data_91d69
    push   %esi
    mov    $0x4,%ebp
    call   func_78071
    add    $0xc,%esp
    mov    $data_91d6c,%ecx
    mov    0xc8(%esp),%eax
    xor    %edi,%edi
    mov    %eax,data_9684c
    jmp    jump_33dac
  jump_33da3:
    inc    %edi
    add    $0x4,%ebp
    cmp    $0xb,%edi
    jge    jump_33ddb
  jump_33dac:
    lea    0x0(,%edi,4),%edx
    mov    %ebp,%ebx
  jump_33db5:
    lea    0xc8(%esp),%eax
    push   %eax
    push   %ecx
    push   %esi
    call   func_78071
    add    $0xc,%esp
    inc    %edx
    mov    0xc8(%esp),%al
    mov    %al,data_10464f(%edx)
    cmp    %ebx,%edx
    je     jump_33da3
    jmp    jump_33db5
  jump_33ddb:
    mov    $0xf,%ebp
    mov    $data_91d6f,%ecx
    xor    %edi,%edi
    jmp    jump_33df2
  jump_33de9:
    inc    %edi
    add    $0xf,%ebp
    cmp    $0x5,%edi
    jge    jump_33e1d
  jump_33df2:
    mov    %ebp,%ebx
    imul   $0xf,%edi,%edx
  jump_33df7:
    lea    0xc8(%esp),%eax
    push   %eax
    push   %ecx
    push   %esi
    call   func_78071
    add    $0xc,%esp
    inc    %edx
    mov    0xc8(%esp),%al
    mov    %al,data_1045b7(%edx)
    cmp    %ebx,%edx
    je     jump_33de9
    jmp    jump_33df7
  jump_33e1d:
    mov    $0xf,%ebp
    mov    $data_91d72,%ecx
    xor    %edi,%edi
    jmp    jump_33e34
  jump_33e2b:
    inc    %edi
    add    $0xf,%ebp
    cmp    $0x5,%edi
    jge    jump_33e5f
  jump_33e34:
    mov    %ebp,%ebx
    imul   $0xf,%edi,%edx
  jump_33e39:
    lea    0xc8(%esp),%eax
    push   %eax
    push   %ecx
    push   %esi
    call   func_78071
    add    $0xc,%esp
    inc    %edx
    mov    0xc8(%esp),%al
    mov    %al,data_104603(%edx)
    cmp    %ebx,%edx
    je     jump_33e2b
    jmp    jump_33e39
  jump_33e5f:
    lea    0xd0(%esp),%eax
    push   %eax
    lea    0xd0(%esp),%eax
    push   %eax
    lea    0xd0(%esp),%eax
    push   %eax
    push   $data_91d75
    push   %esi
    call   func_78071
    add    $0x14,%esp
    cmpl   $0x27,0xc8(%esp)
    je     jump_33ea0
    mov    $0xe1,%ebx
    mov    $data_91d7e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_33ea0:
    mov    0xcc(%esp),%eax
    mov    %ax,data_103f98
    mov    0xd0(%esp),%eax
    xor    %edx,%edx
    mov    %ax,data_103f9a
    xor    %eax,%eax
    mov    0xcc(%esp),%dx
    mov    0xd0(%esp),%ax
    add    %edx,%eax
    cmp    $0x27,%eax
    jle    jump_33ee6
    mov    $0xe6,%ebx
    mov    $data_91d8c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_33ee6:
    mov    $data_103f9c,%eax
    add    $0xa,%eax
    xor    %ebp,%ebp
    mov    %eax,0xe8(%esp)
    jmp    jump_33f5e
  jump_33ef9:
    mov    $0x20,%ch
  jump_33efb:
    cmpb   $0x5e,data_103fa6(%eax)
    jne    jump_33f0a
    mov    %ch,data_103fa6(%eax)
  jump_33f0a:
    inc    %edx
    inc    %eax
    cmp    %ebx,%edx
    jge    jump_33fc8
    jmp    jump_33efb
  jump_33f16:
    mov    0xc8(%esp),%cl
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    data_103fa2(%ebx),%cx
    or     %eax,%ecx
    inc    %edx
    mov    %cx,data_103fa2(%ebx)
    cmp    $0x8,%edx
    jl     jump_34031
  jump_33f3e:
    mov    0xe8(%esp),%eax
    add    $0x28,%eax
    add    $0x28,%ebp
    mov    %eax,0xe8(%esp)
    cmp    $0x618,%ebp
    je     jump_3405d
  jump_33f5e:
    lea    0xe0(%esp),%eax
    push   %eax
    lea    0xe0(%esp),%eax
    push   %eax
    lea    0xe0(%esp),%eax
    push   %eax
    lea    0xe0(%esp),%eax
    push   %eax
    lea    0xe0(%esp),%eax
    push   %eax
    lea    0xe0(%esp),%eax
    push   %eax
    lea    0xe0(%esp),%eax
    push   %eax
    mov    0x104(%esp),%ebx
    push   %ebx
    push   $data_91d9a
    push   %esi
    call   func_78071
    add    $0x28,%esp
    mov    %ebx,%edi
    xor    %edx,%edx
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    %ecx,%ebx
    mov    %ebp,%edi
    mov    %ebp,%eax
    test   %ecx,%ecx
    jg     jump_33ef9
  jump_33fc8:
    mov    0xc8(%esp),%al
    xor    %edx,%edx
    mov    %al,data_103f9c(%edi)
    mov    %dx,data_103fa2(%edi)
    mov    0xcc(%esp),%al
    mov    %al,data_103f9d(%edi)
    mov    0xd0(%esp),%al
    mov    %al,data_103f9e(%edi)
    mov    0xd4(%esp),%al
    mov    %al,data_103f9f(%edi)
    mov    0xd8(%esp),%al
    mov    %al,data_103fa0(%edi)
    mov    0xdc(%esp),%eax
    mov    %ebp,%ebx
    mov    %ax,data_103fa4(%edi)
    mov    0xe0(%esp),%al
    xor    %edx,%edx
    mov    %al,data_103fa1(%edi)
  jump_34031:
    lea    0xc8(%esp),%eax
    push   %eax
    push   $data_91db2
    push   %esi
    call   func_78071
    add    $0xc,%esp
    cmpl   $0xff,0xc8(%esp)
    je     jump_33f3e
    jmp    jump_33f16
  jump_3405d:
    mov    %esi,%eax
    call   func_7744e
  jump_34064:
    movl   $0xffffffff,data_1045b4
    add    $0xec,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3407c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%ecx
    xor    %ebp,%ebp
    mov    %ebp,0x4(%esp)
    mov    %ebp,(%esp)
    jmp    jump_340a4
  jump_34092:
    mov    (%esp),%ebx
    mov    0x4(%esp),%esi
    add    $0x4,%ebx
    inc    %esi
    mov    %ebx,(%esp)
    mov    %esi,0x4(%esp)
  jump_340a4:
    xor    %eax,%eax
    mov    0x4(%esp),%esi
    mov    0x1a(%ecx),%ax
    cmp    %esi,%eax
    jle    jump_341ff
    cmp    $0x64,%ebp
    jge    jump_341ff
    mov    (%esp),%edi
    mov    0x10(%ecx),%eax
    add    %edi,%eax
    mov    (%eax),%dl
    and    $0x8,%dl
    and    $0xff,%edx
    jne    jump_34092
    mov    (%eax),%al
    and    $0xff,%eax
    jne    jump_340ef
    mov    0x57(%ecx),%al
    imul   $0x1ee,%eax,%eax
    cmpb   $0x2,data_a310f(%eax)
    jne    jump_34092
  jump_340ef:
    mov    (%esp),%edx
    mov    0x10(%ecx),%eax
    add    %edx,%eax
    cmpb   $0xff,0x1(%eax)
    jne    jump_34092
    mov    %ecx,%eax
    xor    %edx,%edx
    xor    %esi,%esi
    mov    0x4(%esp),%dx
    xor    %edi,%edi
    call   func_35a00
    mov    %eax,%edx
    sar    $0x10,%eax
    mov    %dx,%si
    mov    %ax,%di
    mov    %esi,%ebx
    lea    -0x1(%edi),%edx
    mov    %ecx,%eax
    call   func_35968
    mov    %eax,0x10(%esp)
    lea    0x1(%edi),%edx
    mov    %esi,%ebx
    mov    %ecx,%eax
    call   func_35968
    mov    %eax,0x8(%esp)
    lea    -0x1(%esi),%ebx
    mov    %edi,%edx
    mov    %ecx,%eax
    call   func_35968
    mov    %eax,0xc(%esp)
    lea    0x1(%esi),%ebx
    mov    %edi,%edx
    mov    %ecx,%eax
    call   func_35968
    mov    %eax,%ebx
    xor    %eax,%eax
    mov    0x10(%esp),%ax
    inc    %ebp
    cmp    $0xffff,%eax
    je     jump_34185
    lea    0x0(,%eax,4),%edx
    mov    0x10(%ecx),%eax
    mov    0x2(%edx,%eax,1),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_34092
  jump_34185:
    xor    %eax,%eax
    mov    0x8(%esp),%ax
    cmp    $0xffff,%eax
    je     jump_341aa
    mov    0x10(%ecx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_34092
  jump_341aa:
    xor    %eax,%eax
    mov    0xc(%esp),%ax
    cmp    $0xffff,%eax
    je     jump_341d6
    lea    0x0(,%eax,4),%edx
    mov    0x10(%ecx),%eax
    mov    0x2(%edx,%eax,1),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_34092
  jump_341d6:
    xor    %eax,%eax
    mov    %bx,%ax
    cmp    $0xffff,%eax
    je     jump_341f9
    mov    0x10(%ecx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_34092
  jump_341f9:
    dec    %ebp
    jmp    jump_34092
  jump_341ff:
    mov    %ebp,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3420c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%ecx
    xor    %ebp,%ebp
    mov    %ebp,(%esp)
    mov    %ebp,0x4(%esp)
    jmp    jump_34234
  jump_34222:
    mov    0x4(%esp),%eax
    mov    (%esp),%edx
    add    $0x4,%eax
    inc    %edx
    mov    %eax,0x4(%esp)
    mov    %edx,(%esp)
  jump_34234:
    xor    %eax,%eax
    mov    (%esp),%esi
    mov    0x1a(%ecx),%ax
    cmp    %esi,%eax
    jle    jump_341ff
    cmp    $0x64,%ebp
    jge    jump_341ff
    mov    0x4(%esp),%edi
    mov    0x10(%ecx),%esi
    add    %edi,%esi
    mov    (%esi),%al
    and    $0x8,%al
    and    $0xff,%eax
    jne    jump_34222
    mov    (%esi),%al
    test   %eax,%eax
    jne    jump_34222
    cmpb   $0xff,0x1(%esi)
    jne    jump_34222
    mov    %ecx,%eax
    xor    %edx,%edx
    xor    %esi,%esi
    mov    (%esp),%dx
    xor    %edi,%edi
    call   func_35a00
    mov    %eax,%edx
    sar    $0x10,%eax
    mov    %dx,%si
    mov    %ax,%di
    mov    %esi,%ebx
    lea    -0x1(%edi),%edx
    mov    %ecx,%eax
    call   func_35968
    mov    %eax,0xc(%esp)
    lea    0x1(%edi),%edx
    mov    %esi,%ebx
    mov    %ecx,%eax
    call   func_35968
    mov    %eax,0x10(%esp)
    lea    -0x1(%esi),%ebx
    mov    %edi,%edx
    mov    %ecx,%eax
    call   func_35968
    mov    %eax,0x8(%esp)
    lea    0x1(%esi),%ebx
    mov    %edi,%edx
    mov    %ecx,%eax
    call   func_35968
    mov    %eax,%ebx
    xor    %eax,%eax
    mov    0xc(%esp),%ax
    inc    %ebp
    cmp    $0xffff,%eax
    je     jump_342e6
    mov    0x10(%ecx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_34222
  jump_342e6:
    xor    %eax,%eax
    mov    0x10(%esp),%ax
    cmp    $0xffff,%eax
    je     jump_3430b
    mov    0x10(%ecx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_34222
  jump_3430b:
    xor    %eax,%eax
    mov    0x8(%esp),%ax
    cmp    $0xffff,%eax
    je     jump_34337
    lea    0x0(,%eax,4),%edx
    mov    0x10(%ecx),%eax
    mov    0x2(%edx,%eax,1),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_34222
  jump_34337:
    xor    %eax,%eax
    mov    %bx,%ax
    cmp    $0xffff,%eax
    je     jump_34361
    lea    0x0(,%eax,4),%edx
    mov    0x10(%ecx),%eax
    mov    0x2(%edx,%eax,1),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_34222
  jump_34361:
    dec    %ebp
    jmp    jump_34222


/*----------------------------------------------------------------*/
func_34368:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%esi
    xor    %eax,%eax
    mov    $0xffffffff,%ebp
    mov    0x57(%esi),%al
    mov    %ebp,%edi
    cmp    $0xff,%eax
    jne    jump_3438d
    cmp    $0x5,%dl
    jne    jump_34769
  jump_3438d:
    cmp    $0x27,%dl
    jae    jump_34496
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    xor    %ebp,%ebp
    mov    data_103fa1(,%eax,8),%al
    and    $0xff,%eax
    mov    %eax,0x4(%esp)
    cmp    $0xff,%eax
    je     jump_3440f
    xor    %eax,%eax
    mov    0x4(%esp),%ecx
    mov    data_105258,%ax
    cmp    %ecx,%eax
    jle    jump_3448c
    mov    %ecx,0x8(%esp)
    lea    0x0(,%ecx,4),%eax
    add    %ecx,%eax
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x4,%eax
    sub    %ecx,%eax
    mov    data_10529f(%eax),%eax
    sar    $0x18,%eax
    mov    0x57(%esi),%cl
    mov    %eax,(%esp)
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    %eax,%ecx
    test   %ecx,(%esp)
    je     jump_3448c
  jump_3440f:
    mov    0x42(%esi),%ax
    mov    0x4c(%esi),%cx
    sub    %ecx,%eax
    mov    %eax,0x1c(%esp)
    cmpb   $0xff,0x54(%esi)
    je     jump_34448
    xor    %eax,%eax
    mov    0x54(%esi),%al
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    0x1c(%esp),%ecx
    movsbw data_103fa0(,%eax,8),%ax
    add    %eax,%ecx
    mov    %ecx,0x1c(%esp)
  jump_34448:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    data_103f9d(,%eax,8),%eax
    sar    $0x18,%eax
    mov    %eax,(%esp)
    xor    %eax,%eax
    mov    (%esp),%ecx
    mov    0x1c(%esp),%ax
    cmp    %ecx,%eax
    jl     jump_34479
    mov    $0xffffffff,%ebp
  jump_34479:
    cmp    $0xffffffff,%ebp
    jne    jump_3448c
    cmp    $0x17,%dl
    jne    jump_3448c
    mov    %esi,%eax
    call   func_362e0
    mov    %eax,%ebp
  jump_3448c:
    cmp    $0x5,%dl
    jne    jump_34496
    mov    $0xffffffff,%ebp
  jump_34496:
    cmp    0x1a(%esi),%bx
    jae    jump_3475a
    xor    %edi,%edi
    cmp    $0x27,%dl
    jae    jump_344ef
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    data_103fa2(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_344ea
    mov    0x57(%esi),%al
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    cmpb   $0x2,data_a310f(,%eax,2)
    jne    jump_344ef
  jump_344ea:
    mov    $0xffffffff,%edi
  jump_344ef:
    xor    %eax,%eax
    mov    %bx,%ax
    shl    $0x2,%eax
    mov    %eax,(%esp)
    mov    (%esp),%ecx
    mov    0x10(%esi),%eax
    add    %ecx,%eax
    mov    (%eax),%al
    and    $0xff,%eax
    jne    jump_34532
    cmp    $0xff,%dl
    je     jump_34532
    mov    %dl,%al
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    data_103fa2(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    je     jump_34537
  jump_34532:
    mov    $0xffffffff,%edi
  jump_34537:
    cmp    $0xff,%dl
    je     jump_34575
    cmp    $0x1e,%dl
    ja     jump_34575
    cmp    0x18(%esi),%bx
    setb   %al
    xor    %ecx,%ecx
    mov    %dl,%cl
    mov    %ecx,(%esp)
    xor    %ecx,%ecx
    mov    data_103f98,%cx
    mov    %ecx,0x8(%esp)
    mov    (%esp),%ecx
    and    $0xff,%eax
    cmp    0x8(%esp),%ecx
    setl   %dh
    xor    %ecx,%ecx
    mov    %dh,%cl
    cmp    %ecx,%eax
    je     jump_34575
    xor    %edi,%edi
  jump_34575:
    cmp    $0xff,%dl
    je     jump_345b0
    xor    %eax,%eax
    mov    %bx,%ax
    shl    $0x2,%eax
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    mov    0x10(%esi),%eax
    add    %ecx,%eax
    mov    (%eax),%al
    and    $0x8,%al
    and    $0xff,%eax
    setne  %al
    and    $0xff,%eax
    xor    %ecx,%ecx
    cmp    $0x26,%dl
    sete   %dh
    mov    %dh,%cl
    cmp    %ecx,%eax
    je     jump_345b0
    xor    %edi,%edi
  jump_345b0:
    cmp    $0x24,%dl
    jne    jump_345d2
    xor    %eax,%eax
    mov    %bx,%ax
    mov    0x10(%esi),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    xor    %ecx,%ecx
    mov    (%eax),%cl
    test   %ecx,%ecx
    jne    jump_345d0
    cmpb   $0xff,0x1(%eax)
    je     jump_345d2
  jump_345d0:
    xor    %edi,%edi
  jump_345d2:
    cmp    $0x23,%dl
    jne    jump_34613
    xor    %eax,%eax
    mov    %bx,%ax
    mov    0x10(%esi),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    0x2(%eax),%cx
    xor    %ch,%ch
    and    $0x1,%cl
    mov    %ecx,0x10(%esp)
    xor    %ecx,%ecx
    mov    0x10(%esp),%cx
    test   %ecx,%ecx
    je     jump_34611
    cmpb   $0x17,0x1(%eax)
    je     jump_34611
    mov    0x2(%eax),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    je     jump_34613
  jump_34611:
    xor    %edi,%edi
  jump_34613:
    cmp    0x18(%esi),%bx
    jae    jump_3475a
    xor    %eax,%eax
    mov    %bx,%ax
    lea    0x0(,%eax,4),%ebx
    mov    %ebx,0x8(%esp)
    mov    0x8(%esp),%ecx
    mov    0x10(%esi),%ebx
    add    %ecx,%ebx
    mov    0x2(%ebx),%bx
    xor    %bh,%bh
    and    $0x1,%bl
    mov    %ebx,0x10(%esp)
    xor    %ebx,%ebx
    mov    0x10(%esp),%bx
    test   %ebx,%ebx
    jne    jump_3475a
    cmp    $0x5,%dl
    je     jump_3475a
    cmp    $0x23,%dl
    je     jump_3475a
    mov    %eax,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_35a00
    mov    %eax,%edx
    sar    $0x10,%eax
    mov    %dx,%cx
    and    $0xffff,%eax
    mov    %eax,0x8(%esp)
    lea    -0x1(%eax),%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_35968
    mov    0x8(%esp),%edx
    mov    %eax,0xc(%esp)
    mov    %ecx,%ebx
    inc    %edx
    mov    %esi,%eax
    call   func_35968
    mov    0x8(%esp),%edx
    mov    %eax,0x18(%esp)
    lea    -0x1(%ecx),%ebx
    mov    %esi,%eax
    call   func_35968
    mov    0x8(%esp),%edx
    mov    %eax,0x14(%esp)
    lea    0x1(%ecx),%ebx
    mov    %esi,%eax
    call   func_35968
    mov    %eax,%ebx
    xor    %eax,%eax
    mov    0xc(%esp),%ax
    cmp    $0xffff,%eax
    je     jump_346e9
    mov    0x10(%esi),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_3475a
  jump_346e9:
    xor    %eax,%eax
    mov    0x18(%esp),%ax
    cmp    $0xffff,%eax
    je     jump_3470a
    mov    0x10(%esi),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_3475a
  jump_3470a:
    xor    %eax,%eax
    mov    0x14(%esp),%ax
    cmp    $0xffff,%eax
    je     jump_34732
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    mov    0x2(%edx,%eax,1),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_3475a
  jump_34732:
    xor    %eax,%eax
    mov    %bx,%ax
    cmp    $0xffff,%eax
    je     jump_34758
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    mov    0x2(%edx,%eax,1),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_3475a
  jump_34758:
    xor    %edi,%edi
  jump_3475a:
    test   %ebp,%ebp
    je     jump_34769
    test   %edi,%edi
    je     jump_34769
    mov    $0xffffffff,%eax
    jmp    jump_3476b
  jump_34769:
    xor    %eax,%eax
  jump_3476b:
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_34774:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    cmp    $0xffff,%ebx
    je     jump_347b4
    mov    0x10(%eax),%edi
    cmpb   $0xff,0x1(%edi,%ebx,4)
    jne    jump_347b4
    cmp    $0xffffffff,%ecx
    jne    jump_3479b
    movzbl %dl,%esi
    xor    %edx,%edx
    xor    %ecx,%ecx
    mov    %bx,%dx
    mov    %esi,%ebx
    jmp    jump_347af
  jump_3479b:
    mov    $0x2,%ecx
    xor    %esi,%esi
    and    $0xff,%edx
    mov    %bx,%si
    mov    %edx,%ebx
    mov    %esi,%edx
  jump_347af:
    call   func_34b0c
  jump_347b4:
    pop    %edi
    pop    %esi
    ret

vtable_347b8:
    .long   func_349a9
    .long   func_349a9
    .long   func_3491a
    .long   func_34960
    .long   func_3499f


/*----------------------------------------------------------------*/
func_347cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xe0,%esp
    mov    %eax,%esi
    mov    %dl,0xdc(%esp)
    xor    %eax,%eax
    mov    $0xffff,%edx
    mov    data_105258,%ax
    mov    %edx,0xd0(%esp)
    lea    -0x1(%eax),%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    0x57(%esi),%cl
    xor    %ebp,%ebp
    mov    data_10529f(%eax),%edx
    mov    $0x1,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    mov    %ebp,0xcc(%esp)
    test   %eax,%edx
    je     jump_3485b
    xor    %edx,%edx
    mov    %cl,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    $data_a2f72,%eax
    xor    %edx,%edx
    call   func_40664
    mov    data_105258,%dx
    cmp    %edx,%eax
    jne    jump_3485b
    movl   $0xffffffff,0xcc(%esp)
  jump_3485b:
    xor    %ecx,%ecx
    lea    0x0(,%ebp,2),%edi
    mov    %ecx,0xd8(%esp)
    jmp    jump_3487f
  jump_3486d:
    mov    0xd8(%esp),%ebx
    add    $0x4,%ebx
    inc    %ecx
    mov    %ebx,0xd8(%esp)
  jump_3487f:
    xor    %eax,%eax
    mov    0x1a(%esi),%ax
    cmp    %eax,%ecx
    jge    jump_348c7
    cmp    $0xc8,%edi
    jge    jump_348c7
    mov    0xd8(%esp),%edx
    mov    0x10(%esi),%eax
    add    %edx,%eax
    cmpb   $0xff,0x1(%eax)
    jne    jump_3486d
    mov    %esi,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    0xdc(%esp),%dl
    mov    %cx,%bx
    call   func_34368
    test   %eax,%eax
    je     jump_3486d
    add    $0x2,%edi
    inc    %ebp
    mov    %cx,-0x2(%esp,%edi,1)
    jmp    jump_3486d
  jump_348c7:
    test   %ebp,%ebp
    je     jump_34a1d
    mov    $0xffffffff,%edi
    xor    %ecx,%ecx
    mov    %edi,0xd4(%esp)
    test   %ebp,%ebp
    jle    jump_34a02
    mov    0x10(%esi),%eax
    mov    %eax,0xc8(%esp)
    xor    %esi,%esi
  jump_348f1:
    xor    %eax,%eax
    mov    (%esp,%esi,1),%ax
    mov    0xc8(%esp),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    (%eax),%al
    cmp    $0x4,%al
    ja     func_349a9
    and    $0xff,%eax
    jmp    *%cs:vtable_347b8(,%eax,4)


/*----------------------------------------------------------------*/
func_3491a:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    0xdc(%esp),%dl
    imul   $0x28,%edx,%edx
    mov    data_103f99(%edx),%ebx
    sar    $0x18,%ebx
    xor    %eax,%eax
    test   %ebx,%ebx
    jle    jump_349e9
    mov    data_103f9c(%edx),%bl
    mov    data_103f9d(%edx),%bh
    mov    $0x3,%eax
    cmp    %bh,%bl
    jl     jump_3495a
    cmp    data_103f9e(%edx),%bl
    jge    jump_349e9
  jump_3495a:
    dec    %eax
    jmp    jump_349e9


/*----------------------------------------------------------------*/
func_34960:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    0xdc(%esp),%dl
    imul   $0x28,%edx,%edx
    mov    data_103f9b(%edx),%ebx
    sar    $0x18,%ebx
    xor    %eax,%eax
    test   %ebx,%ebx
    jle    jump_349e9
    mov    data_103f9e(%edx),%bl
    mov    data_103f9c(%edx),%bh
    mov    $0x3,%eax
    cmp    %bh,%bl
    jl     jump_3499c
    cmp    data_103f9d(%edx),%bl
    jge    jump_349e9
  jump_3499c:
    dec    %eax
    jmp    jump_349e9


/*----------------------------------------------------------------*/
func_3499f:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0xcc(%esp)
    je     jump_349b0


/*----------------------------------------------------------------*/
func_349a9:
/*----------------------------------------------------------------*/
    mov    $0x1,%eax
    jmp    jump_349e9
  jump_349b0:
    xor    %edx,%edx
    mov    0xdc(%esp),%dl
    imul   $0x28,%edx,%edx
    mov    data_103f9a(%edx),%ebx
    sar    $0x18,%ebx
    xor    %eax,%eax
    test   %ebx,%ebx
    jle    jump_349e9
    mov    data_103f9d(%edx),%bl
    mov    data_103f9c(%edx),%bh
    mov    $0x3,%eax
    cmp    %bh,%bl
    jl     jump_349e8
    cmp    data_103f9e(%edx),%bl
    jge    jump_349e9
  jump_349e8:
    dec    %eax
  jump_349e9:
    cmp    %edi,%eax
    jle    jump_349f6
    mov    %ecx,0xd4(%esp)
    mov    %eax,%edi
  jump_349f6:
    inc    %ecx
    add    $0x2,%esi
    cmp    %ebp,%ecx
    jl     jump_348f1
  jump_34a02:
    mov    0xd4(%esp),%ecx
    test   %ecx,%ecx
    jl     jump_34a1d
    mov    (%esp,%ecx,2),%ax
    and    $0xffff,%eax
    mov    %eax,0xd0(%esp)
  jump_34a1d:
    mov    0xd0(%esp),%eax
    add    $0xe0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret

vtable_34a30:
    .long   func_34a6d
    .long   func_34a6d
    .long   func_34a76
    .long   func_34a72
    .long   func_34a7b


/*----------------------------------------------------------------*/
func_34a44:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    movl   $0x0,(%edx)
    xor    %edx,%edx
    movl   $0x0,(%ebx)
    mov    %edx,(%esp)
    mov    %edx,0x4(%esp)
    movl   $0x0,(%ecx)
    jmp    jump_34a8f


/*----------------------------------------------------------------*/
func_34a6d:
/*----------------------------------------------------------------*/
    incl   (%edi)
    incl   0x0(%ebp)


/*----------------------------------------------------------------*/
func_34a72:
/*----------------------------------------------------------------*/
    incl   (%ecx)
    jmp    jump_34a7d


/*----------------------------------------------------------------*/
func_34a76:
/*----------------------------------------------------------------*/
    incl   0x0(%ebp)
    jmp    jump_34a7d


/*----------------------------------------------------------------*/
func_34a7b:
/*----------------------------------------------------------------*/
    incl   (%edi)
  jump_34a7d:
    mov    0x4(%esp),%ebx
    mov    (%esp),%eax
    add    $0x4,%ebx
    inc    %eax
    mov    %ebx,0x4(%esp)
    mov    %eax,(%esp)
  jump_34a8f:
    xor    %eax,%eax
    mov    (%esp),%edx
    mov    0x1a(%esi),%ax
    cmp    %edx,%eax
    jle    jump_34ada
    mov    0x4(%esp),%ebx
    mov    0x10(%esi),%eax
    add    %ebx,%eax
    cmpb   $0xff,0x1(%eax)
    jne    jump_34a7d
    mov    %esi,%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    (%esp),%bx
    call   func_34368
    test   %eax,%eax
    je     jump_34a7d
    mov    0x4(%esp),%edx
    mov    0x10(%esi),%eax
    add    %edx,%eax
    mov    (%eax),%al
    cmp    $0x4,%al
    ja     func_34a6d
    and    $0xff,%eax
    jmp    *%cs:vtable_34a30(,%eax,4)
  jump_34ada:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_34ae4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    movzbl %dl,%ebp
    mov    %ebp,%edx
    mov    %ebx,%ecx
    call   func_347cc
    mov    %eax,%edi
    mov    %eax,%ebx
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_34774
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_34b0c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x24,%esp
    mov    %eax,%esi
    mov    %edx,0x1c(%esp)
    mov    %bl,0x20(%esp)
    xor    %eax,%eax
    mov    %dx,%ax
    xor    %ebp,%ebp
    cmp    $0xffff,%eax
    jne    jump_34b57
    xor    %edx,%edx
    mov    %bl,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_103fa2(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    je     jump_34e5e
    cmp    $0x2,%cl
    jne    jump_34e5e
  jump_34b57:
    mov    0x1c(%esp),%eax
    cmp    0x18(%esi),%ax
    setb   %al
    and    $0xff,%eax
    dec    %eax
    mov    %eax,0x18(%esp)
    xor    %eax,%eax
    mov    0x1c(%esp),%ax
    mov    0x10(%esi),%edi
    cmp    $0xffff,%eax
    je     jump_34b86
    shl    $0x2,%eax
    add    %eax,%edi
  jump_34b86:
    cmp    $0x1,%cl
    jb     jump_34e56
    jbe    jump_34c8a
    cmp    $0x3,%cl
    jbe    jump_34d04
    mov    %esi,%eax
    call   func_34e70
    mov    %ebp,%eax
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_34bae:
    cmpb   $0xff,0x1(%edi)
    jne    jump_34e5e
    cmpb   $0x27,0x20(%esp)
    jae    jump_34e5e
    xor    %eax,%eax
    xor    %ecx,%ecx
    mov    0x42(%esi),%ax
    mov    0x4c(%esi),%cx
    xor    %edx,%edx
    sub    %ecx,%eax
    mov    0x20(%esp),%dl
    mov    %eax,%ecx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_103f9d(,%eax,8),%eax
    sar    $0x18,%eax
    cmp    %eax,%ecx
    jl     jump_34e5e
    xor    %eax,%eax
    mov    data_103f98,%ax
    cmp    %eax,%edx
    setge  %al
    mov    0x18(%esp),%ecx
    and    $0xff,%eax
    cmp    %ecx,%eax
    jne    jump_34e5e
    mov    %dl,%al
    mov    %dl,0x1(%edi)
    xor    %edx,%edx
    mov    %al,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    movw   $0x1,0x2(%edi)
    mov    data_103fa2(,%eax,8),%ax
    xor    %ah,%ah
    mov    $0xffffffff,%ebp
    and    $0x4,%al
    and    $0xffff,%eax
    je     jump_34e5e
    lea    0x8(%esp),%eax
    lea    0x4(%esp),%ecx
    push   %eax
    lea    0x4(%esp),%ebx
    mov    %esi,%eax
    call   func_366c8
    cmpl   $0x0,0x8(%esp)
    je     jump_34e5e
    movb   $0x0,0x3(%edi)
    mov    0x8(%esp),%eax
    mov    0x2(%edi),%dx
    shl    $0x8,%eax
    or     %eax,%edx
    mov    %dx,0x2(%edi)
    mov    %esi,%eax
    call   func_34e70
    mov    %ebp,%eax
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_34c8a:
    mov    0x1(%edi),%al
    cmp    $0xff,%al
    je     jump_34e5e
    xor    %edx,%edx
    mov    %al,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_103f9c(,%eax,8),%ebx
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x4a(%esi),%dx
    mov    0x42(%esi),%ax
    sar    $0x18,%ebx
    sub    %eax,%edx
    cmp    %edx,%ebx
    jle    jump_34cd1
    mov    0x2(%edi),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_34e5e
  jump_34cd1:
    movb   $0xff,0x1(%edi)
    movw   $0x0,0x2(%edi)
    mov    0x1c(%esp),%ecx
    cmp    0x52(%esi),%cx
    jne    jump_34cef
    movw   $0xffff,0x52(%esi)
    movb   $0xff,0x54(%esi)
  jump_34cef:
    mov    $0xffffffff,%ebp
    mov    %esi,%eax
    call   func_34e70
    mov    %ebp,%eax
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_34d04:
    je     jump_34d6b
    xor    %edx,%edx
    mov    0x20(%esp),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_103fa2(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    jne    jump_34d6b
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    0x1c(%esp),%bx
    call   func_34368
    test   %eax,%eax
    je     jump_34e5e
    mov    0x2(%edi),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_34d6b
    cmpb   $0x23,0x20(%esp)
    jne    jump_34e5e
    mov    0x2(%edi),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    jne    jump_34e5e
  jump_34d6b:
    xor    %edx,%edx
    mov    0x52(%esi),%dx
    cmp    $0xffff,%edx
    jge    jump_34db2
    mov    0x10(%esi),%ebx
    cmpb   $0x17,0x1(%ebx,%edx,4)
    jne    jump_34d8f
    mov    %esi,%eax
    call   func_35a70
    call   func_49940
  jump_34d8f:
    xor    %eax,%eax
    mov    0x52(%esi),%ax
    mov    0x10(%esi),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    0x2(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    jne    jump_34db2
    movb   $0xff,0x1(%eax)
  jump_34db2:
    xor    %edx,%edx
    mov    0x20(%esp),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    movw   $0xffff,0x52(%esi)
    mov    data_103fa2(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    jne    jump_34dea
    mov    0x1c(%esp),%eax
    mov    %ax,0x52(%esi)
    cmp    $0x23,%dl
    je     jump_34dea
    mov    %dl,0x1(%edi)
  jump_34dea:
    mov    0x20(%esp),%al
    xor    %edx,%edx
    mov    %al,%dl
    mov    %al,0x54(%esi)
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_103fa2(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x4,%al
    and    $0xffff,%eax
    je     jump_34e41
    lea    0x14(%esp),%eax
    lea    0x10(%esp),%ecx
    push   %eax
    lea    0x10(%esp),%ebx
    mov    %esi,%eax
    call   func_366c8
    cmpl   $0x0,0x14(%esp)
    je     jump_34e41
    movb   $0x0,0x3(%edi)
    mov    0x14(%esp),%eax
    mov    0x2(%edi),%bx
    shl    $0x8,%eax
    or     %eax,%ebx
    mov    %bx,0x2(%edi)
  jump_34e41:
    mov    $0xffffffff,%ebp
    mov    %esi,%eax
    call   func_34e70
    mov    %ebp,%eax
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_34e56:
    test   %cl,%cl
    je     jump_34bae
  jump_34e5e:
    mov    %esi,%eax
    call   func_34e70
    mov    %ebp,%eax
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_34e70:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x30,%esp
    mov    %eax,%ebx
    xor    %edx,%edx
    xor    %ecx,%ecx
    xor    %eax,%eax
    xor    %ebp,%ebp
    mov    %edx,0x1c(%esp)
    mov    %edx,0x18(%esp)
    mov    %edx,0x20(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x14(%esp)
    mov    %edx,0xc(%esp)
    mov    %edx,0x10(%esp)
    mov    %edx,(%esp)
    mov    0x55(%ebx),%ax
    mov    %edx,0x8(%esp)
    mov    %eax,0x24(%esp)
    jmp    jump_34f4f
  jump_34eb3:
    mov    0x6(%eax),%si
    and    $0x8,%esi
    and    $0xffff,%esi
    jne    jump_34ec7
    cmp    $0x11,%dl
    jne    jump_34ecb
  jump_34ec7:
    incl   0x8(%esp)
  jump_34ecb:
    mov    (%eax),%esi
    mov    0x24(%esp),%edi
    sar    $0x18,%esi
    add    %esi,%edi
    mov    %edi,0x24(%esp)
  jump_34eda:
    cmp    $0x17,%dl
    je     jump_34f4b
    mov    0x10(%ebx),%esi
    mov    0x2(%ecx,%esi,1),%si
    and    $0x2,%esi
    and    $0xffff,%esi
    jne    jump_34f4b
    movzbl %dl,%esi
    imul   $0x28,%esi,%esi
    mov    data_103fa2(%esi),%si
    and    $0x40,%esi
    and    $0xffff,%esi
    jne    jump_34f4b
    mov    0x1(%eax),%eax
    mov    0x4(%esp),%edx
    sar    $0x18,%eax
    add    %eax,%edx
    mov    %edx,0x4(%esp)
    jmp    jump_34f4b
  jump_34f20:
    xor    %eax,%eax
    mov    0x18(%ebx),%ax
    cmp    %eax,%ebp
    jl     jump_34f30
    incl   0x10(%esp)
    jmp    jump_34f4b
  jump_34f30:
    mov    (%esi),%al
    and    $0x8,%al
    and    $0xff,%eax
    jne    jump_34f4b
    incl   0x14(%esp)
    xor    %eax,%eax
    mov    (%esi),%al
    test   %eax,%eax
    jne    jump_34f4b
    incl   0xc(%esp)
  jump_34f4b:
    add    $0x4,%ecx
    inc    %ebp
  jump_34f4f:
    xor    %eax,%eax
    mov    0x1a(%ebx),%ax
    cmp    %eax,%ebp
    jge    jump_3501b
    mov    0x10(%ebx),%esi
    add    %ecx,%esi
    xor    %eax,%eax
    mov    0x1(%esi),%dl
    mov    %dl,%al
    imul   $0x28,%eax,%eax
    add    $data_103f9c,%eax
    cmp    $0xff,%dl
    je     jump_34f20
    mov    0x2(%esi),%di
    and    $0x1,%edi
    mov    %edi,0x2c(%esp)
    xor    %edi,%edi
    mov    0x2c(%esp),%di
    test   %edi,%edi
    je     jump_34eda
    mov    (%eax),%dh
    test   %dh,%dh
    je     jump_34fa9
    movsbl %dh,%edi
    movzbl (%esi),%esi
    add    %edi,0x1c(%esp)
    cmp    $0x2,%esi
    jne    jump_34fa9
    incl   0x1c(%esp)
  jump_34fa9:
    mov    0x2(%eax),%dh
    test   %dh,%dh
    je     jump_34fd0
    mov    0x20(%esp),%edi
    movsbl %dh,%esi
    add    %esi,%edi
    mov    0x10(%ebx),%esi
    movzbl (%ecx,%esi,1),%esi
    mov    %edi,0x20(%esp)
    cmp    $0x3,%esi
    jne    jump_34fd0
    lea    0x1(%edi),%esi
    mov    %esi,0x20(%esp)
  jump_34fd0:
    mov    0x1(%eax),%dh
    test   %dh,%dh
    je     jump_34ff7
    mov    0x18(%esp),%edi
    movsbl %dh,%esi
    add    %esi,%edi
    mov    0x10(%ebx),%esi
    movzbl (%ecx,%esi,1),%esi
    mov    %edi,0x18(%esp)
    cmp    $0x4,%esi
    jne    jump_34ff7
    lea    0x1(%edi),%esi
    mov    %esi,0x18(%esp)
  jump_34ff7:
    mov    0x6(%eax),%si
    and    $0x4,%esi
    and    $0xffff,%esi
    je     jump_34eb3
    cmp    $0x11,%dl
    je     jump_34eb3
    incl   (%esp)
    jmp    jump_34ecb
  jump_3501b:
    mov    $0xc,%edx
    mov    %ebx,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_35056
    mov    0x10(%ebx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_35056
    mov    0x1c(%esp),%eax
    mov    0x1c(%esp),%edi
    sar    %eax
    add    %eax,%edi
    mov    %edi,0x1c(%esp)
  jump_35056:
    mov    $0xd,%edx
    mov    %ebx,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_35091
    mov    0x10(%ebx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_35091
    mov    0x20(%esp),%eax
    mov    0x20(%esp),%ebp
    sar    %eax
    add    %eax,%ebp
    mov    %ebp,0x20(%esp)
  jump_35091:
    mov    $0xe,%edx
    mov    %ebx,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_350cc
    mov    0x10(%ebx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_350cc
    mov    0x18(%esp),%eax
    mov    0x18(%esp),%edx
    sar    %eax
    add    %eax,%edx
    mov    %edx,0x18(%esp)
  jump_350cc:
    cmpb   $0xff,0x54(%ebx)
    je     jump_35109
    mov    0x1c(%esp),%eax
    mov    0x54(%ebx),%dl
    sar    $0x2,%eax
    cmp    $0x21,%dl
    jne    jump_350e7
    add    %eax,0x20(%esp)
    jmp    jump_35109
  jump_350e7:
    cmp    $0x22,%dl
    jne    jump_350f2
    add    %eax,0x18(%esp)
    jmp    jump_35109
  jump_350f2:
    cmp    $0x23,%dl
    jne    jump_35109
    mov    data_104515,%eax
    mov    0x4(%esp),%ecx
    sar    $0x18,%eax
    add    %eax,%ecx
    mov    %ecx,0x4(%esp)
  jump_35109:
    mov    0x1c(%esp),%ebp
    test   %ebp,%ebp
    je     jump_3513a
    lea    0x1(%ebp),%eax
    push   $0x3feb3333
    mov    %eax,0x2c(%esp)
    push   $0x33333333
    fildl  0x30(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_78b20
    call   func_76e98
    fistpl 0x1c(%esp)
  jump_3513a:
    mov    0x20(%esp),%eax
    test   %eax,%eax
    je     jump_35169
    inc    %eax
    push   $0x3feb3333
    mov    %eax,0x2c(%esp)
    push   $0x33333333
    fildl  0x30(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_78b20
    call   func_76e98
    fistpl 0x20(%esp)
  jump_35169:
    xor    %edx,%edx
    mov    0x42(%ebx),%dx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x2,%edx
    sbb    %edx,%eax
    sar    $0x2,%eax
    mov    0x20(%esp),%edx
    sub    %eax,%edx
    mov    %edx,0x20(%esp)
    test   %edx,%edx
    jge    jump_35190
    xor    %esi,%esi
    mov    %esi,0x20(%esp)
  jump_35190:
    mov    0x14(%esp),%eax
    mov    %ax,0x1c(%ebx)
    mov    0xc(%esp),%eax
    mov    %ax,0x20(%ebx)
    mov    0x10(%esp),%eax
    mov    %ax,0x1e(%ebx)
    mov    0x1c(%esp),%eax
    mov    %ax,0x44(%ebx)
    mov    0x18(%esp),%eax
    mov    %ax,0x46(%ebx)
    mov    data_104bea,%ch
    cmp    0x57(%ebx),%ch
    je     jump_35255
    cmpl   $0x0,data_a0d00
    je     jump_35246
    jmp    jump_35255
  jump_351d5:
    xor    %eax,%eax
    mov    0x44(%ebx),%ax
    mov    %eax,0x28(%esp)
    fildl  0x28(%esp)
    fmull  data_91db5
    call   func_76e98
    fistpl 0x28(%esp)
    mov    0x28(%esp),%eax
    mov    %ax,0x44(%ebx)
    jmp    jump_35255
  jump_351fc:
    xor    %eax,%eax
    mov    0x44(%ebx),%ax
    mov    %eax,0x28(%esp)
    fldl   data_91db5
    fildl  0x28(%esp)
    fmul   %st(1),%st
    call   func_76e98
    fistpl 0x28(%esp)
    mov    0x28(%esp),%eax
    mov    %ax,0x44(%ebx)
    xor    %eax,%eax
    mov    0x46(%ebx),%ax
    mov    %eax,0x28(%esp)
    fildl  0x28(%esp)
    fmulp  %st,%st(1)
    call   func_76e98
    fistpl 0x28(%esp)
    mov    0x28(%esp),%eax
    mov    %ax,0x46(%ebx)
    jmp    jump_35255
  jump_35246:
    mov    data_a3d20,%al
    cmp    $0x1,%al
    jb     jump_35255
    jbe    jump_351d5
    cmp    $0x2,%al
    je     jump_351fc
  jump_35255:
    mov    0x20(%esp),%eax
    mov    %ax,0x48(%ebx)
    mov    0x24(%esp),%eax
    mov    %ax,0x4a(%ebx)
    mov    0x4(%esp),%eax
    mov    %ax,0x4c(%ebx)
    mov    (%esp),%al
    mov    %al,0x58(%ebx)
    mov    0x8(%esp),%al
    mov    %al,0x59(%ebx)
    xor    %eax,%eax
    mov    0x4a(%ebx),%ax
    test   %eax,%eax
    jge    jump_3528c
    movw   $0x0,0x4a(%ebx)
    jmp    jump_35297
  jump_3528c:
    cmp    $0x64,%eax
    jle    jump_35297
    movw   $0x64,0x4a(%ebx)
  jump_35297:
    xor    %eax,%eax
    mov    0x42(%ebx),%ax
    test   %eax,%eax
    jge    jump_352a9
    movw   $0x0,0x42(%ebx)
    jmp    jump_352b6
  jump_352a9:
    mov    0x4a(%ebx),%dx
    cmp    %dx,%ax
    jbe    jump_352b6
    mov    %dx,0x42(%ebx)
  jump_352b6:
    xor    %eax,%eax
    mov    0x4c(%ebx),%ax
    test   %eax,%eax
    jge    jump_352c8
    movw   $0x0,0x4c(%ebx)
    jmp    jump_352d5
  jump_352c8:
    mov    0x42(%ebx),%cx
    cmp    %cx,%ax
    jbe    jump_352d5
    mov    %cx,0x4c(%ebx)
  jump_352d5:
    add    $0x30,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_352e0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3c,%esp
    mov    %eax,%esi
    movl   $0x0,0x62(%eax)
    xor    %eax,%eax
    mov    0x57(%esi),%al
    cmp    $0xff,%eax
    je     jump_3576a
    xor    %edx,%edx
    mov    0x10(%esi),%edi
    mov    %dx,0x38(%esp)
    xor    %ebp,%ebp
    jmp    jump_3531d
  jump_35310:
    mov    0x38(%esp),%ebx
    inc    %ebx
    add    $0x4,%edi
    mov    %bx,0x38(%esp)
  jump_3531d:
    mov    0x36(%esp),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    0x1a(%esi),%ax
    cmp    %eax,%edx
    jge    jump_3537f
    cmpb   $0xff,0x1(%edi)
    je     jump_35310
    xor    %edx,%edx
    mov    0x1(%edi),%dl
    imul   $0x28,%edx,%eax
    mov    data_103fa2(%eax),%ax
    xor    %ah,%ah
    and    $0x4,%al
    and    $0xffff,%eax
    je     jump_35310
    lea    0x30(%esp),%eax
    lea    0x28(%esp),%ecx
    push   %eax
    lea    0x28(%esp),%ebx
    mov    %esi,%eax
    call   func_366c8
    cmp    0x30(%esp),%ebp
    je     jump_35310
    movb   $0x0,0x3(%edi)
    mov    0x30(%esp),%eax
    mov    0x2(%edi),%dx
    shl    $0x8,%eax
    or     %eax,%edx
    mov    %dx,0x2(%edi)
    jmp    jump_35310
  jump_3537f:
    mov    0x54(%esi),%ah
    xor    %ebp,%ebp
    cmp    $0xff,%ah
    je     jump_35657
    xor    %edx,%edx
    mov    %ah,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    mov    data_103fa2(%eax),%dx
    xor    %dh,%dh
    and    $0x20,%dl
    and    $0xffff,%edx
    jne    jump_35657
    mov    0x52(%esi),%dx
    cmp    $0xffff,%edx
    jne    jump_353df
    mov    data_103fa2(%eax),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    %edx,%eax
    jne    jump_353df
    mov    $0x3e9,%ebx
    mov    $data_91dbd,%edx
    call   func_26198
  jump_353df:
    mov    0x44(%esi),%ax
    mov    0x50(%esi),%bx
    xor    %edx,%edx
    add    %eax,%ebx
    mov    0x52(%esi),%dx
    mov    %bx,0x50(%esi)
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    0x54(%esi),%bl
    call   func_3583c
    cmp    0x50(%esi),%ax
    ja     jump_355fb
    mov    data_104bea,%dh
    mov    0x57(%esi),%al
    cmp    %dh,%al
    jne    jump_35455
    cmpb   $0x2,0x54(%esi)
    jne    jump_35455
    xor    %edx,%edx
    mov    %al,%dl
    mov    data_106fa6(,%edx,2),%ax
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_35455
    mov    $data_105258,%eax
    call   func_469f0
    test   %eax,%eax
    jne    jump_35455
    mov    $0x19,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_55aec
  jump_35455:
    mov    data_104bea,%bh
    cmp    0x57(%esi),%bh
    jne    jump_35494
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x11,%eax
    je     jump_35494
    cmpb   $0x17,0x54(%esi)
    je     jump_35494
    cmpl   $0x0,0x5a(%esi)
    jne    jump_35494
    mov    $0x1,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    mov    %esi,%ebx
    mov    0x54(%esi),%cl
    mov    $0xffffffff,%ebp
    call   func_55aec
  jump_35494:
    xor    %eax,%eax
    mov    0x52(%esi),%ax
    mov    0x10(%esi),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    (%eax),%dl
    and    $0x8,%dl
    and    $0xff,%edx
    je     jump_354d3
    andb   $0xf7,(%eax)
    xor    %eax,%eax
    mov    0x10(%esi),%edx
    mov    0x52(%esi),%ax
    mov    %esi,%ebx
    movb   $0xff,0x1(%edx,%eax,4)
    xor    %edx,%edx
    mov    $data_105258,%eax
    mov    0x57(%esi),%dl
    call   func_46a94
    jmp    jump_354d7
  jump_354d3:
    orb    $0x1,0x2(%eax)
  jump_354d7:
    cmpb   $0x17,0x54(%esi)
    jne    jump_35518
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0x52(%esi),%dx
    call   func_35a70
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_354ff
    mov    $0x415,%ebx
    mov    $data_91dcb,%edx
    call   func_26198
  jump_354ff:
    cmpb   $0x1,0x58(%ecx)
    jne    jump_35511
    movsbw data_104338,%ax
    sub    %ax,0x42(%esi)
  jump_35511:
    mov    %ecx,%eax
    call   func_49828
  jump_35518:
    cmpb   $0x24,0x54(%esi)
    jne    jump_3555e
    xor    %eax,%eax
    mov    0x52(%esi),%ax
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    movw   $0x0,0x2(%edx,%eax,1)
    xor    %eax,%eax
    mov    0x52(%esi),%ax
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    movb   $0xff,0x1(%edx,%eax,1)
    xor    %eax,%eax
    mov    0x52(%esi),%ax
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    movb   $0x1,(%edx,%eax,1)
  jump_3555e:
    cmpb   $0x23,0x54(%esi)
    jne    jump_35572
    xor    %eax,%eax
    mov    0x10(%esi),%edx
    mov    0x52(%esi),%ax
    orb    $0x2,0x2(%edx,%eax,4)
  jump_35572:
    cmpb   $0x25,0x54(%esi)
    jne    jump_3558d
    mov    0x66(%esi),%al
    and    $0x1,%al
    and    $0xff,%eax
    jne    jump_3558d
    addw   $0xa,0x55(%esi)
    orb    $0x1,0x66(%esi)
  jump_3558d:
    xor    %edx,%edx
    mov    0x54(%esi),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_103fa2(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x8,%al
    and    $0xffff,%eax
    je     jump_355e9
    mov    0x52(%esi),%ax
    cmp    0x18(%esi),%ax
    jb     jump_355e9
    mov    0x54(%esi),%dl
    mov    $0xf,%eax
    cmp    $0x1b,%dl
    jne    jump_355ca
    mov    $0x23,%eax
  jump_355ca:
    xor    %edx,%edx
    mov    0x10(%esi),%ebx
    mov    0x52(%esi),%dx
    movb   $0x0,0x3(%ebx,%edx,4)
    xor    %edx,%edx
    mov    0x10(%esi),%ebx
    mov    0x52(%esi),%dx
    shl    $0x8,%eax
    or     %ax,0x2(%ebx,%edx,4)
  jump_355e9:
    movw   $0xffff,0x52(%esi)
    movb   $0xff,0x54(%esi)
    movw   $0x0,0x50(%esi)
    jmp    jump_35657
  jump_355fb:
    cmpb   $0x1f,0x54(%esi)
    jne    jump_35657
    mov    data_a2f6c,%eax
    mov    %eax,%edx
    mov    $0xa,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    test   %edx,%edx
    jne    jump_35657
    mov    0x44(%esi),%dx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    movzbl data_104bea,%edi
    lea    0x1(%eax),%ecx
    xor    %edx,%edx
    xor    %eax,%eax
    jmp    jump_3564a
  jump_35631:
    mov    data_a3124(%edx,%edi,2),%bx
    add    $0x1ee,%edx
    add    %ecx,%ebx
    inc    %eax
    mov    %bx,data_a2f36(%edx,%edi,2)
  jump_3564a:
    mov    data_a3cf2,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jl     jump_35631
  jump_35657:
    mov    0x42(%esi),%ax
    cmp    0x4a(%esi),%ax
    jae    jump_3575d
    mov    0x48(%esi),%ax
    mov    0x4e(%esi),%di
    mov    data_104bea,%bl
    add    %eax,%edi
    mov    0x57(%esi),%al
    mov    %di,0x4e(%esi)
    cmp    %bl,%al
    je     jump_35692
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    $0x4,%eax
    jge    jump_35692
    mov    %edi,%eax
    inc    %eax
    mov    %ax,0x4e(%esi)
  jump_35692:
    xor    %eax,%eax
    mov    data_9684c,%ecx
    mov    0x4e(%esi),%ax
    cmp    %ecx,%eax
    jl     jump_35763
    mov    data_104bea,%bh
    cmp    0x57(%esi),%bh
    jne    jump_3570d
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x11,%eax
    je     jump_3570d
    mov    0x42(%esi),%ax
    cmp    0x4c(%esi),%ax
    jne    jump_3570d
    test   %ebp,%ebp
    jne    jump_3570d
    cmpl   $0x0,0x5a(%esi)
    jne    jump_3570d
    mov    0x54(%esi),%cl
    cmp    $0xff,%cl
    je     jump_356fa
    xor    %edx,%edx
    mov    %cl,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_103fa2(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x20,%al
    and    $0xffff,%eax
    je     jump_3570d
  jump_356fa:
    mov    $0xf,%edx
    mov    $data_10ae70,%eax
    mov    %esi,%ebx
    xor    %ecx,%ecx
    call   func_55aec
  jump_3570d:
    mov    0x42(%esi),%bx
    mov    $0xf,%edx
    inc    %ebx
    mov    %esi,%eax
    mov    %bx,0x42(%esi)
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_3574c
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    mov    0x2(%edx,%eax,1),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_3574c
    incw   0x42(%esi)
  jump_3574c:
    mov    0x42(%esi),%ax
    mov    0x4a(%esi),%di
    cmp    %di,%ax
    jbe    jump_3575d
    mov    %di,0x42(%esi)
  jump_3575d:
    movw   $0x0,0x4e(%esi)
  jump_35763:
    mov    %esi,%eax
    call   func_34e70
  jump_3576a:
    mov    (%esi),%eax
    mov    %eax,(%esp)
    mov    0x4(%esi),%eax
    mov    %eax,0x4(%esp)
    flds   0x4(%esp)
    fmul   %st(0),%st
    flds   (%esp)
    fmul   %st(0),%st
    mov    0x8(%esi),%eax
    faddp  %st,%st(1)
    mov    %eax,0x8(%esp)
    flds   0x8(%esp)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    %esp,%eax
    fstps  0x34(%esp)
    call   func_53000
    flds   0x34(%esp)
    fmul   %st(0),%st
    fdivrl data_91dd9
    sub    $0x4,%esp
    lea    0x4(%esp),%eax
    fstps  (%esp)
    call   func_532ac
    flds   (%esp)
    lea    0x18(%esp),%eax
    fmuls  0x34(%esp)
    mov    %eax,0x2c(%esp)
    fstps  0xc(%esp)
    flds   0x4(%esp)
    mov    0xc(%esp),%eax
    fmuls  0x34(%esp)
    mov    %eax,0x18(%esp)
    fstps  0x10(%esp)
    flds   0x8(%esp)
    mov    0x10(%esp),%eax
    fmuls  0x34(%esp)
    mov    %eax,0x1c(%esp)
    fstps  0x14(%esp)
    mov    0x14(%esp),%eax
    mov    %eax,0x20(%esp)
    mov    0xc(%esp),%eax
    mov    %eax,(%esp)
    mov    0x10(%esp),%eax
    mov    %eax,0x4(%esp)
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%esp)
    mov    0xc(%esp),%eax
    mov    %eax,(%esi)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%esi)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%esi)
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3583c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%esi
    xor    %edi,%edi
    mov    %dx,%di
    mov    $0xffff,%eax
    cmp    $0xffff,%edi
    je     jump_3585c
    mov    0x10(%ecx),%ebx
    mov    0x1(%ebx,%edi,4),%bl
  jump_3585c:
    cmp    $0xff,%bl
    je     jump_358b7
    cmp    $0x17,%bl
    jne    jump_35890
    xor    %edi,%edi
    mov    %si,%di
    mov    %ecx,%eax
    mov    %edi,%edx
    call   func_35a70
    cmpb   $0x2,0x58(%eax)
    jne    jump_35880
    mov    0x77(%ecx),%ax
    jmp    jump_358a9
  jump_35880:
    mov    %edi,%edx
    mov    %ecx,%eax
    call   func_35a70
    call   func_4a18c
    jmp    jump_358a9
  jump_35890:
    cmp    $0xff,%bl
    je     jump_358a9
    movzbl %bl,%edi
    lea    0x0(,%edi,4),%eax
    add    %edi,%eax
    mov    data_103fa4(,%eax,8),%ax
  jump_358a9:
    cmp    $0x23,%bl
    jne    jump_358b7
    cmp    0x52(%ecx),%si
    jne    jump_358b7
    imul   $0x3,%eax,%eax
  jump_358b7:
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_358bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    xor    %esi,%esi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x44(%eax),%si
    mov    0x54(%eax),%bl
    mov    0x52(%eax),%dx
    mov    0x50(%eax),%cx
    call   func_3583c
    and    $0xffff,%eax
    mov    %esi,%ebx
    mov    %ecx,%edx
    call   func_46c20
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_358f0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    0x18(%esi),%dx
    xor    %ebx,%ebx
    xor    %eax,%eax
    test   %dx,%dx
    jbe    jump_35926
    mov    0x10(%esi),%edi
  jump_35907:
    xor    %edx,%edx
    mov    %ax,%dx
    shl    $0x2,%edx
    add    %edi,%edx
    mov    0x1(%edx),%cl
    cmp    $0xff,%cl
    je     jump_3591f
    cmp    $0x5,%cl
    je     jump_3591f
    inc    %ebx
  jump_3591f:
    inc    %eax
    cmp    0x18(%esi),%ax
    jb     jump_35907
  jump_35926:
    mov    %ebx,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35930:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ebx
    mov    %dl,%cl
    mov    0x1a(%ebx),%dx
    xor    %eax,%eax
    test   %dx,%dx
    ja     jump_3594d
    jmp    jump_3595f
  jump_35944:
    inc    %eax
    cmp    0x1a(%ebx),%ax
    jb     jump_35950
    jmp    jump_3595f
  jump_3594d:
    mov    0x10(%ebx),%esi
  jump_35950:
    xor    %edx,%edx
    mov    %ax,%dx
    cmp    0x1(%esi,%edx,4),%cl
    jne    jump_35944
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3595f:
    mov    $0xffff,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35968:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    $0xffff,%edx
    xor    %ebx,%ebx
    mov    %edx,0x4(%esp)
    test   %esi,%esi
    jl     jump_359f1
    cmp    $0xf,%esi
    jge    jump_359f1
    test   %edi,%edi
    jl     jump_359f1
    xor    %edx,%edx
    test   %esi,%esi
    jle    jump_359b8
    xor    %eax,%eax
    mov    0x14(%ebp),%ax
    mov    %eax,(%esp)
    mov    (%esp),%ecx
    shl    $0x4,%eax
    sub    %ecx,%eax
  jump_359a8:
    inc    %eax
    xor    %ch,%ch
    mov    data_104603(%eax),%cl
    inc    %edx
    add    %ecx,%ebx
    cmp    %esi,%edx
    jl     jump_359a8
  jump_359b8:
    xor    %edx,%edx
    mov    0x14(%ebp),%dx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    add    %eax,%esi
    xor    %eax,%eax
    mov    data_1045b8(%esi),%al
    cmp    %eax,%edi
    jl     jump_359f1
    xor    %edx,%edx
    mov    data_104604(%esi),%dl
    add    %edx,%eax
    cmp    %eax,%edi
    jge    jump_359f1
    xor    %ah,%ah
    add    %edi,%ebx
    mov    data_1045b8(%esi),%al
    sub    %eax,%ebx
    mov    %ebx,0x4(%esp)
  jump_359f1:
    mov    0x4(%esp),%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_35a00:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    %edx,%ebx
    mov    0x18(%eax),%cx
    mov    $0xffffffff,%edi
    cmp    %cx,%dx
    jae    jump_35a68
    mov    %ebp,%edx
    xor    %edi,%edi
    xor    %ecx,%ecx
    mov    0x18(%edx),%si
    xor    %eax,%eax
    test   %si,%si
    jbe    jump_35a63
    xor    %esi,%esi
    mov    0x14(%edx),%si
    mov    %esi,%edx
    shl    $0x4,%edx
    sub    %esi,%edx
  jump_35a35:
    xor    %esi,%esi
    movzbl data_1045b8(%edx),%edi
    mov    %bx,%si
    add    %edi,%esi
    xor    %edi,%edi
    mov    %ax,%di
    sub    %edi,%esi
    mov    %esi,%edi
    movzbw data_104604(%edx),%si
    add    %esi,%eax
    cmp    %bx,%ax
    ja     jump_35a63
    inc    %edx
    inc    %ecx
    cmp    0x18(%ebp),%ax
    jb     jump_35a35
  jump_35a63:
    shl    $0x10,%ecx
    add    %ecx,%edi
  jump_35a68:
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35a70:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    cmp    0x1a(%eax),%cx
    jb     jump_35a8e
    mov    $0x50b,%ebx
    mov    $data_91de1,%edx
    xor    %eax,%eax
    call   func_26198
  jump_35a8e:
    xor    %eax,%eax
    mov    0x10(%esi),%esi
    mov    %cx,%ax
    mov    0x2(%esi,%eax,4),%ax
    and    $0xffff,%eax
    sar    $0x8,%eax
    and    $0x7f,%eax
    mov    %eax,%ecx
    xor    %eax,%eax
    mov    %cx,%ax
    cmp    $0x6b,%eax
    jl     jump_35ac3
    mov    $0x50f,%ebx
    mov    $data_91def,%edx
    xor    %eax,%eax
    call   func_26198
  jump_35ac3:
    xor    %eax,%eax
    mov    %cx,%ax
    imul   $0x162,%eax,%eax
    mov    data_ca245(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_35aed
    mov    $0x510,%ebx
    mov    $data_91dfd,%edx
    xor    %eax,%eax
    call   func_26198
  jump_35aed:
    xor    %eax,%eax
    mov    %cx,%ax
    imul   $0x162,%eax,%eax
    add    $data_ca1f1,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35b04:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %ebx,%edi
    cmp    0x1a(%eax),%si
    jb     jump_35b24
    mov    $0x519,%ebx
    mov    $data_91e0b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_35b24:
    cmp    0x18(%ecx),%si
    jae    jump_35b3b
    mov    $0x51a,%ebx
    mov    $data_91e19,%edx
    xor    %eax,%eax
    call   func_26198
  jump_35b3b:
    mov    %edi,%edx
    sub    $data_ca1f1,%edx
    mov    $0x162,%edi
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %edi
    mov    %eax,%edi
    xor    %eax,%eax
    mov    %di,%ax
    cmp    $0x6b,%eax
    jl     jump_35b6c
    mov    $0x51e,%ebx
    mov    $data_91e27,%edx
    xor    %eax,%eax
    call   func_26198
  jump_35b6c:
    xor    %eax,%eax
    mov    %di,%ax
    imul   $0x162,%eax,%eax
    mov    data_ca245(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_35b96
    mov    $0x51f,%ebx
    mov    $data_91e35,%edx
    xor    %eax,%eax
    call   func_26198
  jump_35b96:
    xor    %eax,%eax
    mov    0x10(%ecx),%edx
    mov    %si,%ax
    mov    0x2(%edx,%eax,4),%cx
    shl    $0x8,%edi
    xor    %ch,%ch
    or     %edi,%ecx
    mov    %cx,0x2(%edx,%eax,4)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_35bb4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%edi
    xor    %edx,%edx
    mov    0x57(%eax),%dl
    mov    0x54(%edi),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    je     jump_35bd6
    mov    %ecx,%eax
    call   func_361b8
    test   %eax,%eax
    jne    jump_35c2f
  jump_35bd6:
    xor    %edx,%edx
    mov    0x18(%ecx),%dx
    lea    0x0(,%edx,4),%eax
    jmp    jump_35be9
  jump_35be5:
    add    $0x4,%eax
    inc    %edx
  jump_35be9:
    xor    %esi,%esi
    mov    0x1a(%ecx),%si
    cmp    %esi,%edx
    jge    jump_35c2f
    mov    0x10(%ecx),%esi
    cmpb   $0xff,0x1(%esi,%eax,1)
    jne    jump_35be5
    movb   $0x3,0x58(%edi)
    mov    %ecx,0x59(%edi)
    mov    0x10(%ecx),%esi
    movb   $0x17,0x1(%esi,%eax,1)
    mov    0x10(%ecx),%esi
    movw   $0x1,0x2(%esi,%eax,1)
    and    $0xffff,%edx
    mov    %edi,%ebx
    mov    %ecx,%eax
    call   func_35b04
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_35c2f:
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35c38:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x2c,%esp
    mov    %eax,%ebx
    mov    %edx,%edi
    xor    %ecx,%ecx
    mov    0x18(%eax),%cx
    lea    0x0(,%ecx,4),%esi
    jmp    jump_35c57
  jump_35c53:
    add    $0x4,%esi
    inc    %ecx
  jump_35c57:
    xor    %eax,%eax
    mov    0x1a(%ebx),%ax
    cmp    %eax,%ecx
    jge    jump_35d96
    mov    0x10(%ebx),%eax
    add    %esi,%eax
    cmpw   $0x0,0x2(%eax)
    je     jump_35c53
    cmpb   $0x17,0x1(%eax)
    jne    jump_35c53
    xor    %edx,%edx
    mov    %ebx,%eax
    mov    %cx,%dx
    call   func_35a70
    cmp    %edi,%eax
    jne    jump_35c53
    mov    0x10(%ebx),%eax
    movb   $0xff,0x1(%esi,%eax,1)
    mov    0x10(%ebx),%eax
    movw   $0x0,0x2(%esi,%eax,1)
    movb   $0x4,0x58(%edi)
    mov    0xa(%ebx),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $data_a3d21,%edx
    shl    $0x5,%eax
    add    %eax,%edx
    mov    %edx,0x59(%edi)
    xor    %edx,%edx
    mov    %edx,(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x8(%esp)
    call   func_782df
    mov    %eax,%edx
    mov    $0x3e8,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x24(%esp)
    fildl  0x24(%esp)
    fstps  (%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x24(%esp)
    fildl  0x24(%esp)
    fstps  0x4(%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x24(%esp)
    mov    %esp,%eax
    fildl  0x24(%esp)
    fstps  0x8(%esp)
    push   $0x437a0000
    xor    %ebp,%ebp
    call   func_53054
    lea    0xc(%esp),%eax
    mov    %ebp,0x18(%esp)
    mov    %ebp,0x1c(%esp)
    mov    %ebp,0x20(%esp)
    mov    %eax,0x28(%esp)
    flds   (%ebx)
    fadds  (%esp)
    fstps  0x18(%esp)
    flds   0x4(%ebx)
    fadds  0x4(%esp)
    mov    0x18(%esp),%eax
    fstps  0x1c(%esp)
    flds   0x8(%ebx)
    mov    %eax,0xc(%esp)
    fadds  0x8(%esp)
    mov    0x1c(%esp),%eax
    fstps  0x20(%esp)
    mov    %eax,0x10(%esp)
    mov    0x20(%esp),%eax
    lea    0xc(%esp),%edx
    mov    %eax,0x14(%esp)
    mov    %edi,%eax
    call   func_496bc
    mov    $0xffffffff,%eax
    add    $0x2c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_35d96:
    xor    %eax,%eax
    add    $0x2c,%esp
  jump_35d9b:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35da4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    xor    %edx,%edx
    mov    data_1043d9,%dl
    mov    $0xff,%bl
    cmp    $0xff,%edx
    je     jump_35dea
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    data_10529f(%eax),%eax
    mov    0x57(%ecx),%cl
    sar    $0x18,%eax
    mov    $0x1,%edx
    and    $0xff,%ecx
    shl    %cl,%edx
    mov    %edx,%ecx
    test   %edx,%eax
    je     jump_35dee
  jump_35dea:
    mov    $0x1b,%bl
    jmp    jump_35e1d
  jump_35dee:
    xor    %edx,%edx
    mov    data_1043b1,%dl
    cmp    $0xff,%edx
    je     jump_35e1b
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    data_10529f(%eax),%eax
    sar    $0x18,%eax
    test   %ecx,%eax
    je     jump_35e1d
  jump_35e1b:
    mov    $0x1a,%bl
  jump_35e1d:
    mov    %bl,%al
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35e24:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    xor    %ebx,%ebx
    mov    data_104451,%bl
    mov    $0xff,%dl
    cmp    $0xff,%ebx
    je     jump_35e6a
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    mov    %eax,%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    mov    data_10529f(%eax),%eax
    mov    0x57(%ecx),%cl
    sar    $0x18,%eax
    mov    $0x1,%ebx
    and    $0xff,%ecx
    shl    %cl,%ebx
    mov    %ebx,%ecx
    test   %ebx,%eax
    je     jump_35e6e
  jump_35e6a:
    mov    $0x1e,%dl
    jmp    jump_35ed2
  jump_35e6e:
    xor    %ebx,%ebx
    mov    data_104429,%bl
    cmp    $0xff,%ebx
    je     jump_35e9b
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    mov    %eax,%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    mov    data_10529f(%eax),%eax
    sar    $0x18,%eax
    test   %ecx,%eax
    je     jump_35ea3
  jump_35e9b:
    mov    $0x1d,%dl
    mov    %dl,%al
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_35ea3:
    xor    %ebx,%ebx
    mov    data_104401,%bl
    cmp    $0xff,%ebx
    je     jump_35ed0
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    mov    %eax,%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    mov    data_10529f(%eax),%eax
    sar    $0x18,%eax
    test   %ecx,%eax
    je     jump_35ed2
  jump_35ed0:
    mov    $0x1c,%dl
  jump_35ed2:
    mov    %dl,%al
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35ed8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x28,%esp
    mov    %eax,%esi
    mov    $0xbf800000,%edx
    movzwl 0x18(%eax),%ebp
    mov    %edx,0x24(%esp)
    lea    0x0(,%ebp,4),%edi
    jmp    jump_35f91
  jump_35efc:
    mov    $0x1,%edx
    lea    0x14(%esp),%eax
    xor    %ecx,%ecx
    lea    0xc(%esp),%ebx
    mov    %ecx,0xc(%esp)
    mov    %ecx,0x10(%esp)
    mov    %edx,0x14(%esp)
    push   %eax
    mov    0x10(%esi),%eax
    xor    %edx,%edx
    lea    0x14(%esp),%ecx
    mov    0x1(%edi,%eax,1),%dl
    mov    %esi,%eax
    call   func_366c8
    cmpl   $0x0,0x14(%esp)
    je     jump_35f47
    mov    0x10(%esi),%eax
    mov    0x2(%edi,%eax,1),%ax
    and    $0xffff,%eax
    sar    $0x8,%eax
    mov    %eax,0x20(%esp)
  jump_35f47:
    cmpl   $0x0,0x20(%esp)
    jle    jump_35f78
    mov    0xc(%esp),%eax
    shl    $0x5,%eax
    mov    %eax,0x1c(%esp)
    fildl  0x1c(%esp)
    fld    %st(0)
    fmull  data_91e43
    fstp   %st(1)
    fstps  0x18(%esp)
    jmp    jump_35f78
  jump_35f6d:
    mov    0x1(%eax),%al
    cmp    $0x1c,%al
    jb     jump_35f78
    cmp    $0x1e,%al
    jbe    jump_35efc
  jump_35f78:
    flds   0x18(%esp)
    fcomps 0x24(%esp)
    fnstsw %ax
    sahf
    jbe    jump_35f8d
    mov    0x18(%esp),%eax
    mov    %eax,0x24(%esp)
  jump_35f8d:
    add    $0x4,%edi
    inc    %ebp
  jump_35f91:
    xor    %eax,%eax
    mov    0x1a(%esi),%ax
    cmp    %eax,%ebp
    jge    jump_35fc4
    mov    0x10(%esi),%eax
    add    %edi,%eax
    mov    $0xbf800000,%ebx
    mov    0x1(%eax),%dl
    mov    %ebx,0x18(%esp)
    cmp    $0xff,%dl
    je     jump_35f78
    mov    0x2(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    jne    jump_35f6d
    jmp    jump_35f78
  jump_35fc4:
    flds   0x24(%esp)
    call   func_76e98
    fistpl 0x8(%esp)
    mov    0x8(%esp),%eax
    add    $0x28,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35fe0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%edi
    xor    %ebx,%ebx
    mov    0x18(%edi),%bx
    xor    %eax,%eax
    lea    0x0(,%ebx,4),%esi
    jmp    jump_36018
  jump_35ffb:
    add    $0x3,%eax
    jmp    jump_36014
  jump_36000:
    add    $0x6,%eax
    jmp    jump_36014
  jump_36005:
    mov    0x1(%edx),%dl
    cmp    $0x1a,%dl
    jb     jump_36014
    jbe    jump_35ffb
    cmp    $0x1b,%dl
    je     jump_36000
  jump_36014:
    add    $0x4,%esi
    inc    %ebx
  jump_36018:
    xor    %edx,%edx
    mov    0x1a(%edi),%dx
    cmp    %edx,%ebx
    jge    jump_36045
    mov    0x10(%edi),%edx
    add    %esi,%edx
    cmpb   $0xff,0x1(%edx)
    je     jump_36014
    mov    0x2(%edx),%cx
    xor    %ch,%ch
    and    $0x1,%cl
    mov    %ecx,(%esp)
    xor    %ecx,%ecx
    mov    (%esp),%cx
    test   %ecx,%ecx
    jne    jump_36005
    jmp    jump_36014
  jump_36045:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_36050:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%edi
    xor    %ebx,%ebx
    mov    0x18(%edi),%bx
    xor    %eax,%eax
    lea    0x0(,%ebx,4),%esi
    jmp    jump_36094
  jump_3606b:
    add    $0x2,%eax
    jmp    jump_36090
  jump_36070:
    add    $0x4,%eax
    jmp    jump_36090
  jump_36075:
    add    $0x6,%eax
    jmp    jump_36090
  jump_3607a:
    mov    0x1(%edx),%dl
    cmp    $0x1d,%dl
    jb     jump_3608b
    jbe    jump_36070
    cmp    $0x1e,%dl
    je     jump_36075
    jmp    jump_36090
  jump_3608b:
    cmp    $0x1c,%dl
    je     jump_3606b
  jump_36090:
    add    $0x4,%esi
    inc    %ebx
  jump_36094:
    xor    %edx,%edx
    mov    0x1a(%edi),%dx
    cmp    %edx,%ebx
    jge    jump_36045
    mov    0x10(%edi),%edx
    add    %esi,%edx
    cmpb   $0xff,0x1(%edx)
    je     jump_36090
    mov    0x2(%edx),%cx
    xor    %ch,%ch
    and    $0x1,%cl
    mov    %ecx,(%esp)
    xor    %ecx,%ecx
    mov    (%esp),%cx
    test   %ecx,%ecx
    jne    jump_3607a
    jmp    jump_36090

vtable_360c4:
    .long   func_360f3
    .long   func_360f6
    .long   func_360f6
    .long   func_360fa
    .long   func_360ff


/*----------------------------------------------------------------*/
func_360d8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%edi
    xor    %ebx,%ebx
    mov    0x18(%edi),%bx
    xor    %eax,%eax
    lea    0x0(,%ebx,4),%esi
    jmp    jump_36106


/*----------------------------------------------------------------*/
func_360f3:
/*----------------------------------------------------------------*/
    inc    %eax
    jmp    jump_36102


/*----------------------------------------------------------------*/
func_360f6:
/*----------------------------------------------------------------*/
    mov    %edx,%eax
    jmp    jump_36102


/*----------------------------------------------------------------*/
func_360fa:
/*----------------------------------------------------------------*/
    add    $0x4,%eax
    jmp    jump_36102


/*----------------------------------------------------------------*/
func_360ff:
/*----------------------------------------------------------------*/
    add    $0x6,%eax
  jump_36102:
    add    $0x4,%esi
    inc    %ebx
  jump_36106:
    xor    %edx,%edx
    mov    0x1a(%edi),%dx
    cmp    %edx,%ebx
    jge    jump_36045
    mov    0x10(%edi),%edx
    add    %esi,%edx
    cmpb   $0xff,0x1(%edx)
    je     jump_36102
    mov    0x2(%edx),%cx
    xor    %ch,%ch
    and    $0x1,%cl
    mov    %ecx,(%esp)
    xor    %ecx,%ecx
    mov    (%esp),%cx
    test   %ecx,%ecx
    je     jump_36102
    mov    0x1(%edx),%dl
    sub    $0x1a,%dl
    cmp    $0x4,%dl
    ja     jump_36102
    and    $0xff,%edx
    lea    0x0(,%edx,4),%ecx
    lea    0x2(%eax),%edx
    jmp    *%cs:vtable_360c4(%ecx)


/*----------------------------------------------------------------*/
func_36158:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%edi
    xor    %eax,%eax
    xor    %ebx,%ebx
    xor    %esi,%esi
    jmp    jump_36187
  jump_3616a:
    add    $0x2,%eax
    jmp    jump_36183
  jump_3616f:
    add    $0x4,%eax
    jmp    jump_36183
  jump_36174:
    mov    0x1(%edx),%dl
    cmp    $0x12,%dl
    jb     jump_36183
    jbe    jump_3616a
    cmp    $0x13,%dl
    je     jump_3616f
  jump_36183:
    add    $0x4,%esi
    inc    %ebx
  jump_36187:
    xor    %edx,%edx
    mov    0x18(%edi),%dx
    cmp    %edx,%ebx
    jge    jump_36045
    mov    0x10(%edi),%edx
    add    %esi,%edx
    cmpb   $0xff,0x1(%edx)
    je     jump_36183
    mov    0x2(%edx),%cx
    xor    %ch,%ch
    and    $0x1,%cl
    mov    %ecx,(%esp)
    xor    %ecx,%ecx
    mov    (%esp),%cx
    test   %ecx,%ecx
    jne    jump_36174
    jmp    jump_36183


/*----------------------------------------------------------------*/
func_361b8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    xor    %ecx,%ecx
    mov    0x18(%eax),%cx
    xor    %edi,%edi
    lea    0x0(,%ecx,4),%esi
    jmp    jump_361d4
  jump_361d0:
    add    $0x4,%esi
    inc    %ecx
  jump_361d4:
    xor    %eax,%eax
    mov    0x1a(%ebx),%ax
    cmp    %eax,%ecx
    jge    jump_36232
    mov    0x10(%ebx),%eax
    add    %esi,%eax
    cmpb   $0xff,0x1(%eax)
    je     jump_361d0
    mov    0x2(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_361d0
    cmpb   $0x17,0x1(%eax)
    jne    jump_3621b
    xor    %edx,%edx
    mov    %ebx,%eax
    mov    %cx,%dx
    call   func_35a70
    mov    0x54(%eax),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    0x57(%ebx),%al
    cmp    %eax,%edx
    je     jump_3622d
  jump_3621b:
    mov    0x10(%ebx),%eax
    add    %esi,%eax
    mov    0x1(%eax),%dl
    cmp    $0x1a,%dl
    je     jump_3622d
    cmp    $0x1b,%dl
    jne    jump_361d0
  jump_3622d:
    mov    $0xffffffff,%edi
  jump_36232:
    mov    %edi,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3623c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    xor    %ebp,%ebp
    xor    %edi,%edi
    mov    %ebp,(%esp)
    jmp    jump_3625a
  jump_36250:
    mov    (%esp),%ecx
    inc    %ecx
    add    $0x4,%edi
    mov    %ecx,(%esp)
  jump_3625a:
    xor    %eax,%eax
    mov    (%esp),%ebx
    mov    0x18(%esi),%ax
    cmp    %ebx,%eax
    jle    jump_362ba
    mov    0x10(%esi),%eax
    add    %edi,%eax
    cmpb   $0xff,0x1(%eax)
    je     jump_36250
    mov    0x2(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_36250
    mov    0x1(%eax),%dh
    cmp    $0x2,%dh
    je     jump_36290
    cmp    $0x8,%dh
    jne    jump_36250
  jump_36290:
    mov    0x10(%esi),%ebx
    mov    0x1(%edi,%ebx,1),%bl
    mov    $0x1,%ecx
    and    $0xff,%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    mov    (%esp),%dx
    call   func_34b0c
    test   %eax,%eax
    je     jump_36250
    mov    $0xffffffff,%ebp
    jmp    jump_36250
  jump_362ba:
    mov    %ebp,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_362c8:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
    call   func_53440
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_362e0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    xor    %eax,%eax
    mov    0x57(%ecx),%al
    test   %eax,%eax
    jl     jump_362fb
    mov    data_a3cf2,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jl     jump_3630c
  jump_362fb:
    mov    $0x688,%ebx
    mov    $data_91e4b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3630c:
    mov    $0x16,%edx
    mov    %ecx,%eax
    call   func_35930
    xor    %ebx,%ebx
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_36363
    mov    0x10(%ecx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_36363
    mov    0x57(%ecx),%cl
    and    $0xff,%ecx
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    add    %eax,%eax
    add    $data_a2f72,%eax
    call   func_3efe0
    test   %eax,%eax
    jle    jump_36363
    mov    $0xffffffff,%ebx
  jump_36363:
    mov    %ebx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3636c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    %edx,%ebp
    mov    0x10(%eax),%edx
    xor    %ebx,%ebx
    xor    %eax,%eax
    jmp    jump_3638e
  jump_3637e:
    test   %cl,%cl
    je     jump_36385
    inc    %eax
    jmp    jump_3638a
  jump_36385:
    test   %ebp,%ebp
    je     jump_3638a
    inc    %eax
  jump_3638a:
    inc    %ebx
    add    $0x4,%edx
  jump_3638e:
    xor    %esi,%esi
    movswl %bx,%ecx
    mov    0x18(%edi),%si
    cmp    %esi,%ecx
    jge    jump_35d9b
    xor    %ecx,%ecx
    mov    (%edx),%cl
    cmp    $0x2,%ecx
    jl     jump_3637e
    add    $0x2,%eax
    jmp    jump_3638a


/*----------------------------------------------------------------*/
func_363b0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%esi
    xor    %edx,%edx
    mov    0x57(%eax),%dl
    mov    data_a3cf2,%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jle    jump_363d9
    mov    $0x6cd,%ebx
    mov    $data_91e59,%edx
    xor    %eax,%eax
    call   func_26198
  jump_363d9:
    xor    %edx,%edx
    mov    0x57(%esi),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmpb   $0x2,data_a310f(,%eax,2)
    setne  %al
    xor    %edx,%edx
    mov    %al,%dl
    dec    %edx
    mov    %esi,%eax
    call   func_3636c
    mov    %eax,%edi
    xor    %eax,%eax
    and    $0xffff,%edi
    mov    0x44(%esi),%ax
    add    %eax,%edi
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    add    %eax,%edi
    xor    %eax,%eax
    mov    0x46(%esi),%ax
    xor    %edx,%edx
    add    %eax,%edi
    xor    %eax,%eax
    mov    0x42(%esi),%dx
    mov    0x4a(%esi),%ax
    sub    %edx,%eax
    add    %edx,%edi
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    add    %eax,%edi
    mov    0x66(%esi),%al
    and    $0x2,%al
    and    $0xff,%eax
    je     jump_3644b
    add    $0x64,%edi
  jump_3644b:
    mov    0x10(%esi),%edx
    xor    %ebx,%ebx
    xor    %eax,%eax
    jmp    jump_3646f
  jump_36454:
    xor    %ecx,%ecx
    mov    0x1(%edx),%cl
    imul   $0x28,%ecx,%ecx
    mov    data_103fa4(%ecx),%cx
    and    $0xffff,%ecx
    inc    %eax
    add    $0x4,%edx
    add    %ecx,%ebx
  jump_3646f:
    xor    %ecx,%ecx
    mov    0x1a(%esi),%cx
    cmp    %ecx,%eax
    jl     jump_36454
    mov    $0x16,%edx
    mov    %esi,%eax
    call   func_35930
    add    %ebx,%edi
    test   %ax,%ax
    je     jump_3648f
    add    $0x32,%edi
  jump_3648f:
    mov    $0x18,%edx
    mov    %esi,%eax
    call   func_35930
    test   %ax,%ax
    je     jump_364a3
    add    $0x32,%edi
  jump_364a3:
    test   %edi,%edi
    jge    jump_364a9
    xor    %edi,%edi
  jump_364a9:
    mov    %edi,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_364b4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    cmp    data_a3cf4,%si
    jle    jump_364da
    mov    $0x71a,%ebx
    mov    $data_91e67,%edx
    xor    %eax,%eax
    call   func_26198
  jump_364da:
    movswl %si,%edi
    mov    %edi,%eax
    shl    $0x5,%eax
    sub    %edi,%eax
    shl    $0x3,%eax
    sub    %edi,%eax
    mov    $data_a2f72,%ebx
    add    %eax,%eax
    add    %eax,%ebx
    xor    %eax,%eax
    xor    %edx,%edx
    mov    0x57(%ecx),%al
    mov    %edx,(%esp)
    cmp    $0xff,%eax
    je     jump_36519
    cmp    %eax,%edi
    je     jump_366b0
    cmpb   $0x2,0x1c0(%ebx,%eax,1)
    jne    jump_366b0
  jump_36519:
    movswl %si,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmpb   $0x2,data_a310f(,%eax,2)
    setne  %al
    xor    %edx,%edx
    mov    %al,%dl
    dec    %edx
    mov    %ecx,%eax
    call   func_3636c
    mov    (%esp),%esi
    and    $0xffff,%eax
    add    %eax,%esi
    mov    0x66(%ecx),%al
    mov    %esi,(%esp)
    and    $0x2,%al
    and    $0xff,%eax
    je     jump_3655e
    lea    0x28(%esi),%edi
    mov    %edi,(%esp)
  jump_3655e:
    cmpl   $0x46,(%esp)
    jg     jump_36577
    xor    %eax,%eax
    mov    0x57(%ecx),%al
    cmpb   $0x2,0x1c0(%ebx,%eax,1)
    jne    jump_366ab
  jump_36577:
    xor    %eax,%eax
    mov    0x57(%ecx),%al
    cmpb   $0x2,0x1c0(%ebx,%eax,1)
    jne    jump_366b0
    xor    %edi,%edi
    xor    %eax,%eax
    mov    0x44(%ecx),%di
    mov    0x48(%ecx),%ax
    add    %eax,%edi
    xor    %eax,%eax
    mov    0x46(%ecx),%ax
    xor    %edx,%edx
    add    %eax,%edi
    xor    %eax,%eax
    mov    0x42(%ecx),%dx
    mov    0x4a(%ecx),%ax
    sub    %edx,%eax
    add    %edx,%edi
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    xor    %esi,%esi
    mov    $0xb,%edx
    add    %eax,%edi
    mov    %ecx,%eax
    mov    %esi,0x4(%esp)
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_365de
    mov    $0xffffffff,%esi
  jump_365de:
    mov    $0x19,%edx
    mov    %ecx,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_365fe
    movl   $0xffffffff,0x4(%esp)
  jump_365fe:
    mov    0x10(%ecx),%ebx
    xor    %eax,%eax
    test   %esi,%esi
    jne    jump_3662f
    xor    %edx,%edx
    jmp    jump_36625
  jump_3660b:
    movzbl 0x1(%ebx),%esi
    imul   $0x28,%esi,%esi
    mov    data_103fa4(%esi),%si
    and    $0xffff,%esi
    inc    %edx
    add    $0x4,%ebx
    add    %esi,%eax
  jump_36625:
    xor    %esi,%esi
    mov    0x18(%ecx),%si
    cmp    %esi,%edx
    jl     jump_3660b
  jump_3662f:
    cmpl   $0x0,0x4(%esp)
    jne    jump_36665
    xor    %edx,%edx
    mov    0x10(%ecx),%ebx
    mov    0x18(%ecx),%dx
    jmp    jump_3665b
  jump_36641:
    movzbl 0x1(%ebx),%esi
    imul   $0x28,%esi,%esi
    mov    data_103fa4(%esi),%si
    and    $0xffff,%esi
    inc    %edx
    add    $0x4,%ebx
    add    %esi,%eax
  jump_3665b:
    xor    %esi,%esi
    mov    0x1a(%ecx),%si
    cmp    %esi,%edx
    jl     jump_36641
  jump_36665:
    mov    $0x16,%edx
    add    %eax,%edi
    mov    %ecx,%eax
    call   func_35930
    test   %ax,%ax
    je     jump_3667b
    add    $0x32,%edi
  jump_3667b:
    mov    $0x18,%edx
    mov    %ecx,%eax
    call   func_35930
    test   %ax,%ax
    je     jump_3668f
    add    $0x32,%edi
  jump_3668f:
    mov    $0xa,%ebx
    mov    %edi,%edx
    mov    %edi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    (%esp),%ebp
    add    %eax,%ebp
    mov    %ebp,(%esp)
    lea    0x0(%ebp,%ebp,1),%eax
    jmp    jump_366ad
  jump_366ab:
    xor    %eax,%eax
  jump_366ad:
    mov    %eax,(%esp)
  jump_366b0:
    cmpl   $0x0,(%esp)
    jge    jump_366bb
    xor    %ebx,%ebx
    mov    %ebx,(%esp)
  jump_366bb:
    mov    (%esp),%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_366c8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    0x10(%esp),%edi
    mov    %dl,(%esp)
    mov    %ebx,%esi
    test   %ebx,%ebx
    je     jump_366e2
    test   %ecx,%ecx
    je     jump_366e2
    test   %edi,%edi
    jne    jump_366f3
  jump_366e2:
    mov    $0x785,%ebx
    mov    $data_91e75,%edx
    xor    %eax,%eax
    call   func_26198
  jump_366f3:
    mov    (%esp),%ah
    cmp    $0x1c,%ah
    jne    jump_3670f
    movl   $0x2d,(%esi)
    movl   $0x7,(%ecx)
    movl   $0x1,(%edi)
    jmp    jump_36764
  jump_3670f:
    cmp    $0x1d,%ah
    jne    jump_3672e
    movl   $0x2d,(%esi)
    movl   $0x7,(%ecx)
    movl   $0x3,(%edi)
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_3672e:
    cmp    $0x1e,%ah
    jne    jump_3674d
    movl   $0x5a,(%esi)
    movl   $0x8,(%ecx)
    movl   $0x3,(%edi)
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_3674d:
    cmp    $0x11,%ah
    jne    jump_36764
    movl   $0xc8,(%esi)
    movl   $0x0,(%ecx)
    movl   $0x2,(%edi)
  jump_36764:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_3676c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x78,%esp
    mov    %eax,%esi
    mov    %edx,%ebp
    mov    0x6b(%eax),%eax
    xor    %edx,%edx
    mov    $0xffffffff,%ebx
    mov    %edx,0x74(%esp)
    mov    0x1(%eax),%al
    mov    %ebx,0x68(%esp)
    cmp    $0xff,%al
    jne    jump_367a2
    mov    $0x7ab,%ebx
    mov    $data_91e83,%edx
    xor    %eax,%eax
    call   func_26198
  jump_367a2:
    mov    $0x1,%edx
    xor    %ecx,%ecx
    mov    0x6f(%esi),%edi
    mov    %ecx,0x5c(%esp)
    mov    %ecx,0x60(%esp)
    mov    %edx,0x50(%esp)
    lea    0x50(%esp),%eax
    mov    0x6b(%esi),%edx
    push   %eax
    mov    0x1(%edx),%dl
    lea    0x64(%esp),%ecx
    lea    0x60(%esp),%ebx
    and    $0xff,%edx
    mov    %esi,%eax
    call   func_366c8
    test   %edi,%edi
    je     jump_368a0
    cmpb   $0x4,0x58(%edi)
    jne    jump_36804
    mov    0xa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x5,%eax
    mov    0x59(%edi),%ebx
    add    $data_a3d21,%eax
    cmp    %ebx,%eax
    je     jump_3680a
  jump_36804:
    xor    %ecx,%ecx
    mov    %ecx,0x68(%esp)
  jump_3680a:
    cmpl   $0x0,0x5c(%esp)
    jle    jump_368a0
    lea    0x24(%esp),%edx
    mov    %edx,0x48(%esp)
    xor    %edx,%edx
    lea    0x9e(%edi),%eax
    mov    %edx,0x3c(%esp)
    mov    %edx,0x40(%esp)
    mov    %edx,0x44(%esp)
    flds   (%eax)
    fsubs  (%esi)
    fstps  0x3c(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%esi)
    fstps  0x40(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%esi)
    mov    0x3c(%esp),%eax
    fstps  0x44(%esp)
    flds   0x40(%esp)
    fmul   %st(0),%st
    mov    %eax,0x24(%esp)
    mov    0x40(%esp),%eax
    flds   0x3c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x28(%esp)
    faddp  %st,%st(1)
    mov    0x44(%esp),%eax
    flds   0x44(%esp)
    fmul   %st(0),%st
    mov    %eax,0x2c(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    0x5c(%esp),%eax
    shl    $0x5,%eax
    mov    %eax,0x4c(%esp)
    fildl  0x4c(%esp)
    fcompp
    fnstsw %ax
    sahf
    jae    jump_368a0
    mov    %edx,0x68(%esp)
  jump_368a0:
    mov    $0x1,%edx
    mov    0x50(%esp),%ebx
    mov    %edx,0x70(%esp)
    test   %ebx,%ebx
    je     jump_368c4
    mov    0x6b(%esi),%eax
    mov    0x2(%eax),%ax
    and    $0xffff,%eax
    sar    $0x8,%eax
    mov    %eax,0x70(%esp)
  jump_368c4:
    cmpl   $0x0,0x68(%esp)
    je     jump_368d9
    cmpl   $0x0,0x70(%esp)
    je     jump_368d9
    mov    $0x1,%eax
    jmp    jump_368db
  jump_368d9:
    xor    %eax,%eax
  jump_368db:
    or     %eax,0x74(%esp)
    testb  $0x1,0x74(%esp)
    je     jump_36a4b
    mov    0x60(%esp),%ebx
    test   %ebx,%ebx
    je     jump_36904
    mov    %ebp,%edx
    xor    %ecx,%ecx
    mov    %edi,%eax
    mov    0x57(%esi),%cl
    call   func_4b7a0
    or     %eax,0x74(%esp)
  jump_36904:
    cmp    $0x1,%ebp
    jne    jump_36a4b
    mov    0x6b(%esi),%eax
    cmpb   $0x11,0x1(%eax)
    jne    jump_36a20
    lea    0x18(%esp),%edx
    lea    0x9e(%edi),%eax
    xor    %ebp,%ebp
    mov    %edx,0x58(%esp)
    mov    %ebp,(%esp)
    mov    %ebp,0x4(%esp)
    mov    %ebp,0x8(%esp)
    flds   (%eax)
    fsubs  (%esi)
    fstps  (%esp)
    flds   0x4(%eax)
    fsubs  0x4(%esi)
    fstps  0x4(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%esi)
    mov    (%esp),%eax
    fstps  0x8(%esp)
    flds   0x4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x18(%esp)
    mov    0x4(%esp),%eax
    flds   (%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c(%esp)
    faddp  %st,%st(1)
    mov    0x8(%esp),%eax
    flds   0x8(%esp)
    fmul   %st(0),%st
    mov    %eax,0x20(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fadds  data_91e91
    fsts   0x6c(%esp)
    fcomps data_91e95
    fnstsw %ax
    sahf
    jae    jump_369a4
    movl   $0x44a00000,0x6c(%esp)
  jump_369a4:
    lea    0x18(%esp),%eax
    push   0x6c(%esp)
    call   func_53054
    xor    %ebp,%ebp
    lea    0xc(%esp),%eax
    mov    %ebp,0x30(%esp)
    mov    %ebp,0x34(%esp)
    mov    %ebp,0x38(%esp)
    mov    %eax,0x64(%esp)
    flds   (%esi)
    fadds  0x18(%esp)
    fstps  0x30(%esp)
    flds   0x4(%esi)
    fadds  0x1c(%esp)
    mov    0x30(%esp),%eax
    fstps  0x34(%esp)
    flds   0x8(%esi)
    mov    %eax,0xc(%esp)
    fadds  0x20(%esp)
    mov    0x34(%esp),%eax
    fstps  0x38(%esp)
    mov    %eax,0x10(%esp)
    mov    0x38(%esp),%eax
    mov    %eax,0x14(%esp)
    mov    0x30(%esp),%eax
    mov    %eax,0x9e(%edi)
    mov    0x10(%esp),%eax
    mov    %eax,0xa2(%edi)
    add    $0x9e,%edi
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%edi)
  jump_36a20:
    cmpl   $0x0,0x50(%esp)
    je     jump_36a4b
    mov    0x70(%esp),%ecx
    test   %ecx,%ecx
    jle    jump_36a4b
    lea    -0x1(%ecx),%edi
    mov    0x6b(%esi),%eax
    mov    %edi,0x70(%esp)
    movb   $0x0,0x3(%eax)
    mov    0x70(%esp),%edx
    mov    0x6b(%esi),%eax
    shl    $0x8,%edx
    or     %dx,0x2(%eax)
  jump_36a4b:
    mov    0x74(%esp),%eax
    mov    %eax,0x73(%esi)
    add    $0x78,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_36a5c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%esi
    mov    %edx,0x14(%esp)
    mov    %bx,0x1c(%esp)
    cmpl   $0xffffffff,0x62(%eax)
    je     jump_36ccc
    xor    %eax,%eax
    mov    0x57(%esi),%al
    test   %eax,%eax
    jl     jump_36a8e
    mov    data_a3cf2,%edx
    sar    $0x10,%edx
    cmp    %edx,%eax
    jl     jump_36aab
  jump_36a8e:
    xor    %eax,%eax
    mov    0x57(%esi),%al
    cmp    $0xff,%eax
    je     jump_36aab
    mov    $0x7fe,%ebx
    mov    $data_91e99,%edx
    xor    %eax,%eax
    call   func_26198
  jump_36aab:
    mov    0x1a(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_36ac3
    mov    0x1c(%esp),%eax
    cmp    data_a3cf4,%ax
    jl     jump_36ad4
  jump_36ac3:
    mov    $0x7ff,%ebx
    mov    $data_91ea7,%edx
    xor    %eax,%eax
    call   func_26198
  jump_36ad4:
    xor    %edx,%edx
    mov    0x57(%esi),%dl
    cmp    $0xff,%edx
    je     jump_36b1b
    mov    0xa(%esi),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    mov    $data_a3d21,%ebx
    shl    $0x5,%eax
    add    %eax,%ebx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    mov    0x1a(%esp),%ecx
    sub    %edx,%eax
    sar    $0x10,%ecx
    add    %eax,%eax
    mov    %ecx,%edx
    add    $data_a2f72,%eax
    call   func_433e0
  jump_36b1b:
    mov    $0xffff,%ebx
    mov    0x18(%esi),%dx
    mov    0x1a(%esi),%cx
    xor    %edi,%edi
    mov    %ebx,0x18(%esp)
    cmp    %cx,%dx
    jae    jump_36b85
    xor    %eax,%eax
  jump_36b35:
    xor    %ebx,%ebx
    mov    %dx,%bx
    mov    0x10(%esi),%ebp
    shl    $0x2,%ebx
    add    %ebx,%ebp
    cmpb   $0xff,0x1(%ebp)
    je     jump_36b7e
    mov    %dx,(%esp,%eax,1)
    mov    0x10(%esi),%ecx
    mov    0x1(%ecx,%ebx,1),%bl
    and    $0xff,%ebx
    imul   $0x28,%ebx,%ebx
    mov    data_103fa2(%ebx),%bx
    xor    %bh,%bh
    and    $0x8,%bl
    and    $0xffff,%ebx
    je     jump_36b7a
    cmp    0x52(%esi),%dx
    je     jump_36b7a
    mov    %edx,0x18(%esp)
  jump_36b7a:
    add    $0x2,%eax
    inc    %edi
  jump_36b7e:
    inc    %edx
    cmp    0x1a(%esi),%dx
    jb     jump_36b35
  jump_36b85:
    test   %edi,%edi
    je     jump_36ccc
    xor    %edx,%edx
    mov    0x18(%esp),%dx
    mov    $0xffffffff,%ecx
    cmp    $0xffff,%edx
    je     jump_36bdd
    mov    %edx,%edi
    lea    0x0(,%edx,4),%ebp
    mov    0x10(%esi),%edx
    add    %ebp,%edx
    xor    %eax,%eax
    mov    0x2(%edx),%ax
    mov    0x14(%esp),%ebx
    sar    $0x8,%eax
    sub    %ebx,%eax
    test   %eax,%eax
    jle    jump_36bed
    mov    %edi,%ebx
    cmp    0x52(%esi),%bx
    je     jump_36bed
    movb   $0x0,0x3(%edx)
    mov    0x10(%esi),%edx
    shl    $0x8,%eax
    or     %ax,0x2(%edx,%ebp,1)
    xor    %ecx,%ecx
    jmp    jump_36bed
  jump_36bdd:
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %edi
    mov    (%esp,%edx,2),%di
  jump_36bed:
    xor    %edx,%edx
    mov    0x10(%esi),%ebx
    mov    %di,%dx
    cmpb   $0x17,0x1(%ebx,%edx,4)
    jne    jump_36c24
    mov    0x1a(%esp),%ecx
    mov    %esi,%eax
    mov    0x14(%esp),%ebx
    call   func_35a70
    mov    $0x1,%edx
    sar    $0x10,%ecx
    add    %ebx,%ebx
    call   func_4b7a0
    test   $0x4,%al
    sete   %al
    xor    %ecx,%ecx
    mov    %al,%cl
    dec    %ecx
  jump_36c24:
    mov    0x4a(%esi),%ax
    cmp    0x42(%esi),%ax
    jae    jump_36c3f
    mov    $0x837,%ebx
    mov    $data_91eb5,%edx
    xor    %eax,%eax
    call   func_26198
  jump_36c3f:
    xor    %eax,%eax
    mov    %di,%ax
    mov    0x10(%esi),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    xor    %edx,%edx
    mov    0x1(%eax),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_103f9c(,%eax,8),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    je     jump_36c79
    mov    $0x838,%ebx
    mov    $data_91ec3,%edx
    xor    %eax,%eax
    call   func_26198
  jump_36c79:
    cmp    $0xffffffff,%ecx
    jne    jump_36cc5
    mov    $0x1,%ecx
    mov    $0xff,%ebx
    movzwl %di,%ebp
    mov    %esi,%eax
    mov    %ebp,%edx
    call   func_34b0c
    mov    0x10(%esi),%eax
    cmpb   $0xff,0x1(%eax,%ebp,4)
    je     jump_36caf
    mov    $0x83d,%ebx
    mov    $data_91ed1,%edx
    xor    %eax,%eax
    call   func_26198
  jump_36caf:
    cmp    0x52(%esi),%di
    jne    jump_36cc5
    movw   $0xffff,0x52(%esi)
    movb   $0xff,0x54(%esi)
    movw   $0x0,0x50(%esi)
  jump_36cc5:
    mov    %esi,%eax
    call   func_34e70
  jump_36ccc:
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_36cd4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ecx
    xor    %edx,%edx
    mov    %edx,0xc(%esp)
    cmp    0x1a(%eax),%di
    jb     jump_36cfe
    mov    $0x851,%ebx
    mov    $data_91edf,%edx
    xor    %eax,%eax
    call   func_26198
  jump_36cfe:
    xor    %eax,%eax
    mov    0x10(%esi),%edx
    mov    %di,%ax
    cmpb   $0x17,0x1(%edx,%eax,4)
    je     jump_36d1e
    mov    $0x852,%ebx
    mov    $data_91eed,%edx
    xor    %eax,%eax
    call   func_26198
  jump_36d1e:
    xor    %edx,%edx
    mov    %esi,%eax
    mov    %di,%dx
    call   func_35a70
    xor    %edx,%edx
    mov    0x57(%esi),%dl
    mov    %eax,%ebp
    cmp    $0xff,%edx
    je     jump_36d43
    mov    0x54(%eax),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jne    jump_36d54
  jump_36d43:
    mov    $0x856,%ebx
    mov    $data_91efb,%edx
    xor    %eax,%eax
    call   func_26198
  jump_36d54:
    mov    0x54(%ebp),%edx
    sar    $0x10,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    xor    %ebx,%ebx
    sub    %edx,%eax
    mov    %ebx,(%esp)
    cmpb   $0x0,data_a310f(,%eax,2)
    jne    jump_36d7c
    movl   $0xffffffff,(%esp)
  jump_36d7c:
    mov    0xa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    mov    $data_a3d21,%ebx
    sub    %edx,%eax
    xor    %edx,%edx
    shl    $0x5,%eax
    mov    0x57(%esi),%dl
    add    %eax,%ebx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    mov    0x54(%ebp),%edi
    sub    %edx,%eax
    sar    $0x10,%edi
    add    %eax,%eax
    mov    %edi,%edx
    add    $data_a2f72,%eax
    call   func_433e0
    cmp    $0xffffffff,%eax
    jne    jump_36df8
    xor    %edx,%edx
    mov    0x57(%esi),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    0x54(%ebp),%edx
    sar    $0x10,%edx
    add    %eax,%eax
    add    %edx,%edx
    add    %eax,%edx
    mov    data_a313b(%eax),%di
    cmp    data_a3124(%edx),%di
    jge    jump_36df8
    mov    %edi,%eax
    sub    $0xa,%eax
    mov    %ax,data_a3124(%edx)
  jump_36df8:
    xor    %eax,%eax
    mov    %eax,0x10(%esp)
    mov    %eax,0x4(%esp)
    xor    %eax,%eax
    jmp    jump_36e07
  jump_36e06:
    inc    %eax
  jump_36e07:
    movswl %ax,%edx
    cmp    0x15a(%ebp),%edx
    jge    jump_36e25
    imul   $0x7,%edx,%edx
    cmpb   $0x49,0xab(%edx,%ebp,1)
    jne    jump_36e06
    incl   0x10(%esp)
    jmp    jump_36e06
  jump_36e25:
    xor    %eax,%eax
    jmp    jump_36e51
  jump_36e29:
    movswl %ax,%edx
    mov    0x10(%esi),%edi
    shl    $0x2,%edx
    add    %edi,%edx
    cmpb   $0x13,0x1(%edx)
    jne    jump_36e50
    mov    0x2(%edx),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_36e50
    addl   $0x2,0x4(%esp)
  jump_36e50:
    inc    %eax
  jump_36e51:
    xor    %edx,%edx
    movswl %ax,%edi
    mov    0x18(%esi),%dx
    cmp    %edx,%edi
    jge    jump_36e87
    lea    0x0(,%edi,4),%edx
    mov    0x10(%esi),%edi
    add    %edi,%edx
    cmpb   $0x12,0x1(%edx)
    jne    jump_36e29
    mov    0x2(%edx),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_36e29
    incl   0x4(%esp)
    jmp    jump_36e50
  jump_36e87:
    mov    0x10(%esp),%eax
    mov    0x4(%esp),%edx
    mov    %eax,0x14(%esp)
    cmp    %edx,%eax
    jle    jump_36e9e
    lea    0x1(%edx),%eax
    mov    %eax,0x14(%esp)
  jump_36e9e:
    mov    0x14(%esp),%eax
    mov    (%esp),%ebx
    mov    %eax,0x8(%esp)
    cmp    $0xffffffff,%ebx
    jne    jump_36eb6
    movl   $0x1,0x8(%esp)
  jump_36eb6:
    mov    0x8(%esp),%eax
    xor    %edi,%edi
    xor    %ebx,%ebx
    mov    %eax,(%ecx)
    jmp    jump_36ec3
  jump_36ec2:
    inc    %ebx
  jump_36ec3:
    movswl %bx,%eax
    cmp    0x15a(%ebp),%eax
    jge    jump_36eed
    cmp    0x8(%esp),%edi
    jge    jump_36eed
    imul   $0x7,%eax,%edx
    cmpb   $0x49,0xab(%edx,%ebp,1)
    jne    jump_36ec2
    mov    %eax,%edx
    mov    %ebp,%eax
    inc    %edi
    call   func_492f8
    jmp    jump_36ec2
  jump_36eed:
    mov    %ebp,%eax
    call   func_496e0
    xor    %eax,%eax
    xor    %edi,%edi
    mov    %ax,0x1c(%esp)
    jmp    jump_36f04
  jump_36eff:
    incw   0x1c(%esp)
  jump_36f04:
    mov    0x1a(%esp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    0x18(%esi),%dx
    cmp    %edx,%eax
    jge    jump_36f57
    cmp    0x14(%esp),%edi
    jge    jump_36f57
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    add    %edx,%eax
    cmpb   $0x12,0x1(%eax)
    jne    jump_36eff
    mov    0x2(%eax),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_36eff
    mov    $0x1,%ecx
    mov    $0xff,%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0x1c(%esp),%dx
    inc    %edi
    call   func_34b0c
    jmp    jump_36eff
  jump_36f57:
    xor    %edx,%edx
    mov    %dx,0x18(%esp)
    jmp    jump_36f65
  jump_36f60:
    incw   0x18(%esp)
  jump_36f65:
    mov    0x16(%esp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    0x18(%esi),%dx
    cmp    %edx,%eax
    jge    jump_36fbc
    mov    0x14(%esp),%ecx
    cmp    %ecx,%edi
    jge    jump_36fbc
    shl    $0x2,%eax
    mov    0x10(%esi),%edx
    add    %edx,%eax
    cmpb   $0x13,0x1(%eax)
    jne    jump_36f60
    mov    0x2(%eax),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_36f60
    add    $0x2,%edi
    cmp    %ecx,%edi
    jg     jump_36f60
    mov    $0x1,%ecx
    mov    $0xff,%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0x18(%esp),%dx
    call   func_34b0c
    jmp    jump_36f60
  jump_36fbc:
    mov    0x10(%esp),%eax
    cmp    0x4(%esp),%eax
    jg     jump_36fcc
    cmpl   $0xffffffff,(%esp)
    jne    jump_3702c
  jump_36fcc:
    mov    0x57(%esi),%al
    cmp    data_104bea,%al
    jne    jump_36ff7
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    je     jump_36ff7
    mov    $0xd,%edx
    mov    $data_10ae70,%eax
    mov    %esi,%ebx
    xor    %ecx,%ecx
    call   func_55aec
  jump_36ff7:
    mov    0xa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    mov    0x54(%ebp),%ebx
    sub    %edx,%eax
    sar    $0x10,%ebx
    shl    $0x5,%eax
    mov    %esi,%edx
    add    $data_a3d21,%eax
    call   func_1d234
    mov    $0xffffffff,%edx
    mov    data_a2f6c,%eax
    mov    %edx,0xc(%esp)
    mov    %eax,0x67(%esi)
  jump_3702c:
    mov    %esi,%eax
    call   func_34e70
    mov    0xc(%esp),%eax
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_37040:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    mov    0xa(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $0xffffffff,%ebx
    shl    $0x5,%eax
    mov    %ecx,%edx
    add    $data_a3d21,%eax
    call   func_1d234
    xor    %edx,%edx
    xor    %eax,%eax
    jmp    jump_37073
  jump_3706f:
    add    $0x4,%eax
    inc    %edx
  jump_37073:
    xor    %esi,%esi
    mov    0x1a(%ecx),%si
    cmp    %esi,%edx
    jge    jump_37098
    mov    0x10(%ecx),%esi
    add    %eax,%esi
    cmpb   $0x17,0x1(%esi)
    je     jump_3706f
    movb   $0xff,0x1(%esi)
    mov    0x10(%ecx),%esi
    movw   $0x0,0x2(%esi,%eax,1)
    jmp    jump_3706f
  jump_37098:
    movw   $0x0,0x4c(%ecx)
    mov    0x4c(%ecx),%ax
    mov    %ax,0x42(%ecx)
    mov    %ecx,%eax
    movb   $0xff,0x57(%ecx)
    call   func_34e70
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_370b8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x7c,%esp
    mov    %eax,%ebp
    mov    %edx,%eax
    cmp    $0xffffffff,%ebx
    jne    jump_37296
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %edx,(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x8(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ebx,0x5a(%esp)
    xor    %edx,%edx
    mov    $0x7b,%ebx
    mov    %dx,0x1a(%esp)
    mov    %esp,%edx
    call   func_1bf94
    mov    (%esp),%eax
    mov    %eax,0x0(%ebp)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%ebp)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%ebp)
    mov    0xc(%esp),%eax
    mov    %ax,0xc(%ebp)
    mov    0xe(%esp),%eax
    mov    %ax,0xe(%ebp)
    mov    0x10(%esp),%eax
    mov    %eax,0x10(%ebp)
    mov    0x14(%esp),%eax
    mov    %ax,0x14(%ebp)
    mov    0x16(%esp),%eax
    mov    %ax,0x16(%ebp)
    mov    0x18(%esp),%eax
    mov    %ax,0x18(%ebp)
    mov    0x1a(%esp),%eax
    mov    %ax,0x1a(%ebp)
    mov    0x1c(%esp),%eax
    mov    %ax,0x1c(%ebp)
    mov    0x1e(%esp),%eax
    mov    %ax,0x1e(%ebp)
    mov    0x20(%esp),%eax
    mov    $0x7,%ecx
    mov    %ax,0x20(%ebp)
    lea    0x24(%esp),%esi
    mov    0x22(%esp),%eax
    lea    0x24(%ebp),%edi
    mov    %ax,0x22(%ebp)
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x42(%esp),%eax
    mov    %ax,0x42(%ebp)
    mov    0x44(%esp),%eax
    mov    %ax,0x44(%ebp)
    mov    0x46(%esp),%eax
    mov    %ax,0x46(%ebp)
    mov    0x48(%esp),%eax
    mov    %ax,0x48(%ebp)
    mov    0x4a(%esp),%eax
    mov    %ax,0x4a(%ebp)
    mov    0x4c(%esp),%eax
    mov    %ax,0x4c(%ebp)
    mov    0x4e(%esp),%eax
    mov    %ax,0x4e(%ebp)
    mov    0x50(%esp),%eax
    mov    %ax,0x50(%ebp)
    mov    0x52(%esp),%eax
    mov    %ax,0x52(%ebp)
    mov    0x54(%esp),%al
    mov    %al,0x54(%ebp)
    mov    0x55(%esp),%eax
    mov    %ax,0x55(%ebp)
    mov    0x57(%esp),%al
    mov    %al,0x57(%ebp)
    mov    0x58(%esp),%al
    mov    %al,0x58(%ebp)
    mov    0x59(%esp),%al
    mov    %al,0x59(%ebp)
    mov    0x5a(%esp),%eax
    mov    %eax,0x5a(%ebp)
    mov    0x5e(%esp),%eax
    mov    %eax,0x5e(%ebp)
    mov    0x62(%esp),%eax
    mov    %eax,0x62(%ebp)
    mov    0x66(%esp),%al
    mov    %al,0x66(%ebp)
    mov    0x67(%esp),%eax
    mov    %eax,0x67(%ebp)
    mov    0x6b(%esp),%eax
    mov    %eax,0x6b(%ebp)
    mov    0x6f(%esp),%eax
    mov    %eax,0x6f(%ebp)
    mov    0x73(%esp),%eax
    mov    %eax,0x73(%ebp)
    mov    0x77(%esp),%eax
    mov    %eax,0x77(%ebp)
    mov    data_a62a1,%bx
    cmp    0xc(%ebp),%bx
    jg     jump_3723a
    mov    $0x8e4,%ebx
    mov    $data_91f09,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3723a:
    mov    0xc(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x5,%eax
    jl     jump_37256
    mov    $0x8e5,%ebx
    mov    $data_91f17,%edx
    xor    %eax,%eax
    call   func_26198
  jump_37256:
    mov    0xa(%ebp),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%edx
    mov    0xc(%ebp),%eax
    sub    %ebx,%edx
    sar    $0x10,%eax
    shl    $0x5,%edx
    mov    %ebp,data_a3d67(%edx,%eax,4)
    mov    0xa(%ebp),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x5,%eax
    incw   data_a3d7b(%eax)
    add    $0x7c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_37296:
    mov    $0x7b,%ebx
    mov    %ebp,%edx
    call   func_1c098
    add    $0x7c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_372b0:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_95f84,0xa7(%eax)
    call   func_37310
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_372cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_372eb
    mov    $data_95f58,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_372eb:
    mov    $0x1,%edx
    movl   $data_95f84,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_3730b
    call   func_76d64
  jump_3730b:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_37310:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x34,%esp
    mov    %eax,%ecx
    movb   $0xff,0xab(%eax)
    movw   $0xffff,0xae(%eax)
    mov    0xae(%eax),%ax
    movb   $0x5,0x18b(%ecx)
    mov    %ax,0xb0(%ecx)
    xor    %ebx,%ebx
    mov    %ax,0xac(%ecx)
  jump_37346:
    push   %ebx
    push   $data_91f28
    lea    0x8(%esp),%edx
    push   %edx
    add    $0x2,%ecx
    call   func_76d09
    lea    0xc(%esp),%edx
    add    $0xc,%esp
    mov    $data_12fc20,%eax
    inc    %ebx
    call   func_1adac
    mov    %ax,0x173(%ecx)
    cmp    $0xb,%ebx
    jl     jump_37346
    add    $0x34,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_37380:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %edx,%ebx
    mov    %eax,%ecx
    shl    $0x4,%ecx
    add    %eax,%ecx
    mov    %edx,%eax
    shl    $0x4,%eax
    add    %edx,%eax
    mov    %ecx,%edx
    add    %eax,%eax
    sub    %eax,%edx
    sub    $0xc9e,%edx
    mov    $0xfffffb7c,%esi
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %esi
    mov    %eax,%esi
    mov    %ebx,%eax
    shl    $0x4,%eax
    add    %ebx,%eax
    add    %eax,%eax
    mov    %ecx,%edx
    neg    %eax
    sub    %eax,%edx
    sub    $0x29d6,%edx
    mov    $0x484,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    mov    %esi,%eax
    movswl %dx,%edx
    shl    $0x10,%eax
    or     %edx,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_373e0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %edx,%ebx
    cmp    $0xd,%eax
    jle    jump_37436
    cmp    $0x99,%eax
    jge    jump_37436
    cmp    $0x77,%edx
    jle    jump_37436
    cmp    $0x1d5,%edx
    jge    jump_37436
    mov    data_d3664,%edx
    xor    %esi,%esi
    mov    0x18(%edx),%si
    lea    -0xd(%eax),%edx
    mov    $0x46,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    %eax,%edx
    shl    $0x2,%eax
    add    %edx,%eax
    lea    -0x77(%ebx),%edx
    lea    (%esi,%eax,1),%ecx
    mov    $0x46,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    add    %eax,%ecx
    jmp    jump_37454
  jump_37436:
    mov    %ebx,%edx
    call   func_37380
    mov    %eax,%edx
    movswl %ax,%ebx
    mov    data_d3664,%eax
    sar    $0x10,%edx
    xor    %ecx,%ecx
    call   func_35968
    mov    %ax,%cx
  jump_37454:
    mov    %ecx,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3745c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    $0xf2,%eax
    test   %ecx,%ecx
    je     jump_37474
    mov    $0x96,%eax
  jump_37474:
    push   %eax
    push   %esi
    call   func_5e9d0
    add    $0x8,%esp
    mov    (%edi),%al
    mov    %al,0x10(%esp)
    cmp    $0xff,%al
    je     jump_37520
    mov    $data_91f3c,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    lea    0x8(%esp),%ecx
    call   func_56da8
    xor    %edx,%edx
    lea    0xc(%esp),%ebx
    mov    0x10(%esp),%dl
    call   func_39390
    mov    0x10(%esp),%dl
    mov    $0x10000,%ebp
    cmp    $0x17,%dl
    jne    jump_374c3
    mov    $0x8000,%ebp
  jump_374c3:
    lea    0x4(%esp),%eax
    mov    %esp,%ecx
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    0xc(%esp),%dx
    push   %eax
    mov    $data_12fc20,%eax
    mov    0xc(%esp),%bx
    call   func_1b084
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_2bc40
    push   $0x0
    push   %ebp
    push   %ebp
    push   $0x0
    push   $data_d8da0
    mov    0x18(%esp),%edx
    push   %edx
    xor    %eax,%eax
    push   $0x28
    mov    0x24(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x2c(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5d631
    add    $0x28,%esp
  jump_37520:
    push   $0x0
    mov    $data_103f9c,%ecx
    xor    %edx,%edx
    push   $0xff
    xor    %ebx,%ebx
    mov    (%edi),%dl
    push   $0xffffffff
    lea    0x0(,%edx,4),%eax
    mov    $data_10debe,%edi
    add    %edx,%eax
    push   $0x1
    shl    $0x3,%eax
    mov    $0x50,%edx
    add    %eax,%ecx
    mov    $data_10deb6,%eax
    add    $0xa,%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_37568:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x118,%esp
    mov    %eax,-0x8(%ebp)
    mov    %dx,-0x4(%ebp)
    mov    %ebx,-0x10(%ebp)
    mov    %ecx,-0x18(%ebp)
    mov    $data_91f48,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    $data_91f51,%edx
    mov    %eax,%ecx
    mov    %eax,-0x14(%ebp)
    xor    %ebx,%ebx
    mov    $data_10ae70,%eax
    call   func_56da8
    mov    -0x4(%ebp),%edx
    mov    %eax,%edi
    cmp    $0x7,%dx
    jb     jump_38434
    jbe    jump_37712
    cmp    $0x33,%dx
    jb     jump_3841b
    jbe    jump_38239
    cmp    $0x1c01,%dx
    jb     jump_3840c
    mov    -0x10(%ebp),%edx
    lea    0x0(,%edx,4),%eax
    mov    -0x8(%ebp),%ebx
    add    %edx,%eax
    mov    -0x4(%ebp),%ecx
    add    %eax,%ebx
    cmp    $0x1c01,%cx
    jbe    jump_37efd
    cmp    $0x1c02,%cx
    je     jump_38055
  jump_37601:
    mov    -0x6(%ebp),%edx
    mov    -0x18(%ebp),%ecx
    mov    -0x10(%ebp),%ebx
    mov    -0x8(%ebp),%eax
    sar    $0x10,%edx
    call   func_2f424
    mov    %eax,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3761f:
    mov    -0x8(%ebp),%eax
    movb   $0xff,0xab(%eax)
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    movw   $0xffff,0xae(%eax)
    call   *0xc(%ebx)
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3764a:
    lea    -0x34(%ebp),%edi
    mov    $data_96850,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    xor    %esi,%esi
    mov    $data_10ae70,%edi
    shl    $0x2,%esi
  jump_37661:
    mov    -0x18(%ebp),%eax
    mov    -0x6(%ebp),%ebx
    mov    -0x10(%ebp),%ecx
    mov    -0x34(%esi,%ebp,1),%edx
    push   %eax
    sar    $0x10,%ebx
    mov    %edi,%eax
    add    $0x4,%esi
    call   func_56d70
    cmp    $0x14,%esi
    jne    jump_37661
    mov    -0x8(%ebp),%eax
    movl   $0xffffffff,0x35(%eax)
    movl   $0xffffffff,0x39(%eax)
    movb   $0xff,0xab(%eax)
    movw   $0xffff,0xac(%eax)
    mov    -0x8(%ebp),%edx
    mov    0xac(%eax),%ax
    mov    %ax,0xae(%edx)
    xor    %eax,%eax
    mov    0xb0(%edx),%ax
    cmp    $0xffff,%eax
    jge    jump_376ca
    mov    %edx,%eax
    call   func_394bc
  jump_376ca:
    mov    -0x8(%ebp),%ebx
    mov    0xa7(%ebx),%ebx
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    data_10467c,%edx
    test   %edx,%edx
    je     jump_37708
    mov    $0x14,%ecx
    mov    $data_10ae70,%eax
    mov    %edx,%ebx
    mov    data_104680,%edx
    call   func_557d4
    xor    %ebx,%ebx
    mov    %ebx,data_10467c
  jump_37708:
    xor    %edx,%edx
  jump_3770a:
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_37712:
    push   $0x0
    mov    -0x8(%ebp),%edx
    mov    $data_10ae70,%eax
    mov    $0x8,%ecx
    push   $0x0
    mov    $0x4,%ebx
    mov    0x41(%edx),%edx
    call   func_56728
    mov    -0x8(%ebp),%eax
    mov    -0x8(%ebp),%edx
    mov    0x39(%eax),%eax
    mov    0x35(%edx),%ebx
    mov    0x3d(%edx),%ecx
    and    %ebx,%eax
    and    %ecx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_37755
    mov    0xa7(%edx),%ebx
    mov    %edx,%eax
    xor    %edx,%edx
    call   *0x10(%ebx)
  jump_37755:
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_37762:
    cmpl   $0x0,0x35(%ecx)
    jne    jump_37708
    cmpl   $0x0,0x35(%eax)
    jne    jump_37708
    mov    -0x18(%ebp),%edx
    mov    -0x10(%ebp),%eax
    call   func_373e0
    mov    -0x8(%ebp),%edx
    mov    %ax,0xac(%edx)
    mov    data_d3664,%eax
    mov    0x57(%eax),%al
    cmp    data_104bea,%al
    je     jump_37806
    cmpb   $0x5,0xab(%edx)
    je     jump_37806
    mov    -0x8(%ebp),%edx
    xor    %eax,%eax
    mov    0xac(%edx),%ax
    cmp    $0xffff,%eax
    je     jump_37806
    xor    %eax,%eax
    mov    0xac(%edx),%ax
    lea    0x0(,%eax,4),%edx
    mov    data_d3664,%eax
    mov    0x10(%eax),%eax
    cmpb   $0x17,0x1(%edx,%eax,1)
    jne    jump_377fa
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    mov    0xac(%eax),%dx
    mov    data_d3664,%eax
    call   func_35a70
    xor    %edx,%edx
    mov    0x54(%eax),%eax
    mov    data_104bea,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    je     jump_37806
  jump_377fa:
    mov    -0x8(%ebp),%eax
    movw   $0xffff,0xac(%eax)
  jump_37806:
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    mov    0xac(%eax),%dx
    cmp    $0xffff,%edx
    je     jump_3784c
    mov    data_d3664,%eax
    mov    0x10(%eax),%ecx
    cmpb   $0x17,0x1(%ecx,%edx,4)
    jne    jump_3784c
    call   func_35a70
    xor    %edx,%edx
    mov    0x54(%eax),%eax
    mov    data_104bea,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    je     jump_3784c
    mov    -0x8(%ebp),%eax
    movw   $0xffff,0xac(%eax)
  jump_3784c:
    mov    -0x8(%ebp),%ebx
    mov    0xa7(%ebx),%ebx
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_37867:
    mov    %ecx,%eax
    mov    0x35(%eax),%edx
    test   %edx,%edx
    je     jump_3788d
    push   $0x0
    mov    $0x2,%ebx
    mov    %eax,%edx
    xor    %ecx,%ecx
    mov    $data_10ae70,%eax
    mov    0x41(%edx),%edx
    call   func_56d30
    jmp    jump_37a59
  jump_3788d:
    mov    0x35(%edi),%ebx
    test   %ebx,%ebx
    je     jump_378ae
    mov    $0x2,%ebx
    mov    $data_10ae70,%eax
    push   %edx
    xor    %ecx,%ecx
    mov    0x41(%edi),%edx
    call   func_56d30
    jmp    jump_37a59
  jump_378ae:
    mov    $0x3,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    call   func_56b60
    jmp    jump_37a59
  jump_378c4:
    cmpl   $0x0,data_a0cfc
    je     jump_37a59
    mov    data_d3664,%eax
    addw   $0xc8,0x50(%eax)
    call   func_352e0
    jmp    jump_37a59
  jump_378e6:
    cmpl   $0x0,data_d8608
    je     jump_3790f
    cmpl   $0x0,data_a0cfc
    je     jump_37a59
    mov    data_d3664,%eax
    incw   0x55(%eax)
    call   func_34e70
    jmp    jump_37a59
  jump_3790f:
    mov    data_d3664,%edx
    mov    0x5a(%edx),%edx
    mov    data_d3664,%eax
    not    %edx
    mov    %edx,0x5a(%eax)
    jmp    jump_37a59
  jump_37927:
    cmpl   $0x0,data_a0cfc
    je     jump_37a59
    mov    data_d3664,%eax
    call   func_352e0
    jmp    jump_37a59
  jump_37943:
    cmpl   $0x0,data_a0cfc
    je     jump_37a59
    mov    data_d3664,%eax
    mov    %eax,%edx
    mov    0x4a(%eax),%ax
    mov    %ax,0x42(%edx)
    jmp    jump_37a59
  jump_37964:
    cmpl   $0x0,data_a0cfc
    je     jump_37a59
    mov    data_d3664,%eax
    mov    0x57(%eax),%al
    and    $0xff,%eax
    cmp    $0xff,%eax
    jne    jump_37998
    mov    data_d3664,%edx
    mov    data_104bea,%al
    mov    %al,0x57(%edx)
    jmp    jump_37a59
  jump_37998:
    mov    data_d3664,%edx
    xor    %eax,%eax
    mov    0xa(%edx),%ecx
    mov    data_104bea,%al
    sar    $0x10,%ecx
    movswl %ax,%ebx
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    mov    $data_a3d21,%ecx
    shl    $0x5,%eax
    add    %ecx,%eax
    call   func_1d234
    jmp    jump_37a59
  jump_379cb:
    mov    -0x8(%ebp),%eax
    xorb   $0x1,0x18b(%eax)
    jmp    jump_37a59
  jump_379da:
    cmpl   $0x0,data_a0cfc
    je     jump_37a59
    mov    data_d3664,%eax
    mov    0x42(%eax),%cx
    mov    $0xffffffff,%ebx
    add    $0x2,%ecx
    mov    $0x5,%edx
    mov    %cx,0x42(%eax)
    call   func_34ae4
    jmp    jump_37a59
  jump_37a08:
    mov    -0x18(%ebp),%eax
    cmp    $0x17,%eax
    jb     jump_37a3e
    jbe    jump_378c4
    cmp    $0x1f,%eax
    jb     jump_37a33
    jbe    jump_379cb
    cmp    $0x31,%eax
    jb     jump_37a59
    jbe    jump_37927
    cmp    $0x32,%eax
    je     jump_378e6
    jmp    jump_37a59
  jump_37a33:
    cmp    $0x18,%eax
    je     jump_37943
    jmp    jump_37a59
  jump_37a3e:
    cmp    $0x13,%eax
    jb     jump_37a50
    jbe    jump_37964
    cmp    $0x14,%eax
    je     jump_379da
    jmp    jump_37a59
  jump_37a50:
    cmp    $0x1,%eax
    je     jump_37867
  jump_37a59:
    mov    -0x8(%ebp),%ebx
    mov    0xa7(%ebx),%ebx
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_37a74:
    mov    -0x8(%ebp),%eax
    mov    0x35(%eax),%edx
    test   %edx,%edx
    je     jump_3770a
    mov    %ecx,%eax
    mov    0x35(%eax),%ebx
    test   %ebx,%ebx
    je     jump_37aa8
    push   $0x0
    mov    $0x2,%ebx
    mov    %eax,%edx
    xor    %ecx,%ecx
    mov    $data_10ae70,%eax
    mov    0x41(%edx),%edx
    call   func_56d30
    jmp    jump_37eb1
  jump_37aa8:
    cmpl   $0x0,0x35(%edi)
    je     jump_37ac8
    mov    $data_10ae70,%eax
    push   %ebx
    mov    0x41(%edi),%edx
    xor    %ecx,%ecx
    mov    $0x2,%ebx
    call   func_56d30
    jmp    jump_37eb1
  jump_37ac8:
    mov    -0x8(%ebp),%eax
    mov    -0x8(%ebp),%edx
    mov    0xac(%eax),%ax
    mov    %ax,0xae(%edx)
    xor    %eax,%eax
    mov    0xae(%edx),%ax
    cmp    $0xffff,%eax
    jge    jump_37ea1
    mov    0x57(%edx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_37b0b
    mov    0x57(%edx),%edx
    mov    $data_10914c,%eax
    sar    $0x10,%edx
    call   func_4fb90
  jump_37b0b:
    mov    -0x8(%ebp),%eax
    mov    0xab(%eax),%ch
    cmp    $0xff,%ch
    jne    jump_37b38
    mov    $0x3,%ebx
    mov    0xa7(%eax),%esi
    mov    $0x32,%edx
    xor    %ecx,%ecx
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_37b38:
    je     jump_37eb1
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ch,%dl
    mov    0xae(%eax),%bx
    mov    data_d3664,%eax
    call   func_34368
    test   %eax,%eax
    je     jump_37eb1
    mov    -0x8(%ebp),%eax
    mov    0xab(%eax),%dh
    cmp    $0x5,%dh
    jne    jump_37e5a
    xor    %edx,%edx
    mov    data_d3664,%eax
    mov    0xab(%edi),%dx
    call   func_35a70
    mov    $0x47,%edx
    mov    %eax,%ebx
    mov    %eax,%esi
    call   func_4937c
    mov    %eax,%edx
    mov    %ebx,%eax
    call   func_492f8
    mov    data_d3664,%ebx
    mov    0xa(%ebx),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $data_a3d21,%edi
    shl    $0x5,%eax
    add    %eax,%edi
    xor    %eax,%eax
    mov    0x57(%ebx),%al
    cmp    $0xff,%eax
    je     jump_37bd5
    mov    $0x1c6,%ebx
    mov    $data_91f5a,%edx
    xor    %eax,%eax
    call   func_26198
  jump_37bd5:
    mov    $0x1f,%eax
    mov    $0x14,%ecx
    mov    data_d3664,%ebx
    call   func_1cea8
    add    $0x24,%ebx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_557d4
    mov    0x56(%esi),%al
    mov    data_d3664,%edx
    mov    %al,%cl
    mov    %al,0x57(%edx)
    mov    $0x1,%al
    mov    0x14(%edi),%bh
    shl    %cl,%al
    or     %al,%bh
    mov    %bh,0x14(%edi)
    movw   $0x2,0x42(%edx)
    mov    data_a2f6c,%eax
    xor    %ecx,%ecx
    mov    %eax,0x67(%edx)
    mov    -0x8(%ebp),%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0xab(%eax),%bl
    mov    0xae(%eax),%dx
    mov    data_d3664,%eax
    xor    %edi,%edi
    call   func_34b0c
    mov    $0x1c,%ebx
    lea    -0x50(%ebp),%eax
    xor    %edx,%edx
    mov    $0xffffffff,%ecx
    call   func_76ec0
    mov    data_a3cf4,%ax
    xor    %edx,%edx
    test   %ax,%ax
    jle    jump_37cbd
    jmp    jump_37c73
  jump_37c66:
    mov    data_a3cf4,%si
    inc    %edx
    cmp    %si,%dx
    jge    jump_37cbd
  jump_37c73:
    movswl %dx,%ebx
    imul   $0x1ee,%ebx,%esi
    cmpl   $0x0,data_a2f75(%esi)
    jne    jump_37c66
    mov    $data_a2f72,%eax
    add    %esi,%eax
    call   func_402e0
    mov    %eax,-0x50(%ebp,%ebx,4)
    cmp    %eax,%edi
    jge    jump_37c66
    xor    %eax,%eax
    mov    data_104bea,%al
    cmp    %eax,%ebx
    je     jump_37cb4
    imul   $0x1ee,%eax,%eax
    cmpb   $0x0,data_a3132(%ebx,%eax,1)
    je     jump_37c66
  jump_37cb4:
    movswl %dx,%ecx
    mov    -0x50(%ebp,%ecx,4),%edi
    jmp    jump_37c66
  jump_37cbd:
    test   %ecx,%ecx
    jge    jump_37cd2
    mov    $0x1e9,%ebx
    mov    $data_91f69,%edx
    xor    %eax,%eax
    call   func_26198
  jump_37cd2:
    mov    $data_91f78,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,-0x1c(%ebp)
    xor    %eax,%eax
    mov    data_104bea,%al
    mov    $data_91f83,%ebx
    cmp    %eax,%ecx
    jne    jump_37cfb
    mov    $data_91f8c,%ebx
  jump_37cfb:
    mov    $data_91f98,%edx
    mov    -0x1c(%ebp),%eax
    call   func_2fcb0
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    -0x50(%ebp,%ecx,4),%esi
    shl    $0x2,%eax
    push   %esi
    add    $data_1050a4,%eax
    push   %eax
    xor    %eax,%eax
    mov    data_104bea,%al
    cmpl   $0x1,-0x50(%ebp,%eax,4)
    jne    jump_37d49
    mov    $0x20,%eax
    jmp    jump_37d4e
  jump_37d49:
    mov    $0x21,%eax
  jump_37d4e:
    call   func_1cea8
    xor    %edx,%edx
    mov    data_104bea,%dl
    push   %eax
    mov    -0x50(%ebp,%edx,4),%eax
    push   %eax
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    mov    -0x1c(%ebp),%eax
    mov    0xc9a(%eax),%edx
    push   %edx
    lea    -0x118(%ebp),%eax
    push   %eax
    mov    -0x1c(%ebp),%edi
    call   func_76d09
    add    $0x1c,%esp
    lea    -0x118(%ebp),%esi
    mov    0xc9a(%edi),%edi
    push   %edi
  jump_37db1:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_37dc9
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_37db1
  jump_37dc9:
    pop    %edi
    mov    -0x1c(%ebp),%eax
    movw   $0x1d,0xcb1(%eax)
    mov    data_d3664,%eax
    imul   $0x5,0x16(%eax),%dx
    mov    0x14(%eax),%ax
    add    %eax,%edx
    mov    -0x1c(%ebp),%eax
    mov    %dx,0xcb3(%eax)
    mov    data_d3664,%eax
    add    $0x24,%eax
    push   %eax
    mov    -0x1c(%ebp),%eax
    mov    0xcd0(%eax),%ebx
    xor    %ecx,%ecx
    push   %ebx
    lea    -0x118(%ebp),%eax
    lea    -0x118(%ebp),%esi
    push   %eax
    mov    -0x1c(%ebp),%edi
    mov    $0x5,%edx
    call   func_76d09
    add    $0xc,%esp
    mov    0xcd0(%edi),%edi
    xor    %ebx,%ebx
    push   %edi
  jump_37e2b:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_37e43
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_37e2b
  jump_37e43:
    pop    %edi
    mov    $data_10ae70,%eax
    call   func_56b60
    mov    -0x8(%ebp),%eax
    movb   $0xff,0xab(%eax)
    jmp    jump_37eb1
  jump_37e5a:
    xor    %ebx,%ebx
    mov    %dh,%bl
    xor    %edx,%edx
    mov    $0x2,%ecx
    mov    0xae(%eax),%dx
    mov    data_d3664,%eax
    call   func_34b0c
    mov    -0x8(%ebp),%edx
    cmpb   $0x17,0xab(%edx)
    jne    jump_37e95
    cmp    $0xffffffff,%eax
    jne    jump_37e95
    mov    0xae(%edx),%ax
    mov    %ax,0xb0(%edx)
  jump_37e95:
    mov    -0x8(%ebp),%eax
    movb   $0xff,0xab(%eax)
    jmp    jump_37eb1
  jump_37ea1:
    cmpb   $0xff,0xab(%edx)
    je     jump_37eb1
    movb   $0xff,0xab(%edx)
  jump_37eb1:
    mov    -0x8(%ebp),%eax
    xor    %ebx,%ebx
    mov    0xb0(%eax),%bx
    cmp    $0xffff,%ebx
    jge    jump_37edf
    mov    0xa7(%eax),%esi
    mov    $0x34,%edx
    xor    %ecx,%ecx
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_37edf:
    mov    -0x18(%ebp),%ecx
    mov    0xa7(%eax),%esi
    mov    -0x10(%ebp),%ebx
    mov    $0x8,%edx
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_37efd:
    mov    -0x8(%ebp),%edx
    mov    0xb2(%ebx),%al
    xor    %ebx,%ebx
    mov    0xae(%edx),%bx
    mov    %al,0xab(%edx)
    cmp    $0xffff,%ebx
    jne    jump_37f6c
    cmp    $0xff,%al
    je     jump_37ff2
    xor    %ebx,%ebx
    mov    %al,%bl
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    mov    data_103fa2(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    je     jump_37ff2
    mov    $0x2,%ecx
    mov    $0xffff,%edx
    mov    data_d3664,%eax
    call   func_34b0c
    mov    -0x8(%ebp),%eax
    movb   $0xff,0xab(%eax)
    jmp    jump_37ff2
  jump_37f6c:
    cmp    $0xff,%al
    je     jump_37ff2
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    mov    0xab(%eax),%dl
    mov    data_d3664,%eax
    call   func_34368
    cmp    $0xffffffff,%eax
    jne    jump_37fce
    mov    -0x8(%ebp),%eax
    cmpb   $0x17,0xab(%eax)
    jne    jump_37fab
    mov    -0x8(%ebp),%edx
    mov    0xae(%eax),%ax
    mov    %ax,0xb0(%edx)
  jump_37fab:
    mov    -0x8(%ebp),%eax
    mov    $0x2,%ecx
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0xab(%eax),%bl
    mov    0xae(%eax),%dx
    mov    data_d3664,%eax
    call   func_34b0c
  jump_37fce:
    mov    -0x8(%ebp),%eax
    movb   $0xff,0xab(%eax)
    movw   $0xffff,0xac(%eax)
    mov    -0x8(%ebp),%edx
    mov    0xac(%eax),%ax
    mov    %ax,0xae(%edx)
  jump_37ff2:
    push   $0x0
    mov    -0x14(%ebp),%edx
    mov    $0x2,%ebx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_56d30
    mov    -0x8(%ebp),%edx
    xor    %eax,%eax
    mov    0xb0(%edx),%ax
    cmp    $0xffff,%eax
    jge    jump_3803d
    mov    %eax,%ebx
    mov    0xa7(%edx),%esi
    xor    %ecx,%ecx
    mov    $0x34,%edx
    mov    -0x8(%ebp),%eax
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3803d:
    mov    0xa7(%edx),%ebx
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38055:
    mov    0xb2(%ebx),%bl
    and    $0xff,%ebx
    cmp    $0xff,%ebx
    je     jump_3807a
    mov    $0x5,%ecx
    mov    $data_10ae70,%eax
    mov    %ecx,%edx
    call   func_56b60
  jump_3807a:
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38087:
    mov    -0x8(%ebp),%eax
    movw   $0xffff,0xac(%eax)
    mov    -0x10(%ebp),%eax
    cmp    $0xa,%eax
    jne    jump_380d8
    push   $0x0
    mov    $0x2,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%edi),%edx
    xor    %ecx,%ecx
    call   func_56d30
    mov    -0x8(%ebp),%eax
    mov    $0x8,%edx
    mov    0xa7(%eax),%esi
    mov    data_d864c,%ecx
    mov    data_d8648,%ebx
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_380d8:
    cmp    $0xb,%eax
    jne    jump_38112
    push   $0x0
    mov    $0x2,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%edi),%edx
    xor    %ecx,%ecx
    call   func_56d30
    mov    -0x8(%ebp),%eax
    mov    $0x33,%edx
    mov    0xa7(%eax),%esi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38112:
    cmp    $0xc,%eax
    jne    jump_3815b
    push   $0x0
    mov    $0x2,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%edi),%edx
    xor    %ecx,%ecx
    call   func_56d30
    mov    -0x8(%ebp),%eax
    mov    $0x8,%edx
    mov    data_d864c,%ecx
    mov    0xa7(%eax),%esi
    mov    data_d8648,%ebx
    movb   $0x5,0xab(%eax)
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3815b:
    cmp    $0x4,%eax
    je     jump_381d5
    mov    data_d3664,%eax
    mov    data_104bea,%cl
    cmp    0x57(%eax),%cl
    je     jump_381d5
    mov    -0x8(%ebp),%edx
    xor    %eax,%eax
    mov    0xae(%edx),%ax
    cmp    $0xffff,%eax
    jge    jump_37708
    xor    %eax,%eax
    mov    0xae(%edx),%ax
    lea    0x0(,%eax,4),%edx
    mov    data_d3664,%eax
    mov    0x10(%eax),%eax
    cmpb   $0x17,0x1(%edx,%eax,1)
    jne    jump_37708
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    mov    0xae(%eax),%dx
    mov    data_d3664,%eax
    call   func_35a70
    mov    0x54(%eax),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    data_104bea,%al
    cmp    %eax,%edx
    jne    jump_37708
  jump_381d5:
    mov    -0x8(%ebp),%edx
    xor    %eax,%eax
    mov    -0x10(%ebp),%ecx
    mov    0xae(%edx),%ax
    mov    $0x32,%ebx
    push   %eax
    mov    0x41(%edi),%edx
    mov    $data_10ae70,%eax
    call   func_56d30
    mov    $0x6,%edx
    mov    -0x8(%ebp),%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_2d258
    push   $0x0
    mov    $0x1,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%edi),%edx
    xor    %ecx,%ecx
    call   func_56d30
    mov    -0x8(%ebp),%ebx
    mov    0xa7(%ebx),%ebx
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38239:
    mov    data_d3664,%eax
    mov    data_104bea,%bh
    cmp    0x57(%eax),%bh
    jne    jump_38336
    cmpl   $0x1,-0x10(%ebp)
    jne    jump_3825f
    mov    -0x8(%ebp),%eax
    movw   $0xffff,0xae(%eax)
  jump_3825f:
    mov    -0x14(%ebp),%eax
    mov    $func_3745c,%edx
    mov    -0x8(%ebp),%edi
    movl   $0x0,0xab(%eax)
    mov    -0x8(%ebp),%esi
    movw   $0x4b,0x8c9(%eax)
    xor    %ecx,%ecx
    movb   $0xf2,0xc6(%eax)
    call   func_2f1c8
    mov    %ecx,-0x20(%ebp)
    mov    %ecx,-0xc(%ebp)
    mov    -0x14(%ebp),%eax
    add    $0xb2,%edi
    call   func_2ed4c
    jmp    jump_382b0
  jump_382a4:
    mov    -0xc(%ebp),%ecx
    inc    %ecx
    mov    %ecx,-0xc(%ebp)
    cmp    $0x27,%ecx
    jge    jump_38306
  jump_382b0:
    mov    -0xc(%ebp),%ch
    cmp    $0x5,%ch
    je     jump_382a4
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ch,%dl
    mov    0xae(%eax),%bx
    mov    data_d3664,%eax
    call   func_34368
    test   %eax,%eax
    je     jump_382a4
    mov    $0xffffffff,%ebx
    mov    -0x14(%ebp),%eax
    mov    %edi,%edx
    mov    %ch,0xb2(%esi)
    xor    %ecx,%ecx
    movl   $0x0,0xb3(%esi)
    call   func_2ea8c
    mov    -0x20(%ebp),%ebx
    add    $0x5,%esi
    inc    %ebx
    add    $0x5,%edi
    mov    %ebx,-0x20(%ebp)
    jmp    jump_382a4
  jump_38306:
    cmpl   $0x0,-0x20(%ebp)
    je     jump_38336
    mov    $0x6,%edx
    mov    -0x8(%ebp),%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_2d258
    push   $0x0
    mov    -0x14(%ebp),%edx
    mov    $0x1,%ebx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_56d30
  jump_38336:
    mov    -0x8(%ebp),%ebx
    mov    0xa7(%ebx),%ebx
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38351:
    mov    -0x18(%ebp),%edx
    mov    $0xffffffff,%esi
    test   %edx,%edx
    jne    jump_383ab
    mov    data_d3664,%ebx
    mov    0x57(%ebx),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    mov    %ebx,%edx
    add    $data_a2f72,%eax
    call   func_40144
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_38395
    mov    $0x2ad,%ebx
    mov    $data_91fa1,%edx
    call   func_26198
  jump_38395:
    mov    data_d3664,%eax
    xor    %edx,%edx
    mov    %ecx,%ebx
    mov    -0x10(%ebp),%dx
    xor    %esi,%esi
    call   func_35b04
    jmp    jump_383bc
  jump_383ab:
    mov    -0x8(%ebp),%edx
    mov    0xab(%eax),%ax
    mov    %ax,0xb0(%edx)
  jump_383bc:
    mov    $data_91fb0,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    xor    %ecx,%ecx
    xor    %edx,%edx
    mov    %eax,%edi
    mov    -0x10(%ebp),%dx
    mov    data_d3664,%eax
    mov    %esi,%ebx
    call   func_35a70
    mov    %eax,%edx
    mov    %edi,%eax
    call   func_4da7c
    mov    $0x1,%ecx
    mov    $0x8,%ebx
    mov    $data_10ae70,%eax
    mov    %ecx,%edx
    call   func_56b60
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3840c:
    cmp    $0x34,%dx
    je     jump_38351
    jmp    jump_37601
  jump_3841b:
    cmp    $0x8,%dx
    jbe    jump_37762
    cmp    $0x32,%dx
    je     jump_38087
    jmp    jump_37601
  jump_38434:
    cmp    $0x4,%dx
    jb     jump_38491
    jbe    jump_37a74
    cmp    $0x5,%dx
    jbe    jump_3761f
    mov    -0x8(%ebp),%edx
    mov    $data_10ae70,%eax
    mov    $0x8,%ebx
    mov    0x41(%edx),%edx
    call   func_567bc
    mov    -0x8(%ebp),%eax
    mov    -0x8(%ebp),%edx
    mov    0x39(%eax),%eax
    mov    0x35(%edx),%esi
    mov    0x3d(%edx),%edi
    and    %esi,%eax
    and    %edi,%eax
    cmp    $0xffffffff,%eax
    jne    jump_38484
    mov    0xa7(%edx),%ebx
    mov    %edx,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_38484:
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38491:
    cmp    $0x1,%dx
    jb     jump_37601
    jbe    jump_3764a
    cmp    $0x3,%dx
    je     jump_37a08
    jmp    jump_37601


/*----------------------------------------------------------------*/
func_384b0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x380,%esp
    mov    %eax,%ebp
    mov    data_d3664,%eax
    xor    %edx,%edx
    mov    0x14(%eax),%dx
    mov    %edx,0x340(%esp)
    mov    data_ffef8,%dx
    mov    0x16(%eax),%ax
    mov    %edx,0x370(%esp)
    and    $0xffff,%eax
    mov    0x175(%ebp,%eax,2),%ax
    mov    %eax,0x368(%esp)
    mov    0x1c(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_385a2
    push   $0x73
    push   $0x7
    xor    %edx,%edx
    push   $0x4
    mov    $data_12fc20,%eax
    mov    0x37c(%esp),%dx
    call   func_1b084
    push   %eax
    lea    0x4(%ebp),%esi
    push   %esi
    call   func_5cb3c
    mov    0x18b(%ebp),%al
    add    $0x14,%esp
    and    $0x4,%al
    and    $0xff,%eax
    je     jump_3856a
    push   $0x128
    push   $0x198
    mov    0x348(%esp),%edx
    push   %edx
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    0x374(%esp),%dx
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5cb3c
    add    $0x14,%esp
  jump_3856a:
    push   $0x0
    mov    0x1c(%ebp),%eax
    push   $0x0
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x37c(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    lea    0x4(%ebp),%esi
    push   %esi
    call   func_5cb3c
    add    $0x14,%esp
    mov    $data_10ae70,%eax
    mov    %esi,%edx
    call   func_552cc
  jump_385a2:
    lea    0x2fc(%esp),%edi
    lea    0x4(%ebp),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0xffff,%edx
    mov    0xab(%ebp),%ah
    mov    %edx,0x36c(%esp)
    cmp    $0xff,%ah
    je     jump_38612
    movl   $0xfffe,0x36c(%esp)
    xor    %ebx,%ebx
    mov    0xac(%ebp),%bx
    cmp    $0xffff,%ebx
    jge    jump_38612
    mov    data_d3664,%eax
    mov    0x10(%eax),%ecx
    cmpb   $0xff,0x1(%ecx,%ebx,4)
    jne    jump_38612
    xor    %edx,%edx
    mov    0xab(%ebp),%dl
    call   func_34368
    test   %eax,%eax
    je     jump_38612
    mov    0xac(%ebp),%ax
    mov    %eax,0x36c(%esp)
  jump_38612:
    mov    data_d3664,%eax
    mov    $0xffff,%ecx
    mov    0x10(%eax),%edx
    mov    %ecx,0x378(%esp)
    mov    %edx,0x34c(%esp)
    mov    0x57(%eax),%dl
    xor    %ebx,%ebx
    mov    data_104bea,%dh
    mov    %ebx,0x330(%esp)
    cmp    %dh,%dl
    je     jump_3865d
    mov    $0xb,%edx
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_38e7e
  jump_3865d:
    mov    0x340(%esp),%edx
    mov    $0x6e,%ecx
    mov    %edx,%eax
    mov    $0x19a,%esi
    shl    $0x4,%eax
    mov    %ecx,0x354(%esp)
    sub    %edx,%eax
    mov    %esi,0x320(%esp)
    mov    %eax,0x358(%esp)
    jmp    jump_386c9
  jump_3868c:
    mov    0x354(%esp),%edi
    mov    0x320(%esp),%eax
    mov    0x358(%esp),%edx
    add    $0x11,%edi
    sub    $0x22,%eax
    inc    %edx
    mov    %edi,0x354(%esp)
    mov    %eax,0x320(%esp)
    mov    %edx,0x358(%esp)
    cmp    $0x16d,%edi
    je     jump_38e7e
  jump_386c9:
    mov    0x358(%esp),%edx
    xor    %eax,%eax
    mov    data_1045b8(%edx),%al
    mov    %eax,0x318(%esp)
    mov    0x320(%esp),%eax
    mov    %eax,0x33c(%esp)
    mov    0x354(%esp),%eax
    mov    %edx,0x328(%esp)
    mov    %eax,0x350(%esp)
    jmp    jump_38d26
  jump_38707:
    mov    0x18b(%ebp),%al
    and    $0x1,%al
    and    $0xff,%eax
    je     jump_38997
    mov    $0xd,%esi
    xor    %eax,%eax
    mov    $0xc,%edi
    mov    0x374(%esp),%ax
    mov    %esi,0x364(%esp)
    test   %eax,%eax
    jne    jump_38746
    movl   $0x7,0x364(%esp)
    xor    %edi,%edi
  jump_38746:
    xor    %eax,%eax
    mov    0x374(%esp),%ax
    cmp    $0x2,%eax
    jne    jump_38768
    mov    $0x8,%ecx
    mov    $0x75,%edi
    mov    %ecx,0x364(%esp)
    jmp    jump_38796
  jump_38768:
    cmp    $0x3,%eax
    jne    jump_38780
    mov    $0x9,%ebx
    mov    $0x92,%edi
    mov    %ebx,0x364(%esp)
    jmp    jump_38796
  jump_38780:
    cmp    $0x4,%eax
    jne    jump_38796
    mov    $0xa,%eax
    mov    $0xff,%edi
    mov    %eax,0x364(%esp)
  jump_38796:
    cmp    $0xffffffff,%edx
    jne    jump_38891
    mov    0x260(%esp),%eax
    mov    %eax,0x200(%esp)
    mov    0x264(%esp),%eax
    inc    %eax
    mov    %eax,0x204(%esp)
    mov    0x278(%esp),%eax
    sub    $0x2,%eax
    mov    %eax,0x218(%esp)
    mov    0x27c(%esp),%eax
    mov    %eax,0x21c(%esp)
    mov    0x290(%esp),%eax
    mov    %eax,0x230(%esp)
    mov    0x294(%esp),%eax
    dec    %eax
    mov    %eax,0x234(%esp)
    mov    0x2a8(%esp),%eax
    add    $0x2,%eax
    mov    %eax,0x248(%esp)
    mov    0x2ac(%esp),%eax
    xor    %esi,%esi
    mov    %eax,0x24c(%esp)
  jump_38819:
    xor    %eax,%eax
    mov    %di,%ax
    push   %eax
    mov    0x315(%esp,%esi,1),%eax
    sar    $0x18,%eax
    imul   $0x18,%eax,%eax
    mov    0x208(%esp,%eax,1),%ebx
    mov    0x204(%esp,%eax,1),%ecx
    mov    0x311(%esp,%esi,1),%eax
    sar    $0x18,%eax
    imul   $0x18,%eax,%eax
    push   $0x0
    push   %ebx
    push   %ecx
    mov    0x214(%esp,%eax,1),%edx
    push   %edx
    mov    0x214(%esp,%eax,1),%ebx
    push   %ebx
    push   $data_d8668
    inc    %esi
    call   func_5c001
    add    $0x1c,%esp
    cmp    $0x4,%esi
    jl     jump_38819
    mov    0x364(%esp),%edi
    test   %di,%di
    je     jump_38997
    xor    %eax,%eax
    mov    %di,%ax
    mov    data_d8d8f,%edx
    shl    $0x8,%eax
    jmp    jump_3897d
  jump_38891:
    mov    0x260(%esp),%eax
    mov    %eax,0x200(%esp)
    mov    0x264(%esp),%eax
    add    $0xe,%eax
    mov    %eax,0x204(%esp)
    mov    0x278(%esp),%eax
    sub    $0x1c,%eax
    mov    %eax,0x218(%esp)
    mov    0x27c(%esp),%eax
    mov    %eax,0x21c(%esp)
    mov    0x290(%esp),%eax
    mov    %eax,0x230(%esp)
    mov    0x294(%esp),%eax
    sub    $0xe,%eax
    mov    %eax,0x234(%esp)
    mov    0x2a8(%esp),%eax
    add    $0x1c,%eax
    mov    %eax,0x248(%esp)
    mov    0x2ac(%esp),%eax
    xor    %esi,%esi
    mov    %eax,0x24c(%esp)
  jump_3890f:
    xor    %eax,%eax
    mov    %di,%ax
    push   %eax
    mov    0x315(%esp,%esi,1),%eax
    sar    $0x18,%eax
    imul   $0x18,%eax,%eax
    mov    0x208(%esp,%eax,1),%edx
    mov    0x204(%esp,%eax,1),%ebx
    mov    0x311(%esp,%esi,1),%eax
    sar    $0x18,%eax
    imul   $0x18,%eax,%eax
    push   $0x0
    push   %edx
    push   %ebx
    mov    0x214(%esp,%eax,1),%ecx
    push   %ecx
    mov    0x214(%esp,%eax,1),%edx
    push   %edx
    push   $data_d8668
    inc    %esi
    call   func_5c001
    add    $0x1c,%esp
    cmp    $0x4,%esi
    jl     jump_3890f
    mov    0x364(%esp),%esi
    test   %si,%si
    je     jump_38997
    xor    %edx,%edx
    mov    %si,%dx
    mov    data_d8d8f,%eax
    shl    $0x8,%edx
  jump_3897d:
    add    %edx,%eax
    push   %eax
    lea    0x204(%esp),%eax
    push   %eax
    push   $0x4
    push   $data_d8668
    call   func_62da5
    add    $0x10,%esp
  jump_38997:
    xor    %eax,%eax
    mov    0x330(%esp),%ecx
    mov    0xac(%ebp),%ax
    cmp    %ecx,%eax
    jne    jump_38a15
    mov    0xab(%ebp),%cl
    cmp    $0xff,%cl
    jne    jump_38a15
    cmp    0x37c(%esp),%cl
    jne    jump_38a15
    xor    %esi,%esi
  jump_389c1:
    mov    0x311(%esp,%esi,1),%eax
    sar    $0x18,%eax
    imul   $0x18,%eax,%eax
    mov    0x264(%esp,%eax,1),%edi
    mov    0x260(%esp,%eax,1),%edx
    mov    0x30d(%esp,%esi,1),%eax
    sar    $0x18,%eax
    imul   $0x18,%eax,%eax
    push   $0x96
    push   $0x0
    push   %edi
    push   %edx
    mov    0x274(%esp,%eax,1),%ebx
    push   %ebx
    mov    0x274(%esp,%eax,1),%ecx
    push   %ecx
    push   $data_d8668
    inc    %esi
    call   func_5c001
    add    $0x1c,%esp
    cmp    $0x4,%esi
    jl     jump_389c1
  jump_38a15:
    cmpb   $0xff,0x37c(%esp)
    jne    jump_38a35
    mov    0x374(%esp),%eax
    xor    %ah,%ah
    and    $0x8,%al
    and    $0xffff,%eax
    je     jump_38c8c
  jump_38a35:
    lea    0x378(%esp),%ecx
    xor    %edi,%edi
    lea    0x368(%esp),%ebx
    mov    0x330(%esp),%di
    mov    %ebp,%eax
    mov    %edi,%edx
    call   func_393f4
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    0x368(%esp),%dx
    call   func_1b084
    mov    %eax,%esi
    mov    %eax,0x32c(%esp)
    mov    data_d3664,%eax
    mov    0x52(%eax),%ax
    mov    0x330(%esp),%edx
    and    $0xffff,%eax
    cmp    %edx,%eax
    jne    jump_38c13
    lea    0x260(%esp),%eax
    push   %eax
    push   $0x4
    push   $data_d8668
    call   func_61800
    mov    data_d3664,%eax
    xor    %esi,%esi
    mov    0x50(%eax),%si
    imul   $0x22,%esi,%esi
    add    $0xc,%esp
    mov    $0xff,%ebx
    mov    %edi,%edx
    call   func_3583c
    xor    %ebx,%ebx
    mov    %ax,%bx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x330(%esp),%ebx
    xor    %edx,%edx
    mov    %eax,0x360(%esp)
    mov    0xac(%ebp),%dx
    mov    $0xf2,%al
    cmp    %ebx,%edx
    jne    jump_38aee
    mov    $0x96,%al
  jump_38aee:
    xor    %edx,%edx
    mov    $0x100,%ebx
    mov    %al,%dl
    lea    0x100(%esp),%eax
    call   func_76ec0
    lea    0x100(%esp),%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    mov    0x264(%esp),%ecx
    push   %ecx
    mov    0x264(%esp),%esi
    xor    %eax,%eax
    push   %esi
    mov    0x380(%esp),%ax
    push   %eax
    mov    0x338(%esp),%edi
    push   %edi
    push   $data_d8668
    mov    $data_d8668,%esi
    call   func_5d026
    add    $0x14,%esp
    lea    0x2d4(%esp),%edi
    mov    0x264(%esp),%eax
    mov    0x360(%esp),%edx
    add    $0x22,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    sub    %edx,%eax
    mov    %eax,0x2dc(%esp)
    xor    %eax,%eax
    mov    0x330(%esp),%ebx
    mov    0xac(%ebp),%ax
    cmp    %ebx,%eax
    jne    jump_38bd4
    mov    data_d8d8f,%eax
    add    $0x1500,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    mov    0x264(%esp),%eax
    sub    0x2dc(%esp),%eax
    push   %eax
    mov    0x264(%esp),%ebx
    xor    %eax,%eax
    push   %ebx
    mov    0x380(%esp),%ax
    push   %eax
    mov    0x338(%esp),%ecx
    push   %ecx
    lea    0x2e4(%esp),%eax
    push   %eax
    call   func_5d026
    add    $0x14,%esp
    jmp    jump_38cf7
  jump_38bd4:
    mov    0x264(%esp),%eax
    sub    0x2dc(%esp),%eax
    push   %eax
    mov    0x264(%esp),%esi
    xor    %eax,%eax
    push   %esi
    mov    0x380(%esp),%ax
    push   %eax
    mov    0x338(%esp),%edi
    push   %edi
    lea    0x2e4(%esp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_38cf7
  jump_38c13:
    xor    %eax,%eax
    mov    0xac(%ebp),%ax
    cmp    %edx,%eax
    jne    jump_38c61
    mov    data_d8d8f,%eax
    add    $0x1500,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    mov    0x264(%esp),%eax
    push   %eax
    mov    0x264(%esp),%edx
    xor    %eax,%eax
    push   %edx
    mov    0x380(%esp),%ax
    push   %eax
    push   %esi
    push   $data_d8668
    call   func_5d026
    add    $0x14,%esp
    jmp    jump_38cf7
  jump_38c61:
    mov    0x264(%esp),%ecx
    push   %ecx
    mov    0x264(%esp),%edi
    xor    %eax,%eax
    push   %edi
    mov    0x380(%esp),%ax
    push   %eax
    push   %esi
    push   $data_d8668
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_38cf7
  jump_38c8c:
    mov    0x36c(%esp),%ax
    cmp    0x330(%esp),%eax
    jne    jump_38cf7
    lea    0x378(%esp),%ecx
    lea    0x368(%esp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    0xab(%ebp),%dl
    call   func_39390
    mov    0x264(%esp),%edi
    push   %edi
    mov    0x264(%esp),%eax
    push   %eax
    xor    %eax,%eax
    mov    0x380(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x374(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   $data_d8668
    call   func_5cb3c
    add    $0x14,%esp
  jump_38cf7:
    mov    0x318(%esp),%esi
    mov    0x330(%esp),%edi
    mov    0x34c(%esp),%eax
    inc    %esi
    inc    %edi
    add    $0x4,%eax
    mov    %esi,0x318(%esp)
    mov    %edi,0x330(%esp)
    mov    %eax,0x34c(%esp)
  jump_38d26:
    mov    0x328(%esp),%eax
    xor    %edx,%edx
    mov    0x328(%esp),%ebx
    mov    data_1045b8(%eax),%dl
    xor    %eax,%eax
    mov    data_104604(%ebx),%al
    mov    0x318(%esp),%ecx
    add    %edx,%eax
    cmp    %ecx,%eax
    jle    jump_3868c
    imul   $0x22,%ecx,%eax
    mov    0x33c(%esp),%edx
    add    %eax,%edx
    mov    %edx,0x260(%esp)
    lea    0x22(%edx),%eax
    mov    %eax,0x278(%esp)
    mov    %edx,0x290(%esp)
    lea    -0x22(%edx),%eax
    mov    %eax,0x2a8(%esp)
    imul   $0x11,%ecx,%eax
    mov    0x350(%esp),%edx
    add    %eax,%edx
    mov    %edx,0x264(%esp)
    lea    0x11(%edx),%eax
    mov    %eax,0x27c(%esp)
    lea    0x22(%edx),%eax
    mov    %eax,0x294(%esp)
    mov    0x27c(%esp),%eax
    mov    %eax,0x2ac(%esp)
    mov    $0x960000,%eax
    lea    0x310(%esp),%edi
    mov    %eax,0x2b0(%esp)
    mov    %eax,0x298(%esp)
    mov    %eax,0x280(%esp)
    mov    %eax,0x268(%esp)
    mov    0x34c(%esp),%eax
    mov    $data_96864,%esi
    xor    %ebx,%ebx
    mov    0x1(%eax),%al
    mov    0x34c(%esp),%edx
    mov    %al,0x37c(%esp)
    xor    %ah,%ah
    mov    0x330(%esp),%bx
    mov    (%edx),%al
    mov    $0xff,%edx
    mov    %eax,0x374(%esp)
    mov    data_d3664,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_34368
    xor    %ebx,%ebx
    mov    0x330(%esp),%esi
    mov    0xac(%ebp),%bx
    mov    %eax,%edx
    cmp    %esi,%ebx
    jne    jump_38707
    mov    0xab(%ebp),%bl
    cmp    $0xff,%bl
    jne    jump_38707
    cmp    0x37c(%esp),%bl
    jne    jump_38707
    cmp    $0xffffffff,%eax
    jne    jump_38707
    lea    0x260(%esp),%eax
    push   %eax
    push   $0x4
    push   $data_d8668
    call   func_61800
    add    $0xc,%esp
    jmp    jump_38997
  jump_38e7e:
    mov    $0xd,%edx
    mov    $0x77,%ebx
    mov    data_d3664,%eax
    xor    %ecx,%ecx
    mov    %edx,0x324(%esp)
    mov    0x57(%eax),%dl
    mov    %ebx,0x348(%esp)
    mov    data_104bea,%dh
    mov    %ecx,0x334(%esp)
    cmp    %dh,%dl
    je     jump_38ed2
    mov    $0x19,%edx
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_38ed2
    movl   $0xffffffff,0x334(%esp)
  jump_38ed2:
    mov    data_d3664,%eax
    mov    0x18(%eax),%ax
    and    $0xffff,%eax
    mov    %eax,0x330(%esp)
    shl    $0x2,%eax
    mov    %eax,0x31c(%esp)
    mov    0x324(%esp),%eax
    add    $0x23,%eax
    mov    %eax,0x35c(%esp)
    jmp    jump_3901d
  jump_38f07:
    xor    %eax,%eax
    mov    0x330(%esp),%esi
    mov    0x36c(%esp),%ax
    cmp    %esi,%eax
    jne    jump_38f9d
    mov    0xab(%ebp),%bh
    mov    $0x10000,%esi
    cmp    $0x17,%bh
    jne    jump_38f35
    mov    $0x8000,%esi
  jump_38f35:
    lea    0x378(%esp),%ecx
    lea    0x368(%esp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    0xab(%ebp),%dl
    call   func_39390
    push   $0x0
    push   %esi
    push   %esi
    push   $0x0
    mov    0x358(%esp),%eax
    push   $data_d8da0
    add    $0x23,%eax
    push   %eax
    mov    0x374(%esp),%edi
    xor    %eax,%eax
    push   %edi
    mov    0x394(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x388(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   $data_d8668
  jump_38f95:
    call   func_5d631
    add    $0x28,%esp
  jump_38f9d:
    mov    data_d3664,%edx
    mov    0x18(%edx),%dx
    mov    0x330(%esp),%eax
    and    $0xffff,%edx
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x5,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x46,0x348(%esp)
    cmp    $0x4,%edx
    jne    jump_38ffd
    mov    $0x77,%edi
    mov    0x35c(%esp),%eax
    mov    0x324(%esp),%edx
    mov    %edi,0x348(%esp)
    add    $0x46,%eax
    add    $0x46,%edx
    mov    %eax,0x35c(%esp)
    mov    %edx,0x324(%esp)
  jump_38ffd:
    mov    0x31c(%esp),%ebx
    mov    0x330(%esp),%ecx
    add    $0x4,%ebx
    inc    %ecx
    mov    %ebx,0x31c(%esp)
    mov    %ecx,0x330(%esp)
  jump_3901d:
    mov    data_d3664,%eax
    xor    %edx,%edx
    mov    0x330(%esp),%edi
    mov    0x1a(%eax),%dx
    cmp    %edi,%edx
    jle    jump_39300
    mov    0x31c(%esp),%ebx
    mov    0x10(%eax),%edx
    xor    %ecx,%ecx
    add    %ebx,%edx
    mov    %ecx,0x338(%esp)
    movzbw 0x1(%edx),%si
    mov    0x1(%edx),%dl
    and    $0xff,%edx
    cmp    $0x17,%edx
    jne    jump_3908a
    xor    %edx,%edx
    mov    0x330(%esp),%dx
    call   func_35a70
    mov    0x54(%eax),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    data_104bea,%al
    cmp    %eax,%edx
    jne    jump_3908a
    movl   $0xffffffff,0x338(%esp)
  jump_3908a:
    xor    %eax,%eax
    mov    0x330(%esp),%edx
    mov    0xac(%ebp),%ax
    cmp    %edx,%eax
    jne    jump_39120
    xor    %edx,%eax
    mov    %si,%ax
    cmp    $0xff,%eax
    jne    jump_39120
    cmpl   $0x0,0x334(%esp)
    jne    jump_39120
    cmpb   $0xff,0xab(%ebp)
    jne    jump_39120
    mov    0x324(%esp),%eax
    push   $0x0
    mov    %eax,0x304(%esp)
    mov    0x34c(%esp),%eax
    mov    $0x45,%ecx
    mov    %eax,0x308(%esp)
    mov    0x328(%esp),%eax
    mov    $0x1,%ebx
    add    $0x46,%eax
    push   $0x96
    mov    %eax,0x310(%esp)
    mov    0x350(%esp),%eax
    mov    %ebx,%edx
    add    $0x46,%eax
    push   $0x45
    mov    %eax,0x318(%esp)
    lea    0x308(%esp),%eax
    call   func_2bb74
  jump_39120:
    xor    %eax,%eax
    mov    %si,%ax
    mov    %eax,0x344(%esp)
    cmp    $0xff,%eax
    je     jump_38f07
    lea    0x378(%esp),%ecx
    lea    0x368(%esp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    0x330(%esp),%dx
    lea    0x2c0(%esp),%edi
    call   func_393f4
    lea    0x4(%ebp),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x344(%esp),%eax
    mov    $0x10000,%esi
    cmp    $0x17,%eax
    jne    jump_3917b
    mov    $0x8000,%esi
  jump_3917b:
    mov    data_d3664,%eax
    xor    %edx,%edx
    mov    0x330(%esp),%ebx
    mov    0x52(%eax),%dx
    cmp    %ebx,%edx
    jne    jump_39267
    xor    %ecx,%ecx
    mov    0x50(%eax),%cx
    imul   $0x46,%ecx,%ecx
    xor    %ebx,%edx
    mov    0x330(%esp),%dx
    mov    $0xff,%ebx
    call   func_3583c
    xor    %ebx,%ebx
    mov    %ax,%bx
    mov    %ecx,%edx
    mov    %ecx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x330(%esp),%ecx
    xor    %edx,%edx
    mov    %eax,%edi
    mov    0xac(%ebp),%dx
    mov    $0xf2,%al
    cmp    %ecx,%edx
    jne    jump_391da
    mov    $0x96,%al
  jump_391da:
    xor    %edx,%edx
    mov    $0x100,%ebx
    mov    %al,%dl
    mov    %esp,%eax
    call   func_76ec0
    cmpl   $0x0,0x334(%esp)
    je     jump_391fe
    cmpl   $0xffffffff,0x338(%esp)
    jne    jump_39254
  jump_391fe:
    mov    %esp,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    push   $0x1
    push   %esi
    push   %esi
    push   $0x0
    mov    0x358(%esp),%eax
    push   $data_d8da0
    add    $0x23,%eax
    push   %eax
    mov    0x374(%esp),%ebx
    xor    %eax,%eax
    push   %ebx
    mov    0x394(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x388(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   $data_d8668
    call   func_5d631
    add    $0x28,%esp
  jump_39254:
    mov    0x348(%esp),%eax
    add    $0x46,%eax
    sub    %edi,%eax
    mov    %eax,0x2c8(%esp)
  jump_39267:
    cmpl   $0x0,0x334(%esp)
    je     jump_3927f
    cmpl   $0xffffffff,0x338(%esp)
    jne    jump_38f9d
  jump_3927f:
    xor    %eax,%eax
    mov    0x330(%esp),%edx
    mov    0xac(%ebp),%ax
    xor    %edi,%edi
    cmp    %edx,%eax
    jne    jump_3929a
    mov    $0x1,%edi
  jump_3929a:
    mov    data_d8d8f,%eax
    add    $0x1500,%eax
    push   %eax
    call   func_5d007
    add    $0x4,%esp
    push   %edi
    push   %esi
    push   %esi
    mov    0x354(%esp),%eax
    push   $0x0
    mov    0x2d8(%esp),%ebx
    add    $0x23,%eax
    push   $data_d8da0
    sub    %ebx,%eax
    push   %eax
    mov    0x374(%esp),%ecx
    xor    %eax,%eax
    push   %ecx
    mov    0x394(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x388(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    lea    0x2e4(%esp),%eax
    push   %eax
    jmp    jump_38f95
  jump_39300:
    mov    $data_91fbe,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    cmpl   $0xffffffff,0x35(%eax)
    jne    jump_39379
    mov    $data_d8654,%ebx
    mov    $0x70,%ecx
    mov    $0x210,%edi
    push   $0x0
    mov    $0x1ac,%eax
    xor    %edx,%edx
    push   $0x0
    mov    0x378(%esp),%dx
    mov    %ebx,0x2f0(%esp)
    mov    %ecx,0x2f4(%esp)
    mov    %ecx,0x2f8(%esp)
    mov    %eax,0x300(%esp)
    push   $0x5
    mov    $data_12fc20,%eax
    mov    %edi,0x300(%esp)
    call   func_1b084
    push   %eax
    lea    0x2f8(%esp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
  jump_39379:
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_2d218
    add    $0x380,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_39390:
/*----------------------------------------------------------------*/
    push   %esi
    sub    $0x4,%esp
    mov    %dl,(%esp)
    mov    %ebx,%esi
    cmp    $0x27,%dl
    jb     jump_393af
    mov    $0x461,%ebx
    mov    $data_91fc7,%edx
    xor    %eax,%eax
    call   func_26198
  jump_393af:
    mov    data_ffedc,%ax
    mov    %ax,(%esi)
    mov    (%esp),%dl
    movw   $0x0,(%ecx)
    cmp    $0xff,%dl
    je     jump_393cc
    xor    %ah,%ah
    mov    %dl,%al
    mov    %ax,(%ecx)
  jump_393cc:
    cmpb   $0x17,(%esp)
    jne    jump_393ef
    mov    data_d3664,%eax
    mov    0x57(%eax),%al
    and    $0xff,%eax
    mov    data_ffebc(,%eax,2),%ax
    mov    %ax,(%esi)
    movw   $0x0,(%ecx)
  jump_393ef:
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_393f4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    data_d3664,%eax
    cmp    0x1a(%eax),%si
    jb     jump_39416
    mov    $0x476,%ebx
    mov    $data_91fd6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_39416:
    xor    %edx,%edx
    mov    data_ffedc,%ax
    mov    %si,%dx
    mov    %ax,(%edi)
    mov    data_d3664,%eax
    movw   $0x0,(%ecx)
    shl    $0x2,%edx
    mov    0x10(%eax),%eax
    add    %edx,%eax
    xor    %dh,%dh
    xor    %ebx,%ebx
    mov    0x1(%eax),%dl
    mov    %dl,%bl
    cmp    $0xff,%ebx
    je     jump_3944c
    mov    %dx,(%ecx)
    jmp    jump_39459
  jump_3944c:
    mov    (%eax),%al
    and    $0x8,%al
    and    %ebx,%eax
    je     jump_39459
    movw   $0x27,(%ecx)
  jump_39459:
    xor    %eax,%eax
    mov    %dx,%ax
    cmp    $0x17,%eax
    jne    jump_394b7
    xor    %edx,%edx
    mov    data_d3664,%eax
    mov    %si,%dx
    call   func_35a70
    mov    %eax,%esi
    mov    0x54(%eax),%eax
    sar    $0x10,%eax
    mov    data_ffebc(,%eax,2),%ax
    mov    %ax,(%edi)
    mov    0xa7(%esi),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    jl     jump_3949b
    cmpb   $0x4,0xaa(%esi)
    jl     jump_394ac
  jump_3949b:
    mov    $0x48a,%ebx
    mov    $data_91ff4,%edx
    xor    %eax,%eax
    call   func_26198
  jump_394ac:
    movsbw 0xaa(%esi),%ax
    mov    %ax,(%ecx)
  jump_394b7:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_394bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    $data_92003,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,%esi
    mov    0xab(%eax),%eax
    add    $0x34,%eax
    mov    %eax,data_10467c
    mov    $0x22,%eax
    call   func_1cea8
    mov    0xab(%esi),%edx
    mov    %eax,data_104680
    test   %edx,%edx
    jne    jump_39547
    mov    0xc9(%esi),%ebp
    mov    %edx,data_10467c
    test   %ebp,%ebp
    jne    jump_395b1
    mov    $0x1,%ecx
    mov    data_d3664,%eax
    mov    0xb0(%edi),%dx
    mov    $0xff,%ebx
    call   func_35a70
    call   func_49940
    xor    %edx,%edx
    mov    data_d3664,%eax
    mov    0xb0(%edi),%dx
    call   func_34b0c
    jmp    jump_395b1
  jump_39547:
    cmpl   $0xffffffff,0xc9(%esi)
    jne    jump_395b1
    mov    $0x23,%eax
    call   func_1cea8
    xor    %edx,%edx
    mov    %eax,data_104680
    mov    data_d3664,%eax
    mov    0xb0(%edi),%dx
    mov    0x10(%eax),%ebx
    andb   $0xfe,0x2(%ebx,%edx,4)
    mov    $0x3,%ecx
    xor    %edx,%edx
    mov    $0x17,%ebx
    mov    0xb0(%edi),%dx
    call   func_34b0c
    mov    %esi,%eax
    call   func_4ee00
    mov    %eax,%edx
    mov    data_d3664,%eax
    mov    %edx,0x77(%eax)
    mov    0xab(%esi),%edx
    movb   $0x2,0x58(%edx)
    mov    0xab(%esi),%edx
    mov    %eax,0x59(%edx)
  jump_395b1:
    movw   $0xffff,0xb0(%edi)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_395c4:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    mov    %edx,%eax
    lea    0x18b(%ecx),%edx
    cmp    $0xffffffff,%ebx
    jne    jump_395e0
    mov    $0x1,%ebx
    call   func_1bf94
    pop    %ecx
    ret
  jump_395e0:
    mov    $0x1,%ebx
    call   func_1c098
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_395ec:
/*----------------------------------------------------------------*/
    call   func_2c830
    movl   $data_95f6c,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_395fc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_3961b
    mov    $data_95f44,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_3961b:
    mov    $0x1,%edx
    movl   $data_95f6c,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_3963b
    call   func_76d64
  jump_3963b:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_39644:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    mov    $data_92011,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    $data_9201a,%edx
    mov    %eax,(%esp)
    xor    %ebx,%ebx
    mov    $data_10ae70,%eax
    call   func_56da8
    mov    (%esp),%edx
    cmpl   $0x0,0x35(%edx)
    jne    jump_39684
    cmpl   $0x0,0x35(%eax)
    je     jump_396b7
  jump_39684:
    movswl %di,%eax
    cmp    $0xf,%eax
    je     jump_396b7
    cmp    $0xe,%eax
    je     jump_396b7
    jmp    jump_396d3
  jump_39693:
    mov    0xa7(%esi),%ecx
    mov    $0x1,%edx
    mov    %esi,%eax
    call   *0xc(%ecx)
    jmp    jump_396d3
  jump_396a5:
    mov    0xa7(%esi),%ecx
    mov    $0x2,%edx
    mov    %esi,%eax
    call   *0xc(%ecx)
    jmp    jump_396d3
  jump_396b7:
    cmp    $0x6,%di
    jb     jump_396c5
    jbe    jump_396a5
    cmp    $0x7,%di
    je     jump_39693
  jump_396c5:
    movswl %di,%edx
    mov    %ebp,%ebx
    mov    %esi,%eax
    call   func_2f424
    jmp    jump_396d5
  jump_396d3:
    xor    %eax,%eax
  jump_396d5:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret

vtable_396dc:
    .long   func_397eb
    .long   func_3987f
    .long   func_39913
    .long   func_3997d
    .long   func_39a41


/*----------------------------------------------------------------*/
func_396f0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x6c,%esp
    mov    %eax,0x50(%esp)
    xor    %ebx,%ebx
    mov    %ebx,0x48(%esp)
    cmp    $0x2,%edx
    je     jump_3971f
    mov    data_10de72,%ecx
    cmp    0x41(%eax),%ecx
    je     jump_39717
    cmp    $0x1,%edx
    jne    jump_3971f
  jump_39717:
    movl   $0xffffffff,0x48(%esp)
  jump_3971f:
    mov    $data_92023,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    $data_9202c,%edx
    mov    %eax,%esi
    xor    %ebx,%ebx
    mov    $data_10ae70,%eax
    call   func_56da8
    cmpl   $0x0,0x35(%esi)
    jne    jump_3974f
    cmpl   $0x0,0x35(%eax)
    je     jump_39755
  jump_3974f:
    xor    %eax,%eax
    mov    %eax,0x48(%esp)
  jump_39755:
    mov    0x50(%esp),%eax
    mov    0x47(%eax),%eax
    mov    %eax,0x4c(%esp)
    cmp    $0x4,%eax
    jne    jump_3976d
    movl   $0x3,0x4c(%esp)
  jump_3976d:
    mov    0x50(%esp),%eax
    mov    0x43(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x33,%eax
    jne    jump_39784
    movl   $0x4,0x4c(%esp)
  jump_39784:
    mov    $data_92035,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,%ebp
    mov    data_d8d8f,%eax
    add    $0x1500,%eax
    mov    $0xffff,%edx
    push   %eax
    mov    %edx,0x64(%esp)
    mov    %edx,0x68(%esp)
    call   func_5d007
    add    $0x4,%esp
    cmpl   $0x2,0x4c(%esp)
    jg     jump_397d4
    mov    0x50(%esp),%eax
    push   $0x0
    add    $0x4,%eax
    push   %eax
    call   func_5e9d0
    add    $0x8,%esp
  jump_397d4:
    mov    0x4c(%esp),%edi
    cmp    $0x4,%edi
    ja     jump_39d00
    mov    %edi,%eax
    jmp    *%cs:vtable_396dc(,%eax,4)


/*----------------------------------------------------------------*/
func_397eb:
/*----------------------------------------------------------------*/
    mov    data_ffeec,%ax
    mov    data_d3664,%edx
    mov    %eax,0x60(%esp)
    xor    %eax,%eax
    mov    0x46(%edx),%ax
    push   $0x3fe80000
    mov    %eax,0x60(%esp)
    push   $0x0
    fildl  0x64(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_78b20
    call   func_76e98
    fistpl 0x5c(%esp)
    mov    0x5c(%esp),%eax
    mov    %eax,0x64(%esp)
    xor    %eax,%eax
    mov    0x64(%esp),%ax
    test   %eax,%eax
    jge    jump_3983f
    xor    %esi,%esi
    mov    %esi,0x64(%esp)
    jmp    jump_3984c
  jump_3983f:
    cmp    $0x14,%eax
    jle    jump_3984c
    movl   $0x14,0x64(%esp)
  jump_3984c:
    push   $0x0
    xor    %eax,%eax
    push   $0x0
    mov    0x6c(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x6c(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    0x60(%esp),%eax
    add    $0x4,%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_39d00


/*----------------------------------------------------------------*/
func_3987f:
/*----------------------------------------------------------------*/
    mov    data_ffeee,%ax
    mov    data_d3664,%edx
    mov    %eax,0x60(%esp)
    xor    %eax,%eax
    mov    0x44(%edx),%ax
    push   $0x3fe80000
    mov    %eax,0x60(%esp)
    push   $0x0
    fildl  0x64(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_78b20
    call   func_76e98
    fistpl 0x5c(%esp)
    mov    0x5c(%esp),%eax
    mov    %eax,0x64(%esp)
    xor    %eax,%eax
    mov    0x64(%esp),%ax
    test   %eax,%eax
    jge    jump_398d3
    xor    %ebx,%ebx
    mov    %ebx,0x64(%esp)
    jmp    jump_398e0
  jump_398d3:
    cmp    $0x14,%eax
    jle    jump_398e0
    movl   $0x14,0x64(%esp)
  jump_398e0:
    push   $0x0
    xor    %eax,%eax
    push   $0x0
    mov    0x6c(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x6c(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    0x60(%esp),%eax
    add    $0x4,%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_39d00


/*----------------------------------------------------------------*/
func_39913:
/*----------------------------------------------------------------*/
    mov    data_ffef0,%ax
    mov    %eax,0x60(%esp)
    mov    data_d3664,%eax
    mov    0x48(%eax),%ax
    mov    %eax,0x64(%esp)
    xor    %eax,%eax
    mov    0x64(%esp),%ax
    test   %eax,%eax
    jge    jump_3993d
    xor    %eax,%eax
    mov    %eax,0x64(%esp)
    jmp    jump_3994a
  jump_3993d:
    cmp    $0x14,%eax
    jle    jump_3994a
    movl   $0x14,0x64(%esp)
  jump_3994a:
    push   $0x0
    xor    %eax,%eax
    push   $0x0
    mov    0x6c(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x6c(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    0x60(%esp),%eax
    add    $0x4,%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_39d00


/*----------------------------------------------------------------*/
func_3997d:
/*----------------------------------------------------------------*/
    mov    0x48(%esp),%esi
    mov    $0xf2,%eax
    test   %esi,%esi
    je     jump_3998f
    mov    $0x96,%eax
  jump_3998f:
    push   %eax
    mov    0x54(%esp),%eax
    add    $0x4,%eax
    mov    $0x1,%esi
    push   %eax
    xor    %ebp,%ebp
    mov    %eax,0x64(%esp)
    call   func_5e9d0
    add    $0x8,%esp
    xor    %edi,%edi
    mov    0x5c(%esp),%eax
    mov    %esi,0x64(%esp)
    mov    %eax,0x54(%esp)
    xor    %esi,%esi
    jmp    jump_399be
  jump_399bd:
    inc    %esi
  jump_399be:
    mov    data_d3664,%eax
    xor    %edx,%edx
    mov    0x4a(%eax),%dx
    cmp    %edx,%esi
    jge    jump_39d00
    mov    0x4c(%eax),%ax
    and    $0xffff,%eax
    cmp    %eax,%esi
    jne    jump_399e2
    incl   0x64(%esp)
  jump_399e2:
    mov    data_d3664,%eax
    mov    0x42(%eax),%ax
    and    $0xffff,%eax
    cmp    %eax,%esi
    jne    jump_399f8
    incl   0x64(%esp)
  jump_399f8:
    push   %ebp
    xor    %eax,%eax
    push   %edi
    mov    0x6c(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    data_ffef8,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    0x64(%esp),%eax
    push   %eax
    call   func_5cb3c
    mov    $0xa,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x14,%esp
    add    %ebx,%edi
    cmp    $0x9,%edx
    jne    jump_399bd
    xor    %edi,%edi
    add    %ebx,%ebp
    jmp    jump_399bd


/*----------------------------------------------------------------*/
func_39a41:
/*----------------------------------------------------------------*/
    mov    0x48(%esp),%edx
    mov    $0xf2,%eax
    test   %edx,%edx
    je     jump_39a64
    mov    data_d3664,%edx
    mov    0x57(%edx),%dl
    cmp    data_104bea,%dl
    jne    jump_39a64
    mov    $0x96,%eax
  jump_39a64:
    push   %eax
    mov    0x54(%esp),%eax
    add    $0x4,%eax
    push   %eax
    lea    0x8(%esp),%edi
    mov    $data_9686c,%esi
    call   func_5e9d0
    mov    $0xf,%ecx
    mov    $0xff,%bl
    add    $0x8,%esp
    mov    $0x24,%eax
    mov    %bl,0x68(%esp)
    rep movsl %ds:(%esi),%es:(%edi)
    call   func_1cea8
    mov    $0xffff,%ebx
    mov    0xab(%ebp),%cl
    mov    %eax,0x44(%esp)
    cmp    $0xff,%cl
    je     jump_39ada
    mov    $0x25,%eax
    mov    %esp,%edi
    call   func_1cea8
    mov    %eax,%esi
    mov    %cl,0x68(%esp)
    push   %edi
  jump_39abc:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_39ad4
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_39abc
  jump_39ad4:
    pop    %edi
    jmp    jump_39b89
  jump_39ada:
    mov    data_d3664,%eax
    mov    0x54(%eax),%ch
    cmp    %cl,%ch
    je     jump_39b89
    call   func_358bc
    xor    %edx,%edx
    xor    %esi,%esi
    mov    %ch,%dl
    mov    %ax,%si
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_103fa2(,%eax,8),%ax
    xor    %ah,%ah
    mov    %ch,0x68(%esp)
    and    $0x20,%al
    and    $0xffff,%eax
    jne    jump_39b7a
    cmp    $0xffff,%esi
    je     jump_39b52
    cmp    $0x1,%esi
    jne    jump_39b2c
    mov    $0x1c,%eax
    jmp    jump_39b31
  jump_39b2c:
    mov    $0x1d,%eax
  jump_39b31:
    call   func_1cea8
    push   %eax
    push   %esi
    mov    $0x26,%eax
    call   func_1cea8
    push   %eax
    lea    0xc(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
    jmp    jump_39b7a
  jump_39b52:
    mov    $0x27,%eax
    mov    %esp,%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_39b61:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_39b79
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_39b61
  jump_39b79:
    pop    %edi
  jump_39b7a:
    mov    data_d3664,%eax
    cmpb   $0x23,0x54(%eax)
    je     jump_39b89
    mov    0x52(%eax),%bx
  jump_39b89:
    cmpb   $0xff,0x68(%esp)
    je     jump_39c87
    xor    %edx,%edx
    mov    %bx,%dx
    cmp    $0xffff,%edx
    jne    jump_39bb8
    lea    0x64(%esp),%ecx
    lea    0x60(%esp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    0x68(%esp),%dl
    call   func_39390
    jmp    jump_39bc7
  jump_39bb8:
    lea    0x64(%esp),%ecx
    lea    0x60(%esp),%ebx
    mov    %ebp,%eax
    call   func_393f4
  jump_39bc7:
    mov    0x68(%esp),%bl
    mov    $0x10000,%edi
    cmp    $0x17,%bl
    jne    jump_39bda
    mov    $0x8000,%edi
  jump_39bda:
    xor    %edx,%edx
    mov    0x68(%esp),%dl
    lea    0x0(,%edx,4),%eax
    mov    0x50(%esp),%esi
    add    %edx,%eax
    lea    0x3c(%esp),%ecx
    shl    $0x3,%eax
    xor    %ebx,%ebx
    add    $data_103f9c,%eax
    mov    0x64(%esp),%bx
    add    $0xa,%eax
    xor    %edx,%edx
    mov    %eax,0x44(%esp)
    lea    0x40(%esp),%eax
    mov    0x60(%esp),%dx
    push   %eax
    mov    $data_12fc20,%eax
    add    $0x4,%esi
    call   func_1b084
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_2bc40
    push   $0x0
    push   %edi
    push   %edi
    push   $0x0
    push   $data_d8da0
    mov    0x54(%esp),%ebx
    push   %ebx
    mov    0x54(%esp),%ecx
    xor    %eax,%eax
    push   %ecx
    mov    0x80(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x80(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5d631
    add    $0x28,%esp
    push   $0x0
    mov    $data_10debe,%edi
    push   $0xff
    lea    0x8(%esp),%ecx
    mov    $0x50,%ebx
    push   $0xffffffff
    mov    $data_10deb6,%eax
    xor    %edx,%edx
    jmp    jump_39cc3
  jump_39c87:
    mov    data_d3664,%eax
    mov    0x42(%eax),%dx
    cmp    0x4c(%eax),%dx
    jne    jump_39ccf
    mov    $0x28,%eax
    mov    0x50(%esp),%esi
    call   func_1cea8
    push   $0x0
    mov    $0x19,%ebx
    mov    $data_10debe,%edi
    push   $0xff
    xor    %edx,%edx
    add    $0x4,%esi
    push   $0xffffffff
    mov    %eax,%ecx
    mov    $data_10deb6,%eax
  jump_39cc3:
    push   $0x2
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_39ccf:
    mov    0x50(%esp),%esi
    push   $0x0
    mov    0x48(%esp),%ecx
    mov    $0xa,%ebx
    push   $0xff
    mov    $data_10deb6,%eax
    mov    $data_10debe,%edi
    push   $0xffffffff
    add    $0x4,%esi
    xor    %edx,%edx
    push   $0x2
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_39d00:
    cmpl   $0x2,0x4c(%esp)
    jg     jump_39d5e
    cmpl   $0x0,0x48(%esp)
    je     jump_39d5e
    mov    data_d3664,%eax
    mov    data_104bea,%bh
    cmp    0x57(%eax),%bh
    jne    jump_39d5e
    mov    0x50(%esp),%edx
    mov    0x50(%esp),%edi
    add    $0x4,%edx
    mov    0x10(%edi),%edi
    mov    0x4(%edx),%ecx
    mov    0x10(%edx),%ebp
    mov    0x8(%edx),%esi
    mov    %edx,0x58(%esp)
    sub    %ecx,%edi
    sub    %esi,%ebp
    xor    %esi,%esi
  jump_39d3f:
    push   $0x0
    mov    0x5c(%esp),%eax
    mov    %edi,%ecx
    push   $0x96
    mov    %esi,%ebx
    mov    %esi,%edx
    push   %ebp
    dec    %edi
    inc    %esi
    call   func_2bb74
    dec    %ebp
    cmp    $0x3,%esi
    jl     jump_39d3f
  jump_39d5e:
    mov    0x50(%esp),%edx
    mov    $data_10ae70,%eax
    add    $0x4,%edx
    call   func_552cc
    add    $0x6c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_39d80:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_95fb8,0xa7(%eax)
    call   func_39de0
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_39d9c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_39dbb
    mov    $data_95fa4,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_39dbb:
    mov    $0x1,%edx
    movl   $data_95fb8,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_39ddb
    call   func_76d64
  jump_39ddb:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_39de0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    $0x29,%ebx
    xor    %edx,%edx
  jump_39de9:
    mov    %ebx,%eax
    add    $0x4,%edx
    call   func_1cea8
    inc    %ebx
    mov    %eax,data_104684(%edx)
    cmp    $0x14,%edx
    jne    jump_39de9
    mov    $0x2e,%edx
    xor    %ebx,%ebx
  jump_39e06:
    mov    %edx,%eax
    add    $0x4,%ebx
    call   func_1cea8
    inc    %edx
    mov    %eax,data_104698(%ebx)
    cmp    $0x2c,%ebx
    jne    jump_39e06
    mov    $0x39,%ebx
    xor    %edx,%edx
  jump_39e23:
    mov    %ebx,%eax
    add    $0x4,%edx
    call   func_1cea8
    inc    %ebx
    mov    %eax,data_1046c4(%edx)
    cmp    $0x20,%edx
    jne    jump_39e23
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_39e3c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x140,%esp
    mov    %eax,-0x10(%ebp)
    mov    %dx,-0x4(%ebp)
    mov    %ebx,-0x28(%ebp)
    mov    %ecx,-0x1c(%ebp)
    mov    -0x10(%ebp),%edx
    xor    %eax,%eax
    mov    0xab(%edx),%ax
    mov    $0xff,%cl
    cmp    $0xffff,%eax
    jge    jump_39e80
    lea    0x0(,%eax,4),%edx
    mov    data_d3664,%eax
    mov    0x10(%eax),%eax
    mov    0x1(%edx,%eax,1),%cl
  jump_39e80:
    mov    -0x4(%ebp),%edx
    cmp    $0x33,%dx
    jb     jump_3a646
    jbe    jump_3a5ee
    cmp    $0x37,%dx
    jb     jump_3a612
    jbe    jump_3a3f0
    cmp    $0x39,%dx
    jb     jump_3a439
    jbe    jump_3a47d
    cmp    $0x3a,%dx
    je     jump_3a5ce
  jump_39ebd:
    mov    -0x6(%ebp),%edx
    mov    -0x1c(%ebp),%ecx
    mov    -0x28(%ebp),%ebx
    mov    -0x10(%ebp),%eax
    sar    $0x10,%edx
    call   func_2f424
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_39ed7:
    mov    -0x10(%ebp),%eax
    movl   $0xffffffff,0x39(%eax)
    mov    data_104684,%esi
    movl   $0xffffffff,0x35(%eax)
    cmp    $0x3,%esi
    jne    jump_3a201
    xor    %eax,%eax
    mov    %eax,-0x18(%ebp)
    cmp    $0xff,%cl
    je     jump_3a090
    cmp    $0x17,%cl
    jne    jump_3a046
    mov    -0x10(%ebp),%edx
    mov    0xab(%edx),%ax
    lea    0x0(,%eax,4),%edx
    mov    data_d3664,%eax
    mov    0x10(%eax),%eax
    mov    0x2(%edx,%eax,1),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_3a046
    mov    -0x10(%ebp),%eax
    xor    %edx,%edx
    mov    0xab(%eax),%dx
    mov    data_d3664,%eax
    call   func_35a70
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_39f66
    mov    $0x79,%ebx
    mov    $data_92064,%edx
    call   func_26198
  jump_39f66:
    mov    $0x47,%edx
    mov    %esi,%eax
    call   func_4937c
    cmp    $0xffffffff,%eax
    je     jump_39f9d
    mov    data_d3664,%eax
    mov    0x57(%eax),%al
    and    $0xff,%eax
    cmp    $0xff,%eax
    jne    jump_39f9d
    mov    -0x18(%ebp),%eax
    mov    $0x34,%edx
    lea    0x1(%eax),%ebx
    mov    %edx,-0x78(%ebp,%eax,4)
    mov    %ebx,-0x18(%ebp)
  jump_39f9d:
    mov    $0x49,%edx
    mov    %esi,%eax
    call   func_4937c
    cmp    $0xffffffff,%eax
    je     jump_39fda
    mov    data_d3664,%eax
    xor    %edx,%edx
    mov    0x57(%eax),%dl
    cmp    $0xff,%edx
    je     jump_39fda
    cmp    data_104bea,%dl
    je     jump_39fda
    mov    -0x18(%ebp),%eax
    mov    $0x39,%esi
    lea    0x1(%eax),%edi
    mov    %esi,-0x78(%ebp,%eax,4)
    mov    %edi,-0x18(%ebp)
  jump_39fda:
    mov    -0x18(%ebp),%eax
    movl   $0x37,-0x78(%ebp,%eax,4)
    mov    $0x18,%edx
    mov    data_d3664,%eax
    mov    -0x18(%ebp),%ebx
    call   func_35930
    xor    %edx,%edx
    inc    %ebx
    mov    %ax,%dx
    mov    %ebx,-0x18(%ebp)
    cmp    $0xffff,%edx
    jge    jump_3a046
    mov    data_d3664,%eax
    lea    0x0(,%edx,4),%ebx
    mov    0x10(%eax),%edx
    mov    0x2(%edx,%ebx,1),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_3a046
    mov    data_104bea,%dl
    cmp    0x57(%eax),%dl
    jne    jump_3a046
    mov    -0x18(%ebp),%eax
    mov    $0x38,%esi
    lea    0x1(%eax),%edi
    mov    %esi,-0x78(%ebp,%eax,4)
    mov    %edi,-0x18(%ebp)
  jump_3a046:
    cmp    $0x5,%cl
    je     jump_3a05d
    mov    -0x18(%ebp),%eax
    mov    $0x35,%edx
    lea    0x1(%eax),%ebx
    mov    %edx,-0x78(%ebp,%eax,4)
    mov    %ebx,-0x18(%ebp)
  jump_3a05d:
    mov    -0x10(%ebp),%eax
    xor    %ebx,%ebx
    mov    $0x23,%edx
    mov    0xab(%eax),%bx
    mov    data_d3664,%eax
    call   func_34368
    test   %eax,%eax
    je     jump_3a0d1
    mov    -0x18(%ebp),%eax
    mov    $0x3a,%ecx
    lea    0x1(%eax),%esi
    mov    %ecx,-0x78(%ebp,%eax,4)
    mov    %esi,-0x18(%ebp)
    jmp    jump_3a0d1
  jump_3a090:
    xor    %ecx,%ecx
    cmp    $0x27,%eax
    jl     jump_3a09f
    jmp    jump_3a0d1
  jump_3a099:
    inc    %ecx
    cmp    $0x27,%ecx
    jge    jump_3a0d1
  jump_3a09f:
    cmp    $0x5,%cl
    je     jump_3a099
    mov    -0x10(%ebp),%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %cl,%dl
    mov    0xab(%eax),%bx
    mov    data_d3664,%eax
    call   func_34368
    test   %eax,%eax
    je     jump_3a099
    mov    -0x18(%ebp),%eax
    inc    %eax
    movl   $0x36,-0x7c(%ebp,%eax,4)
    mov    %eax,-0x18(%ebp)
  jump_3a0d1:
    mov    -0x18(%ebp),%eax
    mov    $0xa0,%ebx
    mov    $0x33,%edx
    mov    %ebx,-0x8(%ebp)
    lea    0x1(%eax),%ecx
    mov    %edx,-0x78(%ebp,%eax,4)
    mov    %ecx,-0x18(%ebp)
    test   %ecx,%ecx
    jle    jump_3a1c4
    mov    %ecx,%eax
    xor    %ecx,%eax
    mov    %ecx,-0x14(%ebp)
    mov    %eax,-0xc(%ebp)
    lea    0x0(,%ecx,4),%eax
    mov    %eax,-0x20(%ebp)
  jump_3a107:
    mov    -0x10(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    0x67(%eax),%eax
    add    %edx,%eax
    mov    -0x78(%edx,%ebp,1),%esi
    mov    (%eax),%ecx
    mov    data_1045fc(,%esi,4),%esi
    lea    0x20(%ecx),%edi
    push   %edi
  jump_3a123:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3a13b
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3a123
  jump_3a13b:
    pop    %edi
    mov    -0x14(%ebp),%edi
    mov    -0x78(%edx,%ebp,1),%ax
    lea    0x4(%ecx),%esi
    mov    %ax,0x45(%ecx)
    mov    -0x8(%ebp),%eax
    mov    $0x1df,%edx
    mov    %eax,%ebx
    sub    %eax,%edx
    mov    %eax,0x4(%esi)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %edi
    mov    %ebx,%edx
    movl   $0x151,0x8(%esi)
    add    %eax,%edx
    movl   $0x16f,0x10(%esi)
    mov    %edx,-0x8(%ebp)
    cmp    $0x1df,%edx
    jle    jump_3a185
    movl   $0x1df,-0x8(%ebp)
  jump_3a185:
    mov    -0x8(%ebp),%eax
    mov    -0x1c(%ebp),%edi
    mov    -0x6(%ebp),%ebx
    push   %edi
    sar    $0x10,%ebx
    mov    %eax,0xc(%esi)
    inc    %eax
    mov    0x41(%ecx),%edx
    mov    -0x28(%ebp),%ecx
    mov    %eax,-0x8(%ebp)
    mov    $data_10ae70,%eax
    call   func_56d30
    mov    -0x14(%ebp),%edx
    mov    -0xc(%ebp),%ebx
    mov    -0x20(%ebp),%ecx
    dec    %edx
    add    $0x4,%ebx
    mov    %edx,-0x14(%ebp)
    mov    %ebx,-0xc(%ebp)
    cmp    %ecx,%ebx
    jl     jump_3a107
  jump_3a1c4:
    cmpl   $0x1,-0x18(%ebp)
    jne    jump_3a26e
    mov    $0x1e,%eax
    mov    -0x10(%ebp),%edi
    call   func_1cea8
    mov    0x67(%edi),%edi
    mov    (%edi),%edi
    mov    %eax,%esi
    add    $0x20,%edi
    push   %edi
  jump_3a1e6:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3a1fe
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3a1e6
  jump_3a1fe:
    pop    %edi
    jmp    jump_3a26e
  jump_3a201:
    mov    0x67(%eax),%edx
    mov    (%edx),%edx
    lea    0x4(%edx),%eax
    movl   $0xa0,0x4(%eax)
    movl   $0x151,0x8(%eax)
    mov    -0x28(%ebp),%ecx
    movl   $0x1df,0xc(%eax)
    mov    -0x6(%ebp),%ebx
    movl   $0x16f,0x10(%eax)
    mov    $0x1e,%eax
    lea    0x20(%edx),%edi
    call   func_1cea8
    mov    %eax,%esi
    sar    $0x10,%ebx
    push   %edi
  jump_3a23e:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3a256
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3a23e
  jump_3a256:
    pop    %edi
    mov    -0x1c(%ebp),%edi
    movw   $0x33,0x45(%edx)
    push   %edi
    mov    $data_10ae70,%eax
    mov    0x41(%edx),%edx
    call   func_56d30
  jump_3a26e:
    mov    -0x10(%ebp),%ebx
    mov    0xa7(%ebx),%ebx
    mov    -0x10(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3a287:
    mov    -0x6(%ebp),%edx
    mov    -0x1c(%ebp),%ecx
    mov    -0x28(%ebp),%ebx
    mov    -0x10(%ebp),%eax
    sar    $0x10,%edx
    call   func_2d258
    mov    -0x10(%ebp),%eax
    movl   $0x0,0x39(%eax)
    movl   $0x0,0x35(%eax)
    mov    -0x10(%ebp),%edx
    mov    data_10de72,%eax
    cmp    0x41(%edx),%eax
    jne    jump_3a2c3
    movl   $0xffffffff,data_10de72
  jump_3a2c3:
    mov    -0x10(%ebp),%edx
    mov    $0xffffffff,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%edx),%edx
    call   func_567bc
    mov    -0x10(%ebp),%edx
    mov    $0xffffffff,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%edx),%edx
    call   func_564c0
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3a2f5:
    mov    -0x10(%ebp),%eax
    cmpl   $0x0,0x39(%eax)
    je     jump_3a315
    cmpl   $0x0,0x35(%eax)
    je     jump_3a315
    cmpl   $0x0,0x3d(%eax)
    je     jump_3a315
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0x10(%ebx)
  jump_3a315:
    mov    $0xffffffff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3a320:
    mov    -0x10(%ebp),%eax
    cmpl   $0x0,0x39(%eax)
    je     jump_3a340
    cmpl   $0x0,0x35(%eax)
    je     jump_3a340
    cmpl   $0x0,0x3d(%eax)
    je     jump_3a340
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_3a340:
    mov    $0xffffffff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3a34b:
    mov    -0x28(%ebp),%eax
    mov    -0x10(%ebp),%edx
    mov    %eax,data_104684
    mov    -0x1c(%ebp),%eax
    mov    %ax,0xab(%edx)
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3a368:
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    $0xc,%ecx
    mov    $0x32,%ebx
    mov    $data_10ae70,%eax
    mov    0x63(%edx),%edx
    call   func_56d30
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3a38c:
    cmp    $0x17,%cl
    jne    jump_3a3ac
    mov    -0x10(%ebp),%eax
    xor    %edx,%edx
    mov    0xab(%eax),%dx
    mov    data_d3664,%eax
    call   func_35a70
    call   func_49940
  jump_3a3ac:
    mov    -0x10(%ebp),%eax
    mov    $0x1,%ecx
    xor    %edx,%edx
    mov    $0xff,%ebx
    mov    0xab(%eax),%dx
    mov    data_d3664,%eax
    call   func_34b0c
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    $0xa,%ecx
    mov    $0x32,%ebx
    mov    $data_10ae70,%eax
    mov    0x63(%edx),%edx
    call   func_56d30
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3a3f0:
    mov    -0x10(%ebp),%eax
    xor    %edx,%edx
    mov    0xab(%eax),%dx
    mov    data_d3664,%eax
    call   func_35a70
    mov    data_d3664,%ebx
    mov    %eax,%edx
    mov    %ebx,%eax
    mov    $0xa,%ecx
    call   func_35c38
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    $0x32,%ebx
    mov    $data_10ae70,%eax
    mov    0x63(%edx),%edx
    call   func_56d30
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3a439:
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    $0xa,%ecx
    mov    $0x32,%ebx
    mov    $data_10ae70,%eax
    mov    0x63(%edx),%edx
    call   func_56d30
    push   $0x1
    mov    -0x10(%ebp),%eax
    xor    %ecx,%ecx
    mov    $0x34,%ebx
    mov    0xab(%eax),%cx
    mov    0x63(%eax),%edx
    mov    $data_10ae70,%eax
    call   func_56d30
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3a47d:
    mov    -0x10(%ebp),%eax
    xor    %edx,%edx
    lea    -0x24(%ebp),%ebx
    mov    0xab(%eax),%dx
    mov    data_d3664,%eax
    call   func_36cd4
    mov    $data_92072,%edx
    mov    %eax,%esi
    xor    %ebx,%ebx
    mov    $data_10ae70,%eax
    call   func_56da8
    mov    $data_9207d,%ebx
    mov    %eax,%ecx
    cmp    $0xffffffff,%esi
    jne    jump_3a4ba
    mov    $data_9208b,%ebx
  jump_3a4ba:
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    $data_a2f72,%eax
    mov    $data_92099,%edx
    call   func_402e0
    mov    %eax,%esi
    mov    %eax,%edi
    mov    %ecx,%eax
    call   func_2fcb0
    cmp    $0x1,%esi
    jne    jump_3a4f6
    mov    $0x20,%eax
    jmp    jump_3a4fb
  jump_3a4f6:
    mov    $0x21,%eax
  jump_3a4fb:
    call   func_1cea8
    push   %eax
    mov    -0x24(%ebp),%edx
    push   %edi
    cmp    $0x1,%edx
    jne    jump_3a511
    mov    $0x1c,%eax
    jmp    jump_3a516
  jump_3a511:
    mov    $0x1d,%eax
  jump_3a516:
    call   func_1cea8
    push   %eax
    mov    -0x24(%ebp),%ebx
    mov    data_d3664,%eax
    push   %ebx
    add    $0x24,%eax
    push   %eax
    mov    0xc9a(%ecx),%esi
    push   %esi
    lea    -0x140(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0x1c,%esp
    lea    -0x140(%ebp),%esi
    mov    0xc9a(%ecx),%edi
    push   %edi
  jump_3a54c:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3a564
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3a54c
  jump_3a564:
    pop    %edi
    movw   $0x1c,0xcb1(%ecx)
    movw   $0x49,0xcb3(%ecx)
    movw   $0x1d,0xccc(%ecx)
    mov    data_d3664,%eax
    imul   $0x5,0x16(%eax),%dx
    mov    0x14(%eax),%ax
    mov    $0x32,%ebx
    add    %eax,%edx
    push   $0x0
    mov    %dx,0xcce(%ecx)
    mov    -0x10(%ebp),%edx
    mov    $data_10ae70,%eax
    mov    $0xa,%ecx
    mov    0x63(%edx),%edx
    call   func_56d30
    mov    $0x5,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_56b60
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3a5ce:
    mov    -0x10(%ebp),%eax
    mov    $0x2,%ecx
    xor    %edx,%edx
    mov    $0x23,%ebx
    mov    0xab(%eax),%dx
    mov    data_d3664,%eax
    call   func_34b0c
  jump_3a5ee:
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    $0xa,%ecx
    mov    $0x32,%ebx
    mov    $data_10ae70,%eax
    mov    0x63(%edx),%edx
    call   func_56d30
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3a612:
    cmp    $0x35,%dx
    jb     jump_3a368
    jbe    jump_3a38c
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    $0xb,%ecx
    mov    $0x32,%ebx
    mov    $data_10ae70,%eax
    mov    0x63(%edx),%edx
    call   func_56d30
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3a646:
    cmp    $0x4,%dx
    jb     jump_3a675
    cmp    $0x5,%dx
    jbe    jump_3a340
    cmp    $0x7,%dx
    jb     jump_3a320
    jbe    jump_3a2f5
    cmp    $0x32,%dx
    je     jump_3a34b
    jmp    jump_39ebd
  jump_3a675:
    cmp    $0x1,%dx
    jb     jump_39ebd
    jbe    jump_39ed7
    cmp    $0x2,%dx
    je     jump_3a287
    jmp    jump_39ebd

vtable_3a694:
    .long   func_3a9b2
    .long   func_3aa5f
    .long   func_3a9c4
    .long   func_3a9e3
    .long   func_3a9ff

vtable_3a6a8:
    .long   func_3a7a1
    .long   func_3a857
    .long   func_3a900
    .long   func_3a99a
    .long   func_3ae08


/*----------------------------------------------------------------*/
func_3a6bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x21c,%esp
    sub    $0x82,%ebp
    mov    %eax,0x76(%ebp)
    lea    0x4(%eax),%esi
    mov    $data_10ae70,%eax
    mov    %esi,%edx
    call   func_552cc
    push   $0xf2
    push   %esi
    call   func_5e9d0
    add    $0x8,%esp
    push   $0x0
    push   $0x0
    mov    $data_12fc20,%eax
    xor    %edx,%edx
    push   $0x0
    mov    data_ffeea,%dx
    xor    %edi,%edi
    call   func_1b084
    push   %eax
    mov    %edi,0x6e(%ebp)
    push   %esi
    mov    0x76(%ebp),%esi
    lea    0x2e(%ebp),%edi
    call   func_5cb3c
    lea    0x4(%esi),%esi
    mov    0x76(%ebp),%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x8(%eax),%eax
    add    $0xa,%eax
    mov    %eax,0x32(%ebp)
    mov    0x76(%ebp),%eax
    mov    0xc(%eax),%eax
    mov    $0xffff,%ebx
    add    $0xa,%eax
    xor    %edx,%edx
    mov    %eax,0x36(%ebp)
    mov    0x76(%ebp),%eax
    add    $0x14,%esp
    mov    %edx,0x72(%ebp)
    mov    0x8(%eax),%eax
    mov    %edx,0x5a(%ebp)
    add    $0x145,%eax
    mov    %edx,0x6a(%ebp)
    mov    %eax,0x3a(%ebp)
    mov    0x76(%ebp),%eax
    mov    %edx,0x62(%ebp)
    mov    %ebx,0x7a(%ebp)
    mov    0xc(%eax),%eax
    lea    0x2e(%ebp),%esi
    add    $0xcf,%eax
    mov    $data_10debe,%edi
    mov    %eax,0x3e(%ebp)
    mov    $0xff,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    xor    %edx,%edx
    mov    %eax,data_10ded2
    mov    data_104684,%eax
    mov    %edx,0x7e(%ebp)
    cmp    $0x4,%eax
    ja     jump_3b01b
    jmp    *%cs:vtable_3a6a8(,%eax,4)


/*----------------------------------------------------------------*/
func_3a7a1:
/*----------------------------------------------------------------*/
    mov    $0x41,%eax
    call   func_1cea8
    mov    data_d3664,%esi
    mov    %eax,0x72(%ebp)
    mov    0x46(%esi),%ax
    movzbl 0x57(%esi),%esi
    mov    %eax,0x7e(%ebp)
    mov    data_106fa6(,%esi,2),%dx
    and    $0xffff,%edx
    cmp    $0xffff,%edx
    jge    jump_3a838
    movl   $0xffffffff,0x6e(%ebp)
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%ecx
    shl    $0x4,%ecx
    sub    %eax,%ecx
    mov    $data_10525a,%eax
    add    %ecx,%eax
    mov    %esi,%edx
    mov    %eax,0x5a(%ebp)
    mov    $data_105258,%eax
    call   func_469f0
    mov    data_d3664,%edx
    mov    0x57(%edx),%dl
    and    $0xff,%edx
    mov    data_106fb4(,%edx,2),%dx
    and    $0xffff,%edx
    mov    data_105296(%ecx),%cx
    and    $0xffff,%ecx
    mov    %eax,%ebx
    mov    %ecx,%eax
    call   func_46c20
    mov    %eax,0x7a(%ebp)
  jump_3a838:
    mov    $0x42,%eax
    call   func_1cea8
    mov    %eax,0x6a(%ebp)
    mov    $0x43,%eax
    call   func_1cea8
    mov    %eax,0x62(%ebp)
    jmp    jump_3b01b


/*----------------------------------------------------------------*/
func_3a857:
/*----------------------------------------------------------------*/
    mov    $0x44,%eax
    call   func_1cea8
    mov    data_d3664,%ebx
    xor    %edx,%edx
    mov    %eax,0x72(%ebp)
    mov    0x44(%ebx),%ax
    mov    0x52(%ebx),%dx
    mov    %eax,0x7e(%ebp)
    mov    $0xff,%al
    cmp    $0xffff,%edx
    jge    jump_3a888
    mov    0x10(%ebx),%ebx
    mov    0x1(%ebx,%edx,4),%al
  jump_3a888:
    cmp    $0xff,%al
    je     jump_3a8e1
    xor    %ebx,%ebx
    mov    %al,%bl
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    shl    $0x3,%eax
    add    $data_103f9c,%eax
    mov    $0xffffffff,%edi
    add    $0xa,%eax
    xor    %ecx,%ecx
    mov    %eax,0x5a(%ebp)
    mov    data_d3664,%eax
    xor    %esi,%esi
    mov    %edi,0x6e(%ebp)
    mov    0x44(%eax),%cx
    mov    0x50(%eax),%si
    mov    $0xff,%ebx
    and    $0xffff,%edx
    call   func_3583c
    and    $0xffff,%eax
    mov    %ecx,%ebx
    mov    %esi,%edx
    call   func_46c20
    mov    %eax,0x7a(%ebp)
  jump_3a8e1:
    mov    $0x45,%eax
    call   func_1cea8
    mov    %eax,0x6a(%ebp)
    mov    $0x43,%eax
    call   func_1cea8
    mov    %eax,0x62(%ebp)
    jmp    jump_3b01b


/*----------------------------------------------------------------*/
func_3a900:
/*----------------------------------------------------------------*/
    mov    $0x46,%eax
    call   func_1cea8
    mov    %eax,0x72(%ebp)
    mov    data_d3664,%eax
    mov    0x48(%eax),%ax
    mov    %eax,0x7e(%ebp)
    mov    $0x47,%eax
    call   func_1cea8
    mov    %eax,0x5a(%ebp)
    mov    $0x48,%eax
    call   func_1cea8
    mov    %eax,0x6a(%ebp)
    mov    data_d3664,%eax
    mov    $0xffffffff,%esi
    mov    0x42(%eax),%dx
    mov    0x4a(%eax),%bx
    mov    %esi,0x6e(%ebp)
    cmp    %bx,%dx
    jae    jump_3a988
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x48(%eax),%bx
    mov    0x4e(%eax),%dx
    mov    data_9684c,%eax
    call   func_46c20
    mov    %eax,0x7a(%ebp)
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3b01b
    mov    $0x49,%eax
    call   func_1cea8
    mov    %eax,0x62(%ebp)
    jmp    jump_3b01b
  jump_3a988:
    mov    $0x4a,%eax
    call   func_1cea8
    mov    %eax,0x62(%ebp)
    jmp    jump_3b01b


/*----------------------------------------------------------------*/
func_3a99a:
/*----------------------------------------------------------------*/
    mov    0x76(%ebp),%edx
    xor    %eax,%eax
    mov    0xab(%edx),%ax
    cmp    $0xffff,%eax
    jl     jump_3aa1b
    jmp    jump_3b01b


/*----------------------------------------------------------------*/
func_3a9b2:
/*----------------------------------------------------------------*/
    mov    $0x4c,%eax
    call   func_1cea8
    mov    %eax,0x66(%ebp)
    jmp    func_3aa5f


/*----------------------------------------------------------------*/
func_3a9c4:
/*----------------------------------------------------------------*/
    mov    $0x4d,%eax
    call   func_1cea8
    mov    %eax,0x66(%ebp)
    mov    $0x4e,%eax
    call   func_1cea8
    mov    %eax,0x56(%ebp)
    jmp    func_3aa5f


/*----------------------------------------------------------------*/
func_3a9e3:
/*----------------------------------------------------------------*/
    mov    $0x4f,%eax
    call   func_1cea8
    mov    %eax,0x66(%ebp)
    mov    $0x50,%eax
    call   func_1cea8
    mov    %eax,0x56(%ebp)
    jmp    func_3aa5f


/*----------------------------------------------------------------*/
func_3a9ff:
/*----------------------------------------------------------------*/
    mov    $0x51,%eax
    call   func_1cea8
    mov    %eax,0x66(%ebp)
    mov    $0x52,%eax
    call   func_1cea8
    mov    %eax,0x56(%ebp)
    jmp    func_3aa5f
  jump_3aa1b:
    lea    0x0(,%eax,4),%edx
    mov    data_d3664,%eax
    mov    0x10(%eax),%eax
    add    %edx,%eax
    xor    %bh,%bh
    mov    %eax,0x5e(%ebp)
    mov    0x1(%eax),%bl
    mov    $0x4b,%eax
    call   func_1cea8
    mov    %eax,0x66(%ebp)
    mov    0x5e(%ebp),%eax
    xor    %edi,%edi
    mov    (%eax),%al
    mov    %edi,0x56(%ebp)
    and    $0x7,%al
    and    $0xff,%eax
    cmp    $0x4,%eax
    ja     func_3aa5f
    jmp    *%cs:vtable_3a694(,%eax,4)


/*----------------------------------------------------------------*/
func_3aa5f:
/*----------------------------------------------------------------*/
    mov    0x76(%ebp),%edx
    mov    data_d3664,%eax
    mov    0xab(%edx),%dx
    cmp    0x18(%eax),%dx
    jb     jump_3aa81
    mov    $0x53,%eax
    call   func_1cea8
    mov    %eax,0x66(%ebp)
  jump_3aa81:
    xor    %ecx,%ecx
    mov    %bx,%cx
    cmp    $0xff,%ecx
    je     jump_3ac6f
    lea    0x0(,%ecx,4),%eax
    add    %ecx,%eax
    shl    $0x3,%eax
    add    $data_103f9c,%eax
    lea    0xa(%eax),%ebx
    lea    -0x3a(%ebp),%edi
    mov    %ebx,%esi
    push   %edi
  jump_3aaac:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3aac4
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3aaac
  jump_3aac4:
    pop    %edi
    cmp    $0x17,%ecx
    jne    jump_3aaf6
    mov    0x76(%ebp),%eax
    xor    %edx,%edx
    mov    0xab(%eax),%dx
    mov    data_d3664,%eax
    call   func_35a70
    add    $0x34,%eax
    push   %eax
    push   %ebx
    push   $data_920a2
    lea    -0x3a(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
  jump_3aaf6:
    mov    0x5e(%ebp),%eax
    mov    0x2(%eax),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    je     jump_3ab14
    mov    $0x54,%eax
    call   func_1cea8
    jmp    jump_3ab19
  jump_3ab14:
    mov    $data_920aa,%eax
  jump_3ab19:
    mov    $0xc,%ecx
    lea    -0x6(%ebp),%edi
    mov    $data_968a8,%esi
    mov    %eax,%ebx
    mov    0x76(%ebp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    data_d3664,%edx
    mov    0xab(%eax),%ax
    cmp    0x18(%edx),%ax
    jae    jump_3ab5d
    mov    0x66(%ebp),%ecx
    push   %ecx
    mov    $0x55,%eax
    call   func_1cea8
    push   %eax
    lea    -0x6(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
  jump_3ab5d:
    lea    -0x6(%ebp),%eax
    push   %eax
    lea    -0x3a(%ebp),%eax
    push   %eax
    push   %ebx
    push   $data_920ab
    lea    -0x102(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0x14,%esp
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x102(%ebp),%ecx
    xor    %edx,%edx
    push   $0x2
    mov    $0xf,%ebx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    mov    0x76(%ebp),%eax
    xor    %edx,%edx
    mov    0xab(%eax),%dx
    mov    data_d3664,%eax
    mov    0x10(%eax),%ebx
    mov    0x2(%ebx,%edx,4),%bx
    and    $0xffff,%ebx
    jne    jump_3b01b
    mov    $0xff,%ebx
    xor    %ecx,%ecx
    xor    %esi,%esi
    mov    0x44(%eax),%cx
    mov    0x50(%eax),%si
    call   func_3583c
    and    $0xffff,%eax
    mov    %ecx,%ebx
    mov    %esi,%edx
    call   func_46c20
    mov    %eax,%edx
    cmp    $0xffff,%eax
    jne    jump_3ac19
    mov    $0x56,%eax
    lea    -0x102(%ebp),%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_3abfe:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3ac16
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3abfe
  jump_3ac16:
    pop    %edi
    jmp    jump_3ac4b
  jump_3ac19:
    cmp    $0x1,%eax
    jne    jump_3ac25
    mov    $0x1c,%eax
    jmp    jump_3ac2a
  jump_3ac25:
    mov    $0x1d,%eax
  jump_3ac2a:
    call   func_1cea8
    push   %eax
    push   %edx
    mov    $0x57,%eax
    call   func_1cea8
    push   %eax
    lea    -0x102(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
  jump_3ac4b:
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x102(%ebp),%ecx
    mov    $0x32,%ebx
    push   $0x2
    mov    $data_10deb6,%eax
    xor    %edx,%edx
    call   func_2b8a8
    jmp    jump_3b01b
  jump_3ac6f:
    mov    0x5e(%ebp),%eax
    mov    (%eax),%al
    and    $0x8,%al
    and    %ecx,%eax
    je     jump_3acb8
    mov    data_d3664,%eax
    mov    data_104bea,%bl
    cmp    0x57(%eax),%bl
    jne    jump_3acb8
    mov    $0x58,%eax
    lea    -0x9e(%ebp),%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_3ac9d:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3acb5
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3ac9d
  jump_3acb5:
    pop    %edi
    jmp    jump_3acd6
  jump_3acb8:
    mov    0x66(%ebp),%eax
    push   %eax
    mov    $0x59,%eax
    call   func_1cea8
    push   %eax
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
  jump_3acd6:
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x9e(%ebp),%ecx
    mov    $0x14,%ebx
    push   $0x2
    mov    $data_10deb6,%eax
    xor    %edx,%edx
    call   func_2b8a8
    mov    0x5e(%ebp),%eax
    mov    (%eax),%al
    and    $0x8,%al
    and    $0xff,%eax
    jne    jump_3b01b
    mov    0x76(%ebp),%eax
    mov    data_d3664,%edx
    mov    0xab(%eax),%ax
    cmp    0x18(%edx),%ax
    jb     jump_3ad4e
    mov    $0x5a,%eax
    lea    -0x19a(%ebp),%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_3ad30:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3ad48
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3ad30
  jump_3ad48:
    pop    %edi
    jmp    jump_3ade1
  jump_3ad4e:
    mov    0x5e(%ebp),%eax
    mov    (%eax),%al
    and    $0x7,%al
    and    $0xff,%eax
    cmp    $0x1,%eax
    jne    jump_3ad8d
    mov    $0x5b,%eax
    lea    -0x19a(%ebp),%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_3ad72:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3ad8a
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3ad72
  jump_3ad8a:
    pop    %edi
    jmp    jump_3ade1
  jump_3ad8d:
    test   %eax,%eax
    jne    jump_3adbf
    mov    $0x5c,%eax
    lea    -0x19a(%ebp),%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_3ada4:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3adbc
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3ada4
  jump_3adbc:
    pop    %edi
    jmp    jump_3ade1
  jump_3adbf:
    mov    0x56(%ebp),%edx
    push   %edx
    mov    0x66(%ebp),%ebx
    push   %ebx
    mov    $0x5d,%eax
    call   func_1cea8
    push   %eax
    lea    -0x19a(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
  jump_3ade1:
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x19a(%ebp),%ecx
    mov    $0x50,%ebx
    push   $0x2
    mov    $0xa,%edx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    jmp    jump_3b01b


/*----------------------------------------------------------------*/
func_3ae08:
/*----------------------------------------------------------------*/
    push   $0x0
    push   $0xffffffff
    mov    $0xf,%ebx
    push   $0xffffffff
    mov    $data_10deb6,%eax
    mov    data_d3664,%ecx
    push   $0x2
    xor    %edx,%edx
    add    $0x24,%ecx
    call   func_2b8a8
    mov    data_d3664,%eax
    xor    %edx,%edx
    mov    0x16(%eax),%dx
    mov    data_10469c(,%edx,4),%ebx
    mov    0x14(%eax),%ax
    push   %ebx
    and    $0xffff,%eax
    mov    data_104688(,%eax,4),%ecx
    push   %ecx
    mov    $0x5e,%eax
    call   func_1cea8
    push   %eax
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    mov    $0x3c,%ebx
    xor    %edx,%edx
    push   $0x2
    lea    -0x9e(%ebp),%ecx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    mov    $0x5f,%eax
    lea    0x42(%ebp),%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_3ae97:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3aeaf
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3ae97
  jump_3aeaf:
    pop    %edi
    mov    data_d3664,%edx
    mov    0x57(%edx),%dl
    and    $0xff,%edx
    cmp    $0xff,%edx
    jge    jump_3af0c
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    $data_1050a4,%esi
    shl    $0x2,%eax
    lea    0x42(%ebp),%edi
    add    %eax,%esi
    push   %edi
  jump_3aef3:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3af0b
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3aef3
  jump_3af0b:
    pop    %edi
  jump_3af0c:
    lea    0x42(%ebp),%eax
    push   %eax
    mov    data_d3664,%eax
    xor    %edx,%edx
    mov    0x57(%eax),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f74(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    push   %eax
    mov    $0x60,%eax
    call   func_1cea8
    push   %eax
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x9e(%ebp),%ecx
    mov    $0x5a,%ebx
    push   $0x2
    xor    %edx,%edx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    mov    data_d3664,%eax
    mov    0x4a(%eax),%ax
    and    $0xffff,%eax
    push   %eax
    mov    $0x61,%eax
    call   func_1cea8
    push   %eax
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x9e(%ebp),%ecx
    mov    $0x78,%ebx
    push   $0x2
    xor    %edx,%edx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    mov    data_d3664,%eax
    mov    0x57(%eax),%dl
    cmp    data_104bea,%dl
    jne    jump_3b01b
    mov    0x5a(%eax),%esi
    cmp    $0xffffffff,%esi
    jne    jump_3b01b
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    push   $0x0
    sub    %edx,%eax
    push   %esi
    mov    data_a2f74(,%eax,2),%al
    xor    %ah,%ah
    shl    $0x2,%eax
    add    $0x13,%eax
    cwtl
    push   %eax
    mov    $0x96,%ebx
    push   $0x2
    mov    $0x62,%eax
    xor    %edx,%edx
    call   func_1cea8
    mov    %eax,%ecx
    mov    $data_10deb6,%eax
    call   func_2b8a8
  jump_3b01b:
    mov    0x72(%ebp),%edx
    test   %edx,%edx
    je     jump_3b0ff
    xor    %eax,%eax
    mov    0x7e(%ebp),%ax
    push   %eax
    mov    data_d3664,%eax
    push   %edx
    add    $0x24,%eax
    push   %eax
    mov    $0x63,%eax
    call   func_1cea8
    push   %eax
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0x14,%esp
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x9e(%ebp),%ecx
    mov    $0xf,%ebx
    push   $0x2
    xor    %edx,%edx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    cmpl   $0x0,0x6e(%ebp)
    je     jump_3b0ff
    xor    %eax,%eax
    mov    0x7a(%ebp),%ax
    cmp    $0xffff,%eax
    jne    jump_3b0a0
    mov    0x5a(%ebp),%eax
    push   %eax
    mov    0x62(%ebp),%edx
    push   %edx
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    jmp    jump_3b0e0
  jump_3b0a0:
    cmp    $0x1,%eax
    jne    jump_3b0ac
    mov    $0x1c,%eax
    jmp    jump_3b0b1
  jump_3b0ac:
    mov    $0x1d,%eax
  jump_3b0b1:
    call   func_1cea8
    push   %eax
    xor    %eax,%eax
    mov    0x7a(%ebp),%ax
    push   %eax
    mov    0x6a(%ebp),%esi
    push   %esi
    mov    0x5a(%ebp),%edi
    push   %edi
    mov    $0x64,%eax
    call   func_1cea8
    push   %eax
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0x18,%esp
  jump_3b0e0:
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x9e(%ebp),%ecx
    mov    $0x50,%ebx
    push   $0x2
    mov    $data_10deb6,%eax
    xor    %edx,%edx
    call   func_2b8a8
  jump_3b0ff:
    mov    0x76(%ebp),%eax
    cmpw   $0x0,0x6b(%eax)
    je     jump_3b110
    xor    %edx,%edx
    call   func_2d218
  jump_3b110:
    lea    0x82(%ebp),%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3b120:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    $data_1050a4,%edx
    mov    $0x65,%ebx
    lea    0x1a4(%edx),%ecx
  jump_3b138:
    mov    %ebx,%eax
    call   func_1cea8
    mov    %edx,%edi
    mov    %eax,%esi
    push   %edi
  jump_3b144:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3b15c
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3b144
  jump_3b15c:
    pop    %edi
    add    $0x14,%edx
    inc    %ebx
    cmp    %ecx,%edx
    jne    jump_3b138
    movb   $0xff,0x1(%ebp)
    movb   $0xff,0x0(%ebp)
    mov    %ebp,%eax
    movl   $0x0,0x7(%ebp)
    call   func_3b188
    mov    %ebp,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_3b188:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    push   %esi
    mov    %eax,%esi
    movw   $0x12,0x1aa(%eax)
    movw   $0x16,0x1ac(%eax)
    movw   $0x0,0x1ae(%eax)
    movw   $0x0,0x19b(%eax)
    movw   $0x0,0x1d9(%eax)
    movw   $0x0,0x1db(%eax)
    movb   $0xe,0x1e9(%eax)
    mov    %eax,%edx
    movl   $0x0,0x1ea(%eax)
    lea    0xe(%eax),%ebx
  jump_3b1d9:
    add    $0x2,%eax
    movb   $0x0,0x1c0(%edx)
    inc    %edx
    movw   $0x0,0x1b0(%eax)
    cmp    %ebx,%eax
    jne    jump_3b1d9
    movl   $0x0,0x3(%esi)
    pop    %esi
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3b1fc:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    call   func_3b188
    xor    %eax,%eax
    mov    %dl,(%ecx)
    movswl %bx,%edx
    mov    0x1(%ecx),%al
    cmp    %edx,%eax
    je     jump_3b21c
    mov    %ecx,%eax
    mov    %bl,0x1(%ecx)
    call   func_43c80
  jump_3b21c:
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3b220:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1b4,%esp
    mov    %eax,%ebp
    cmpl   $0xffffffff,0x3(%eax)
    je     jump_3b37f
    call   func_3efe0
    mov    %eax,0x1b0(%esp)
    test   %eax,%eax
    jge    jump_3b2ac
    mov    %esp,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_40224
    dec    %eax
    xor    %edi,%edi
    mov    %eax,0x1ac(%esp)
    jmp    jump_3b267
  jump_3b25f:
    mov    %esi,%eax
    call   func_49940
    inc    %edi
  jump_3b267:
    mov    0x1b0(%esp),%eax
    movswl %di,%edx
    neg    %eax
    cmp    %eax,%edx
    jge    jump_3b2ac
    mov    0x1ac(%esp),%esi
    mov    0x0(%ebp),%al
    sub    %edx,%esi
    mov    data_104bea,%ah
    mov    (%esp,%esi,4),%esi
    cmp    %ah,%al
    jne    jump_3b25f
    mov    $0xb,%edx
    mov    $data_10ae70,%eax
    mov    0xa7(%esi),%ebx
    xor    %ecx,%ecx
    sar    $0x18,%ebx
    call   func_55aec
    jmp    jump_3b25f
  jump_3b2ac:
    mov    %esp,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_40224
    mov    %esp,%edx
    mov    %eax,%ebx
    mov    %ebp,%eax
    call   func_3c1c0
    mov    %esp,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_40224
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_3b2f9
    mov    %ebp,%eax
    call   func_402e0
    test   %eax,%eax
    jne    jump_3b2f9
    mov    $0xa,%edx
    mov    $data_10ae70,%eax
    mov    0x0(%ebp),%bl
    xor    %ecx,%ecx
    movl   $0xffffffff,0x3(%ebp)
    jmp    jump_3b37a
  jump_3b2f9:
    test   %ebx,%ebx
    jle    jump_3b311
    shl    $0x2,%ebx
    xor    %edx,%edx
  jump_3b302:
    mov    (%esp,%edx,1),%eax
    add    $0x4,%edx
    call   func_4a6ac
    cmp    %ebx,%edx
    jl     jump_3b302
  jump_3b311:
    xor    %ebx,%ebx
    mov    %ebp,%eax
    mov    %ebx,data_10509c
    call   func_3b5b8
    mov    %ebp,%eax
    call   func_405f4
    mov    0x7(%ebp),%eax
    mov    0x14(%eax),%al
    and    $0x80,%al
    and    $0xff,%eax
    je     jump_3b37f
    mov    0x19e(%ebp),%ecx
    mov    data_104bea,%dl
    inc    %ecx
    mov    0x0(%ebp),%al
    mov    %ecx,0x19e(%ebp)
    cmp    %dl,%al
    jne    jump_3b37f
    test   %ecx,%ecx
    je     jump_3b37f
    mov    0x19a(%ebp),%eax
    sar    $0x18,%eax
    mov    data_968e8(,%eax,2),%ax
    and    $0xffff,%eax
    cmp    %ecx,%eax
    jne    jump_3b37f
    mov    $0x18,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
  jump_3b37a:
    call   func_55aec
  jump_3b37f:
    add    $0x1b4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3b56c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x1ac,%esp
    mov    %eax,%esi
    mov    %edx,%eax
    mov    %esp,%edx
    call   func_1d794
    mov    %eax,%edi
    xor    %edx,%edx
    jmp    jump_3b588
  jump_3b587:
    inc    %edx
  jump_3b588:
    movswl %dx,%eax
    cmp    %edi,%eax
    jge    jump_3b5ab
    mov    (%esp,%eax,4),%eax
    test   %eax,%eax
    je     jump_3b587
    mov    0x54(%eax),%ecx
    xor    %ebx,%ebx
    sar    $0x10,%ecx
    mov    (%esi),%bl
    cmp    %ebx,%ecx
    jne    jump_3b587
    call   func_4a5b8
    jmp    jump_3b587
  jump_3b5ab:
    add    $0x1ac,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3b5b8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1fc,%esp
    mov    %eax,0x1c8(%esp)
    mov    %esp,%edx
    xor    %ebx,%ebx
    call   func_40224
    mov    %eax,0x1b8(%esp)
    mov    0x1c8(%esp),%eax
    mov    (%eax),%al
    cmp    data_104bea,%al
    jne    jump_3b5f5
    cmpl   $0xffffffff,data_a0d00
    jne    jump_3b62e
  jump_3b5f5:
    mov    0x1c8(%esp),%eax
    call   func_3c670
    mov    0x1c8(%esp),%eax
    mov    0x1b8(%esp),%ebx
    call   func_3c968
    mov    0x1c8(%esp),%eax
    mov    %esp,%edx
    call   func_44080
    mov    0x1c8(%esp),%eax
    call   func_3c2e8
  jump_3b62e:
    mov    0x1c8(%esp),%eax
    call   func_40590
    cmp    $0xffffffff,%eax
    je     jump_3b688
    mov    0x1c8(%esp),%eax
    mov    data_104bea,%dl
    cmp    (%eax),%dl
    jne    jump_3b662
    cmpl   $0x0,data_a0d00
    jne    jump_3b662
    cmpl   $0xffffffff,data_106fc2
    jne    jump_3b688
  jump_3b662:
    mov    0x1c8(%esp),%edx
    xor    %eax,%eax
    mov    (%edx),%al
    mov    data_106fa6(,%eax,2),%ax
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3b688
    mov    %edx,%eax
    call   func_3ea7c
  jump_3b688:
    mov    0x1c8(%esp),%eax
    mov    data_104bea,%dh
    cmp    (%eax),%dh
    jne    jump_3b6a2
    cmpl   $0xffffffff,data_a0d00
    jne    jump_3b6b3
  jump_3b6a2:
    mov    $0x1,%edx
    mov    0x1c8(%esp),%eax
    call   func_434e4
  jump_3b6b3:
    mov    0x1b8(%esp),%edi
    xor    %ebx,%ebx
    jmp    jump_3b6bf
  jump_3b6be:
    inc    %ebx
  jump_3b6bf:
    movswl %bx,%eax
    cmp    %edi,%eax
    jge    jump_3b6f4
    mov    0x1c8(%esp),%eax
    mov    data_104bea,%cl
    cmp    (%eax),%cl
    jne    jump_3b6e0
    cmpl   $0xffffffff,data_a0d00
    jne    jump_3b6be
  jump_3b6e0:
    movswl %bx,%eax
    mov    (%esp,%eax,4),%edx
    mov    0x1c8(%esp),%eax
    call   func_3ebdc
    jmp    jump_3b6be
  jump_3b6f4:
    mov    0x1c8(%esp),%eax
    mov    data_104bea,%bl
    cmp    (%eax),%bl
    jne    jump_3b712
    cmpl   $0xffffffff,data_a0d00
    jne    jump_3c0ba
  jump_3b712:
    mov    0x1c8(%esp),%eax
    call   func_3efe0
    mov    %ax,0x1f4(%esp)
    cwtl
    cmp    $0xa,%eax
    jle    jump_3b736
    movw   $0xa,0x1f4(%esp)
  jump_3b736:
    mov    0x1f2(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_3c0ba
    xor    %eax,%eax
    mov    $0xffffffff,%edx
    mov    %eax,0x1e8(%esp)
    mov    %eax,0x1e0(%esp)
    mov    %eax,0x1e4(%esp)
    mov    0x1c8(%esp),%eax
    mov    $data_a3d21,%edi
    call   func_43374
    mov    data_a62a1,%bx
    mov    %al,0x1f8(%esp)
    xor    %edx,%edx
    test   %bx,%bx
    jle    jump_3b8f8
    jmp    jump_3b853
  jump_3b793:
    xor    %ecx,%ecx
    mov    0x15(%edi),%cl
    test   %ecx,%eax
    je     jump_3b7dc
    movswl %dx,%eax
    mov    data_104f09(%eax),%ecx
    mov    data_104d7c(,%eax,4),%eax
    sar    $0x18,%ecx
    mov    %eax,0x1c4(%esp)
    test   %ecx,%ecx
    jle    jump_3b7c5
    mov    %eax,%ebp
    sar    %cl,%ebp
    mov    %ebp,0x1c4(%esp)
  jump_3b7c5:
    fildl  0x1c4(%esp)
    fadds  0x1e8(%esp)
    fstps  0x1e8(%esp)
    jmp    jump_3b83f
  jump_3b7dc:
    movswl %dx,%eax
    mov    data_104fd1(%eax),%ecx
    sar    $0x18,%ecx
    test   %ecx,%ecx
    jg     jump_3b801
    fildl  data_104bec(,%eax,4)
    fadds  0x1e4(%esp)
    fstps  0x1e4(%esp)
  jump_3b801:
    movswl %dx,%eax
    mov    data_104f09(%eax),%ecx
    mov    data_104d7c(,%eax,4),%eax
    sar    $0x18,%ecx
    mov    %eax,0x1c0(%esp)
    test   %ecx,%ecx
    jle    jump_3b82a
    mov    %eax,%esi
    sar    %cl,%esi
    mov    %esi,0x1c0(%esp)
  jump_3b82a:
    fildl  0x1c0(%esp)
    fadds  0x1e8(%esp)
    fstps  0x1e8(%esp)
  jump_3b83f:
    mov    data_a62a1,%cx
    inc    %edx
    add    $0x60,%edi
    cmp    %cx,%dx
    jge    jump_3b8f8
  jump_3b853:
    xor    %eax,%eax
    xor    %ecx,%ecx
    mov    0x1f8(%esp),%al
    mov    0x14(%edi),%cl
    test   %ecx,%eax
    je     jump_3b793
    movswl %dx,%eax
    mov    data_104f6d(%eax),%ecx
    mov    data_104bec(,%eax,4),%eax
    sar    $0x18,%ecx
    mov    %eax,0x1dc(%esp)
    cmp    $0x1,%ecx
    jle    jump_3b892
    dec    %ecx
    sar    %cl,%eax
    mov    %eax,0x1dc(%esp)
  jump_3b892:
    movswl %dx,%eax
    fildl  0x1dc(%esp)
    lea    0x0(,%eax,4),%ebp
    fadds  0x1e0(%esp)
    mov    data_104f09(%eax),%ecx
    mov    data_104d7c(%ebp),%eax
    mov    data_104bec(%ebp),%ebx
    fstps  0x1e0(%esp)
    add    %ebx,%eax
    sar    $0x18,%ecx
    mov    %eax,0x1dc(%esp)
    test   %ecx,%ecx
    jle    jump_3b8de
    mov    %eax,%esi
    sar    %cl,%esi
    mov    %esi,0x1dc(%esp)
  jump_3b8de:
    fildl  0x1dc(%esp)
    fadds  0x1e8(%esp)
    fstps  0x1e8(%esp)
    jmp    jump_3b83f
  jump_3b8f8:
    flds   0x1e4(%esp)
    fmuls  data_920f0
    fstps  0x1e4(%esp)
    flds   0x1e0(%esp)
    fmull  data_920f4
    fsts   0x1e0(%esp)
    fadds  0x1e8(%esp)
    fadds  0x1e4(%esp)
    fstps  0x1b4(%esp)
    fldz
    fcomps 0x1b4(%esp)
    fnstsw %ax
    sahf
    jae    jump_3b9b1
    filds  0x1f4(%esp)
    flds   0x1e0(%esp)
    fmul   %st(1),%st
    fstps  0x1e0(%esp)
    flds   0x1e8(%esp)
    fmul   %st(1),%st
    fstps  0x1e8(%esp)
    fmuls  0x1e4(%esp)
    fstps  0x1e4(%esp)
    fld1
    fdivs  0x1b4(%esp)
    flds   0x1e0(%esp)
    fmul   %st(1),%st
    fstps  0x1e0(%esp)
    flds   0x1e8(%esp)
    fmul   %st(1),%st
    fstps  0x1e8(%esp)
    fmuls  0x1e4(%esp)
    fstps  0x1e4(%esp)
    jmp    jump_3ba06
  jump_3b9b1:
    mov    0x1f2(%esp),%edx
    sar    $0x10,%edx
    mov    $0x3,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    %eax,0x1b0(%esp)
    fildl  0x1b0(%esp)
    fstps  0x1e4(%esp)
    filds  0x1f4(%esp)
    fsubs  0x1e4(%esp)
    mov    0x1e4(%esp),%eax
    fsubs  0x1e4(%esp)
    mov    %eax,0x1e8(%esp)
    fstps  0x1e0(%esp)
  jump_3ba06:
    xor    %esi,%esi
    mov    $0x49,%ebp
    mov    $0x22a,%edi
    jmp    jump_3ba60
  jump_3ba14:
    mov    %ebp,%edx
    mov    %ecx,%eax
    call   func_4a534
    test   %eax,%eax
    je     jump_3ba41
    fldz
    fcomps 0x1e0(%esp)
    fnstsw %ax
    sahf
    jae    jump_3ba41
    fld1
    fsubrs 0x1e0(%esp)
    fstps  0x1e0(%esp)
    jmp    jump_3ba5f
  jump_3ba41:
    fldz
    fcomps 0x1e8(%esp)
    fnstsw %ax
    sahf
    jae    jump_3ba5f
    fld1
    fsubrs 0x1e8(%esp)
    fstps  0x1e8(%esp)
  jump_3ba5f:
    inc    %esi
  jump_3ba60:
    mov    0x1b8(%esp),%eax
    movswl %si,%edx
    cmp    %eax,%edx
    jge    jump_3bab3
    mov    (%esp,%edx,4),%ecx
    test   %ecx,%ecx
    jne    jump_3ba83
    mov    $data_920b4,%edx
    mov    %edi,%ebx
    xor    %eax,%eax
    call   func_26198
  jump_3ba83:
    cmpb   $0x1,0x58(%ecx)
    jne    jump_3ba5f
    cmpl   $0x0,0x28(%ecx)
    je     jump_3ba14
    fldz
    fcomps 0x1e4(%esp)
    fnstsw %ax
    sahf
    jae    jump_3ba14
    fld1
    fsubrs 0x1e4(%esp)
    fstps  0x1e4(%esp)
    jmp    jump_3ba5f
  jump_3bab3:
    xor    %edx,%edx
    xor    %ecx,%ecx
    jmp    jump_3bacf
  jump_3bab9:
    inc    %edx
    mov    %ecx,data_1046e8(,%eax,4)
    mov    %ecx,data_104878(,%eax,4)
    mov    %ecx,data_104a08(,%eax,4)
  jump_3bacf:
    movswl %dx,%eax
    cmp    $0x64,%eax
    jl     jump_3bab9
    mov    0x1f4(%esp),%esi
    xor    %eax,%eax
    test   %si,%si
    jle    jump_3bb01
    mov    $0xffffffff,%ebx
    mov    0x1f4(%esp),%edi
  jump_3baf1:
    movswl %ax,%edx
    inc    %eax
    mov    %ebx,data_104b98(,%edx,4)
    cmp    %di,%ax
    jl     jump_3baf1
  jump_3bb01:
    mov    $data_a3d21,%ebp
    mov    data_a62a1,%ax
    xor    %esi,%esi
    test   %ax,%ax
    jle    jump_3bd57
    jmp    jump_3bb2d
  jump_3bb19:
    mov    data_a62a1,%dx
    inc    %esi
    add    $0x60,%ebp
    cmp    %dx,%si
    jge    jump_3bd57
  jump_3bb2d:
    mov    0x1c8(%esp),%ecx
    mov    $0x1,%edx
    xor    %eax,%eax
    mov    (%ecx),%cl
    mov    0x14(%ebp),%al
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_3bb19
    mov    $data_a3d21,%edi
    mov    data_a62a1,%ax
    xor    %ebx,%ebx
    test   %ax,%ax
    jle    jump_3bb19
    jmp    jump_3bc99
  jump_3bb5d:
    cmp    $0x2,%eax
    jge    jump_3bb7c
    mov    0x1bc(%esp),%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    movswl %si,%ecx
    add    %eax,data_104a08(,%ecx,4)
  jump_3bb7c:
    movswl %bx,%eax
    mov    data_104f09(%eax),%eax
    sar    $0x18,%eax
    cmp    $0x1,%eax
    jge    jump_3bc85
    movswl %si,%edx
    mov    0x1bc(%esp),%eax
    add    %eax,data_104878(,%edx,4)
    jmp    jump_3bc85
  jump_3bba7:
    xor    %edx,%edx
    mov    0x15(%ebp),%dl
    test   %edx,%eax
    je     jump_3bc0c
    movswl %bx,%edx
    mov    data_104d7c(,%edx,4),%eax
    mov    data_104bec(,%edx,4),%ecx
    add    %ecx,%eax
    mov    %eax,0x1b0(%esp)
    fildl  0x1b0(%esp)
    mov    data_104f09(%edx),%eax
    fmuls  0x1ec(%esp)
    sar    $0x18,%eax
    call   func_76e98
    fistpl 0x1d0(%esp)
    cmp    $0x1,%eax
    jge    jump_3bc85
    movswl %si,%edx
    mov    0x1d0(%esp),%eax
    add    %eax,data_104878(,%edx,4)
    jmp    jump_3bc85
  jump_3bc0c:
    movswl %bx,%edx
    mov    data_104fd1(%edx),%eax
    sar    $0x18,%eax
    cmp    $0x1,%eax
    jge    jump_3bc49
    fildl  data_104bec(,%edx,4)
    fmuls  0x1ec(%esp)
    fmuls  data_920f0
    movswl %si,%eax
    fildl  data_1046e8(,%eax,4)
    faddp  %st,%st(1)
    call   func_76e98
    fistpl data_1046e8(,%eax,4)
  jump_3bc49:
    movswl %bx,%eax
    fildl  data_104d7c(,%eax,4)
    fmuls  0x1cc(%esp)
    mov    data_104f09(%eax),%eax
    call   func_76e98
    sar    $0x18,%eax
    fistpl 0x1ac(%esp)
    cmp    $0x1,%eax
    jge    jump_3bc85
    movswl %si,%edx
    mov    0x1ac(%esp),%eax
    add    %eax,data_104878(,%edx,4)
  jump_3bc85:
    mov    data_a62a1,%dx
    inc    %ebx
    add    $0x60,%edi
    cmp    %dx,%bx
    jge    jump_3bb19
  jump_3bc99:
    mov    0x1c8(%esp),%ecx
    mov    $0x1,%edx
    xor    %eax,%eax
    mov    (%ecx),%cl
    mov    0x16(%edi),%al
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_3bc85
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_1da04
    movswl %ax,%edx
    mov    $0x19,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    lea    0x1(%eax),%ecx
    mov    $0x1,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    mov    %eax,0x1b0(%esp)
    fildl  0x1b0(%esp)
    fstps  0x1ec(%esp)
    mov    0x1ec(%esp),%eax
    xor    %edx,%edx
    mov    %eax,0x1cc(%esp)
    xor    %eax,%eax
    mov    0x14(%ebp),%dl
    mov    0x1f8(%esp),%al
    test   %edx,%eax
    je     jump_3bba7
    movswl %bx,%eax
    fildl  data_104bec(,%eax,4)
    fmuls  0x1ec(%esp)
    mov    data_104f6d(%eax),%eax
    call   func_76e98
    sar    $0x18,%eax
    fistpl 0x1bc(%esp)
    cmp    $0x1,%eax
    jge    jump_3bb5d
    movswl %si,%edx
    mov    0x1bc(%esp),%eax
    add    %eax,data_104a08(,%edx,4)
    jmp    jump_3bb7c
  jump_3bd57:
    mov    $data_bb1b3,%ecx
    xor    %ebx,%ebx
    mov    %ecx,0x1d8(%esp)
    mov    data_ca1ef,%cx
    mov    %bx,0x1f0(%esp)
    test   %cx,%cx
    jle    jump_3bf06
    jmp    jump_3be3b
  jump_3bd82:
    mov    data_104bc0(%eax),%ebx
    cmp    %ebx,%ecx
    jle    jump_3bd90
    mov    %edx,%ebp
    mov    %ebx,%ecx
  jump_3bd90:
    mov    0x1f4(%esp),%ebx
    inc    %esi
    cmp    %bx,%si
    jge    jump_3bdcd
  jump_3bd9d:
    movswl %si,%eax
    cmp    $0xa,%eax
    jl     jump_3bdb6
    mov    $0x2b1,%ebx
    mov    $data_920cc,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3bdb6:
    movswl %si,%edx
    lea    0x0(,%edx,4),%eax
    mov    data_104b98(%eax),%edi
    cmp    $0xffffffff,%edi
    jne    jump_3bd82
    mov    %edx,%ebp
  jump_3bdcd:
    mov    0x1d4(%esp),%ecx
    mov    data_104bc0(,%ebp,4),%esi
    mov    data_104b98(,%ebp,4),%edx
    cmp    %esi,%ecx
    jg     jump_3bdeb
    cmp    $0xffffffff,%edx
    jne    jump_3be0a
  jump_3bdeb:
    mov    0x1ee(%esp),%eax
    sar    $0x10,%eax
    mov    %eax,data_104b98(,%ebp,4)
    mov    0x1d4(%esp),%eax
    mov    %eax,data_104bc0(,%ebp,4)
  jump_3be0a:
    mov    0x1f0(%esp),%ebx
    mov    0x1d8(%esp),%esi
    mov    data_ca1ef,%cx
    inc    %ebx
    add    $0x7b,%esi
    mov    %bx,0x1f0(%esp)
    mov    %esi,0x1d8(%esp)
    cmp    %cx,%bx
    jge    jump_3bf06
  jump_3be3b:
    mov    0x1d8(%esp),%eax
    cmpb   $0xff,0x54(%eax)
    jne    jump_3be0a
    mov    $0x16,%edx
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_3be0a
    mov    0x1d8(%esp),%eax
    mov    0x1c8(%esp),%edx
    mov    0x57(%eax),%al
    cmp    (%edx),%al
    jne    jump_3be0a
    mov    0x1d8(%esp),%ecx
    mov    0xa(%ecx),%ecx
    sar    $0x10,%ecx
    cmp    $0x64,%ecx
    jl     jump_3be96
    mov    $0x2a1,%ebx
    mov    $data_920c0,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3be96:
    mov    data_1046e8(,%ecx,4),%eax
    mov    data_104878(,%ecx,4),%edi
    mov    data_104a08(,%ecx,4),%edx
    add    %edi,%eax
    add    %eax,%edx
    mov    $0xa,%ecx
    mov    %edx,0x1d4(%esp)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    0x1d8(%esp),%edx
    mov    %eax,0x1d4(%esp)
    xor    %eax,%eax
    mov    0x44(%edx),%ax
    mov    0x1d4(%esp),%edx
    imul   %eax,%edx
    xor    %ebp,%ebp
    xor    %esi,%esi
    mov    data_104bc0,%ecx
    mov    0x1f4(%esp),%eax
    mov    %edx,0x1d4(%esp)
    test   %ax,%ax
    jg     jump_3bd9d
    jmp    jump_3bdcd
  jump_3bf06:
    mov    0x1f4(%esp),%edi
    xor    %esi,%esi
    test   %di,%di
    jle    jump_3c0ba
    jmp    jump_3c008
  jump_3bf1d:
    fldz
    fcomps 0x1e8(%esp)
    fnstsw %ax
    sahf
    jae    jump_3bf63
    mov    data_104878(,%edi,4),%eax
    cmp    data_104a08(,%edi,4),%eax
    jle    jump_3bf63
    mov    $0x1,%ebx
    mov    0x1c8(%esp),%eax
    mov    %ecx,%edx
    call   func_3cb60
    fld1
    fsubrs 0x1e8(%esp)
    fstps  0x1e8(%esp)
    jmp    jump_3bff7
  jump_3bf63:
    fldz
    fcomps 0x1e0(%esp)
    fnstsw %ax
    sahf
    jae    jump_3bf96
    mov    $0x2,%ebx
    mov    0x1c8(%esp),%eax
    mov    %ecx,%edx
    call   func_3cb60
    fld1
    fsubrs 0x1e0(%esp)
    fstps  0x1e0(%esp)
    jmp    jump_3bff7
  jump_3bf96:
    fldz
    fcomps 0x1e4(%esp)
    fnstsw %ax
    sahf
    jae    jump_3bfc6
    mov    0x1c8(%esp),%eax
    mov    %ecx,%edx
    xor    %ebx,%ebx
    call   func_3cb60
    fld1
    fsubrs 0x1e4(%esp)
    fstps  0x1e4(%esp)
    jmp    jump_3bff7
  jump_3bfc6:
    fldz
    fcomps 0x1e8(%esp)
    fnstsw %ax
    sahf
    jae    jump_3bff7
    mov    $0x1,%ebx
    mov    0x1c8(%esp),%eax
    mov    %ecx,%edx
    call   func_3cb60
    fld1
    fsubrs 0x1e8(%esp)
    fstps  0x1e8(%esp)
  jump_3bff7:
    mov    0x1f4(%esp),%edx
    inc    %esi
    cmp    %dx,%si
    jge    jump_3c0ba
  jump_3c008:
    movswl %si,%eax
    shl    $0x2,%eax
    mov    data_104b98(%eax),%ebp
    cmp    $0xffffffff,%ebp
    jle    jump_3bff7
    mov    data_ca1ed,%edx
    sar    $0x10,%edx
    cmp    %ebp,%edx
    jle    jump_3bff7
    imul   $0x7b,%ebp,%ecx
    add    $data_bb1b3,%ecx
    jne    jump_3c042
    mov    $0x2d9,%ebx
    mov    $data_920d8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3c042:
    mov    0xa(%ecx),%edi
    sar    $0x10,%edi
    cmp    $0x64,%edi
    jl     jump_3c05e
    mov    $0x2dd,%ebx
    mov    $data_920e4,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3c05e:
    fldz
    fcomps 0x1e4(%esp)
    fnstsw %ax
    sahf
    jae    jump_3bf1d
    lea    0x0(,%edi,4),%eax
    mov    data_1046e8(%eax),%edx
    cmp    data_104878(%eax),%edx
    jle    jump_3bf1d
    cmp    data_104a08(%eax),%edx
    jle    jump_3bf1d
    mov    0x1c8(%esp),%eax
    mov    %ecx,%edx
    xor    %ebx,%ebx
    call   func_3cb60
    fld1
    fsubrs 0x1e4(%esp)
    fstps  0x1e4(%esp)
    jmp    jump_3bff7
  jump_3c0ba:
    mov    data_ca1ef,%cx
    xor    %ebx,%ebx
    test   %cx,%cx
    jle    jump_3c11f
    jmp    jump_3c0d7
  jump_3c0ca:
    mov    data_ca1ef,%si
    inc    %ebx
    cmp    %si,%bx
    jge    jump_3c11f
  jump_3c0d7:
    movswl %bx,%eax
    imul   $0x7b,%eax,%eax
    mov    $data_bb1b3,%edx
    add    %eax,%edx
    mov    0x1c8(%esp),%ecx
    mov    0x57(%edx),%al
    mov    (%ecx),%ah
    cmp    %ah,%al
    jne    jump_3c0ca
    cmp    data_104bea,%ah
    jne    jump_3c10b
    cmpl   $0x0,0x5a(%edx)
    jne    jump_3c10b
    cmpl   $0x0,data_a0d00
    je     jump_3c0ca
  jump_3c10b:
    cmpb   $0xff,0x54(%edx)
    jne    jump_3c0ca
    mov    0x1c8(%esp),%eax
    call   func_3d8f0
    jmp    jump_3c0ca
  jump_3c11f:
    add    $0x1fc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3c12c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    %edx,%ecx
    mov    0x15a(%edx),%ebp
    xor    %ebx,%ebx
    mov    0x15e(%edx),%edx
    mov    (%eax),%bl
    mov    %ecx,%eax
    sub    %edx,%ebp
    xor    %edx,%edx
    xor    %esi,%esi
    call   func_4a36c
    cmp    $0xff,%al
    jle    jump_3c168
    cmp    $0x4c,%al
    jge    jump_3c168
    movsbl %al,%ebx
    imul   $0x6a,%ebx,%ebx
    mov    data_107072(%ebx),%ebx
    jmp    jump_3c16a
  jump_3c168:
    xor    %ebx,%ebx
  jump_3c16a:
    lea    0x0(,%ebp,4),%eax
    sub    %ebp,%eax
    cmp    0x15a(%ecx),%eax
    jg     jump_3c1b1
    cmpl   $0x0,0x28(%ecx)
    jne    jump_3c195
    mov    $0x49,%edx
    mov    %ecx,%eax
    call   func_4a534
    test   %eax,%eax
    jne    jump_3c195
    cmp    (%ecx),%ebx
    jg     jump_3c1b1
  jump_3c195:
    mov    %ecx,%eax
    call   func_4a8cc
    cmp    $0x1,%eax
    jl     jump_3c1b6
    xor    %edx,%edx
    mov    %ecx,%eax
    mov    (%edi),%dl
    call   func_4a1cc
    cmp    $0xf,%eax
    jl     jump_3c1b6
  jump_3c1b1:
    mov    $0xffffffff,%esi
  jump_3c1b6:
    mov    %esi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3c1c0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,(%esp)
    call   func_3efe0
    cmp    $0x2,%eax
    jge    jump_3c2dd
    test   %edx,%edx
    je     jump_3c2dd
    test   %ebx,%ebx
    jle    jump_3c2dd
    mov    0x0(%ebp),%al
    cmp    data_104bea,%al
    jne    jump_3c204
    cmpl   $0xffffffff,data_a0d00
    jne    jump_3c2dd
  jump_3c204:
    mov    $0x1,%edi
    mov    0x0(%ebp),%cl
    shl    %cl,%edi
    mov    %edi,%ecx
    mov    data_1052ea,%edi
    sar    $0x18,%edi
    xor    %eax,%eax
    test   %ecx,%edi
    je     jump_3c248
    mov    data_105830,%edi
    sar    $0x18,%edi
    mov    $0x1,%eax
    test   %ecx,%edi
    je     jump_3c248
    mov    data_105bb4,%edi
    sar    $0x18,%edi
    mov    $0x2,%eax
    test   %ecx,%edi
    je     jump_3c248
    mov    $0x3,%eax
  jump_3c248:
    test   %ax,%ax
    jne    jump_3c25e
    mov    $0x365,%ebx
    mov    $data_920fc,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3c25e:
    mov    (%esp),%ecx
    xor    %edi,%edi
    test   %ecx,%ecx
    jle    jump_3c2dd
    jmp    jump_3c27c
  jump_3c26d:
    mov    (%esp),%eax
    inc    %edi
    add    $0x4,%esi
    cmp    %eax,%edi
    jge    jump_3c2dd
  jump_3c27c:
    test   %esi,%esi
    jne    jump_3c291
    mov    $0x36b,%ebx
    mov    $data_92108,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3c291:
    mov    (%esi),%ecx
    test   %ecx,%ecx
    jne    jump_3c2a8
    mov    $0x36f,%ebx
    mov    $data_92114,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3c2a8:
    mov    0x58(%ecx),%dl
    cmp    $0x1,%dl
    je     jump_3c26d
    cmp    $0x2,%dl
    je     jump_3c26d
    mov    0x5d(%ecx),%bl
    cmp    $0x2,%bl
    je     jump_3c26d
    cmp    $0x5,%bl
    je     jump_3c26d
    cmp    $0x6,%bl
    je     jump_3c26d
    mov    %ecx,%edx
    mov    %ebp,%eax
    call   func_3c12c
    test   %eax,%eax
    je     jump_3c26d
    mov    %ecx,%eax
    call   func_49940
    jmp    jump_3c26d
  jump_3c2dd:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3c2e8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,(%esp)
    mov    %edx,%ebp
    mov    %ebx,0x8(%esp)
    mov    $0xffffffff,%edx
    call   func_43374
    mov    %al,0x10(%esp)
    mov    (%esp),%eax
    xor    %ebx,%ebx
    mov    $data_105038,%edx
    mov    (%eax),%bl
    mov    $data_a2f6c,%eax
    mov    $data_a3d21,%edi
    call   func_1fd90
    xor    %edx,%edx
    mov    data_a62a1,%bx
    mov    %dx,0xc(%esp)
    test   %bx,%bx
    jle    jump_3c402
    jmp    jump_3c372
  jump_3c33a:
    mov    0xa(%esp),%ebx
    mov    0xc(%esp),%ecx
    mov    data_a62a1,%si
    add    $0x60,%edi
    xor    %ah,%ah
    inc    %ecx
    sar    $0x10,%ebx
    mov    %cx,0xc(%esp)
    mov    %ah,data_104f0c(%ebx)
    mov    %ah,data_104f70(%ebx)
    mov    %ah,data_104fd4(%ebx)
    cmp    %si,%cx
    jge    jump_3c402
  jump_3c372:
    mov    (%esp),%eax
    mov    0x8(%esp),%ecx
    xor    %edx,%edx
    mov    %ebp,%ebx
    mov    (%eax),%dl
    mov    %edi,%eax
    call   func_1da4c
    mov    0xa(%esp),%edx
    sar    $0x10,%edx
    mov    %edx,0x4(%esp)
    lea    0x0(,%edx,4),%esi
    mov    0x8(%esp),%ecx
    mov    %eax,data_104bec(%esi)
    mov    (%esp),%eax
    xor    %edx,%edx
    mov    %ebp,%ebx
    mov    (%eax),%dl
    mov    %edi,%eax
    call   func_1db70
    mov    %eax,data_104d7c(%esi)
    mov    0x4(%esp),%eax
    mov    data_105035(%eax),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    jle    jump_3c33a
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    0x10(%esp),%dl
    mov    0x15(%edi),%bl
    test   %ebx,%edx
    je     jump_3c33a
    imul   $0x96,%eax,%eax
    mov    data_104d7c(%esi),%edx
    add    %edx,%edx
    lea    0x12c(%edx),%ebx
    lea    (%ebx,%eax,1),%ecx
    mov    %ecx,data_104d7c(%esi)
    jmp    jump_3c33a
  jump_3c402:
    xor    %esi,%esi
    jmp    jump_3c490
  jump_3c409:
    cmp    $0x3,%al
    jne    jump_3c42a
    mov    0x59(%ecx),%edi
    test   %edi,%edi
    jne    jump_3c425
    mov    $0x3c3,%ebx
    mov    $data_92138,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3c425:
    mov    0xa(%edi),%ebx
    jmp    jump_3c44f
  jump_3c42a:
    cmp    $0x5,%al
    jne    jump_3c452
    cmpb   $0x1,0x5d(%ecx)
    jne    jump_3c452
    mov    0x5e(%ecx),%edi
    test   %edi,%edi
    jne    jump_3c44c
    mov    $0x3cc,%ebx
    mov    $data_92144,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3c44c:
    mov    0x2(%edi),%ebx
  jump_3c44f:
    sar    $0x10,%ebx
  jump_3c452:
    cmp    $0xffffffff,%ebx
    jle    jump_3c48f
    mov    data_a629f,%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jge    jump_3c48f
    cmpl   $0x0,0x28(%ecx)
    je     jump_3c471
    incb   data_104fd4(%ebx)
    jmp    jump_3c48f
  jump_3c471:
    mov    $0x49,%edx
    mov    %ecx,%eax
    call   func_4a534
    test   %eax,%eax
    je     jump_3c489
    incb   data_104f70(%ebx)
    jmp    jump_3c48f
  jump_3c489:
    incb   data_104f0c(%ebx)
  jump_3c48f:
    inc    %esi
  jump_3c490:
    mov    0x8(%esp),%edi
    movswl %si,%eax
    cmp    %edi,%eax
    jge    jump_3c4e1
    mov    0x0(%ebp,%eax,4),%ecx
    test   %ecx,%ecx
    jne    jump_3c4b4
    mov    $0x3b3,%ebx
    mov    $data_92120,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3c4b4:
    mov    0x58(%ecx),%al
    mov    $0xffffffff,%ebx
    cmp    $0x4,%al
    jne    jump_3c409
    mov    0x59(%ecx),%edi
    test   %edi,%edi
    jne    jump_3c44c
    mov    $0x3bb,%ebx
    mov    $data_9212c,%edx
    xor    %eax,%eax
    call   func_26198
    jmp    jump_3c44c
  jump_3c4e1:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3c670:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%ebp
    xor    %edx,%edx
    mov    data_a3cf4,%bx
    mov    %dx,0xc(%esp)
    test   %bx,%bx
    jle    jump_3c95b
    jmp    jump_3c911
  jump_3c697:
    mov    0xa(%esp),%eax
    sar    $0x10,%eax
    cmpb   $0x1,0x1c0(%eax,%ebp,1)
    jne    jump_3c703
    mov    $data_a3d21,%eax
    xor    %edx,%edx
    jmp    jump_3c6b5
  jump_3c6b1:
    inc    %edx
    add    $0x60,%eax
  jump_3c6b5:
    mov    data_a629f,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%edx
    jge    jump_3c703
    mov    $0x1,%edi
    mov    0x0(%ebp),%cl
    movzbl 0x14(%eax),%esi
    shl    %cl,%edi
    test   %edi,%esi
    je     jump_3c6b1
    mov    0xa(%esp),%ecx
    mov    $0x1,%edi
    sar    $0x10,%ecx
    movzbl 0x15(%eax),%esi
    shl    %cl,%edi
    test   %edi,%esi
    je     jump_3c6b1
    mov    %esp,%edi
    mov    data_a3d1d,%ecx
    mov    $data_96912,%esi
    sar    $0x18,%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    add    (%esp,%ecx,2),%bx
    jmp    jump_3c6b1
  jump_3c703:
    mov    0xa(%esp),%ecx
    sar    $0x10,%ecx
    imul   $0x1ee,%ecx,%ecx
    add    $data_a2f72,%ecx
    mov    $0xffffffff,%edx
    mov    %ecx,%eax
    call   func_43374
    mov    $0xffffffff,%edx
    mov    %al,0x10(%esp)
    mov    %al,0x14(%esp)
    mov    %ecx,%eax
    call   func_43374
    mov    0x10(%esp),%ch
    mov    %al,0x18(%esp)
    cmp    %ch,%al
    je     jump_3c847
    xor    %edi,%edi
    xor    %esi,%esi
    xor    %eax,%eax
    xor    %edx,%edx
    mov    %edi,0x8(%esp)
    jmp    jump_3c758
  jump_3c754:
    add    $0x6,%edx
    inc    %eax
  jump_3c758:
    mov    data_a3cf2,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_3c7ba
    mov    0xa(%esp),%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    je     jump_3c754
    xor    %ecx,%ecx
    mov    0x0(%ebp),%cl
    cmp    %ecx,%eax
    je     jump_3c754
    mov    $0x1,%edi
    mov    %al,%cl
    shl    %cl,%edi
    xor    %ecx,%ecx
    mov    0x14(%esp),%cl
    test   %edi,%ecx
    je     jump_3c793
    add    data_a3cf8(%edx),%si
  jump_3c793:
    mov    $0x1,%edi
    mov    %al,%cl
    shl    %cl,%edi
    mov    %edi,%ecx
    movzbl 0x18(%esp),%edi
    test   %edi,%ecx
    je     jump_3c754
    mov    0x8(%esp),%edi
    mov    data_a3cf8(%edx),%cx
    add    %ecx,%edi
    mov    %edi,0x8(%esp)
    jmp    jump_3c754
  jump_3c7ba:
    cmp    0x8(%esp),%si
    jle    jump_3c7c4
    dec    %ebx
    jmp    jump_3c7c7
  jump_3c7c4:
    add    $0x3,%ebx
  jump_3c7c7:
    mov    0xa(%esp),%eax
    sar    $0x10,%eax
    cmpb   $0x1,0x1c0(%eax,%ebp,1)
    jne    jump_3c847
    imul   $0x6,%eax,%eax
    xor    %edx,%edx
    mov    0x0(%ebp),%dl
    imul   $0x6,%edx,%edx
    mov    data_a3cf4(%eax),%eax
    sar    $0x10,%eax
    mov    data_a3cf4(%edx),%edx
    mov    %eax,%ecx
    sar    $0x10,%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    jle    jump_3c807
    sub    $0x2,%ebx
    jmp    jump_3c847
  jump_3c807:
    sub    %eax,%edx
    cmp    $0x1,%edx
    jle    jump_3c847
    add    $0x4,%ebx
    jmp    jump_3c847
  jump_3c813:
    imul   $0x6,%eax,%eax
    imul   $0x6,%ecx,%ecx
    mov    data_a3cf6(%eax),%bx
    sub    data_a3cf6(%ecx),%bx
    movswl %bx,%eax
    test   %eax,%eax
    jge    jump_3c832
    xor    %ebx,%ebx
    jmp    jump_3c847
  jump_3c832:
    cmp    $0x3,%eax
    jle    jump_3c847
    mov    $0x3,%ebx
    jmp    jump_3c847
  jump_3c83e:
    cmp    $0x1,%dl
  jump_3c841:
    je     jump_3c697
  jump_3c847:
    xor    %eax,%eax
    mov    0xa(%esp),%edx
    mov    data_104bea,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    jne    jump_3c8ba
    cmpl   $0x0,data_a0d00
    jne    jump_3c8ba
    movswl %bx,%eax
    test   %eax,%eax
    jl     jump_3c87c
    jmp    jump_3c8ab
  jump_3c873:
    add    %ebx,%ebx
    jmp    jump_3c8ba
  jump_3c877:
    imul   $0x3,%ebx,%ebx
    jmp    jump_3c8ba
  jump_3c87c:
    mov    data_a3d20,%al
    cmp    $0x1,%al
    jb     jump_3c8ba
    jbe    jump_3c873
    cmp    $0x2,%al
    je     jump_3c877
    jmp    jump_3c8ba
  jump_3c88d:
    mov    %ebx,%eax
    cwtd
    sub    %dx,%ax
    sar    %ax
    mov    %eax,%ebx
    jmp    jump_3c8ba
  jump_3c89b:
    mov    %ebx,%eax
    mov    $0x3,%ebx
    cwtd
    idiv   %bx
    mov    %eax,%ebx
    jmp    jump_3c8ba
  jump_3c8ab:
    mov    data_a3d20,%al
    cmp    $0x1,%al
    jb     jump_3c8ba
    jbe    jump_3c88d
    cmp    $0x2,%al
    je     jump_3c89b
  jump_3c8ba:
    test   %bx,%bx
    je     jump_3c8fb
    mov    0xa(%esp),%eax
    sar    $0x10,%eax
    add    %eax,%eax
    add    %ebp,%eax
    add    %bx,0x1b2(%eax)
    mov    0x1b0(%eax),%edx
    sar    $0x10,%edx
    cmp    $0x32,%edx
    jge    jump_3c8ea
    movw   $0x32,0x1b2(%eax)
    jmp    jump_3c8fb
  jump_3c8ea:
    cmp    $0x3b6,%edx
    jle    jump_3c8fb
    movw   $0x3b6,0x1b2(%eax)
  jump_3c8fb:
    mov    0xc(%esp),%ecx
    inc    %ecx
    mov    data_a3cf4,%si
    mov    %cx,0xc(%esp)
    cmp    %si,%cx
    jge    jump_3c95b
  jump_3c911:
    mov    0xa(%esp),%eax
    xor    %ecx,%ecx
    sar    $0x10,%eax
    mov    0x0(%ebp),%cl
    cmp    %ecx,%eax
    je     jump_3c8fb
    lea    (%eax,%ebp,1),%edx
    cmpb   $0x0,0x1c0(%edx)
    je     jump_3c8fb
    imul   $0x1ee,%eax,%esi
    cmpl   $0xffffffff,data_a2f75(%esi)
    je     jump_3c8fb
    mov    0x1c0(%edx),%dl
    xor    %ebx,%ebx
    cmp    $0x2,%dl
    jb     jump_3c83e
    jbe    jump_3c813
    cmp    $0x3,%dl
    jmp    jump_3c841
  jump_3c95b:
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3c968:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x24,%esp
    mov    %eax,%ebx
    mov    data_a2f6c,%eax
    mov    %eax,%edx
    mov    $0xa,%esi
    sar    $0x1f,%edx
    idiv   %esi
    test   %edx,%edx
    jne    jump_3cb56
    mov    data_a2f6c,%eax
    mov    0x1d5(%ebx),%esi
    mov    %eax,%edx
    sar    $0x10,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %edx,0x20(%esp)
    fildl  0x20(%esp)
    filds  0x1d7(%ebx)
    fdivrp %st,%st(1)
    fld    %st(0)
    fmull  data_92150
    fstp   %st(1)
    fstps  0x18(%esp)
    testl  $0x7fffffff,0x18(%esp)
    jne    jump_3c9cf
    movl   $0x3c23d70a,0x18(%esp)
  jump_3c9cf:
    flds   0x1dd(%ebx)
    fstpl  (%esp)
    flds   0x18(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_775e6
    fmull  (%esp)
    fstpl  (%esp)
    flds   0x1e1(%ebx)
    fstpl  0x8(%esp)
    flds   0x18(%esp)
    fmuls  data_92158
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_775e6
    fmull  0x8(%esp)
    faddl  (%esp)
    fstpl  0x8(%esp)
    flds   0x1e5(%ebx)
    fstpl  (%esp)
    flds   0x18(%esp)
    fmuls  data_9215c
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_775e6
    fmull  (%esp)
    faddl  0x8(%esp)
    fstps  0x1c(%esp)
    fldz
    fcomps 0x1c(%esp)
    fnstsw %ax
    sahf
    jbe    jump_3ca57
    flds   0x1c(%esp)
    fadds  data_92160
    jmp    jump_3ca61
  jump_3ca57:
    flds   0x1c(%esp)
    fadds  data_92158
  jump_3ca61:
    fstps  0x1c(%esp)
    filds  0x1d9(%ebx)
    fstps  0x10(%esp)
    flds   0x1c(%esp)
    fcomps 0x10(%esp)
    fnstsw %ax
    sahf
    jbe    jump_3ca82
    mov    0x10(%esp),%edx
    jmp    jump_3ca9d
  jump_3ca82:
    filds  0x1db(%ebx)
    fstps  0x14(%esp)
    flds   0x1c(%esp)
    fcomps 0x14(%esp)
    fnstsw %ax
    sahf
    jae    jump_3caa1
    mov    0x14(%esp),%edx
  jump_3ca9d:
    mov    %edx,0x1c(%esp)
  jump_3caa1:
    mov    (%ebx),%al
    cmp    data_104bea,%al
    jne    jump_3cac2
    flds   0x1c(%esp)
    call   func_76e98
    fistpl 0x20(%esp)
    mov    0x20(%esp),%eax
    mov    %ax,data_104be8
  jump_3cac2:
    mov    data_a3d20,%dl
    cmp    $0x2,%dl
    jne    jump_3cad9
    flds   0x1c(%esp)
    fadds  data_9216c
    jmp    jump_3caf3
  jump_3cad9:
    test   %dl,%dl
    jne    jump_3cae9
    flds   0x1c(%esp)
    fadds  data_92168
    jmp    jump_3caf3
  jump_3cae9:
    flds   0x1c(%esp)
    fadds  data_92164
  jump_3caf3:
    fstps  0x1c(%esp)
    mov    data_a3cf4,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_3cb56
    jmp    jump_3cb14
  jump_3cb07:
    mov    data_a3cf4,%cx
    inc    %eax
    cmp    %cx,%ax
    jge    jump_3cb56
  jump_3cb14:
    movswl %ax,%edx
    cmpb   $0x0,0x1c0(%edx,%ebx,1)
    je     jump_3cb07
    imul   $0x1ee,%edx,%esi
    cmpl   $0x0,data_a2f75(%esi)
    jne    jump_3cb07
    filds  0x1b2(%ebx,%edx,2)
    fld    %st(0)
    fadds  0x1c(%esp)
    fstp   %st(1)
    call   func_76e98
    fistpl 0x20(%esp)
    mov    0x20(%esp),%esi
    mov    %si,0x1b2(%ebx,%edx,2)
    jmp    jump_3cb07
  jump_3cb56:
    add    $0x24,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3cb60:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %bl,%cl
    xor    %eax,%eax
    mov    0x44(%edx),%ax
    test   %eax,%eax
    je     jump_3cc85
    mov    $0x16,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3cc02
    cmpl   $0xaa,data_a2f6c
    jg     jump_3cbb0
    mov    data_a3d1d,%eax
    sar    $0x18,%eax
    cmp    $0x2,%eax
    jne    jump_3cc85
  jump_3cbb0:
    xor    %edx,%edx
    mov    data_104311,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    (%edi),%cl
    mov    data_10529f(%eax),%edx
    mov    $0x1,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_3cc85
    mov    $0x16,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    call   func_34ae4
    test   %eax,%eax
    jne    jump_3cc78
    mov    $0x2,%eax
    jmp    jump_3cc87
  jump_3cc02:
    mov    %esi,%eax
    call   func_362e0
    test   %eax,%eax
    je     jump_3cc85
    mov    0x57(%esi),%al
    cmp    data_104bea,%al
    jne    jump_3cc25
    cmpl   $0xffffffff,data_a0d00
    jne    jump_3cc85
  jump_3cc25:
    mov    $0x17,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    call   func_34ae4
    mov    %eax,(%esp)
    cmp    $0xffff,%eax
    je     jump_3cc85
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_40144
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_3cc5b
    mov    $0x537,%ebx
    mov    $data_92170,%edx
    call   func_26198
  jump_3cc5b:
    movsbl %cl,%ecx
    mov    %esi,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_3f060
    mov    %ebp,%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    mov    (%esp),%dx
    call   func_35b04
  jump_3cc78:
    mov    $0x1,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_3cc85:
    xor    %eax,%eax
  jump_3cc87:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3cce4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xf8,%esp
    mov    %eax,%ebx
    mov    %edx,%esi
    mov    $0xffffffff,%ecx
    xor    %ebp,%ebp
    mov    $0x3f800000,%eax
    mov    %ebp,0xbc(%esp)
    mov    %ecx,0xc8(%esp)
    mov    %ebp,0xc0(%esp)
    mov    %eax,0xb8(%esp)
    mov    %eax,%edx
    mov    %eax,0xac(%esp)
    mov    %eax,0xc4(%esp)
    mov    %eax,%edi
    mov    %eax,0xb4(%esp)
    mov    %eax,0xb0(%esp)
    mov    %ebp,0x9c(%esp)
    mov    %ebp,0xec(%esp)
    mov    %eax,%ecx
    xor    %eax,%edx
    xor    %eax,%edi
    mov    %edx,0xa8(%esp)
    xor    %eax,%ecx
    mov    %edi,0xe4(%esp)
    mov    %ecx,0xe0(%esp)
    mov    %esi,%eax
    xor    %edx,%edx
    call   func_36158
    mov    data_104299,%dl
    mov    %eax,%edi
    cmp    $0xff,%edx
    je     jump_3cda6
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    0x57(%esi),%cl
    mov    data_10529f(%eax),%edx
    mov    $0x1,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_3cdb1
  jump_3cda6:
    movl   $0xffffffff,0xe0(%esp)
  jump_3cdb1:
    xor    %edx,%edx
    mov    data_104299,%dl
    cmp    $0xff,%edx
    je     jump_3cde8
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    0x57(%esi),%cl
    mov    data_10529f(%eax),%edx
    mov    $0x1,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_3cdf3
  jump_3cde8:
    movl   $0xffffffff,0xe4(%esp)
  jump_3cdf3:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x4a(%esi),%dx
    mov    0x42(%esi),%ax
    sub    %eax,%edx
    test   %edx,%edx
    jle    jump_3ce10
    movl   $0xffffffff,0x9c(%esp)
  jump_3ce10:
    mov    %ebx,%eax
    call   func_40590
    test   %eax,%eax
    je     jump_3ce26
    movl   $0xffffffff,0xbc(%esp)
  jump_3ce26:
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    $0x2,%eax
    jge    jump_3ce4e
    mov    $0xffffffff,%ecx
    mov    $0x40000000,%ebp
    mov    %ecx,0xec(%esp)
    mov    %ebp,0xc4(%esp)
    mov    $0x4,%ebp
  jump_3ce4e:
    xor    %eax,%eax
    mov    0x1c(%esi),%ax
    cmp    $0x1,%eax
    jge    jump_3ce90
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x4a(%esi),%dx
    mov    0x42(%esi),%ax
    sub    %eax,%edx
    cmp    $0x3,%edx
    jle    jump_3ce90
    cmpl   $0x0,0xe4(%esp)
    je     jump_3ce90
    mov    $0x3f000000,%ecx
    mov    $0xffffffff,%eax
    mov    %ecx,0xb4(%esp)
    mov    %eax,0xa8(%esp)
    jmp    jump_3cec8
  jump_3ce90:
    xor    %eax,%eax
    mov    0x1c(%esi),%ax
    cmp    $0x1,%eax
    jle    jump_3cec8
    xor    %eax,%eax
    xor    %edx,%edx
    mov    0x4a(%esi),%ax
    mov    0x42(%esi),%dx
    sub    %edx,%eax
    cmp    $0x2,%eax
    jge    jump_3cec8
    mov    0x9c(%esp),%edx
    mov    $0x8,%ebp
    cmp    $0xffffffff,%edx
    jne    jump_3cec8
    xor    %ebx,%ebx
    mov    %ebx,0xb4(%esp)
  jump_3cec8:
    cmp    $0x4,%edi
    jge    jump_3cee1
    movl   $0x40000000,0xb0(%esp)
    test   %ebp,%ebp
    jne    jump_3cee1
    mov    $0x10,%ebp
  jump_3cee1:
    cmpl   $0x0,0xbc(%esp)
    je     jump_3cef4
    xor    %ecx,%ecx
    mov    %ecx,0xac(%esp)
  jump_3cef4:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x42(%esi),%dx
    mov    0x4c(%esi),%ax
    sub    %eax,%edx
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    %eax,%edx
    jle    jump_3cf27
    cmp    $0x3,%eax
    jge    jump_3cf27
    movl   $0x40000000,0xc4(%esp)
    test   %ebp,%ebp
    jne    jump_3cf4f
    mov    $0x4,%ebp
    jmp    jump_3cf4f
  jump_3cf27:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x42(%esi),%dx
    mov    0x4c(%esi),%ax
    sub    %eax,%edx
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    %eax,%edx
    jl     jump_3cf44
    cmp    $0x5,%eax
    jle    jump_3cf4f
  jump_3cf44:
    movl   $0x3f000000,0xc4(%esp)
  jump_3cf4f:
    xor    %ebx,%ebx
    mov    0x44(%esi),%bx
    cmp    $0x19,%ebx
    jge    jump_3cf95
    test   %ebx,%ebx
    jle    jump_3cf81
    mov    $0x19,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0xa0(%esp)
    fildl  0xa0(%esp)
    fstps  0xb8(%esp)
    jmp    jump_3cf8c
  jump_3cf81:
    movl   $0x41c80000,0xb8(%esp)
  jump_3cf8c:
    test   %ebp,%ebp
    jne    jump_3cf95
    mov    $0x2,%ebp
  jump_3cf95:
    cmpl   $0x0,0xbc(%esp)
    jne    jump_3cfe5
    xor    %ebx,%ebx
    mov    0x46(%esi),%bx
    cmp    $0x19,%ebx
    jge    jump_3cfe5
    test   %ebx,%ebx
    jle    jump_3cfd1
    mov    $0x19,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0xa0(%esp)
    fildl  0xa0(%esp)
    fstps  0xb8(%esp)
    jmp    jump_3cfdc
  jump_3cfd1:
    movl   $0x41c80000,0xb8(%esp)
  jump_3cfdc:
    test   %ebp,%ebp
    jne    jump_3cfe5
    mov    $0x1,%ebp
  jump_3cfe5:
    xor    %eax,%eax
    mov    0x18(%esi),%ax
    lea    0x0(,%eax,2),%ebx
    lea    0x0(,%edi,4),%eax
    add    %edi,%eax
    cmp    %ebx,%eax
    jge    jump_3d013
    movl   $0x3fc00000,0xb0(%esp)
    test   %ebp,%ebp
    jne    jump_3d013
    mov    $0x10,%ebp
  jump_3d013:
    xor    %ecx,%ecx
    xor    %edx,%edx
    jmp    jump_3d135
  jump_3d01c:
    addl   $0x2,0xa4(%esp)
    jmp    jump_3d03d
  jump_3d026:
    addl   $0x4,0xa4(%esp)
    jmp    jump_3d03d
  jump_3d030:
    mov    0x1(%edi),%al
    cmp    $0x12,%al
    jb     jump_3d03d
    jbe    jump_3d01c
    cmp    $0x13,%al
    je     jump_3d026
  jump_3d03d:
    mov    (%ebx),%eax
    mov    0xcc(%esp),%ebx
    sar    $0x18,%eax
    add    %eax,%ebx
    mov    %ebx,0xcc(%esp)
  jump_3d052:
    fildl  0xd4(%esp)
    fmuls  0xb8(%esp)
    fstps  0xdc(%esp)
    fildl  0xd0(%esp)
    fmuls  0xac(%esp)
    fadds  0xdc(%esp)
    fstps  0xdc(%esp)
    fildl  0xd8(%esp)
    fmuls  0xc4(%esp)
    fadds  0xdc(%esp)
    fstps  0xdc(%esp)
    fildl  0xcc(%esp)
    fmuls  0xb4(%esp)
    mov    0x10(%esi),%eax
    fadds  0xdc(%esp)
    mov    0x2(%edx,%eax,1),%ax
    fstps  0xdc(%esp)
    fildl  0xa4(%esp)
    fmuls  0xb0(%esp)
    xor    %ah,%ah
    fadds  0xdc(%esp)
    and    $0x2,%al
    fstps  0xdc(%esp)
    and    $0xffff,%eax
    je     jump_3d0ff
    flds   0xdc(%esp)
    fadds  0xc4(%esp)
    fstps  0xdc(%esp)
  jump_3d0ff:
    cmpl   $0xffffffff,0xc8(%esp)
    je     jump_3d11c
    flds   0xdc(%esp)
    fcomps 0xc0(%esp)
    fnstsw %ax
    sahf
    jae    jump_3d131
  jump_3d11c:
    mov    0xdc(%esp),%eax
    mov    %ecx,0xc8(%esp)
    mov    %eax,0xc0(%esp)
  jump_3d131:
    add    $0x4,%edx
    inc    %ecx
  jump_3d135:
    xor    %eax,%eax
    mov    0x18(%esi),%ax
    cmp    %eax,%ecx
    jge    jump_3d2f1
    mov    0x10(%esi),%eax
    xor    %ebx,%ebx
    mov    0x1(%edx,%eax,1),%al
    mov    %al,%bl
    imul   $0x28,%ebx,%ebx
    xor    %edi,%edi
    mov    %edi,0xd4(%esp)
    mov    %edi,0xd0(%esp)
    mov    %edi,0xd8(%esp)
    mov    %edi,0xcc(%esp)
    mov    %edi,0xa4(%esp)
    add    $data_103f9c,%ebx
    cmp    $0xff,%al
    je     jump_3d131
    cmp    $0x4,%al
    je     jump_3d131
    cmp    $0x6,%al
    je     jump_3d131
    cmp    $0x7,%al
    je     jump_3d131
    cmp    $0x8,%al
    je     jump_3d131
    cmp    $0x13,%al
    je     jump_3d131
    cmp    $0x5,%al
    je     jump_3d131
    cmp    $0xb,%al
    je     jump_3d131
    cmp    $0xc,%al
    je     jump_3d131
    cmp    $0xd,%al
    je     jump_3d131
    cmp    $0xe,%al
    je     jump_3d131
    cmp    $0xf,%al
    je     jump_3d131
    cmp    $0x11,%al
    je     jump_3d131
    cmp    $0x10,%al
    je     jump_3d131
    cmp    $0x12,%al
    jne    jump_3d1d7
    cmpl   $0x0,0xe0(%esp)
    je     jump_3d131
    cmp    $0x10,%ebp
    je     jump_3d1d7
    test   %ebp,%ebp
    jne    jump_3d131
  jump_3d1d7:
    cmp    $0x3,%al
    jne    jump_3d1e9
    cmpl   $0x0,0xa8(%esp)
    je     jump_3d131
  jump_3d1e9:
    cmp    $0x14,%al
    jne    jump_3d1fb
    cmpl   $0x0,0x9c(%esp)
    je     jump_3d131
  jump_3d1fb:
    cmp    $0x9,%al
    je     jump_3d203
    cmp    $0xa,%al
    jne    jump_3d211
  jump_3d203:
    cmpl   $0x0,0xbc(%esp)
    je     jump_3d131
  jump_3d211:
    mov    0x10(%esi),%edi
    add    %edx,%edi
    mov    0x2(%edi),%ax
    xor    %ah,%ah
    and    $0x1,%al
    mov    %eax,0xf0(%esp)
    xor    %eax,%eax
    mov    0xf0(%esp),%ax
    test   %eax,%eax
    je     jump_3d052
    mov    (%ebx),%ah
    test   %ah,%ah
    je     jump_3d256
    movsbl %ah,%eax
    movzbl (%edi),%edi
    add    %eax,0xd4(%esp)
    cmp    $0x2,%edi
    jne    jump_3d256
    incl   0xd4(%esp)
  jump_3d256:
    mov    0x2(%ebx),%al
    test   %al,%al
    je     jump_3d28a
    mov    0xd8(%esp),%edi
    movsbl %al,%eax
    add    %eax,%edi
    mov    0x10(%esi),%eax
    mov    %edi,0xd8(%esp)
    mov    (%edx,%eax,1),%al
    and    $0xff,%eax
    cmp    $0x3,%eax
    jne    jump_3d28a
    lea    0x1(%edi),%eax
    mov    %eax,0xd8(%esp)
  jump_3d28a:
    mov    0x1(%ebx),%ah
    test   %ah,%ah
    je     jump_3d2bc
    mov    0xd0(%esp),%edi
    movsbl %ah,%eax
    add    %eax,%edi
    mov    0x10(%esi),%eax
    mov    %edi,0xd0(%esp)
    mov    (%edx,%eax,1),%al
    and    $0xff,%eax
    cmp    $0x4,%eax
    jne    jump_3d2bc
    inc    %edi
    mov    %edi,0xd0(%esp)
  jump_3d2bc:
    mov    0x10(%esi),%edi
    add    %edx,%edi
    cmpb   $0xff,0x1(%edi)
    je     jump_3d03d
    mov    0x2(%edi),%ax
    xor    %ah,%ah
    and    $0x1,%al
    mov    %eax,0xf0(%esp)
    xor    %eax,%eax
    mov    0xf0(%esp),%ax
    test   %eax,%eax
    jne    jump_3d030
    jmp    jump_3d03d
  jump_3d2f1:
    cmpl   $0xffffffff,0xc8(%esp)
    je     jump_3d8cd
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %edx,0xe8(%esp)
    xor    %eax,%eax
    xor    %edx,%edx
    jmp    jump_3d32f
  jump_3d31d:
    xor    %ebx,%ebx
    mov    %ebx,(%esp,%eax,1)
  jump_3d322:
    add    $0x4,%eax
    add    $0x28,%edx
    cmp    $0x9c,%eax
    je     jump_3d362
  jump_3d32f:
    xor    %ebx,%ebx
    mov    data_103fa1(%edx),%bl
    cmp    $0xff,%ebx
    je     jump_3d359
    imul   $0x4b,%ebx,%ebx
    mov    0x57(%esi),%cl
    mov    data_10529f(%ebx),%edi
    mov    $0x1,%ebx
    sar    $0x18,%edi
    shl    %cl,%ebx
    test   %ebx,%edi
    je     jump_3d31d
  jump_3d359:
    movl   $0xffffffff,(%esp,%eax,1)
    jmp    jump_3d322
  jump_3d362:
    mov    $0xff,%ah
    mov    0xc8(%esp),%ebx
    mov    %ah,0xf4(%esp)
    mov    0x10(%esi),%eax
    mov    0x1(%eax,%ebx,4),%bl
    mov    %bl,%bh
    cmp    $0x2,%bl
    je     jump_3d38a
    cmp    $0x9,%bl
    je     jump_3d38a
    cmp    $0xa,%bl
    jne    jump_3d3b3
  jump_3d38a:
    mov    0xbc(%esp),%eax
    cmp    $0xffffffff,%eax
    jne    jump_3d3b3
    cmp    0xec(%esp),%eax
    jne    jump_3d3a3
    mov    $0x1,%bl
    jmp    jump_3d3b3
  jump_3d3a3:
    cmpl   $0x19,0xe8(%esp)
    jge    jump_3d3b1
    mov    $0x12,%bl
    jmp    jump_3d3b3
  jump_3d3b1:
    xor    %bl,%bl
  jump_3d3b3:
    cmp    $0x2,%ebp
    jb     jump_3d402
    jbe    jump_3d3d5
    cmp    $0x8,%ebp
    jb     jump_3d3f8
    jbe    jump_3d3ea
    cmp    $0x10,%ebp
    je     jump_3d3f1
    jmp    jump_3d86d
  jump_3d3cb:
    cmpl   $0x0,0xbc(%esp)
    je     jump_3d3dc
  jump_3d3d5:
    xor    %bl,%bl
    jmp    jump_3d86d
  jump_3d3dc:
    mov    $0x2,%bl
    jmp    jump_3d86d
  jump_3d3e3:
    mov    $0x1,%bl
    jmp    jump_3d86d
  jump_3d3ea:
    mov    $0x14,%bl
    jmp    jump_3d86d
  jump_3d3f1:
    mov    $0x12,%bl
    jmp    jump_3d86d
  jump_3d3f8:
    cmp    $0x4,%ebp
    je     jump_3d3e3
    jmp    jump_3d86d
  jump_3d402:
    test   %ebp,%ebp
    jbe    jump_3d86d
    jmp    jump_3d3cb
  jump_3d40c:
    cmpl   $0x0,0x10(%esp)
    je     jump_3d420
    movb   $0x4,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d420:
    cmpl   $0x0,0xc(%esp)
    je     jump_3d434
    movb   $0x3,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d434:
    cmp    %bl,%bh
    je     jump_3d44e
    cmpl   $0x0,0x50(%esp)
    je     jump_3d44e
    mov    %bl,0xf4(%esp)
  jump_3d44e:
    cmpb   $0x27,0xf4(%esp)
    jae    jump_3d8cd
    mov    %bh,%bl
    mov    $0x1,%ecx
    and    $0xff,%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0xc8(%esp),%dx
    call   func_34b0c
    test   %eax,%eax
    je     jump_3d8cd
    mov    0xc8(%esp),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    xor    %ecx,%ecx
    mov    0xf4(%esp),%dl
    call   func_34774
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    add    $0xf8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3d4ae:
    mov    $0xc,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3d4da
    cmpl   $0x0,0x30(%esp)
    je     jump_3d4da
    movb   $0xc,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d4da:
    mov    $0x11,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3d506
    cmpl   $0x0,0x44(%esp)
    je     jump_3d506
    movb   $0x11,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d506:
    mov    $0xb,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3d532
    cmpl   $0x0,0x2c(%esp)
    je     jump_3d532
    movb   $0xb,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d532:
    cmpl   $0x0,0x10(%esp)
    je     jump_3d561
    cmpl   $0x0,0x18(%esp)
    je     jump_3d561
    cmpl   $0x32,0xe8(%esp)
    jge    jump_3d586
    cmpl   $0x0,0xbc(%esp)
    jne    jump_3d586
    movb   $0x4,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d561:
    cmpl   $0x0,0x10(%esp)
    je     jump_3d57f
    cmpl   $0x0,0xbc(%esp)
    jne    jump_3d57f
    movb   $0x4,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d57f:
    cmpl   $0x0,0x18(%esp)
    je     jump_3d593
  jump_3d586:
    movb   $0x6,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d593:
    cmpl   $0x0,0x28(%esp)
    je     jump_3d5b1
    cmpl   $0x0,0xbc(%esp)
    jne    jump_3d5b1
    movb   $0xa,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d5b1:
    cmp    %bl,%bh
    je     jump_3d44e
    cmpl   $0x0,(%esp)
    je     jump_3d44e
    xor    %ch,%ch
    mov    %ch,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d5d1:
    cmpl   $0x0,0xec(%esp)
    jne    jump_3d607
    mov    $0xf,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3d607
    cmpl   $0x0,0x3c(%esp)
    je     jump_3d607
    movb   $0xf,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d607:
    cmpl   $0x0,0xec(%esp)
    jne    jump_3d63d
    mov    $0x11,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3d63d
    cmpl   $0x0,0x44(%esp)
    je     jump_3d63d
    movb   $0x11,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d63d:
    cmpl   $0x0,0xec(%esp)
    jne    jump_3d673
    mov    $0xb,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3d673
    cmpl   $0x0,0x2c(%esp)
    je     jump_3d673
    movb   $0xb,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d673:
    cmpl   $0x0,0x10(%esp)
    je     jump_3d6a2
    cmpl   $0x0,0x1c(%esp)
    je     jump_3d6a2
    cmpl   $0x32,0xe8(%esp)
    jge    jump_3d6c7
    cmpl   $0x0,0xbc(%esp)
    jne    jump_3d6c7
    movb   $0x4,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d6a2:
    cmpl   $0x0,0x10(%esp)
    je     jump_3d6c0
    cmpl   $0x0,0xbc(%esp)
    jne    jump_3d6c0
    movb   $0x4,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d6c0:
    cmpl   $0x0,0x1c(%esp)
    je     jump_3d6d4
  jump_3d6c7:
    movb   $0x7,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d6d4:
    cmpl   $0x0,0x24(%esp)
    je     jump_3d6f2
    cmpl   $0x0,0xbc(%esp)
    jne    jump_3d6f2
    movb   $0x9,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d6f2:
    cmp    %bl,%bh
    je     jump_3d44e
    cmpl   $0x0,0x4(%esp)
    je     jump_3d44e
    movb   $0x1,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d712:
    mov    $0xe,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3d73e
    cmpl   $0x0,0x38(%esp)
    je     jump_3d73e
    movb   $0xe,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d73e:
    mov    $0x11,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3d76a
    cmpl   $0x0,0x44(%esp)
    je     jump_3d76a
    movb   $0x11,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d76a:
    mov    $0xb,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3d796
    cmpl   $0x0,0x2c(%esp)
    je     jump_3d796
    movb   $0xb,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d796:
    cmpl   $0x0,0x20(%esp)
    je     jump_3d7aa
    movb   $0x8,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d7aa:
    cmpl   $0x0,0x10(%esp)
    je     jump_3d7be
    movb   $0x4,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d7be:
    cmpl   $0x0,0x28(%esp)
    je     jump_3d7d2
    movb   $0xa,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d7d2:
    cmpl   $0x0,0x24(%esp)
    je     jump_3d7e6
    movb   $0x9,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d7e6:
    cmp    %bl,%bh
    je     jump_3d44e
    cmpl   $0x0,0x8(%esp)
    je     jump_3d44e
    movb   $0x2,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d806:
    cmpl   $0x0,0x4c(%esp)
    je     jump_3d81a
    movb   $0x13,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d81a:
    cmp    %bl,%bh
    je     jump_3d44e
    cmpl   $0x0,0x48(%esp)
    je     jump_3d44e
    movb   $0x12,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d83a:
    cmpl   $0x0,0x10(%esp)
    je     jump_3d84e
    movb   $0x4,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d84e:
    cmp    %bl,%bh
    je     jump_3d44e
    cmpl   $0x0,0xc(%esp)
    je     jump_3d44e
    mov    %bl,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d86d:
    cmp    $0x2,%bl
    jb     jump_3d891
    jbe    jump_3d712
    cmp    $0x12,%bl
    jb     jump_3d88a
    jbe    jump_3d806
    cmp    $0x14,%bl
    je     jump_3d40c
    jmp    jump_3d8cd
  jump_3d88a:
    cmp    $0x3,%bl
    je     jump_3d83a
    jmp    jump_3d8cd
  jump_3d891:
    test   %bl,%bl
    jbe    jump_3d4ae
    mov    $0xd,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3d5d1
    cmpl   $0x0,0x34(%esp)
    je     jump_3d5d1
    movb   $0xd,0xf4(%esp)
    jmp    jump_3d44e
  jump_3d8cd:
    xor    %edx,%edx
    mov    %edx,%eax
    add    $0xf8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret

vtable_3d8e0:
    .long   func_3dd6e
    .long   func_3dd80
    .long   func_3dd5a
    .long   func_3dd45


/*----------------------------------------------------------------*/
func_3d8f0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10c,%esp
    mov    %eax,0xd8(%esp)
    mov    %edx,%esi
    lea    0xcc(%esp),%ecx
    lea    0xc4(%esp),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    mov    %edx,0xd4(%esp)
    mov    %edx,0xf8(%esp)
    lea    0xc8(%esp),%edx
    call   func_34a44
    mov    0xd8(%esp),%eax
    call   func_40590
    cmp    $0xffffffff,%eax
    jne    jump_3d971
    mov    0xc8(%esp),%eax
    mov    0xc4(%esp),%ecx
    mov    0xcc(%esp),%ebp
    add    %eax,%ecx
    add    %eax,%ebp
    mov    %ecx,0xc4(%esp)
    xor    %eax,%eax
    mov    %ebp,0xcc(%esp)
    mov    %eax,0xc8(%esp)
  jump_3d971:
    mov    %esi,%eax
    call   func_358f0
    cmp    $0x1,%eax
    jge    jump_3d999
    cmpl   $0x0,0xc4(%esp)
    jle    jump_3da0a
  jump_3d98b:
    mov    $0xffffffff,%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    jmp    jump_3da16
  jump_3d999:
    cmp    $0x2,%eax
    jge    jump_3d9b5
    cmpl   $0x0,0xcc(%esp)
    jle    jump_3d98b
    xor    %eax,%eax
    mov    0x44(%esi),%ax
    cmp    $0x1,%eax
    jle    jump_3d98b
    jmp    jump_3da0a
  jump_3d9b5:
    cmp    $0x3,%eax
    jge    jump_3da26
    cmpl   $0x0,0xc8(%esp)
    jle    jump_3d9ea
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    $0x1,%eax
    jle    jump_3d9ea
    xor    %eax,%eax
    mov    0x44(%esi),%ax
    cmp    $0x1,%eax
    jle    jump_3d9ea
    mov    $0xffffffff,%ebx
    mov    $0x2,%edx
    jmp    jump_3da14
  jump_3d9ea:
    cmpl   $0x0,0xc4(%esp)
    jle    jump_3da0a
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    $0x1,%eax
    jle    jump_3da0a
    mov    $0xffffffff,%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    jmp    jump_3da16
  jump_3da0a:
    mov    $0xffffffff,%ebx
    mov    $0x1,%edx
  jump_3da14:
    mov    %esi,%eax
  jump_3da16:
    call   func_34ae4
    cmp    $0xffff,%eax
    jne    jump_3e011
  jump_3da26:
    xor    %eax,%eax
    mov    0x44(%esi),%ax
    test   %eax,%eax
    je     jump_3e011
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    $0x2,%eax
    jge    jump_3da6a
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x4a(%esi),%dx
    mov    0x42(%esi),%ax
    sub    %eax,%edx
    cmp    $0x1,%edx
    jge    jump_3da6a
    xor    %edx,%edx
    mov    0x4c(%esi),%dx
    sub    %edx,%eax
    cmp    $0x1,%eax
    jge    jump_3da6a
    movl   $0xffffffff,0xf8(%esp)
  jump_3da6a:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x4a(%esi),%dx
    mov    0x42(%esi),%ax
    sub    %eax,%edx
    cmp    $0x1,%edx
    jge    jump_3da95
    xor    %edx,%edx
    mov    0x4c(%esi),%dx
    sub    %edx,%eax
    cmp    $0x2,%eax
    jge    jump_3da95
    movl   $0xffffffff,0xd4(%esp)
  jump_3da95:
    mov    0xd8(%esp),%eax
    mov    %esi,%edx
    call   func_3e1cc
    cwtl
    mov    %eax,0xe4(%esp)
    cmp    $0x1,%eax
    je     jump_3e011
    mov    %esi,%eax
    call   func_3407c
    test   %eax,%eax
    setle  %al
    and    $0xff,%eax
    dec    %eax
    mov    %eax,0xf4(%esp)
    mov    %esi,%eax
    call   func_3420c
    test   %eax,%eax
    setle  %al
    and    $0xff,%eax
    mov    $0xffffffff,%ebx
    dec    %eax
    mov    $0x26,%edx
    mov    %eax,0xf0(%esp)
    mov    %esi,%eax
    call   func_34ae4
    mov    %eax,%edx
    cmp    $0xffff,%eax
    sete   %al
    movzbl %al,%ebp
    dec    %ebp
    mov    $0x1,%ecx
    mov    $0x26,%ebx
    and    $0xffff,%edx
    mov    %esi,%eax
    call   func_34b0c
    xor    %eax,%eax
    mov    0x1c(%esi),%ax
    test   %eax,%eax
    je     jump_3e003
    cmpl   $0x0,0xf4(%esp)
    jne    jump_3db46
    cmpl   $0x0,0xf0(%esp)
    jne    jump_3db46
    test   %ebp,%ebp
    je     jump_3e003
  jump_3db46:
    cmp    $0xffffffff,%ebp
    jne    jump_3db5e
    mov    0xd8(%esp),%eax
    mov    %esi,%edx
    call   func_3e520
    jmp    jump_3e011
  jump_3db5e:
    mov    0xf4(%esp),%edx
    cmp    $0xffffffff,%edx
    jne    jump_3df1e
    mov    %edx,0xe0(%esp)
    mov    0x4c(%esi),%ax
    mov    0x4a(%esi),%bx
    xor    %ebp,%ebp
    cmp    %bx,%ax
    jb     jump_3dc24
    xor    %eax,%eax
    xor    %edx,%edx
    jmp    jump_3db92
  jump_3db8e:
    add    $0x4,%edx
    inc    %eax
  jump_3db92:
    xor    %ebx,%ebx
    mov    0x18(%esi),%bx
    cmp    %ebx,%eax
    jge    jump_3dbd7
    mov    0x10(%esi),%edi
    add    %edx,%edi
    mov    0x1(%edi),%bl
    cmp    $0xff,%bl
    je     jump_3db8e
    cmp    $0x5,%bl
    je     jump_3db8e
    xor    %ebx,%ebx
    mov    0x1(%edi),%bl
    imul   $0x28,%ebx,%ebx
    add    $data_103f9c,%ebx
    cmpb   $0x0,0x3(%ebx)
    jne    jump_3db8e
    mov    0x1(%ebx),%ebx
    sar    $0x18,%ebx
    cmp    %ebp,%ebx
    jle    jump_3db8e
    mov    %ebx,%ebp
    mov    %eax,0xe0(%esp)
    jmp    jump_3db8e
  jump_3dbd7:
    cmpl   $0xffffffff,0xe0(%esp)
    je     jump_3dc0c
    mov    $0x1,%ecx
    mov    %esi,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    0xe0(%esp),%dx
    mov    0x1(%edi),%bl
    call   func_34b0c
    mov    0x4c(%esi),%ax
    cmp    0x42(%esi),%ax
    jae    jump_3e011
    jmp    jump_3dc3c
  jump_3dc0c:
    call   func_26194
    mov    %esi,%eax
    call   func_37040
    add    $0x10c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3dc24:
    cmp    0x42(%esi),%ax
    jae    jump_3e011
    cmpl   $0x2,0xe4(%esp)
    je     jump_3e011
  jump_3dc3c:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x42(%esi),%dx
    mov    0x4c(%esi),%ax
    sub    %eax,%edx
    test   %edx,%edx
    jg     jump_3dc5f
    mov    $0x85a,%ebx
    mov    $data_9217c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3dc5f:
    cmpl   $0x0,0xf8(%esp)
    jne    jump_3dc80
    mov    0xd8(%esp),%eax
    mov    %esi,%edx
    call   func_3e520
    cmp    $0xffffffff,%eax
    je     jump_3e011
  jump_3dc80:
    mov    0xd8(%esp),%eax
    mov    %esi,%edx
    call   func_3e800
    cwtl
    mov    %eax,0xe8(%esp)
    cmp    $0xffffffff,%eax
    jne    jump_3dcac
    mov    $0x870,%ebx
    mov    $data_92188,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3dcac:
    mov    0xe8(%esp),%eax
    xor    %ebx,%ebx
    xor    %ebp,%ebp
    xor    %edi,%edi
    shl    $0x2,%eax
    xor    %edx,%edx
    mov    %eax,0xdc(%esp)
  jump_3dcc5:
    cmp    $0x5,%bl
    je     jump_3dd36
    xor    %eax,%eax
    mov    data_103f98,%ax
    cmp    %eax,%ebx
    jge    jump_3dd36
    xor    %eax,%eax
    mov    data_103fa1(%edi),%al
    cmp    $0xff,%eax
    je     jump_3dd0d
    imul   $0x4b,%eax,%eax
    mov    data_10529f(%eax),%eax
    sar    $0x18,%eax
    mov    0x57(%esi),%cl
    mov    %eax,0xd0(%esp)
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    %eax,%ecx
    test   %ecx,0xd0(%esp)
    je     jump_3dd36
  jump_3dd0d:
    xor    %eax,%eax
    mov    0x4a(%esi),%ax
    mov    %eax,0xd0(%esp)
    xor    %eax,%eax
    mov    0xd0(%esp),%ecx
    mov    0x4c(%esi),%ax
    sub    %eax,%ecx
    mov    data_103f9d(%edi),%eax
    sar    $0x18,%eax
    cmp    %ecx,%eax
    jle    jump_3dd94
  jump_3dd36:
    inc    %ebx
    add    $0x28,%edi
    cmp    $0x27,%ebx
    jge    jump_3de1d
    jmp    jump_3dcc5


/*----------------------------------------------------------------*/
func_3dd45:
/*----------------------------------------------------------------*/
    mov    (%eax),%ecx
    sar    $0x18,%ecx
    test   %ecx,%ecx
    je     jump_3dd36
    movsbw 0x3(%eax),%cx
    mov    %cx,0x1(%esp,%edx,1)
    jmp    jump_3ddb5


/*----------------------------------------------------------------*/
func_3dd5a:
/*----------------------------------------------------------------*/
    movsbl 0x2(%eax),%ecx
    test   %ecx,%ecx
    je     jump_3dd36
    movsbw 0x2(%eax),%cx
    mov    %cx,0x1(%esp,%edx,1)
    jmp    jump_3ddb5


/*----------------------------------------------------------------*/
func_3dd6e:
/*----------------------------------------------------------------*/
    movsbl (%eax),%ecx
    test   %ecx,%ecx
    je     jump_3dd36
    movsbw (%eax),%cx
    mov    %cx,0x1(%esp,%edx,1)
    jmp    jump_3ddb5


/*----------------------------------------------------------------*/
func_3dd80:
/*----------------------------------------------------------------*/
    movsbl 0x1(%eax),%ecx
    test   %ecx,%ecx
    je     jump_3dd36
    movsbw 0x1(%eax),%cx
    mov    %cx,0x1(%esp,%edx,1)
    jmp    jump_3ddb5
  jump_3dd94:
    mov    $data_103f9c,%eax
    mov    0xe8(%esp),%ecx
    add    %edi,%eax
    cmp    $0x3,%ecx
    ja     jump_3ddb5
    mov    0xdc(%esp),%ecx
    jmp    *%cs:vtable_3d8e0(%ecx)
  jump_3ddb5:
    movsbw 0x3(%eax),%cx
    mov    %ecx,0x100(%esp)
    movsbw 0x2(%eax),%cx
    mov    %ecx,0x104(%esp)
    mov    0x100(%esp),%ecx
    add    0x104(%esp),%ecx
    add    $0x5,%edx
    mov    %ecx,0x104(%esp)
    movsbw 0x1(%eax),%cx
    inc    %ebp
    mov    %ecx,0x100(%esp)
    mov    0x104(%esp),%ecx
    movsbw (%eax),%ax
    add    0x100(%esp),%ecx
    mov    %bl,-0x5(%esp,%edx,1)
    add    %ecx,%eax
    mov    %ax,-0x2(%esp,%edx,1)
    inc    %ebx
    add    $0x28,%edi
    cmp    $0x27,%ebx
    jge    jump_3de1d
    jmp    jump_3dcc5
  jump_3de1d:
    test   %ebp,%ebp
    jne    jump_3de38
    mov    0xd8(%esp),%eax
    mov    %esi,%edx
    call   func_3cce4
    cmp    $0xffffffff,%eax
    je     jump_3e011
  jump_3de38:
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    $0xff,%ch
    xor    %edi,%edi
    mov    %ch,0x108(%esp)
    mov    %edx,0xec(%esp)
    xor    %ebx,%ebx
    test   %ebp,%ebp
    jg     jump_3de66
    jmp    jump_3def2
  jump_3de66:
    mov    %esp,%ecx
  jump_3de68:
    xor    %edx,%edx
    mov    %esi,%eax
    mov    (%ecx),%dl
    mov    %ecx,0xfc(%esp)
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3deba
    xor    %edx,%edx
    mov    (%ecx),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    data_103fa4(,%eax,8),%dx
    mov    0x44(%esi),%bx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x46,%eax
    jge    jump_3def2
    mov    (%ecx),%al
    mov    %al,0x108(%esp)
    jmp    jump_3def2
  jump_3deba:
    cmpl   $0x41,0xec(%esp)
    jle    jump_3decc
    mov    0x1(%ecx),%eax
    sar    $0x10,%eax
    jmp    jump_3ded0
  jump_3decc:
    movswl 0x1(%ecx),%eax
  jump_3ded0:
    cmp    %edi,%eax
    jle    jump_3dee6
    mov    %eax,%edi
    mov    0xfc(%esp),%eax
    mov    (%eax),%al
    mov    %al,0x108(%esp)
  jump_3dee6:
    inc    %ebx
    add    $0x5,%ecx
    cmp    %ebp,%ebx
    jl     jump_3de68
  jump_3def2:
    mov    0x108(%esp),%al
    cmp    $0xff,%al
    je     jump_3e011
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %al,%dl
    mov    %esi,%eax
    call   func_34ae4
    cmp    $0xffff,%eax
    jne    jump_3e011
    jmp    jump_3e003
  jump_3df1e:
    xor    %edx,%edx
    mov    data_104541,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    0x57(%esi),%cl
    mov    data_10529f(%eax),%eax
    mov    $0x1,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_3dfd7
    mov    $0x15,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    mov    %eax,0xe0(%esp)
    cmp    $0xffff,%eax
    je     jump_3dfc0
    mov    $0x1,%ecx
    xor    %edi,%edi
    mov    $0x15,%ebx
    mov    0xe0(%esp),%di
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_34b0c
    mov    $0x24,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_34368
    test   %eax,%eax
    je     jump_3e003
    mov    0xe0(%esp),%ebx
    mov    $0x24,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_34774
    add    $0x10c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3dfc0:
    mov    $0x24,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    call   func_34ae4
    cmp    $0xffff,%eax
    jne    jump_3e011
    jmp    jump_3e003
  jump_3dfd7:
    mov    0x1c(%esi),%ax
    cmp    0x20(%esi),%ax
    jbe    jump_3e003
    cmpl   $0xffffffff,0xd4(%esp)
    je     jump_3e003
    mov    $0xffffffff,%ebx
    mov    $0x15,%edx
    mov    %esi,%eax
    call   func_34ae4
    cmp    $0xffff,%eax
    jne    jump_3e011
  jump_3e003:
    mov    0xd8(%esp),%eax
    mov    %esi,%edx
    call   func_3cce4
  jump_3e011:
    add    $0x10c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3e020:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %edx,%ebp
    mov    %bl,0x1c(%esp)
    cmp    $0x1e,%bl
    ja     jump_3e03c
    cmp    $0x16,%bl
    jb     jump_3e03c
    cmp    $0x17,%bl
    jne    jump_3e043
  jump_3e03c:
    xor    %eax,%eax
    jmp    jump_3e1c2
  jump_3e043:
    mov    $0xffffffff,%ebx
    mov    0x1c(%esp),%cl
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_36050
    mov    %edx,0x10(%esp)
    mov    %ebx,0x18(%esp)
    mov    %edx,0x8(%esp)
    mov    %eax,%ebx
    mov    %ebp,%eax
    mov    %edx,0x14(%esp)
    call   func_35fe0
    mov    %eax,%edx
    cmp    $0x1a,%cl
    je     jump_3e07a
    cmp    $0x1b,%cl
    jne    jump_3e084
  jump_3e07a:
    movl   $0xffffffff,0x14(%esp)
    jmp    jump_3e09b
  jump_3e084:
    cmp    $0x1c,%cl
    je     jump_3e093
    cmp    $0x1d,%cl
    je     jump_3e093
    cmp    $0x1e,%cl
    jne    jump_3e09b
  jump_3e093:
    movl   $0xffffffff,0x8(%esp)
  jump_3e09b:
    lea    -0x3(%edx),%eax
    xor    %esi,%esi
    mov    %eax,0xc(%esp)
    lea    -0x2(%ebx),%eax
    mov    0x18(%ebp),%si
    mov    %eax,(%esp)
    lea    -0x4(%ebx),%eax
    lea    0x0(,%esi,4),%edi
    mov    %eax,0x4(%esp)
    jmp    jump_3e12d
  jump_3e0c1:
    cmp    $0x1c,%cl
    jne    jump_3e0e8
    cmp    0x1c(%esp),%cl
    je     jump_3e0e8
    cmpl   $0x0,0x14(%esp)
    je     jump_3e0d8
    cmp    (%esp),%edx
    jge    jump_3e10f
  jump_3e0d8:
    mov    $0x2,%eax
    cmp    %ebx,%edx
    jle    jump_3e10f
    mov    $0x4,%eax
    jmp    jump_3e10f
  jump_3e0e8:
    cmp    $0x1d,%cl
    jne    jump_3e10f
    cmpb   $0x1d,0x1c(%esp)
    je     jump_3e10f
    cmpl   $0x0,0x14(%esp)
    je     jump_3e101
    cmp    0x4(%esp),%edx
    jge    jump_3e10f
  jump_3e101:
    mov    $0x4,%eax
    cmp    %ebx,%edx
    jle    jump_3e10f
    mov    $0x8,%eax
  jump_3e10f:
    cmp    $0xffffffff,%eax
    je     jump_3e129
    cmpl   $0xffffffff,0x18(%esp)
    je     jump_3e121
    cmp    0x10(%esp),%eax
    jge    jump_3e129
  jump_3e121:
    mov    %esi,0x18(%esp)
    mov    %eax,0x10(%esp)
  jump_3e129:
    add    $0x4,%edi
    inc    %esi
  jump_3e12d:
    xor    %eax,%eax
    mov    0x1a(%ebp),%ax
    cmp    %eax,%esi
    jge    jump_3e173
    mov    0x10(%ebp),%eax
    mov    0x1(%edi,%eax,1),%cl
    mov    $0xffffffff,%eax
    cmp    $0x1a,%cl
    jne    jump_3e0c1
    cmp    0x1c(%esp),%cl
    je     jump_3e0c1
    cmpl   $0x0,0x8(%esp)
    je     jump_3e163
    cmp    0xc(%esp),%ebx
    jge    jump_3e10f
  jump_3e163:
    mov    $0x3,%eax
    cmp    %edx,%ebx
    jle    jump_3e10f
    mov    $0x6,%eax
    jmp    jump_3e10f
  jump_3e173:
    mov    0x18(%esp),%edx
    cmp    $0xffffffff,%edx
    jne    jump_3e186
    xor    %eax,%eax
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_3e186:
    mov    %edx,%eax
    mov    0x10(%ebp),%edx
    mov    $0x1,%ecx
    xor    %ebx,%ebx
    mov    0x1(%edx,%eax,4),%al
    xor    %edx,%edx
    mov    %al,%bl
    mov    0x18(%esp),%dx
    mov    %ebp,%eax
    call   func_34b0c
    test   %eax,%eax
    je     jump_3e1c2
    mov    0x18(%esp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    xor    %ecx,%ecx
    mov    0x1c(%esp),%dl
    call   func_34774
    mov    $0xffffffff,%eax
  jump_3e1c2:
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3e1cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    $0xff,%ch
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %edx,(%esp)
    mov    0x46(%esi),%bx
    call   func_40590
    test   %eax,%eax
    je     jump_3e1f3
    mov    $0x3e8,%ebx
  jump_3e1f3:
    mov    %esi,%eax
    call   func_358f0
    cmp    $0x5,%eax
    jl     jump_3e513
    mov    %esi,%eax
    call   func_35fe0
    mov    %eax,0x8(%esp)
    mov    %esi,%eax
    call   func_36050
    mov    %eax,%ebp
    mov    %esi,%eax
    call   func_35da4
    mov    %al,0x10(%esp)
    mov    %esi,%eax
    call   func_35e24
    mov    %al,0xc(%esp)
    xor    %eax,%eax
    mov    0x1e(%esi),%ax
    cmp    $0x2,%eax
    jl     jump_3e26b
    xor    %eax,%eax
    mov    0x4a(%esi),%ax
    mov    %eax,0x4(%esp)
    xor    %eax,%eax
    mov    0x4(%esp),%edx
    mov    0x42(%esi),%ax
    sub    %eax,%edx
    cmp    $0x1,%edx
    jge    jump_3e260
    xor    %edx,%edx
    mov    0x4c(%esi),%dx
    sub    %edx,%eax
    cmp    $0x2,%eax
    jl     jump_3e26b
  jump_3e260:
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    $0x2,%eax
    jge    jump_3e272
  jump_3e26b:
    movl   $0xffffffff,(%esp)
  jump_3e272:
    cmp    $0xff,%ch
    jne    jump_3e288
    cmpl   $0x1,0x8(%esp)
    jge    jump_3e288
    mov    0x10(%esp),%ah
    cmp    %ch,%ah
    je     jump_3e288
    mov    %ah,%ch
  jump_3e288:
    cmp    $0xff,%ch
    jne    jump_3e29c
    cmp    $0x1,%ebp
    jge    jump_3e29c
    mov    0xc(%esp),%dl
    cmp    %ch,%dl
    je     jump_3e29c
    mov    %dl,%ch
  jump_3e29c:
    cmp    $0xff,%ch
    jne    jump_3e32c
    mov    $0x16,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3e32c
    xor    %eax,%eax
    mov    0x14(%esi),%ax
    cmp    $0x1,%eax
    jle    jump_3e32c
    xor    %eax,%eax
    mov    0x44(%esi),%ax
    cmp    $0x4,%eax
    jge    jump_3e2f2
    xor    %eax,%eax
    mov    0x1c(%esi),%ax
    mov    %eax,0x4(%esp)
    xor    %eax,%eax
    mov    0x4(%esp),%edx
    mov    0x20(%esi),%ax
    sub    %eax,%edx
    cmp    $0x5,%edx
    jge    jump_3e32c
  jump_3e2f2:
    xor    %edx,%edx
    mov    data_104311,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    data_10529f(%eax),%eax
    sar    $0x18,%eax
    mov    (%edi),%cl
    mov    %eax,0x4(%esp)
    mov    $0x1,%eax
    mov    0x4(%esp),%edx
    shl    %cl,%eax
    test   %edx,%eax
    je     jump_3e346
    mov    $0x16,%ch
    jmp    jump_3e346
  jump_3e32c:
    xor    %eax,%eax
    mov    0x44(%esi),%ax
    cmp    $0x4,%eax
    jge    jump_3e346
    mov    %esi,%eax
    call   func_3407c
    test   %eax,%eax
    jg     jump_3e513
  jump_3e346:
    xor    %eax,%eax
    mov    0x44(%esi),%ax
    cmp    $0x14,%eax
    jl     jump_3e356
    cmp    $0x14,%ebx
    jge    jump_3e39b
  jump_3e356:
    mov    %esi,%eax
    call   func_3407c
    test   %eax,%eax
    jle    jump_3e39b
    cmpl   $0x0,0x8(%esp)
    jg     jump_3e36f
    cmpb   $0xff,0x10(%esp)
    jne    jump_3e39b
  jump_3e36f:
    test   %ebp,%ebp
    jg     jump_3e37a
    cmpb   $0xff,0xc(%esp)
    jne    jump_3e39b
  jump_3e37a:
    xor    %edx,%edx
    mov    0x8(%esp),%eax
    mov    0x44(%esi),%dx
    add    %ebp,%eax
    cmp    %ebx,%edx
    jle    jump_3e393
    cmp    %ebx,%eax
    jle    jump_3e39b
    jmp    jump_3e513
  jump_3e393:
    cmp    %edx,%eax
    jg     jump_3e513
  jump_3e39b:
    mov    0xa(%esi),%eax
    sar    $0x10,%eax
    mov    %eax,0x4(%esp)
    mov    0x4(%esp),%ebx
    shl    $0x2,%eax
    sub    %ebx,%eax
    shl    $0x5,%eax
    mov    0x7(%edi),%ebx
    add    $data_a3d21,%eax
    xor    %edx,%edx
    cmp    %ebx,%eax
    jne    jump_3e3c4
    mov    $0x6,%edx
  jump_3e3c4:
    cmp    $0xff,%ch
    jne    jump_3e3e2
    cmp    0x8(%esp),%ebp
    jge    jump_3e3e2
    cmp    0xc(%esp),%ch
    je     jump_3e3e2
    lea    0x6(%edx),%eax
    cmp    %eax,%ebp
    jge    jump_3e3e2
    mov    0xc(%esp),%ch
    jmp    jump_3e3fc
  jump_3e3e2:
    cmp    $0xff,%ch
    jne    jump_3e3fc
    mov    0x10(%esp),%ah
    cmp    %ch,%ah
    je     jump_3e3fc
    mov    0x8(%esp),%ebx
    add    $0x6,%edx
    cmp    %ebx,%edx
    jle    jump_3e3fc
    mov    %ah,%ch
  jump_3e3fc:
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0xff,%ch
    jne    jump_3e446
    cmp    $0x14,%edx
    jge    jump_3e446
    mov    $0xffff,%ebx
    mov    $0x19,%edx
    mov    %esi,%eax
    call   func_34368
    test   %eax,%eax
    je     jump_3e446
    mov    $0x19,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3e446
    mov    $0x19,%ch
  jump_3e446:
    cmp    $0xff,%ch
    jne    jump_3e45d
    cmp    0x8(%esp),%ebp
    jge    jump_3e45d
    mov    0xc(%esp),%dl
    cmp    %ch,%dl
    je     jump_3e45d
    mov    %dl,%ch
    jmp    jump_3e46c
  jump_3e45d:
    cmp    $0xff,%ch
    jne    jump_3e46c
    mov    0x10(%esp),%dh
    cmp    %ch,%dh
    je     jump_3e46c
    mov    %dh,%ch
  jump_3e46c:
    cmp    $0xff,%ch
    je     jump_3e513
    mov    (%esp),%edx
    test   %edx,%edx
    jne    jump_3e498
    mov    %ch,%dl
    mov    %esi,%eax
    xor    %ebx,%ebx
    call   func_34ae4
    cmp    $0xffff,%eax
    je     jump_3e498
    mov    $0x1,%eax
    jmp    jump_3e515
  jump_3e498:
    mov    %esi,%edx
    xor    %ebx,%ebx
    mov    %edi,%eax
    mov    %ch,%bl
    call   func_3e020
    test   %eax,%eax
    je     jump_3e4b7
    mov    $0x1,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e4b7:
    cmp    0x10(%esp),%ch
    jne    jump_3e4e5
    cmpb   $0xff,0xc(%esp)
    je     jump_3e4e5
    mov    %esi,%edx
    xor    %ebx,%ebx
    mov    %edi,%eax
    mov    0xc(%esp),%bl
    call   func_3e020
    test   %eax,%eax
    je     jump_3e513
    mov    $0x1,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e4e5:
    cmp    0xc(%esp),%ch
    jne    jump_3e513
    mov    0x10(%esp),%ch
    cmp    $0xff,%ch
    je     jump_3e513
    mov    %esi,%edx
    xor    %ebx,%ebx
    mov    %edi,%eax
    mov    %ch,%bl
    call   func_3e020
    test   %eax,%eax
    je     jump_3e513
    mov    $0x1,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e513:
    xor    %eax,%eax
  jump_3e515:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3e520:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%ebp
    mov    %edx,%ecx
    mov    0x66(%edx),%al
    and    $0x2,%al
    and    $0xff,%eax
    je     jump_3e560
    mov    $0x26,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_34ae4
    cmp    $0xffff,%eax
    je     jump_3e560
    mov    0x66(%ecx),%bh
    and    $0xfd,%bh
    mov    $0xffffffff,%eax
    mov    %bh,0x66(%ecx)
    jmp    jump_3e7f4
  jump_3e560:
    mov    %ebp,%eax
    mov    $0x3,%edx
    call   func_40590
    cmp    $0xffffffff,%eax
    jne    jump_3e573
    xor    %edx,%edx
  jump_3e573:
    xor    %eax,%eax
    mov    0x44(%ecx),%ax
    cmp    $0x3,%eax
    jl     jump_3e7f2
    xor    %eax,%eax
    mov    0x46(%ecx),%ax
    cmp    %edx,%eax
    jl     jump_3e7f2
    xor    %eax,%eax
    mov    0x48(%ecx),%ax
    cmp    $0x2,%eax
    jl     jump_3e7f2
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x4a(%ecx),%dx
    mov    0x42(%ecx),%ax
    sub    %eax,%edx
    cmp    $0x1,%edx
    jge    jump_3e5c3
    xor    %edx,%edx
    mov    0x4c(%ecx),%dx
    sub    %edx,%eax
    cmp    $0x2,%eax
    jl     jump_3e7f2
  jump_3e5c3:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x1c(%ecx),%dx
    mov    0x20(%ecx),%ax
    sub    %eax,%edx
    cmp    $0x3,%edx
    jl     jump_3e7f2
    mov    %ecx,%eax
    call   func_36158
    mov    0xa(%ecx),%edx
    sar    $0x10,%edx
    mov    %eax,%esi
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x5,%eax
    mov    0x7(%ebp),%edx
    add    $data_a3d21,%eax
    cmp    %edx,%eax
    jne    jump_3e609
    xor    %edx,%edx
    mov    0x18(%ecx),%dx
    jmp    jump_3e611
  jump_3e609:
    xor    %edx,%edx
    mov    0x18(%ecx),%dx
    add    %edx,%edx
  jump_3e611:
    mov    $0x5,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x4,%eax
    jge    jump_3e627
    mov    $0x4,%eax
  jump_3e627:
    xor    %edx,%edx
    mov    0x44(%ecx),%dx
    cmp    $0x14,%edx
    jl     jump_3e63d
    xor    %edx,%edx
    mov    0x46(%ecx),%dx
    cmp    $0x14,%edx
    jge    jump_3e672
  jump_3e63d:
    test   %esi,%esi
    jle    jump_3e672
    lea    0x0(,%esi,4),%edx
    mov    0x44(%ecx),%bx
    mov    0x46(%ecx),%di
    sub    %esi,%edx
    cmp    %di,%bx
    jbe    jump_3e664
    xor    %ebx,%ebx
    mov    %di,%bx
    add    %ebx,%ebx
    cmp    %ebx,%edx
    jle    jump_3e672
    jmp    jump_3e670
  jump_3e664:
    xor    %ebx,%ebx
    mov    0x44(%ecx),%bx
    add    %ebx,%ebx
    cmp    %ebx,%edx
    jle    jump_3e672
  jump_3e670:
    mov    %esi,%eax
  jump_3e672:
    cmp    %eax,%esi
    jge    jump_3e6da
    mov    $0xff,%ah
    mov    $0xffff,%ebx
    mov    $0x13,%edx
    mov    %ah,0x8(%esp)
    mov    %ecx,%eax
    call   func_34368
    test   %eax,%eax
    je     jump_3e698
    movb   $0x13,0x8(%esp)
    jmp    jump_3e6b2
  jump_3e698:
    mov    $0xffff,%ebx
    mov    $0x12,%edx
    mov    %ecx,%eax
    call   func_34368
    test   %eax,%eax
    je     jump_3e6b2
    movb   $0x12,0x8(%esp)
  jump_3e6b2:
    mov    0x8(%esp),%bl
    cmp    $0xff,%bl
    je     jump_3e6da
    xor    %edx,%edx
    mov    %ecx,%eax
    mov    %bl,%dl
    xor    %ebx,%ebx
    call   func_34ae4
    test   %eax,%eax
    je     jump_3e6da
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e6da:
    xor    %edx,%edx
    mov    0x57(%ecx),%dl
    mov    $0x2,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    test   %edx,%edx
    je     jump_3e761
    xor    %eax,%eax
    mov    0x44(%ecx),%ax
    cmp    $0x14,%eax
    jle    jump_3e761
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x4,%edx
    jge    jump_3e761
    mov    $0xffff,%ebx
    mov    $0xb,%edx
    mov    %ecx,%eax
    call   func_34368
    test   %eax,%eax
    je     jump_3e761
    mov    $0xb,%edx
    mov    %ecx,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3e761
    mov    $0xb,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_34ae4
    test   %eax,%eax
    je     jump_3e761
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e761:
    mov    %esp,%edi
    mov    $data_96918,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    xor    %edi,%edi
    jmp    jump_3e76f
  jump_3e76e:
    inc    %edi
  jump_3e76f:
    movswl %di,%esi
    cmp    $0x5,%esi
    jge    jump_3e7f2
    mov    (%esp,%esi,1),%al
    mov    %al,0xc(%esp)
    cmp    $0x25,%al
    jne    jump_3e792
    mov    0x66(%ecx),%al
    and    $0x1,%al
    and    $0xff,%eax
    jne    jump_3e76e
  jump_3e792:
    mov    $0xffff,%ebx
    xor    %edx,%edx
    mov    %ecx,%eax
    mov    0xc(%esp),%dl
    call   func_34368
    test   %eax,%eax
    je     jump_3e76e
    mov    %ebp,%eax
    call   func_40590
    cmp    $0xffffffff,%eax
    je     jump_3e7bb
    cmpb   $0xe,0xc(%esp)
    je     jump_3e76e
  jump_3e7bb:
    movzbl 0xc(%esp),%esi
    mov    %ecx,%eax
    mov    %esi,%edx
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3e76e
    mov    %esi,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_34ae4
    test   %eax,%eax
    je     jump_3e76e
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e7f2:
    xor    %eax,%eax
  jump_3e7f4:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3e800:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0xc,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    lea    0x8(%esp),%ecx
    mov    %esp,%ebx
    lea    0x4(%esp),%edx
    mov    %esi,%eax
    call   func_34a44
    mov    %edi,%eax
    call   func_40590
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    jne    jump_3e846
    mov    0x4(%esp),%eax
    mov    (%esp),%edx
    xor    %edi,%edi
    mov    0x8(%esp),%ecx
    mov    %edi,0x4(%esp)
    add    %eax,%edx
    add    %eax,%ecx
    mov    %edx,(%esp)
    mov    %ecx,0x8(%esp)
  jump_3e846:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x4a(%esi),%dx
    mov    0x42(%esi),%ax
    sub    %eax,%edx
    cmp    $0x2,%edx
    jge    jump_3e86a
    xor    %edx,%edx
    mov    0x4c(%esi),%dx
    sub    %edx,%eax
    cmp    $0x2,%eax
    jl     jump_3ea6f
  jump_3e86a:
    xor    %eax,%eax
    mov    0x44(%esi),%ax
    cmp    $0x3,%eax
    jge    jump_3e882
    cmpl   $0x0,(%esp)
    jle    jump_3e882
    xor    %eax,%eax
    jmp    jump_3ea74
  jump_3e882:
    xor    %eax,%eax
    mov    0x46(%esi),%ax
    cmp    $0x3,%eax
    jge    jump_3e8a5
    cmpl   $0x0,0x4(%esp)
    jle    jump_3e8a5
    test   %ebx,%ebx
    jne    jump_3e8a5
    mov    $0x1,%eax
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e8a5:
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    $0x2,%eax
    jge    jump_3e8c4
    cmpl   $0x0,0x8(%esp)
    jle    jump_3e8c4
    mov    $0x2,%eax
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e8c4:
    xor    %eax,%eax
    mov    0x44(%esi),%ax
    cmp    $0x4,%eax
    jge    jump_3e8df
    cmpl   $0x0,(%esp)
    jle    jump_3e8df
    xor    %eax,%eax
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e8df:
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    $0x3,%eax
    jge    jump_3e8fe
    cmpl   $0x0,0x8(%esp)
    jle    jump_3e8fe
    mov    $0x2,%eax
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e8fe:
    xor    %eax,%eax
    mov    0x46(%esi),%ax
    cmp    $0x5,%eax
    jge    jump_3e921
    cmpl   $0x0,0x4(%esp)
    jle    jump_3e921
    test   %ebx,%ebx
    jne    jump_3e921
    mov    $0x1,%eax
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e921:
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    $0x1,%eax
    jl     jump_3e951
    cmp    $0x2,%eax
    jge    jump_3e95e
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x4a(%esi),%dx
    mov    0x42(%esi),%ax
    sub    %eax,%edx
    cmp    $0x1,%edx
    jge    jump_3e95e
    xor    %edx,%edx
    mov    0x4c(%esi),%dx
    sub    %edx,%eax
    cmp    $0x1,%eax
    jge    jump_3e95e
  jump_3e951:
    mov    $0x2,%eax
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e95e:
    cmpl   $0x0,0x8(%esp)
    jle    jump_3e9a9
    mov    data_9684c,%eax
    xor    %ecx,%ecx
    mov    %eax,%edx
    mov    0x48(%esi),%cx
    sar    $0x1f,%edx
    idiv   %ecx
    cmp    $0xf,%eax
    jle    jump_3e9a9
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x4a(%esi),%dx
    mov    0x42(%esi),%ax
    sub    %eax,%edx
    cmp    $0x3,%edx
    jle    jump_3e9a9
    xor    %edx,%edx
    mov    0x4c(%esi),%dx
    sub    %edx,%eax
    cmp    $0x1,%eax
    je     jump_3e9a9
    mov    $0x2,%eax
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e9a9:
    cmp    $0xffffffff,%ebx
    jne    jump_3e9e5
    cmpl   $0x0,(%esp)
    jle    jump_3e9be
    xor    %eax,%eax
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e9be:
    cmpl   $0x0,0x8(%esp)
    jle    jump_3ea6f
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    $0x5,%eax
    jge    jump_3ea6f
    mov    $0x2,%eax
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3e9e5:
    mov    $0xc,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    0x44(%esi),%bx
    mov    0x46(%esi),%cx
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_3ea0f
    mov    %ebx,%eax
    sar    %eax
    add    %eax,%ecx
  jump_3ea0f:
    mov    $0xe,%edx
    mov    %esi,%eax
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xfff,%eax
    je     jump_3ea2d
    mov    %ecx,%eax
    sar    %eax
    add    %eax,%ebx
  jump_3ea2d:
    cmp    %ecx,%ebx
    jg     jump_3ea37
    cmpl   $0x0,(%esp)
    jg     jump_3ea4b
  jump_3ea37:
    cmpl   $0x0,0x4(%esp)
    jle    jump_3ea4b
    mov    $0x1,%eax
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3ea4b:
    cmpl   $0x0,(%esp)
    jle    jump_3ea5b
    xor    %eax,%eax
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3ea5b:
    cmpl   $0x0,0x8(%esp)
    jle    jump_3ea6f
    mov    $0x2,%eax
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3ea6f:
    mov    $0x3,%eax
  jump_3ea74:
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3ea7c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x78,%esp
    mov    %eax,%ebp
    xor    %edx,%edx
    xor    %esi,%esi
    mov    %edx,0x70(%esp)
    jmp    jump_3ea92
  jump_3ea91:
    inc    %esi
  jump_3ea92:
    xor    %eax,%eax
    movswl %si,%edx
    mov    data_105258,%ax
    cmp    %eax,%edx
    jge    jump_3eae9
    xor    %edi,%edi
    mov    0x70(%esp),%di
    cmp    $0x20,%edi
    jge    jump_3eae9
    imul   $0x4b,%edx,%eax
    mov    0x0(%ebp),%cl
    mov    data_10529f(%eax),%eax
    mov    $0x1,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    jne    jump_3ea91
    mov    $data_105258,%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    %cl,%bl
    mov    %si,%dx
    call   func_4694c
    test   %eax,%eax
    je     jump_3ea91
    mov    %si,(%esp,%edi,2)
    inc    %edi
    mov    %edi,0x70(%esp)
    jmp    jump_3ea91
  jump_3eae9:
    mov    $0xffffffff,%ebx
    mov    0x70(%esp),%ecx
    mov    %bx,0x74(%esp)
    test   %cx,%cx
    je     jump_3ebd0
    mov    $0xb,%ecx
    lea    0x40(%esp),%edi
    mov    $data_9691e,%esi
    mov    $0x1,%edx
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    data_105416,%eax
    mov    0x0(%ebp),%cl
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_3eb45
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x2d,%edx
    jge    jump_3eb45
    movw   $0xfffe,0x74(%esp)
  jump_3eb45:
    xor    %esi,%esi
    jmp    jump_3eb4a
  jump_3eb49:
    inc    %esi
  jump_3eb4a:
    xor    %eax,%eax
    movswl %si,%edx
    mov    0x70(%esp),%ax
    cmp    %eax,%edx
    jge    jump_3eb98
    mov    0x72(%esp),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_3eb98
    xor    %eax,%eax
    jmp    jump_3eb69
  jump_3eb68:
    inc    %eax
  jump_3eb69:
    movswl %ax,%edx
    cmp    $0x17,%edx
    jge    jump_3eb49
    mov    0x72(%esp),%ebx
    sar    $0x10,%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_3eb49
    movswl %si,%ebx
    add    %ebx,%ebx
    mov    0x40(%esp,%edx,2),%di
    cmp    (%esp,%ebx,1),%di
    jne    jump_3eb68
    mov    (%esp,%ebx,1),%dx
    mov    %dx,0x74(%esp)
    jmp    jump_3eb68
  jump_3eb98:
    mov    0x72(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jge    jump_3ebbf
    call   func_782df
    xor    %ebx,%ebx
    mov    %eax,%edx
    mov    0x70(%esp),%bx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    (%esp,%edx,2),%ax
    mov    %ax,0x74(%esp)
  jump_3ebbf:
    xor    %eax,%eax
    mov    0x0(%ebp),%al
    mov    0x74(%esp),%edx
    mov    %dx,data_106fa6(,%eax,2)
  jump_3ebd0:
    add    $0x78,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3ebdc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x30,%esp
    mov    %eax,%ecx
    mov    %edx,%ebp
    mov    0x58(%edx),%ah
    cmp    $0x1,%ah
    je     jump_3ecd0
    cmp    $0x2,%ah
    je     jump_3ecd0
    cmp    $0x5,%ah
    je     jump_3ecd0
    xor    %eax,%eax
    mov    0x54(%edx),%edx
    mov    data_104bea,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    jne    jump_3ec2d
    mov    data_a0d00,%edx
    test   %edx,%edx
    jne    jump_3ec2d
    movb   $0x0,0x5d(%ebp)
    mov    %edx,0x5e(%ebp)
    jmp    jump_3ecd0
  jump_3ec2d:
    cmpb   $0x4,0x58(%ebp)
    jne    jump_3ecc9
    cmpb   $0x1,0x5d(%ebp)
    jne    jump_3ecc9
    mov    0x59(%ebp),%esi
    test   %esi,%esi
    jne    jump_3ec59
    mov    $0xbbc,%ebx
    mov    $data_92194,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3ec59:
    cmpl   $0x0,0x28(%ebp)
    je     jump_3ec7a
    mov    0x2(%esi),%eax
    sar    $0x10,%eax
    mov    data_104fd1(%eax),%edx
    sar    $0x18,%edx
    test   %edx,%edx
    jle    jump_3ecbe
    decb   data_104fd4(%eax)
    jmp    jump_3ecbe
  jump_3ec7a:
    mov    $0x49,%edx
    mov    %ebp,%eax
    call   func_4a534
    test   %eax,%eax
    je     jump_3eca5
    mov    0x2(%esi),%eax
    sar    $0x10,%eax
    mov    data_104f6d(%eax),%edx
    sar    $0x18,%edx
    test   %edx,%edx
    jle    jump_3ecbe
    decb   data_104f70(%eax)
    jmp    jump_3ecbe
  jump_3eca5:
    mov    0x2(%esi),%eax
    sar    $0x10,%eax
    mov    data_104f09(%eax),%edx
    sar    $0x18,%edx
    test   %edx,%edx
    jle    jump_3ecbe
    decb   data_104f0c(%eax)
  jump_3ecbe:
    movb   $0x0,0x5d(%ebp)
    movl   $0x0,0x5e(%ebp)
  jump_3ecc9:
    mov    0x5d(%ebp),%al
    test   %al,%al
    je     jump_3ecd9
  jump_3ecd0:
    add    $0x30,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3ecd9:
    cmpb   $0x3,0x58(%ebp)
    jne    jump_3ecff
    mov    %ebp,%edx
    mov    0x59(%ebp),%eax
    call   func_35c38
    cmp    $0xffffffff,%eax
    je     jump_3ecff
    mov    $0xbe7,%ebx
    mov    $data_921a0,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3ecff:
    cmpb   $0x4,0x58(%ebp)
    je     jump_3ed16
    mov    $0xbeb,%ebx
    mov    $data_921ac,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3ed16:
    mov    0x59(%ebp),%eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jne    jump_3ed30
    mov    $0xbef,%ebx
    mov    $data_921b8,%edx
    call   func_26198
  jump_3ed30:
    cmpl   $0xffffffff,0x28(%ebp)
    jne    jump_3ed54
    mov    %ecx,%eax
    mov    0x59(%ebp),%edx
    call   func_403c0
    test   %eax,%eax
    je     jump_3ed54
    movb   $0x2,0x5d(%ebp)
    mov    %eax,0x5e(%ebp)
    add    $0x30,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3ed54:
    cmpl   $0x0,0x8(%ebp)
    jg     jump_3ed64
    cmpl   $0x0,0xc(%ebp)
    jle    jump_3ecd0
  jump_3ed64:
    mov    $data_a3d21,%edi
    mov    %ebp,%eax
    xor    %ebx,%ebx
    xor    %esi,%esi
    xor    %edx,%edx
    mov    %ebx,0xc(%esp)
    mov    %dx,0x24(%esp)
    mov    $0x49,%edx
    mov    %ebx,0x8(%esp)
    call   func_4a534
    mov    $0xffffffff,%edx
    mov    %eax,0x10(%esp)
    mov    %ecx,%eax
    mov    %edi,0x1c(%esp)
    call   func_43374
    mov    %al,0x2c(%esp)
    jmp    jump_3eecc
  jump_3eda5:
    xor    %edx,%edx
    mov    %edx,0x20(%esp)
    jmp    jump_3ee81
  jump_3edb0:
    xor    %ecx,%ecx
    mov    %ecx,0x20(%esp)
    jmp    jump_3ee81
  jump_3edbb:
    cmpl   $0x0,0x10(%esp)
    je     jump_3edea
    test   %eax,%ecx
    je     jump_3eda5
    mov    data_104f6d(%esi),%eax
    fildl  data_104bec(%ebx)
    sar    $0x18,%eax
    fstps  0x20(%esp)
    cmp    $0x1,%eax
    jle    jump_3ee81
    dec    %eax
    mov    %al,%cl
    jmp    jump_3ee6c
  jump_3edea:
    mov    data_104f09(%esi),%edx
    sar    $0x18,%edx
    mov    %edx,0x18(%esp)
    test   %eax,%ecx
    je     jump_3ee11
    mov    data_104bec(%ebx),%eax
    mov    data_104d7c(%ebx),%ecx
    add    %ecx,%eax
    mov    %eax,(%esp)
    fildl  (%esp)
    jmp    jump_3ee17
  jump_3ee11:
    fildl  data_104d7c(%ebx)
  jump_3ee17:
    fstps  0x20(%esp)
    cmpl   $0x0,0x18(%esp)
    jle    jump_3ee81
    mov    0x18(%esp),%cl
    jmp    jump_3ee6c
  jump_3ee28:
    mov    0x28(%ebp),%ecx
    test   %ecx,%ecx
    je     jump_3ee48
    mov    data_104fd1(%esi),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    jg     jump_3edb0
    fildl  data_104bec(%ebx)
    jmp    jump_3ee7d
  jump_3ee48:
    cmpl   $0x0,0x10(%esp)
    je     jump_3ee55
    mov    %ecx,0x20(%esp)
    jmp    jump_3ee81
  jump_3ee55:
    mov    data_104f09(%esi),%ecx
    fildl  data_104d7c(%ebx)
    sar    $0x18,%ecx
    fstps  0x20(%esp)
    test   %ecx,%ecx
    jle    jump_3ee81
  jump_3ee6c:
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    %eax,(%esp)
    fildl  (%esp)
    fdivrs 0x20(%esp)
  jump_3ee7d:
    fstps  0x20(%esp)
  jump_3ee81:
    mov    0x26(%esp),%edx
    sar    $0x10,%edx
    mov    $0x19,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    inc    %eax
    mov    %eax,(%esp)
    fildl  (%esp)
    fdivrs 0x20(%esp)
    fsts   0x20(%esp)
    fcomps 0xc(%esp)
    fnstsw %ax
    sahf
    jbe    jump_3eebd
    mov    0x20(%esp),%eax
    mov    %edi,0x8(%esp)
    mov    %si,0x24(%esp)
    mov    %eax,0xc(%esp)
  jump_3eebd:
    mov    0x1c(%esp),%edi
    add    $0x4,%ebx
    add    $0x60,%edi
    inc    %esi
    mov    %edi,0x1c(%esp)
  jump_3eecc:
    mov    data_a629f,%eax
    sar    $0x10,%eax
    cmp    %eax,%esi
    jge    jump_3ef57
    mov    data_104bec(%ebx),%eax
    mov    0x1c(%esp),%edi
    test   %eax,%eax
    jg     jump_3eef3
    cmpl   $0x0,data_104d7c(%ebx)
    jle    jump_3eebd
  jump_3eef3:
    mov    %edi,%edx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    call   func_4aa78
    mov    0x2c(%esp),%cl
    mov    %ax,0x28(%esp)
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x15(%edi),%dl
    mov    0x14(%edi),%al
    mov    %edx,0x14(%esp)
    or     %eax,%edx
    test   %edx,%ecx
    je     jump_3ee28
    cmpl   $0x0,0x28(%ebp)
    je     jump_3edbb
    test   %eax,%ecx
    je     jump_3edb0
    test   %ecx,0x14(%esp)
    jne    jump_3edb0
    mov    data_104fd1(%esi),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    jg     jump_3eda5
    fildl  data_104bec(%ebx)
    jmp    jump_3ee7d
  jump_3ef57:
    mov    0x8(%esp),%eax
    test   %eax,%eax
    je     jump_3ecd0
    cmp    0x4(%esp),%eax
    je     jump_3ecd0
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_4aa78
    test   %eax,%eax
    jle    jump_3ecd0
    mov    0x4(%esp),%edx
    mov    0x24(%esp),%eax
    cmp    0x4(%edx),%ax
    je     jump_3ecd0
    cmpl   $0x0,0x28(%ebp)
    je     jump_3efac
    mov    0x22(%esp),%eax
    sar    $0x10,%eax
    incb   data_104fd4(%eax)
    add    $0x30,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3efac:
    cmpl   $0x0,0x10(%esp)
    je     jump_3efc9
    mov    0x22(%esp),%eax
    sar    $0x10,%eax
    incb   data_104f70(%eax)
    add    $0x30,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3efc9:
    mov    0x22(%esp),%eax
    sar    $0x10,%eax
    incb   data_104f0c(%eax)
    add    $0x30,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3efe0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_40224
    mov    $0x1,%ebx
    mov    $data_a3d21,%edx
    mov    data_a62a1,%cx
    mov    %eax,%ebp
    xor    %eax,%eax
    test   %cx,%cx
    jle    jump_3f02b
    mov    %ebx,%esi
    mov    (%edi),%cl
    shl    %cl,%esi
  jump_3f011:
    xor    %ecx,%ecx
    mov    0x14(%edx),%cl
    cmp    %esi,%ecx
    jne    jump_3f01b
    inc    %ebx
  jump_3f01b:
    mov    data_a62a1,%cx
    inc    %eax
    add    $0x60,%edx
    cmp    %cx,%ax
    jl     jump_3f011
  jump_3f02b:
    mov    %ebx,%eax
    mov    0x7(%edi),%ebx
    sub    %ebp,%eax
    mov    0x14(%ebx),%bl
    mov    $0x1,%edx
    mov    (%edi),%cl
    and    $0xff,%ebx
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_3f049
    inc    %eax
  jump_3f049:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_3f050:
    .long   func_3f253
    .long   func_3f287
    .long   func_3f2bb
    .long   func_3f2ef


/*----------------------------------------------------------------*/
func_3f060:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    %cl,0x14(%esp)
    test   %ebx,%ebx
    jne    jump_3f085
    mov    $0xcd0,%ebx
    mov    $data_921c4,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3f085:
    mov    $0x1,%eax
    xor    %edx,%edx
    mov    0x0(%ebp),%cl
    mov    %edx,0x4(%esp)
    mov    data_1052ea,%edx
    shl    %cl,%eax
    sar    $0x18,%edx
    test   %eax,%edx
    je     jump_3f0d6
    mov    data_105830,%edx
    mov    $0x1,%ebx
    sar    $0x18,%edx
    mov    %ebx,0x4(%esp)
    test   %eax,%edx
    je     jump_3f0d6
    mov    data_105bb4,%edx
    mov    $0x2,%ecx
    sar    $0x18,%edx
    mov    %ecx,0x4(%esp)
    test   %eax,%edx
    je     jump_3f0d6
    movl   $0x3,0x4(%esp)
  jump_3f0d6:
    cmpw   $0x0,0x4(%esp)
    jne    jump_3f0ef
    mov    $0xce2,%ebx
    mov    $data_921d0,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3f0ef:
    cmpw   $0x4,0x4(%esp)
    jl     jump_3f108
    mov    $0xce9,%ebx
    mov    $data_921dc,%edx
    xor    %eax,%eax
    call   func_26198
  jump_3f108:
    mov    data_a2f6c,%eax
    mov    %eax,%edx
    mov    $0xfa,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %ax,(%esp)
    mov    -0x2(%esp),%eax
    sar    $0x10,%eax
    mov    0x4(%esp),%ecx
    cmp    $0x1,%eax
    jge    jump_3f135
    movw   $0x1,(%esp)
    jmp    jump_3f140
  jump_3f135:
    cmp    $0x8,%eax
    jle    jump_3f140
    movw   $0x8,(%esp)
  jump_3f140:
    movswl %cx,%eax
    test   %eax,%eax
    jl     jump_3f196
    movsbl %cl,%edx
    mov    %esi,%eax
    call   func_49148
    mov    %esi,%eax
    mov    -0x2(%esp),%edx
    call   func_4a18c
    sar    $0x10,%edx
    imul   0x15a(%esi),%edx
    add    %eax,%edx
    xor    %eax,%eax
    mov    0x44(%edi),%ax
    test   %eax,%eax
    jne    jump_3f178
    movw   $0x1,0x44(%edi)
  jump_3f178:
    mov    %edx,%eax
    xor    %ebx,%ebx
    sar    $0x1f,%edx
    mov    0x44(%edi),%bx
    idiv   %ebx
    mov    0x1ae(%ebp),%edx
    inc    %eax
    sar    $0x10,%edx
    cmp    %edx,%eax
    jl     jump_3f196
    dec    %ecx
    jmp    jump_3f140
  jump_3f196:
    movswl %cx,%eax
    test   %eax,%eax
    jge    jump_3f19f
    xor    %ecx,%ecx
  jump_3f19f:
    movsbl %cl,%edx
    mov    %esi,%eax
    call   func_49148
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    0x0(%ebp),%bl
    xor    %edx,%edx
    call   func_4a36c
    mov    $0x4,%edx
    mov    %al,0xc(%esp)
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    0x0(%ebp),%bl
    call   func_4a36c
    mov    $0x2,%edx
    mov    %al,0x8(%esp)
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    0x0(%ebp),%bl
    call   func_4a36c
    mov    $0x1,%edx
    mov    %al,0x10(%esp)
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    0x0(%ebp),%bl
    call   func_4a36c
    mov    $0x2c,%edx
    mov    %al,%bl
    mov    %esi,%eax
    mov    $0x2b,%bh
    call   func_4a404
    test   %eax,%eax
    je     jump_3f20c
    mov    $0x2c,%bh
  jump_3f20c:
    cmpb   $0xff,0x8(%esp)
    jne    jump_3f218
    movb   $0x1b,0x8(%esp)
  jump_3f218:
    cmpb   $0xff,0x10(%esp)
    jne    jump_3f224
    movb   $0x10,0x10(%esp)
  jump_3f224:
    cmpb   $0xff,0xc(%esp)
    jne    jump_3f231
    xor    %dl,%dl
    mov    %dl,0xc(%esp)
  jump_3f231:
    cmp    $0xff,%bl
    jne    jump_3f23c
    mov    $0xa,%bl
  jump_3f23c:
    cmp    $0x3,%cx
    ja     jump_3f31c
    xor    %eax,%eax
    mov    %cx,%ax
    jmp    *%cs:vtable_3f050(,%eax,4)


/*----------------------------------------------------------------*/
func_3f253:
/*----------------------------------------------------------------*/
    mov    0x11(%esp),%eax
    mov    0x9(%esp),%ecx
    sar    $0x18,%eax
    mov    0x5(%esp),%edx
    push   %eax
    sar    $0x18,%ecx
    push   %esi
    movsbl %bh,%eax
    sar    $0x18,%edx
    push   %eax
    movsbl %bl,%eax
    mov    0x19(%esp),%ebx
    push   %eax
    sar    $0x18,%ebx
    mov    %ebp,%eax
    call   func_3f324
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_3f287:
/*----------------------------------------------------------------*/
    mov    0x11(%esp),%eax
    mov    0x9(%esp),%ecx
    sar    $0x18,%eax
    mov    0x5(%esp),%edx
    push   %eax
    sar    $0x18,%ecx
    push   %esi
    movsbl %bh,%eax
    sar    $0x18,%edx
    push   %eax
    movsbl %bl,%eax
    mov    0x19(%esp),%ebx
    push   %eax
    sar    $0x18,%ebx
    mov    %ebp,%eax
    call   func_3f3f8
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_3f2bb:
/*----------------------------------------------------------------*/
    mov    0x11(%esp),%eax
    mov    0x9(%esp),%ecx
    sar    $0x18,%eax
    mov    0x5(%esp),%edx
    push   %eax
    sar    $0x18,%ecx
    push   %esi
    movsbl %bh,%eax
    sar    $0x18,%edx
    push   %eax
    movsbl %bl,%eax
    mov    0x19(%esp),%ebx
    push   %eax
    sar    $0x18,%ebx
    mov    %ebp,%eax
    call   func_3f784
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_3f2ef:
/*----------------------------------------------------------------*/
    mov    0x11(%esp),%eax
    mov    0x9(%esp),%ecx
    sar    $0x18,%eax
    mov    0x5(%esp),%edx
    push   %eax
    sar    $0x18,%ecx
    push   %esi
    movsbl %bh,%eax
    sar    $0x18,%edx
    push   %eax
    movsbl %bl,%eax
    mov    0x19(%esp),%ebx
    push   %eax
    sar    $0x18,%ebx
    mov    %ebp,%eax
    call   func_3fbac
  jump_3f31c:
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_3f324:
/*----------------------------------------------------------------*/
    push   %esi
    sub    $0x8,%esp
    mov    %bl,(%esp)
    mov    %cl,0x4(%esp)
    mov    0x18(%esp),%ecx
    movsbl %dl,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_492ac
    mov    -0x3(%esp),%edx
    mov    $0x1,%ebx
    mov    %ecx,%eax
    sar    $0x18,%edx
    call   func_492ac
    mov    0x11(%esp),%edx
    mov    $0x2,%ebx
    mov    %ecx,%eax
    sar    $0x18,%edx
    call   func_492ac
    mov    0x1c(%esp),%ah
    cmp    $0x1,%ah
    jb     jump_3f3eb
    jbe    jump_3f379
    cmp    $0x2,%ah
    je     jump_3f3c2
  jump_3f379:
    mov    0x1(%esp),%esi
    mov    $0x3,%ebx
    sar    $0x18,%esi
    mov    %ecx,%eax
    mov    %esi,%edx
    call   func_492ac
    mov    $0x4,%ebx
    mov    %esi,%edx
    mov    %ecx,%eax
    call   func_492ac
    jmp    jump_3f3f1
  jump_3f39e:
    mov    $0x3,%ebx
    mov    $0x47,%edx
    mov    %ecx,%eax
    call   func_492ac
    mov    $0x4,%ebx
    mov    $0x47,%edx
    mov    %ecx,%eax
    call   func_492ac
    jmp    jump_3f3f1
  jump_3f3c2:
    mov    $0x3,%ebx
    mov    $0x49,%edx
    mov    %ecx,%eax
    call   func_492ac
    mov    $0x4,%ebx
    mov    $0x49,%edx
    mov    %ecx,%eax
    call   func_492ac
    add    $0x8,%esp
    pop    %esi
    ret    $0x10
  jump_3f3eb:
    test   %ah,%ah
    je     jump_3f39e
    jmp    jump_3f379
  jump_3f3f1:
    add    $0x8,%esp
    pop    %esi
    ret    $0x10


/*----------------------------------------------------------------*/
func_3f3f8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x24(%esp),%esi
    mov    %eax,%ebp
    mov    %dl,0x8(%esp)
    mov    %bl,(%esp)
    mov    %cl,0x4(%esp)
    mov    0x5(%esp),%edi
    mov    %esi,%eax
    sar    $0x18,%edi
    xor    %ebx,%ebx
    mov    %edi,%edx
    call   func_492ac
    mov    $0x1,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_492ac
    mov    -0x3(%esp),%edx
    mov    $0x2,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    call   func_492ac
    mov    0x1d(%esp),%edx
    mov    $0x3,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    call   func_492ac
    mov    0x18(%esi),%edx
    mov    $0x4,%ecx
    cmp    $0x8,%edx
    jge    jump_3f479
    mov    $0x4,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    mov    $0x5,%ecx
    call   func_492ac
  jump_3f479:
    mov    0x28(%esp),%ah
    lea    0x1(%ecx),%edi
    cmp    $0x1,%ah
    jb     jump_3f776
    jbe    jump_3f498
    cmp    $0x2,%ah
    je     jump_3f699
  jump_3f498:
    cmpb   $0x5,0x4(%esp)
    je     jump_3f57e
    mov    $0x5,%edx
    mov    %esi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3f57e
    mov    $0x5,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_492ac
    inc    %ecx
    jmp    jump_3f58f
  jump_3f4cb:
    mov    $0x47,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_492ac
    mov    $0x47,%edx
    lea    0x1(%edi),%ecx
    mov    %esi,%eax
    mov    %edi,%ebx
    call   func_492ac
    mov    $0x47,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_492ac
    mov    $0x49,%edx
    inc    %ecx
    mov    %esi,%eax
    mov    %ecx,%ebx
    call   func_492ac
    mov    0x1d(%esp),%edx
    inc    %ecx
    mov    %esi,%eax
    mov    %ecx,%ebx
    sar    $0x18,%edx
    inc    %ecx
    call   func_492ac
    cmp    $0xa,%ecx
    jge    jump_3f575
  jump_3f522:
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x4b,%edx
    jle    jump_3f53e
    mov    0x5(%esp),%edx
    jmp    jump_3f563
  jump_3f53e:
    cmp    $0x32,%edx
    jle    jump_3f549
    mov    0x19(%esp),%edx
    jmp    jump_3f563
  jump_3f549:
    cmp    $0x19,%edx
    jle    jump_3f55f
    mov    $0x47,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_492ac
    inc    %ecx
    jmp    jump_3f570
  jump_3f55f:
    mov    0x1d(%esp),%edx
  jump_3f563:
    mov    %ecx,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    inc    %ecx
    call   func_492ac
  jump_3f570:
    cmp    $0xa,%ecx
    jl     jump_3f522
  jump_3f575:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x10
  jump_3f57e:
    mov    0x1(%esp),%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    inc    %ecx
    call   func_492ac
  jump_3f58f:
    mov    0x1(%esp),%edi
    mov    %ecx,%ebx
    sar    $0x18,%edi
    mov    %esi,%eax
    mov    %edi,%edx
    inc    %ecx
    call   func_492ac
    mov    %ecx,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_492ac
    mov    0x19(%esp),%edx
    inc    %ecx
    mov    %esi,%eax
    mov    %ecx,%ebx
    sar    $0x18,%edx
    call   func_492ac
    mov    $0x24,%edx
    mov    %esi,%eax
    inc    %ecx
    call   func_4a404
    test   %eax,%eax
    je     jump_3f5de
    mov    $0x24,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_492ac
    inc    %ecx
  jump_3f5de:
    cmpb   $0x2b,0x20(%esp)
    je     jump_3f60e
    cmpl   $0x320,data_a2f6c
    jg     jump_3f60e
    xor    %ebx,%ebx
    mov    0x0(%ebp),%bl
    lea    0x0(,%ebx,4),%edx
    sub    %ebx,%edx
    mov    data_a3cf4(,%edx,2),%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jl     jump_3f61f
  jump_3f60e:
    mov    0x1d(%esp),%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    inc    %ecx
    call   func_492ac
  jump_3f61f:
    mov    0x19(%esp),%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    inc    %ecx
    call   func_492ac
    mov    $0x49,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    inc    %ecx
    call   func_492ac
    cmp    $0xa,%ecx
    jge    jump_3f575
  jump_3f648:
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x42,%edx
    jle    jump_3f664
    mov    0x5(%esp),%edx
    jmp    jump_3f67e
  jump_3f664:
    cmp    $0x21,%edx
    jle    jump_3f67a
    mov    $0x49,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_492ac
    inc    %ecx
    jmp    jump_3f68b
  jump_3f67a:
    mov    0x19(%esp),%edx
  jump_3f67e:
    mov    %ecx,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    inc    %ecx
    call   func_492ac
  jump_3f68b:
    cmp    $0xa,%ecx
    jl     jump_3f648
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x10
  jump_3f699:
    cmpb   $0x5,0x4(%esp)
    je     jump_3f6c2
    mov    $0x5,%edx
    mov    %esi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3f6c2
    mov    $0x5,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_492ac
    mov    %edi,%ecx
    jmp    jump_3f6d3
  jump_3f6c2:
    mov    0x1(%esp),%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    inc    %ecx
    call   func_492ac
  jump_3f6d3:
    mov    $0x49,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_492ac
    mov    $0x49,%edx
    inc    %ecx
    mov    %esi,%eax
    mov    %ecx,%ebx
    call   func_492ac
    mov    $0x49,%edx
    inc    %ecx
    mov    %esi,%eax
    mov    %ecx,%ebx
    call   func_492ac
    mov    0x19(%esp),%edx
    inc    %ecx
    mov    %esi,%eax
    mov    %ecx,%ebx
    sar    $0x18,%edx
    inc    %ecx
    call   func_492ac
    cmp    $0xa,%ecx
    jge    jump_3f575
  jump_3f71a:
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x4b,%edx
    jle    jump_3f736
    mov    0x5(%esp),%edx
    jmp    jump_3f75b
  jump_3f736:
    cmp    $0x32,%edx
    jle    jump_3f741
    mov    0x19(%esp),%edx
    jmp    jump_3f75b
  jump_3f741:
    cmp    $0x19,%edx
    jle    jump_3f757
    mov    $0x49,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_492ac
    inc    %ecx
    jmp    jump_3f768
  jump_3f757:
    mov    0x1d(%esp),%edx
  jump_3f75b:
    mov    %ecx,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    inc    %ecx
    call   func_492ac
  jump_3f768:
    cmp    $0xa,%ecx
    jl     jump_3f71a
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x10
  jump_3f776:
    test   %ah,%ah
    je     jump_3f4cb
    jmp    jump_3f498


/*----------------------------------------------------------------*/
func_3f784:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    0x2c(%esp),%edi
    mov    %eax,0x4(%esp)
    mov    %dl,0xc(%esp)
    mov    %cl,0x10(%esp)
    mov    0x24(%esp),%ch
    mov    %bl,0x8(%esp)
    mov    0x28(%esp),%cl
    mov    0x9(%esp),%ebp
    mov    %edi,%eax
    sar    $0x18,%ebp
    xor    %ebx,%ebx
    mov    %ebp,%edx
    call   func_492ac
    mov    $0x1,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x2,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_492ac
    mov    0x5(%esp),%edx
    mov    $0x3,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    call   func_492ac
    movsbl %cl,%eax
    mov    $0x4,%ebx
    mov    %eax,(%esp)
    mov    %eax,%edx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x5,%ebx
    mov    (%esp),%edx
    mov    %edi,%eax
    call   func_492ac
    mov    0x18(%edi),%edx
    mov    $0x6,%esi
    cmp    $0x10,%edx
    jge    jump_3f82e
    mov    $0x6,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    mov    $0x7,%esi
    call   func_492ac
  jump_3f82e:
    mov    0x30(%esp),%ah
    lea    0x1(%esi),%ebp
    cmp    $0x1,%ah
    jb     jump_3fb9f
    jbe    jump_3f84d
    cmp    $0x2,%ah
    je     jump_3faa8
  jump_3f84d:
    mov    0xd(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    call   func_492ac
    mov    0x10(%esp),%al
    inc    %esi
    cmp    $0x7,%al
    je     jump_3f96d
    mov    $0x7,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3f96d
    mov    $0x7,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
    jmp    jump_3f97e
  jump_3f892:
    mov    $0x47,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x47,%edx
    lea    0x1(%ebp),%esi
    mov    %edi,%eax
    mov    %ebp,%ebx
    call   func_492ac
    mov    $0x47,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x47,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x49,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    inc    %esi
    movsbl %ch,%edx
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    inc    %esi
    movsbl %cl,%edx
    mov    %edi,%eax
    mov    %esi,%ebx
    inc    %esi
    call   func_492ac
    cmp    $0xf,%esi
    jge    jump_3f964
  jump_3f901:
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x50,%edx
    jle    jump_3f92a
    mov    0x9(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    inc    %esi
    call   func_492ac
    jmp    jump_3f95f
  jump_3f92a:
    cmp    $0x3c,%edx
    jle    jump_3f936
    mov    %esi,%ebx
    movsbl %ch,%edx
    jmp    jump_3f957
  jump_3f936:
    cmp    $0x28,%edx
    jle    jump_3f944
    mov    $0x49,%edx
    mov    %esi,%ebx
    jmp    jump_3f957
  jump_3f944:
    cmp    $0x14,%edx
    jle    jump_3f952
    mov    $0x47,%edx
    mov    %esi,%ebx
    jmp    jump_3f957
  jump_3f952:
    mov    %esi,%ebx
    movsbl %cl,%edx
  jump_3f957:
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
  jump_3f95f:
    cmp    $0xf,%esi
    jl     jump_3f901
  jump_3f964:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x10
  jump_3f96d:
    mov    0xd(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    inc    %esi
    call   func_492ac
  jump_3f97e:
    cmpb   $0x5,0x10(%esp)
    je     jump_3f9a6
    mov    $0x5,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3f9a6
    mov    $0x5,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
    jmp    jump_3f9b7
  jump_3f9a6:
    mov    0xd(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    inc    %esi
    call   func_492ac
  jump_3f9b7:
    mov    %esi,%ebx
    movsbl %ch,%edx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
    cmp    $0x2b,%cl
    jne    jump_3f9d6
    mov    %esi,%ebx
    movsbl %cl,%edx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
  jump_3f9d6:
    mov    $0x49,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x39,%edx
    mov    %edi,%eax
    inc    %esi
    call   func_4a404
    test   %eax,%eax
    je     jump_3fa04
    mov    $0x39,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
  jump_3fa04:
    mov    $0x24,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3fa23
    mov    $0x24,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
  jump_3fa23:
    mov    $0x41,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3fa42
    mov    $0x41,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
  jump_3fa42:
    mov    $0x46,%edx
    lea    0x2(%esi),%ecx
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x23,%edx
    mov    %edi,%eax
    call   func_4a404
    inc    %esi
    test   %eax,%eax
    je     jump_3fa6b
    mov    $0x23,%edx
    jmp    jump_3fa80
  jump_3fa6b:
    mov    $0x21,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3fa8b
    mov    $0x21,%edx
  jump_3fa80:
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    mov    %ecx,%esi
  jump_3fa8b:
    mov    0x9(%esp),%ecx
    mov    0x4(%esp),%eax
    mov    %esi,%ebx
    mov    %edi,%edx
    sar    $0x18,%ecx
    call   func_40084
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x10
  jump_3faa8:
    cmpb   $0x5,0x10(%esp)
    je     jump_3fad1
    mov    $0x5,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3fad1
    mov    $0x5,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    mov    %ebp,%esi
    jmp    jump_3fae2
  jump_3fad1:
    mov    0xd(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    inc    %esi
    call   func_492ac
  jump_3fae2:
    mov    $0x49,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x49,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x49,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x49,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    inc    %esi
    movsbl %ch,%edx
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    inc    %esi
    movsbl %cl,%edx
    mov    %edi,%eax
    mov    %esi,%ebx
    inc    %esi
    call   func_492ac
    cmp    $0xf,%esi
    jge    jump_3f964
  jump_3fb41:
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x4b,%edx
    jle    jump_3fb6a
    mov    0x9(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    inc    %esi
    call   func_492ac
    jmp    jump_3fb91
  jump_3fb6a:
    cmp    $0x32,%edx
    jle    jump_3fb76
    mov    %esi,%ebx
    movsbl %ch,%edx
    jmp    jump_3fb89
  jump_3fb76:
    cmp    $0x19,%edx
    jle    jump_3fb84
    mov    $0x49,%edx
    mov    %esi,%ebx
    jmp    jump_3fb89
  jump_3fb84:
    mov    %esi,%ebx
    movsbl %cl,%edx
  jump_3fb89:
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
  jump_3fb91:
    cmp    $0xf,%esi
    jl     jump_3fb41
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x10
  jump_3fb9f:
    test   %ah,%ah
    je     jump_3f892
    jmp    jump_3f84d


/*----------------------------------------------------------------*/
func_3fbac:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    0x28(%esp),%edi
    mov    %eax,(%esp)
    mov    %dl,0x8(%esp)
    mov    %cl,0xc(%esp)
    mov    0x20(%esp),%ch
    mov    %bl,0x4(%esp)
    mov    0x24(%esp),%cl
    mov    0x5(%esp),%ebp
    mov    %edi,%eax
    sar    $0x18,%ebp
    xor    %ebx,%ebx
    mov    %ebp,%edx
    call   func_492ac
    mov    $0x1,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x2,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    mov    0x1(%esp),%esi
    call   func_492ac
    mov    $0x3,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    sar    $0x18,%esi
    call   func_492ac
    mov    $0x4,%ebx
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x5,%ebx
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x6,%ebx
    movsbl %cl,%esi
    mov    %edi,%eax
    mov    %esi,%edx
    call   func_492ac
    mov    $0x7,%ebx
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x8,%ebx
    movsbl %ch,%edx
    mov    %edi,%eax
    call   func_492ac
    mov    0x18(%edi),%edx
    mov    $0x9,%esi
    cmp    $0x18,%edx
    jge    jump_3fc7a
    mov    $0x9,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    mov    $0xa,%esi
    call   func_492ac
  jump_3fc7a:
    cmp    $0x2b,%cl
    jne    jump_3fc90
    mov    %esi,%ebx
    movsbl %cl,%edx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
  jump_3fc90:
    mov    0x2c(%esp),%ah
    lea    0x1(%esi),%ebp
    cmp    $0x1,%ah
    jb     jump_40075
    jbe    jump_3fcaf
    cmp    $0x2,%ah
    je     jump_3ff51
  jump_3fcaf:
    mov    0x9(%esp),%edx
    mov    0xc(%esp),%ch
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    inc    %esi
    call   func_492ac
    cmp    $0x7,%ch
    je     jump_3fdd2
    mov    $0x7,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3fdd2
    mov    $0x7,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
    jmp    jump_3fde3
  jump_3fcf5:
    mov    $0x47,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x47,%edx
    lea    0x1(%ebp),%esi
    mov    %edi,%eax
    mov    %ebp,%ebx
    call   func_492ac
    mov    $0x47,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x47,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x47,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x49,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    inc    %esi
    movsbl %ch,%edx
    mov    %edi,%eax
    mov    %esi,%ebx
    inc    %esi
    call   func_492ac
    cmp    $0x19,%esi
    jge    jump_3fdc9
  jump_3fd66:
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x50,%edx
    jle    jump_3fd8f
    mov    0x5(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    inc    %esi
    call   func_492ac
    jmp    jump_3fdc4
  jump_3fd8f:
    cmp    $0x3c,%edx
    jle    jump_3fd9b
    mov    %esi,%ebx
    movsbl %ch,%edx
    jmp    jump_3fdbc
  jump_3fd9b:
    cmp    $0x28,%edx
    jle    jump_3fda9
    mov    $0x49,%edx
    mov    %esi,%ebx
    jmp    jump_3fdbc
  jump_3fda9:
    cmp    $0x14,%edx
    jle    jump_3fdb7
    mov    $0x47,%edx
    mov    %esi,%ebx
    jmp    jump_3fdbc
  jump_3fdb7:
    mov    %esi,%ebx
    movsbl %cl,%edx
  jump_3fdbc:
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
  jump_3fdc4:
    cmp    $0x19,%esi
    jl     jump_3fd66
  jump_3fdc9:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x10
  jump_3fdd2:
    mov    0x9(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    inc    %esi
    call   func_492ac
  jump_3fde3:
    cmpb   $0x5,0xc(%esp)
    je     jump_3fe0b
    mov    $0x5,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3fe0b
    mov    $0x5,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
    jmp    jump_3fe1c
  jump_3fe0b:
    mov    0x9(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    inc    %esi
    call   func_492ac
  jump_3fe1c:
    cmpb   $0x8,0xc(%esp)
    je     jump_3fe44
    mov    $0x8,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3fe44
    mov    $0x8,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
    jmp    jump_3fe55
  jump_3fe44:
    mov    0x9(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    inc    %esi
    call   func_492ac
  jump_3fe55:
    mov    $0x49,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x49,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x39,%edx
    mov    %edi,%eax
    inc    %esi
    call   func_4a404
    test   %eax,%eax
    je     jump_3fe92
    mov    $0x39,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
  jump_3fe92:
    mov    $0x24,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3feb1
    mov    $0x24,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
  jump_3feb1:
    mov    $0x41,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3fed0
    mov    $0x41,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
  jump_3fed0:
    mov    $0x46,%edx
    lea    0x4(%esi),%ebp
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x46,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    movsbl %cl,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x23,%edx
    mov    %edi,%eax
    call   func_4a404
    inc    %esi
    test   %eax,%eax
    je     jump_3ff15
    mov    $0x23,%edx
    jmp    jump_3ff2a
  jump_3ff15:
    mov    $0x21,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3ff35
    mov    $0x21,%edx
  jump_3ff2a:
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    mov    %ebp,%esi
  jump_3ff35:
    mov    0x5(%esp),%ecx
    mov    (%esp),%eax
    mov    %esi,%ebx
    mov    %edi,%edx
    sar    $0x18,%ecx
    call   func_40084
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x10
  jump_3ff51:
    cmpb   $0x5,0xc(%esp)
    je     jump_3ff7a
    mov    $0x5,%edx
    mov    %edi,%eax
    call   func_4a404
    test   %eax,%eax
    je     jump_3ff7a
    mov    $0x5,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    mov    %ebp,%esi
    jmp    jump_3ff8b
  jump_3ff7a:
    mov    0x9(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    inc    %esi
    call   func_492ac
  jump_3ff8b:
    mov    $0x49,%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    call   func_492ac
    mov    $0x49,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x49,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x49,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x49,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x49,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    mov    $0x49,%edx
    inc    %esi
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    inc    %esi
    movsbl %ch,%edx
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_492ac
    inc    %esi
    movsbl %cl,%edx
    mov    %edi,%eax
    mov    %esi,%ebx
    inc    %esi
    call   func_492ac
    cmp    $0x19,%esi
    jge    jump_3fdc9
  jump_40017:
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x4b,%edx
    jle    jump_40040
    mov    0x5(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x18,%edx
    inc    %esi
    call   func_492ac
    jmp    jump_40067
  jump_40040:
    cmp    $0x32,%edx
    jle    jump_4004c
    mov    %esi,%ebx
    movsbl %ch,%edx
    jmp    jump_4005f
  jump_4004c:
    cmp    $0x19,%edx
    jle    jump_4005a
    mov    $0x49,%edx
    mov    %esi,%ebx
    jmp    jump_4005f
  jump_4005a:
    mov    %esi,%ebx
    movsbl %cl,%edx
  jump_4005f:
    mov    %edi,%eax
    call   func_492ac
    inc    %esi
  jump_40067:
    cmp    $0x19,%esi
    jl     jump_40017
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x10
  jump_40075:
    test   %ah,%ah
    je     jump_3fcf5
    jmp    jump_3fcaf


/*----------------------------------------------------------------*/
func_40084:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x38,%esp
    mov    %edx,%ebp
    mov    %ebx,0x30(%esp)
    mov    %cl,0x34(%esp)
    lea    0x1c(%esp),%edi
    mov    $data_9694c,%esi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    jmp    jump_400a9
  jump_400a8:
    inc    %ebx
  jump_400a9:
    movswl %bx,%esi
    cmp    $0x14,%esi
    jge    jump_400d0
    mov    0x19(%esp,%esi,1),%edx
    mov    %ebp,%eax
    sar    $0x18,%edx
    call   func_4a404
    test   %eax,%eax
    je     jump_400a8
    movswl %cx,%eax
    mov    0x1c(%esp,%esi,1),%dl
    inc    %ecx
    mov    %dl,(%esp,%eax,1)
    jmp    jump_400a8
  jump_400d0:
    mov    0x30(%esp),%eax
    cmp    0x15a(%ebp),%eax
    jge    jump_40117
    test   %cx,%cx
    je     jump_40117
    call   func_782df
    mov    %eax,%edx
    movswl %cx,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x30(%esp),%ebx
    mov    %edx,%esi
    mov    %ebp,%eax
    mov    -0x3(%esp,%edx,1),%edx
    lea    0x1(%ebx),%edi
    sar    $0x18,%edx
    dec    %ecx
    call   func_492ac
    movswl %cx,%eax
    mov    (%esp,%eax,1),%al
    mov    %edi,0x30(%esp)
    mov    %al,(%esp,%esi,1)
    jmp    jump_400d0
  jump_40117:
    mov    0x30(%esp),%eax
    cmp    0x15a(%ebp),%eax
    jge    jump_4013c
    mov    0x31(%esp),%edx
    mov    %eax,%ebx
    lea    0x1(%eax),%ecx
    sar    $0x18,%edx
    mov    %ebp,%eax
    mov    %ecx,0x30(%esp)
    call   func_492ac
    jmp    jump_40117
  jump_4013c:
    add    $0x38,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_40144:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    test   %edx,%edx
    jne    jump_40164
    mov    $0xf3c,%ebx
    mov    $data_921e8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_40164:
    mov    %ecx,%eax
    call   func_3efe0
    test   %eax,%eax
    jg     jump_40187
    mov    $0xf40,%ebx
    mov    $data_921f4,%edx
    xor    %eax,%eax
    call   func_261a8
    xor    %eax,%eax
    jmp    jump_4020f
  jump_40187:
    xor    %edx,%edx
    mov    $data_a2f6c,%eax
    mov    (%ecx),%dl
    call   func_20684
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_401aa
    mov    $0xf45,%ebx
    mov    $data_92200,%edx
    call   func_26198
  jump_401aa:
    test   %ecx,%ecx
    je     jump_4020d
    mov    %ecx,%eax
    call   func_4a18c
    mov    %eax,(%esp)
    test   %ax,%ax
    jne    jump_401ce
    mov    $0xf51,%ebx
    mov    $data_9220c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_401ce:
    mov    0x44(%esi),%di
    test   %di,%di
    jne    jump_401e8
    mov    $0xf54,%ebx
    mov    $data_92218,%edx
    xor    %eax,%eax
    call   func_26198
  jump_401e8:
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    (%esp),%dx
    mov    %di,%bx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    data_a2f6c,%edx
    movb   $0x1,0x58(%ecx)
    add    %edx,%eax
    mov    %esi,0x59(%ecx)
    inc    %eax
    mov    %eax,0x52(%ecx)
  jump_4020d:
    mov    %ecx,%eax
  jump_4020f:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_40218:
/*----------------------------------------------------------------*/
    mov    (%eax),%eax
    mov    (%edx),%edx
    mov    0x52(%eax),%eax
    sub    0x52(%edx),%eax
    ret


/*----------------------------------------------------------------*/
func_40224:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%ebp
    mov    %edx,0x4(%esp)
    mov    $data_ca1f1,%eax
    xor    %edx,%edx
    xor    %esi,%esi
    mov    %edx,0x8(%esp)
    test   %ebx,%ebx
    je     jump_40244
    mov    %edx,(%ebx)
  jump_40244:
    mov    0x8(%esp),%edx
    mov    0x4(%esp),%edi
    shl    $0x2,%edx
    xor    %ecx,%ecx
    add    %edi,%edx
    jmp    jump_4025b
  jump_40255:
    inc    %ecx
    add    $0x162,%eax
  jump_4025b:
    movswl %cx,%edi
    cmp    $0x6b,%edi
    jge    jump_402b7
    mov    data_d35e5,%edi
    sar    $0x10,%edi
    cmp    %edi,%esi
    jge    jump_402b7
    mov    0x54(%eax),%edi
    sar    $0x10,%edi
    mov    %edi,0xc(%esp)
    cmp    $0xffffffff,%edi
    je     jump_40255
    movzbl 0x0(%ebp),%edi
    mov    %edi,(%esp)
    mov    0xc(%esp),%edi
    inc    %esi
    cmp    (%esp),%edi
    jne    jump_40255
    cmpl   $0x0,0x4(%esp)
    je     jump_40299
    mov    %eax,(%edx)
  jump_40299:
    mov    0x8(%esp),%edi
    inc    %edi
    add    $0x4,%edx
    mov    %edi,0x8(%esp)
    test   %ebx,%ebx
    je     jump_40255
    mov    0xa7(%eax),%edi
    sar    $0x18,%edi
    inc    %edi
    add    %edi,(%ebx)
    jmp    jump_40255
  jump_402b7:
    mov    0x4(%esp),%ebp
    test   %ebp,%ebp
    je     jump_402d4
    mov    $func_40218,%ecx
    mov    $0x4,%ebx
    mov    0x8(%esp),%edx
    mov    %ebp,%eax
    call   func_76f56
  jump_402d4:
    mov    0x8(%esp),%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_402e0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    xor    %ebx,%ebx
    xor    %eax,%eax
    xor    %edx,%edx
    jmp    jump_402f2
  jump_402ee:
    add    $0x7b,%edx
    inc    %eax
  jump_402f2:
    mov    data_ca1ed,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_4030c
    mov    data_bb20a(%edx),%cl
    cmp    (%esi),%cl
    jne    jump_402ee
    inc    %ebx
    jmp    jump_402ee
  jump_4030c:
    mov    %ebx,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_403c0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    xor    %edx,%edx
    mov    data_a3cf4,%cx
    mov    %edx,0x8(%esp)
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %edx,(%esp)
    test   %cx,%cx
    jg     jump_403f3
    jmp    jump_4042e
  jump_403e7:
    mov    data_a3cf4,%ax
    inc    %ebx
    cmp    %ax,%bx
    jge    jump_4042e
  jump_403f3:
    movswl %bx,%ecx
    imul   $0x1ee,%ecx,%eax
    cmpl   $0xffffffff,data_a2f75(%eax)
    je     jump_403e7
    xor    %eax,%eax
    mov    (%edi),%al
    cmp    %eax,%ecx
    je     jump_403e7
    cmpb   $0x3,0x1c0(%ecx,%edi,1)
    jne    jump_403e7
    mov    $0x1,%eax
    movswl %bx,%ecx
    movzbl 0x14(%esi),%ebp
    shl    %cl,%eax
    test   %eax,%ebp
    je     jump_403e7
    jmp    jump_40583
  jump_4042e:
    cmpb   $0x2,0x19d(%edi)
    setne  %al
    mov    0x5a(%esi),%dx
    movzbl %al,%ebp
    xor    %ecx,%ecx
    dec    %ebp
    test   %dx,%dx
    jle    jump_40495
    jmp    jump_40450
  jump_40449:
    inc    %ecx
    cmp    0x5a(%esi),%cx
    jge    jump_40495
  jump_40450:
    movswl %cx,%ebx
    mov    0x46(%esi,%ebx,4),%ebx
    xor    %eax,%eax
    mov    0x57(%ebx),%al
    cmp    $0xff,%eax
    jne    jump_40449
    mov    %ebp,%edx
    mov    %ebx,%eax
    call   func_3636c
    mov    0x66(%ebx),%dl
    and    $0x2,%dl
    mov    %dl,0x10(%esp)
    xor    %edx,%edx
    mov    0x10(%esp),%dl
    test   %edx,%edx
    je     jump_40485
    add    $0x28,%eax
  jump_40485:
    cmp    0x8(%esp),%ax
    jbe    jump_40449
    mov    %eax,0x8(%esp)
    mov    %ebx,(%esp)
    jmp    jump_40449
  jump_40495:
    mov    $0x46,%ecx
    mov    0x14(%esi),%al
    mov    %ecx,0x4(%esp)
    and    $0xff,%eax
    jne    jump_40523
    mov    $0x23,%ebx
    mov    0x44(%esi),%ax
    xor    %ecx,%ecx
    mov    %ebx,0x4(%esp)
    mov    %cx,0xc(%esp)
    test   %ax,%ax
    jg     jump_404e1
    jmp    jump_40573
  jump_404ca:
    mov    0xc(%esp),%eax
    inc    %eax
    mov    0x44(%esi),%dx
    mov    %ax,0xc(%esp)
    cmp    %dx,%ax
    jge    jump_40573
  jump_404e1:
    mov    0xa(%esp),%ebx
    sar    $0x10,%ebx
    mov    0x2c(%esi,%ebx,4),%ecx
    test   %ecx,%ecx
    jne    jump_40501
    mov    $0x100e,%ebx
    mov    $data_92224,%edx
    xor    %eax,%eax
    call   func_26198
  jump_40501:
    mov    (%ecx),%ebx
    cmp    %ebx,%esi
    jne    jump_4050a
    mov    0x4(%ecx),%ebx
  jump_4050a:
    xor    %eax,%eax
    mov    (%edi),%cl
    mov    0x14(%ebx),%al
    mov    $0x1,%ebx
    shl    %cl,%ebx
    test   %ebx,%eax
    je     jump_404ca
    shrw   0x4(%esp)
    jmp    jump_40573
  jump_40523:
    mov    data_a3cf4,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jg     jump_40540
    jmp    jump_40573
  jump_40533:
    mov    data_a3cf4,%bx
    inc    %eax
    cmp    %bx,%ax
    jge    jump_40573
  jump_40540:
    movswl %ax,%ebx
    cmpb   $0x2,0x1c0(%edi,%ebx,1)
    jne    jump_40533
    mov    $0x1,%edx
    xor    %ebx,%ebx
    movswl %ax,%ecx
    mov    0x14(%esi),%bl
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_40533
    mov    $0x1,%edx
    mov    (%edi),%cl
    shl    %cl,%edx
    test   %edx,%ebx
    jne    jump_40533
    xor    %ecx,%ecx
    mov    %ecx,0x4(%esp)
  jump_40573:
    mov    0x8(%esp),%eax
    cmp    0x4(%esp),%ax
    jbe    jump_40583
    mov    (%esp),%ebx
    jmp    jump_40585
  jump_40583:
    xor    %ebx,%ebx
  jump_40585:
    mov    %ebx,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_40590:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    data_10509c,%edx
    test   %edx,%edx
    jne    jump_405e9
    mov    $0xffffffff,%ebx
    xor    %eax,%eax
    mov    %ebx,data_1050a0
    jmp    jump_405b4
  jump_405b0:
    add    $0x4b,%eax
    inc    %edx
  jump_405b4:
    xor    %ecx,%ecx
    mov    data_105258,%cx
    cmp    %ecx,%edx
    jge    jump_405df
    mov    $0x1,%edi
    mov    data_10529f(%eax),%ebx
    mov    (%esi),%cl
    sar    $0x18,%ebx
    shl    %cl,%edi
    test   %edi,%ebx
    jne    jump_405b0
    xor    %ecx,%ecx
    mov    %ecx,data_1050a0
  jump_405df:
    movl   $0xffffffff,data_10509c
  jump_405e9:
    mov    data_1050a0,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_405f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    call   func_40590
    xor    %esi,%esi
    test   %eax,%eax
    je     jump_4065c
    mov    data_ca1ef,%cx
    xor    %edx,%edx
    test   %cx,%cx
    jle    jump_4065c
    jmp    jump_40623
  jump_40616:
    mov    data_ca1ef,%di
    inc    %edx
    cmp    %di,%dx
    jge    jump_4065c
  jump_40623:
    movswl %dx,%eax
    imul   $0x7b,%eax,%eax
    add    $data_bb1b3,%eax
    mov    0x57(%eax),%cl
    cmp    (%ebx),%cl
    jne    jump_40616
    cmp    data_104bea,%cl
    jne    jump_4064c
    cmpl   $0x0,0x5a(%eax)
    jne    jump_4064c
    cmpl   $0x0,data_a0d00
    je     jump_40616
  jump_4064c:
    call   func_3623c
    test   %eax,%eax
    je     jump_40616
    mov    $0xffffffff,%esi
    jmp    jump_40616
  jump_4065c:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_40664:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    xor    %ebx,%ebx
    xor    %edx,%edx
    xor    %eax,%eax
    jmp    jump_40678
  jump_40674:
    add    $0x4b,%eax
    inc    %edx
  jump_40678:
    xor    %ecx,%ecx
    mov    data_105258,%cx
    cmp    %ecx,%edx
    jge    jump_4069e
    mov    $0x1,%ebp
    mov    data_10529f(%eax),%esi
    mov    (%edi),%cl
    sar    $0x18,%esi
    shl    %cl,%ebp
    test   %ebp,%esi
    je     jump_40674
    inc    %ebx
    jmp    jump_40674
  jump_4069e:
    mov    %ebx,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_406a8:
    .long   func_40ddc
    .long   func_410fa
    .long   func_40fe7
    .long   func_4121e
    .long   func_4121e
    .long   func_4121e
    .long   func_4108a


/*----------------------------------------------------------------*/
func_406c4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3bc,%esp
    mov    %eax,%edi
    mov    %edx,0x394(%esp)
    mov    %ebx,0x384(%esp)
    test   %ebx,%ebx
    jne    jump_406f3
    mov    $0x1081,%ebx
    mov    $data_92230,%edx
    xor    %eax,%eax
    call   func_26198
  jump_406f3:
    mov    0x394(%esp),%eax
    mov    0x394(%esp),%edx
    mov    0x15(%eax),%al
    mov    0x14(%edx),%ah
    mov    (%edi),%cl
    or     %ah,%al
    xor    %edx,%edx
    mov    %al,0x3b8(%esp)
    mov    $0x1,%eax
    mov    0x3b8(%esp),%dl
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_40dcd
    mov    0x394(%esp),%edx
    mov    %edi,%eax
    call   func_3b56c
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x394(%esp),%eax
    mov    %dx,0x3b4(%esp)
    mov    %dx,0x3a8(%esp)
    mov    %dx,0x3ac(%esp)
    mov    %dx,0x39c(%esp)
    mov    %esp,%edx
    mov    %ebx,0x388(%esp)
    call   func_1d794
    mov    %eax,%ebp
    jmp    jump_40778
  jump_40777:
    inc    %ecx
  jump_40778:
    movswl %cx,%eax
    cmp    %ebp,%eax
    jge    jump_40822
    mov    (%esp,%eax,4),%esi
    test   %esi,%esi
    jne    jump_4079b
    mov    $0x10ac,%ebx
    mov    $data_9223c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4079b:
    mov    0x54(%esi),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    (%edi),%al
    cmp    %eax,%edx
    jne    jump_40777
    cmpl   $0x0,0x88(%esi)
    jle    jump_40777
    cmpb   $0x1,0x58(%esi)
    je     jump_40777
    mov    0x3ac(%esp),%edx
    mov    0x88(%esi),%ax
    mov    0x39c(%esp),%ebx
    add    %eax,%edx
    add    0x94(%esi),%bx
    mov    0x3b2(%esp),%eax
    sar    $0x10,%eax
    mov    %dx,0x3ac(%esp)
    mov    %esi,0x1ac(%esp,%eax,4)
    mov    0x3b4(%esp),%eax
    mov    %bx,0x39c(%esp)
    inc    %eax
    mov    0x5d(%esi),%dh
    mov    %ax,0x3b4(%esp)
    test   %dh,%dh
    je     jump_40777
    movl   $0xffffffff,0x388(%esp)
    jmp    jump_40777
  jump_40822:
    mov    0x394(%esp),%edx
    mov    0x5a(%edx),%bx
    xor    %eax,%eax
    test   %bx,%bx
    jle    jump_4087c
    mov    0x394(%esp),%ecx
  jump_4083b:
    movswl %ax,%edx
    shl    $0x2,%edx
    add    %ecx,%edx
    mov    0x46(%edx),%edx
    mov    0x57(%edx),%bl
    cmp    (%edi),%bl
    jne    jump_4086e
    mov    0x3a8(%esp),%esi
    mov    0x3a6(%esp),%ebx
    inc    %esi
    sar    $0x10,%ebx
    mov    %si,0x3a8(%esp)
    mov    %edx,0x358(%esp,%ebx,4)
  jump_4086e:
    mov    0x394(%esp),%edx
    inc    %eax
    cmp    0x5a(%edx),%ax
    jl     jump_4083b
  jump_4087c:
    mov    0x3b2(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_4089c
    mov    0x3a6(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_40dcd
  jump_4089c:
    mov    0x394(%esp),%eax
    cmp    0x7(%edi),%eax
    je     jump_409e9
    mov    0x3b2(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_409e9
    mov    data_104bea,%bl
    cmp    (%edi),%bl
    je     jump_409e9
    xor    %edx,%edx
    mov    data_107f3d,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    (%edi),%cl
    mov    data_10529f(%eax),%eax
    mov    $0x1,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_409e9
    mov    $0xffffffff,%edx
    mov    %edi,%eax
    call   func_43374
    mov    %al,%cl
    mov    0x7(%edi),%eax
    xor    %ebx,%ebx
    mov    0x14(%eax),%ch
    mov    0x15(%eax),%dl
    mov    %ch,%al
    or     %ch,%dl
    and    $0x7f,%al
    and    $0xff,%eax
    jne    jump_40929
    mov    $0xffffffff,%ebx
  jump_40929:
    test   %ebx,%ebx
    jne    jump_40940
    xor    %eax,%eax
    and    $0xff,%edx
    mov    %cl,%al
    test   %eax,%edx
    je     jump_40940
    mov    $0xffffffff,%ebx
  jump_40940:
    test   %ebx,%ebx
    je     jump_409e9
    mov    0x3b4(%esp),%ecx
    xor    %esi,%esi
    test   %cx,%cx
    jg     jump_4096c
    jmp    jump_409e9
  jump_4095b:
    mov    0x3b4(%esp),%eax
    inc    %esi
    cmp    %ax,%si
    jge    jump_409e9
  jump_4096c:
    movswl %si,%ecx
    shl    $0x2,%ecx
    mov    0x1ac(%esp,%ecx,1),%ebx
    cmpb   $0x4,0x58(%ebx)
    jne    jump_4095b
    cmpl   $0x0,0x88(%ebx)
    je     jump_4095b
    mov    $0x24,%edx
    mov    %ebx,%eax
    call   func_4937c
    cmp    $0xffffffff,%eax
    je     jump_4095b
    imul   $0x7,%eax,%eax
    lea    0xab(%ebx),%edx
    movb   $0x1,0x62(%ebx)
    add    %eax,%edx
    mov    %ebx,%eax
    mov    %edx,0x63(%ebx)
    xor    %edx,%edx
    movb   $0x5,0x67(%ebx)
    call   func_49b3c
    test   $0x1,%al
    je     jump_4095b
    mov    0x384(%esp),%eax
    movb   $0x3,(%eax)
    mov    0x384(%esp),%edx
    mov    0x1ac(%esp,%ecx,1),%eax
    mov    $0xffffffff,%edi
    mov    %eax,0x1(%edx)
    mov    %edi,%eax
    add    $0x3bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_409e9:
    xor    %edx,%edx
    xor    %eax,%eax
    xor    %ebp,%ebp
    mov    %dx,0x3b0(%esp)
    mov    %eax,0x37c(%esp)
    mov    $0x1,%al
    jmp    jump_40a66
  jump_40a02:
    mov    data_104bea,%cl
    mov    (%edi),%ah
    cmp    %cl,%ah
    je     jump_40a5b
    xor    %ecx,%ecx
    mov    data_104bea,%cl
    cmp    %ecx,%ebx
    jne    jump_40a5b
    mov    0x394(%esp),%ebx
    mov    0x2(%ebx),%ebx
    sar    $0x10,%ebx
    mov    %ah,%cl
    movzbl data_d8460(%ebx),%esi
    mov    $0x1,%ebx
    shl    %cl,%ebx
    test   %ebx,%esi
    je     jump_40a5b
    mov    0x3ae(%esp),%ebx
    sar    $0x10,%ebx
    mov    0x36c(%esp,%ebx,2),%ch
    or     $0x20,%ch
    mov    $0xffffffff,%ebp
    mov    %ch,0x36c(%esp,%ebx,2)
  jump_40a5b:
    incw   0x3b0(%esp)
  jump_40a63:
    inc    %edx
    add    %al,%al
  jump_40a66:
    movswl %dx,%ebx
    cmp    $0x7,%ebx
    jge    jump_40b44
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    %al,%cl
    mov    0x3b8(%esp),%bl
    mov    %ecx,0x38c(%esp)
    test   %ecx,%ebx
    je     jump_40a63
    mov    0x3ae(%esp),%ebx
    sar    $0x10,%ebx
    add    %ebx,%ebx
    mov    0x394(%esp),%esi
    xor    %ecx,%ecx
    mov    %dx,0x36c(%esp,%ebx,1)
    mov    0x15(%esi),%cl
    mov    0x38c(%esp),%esi
    test   %esi,%ecx
    je     jump_40abd
    orb    $0x8,0x36c(%esp,%ebx,1)
  jump_40abd:
    mov    0x394(%esp),%ebx
    xor    %ecx,%ecx
    mov    0x14(%ebx),%cl
    xor    %ebx,%ebx
    mov    %al,%bl
    test   %ebx,%ecx
    je     jump_40ae3
    mov    0x3ae(%esp),%ebx
    sar    $0x10,%ebx
    orb    $0x10,0x36c(%esp,%ebx,2)
  jump_40ae3:
    movswl %dx,%ebx
    cmpb   $0x2,0x1c0(%edi,%ebx,1)
    jne    jump_40a02
    mov    data_104bea,%bl
    cmp    (%edi),%bl
    jne    jump_40b1f
    cmpl   $0xffffffff,data_a0d00
    je     jump_40b1f
    mov    0x394(%esp),%ecx
    xor    %ebx,%ebx
    mov    0x15(%ecx),%bl
    xor    %ecx,%ecx
    mov    %al,%cl
    test   %ebx,%ecx
    je     jump_40a5b
  jump_40b1f:
    mov    0x3ae(%esp),%ebx
    sar    $0x10,%ebx
    mov    0x36c(%esp,%ebx,2),%cl
    or     $0x20,%cl
    mov    $0xffffffff,%ebp
    mov    %cl,0x36c(%esp,%ebx,2)
    jmp    jump_40a5b
  jump_40b44:
    mov    0x3ae(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jg     jump_40b63
    mov    $0x1133,%ebx
    mov    $data_92248,%edx
    xor    %eax,%eax
    call   func_26198
  jump_40b63:
    mov    0x3ae(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_40b7d
    movl   $0xffffffff,0x37c(%esp)
  jump_40b7d:
    cmpl   $0x0,0x37c(%esp)
    jne    jump_40c86
    test   %ebp,%ebp
    jne    jump_40c86
    mov    (%edi),%al
    cmp    data_104bea,%al
    jne    jump_40baa
    cmpl   $0xffffffff,data_a0d00
    jne    jump_40c86
  jump_40baa:
    xor    %ebx,%ebx
    mov    0x3b0(%esp),%ecx
    mov    %bx,0x398(%esp)
    test   %cx,%cx
    jle    jump_40c86
    jmp    jump_40be6
  jump_40bc6:
    mov    0x398(%esp),%eax
    inc    %eax
    mov    0x3b0(%esp),%edx
    mov    %ax,0x398(%esp)
    cmp    %dx,%ax
    jge    jump_40c86
  jump_40be6:
    mov    0x396(%esp),%eax
    sar    $0x10,%eax
    mov    0x36c(%esp,%eax,2),%ax
    xor    %ah,%ah
    and    $0x7,%al
    mov    %ax,0x3a0(%esp)
    mov    0x39e(%esp),%eax
    sar    $0x10,%eax
    cmpb   $0x3,0x1c0(%edi,%eax,1)
    jne    jump_40bc6
    mov    0x3b0(%esp),%ebx
    xor    %eax,%eax
    test   %bx,%bx
    jle    jump_40bc6
    jmp    jump_40c35
  jump_40c28:
    mov    0x3b0(%esp),%ecx
    inc    %eax
    cmp    %cx,%ax
    jge    jump_40bc6
  jump_40c35:
    mov    0x39e(%esp),%edx
    sar    $0x10,%edx
    imul   $0x1ee,%edx,%esi
    movswl %ax,%edx
    add    %edx,%edx
    mov    0x36c(%esp,%edx,1),%bx
    xor    %bh,%bh
    and    $0x7,%bl
    movswl %bx,%ebx
    cmpb   $0x2,data_a3132(%esi,%ebx,1)
    jne    jump_40c28
    cmpb   $0x3,0x1c0(%edi,%ebx,1)
    je     jump_40c28
    mov    0x36c(%esp,%edx,1),%bl
    or     $0x20,%bl
    mov    $0xffffffff,%ebp
    mov    %bl,0x36c(%esp,%edx,1)
    jmp    jump_40c28
  jump_40c86:
    cmp    $0xffffffff,%ebp
    jne    jump_40d25
    mov    data_104bea,%bh
    cmp    (%edi),%bh
    jne    jump_40cae
    cmp    data_a0d00,%ebp
    je     jump_40cae
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    jne    jump_40d25
  jump_40cae:
    mov    0x384(%esp),%esi
    push   %esi
    mov    0x398(%esp),%ebp
    mov    0x39e(%esp),%eax
    push   %ebp
    sar    $0x10,%eax
    push   %eax
    mov    0x3b6(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0x368(%esp),%eax
    mov    0x3c2(%esp),%ecx
    push   %eax
    mov    0x3ba(%esp),%eax
    mov    0x3c2(%esp),%edx
    sar    $0x10,%eax
    lea    0x380(%esp),%ebx
    push   %eax
    lea    0x1c4(%esp),%eax
    sar    $0x10,%ecx
    push   %eax
    sar    $0x10,%edx
    mov    %edi,%eax
    call   func_41268
    cmp    $0xffffffff,%eax
    jne    jump_40d25
    mov    %eax,%edi
    mov    %edi,%eax
    add    $0x3bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_40d25:
    mov    data_104bea,%cl
    cmp    (%edi),%cl
    jne    jump_40d46
    cmpl   $0x0,0x388(%esp)
    jne    jump_40d46
    cmpl   $0x0,data_a0d00
    je     jump_40dcd
  jump_40d46:
    mov    0x3b4(%esp),%eax
    xor    %esi,%esi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    test   %ax,%ax
    jle    jump_40dc5
    jmp    jump_40d6b
  jump_40d5e:
    mov    0x3b4(%esp),%edx
    inc    %ebx
    cmp    %dx,%bx
    jge    jump_40dc5
  jump_40d6b:
    movswl %bx,%eax
    mov    0x1ac(%esp,%eax,4),%eax
    cmpb   $0x0,0x5d(%eax)
    jne    jump_40d9f
    mov    (%edi),%al
    cmp    data_104bea,%al
    jne    jump_40d8e
    cmpl   $0xffffffff,data_a0d00
    jne    jump_40d9f
  jump_40d8e:
    movswl %bx,%eax
    mov    0x1ac(%esp,%eax,4),%edx
    mov    %edi,%eax
    call   func_3ebdc
  jump_40d9f:
    movswl %bx,%edx
    mov    0x1ac(%esp,%edx,4),%edx
    movswl %cx,%eax
    cmp    0x88(%edx),%eax
    jge    jump_40d5e
    cmpb   $0x0,0x5d(%edx)
    je     jump_40d5e
    mov    %edx,%esi
    mov    0x88(%edx),%cx
    jmp    jump_40d5e
  jump_40dc5:
    test   %esi,%esi
    jne    jump_4124f
  jump_40dcd:
    xor    %edi,%edi
    mov    %edi,%eax
    add    $0x3bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_40ddc:
/*----------------------------------------------------------------*/
    cmpb   $0x3,0x58(%esi)
    jne    jump_40dec
    mov    %esi,%edx
    mov    0x59(%esi),%eax
    call   func_35c38
  jump_40dec:
    cmpb   $0x4,0x58(%esi)
    je     jump_40e03
    mov    $0x1188,%ebx
    mov    $data_92254,%edx
    xor    %eax,%eax
    call   func_26198
  jump_40e03:
    mov    data_104bea,%dl
    mov    (%edi),%al
    cmp    %dl,%al
    je     jump_40e3a
    xor    %edx,%edx
    mov    %al,%dl
    mov    0x394(%esp),%eax
    call   func_1d834
    cmp    $0xffffffff,%eax
    jne    jump_40e3a
    cmp    0x28(%esi),%eax
    je     jump_40e3a
    mov    $0x49,%edx
    mov    %esi,%eax
    call   func_4a534
    cmp    $0xffffffff,%eax
    je     jump_40dcd
  jump_40e3a:
    mov    0x394(%esp),%ecx
    mov    0x5e(%esi),%eax
    cmp    %ecx,%eax
    jne    jump_40e81
    xor    %ecx,%eax
    mov    0x54(%esi),%edx
    mov    data_104bea,%al
    sar    $0x10,%edx
    movb   $0x0,0x5d(%esi)
    cmp    %eax,%edx
    jne    jump_40e66
    cmpl   $0xffffffff,data_a0d00
    jne    jump_40e6f
  jump_40e66:
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_3ebdc
  jump_40e6f:
    mov    $0xffffffff,%edi
    mov    %edi,%eax
    add    $0x3bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_40e81:
    mov    0x2(%ecx),%edx
    sar    $0x10,%edx
    mov    %eax,%ebx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %eax,%edx
    mov    0x2(%ebx),%eax
    shl    $0x2,%edx
    sar    $0x10,%eax
    mov    data_d5d47(%edx,%eax,1),%al
    xor    %ah,%ah
    xor    %edi,%edi
    xor    %edx,%edx
    mov    %edi,0x380(%esp)
    mov    0x44(%ecx),%di
    mov    %ax,0x3a4(%esp)
    test   %di,%di
    jg     jump_40edc
    jmp    jump_40f54
  jump_40eca:
    mov    0x394(%esp),%eax
    inc    %edx
    cmp    0x44(%eax),%dx
    jge    jump_40f54
  jump_40edc:
    movswl %dx,%eax
    mov    0x394(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    0x2c(%eax),%eax
    mov    %eax,0x390(%esp)
    cmp    (%eax),%ecx
    je     jump_40f13
    mov    0x390(%esp),%eax
    mov    (%eax),%eax
    mov    0x2(%eax),%eax
    sar    $0x10,%eax
    imul   $0x64,%eax,%ecx
    mov    0x2(%ebx),%eax
    sar    $0x10,%eax
    jmp    jump_40f2c
  jump_40f13:
    mov    0x390(%esp),%eax
    mov    0x4(%eax),%eax
    mov    0x2(%eax),%eax
    sar    $0x10,%eax
    imul   $0x64,%eax,%eax
    mov    0x2(%ebx),%ecx
    sar    $0x10,%ecx
  jump_40f2c:
    mov    data_d5d47(%ecx,%eax,1),%al
    xor    %ah,%ah
    mov    0x3a2(%esp),%edi
    sar    $0x10,%edi
    movswl %ax,%ecx
    lea    -0x1(%edi),%eax
    cmp    %eax,%ecx
    jne    jump_40eca
    movl   $0xffffffff,0x380(%esp)
  jump_40f54:
    cmpl   $0xffffffff,0x380(%esp)
    je     jump_40f6f
    mov    $0x11cc,%ebx
    mov    $data_92260,%edx
    xor    %eax,%eax
    call   func_26198
  jump_40f6f:
    mov    0x390(%esp),%eax
    testb  $0x2,0x23(%eax)
    je     jump_40f9d
    mov    %eax,%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   func_4a480
    test   %eax,%eax
    je     jump_40f9d
    mov    0x384(%esp),%eax
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
    jmp    jump_40fc3
  jump_40f9d:
    movb   $0x0,0x62(%esi)
    mov    0x390(%esp),%eax
    movl   $0x0,0x63(%esi)
    mov    %eax,0x68(%esi)
    mov    0x384(%esp),%eax
    movb   $0x2,0x67(%esi)
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
  jump_40fc3:
    mov    0x3aa(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_40dcd
    mov    $0xffffffff,%edi
    mov    %edi,%eax
    add    $0x3bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_40fe7:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    0x54(%esi),%eax
    mov    data_104bea,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    je     jump_4100a
    mov    $0x11f3,%ebx
    mov    $data_9226c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4100a:
    mov    0x58(%esi),%dl
    cmp    $0x3,%dl
    jne    jump_41055
    mov    0x59(%esi),%eax
    cmp    0x5e(%esi),%eax
    je     jump_4102b
    mov    $0x11f7,%ebx
    mov    $data_92278,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4102b:
    mov    data_10f096,%eax
    sar    $0x10,%eax
    movb   $0x0,0x5d(%esi)
    cmp    $0x10,%eax
    je     jump_40fc3
    mov    $0x10,%edx
    mov    $data_10ae70,%eax
    mov    %esi,%ebx
    mov    0x5e(%esi),%ecx
    call   func_55aec
    jmp    jump_40fc3
  jump_41055:
    cmp    $0x4,%dl
    je     jump_41063
    movb   $0x0,0x5d(%esi)
    jmp    jump_40fc3
  jump_41063:
    movb   $0x0,0x62(%esi)
    movl   $0x0,0x63(%esi)
    mov    0x5e(%esi),%eax
    mov    %eax,0x68(%esi)
    mov    0x384(%esp),%eax
    movb   $0x1,0x67(%esi)
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
    jmp    jump_40fc3


/*----------------------------------------------------------------*/
func_4108a:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    mov    0x54(%esi),%edx
    mov    data_104bea,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    je     jump_410ac
    mov    $0x121d,%ebx
    mov    $data_92284,%edx
    xor    %eax,%eax
    call   func_26198
  jump_410ac:
    cmpb   $0x4,0x58(%esi)
    je     jump_410c3
    mov    $0x121e,%ebx
    mov    $data_92290,%edx
    xor    %eax,%eax
    call   func_26198
  jump_410c3:
    testb  $0x8,0x84(%esi)
    je     jump_410d5
    movb   $0x0,0x5d(%esi)
    jmp    jump_40fc3
  jump_410d5:
    cmpb   $0x0,0x62(%esi)
    je     jump_410e4
    movb   $0x0,0x5d(%esi)
    jmp    jump_40fc3
  jump_410e4:
    mov    0x384(%esp),%eax
    movb   $0x3,0x67(%esi)
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
    jmp    jump_40fc3


/*----------------------------------------------------------------*/
func_410fa:
/*----------------------------------------------------------------*/
    mov    0x28(%esi),%ebp
    mov    0x5e(%esi),%ecx
    test   %ebp,%ebp
    jne    jump_41115
    mov    $0x123f,%ebx
    mov    $data_9229c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_41115:
    xor    %eax,%eax
    mov    0x57(%ecx),%al
    cmp    $0xff,%eax
    je     jump_4112a
    movb   $0x0,0x5d(%esi)
    jmp    jump_40fc3
  jump_4112a:
    mov    0x58(%esi),%bl
    cmp    $0x3,%bl
    jne    jump_411e4
    mov    0x59(%esi),%eax
    cmp    %eax,%ecx
    je     jump_41164
    mov    %esi,%edx
    call   func_35c38
    cmpb   $0x4,0x58(%esi)
    je     jump_40fc3
    mov    $0x1252,%ebx
    mov    $data_922a8,%edx
    xor    %eax,%eax
    call   func_26198
    jmp    jump_40fc3
  jump_41164:
    mov    $0x47,%edx
    mov    %esi,%eax
    call   func_4937c
    mov    %eax,%ebp
    cmp    $0xffffffff,%eax
    jne    jump_41188
    mov    $0x125a,%ebx
    mov    $data_922b4,%edx
    xor    %eax,%eax
    call   func_26198
  jump_41188:
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_492f8
    mov    (%edi),%al
    movw   $0x2,0x42(%ecx)
    mov    %al,0x57(%ecx)
    mov    $0xffffffff,%ebx
    mov    data_a2f6c,%eax
    mov    $0x5,%edx
    mov    %eax,0x67(%ecx)
    mov    %ecx,%eax
    call   func_34ae4
    decl   0x88(%esi)
    mov    $0x1,%al
    mov    (%edi),%cl
    mov    0x394(%esp),%edx
    shl    %cl,%al
    or     %al,0x14(%edx)
    mov    0x3ac(%esp),%ecx
    dec    %ecx
    movb   $0x0,0x5d(%esi)
    mov    %cx,0x3ac(%esp)
    jmp    jump_40fc3
  jump_411e4:
    cmp    $0x4,%bl
    je     jump_411fa
    mov    $0x126c,%ebx
    mov    $data_922c0,%edx
    xor    %eax,%eax
    call   func_26198
  jump_411fa:
    movb   $0x0,0x62(%esi)
    movl   $0x0,0x63(%esi)
    movb   $0x1,0x67(%esi)
    mov    0x384(%esp),%eax
    mov    %ecx,0x68(%esi)
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
    jmp    jump_40fc3


/*----------------------------------------------------------------*/
func_4121e:
/*----------------------------------------------------------------*/
    mov    0x3ac(%esp),%ebx
    mov    0x88(%esi),%ax
    movl   $0x0,0x94(%esi)
    sub    %eax,%ebx
    movl   $0x0,0x88(%esi)
    mov    %bx,0x3ac(%esp)
    jmp    jump_40fc3
  jump_4124f:
    mov    0x5d(%esi),%al
    dec    %al
    cmp    $0x6,%al
    ja     func_4121e
    and    $0xff,%eax
    jmp    *%cs:vtable_406a8(,%eax,4)


/*----------------------------------------------------------------*/
func_41268:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x400,%esp
    mov    %eax,0x320(%esp)
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    %ecx,0x3c0(%esp)
    lea    0x328(%esp),%ecx
    mov    0x424(%esp),%ebx
    mov    $0x2,%edx
    call   func_45958
    lea    0x3b4(%esp),%ecx
    mov    0x424(%esp),%ebx
    mov    $0x3,%edx
    mov    0x320(%esp),%eax
    call   func_45958
    mov    0x320(%esp),%eax
    mov    $0xffffffff,%ecx
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    (%eax),%dl
    mov    0x424(%esp),%eax
    call   func_1da4c
    mov    0x320(%esp),%eax
    mov    $0xffffffff,%ecx
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    (%eax),%dl
    mov    0x424(%esp),%eax
    call   func_1db70
    mov    $0x1,%edx
    mov    0x424(%esp),%eax
    mov    %dx,0x3f0(%esp)
    xor    %edx,%edx
    mov    0x424(%esp),%ebx
    mov    0x15(%eax),%dl
    xor    %eax,%eax
    mov    0x14(%ebx),%al
    mov    data_104bea,%cl
    or     %eax,%edx
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    jne    jump_41338
    movw   $0x1,0x3f0(%esp)
  jump_41338:
    mov    0x320(%esp),%eax
    mov    (%eax),%al
    cmp    data_104bea,%al
    jne    jump_4135c
    cmpl   $0x0,data_a0d00
    jne    jump_4135c
    movw   $0x1,0x3f0(%esp)
  jump_4135c:
    xor    %dl,%dl
    xor    %eax,%eax
    mov    %dl,0x3fc(%esp)
    test   %si,%si
    jle    jump_4139a
    mov    $0x1,%ch
  jump_4136e:
    movswl %ax,%edx
    add    %edx,%edx
    add    %edi,%edx
    mov    (%edx),%bx
    xor    %bh,%bh
    and    $0x20,%bl
    movswl %bx,%ebx
    test   %ebx,%ebx
    je     jump_41394
    mov    (%edx),%cl
    and    $0x7,%cl
    mov    %ch,%dl
    shl    %cl,%dl
    or     %dl,0x3fc(%esp)
  jump_41394:
    inc    %eax
    cmp    %si,%ax
    jl     jump_4136e
  jump_4139a:
    mov    %esp,%edx
    mov    0x424(%esp),%eax
    mov    $0x1,%esi
    call   func_1d794
    xor    %ebx,%ebx
    mov    %eax,%edi
    mov    %ebx,0x32c(%esp)
    xor    %eax,%eax
    jmp    jump_413bd
  jump_413bc:
    inc    %eax
  jump_413bd:
    movswl %ax,%edx
    cmp    %edi,%edx
    jge    jump_413ef
    mov    (%esp,%edx,4),%edx
    cmpb   $0x4,0x58(%edx)
    jne    jump_413bc
    mov    0x54(%edx),%ecx
    xor    %ebx,%ebx
    sar    $0x10,%ecx
    mov    %esi,%edx
    mov    0x3fc(%esp),%bl
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_413bc
    movl   $0xffffffff,0x32c(%esp)
  jump_413ef:
    cmpl   $0x0,0x32c(%esp)
    jne    jump_4141d
    mov    0x320(%esp),%eax
    mov    data_104bea,%bh
    cmp    (%eax),%bh
    jne    jump_4141d
    cmpl   $0x0,data_a0d00
    jne    jump_4141d
    mov    $0x2,%esi
    jmp    jump_43176
  jump_4141d:
    cmpw   $0x0,0x3c0(%esp)
    je     jump_42e4b
    xor    %esi,%esi
    mov    0x3ee(%esp),%eax
    mov    %esi,0x330(%esp)
    sar    $0x10,%eax
    mov    %esi,0x358(%esp)
    cmp    $0x1,%eax
    jne    jump_42924
    cmpl   $0x0,0x32c(%esp)
    je     jump_421d6
    lea    0x1d4(%esp),%eax
    add    $0x16,%eax
    mov    %esi,-0xc(%eax)
    mov    %esi,-0x8(%eax)
    mov    %esi,0x334(%esp)
    mov    %esi,-0x4(%eax)
    mov    %esi,0x338(%esp)
    mov    %esi,(%eax)
    xor    %ecx,%ecx
    mov    %esi,0x4(%eax)
    xor    %esi,%ecx
    mov    %esi,0x8(%eax)
    mov    0x3c0(%esp),%eax
    mov    %cx,0x3cc(%esp)
    test   %ax,%ax
    jg     jump_414c3
    jmp    jump_416b1
  jump_414a3:
    mov    0x3cc(%esp),%eax
    inc    %eax
    mov    0x3c0(%esp),%edx
    mov    %ax,0x3cc(%esp)
    cmp    %dx,%ax
    jge    jump_416b1
  jump_414c3:
    mov    0x3ca(%esp),%eax
    sar    $0x10,%eax
    mov    0x410(%esp),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    (%eax),%eax
    mov    0x58(%eax),%cl
    mov    %eax,0x380(%esp)
    cmp    $0x4,%cl
    jne    jump_414a3
    xor    %ebx,%ebx
    mov    %bx,0x3f4(%esp)
    jmp    jump_414fe
  jump_414f6:
    incw   0x3f4(%esp)
  jump_414fe:
    mov    0x3f2(%esp),%eax
    sar    $0x10,%eax
    cmp    %edi,%eax
    jge    jump_4168d
    shl    $0x2,%eax
    mov    %eax,0x344(%esp)
    mov    (%esp,%eax,1),%eax
    mov    $0x1,%edx
    mov    %eax,0x348(%esp)
    mov    0x54(%eax),%ecx
    xor    %eax,%eax
    sar    $0x10,%ecx
    mov    0x3fc(%esp),%al
    shl    %cl,%edx
    test   %eax,%edx
    je     jump_414f6
    mov    0x348(%esp),%edx
    mov    0x62(%edx),%al
    mov    %al,0x1d4(%esp)
    mov    0x63(%edx),%eax
    mov    %eax,0x1d5(%esp)
    mov    0x67(%edx),%al
    add    $0x62,%edx
    mov    %al,0x1d9(%esp)
    mov    0x6(%edx),%eax
    lea    0xa(%edx),%ebx
    mov    %eax,0x1da(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x1de(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x1e2(%esp)
    mov    0x8(%ebx),%eax
    lea    0x16(%edx),%ecx
    mov    %eax,0x1e6(%esp)
    mov    (%ecx),%eax
    mov    %eax,0x1ea(%esp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x1ee(%esp)
    mov    0x8(%ecx),%eax
    mov    %eax,0x1f2(%esp)
    mov    0x380(%esp),%ebx
    mov    0x22(%edx),%eax
    mov    $0x3,%edx
    mov    %eax,0x1f6(%esp)
    mov    0x348(%esp),%eax
    call   func_4a480
    test   %eax,%eax
    je     jump_41606
    mov    $0xffffffff,%edx
    mov    0x380(%esp),%eax
    call   func_49a40
    mov    0x380(%esp),%eax
    mov    %eax,0x338(%esp)
    mov    0x344(%esp),%eax
    mov    (%esp,%eax,1),%eax
    mov    %eax,0x334(%esp)
  jump_41606:
    mov    0x3f2(%esp),%eax
    sar    $0x10,%eax
    mov    (%esp,%eax,4),%edx
    mov    0x1d4(%esp),%al
    mov    %al,0x62(%edx)
    mov    0x1d5(%esp),%eax
    mov    %eax,0x63(%edx)
    mov    0x1d9(%esp),%al
    mov    %al,0x67(%edx)
    add    $0x62,%edx
    mov    0x1da(%esp),%eax
    mov    %eax,0x6(%edx)
    lea    0xa(%edx),%ebx
    mov    0x1de(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x1e2(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x1e6(%esp),%eax
    mov    %eax,0x8(%ebx)
    lea    0x16(%edx),%ebx
    mov    0x1ea(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x1ee(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x1f2(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    0x1f6(%esp),%eax
    mov    %eax,0x22(%edx)
    jmp    jump_414f6
  jump_4168d:
    mov    0x338(%esp),%eax
    mov    0x380(%esp),%ebx
    cmp    %ebx,%eax
    je     jump_414a3
    mov    %ebx,%eax
    xor    %edx,%edx
    call   func_49a40
    jmp    jump_414a3
  jump_416b1:
    xor    %ebx,%ebx
    mov    0x3c0(%esp),%ecx
    mov    %bx,0x3b8(%esp)
    test   %cx,%cx
    jg     jump_416ec
    jmp    jump_417eb
  jump_416cc:
    mov    0x3b8(%esp),%ebx
    inc    %ebx
    mov    0x3c0(%esp),%ecx
    mov    %bx,0x3b8(%esp)
    cmp    %cx,%bx
    jge    jump_417eb
  jump_416ec:
    test   %esi,%esi
    jne    jump_417eb
    mov    0x3b6(%esp),%eax
    sar    $0x10,%eax
    mov    0x410(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    (%eax),%eax
    mov    0x28(%eax),%edx
    mov    %eax,0x3b0(%esp)
    test   %edx,%edx
    je     jump_41728
    mov    $0x49,%edx
    call   func_4a534
    test   %eax,%eax
    je     jump_416cc
  jump_41728:
    mov    0x3b0(%esp),%eax
    cmpb   $0x4,0x58(%eax)
    jne    jump_416cc
    cmpl   $0x0,0x88(%eax)
    je     jump_416cc
    call   func_4a564
    test   %eax,%eax
    je     jump_417d8
    xor    %eax,%eax
    mov    %ax,0x3d8(%esp)
    jmp    jump_4176d
  jump_41757:
    mov    0x3b0(%esp),%eax
    mov    %eax,0x358(%esp)
  jump_41765:
    incw   0x3d8(%esp)
  jump_4176d:
    mov    0x3d6(%esp),%eax
    sar    $0x10,%eax
    cmp    %edi,%eax
    jge    jump_416cc
    mov    (%esp,%eax,4),%ebx
    mov    $0x1,%edx
    mov    0x54(%ebx),%ecx
    xor    %eax,%eax
    sar    $0x10,%ecx
    mov    0x3fc(%esp),%al
    shl    %cl,%edx
    test   %eax,%edx
    je     jump_41765
    mov    $0x3,%edx
    mov    0x3b0(%esp),%eax
    call   func_4a480
    test   %eax,%eax
    je     jump_41757
    mov    0x428(%esp),%eax
    mov    0x3b0(%esp),%edx
    movb   $0x3,(%eax)
    mov    $0xffffffff,%esi
    mov    %edx,0x1(%eax)
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_417d8:
    mov    0x3b0(%esp),%eax
    mov    %eax,0x330(%esp)
    jmp    jump_416cc
  jump_417eb:
    mov    0x358(%esp),%ecx
    test   %ecx,%ecx
    je     jump_41875
    mov    $0x39,%edx
    mov    %ecx,%eax
    call   func_4937c
    cmp    $0xffffffff,%eax
    je     jump_41875
    mov    0x9c(%ecx),%dx
    xor    %dh,%dh
    and    $0x4,%dl
    movswl %dx,%edx
    test   %edx,%edx
    jne    jump_41875
    cmpl   $0xc,0x88(%ecx)
    jle    jump_41875
    mov    %eax,%edx
    shl    $0x3,%eax
    movb   $0x1,0x62(%ecx)
    sub    %edx,%eax
    lea    0xab(%ecx),%edx
    movb   $0x5,0x67(%ecx)
    add    %eax,%edx
    mov    0x428(%esp),%eax
    mov    %edx,0x63(%ecx)
    movb   $0x3,(%eax)
    mov    %ecx,%edx
    mov    %ecx,0x1(%eax)
    mov    %ecx,%eax
    xor    %ecx,%edx
    call   func_49b3c
    testb  $0x1,0x84(%ecx)
    je     jump_41875
    mov    $0xffffffff,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_41875:
    mov    0x330(%esp),%eax
    test   %eax,%eax
    je     jump_4190e
    mov    $0x41,%edx
    call   func_4937c
    cmp    $0xffffffff,%eax
    je     jump_4190e
    mov    0x330(%esp),%edx
    cmpl   $0xd,0x88(%edx)
    jle    jump_4190e
    movb   $0x1,0x62(%edx)
    movb   $0x5,0x67(%edx)
    mov    %eax,%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    0x330(%esp),%eax
    add    $0xab,%eax
    add    %edx,%eax
    mov    0x330(%esp),%edx
    mov    %eax,0x63(%edx)
    mov    0x428(%esp),%eax
    movb   $0x3,(%eax)
    mov    %edx,0x1(%eax)
    mov    0x330(%esp),%eax
    xor    %edx,%edx
    call   func_49b3c
    mov    0x330(%esp),%eax
    testb  $0x1,0x84(%eax)
    je     jump_4190e
    mov    $0xffffffff,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_4190e:
    mov    0x338(%esp),%eax
    mov    %eax,0x3ac(%esp)
    test   %eax,%eax
    je     jump_41967
    mov    0x334(%esp),%ebx
    mov    %eax,%edx
    mov    0x320(%esp),%eax
    call   func_43184
    test   %eax,%eax
    je     jump_41967
    mov    0x428(%esp),%eax
    mov    0x428(%esp),%edx
    movb   $0x3,(%eax)
    mov    0x338(%esp),%eax
    mov    $0xffffffff,%esi
    mov    %eax,0x1(%edx)
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_41967:
    mov    0x3c0(%esp),%eax
    xor    %esi,%esi
    xor    %ecx,%ecx
    test   %ax,%ax
    jle    jump_419d2
    jmp    jump_41986
  jump_41979:
    mov    0x3c0(%esp),%edx
    inc    %ecx
    cmp    %dx,%cx
    jge    jump_419d2
  jump_41986:
    movswl %cx,%ebx
    mov    0x410(%esp),%eax
    shl    $0x2,%ebx
    add    %eax,%ebx
    mov    (%ebx),%ebx
    cmpl   $0x0,0x28(%ebx)
    je     jump_419ad
    mov    $0x49,%edx
    mov    %ebx,%eax
    call   func_4a534
    test   %eax,%eax
    je     jump_41979
  jump_419ad:
    cmpb   $0x4,0x58(%ebx)
    jne    jump_41979
    mov    0x8c(%ebx),%eax
    imul   (%ebx),%eax
    imul   0x88(%ebx),%eax
    cmp    %esi,%eax
    jle    jump_41979
    mov    %eax,%esi
    mov    %ebx,0x3ac(%esp)
    jmp    jump_41979
  jump_419d2:
    cmpl   $0x0,0x3ac(%esp)
    je     jump_43174
    mov    0x414(%esp),%ebx
    test   %bx,%bx
    je     jump_41cbc
    xor    %ecx,%ecx
    mov    %ecx,0x2bc(%esp)
    mov    %ecx,0x2c0(%esp)
    mov    %ecx,0x2c4(%esp)
    xor    %ecx,%ecx
    mov    %cx,0x3e0(%esp)
    test   %bx,%bx
    jg     jump_41a3b
    jmp    jump_41cbc
  jump_41a1b:
    mov    0x3e0(%esp),%edx
    inc    %edx
    mov    0x414(%esp),%ebx
    mov    %dx,0x3e0(%esp)
    cmp    %bx,%dx
    jge    jump_41cbc
  jump_41a3b:
    mov    0x3de(%esp),%eax
    mov    0x418(%esp),%esi
    sar    $0x10,%eax
    mov    (%esi,%eax,4),%esi
    xor    %eax,%eax
    mov    %ax,0x3ec(%esp)
    jmp    jump_41a63
  jump_41a5b:
    incw   0x3ec(%esp)
  jump_41a63:
    mov    0x3ea(%esp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    0x1a(%esi),%dx
    cmp    %edx,%eax
    jge    jump_41a1b
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    add    %edx,%eax
    mov    0x1(%eax),%bh
    cmp    $0xff,%bh
    je     jump_41a5b
    mov    0x2(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_41a5b
    xor    %edx,%edx
    mov    %bh,%dl
    imul   $0x28,%edx,%edx
    mov    data_103fa2(%edx),%dx
    xor    %dh,%dh
    and    $0x4,%dl
    and    $0xffff,%edx
    je     jump_41a5b
    cmp    $0x11,%bh
    jne    jump_41ac5
    xor    %eax,%eax
    mov    0x58(%esi),%al
    test   %eax,%eax
    jle    jump_41a5b
  jump_41ac5:
    mov    $0x47c34f80,%edx
    xor    %ebx,%ebx
    mov    %edx,0x34c(%esp)
    jmp    jump_41ad6
  jump_41ad5:
    inc    %ebx
  jump_41ad6:
    movswl %bx,%eax
    cmp    %edi,%eax
    jge    jump_41c2e
    mov    (%esp,%eax,4),%edx
    mov    0x54(%edx),%ecx
    mov    $0x1,%eax
    sar    $0x10,%ecx
    shl    %cl,%eax
    mov    %eax,%ecx
    xor    %eax,%eax
    mov    0x3fc(%esp),%al
    test   %eax,%ecx
    je     jump_41ad5
    lea    0x1fc(%esp),%ecx
    mov    %ecx,0x354(%esp)
    xor    %ecx,%ecx
    mov    %ecx,0x268(%esp)
    mov    %ecx,0x26c(%esp)
    mov    %ecx,0x270(%esp)
    lea    0x9e(%edx),%eax
    flds   (%esi)
    fsubs  (%eax)
    fstps  0x268(%esp)
    flds   0x4(%esi)
    fsubs  0x4(%eax)
    fstps  0x26c(%esp)
    flds   0x8(%esi)
    fsubs  0x8(%eax)
    fstps  0x270(%esp)
    mov    0x268(%esp),%eax
    flds   0x26c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1fc(%esp)
    mov    0x26c(%esp),%eax
    flds   0x268(%esp)
    fmul   %st(0),%st
    mov    %eax,0x200(%esp)
    mov    0x270(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x204(%esp)
    flds   0x270(%esp)
    mov    0x268(%esp),%eax
    fmuls  0x270(%esp)
    mov    %eax,0x2bc(%esp)
    mov    0x26c(%esp),%eax
    mov    %eax,0x2c0(%esp)
    mov    0x270(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x2c4(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fstps  0x35c(%esp)
    mov    0x35c(%esp),%eax
    mov    %eax,0x350(%esp)
    cmpb   $0x4,0x58(%edx)
    je     jump_41c02
    flds   0x35c(%esp)
    fadds  data_92338
    fstps  0x350(%esp)
  jump_41c02:
    flds   0x350(%esp)
    fcomps 0x34c(%esp)
    fnstsw %ax
    sahf
    jae    jump_41ad5
    mov    0x350(%esp),%eax
    mov    %edx,%ebp
    mov    %eax,0x34c(%esp)
    jmp    jump_41ad5
  jump_41c2e:
    mov    0x3ea(%esp),%eax
    mov    0x10(%esi),%edx
    sar    $0x10,%eax
    cmpb   $0x11,0x1(%edx,%eax,4)
    jne    jump_41c58
    flds   0x34c(%esp)
    fcomps data_92334
    fnstsw %ax
    sahf
    jb     jump_41a5b
  jump_41c58:
    test   %ebp,%ebp
    jne    jump_41c6d
    mov    $0x13e7,%ebx
    mov    $data_922cc,%edx
    xor    %eax,%eax
    call   func_26198
  jump_41c6d:
    mov    0x3ea(%esp),%eax
    sar    $0x10,%eax
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    add    %edx,%eax
    xor    %edx,%edx
    mov    %eax,0x6b(%esi)
    mov    %esi,%eax
    mov    %ebp,0x6f(%esi)
    call   func_3676c
    testb  $0x1,0x73(%esi)
    je     jump_41a5b
    mov    0x428(%esp),%eax
    movb   $0x2,(%eax)
    mov    %esi,0x1(%eax)
    mov    $0xffffffff,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_41cbc:
    mov    $0x47c34f80,%edx
    mov    0x3ac(%esp),%ebx
    xor    %esi,%esi
    xor    %ebp,%ebp
    mov    %esi,0x2b0(%esp)
    mov    %esi,0x2b4(%esp)
    mov    %esi,0x2b8(%esp)
    mov    %edx,0x340(%esp)
    add    $0x9e,%ebx
    xor    %esi,%esi
    jmp    jump_41cf3
  jump_41cf2:
    inc    %esi
  jump_41cf3:
    movswl %si,%eax
    cmp    %edi,%eax
    jge    jump_41e68
    mov    (%esp,%eax,4),%edx
    mov    0x54(%edx),%ecx
    mov    $0x1,%eax
    sar    $0x10,%ecx
    shl    %cl,%eax
    mov    %eax,%ecx
    xor    %eax,%eax
    mov    0x3fc(%esp),%al
    test   %eax,%ecx
    je     jump_41cf2
    lea    0x280(%esp),%ecx
    mov    %ecx,0x360(%esp)
    xor    %ecx,%ecx
    lea    0x9e(%edx),%eax
    mov    %ecx,0x2c8(%esp)
    mov    %ecx,0x2cc(%esp)
    mov    %ecx,0x2d0(%esp)
    flds   (%eax)
    fsubs  (%ebx)
    fstps  0x2c8(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%ebx)
    fstps  0x2cc(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%ebx)
    mov    0x2c8(%esp),%eax
    fstps  0x2d0(%esp)
    flds   0x2cc(%esp)
    fmul   %st(0),%st
    mov    %eax,0x280(%esp)
    mov    0x2cc(%esp),%eax
    flds   0x2c8(%esp)
    mov    %eax,0x284(%esp)
    mov    0x2d0(%esp),%eax
    fmuls  0x2c8(%esp)
    mov    %eax,0x288(%esp)
    faddp  %st,%st(1)
    mov    0x2c8(%esp),%eax
    flds   0x2d0(%esp)
    mov    %eax,0x2b0(%esp)
    mov    0x2cc(%esp),%eax
    fmuls  0x2d0(%esp)
    mov    %eax,0x2b4(%esp)
    mov    0x2d0(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x2b8(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fstps  0x364(%esp)
    mov    0x364(%esp),%eax
    mov    0x58(%edx),%cl
    mov    %eax,0x384(%esp)
    cmp    $0x4,%cl
    je     jump_41e26
    flds   0x364(%esp)
    fadds  data_92338
    fstps  0x384(%esp)
  jump_41e26:
    flds   0x384(%esp)
    fcomps 0x340(%esp)
    fnstsw %ax
    sahf
    jae    jump_41cf2
    flds   0x384(%esp)
    fcomps data_9233c
    fnstsw %ax
    sahf
    jbe    jump_41cf2
    mov    0x384(%esp),%eax
    mov    %edx,%ebp
    mov    %eax,0x340(%esp)
    jmp    jump_41cf2
  jump_41e68:
    mov    0x3ac(%esp),%ecx
    test   %ecx,%ecx
    je     jump_43174
    test   %ebp,%ebp
    je     jump_43174
    lea    0x22c(%esp),%edx
    xor    %esi,%esi
    mov    %edx,0x368(%esp)
    mov    %esi,0x2e0(%esp)
    mov    %esi,0x2e4(%esp)
    mov    %esi,0x2e8(%esp)
    lea    0x9e(%ebp),%eax
    flds   (%ebx)
    fsubs  (%eax)
    fstps  0x2e0(%esp)
    flds   0x4(%ebx)
    fsubs  0x4(%eax)
    fstps  0x2e4(%esp)
    flds   0x8(%ebx)
    fsubs  0x8(%eax)
    mov    0x2e0(%esp),%eax
    mov    %eax,0x22c(%esp)
    mov    0x2e4(%esp),%eax
    fstps  0x2e8(%esp)
    mov    %eax,0x230(%esp)
    mov    0x2e8(%esp),%eax
    mov    %eax,0x234(%esp)
    mov    0x2e0(%esp),%eax
    mov    %esi,0x2ec(%esp)
    mov    %eax,0x2b0(%esp)
    mov    0x2e4(%esp),%eax
    mov    %esi,0x2f0(%esp)
    mov    %eax,0x2b4(%esp)
    mov    0x2e8(%esp),%eax
    mov    %esi,0x2f4(%esp)
    mov    %eax,0x2b8(%esp)
    call   func_782df
    mov    %eax,%edx
    mov    $0xc8,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x64,%edx
    mov    %edx,0x394(%esp)
    fildl  0x394(%esp)
    fstps  0x2ec(%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x64,%edx
    mov    %edx,0x394(%esp)
    fildl  0x394(%esp)
    fstps  0x2f0(%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x64,%edx
    mov    %edx,0x394(%esp)
    lea    0x304(%esp),%eax
    fildl  0x394(%esp)
    fstps  0x2f4(%esp)
    flds   0x2b0(%esp)
    fadds  0x2ec(%esp)
    mov    %eax,0x36c(%esp)
    fstps  0x214(%esp)
    flds   0x2b4(%esp)
    mov    0x214(%esp),%eax
    fadds  0x2f0(%esp)
    mov    %eax,0x304(%esp)
    fstps  0x218(%esp)
    flds   0x2b8(%esp)
    mov    0x218(%esp),%eax
    fadds  0x2f4(%esp)
    mov    %eax,0x308(%esp)
    fstps  0x21c(%esp)
    mov    0x21c(%esp),%eax
    mov    %eax,0x30c(%esp)
    mov    0x214(%esp),%eax
    mov    %eax,0x2b0(%esp)
    mov    0x218(%esp),%eax
    mov    %eax,0x2b4(%esp)
    mov    0x21c(%esp),%eax
    mov    $0x1,%edx
    mov    %eax,0x2b8(%esp)
    mov    %ecx,%eax
    call   func_49b68
    mov    %eax,0x394(%esp)
    fildl  0x394(%esp)
    fstps  0x390(%esp)
    fldz
    fcomps 0x390(%esp)
    fnstsw %ax
    sahf
    jbe    jump_420a4
    mov    $0x1,%edx
    mov    %ebp,%eax
    call   func_49b68
    mov    %eax,0x394(%esp)
    fildl  0x394(%esp)
    fld    %st(0)
    fmull  data_9232c
    fstp   %st(1)
    fstps  0x390(%esp)
  jump_420a4:
    fldz
    fcomps 0x390(%esp)
    fnstsw %ax
    sahf
    ja     jump_420c5
    lea    0x2b0(%esp),%eax
    push   0x390(%esp)
    call   func_53054
  jump_420c5:
    lea    0x2d4(%esp),%eax
    xor    %edi,%edi
    mov    %eax,0x370(%esp)
    mov    %edi,0x25c(%esp)
    mov    %edi,0x260(%esp)
    mov    %edi,0x264(%esp)
    flds   0x2b0(%esp)
    fadds  0x9e(%ebp)
    fstps  0x25c(%esp)
    flds   0x2b4(%esp)
    fadds  0xa2(%ebp)
    mov    0x25c(%esp),%eax
    fstps  0x260(%esp)
    flds   0x2b8(%esp)
    fadds  0xa6(%ebp)
    mov    %eax,0x2d4(%esp)
    mov    0x260(%esp),%eax
    fstps  0x264(%esp)
    mov    %eax,0x2d8(%esp)
    mov    0x264(%esp),%eax
    mov    %eax,0x2dc(%esp)
    mov    0x25c(%esp),%eax
    mov    %eax,0x2b0(%esp)
    mov    0x260(%esp),%eax
    mov    %eax,0x2b4(%esp)
    mov    0x264(%esp),%eax
    mov    %eax,0x2b8(%esp)
    mov    0x428(%esp),%eax
    mov    0x3ac(%esp),%edx
    movb   $0x3,(%eax)
    mov    %edx,0x1(%eax)
    movb   $0x0,0x62(%edx)
    movb   $0x3,0x67(%edx)
    mov    %edi,0x63(%edx)
    mov    %edi,0x68(%edx)
    mov    0x2b0(%esp),%eax
    mov    %eax,0x6c(%edx)
    mov    0x2b4(%esp),%eax
    mov    $0xffffffff,%esi
    mov    %eax,0x70(%edx)
    add    $0x6c,%edx
    mov    0x2b8(%esp),%eax
    add    $0x9e,%ebp
    mov    %eax,0x8(%edx)
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_421d6:
    mov    0x424(%esp),%eax
    xor    %edx,%edx
    mov    0x5a(%eax),%bx
    mov    %dx,0x3d4(%esp)
    test   %bx,%bx
    jg     jump_42219
    jmp    jump_43174
  jump_421f5:
    mov    0x3d4(%esp),%ebx
    mov    0x424(%esp),%edx
    inc    %ebx
    mov    0x5a(%edx),%cx
    mov    %bx,0x3d4(%esp)
    cmp    %cx,%bx
    jge    jump_43174
  jump_42219:
    mov    0x3d2(%esp),%eax
    sar    $0x10,%eax
    mov    0x424(%esp),%edi
    shl    $0x2,%eax
    add    %edi,%eax
    mov    0x46(%eax),%eax
    xor    %edx,%edx
    mov    0x57(%eax),%dl
    cmp    $0xff,%edx
    je     jump_421f5
    mov    0x320(%esp),%ecx
    cmp    (%ecx),%dl
    je     jump_421f5
    add    %ecx,%edx
    cmpb   $0x2,0x1c0(%edx)
    je     jump_4228a
    mov    data_104bea,%ch
    cmp    0x57(%eax),%ch
    jne    jump_421f5
    mov    0x2(%edi),%edx
    sar    $0x10,%edx
    mov    data_d8460(%edx),%dl
    mov    0x320(%esp),%ecx
    mov    $0x1,%ebx
    mov    (%ecx),%cl
    and    $0xff,%edx
    shl    %cl,%ebx
    test   %ebx,%edx
    je     jump_421f5
  jump_4228a:
    mov    %eax,%edi
    test   %eax,%eax
    je     jump_43174
    mov    0x320(%esp),%ebp
    mov    0x18(%eax),%cx
    jmp    jump_422a2
  jump_422a1:
    inc    %ecx
  jump_422a2:
    xor    %edx,%edx
    movswl %cx,%eax
    mov    0x1a(%edi),%dx
    cmp    %edx,%eax
    jge    jump_42379
    lea    0x0(,%eax,4),%edx
    mov    0x10(%edi),%eax
    cmpb   $0x17,0x1(%edx,%eax,1)
    jne    jump_422a1
    xor    %ebx,%ebx
    mov    %cx,%bx
    mov    %edi,%eax
    mov    %ebx,%edx
    call   func_35a70
    mov    0x54(%eax),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    0x0(%ebp),%al
    cmp    %eax,%edx
    jne    jump_422a1
    mov    %ebx,%edx
    mov    %edi,%eax
    call   func_35a70
    mov    %eax,%esi
    xor    %edx,%edx
    mov    0x54(%eax),%eax
    mov    0x0(%ebp),%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    je     jump_4230c
    mov    $0x1468,%ebx
    mov    $data_922d8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4230c:
    lea    0x374(%esp),%ebx
    and    $0xffff,%ecx
    mov    %edi,%eax
    mov    %ecx,%edx
    call   func_36cd4
    mov    %ecx,%edx
    mov    %edi,%eax
    call   func_35a70
    cmp    %eax,%esi
    je     jump_42340
    mov    $0x146c,%ebx
    mov    $data_922e4,%edx
    xor    %eax,%eax
    call   func_26198
  jump_42340:
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_35c38
    mov    %eax,0x374(%esp)
    cmp    $0xffffffff,%eax
    je     jump_42366
    mov    $0x146e,%ebx
    mov    $data_922f0,%edx
    xor    %eax,%eax
    call   func_26198
  jump_42366:
    mov    $0xffffffff,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_42379:
    mov    %edi,%eax
    call   func_361b8
    mov    %eax,0x378(%esp)
    test   %eax,%eax
    jne    jump_42502
    xor    %eax,%eax
    mov    0x3c0(%esp),%edx
    mov    %ax,0x3d0(%esp)
    test   %dx,%dx
    jg     jump_423a7
    jmp    jump_42406
  jump_423a7:
    xor    %ebx,%ebx
  jump_423a9:
    test   %esi,%esi
    jne    jump_42406
    mov    0x3ce(%esp),%eax
    sar    $0x10,%eax
    mov    0x410(%esp),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    (%eax),%ecx
    cmpb   $0x4,0x58(%ecx)
    jne    jump_423ea
    mov    %ebx,%eax
    jmp    jump_423d0
  jump_423cf:
    inc    %eax
  jump_423d0:
    movswl %ax,%edx
    cmp    0x15a(%ecx),%edx
    jge    jump_423ea
    imul   $0x7,%edx,%edx
    cmpb   $0x49,0xab(%ecx,%edx,1)
    jne    jump_423cf
    mov    %ecx,%esi
  jump_423ea:
    mov    0x3d0(%esp),%ecx
    inc    %ecx
    mov    0x3c0(%esp),%edx
    mov    %cx,0x3d0(%esp)
    cmp    %dx,%cx
    jl     jump_423a9
  jump_42406:
    test   %esi,%esi
    jne    jump_424d0
    mov    0x3c0(%esp),%ecx
    xor    %ebx,%ebx
    test   %cx,%cx
    jg     jump_42433
    jmp    jump_424ac
  jump_42421:
    mov    0x3c0(%esp),%eax
    inc    %ebx
    cmp    %ax,%bx
    jl     jump_42435
    jmp    jump_424ac
  jump_42433:
    xor    %ebp,%ebp
  jump_42435:
    test   %esi,%esi
    jne    jump_424ac
    movswl %bx,%eax
    mov    0x410(%esp),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    (%eax),%ecx
    cmp    0x28(%ecx),%ebp
    je     jump_42463
    mov    $0x49,%edx
    mov    %ecx,%eax
    call   func_4a534
    test   %eax,%eax
    je     jump_42421
  jump_42463:
    mov    0x5d(%ecx),%dl
    mov    %ebp,%eax
    cmp    $0x1,%dl
    jne    jump_4247e
    mov    0x5e(%ecx),%edx
    cmp    0x424(%esp),%edx
    jne    jump_4247e
    mov    $0xffffffff,%eax
  jump_4247e:
    cmpb   $0x4,0x58(%ecx)
    jne    jump_42421
    test   %eax,%eax
    jne    jump_42421
    mov    $0x46,%edx
    mov    %ecx,%eax
    call   func_4a534
    test   %eax,%eax
    je     jump_42421
    mov    $0x1,%edx
    mov    %edi,%ebx
    mov    %ecx,%eax
    call   func_4a480
    test   %eax,%eax
    je     jump_424ac
    mov    %ecx,%esi
  jump_424ac:
    test   %esi,%esi
    je     jump_42502
    mov    0x428(%esp),%eax
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
    mov    $0xffffffff,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_424d0:
    mov    0x428(%esp),%eax
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
    movb   $0x0,0x62(%esi)
    movl   $0x0,0x63(%esi)
    movb   $0x1,0x67(%esi)
    mov    %edi,0x68(%esi)
    mov    $0xffffffff,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_42502:
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x1a(%edi),%bx
    mov    0x18(%edi),%dx
    sub    %edx,%ebx
    xor    %edx,%edx
    mov    0x1e(%edi),%dx
    xor    %eax,%eax
    cmp    %edx,%ebx
    jle    jump_42521
    mov    $0xffffffff,%eax
  jump_42521:
    cmpl   $0xffffffff,0x378(%esp)
    je     jump_42534
    cmp    $0xffffffff,%eax
    jne    jump_421f5
  jump_42534:
    mov    0x3c0(%esp),%ebx
    xor    %edx,%edx
    xor    %ebp,%ebp
    mov    %dx,0x3dc(%esp)
    test   %bx,%bx
    jg     jump_42571
    jmp    jump_425e7
  jump_42551:
    mov    0x3dc(%esp),%ecx
    inc    %ecx
    mov    0x3c0(%esp),%edx
    mov    %cx,0x3dc(%esp)
    cmp    %dx,%cx
    jge    jump_425e7
  jump_42571:
    test   %esi,%esi
    jne    jump_425e7
    mov    0x3da(%esp),%ecx
    sar    $0x10,%ecx
    mov    0x410(%esp),%ebx
    shl    $0x2,%ecx
    add    %ebx,%ecx
    mov    (%ecx),%ecx
    cmpl   $0x0,0x28(%ecx)
    je     jump_425a7
    mov    $0x49,%edx
    mov    %ecx,%eax
    call   func_4a534
    test   %eax,%eax
    je     jump_42551
  jump_425a7:
    cmpb   $0x4,0x58(%ecx)
    jne    jump_42551
    mov    %ecx,%eax
    call   func_4a564
    test   %eax,%eax
    jne    jump_425c8
    mov    $0x46,%edx
    mov    %ecx,%eax
    call   func_4a534
    test   %eax,%eax
    je     jump_42551
  jump_425c8:
    mov    $0x1,%edx
    mov    %edi,%ebx
    mov    %ecx,%eax
    mov    %ecx,%ebp
    call   func_4a480
    test   %eax,%eax
    je     jump_42551
    mov    %ecx,%esi
    jmp    jump_42551
  jump_425e7:
    test   %esi,%esi
    je     jump_4260b
    mov    0x428(%esp),%eax
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
    mov    $0xffffffff,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_4260b:
    test   %ebp,%ebp
    je     jump_43176
    lea    0x208(%esp),%edx
    mov    %ebp,%ebx
    mov    %esi,0x28c(%esp)
    mov    %esi,0x290(%esp)
    lea    0x9e(%ebp),%eax
    mov    %esi,0x294(%esp)
    mov    %edx,0x388(%esp)
    flds   (%eax)
    fsubs  (%edi)
    fstps  0x28c(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%edi)
    fstps  0x290(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%edi)
    mov    0x28c(%esp),%eax
    fstps  0x294(%esp)
    mov    %eax,0x208(%esp)
    mov    %esi,0x238(%esp)
    mov    0x290(%esp),%eax
    mov    %esi,0x23c(%esp)
    mov    %eax,0x20c(%esp)
    mov    0x294(%esp),%eax
    mov    %esi,0x240(%esp)
    mov    %eax,0x210(%esp)
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    add    $0x14,%edx
    mov    %edx,0x394(%esp)
    fildl  0x394(%esp)
    fstps  0x238(%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    add    $0x14,%edx
    mov    %edx,0x394(%esp)
    fildl  0x394(%esp)
    fstps  0x23c(%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    add    $0x14,%edx
    mov    %edx,0x394(%esp)
    lea    0x244(%esp),%eax
    fildl  0x394(%esp)
    fstps  0x240(%esp)
    flds   0x208(%esp)
    fadds  0x238(%esp)
    mov    %eax,0x38c(%esp)
    fstps  0x220(%esp)
    flds   0x20c(%esp)
    mov    0x220(%esp),%eax
    fadds  0x23c(%esp)
    mov    %eax,0x244(%esp)
    fstps  0x224(%esp)
    flds   0x210(%esp)
    mov    0x224(%esp),%eax
    fadds  0x240(%esp)
    mov    %eax,0x248(%esp)
    fstps  0x228(%esp)
    mov    0x228(%esp),%eax
    mov    %eax,0x24c(%esp)
    mov    0x220(%esp),%eax
    mov    %eax,0x208(%esp)
    mov    0x224(%esp),%eax
    mov    %eax,0x20c(%esp)
    mov    0x228(%esp),%eax
    mov    $0x2,%edx
    mov    %eax,0x210(%esp)
    mov    %ebp,%eax
    call   func_49b68
    mov    %eax,0x394(%esp)
    fildl  0x394(%esp)
    fstps  0x37c(%esp)
    fldz
    fcomps 0x37c(%esp)
    fnstsw %ax
    sahf
    jbe    jump_42809
    mov    %edi,%eax
    call   func_35ed8
    mov    %eax,0x394(%esp)
    fildl  0x394(%esp)
    fld    %st(0)
    fmull  data_9232c
    fstp   %st(1)
    fstps  0x37c(%esp)
  jump_42809:
    fldz
    fcomps 0x37c(%esp)
    fnstsw %ax
    sahf
    ja     jump_4282a
    lea    0x208(%esp),%eax
    push   0x37c(%esp)
    call   func_53054
  jump_4282a:
    lea    0x274(%esp),%eax
    xor    %esi,%esi
    mov    %eax,0x398(%esp)
    mov    %esi,0x2a4(%esp)
    mov    %esi,0x2a8(%esp)
    mov    %esi,0x2ac(%esp)
    flds   0x208(%esp)
    fadds  (%edi)
    fstps  0x2a4(%esp)
    flds   0x20c(%esp)
    fadds  0x4(%edi)
    mov    0x2a4(%esp),%eax
    fstps  0x2a8(%esp)
    flds   0x210(%esp)
    fadds  0x8(%edi)
    mov    %eax,0x274(%esp)
    mov    0x2a8(%esp),%eax
    fstps  0x2ac(%esp)
    mov    %eax,0x278(%esp)
    mov    0x2ac(%esp),%eax
    mov    %eax,0x27c(%esp)
    mov    0x2a4(%esp),%eax
    mov    %eax,0x208(%esp)
    mov    0x2a8(%esp),%eax
    mov    %eax,0x20c(%esp)
    mov    0x2ac(%esp),%eax
    mov    %eax,0x210(%esp)
    mov    0x428(%esp),%eax
    movb   $0x3,(%eax)
    mov    %ebx,0x1(%eax)
    movb   $0x0,0x62(%ebx)
    movb   $0x3,0x67(%ebx)
    mov    %esi,0x63(%ebx)
    mov    %esi,0x68(%ebx)
    mov    0x208(%esp),%eax
    mov    %eax,0x6c(%ebx)
    mov    0x20c(%esp),%eax
    mov    %eax,0x70(%ebx)
    add    $0x6c,%ebx
    mov    0x210(%esp),%eax
    mov    $0xffffffff,%esi
    mov    %eax,0x8(%ebx)
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_42924:
    lea    0x1ac(%esp),%eax
    add    $0x16,%eax
    mov    %esi,-0xc(%eax)
    mov    %esi,-0x8(%eax)
    mov    %esi,-0x4(%eax)
    mov    %esi,(%eax)
    mov    %esi,0x4(%eax)
    xor    %ecx,%ecx
    mov    %esi,0x8(%eax)
    mov    0x3c0(%esp),%eax
    mov    %cx,0x3f8(%esp)
    test   %ax,%ax
    jg     jump_4297a
    jmp    jump_42b20
  jump_4295a:
    mov    0x3f8(%esp),%ecx
    inc    %ecx
    mov    0x3c0(%esp),%edx
    mov    %cx,0x3f8(%esp)
    cmp    %dx,%cx
    jge    jump_42b20
  jump_4297a:
    test   %esi,%esi
    jne    jump_42b20
    mov    0x3f6(%esp),%eax
    sar    $0x10,%eax
    mov    0x410(%esp),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    (%eax),%eax
    mov    0x58(%eax),%cl
    mov    %eax,0x31c(%esp)
    cmp    $0x4,%cl
    jne    jump_4295a
    xor    %edx,%edx
    mov    %dx,0x3c4(%esp)
    jmp    jump_429bd
  jump_429b5:
    incw   0x3c4(%esp)
  jump_429bd:
    mov    0x3c2(%esp),%eax
    sar    $0x10,%eax
    cmp    %edi,%eax
    jge    jump_4295a
    test   %esi,%esi
    jne    jump_4295a
    shl    $0x2,%eax
    mov    (%esp,%eax,1),%ebp
    xor    %edx,%edx
    mov    %eax,0x3a0(%esp)
    mov    0x54(%ebp),%ecx
    mov    $0x1,%eax
    sar    $0x10,%ecx
    mov    0x3fc(%esp),%dl
    shl    %cl,%eax
    test   %edx,%eax
    je     jump_429b5
    lea    0x62(%ebp),%edx
    mov    (%edx),%al
    mov    %al,0x1ac(%esp)
    mov    0x1(%edx),%eax
    mov    %eax,0x1ad(%esp)
    mov    0x5(%edx),%al
    mov    %al,0x1b1(%esp)
    mov    0x6(%edx),%eax
    lea    0xa(%edx),%ebx
    mov    %eax,0x1b2(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x1b6(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x1ba(%esp)
    mov    0x8(%ebx),%eax
    lea    0x16(%edx),%ebx
    mov    %eax,0x1be(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x1c2(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x1c6(%esp)
    mov    0x8(%ebx),%eax
    mov    %eax,0x1ca(%esp)
    mov    0x31c(%esp),%ebx
    mov    0x22(%edx),%eax
    mov    $0x3,%edx
    mov    %eax,0x1ce(%esp)
    mov    %ebp,%eax
    call   func_4a480
    test   %eax,%eax
    je     jump_42a99
    mov    0x3a0(%esp),%eax
    mov    (%esp,%eax,1),%eax
    mov    0x31c(%esp),%esi
    mov    %eax,0x39c(%esp)
  jump_42a99:
    mov    0x3c2(%esp),%eax
    sar    $0x10,%eax
    mov    (%esp,%eax,4),%edx
    mov    0x1ac(%esp),%al
    mov    %al,0x62(%edx)
    mov    0x1ad(%esp),%eax
    mov    %eax,0x63(%edx)
    mov    0x1b1(%esp),%al
    mov    %al,0x67(%edx)
    add    $0x62,%edx
    mov    0x1b2(%esp),%eax
    mov    %eax,0x6(%edx)
    lea    0xa(%edx),%ebx
    mov    0x1b6(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x1ba(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x1be(%esp),%eax
    mov    %eax,0x8(%ebx)
    lea    0x16(%edx),%ebx
    mov    0x1c2(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x1c6(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x1ca(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    0x1ce(%esp),%eax
    mov    %eax,0x22(%edx)
    jmp    jump_429b5
  jump_42b20:
    test   %esi,%esi
    je     jump_42b69
    mov    $0xffffffff,%edx
    mov    %esi,%eax
    mov    0x39c(%esp),%ebx
    call   func_49a40
    mov    0x320(%esp),%eax
    mov    %esi,%edx
    call   func_43184
    test   %eax,%eax
    je     jump_42b69
    mov    0x428(%esp),%eax
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
    mov    $0xffffffff,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_42b69:
    xor    %ebx,%ebx
    mov    0x3c0(%esp),%ecx
    mov    %bx,0x3c8(%esp)
    test   %cx,%cx
    jg     jump_42ba4
    jmp    jump_42c69
  jump_42b84:
    mov    0x3c8(%esp),%ebx
    inc    %ebx
    mov    0x3c0(%esp),%ecx
    mov    %bx,0x3c8(%esp)
    cmp    %cx,%bx
    jge    jump_42c69
  jump_42ba4:
    test   %esi,%esi
    jne    jump_42c69
    mov    0x3c6(%esp),%ebp
    sar    $0x10,%ebp
    mov    0x410(%esp),%ebx
    shl    $0x2,%ebp
    add    %ebx,%ebp
    mov    0x0(%ebp),%ebp
    cmpb   $0x4,0x58(%ebp)
    jne    jump_42b84
    cmpl   $0x0,0x88(%ebp)
    je     jump_42b84
    mov    %ebp,%eax
    call   func_4a564
    test   %eax,%eax
    je     jump_42c5d
    xor    %eax,%eax
    mov    %ax,0x3bc(%esp)
    jmp    jump_42bfe
  jump_42bef:
    mov    %ebp,0x358(%esp)
  jump_42bf6:
    incw   0x3bc(%esp)
  jump_42bfe:
    mov    0x3ba(%esp),%eax
    sar    $0x10,%eax
    cmp    %edi,%eax
    jge    jump_42b84
    mov    (%esp,%eax,4),%ebx
    mov    $0x1,%edx
    mov    0x54(%ebx),%ecx
    xor    %eax,%eax
    sar    $0x10,%ecx
    mov    0x3fc(%esp),%al
    shl    %cl,%edx
    test   %eax,%edx
    je     jump_42bf6
    mov    $0x3,%edx
    mov    %ebp,%eax
    call   func_4a480
    test   %eax,%eax
    je     jump_42bef
    mov    0x428(%esp),%eax
    movb   $0x3,(%eax)
    mov    $0xffffffff,%esi
    mov    %ebp,0x1(%eax)
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_42c5d:
    mov    %ebp,0x330(%esp)
    jmp    jump_42b84
  jump_42c69:
    mov    0x358(%esp),%edi
    test   %edi,%edi
    je     jump_42cf3
    mov    $0x39,%edx
    mov    %edi,%eax
    call   func_4937c
    cmp    $0xffffffff,%eax
    je     jump_42cf3
    mov    0x9c(%edi),%dx
    xor    %dh,%dh
    and    $0x4,%dl
    movswl %dx,%edx
    test   %edx,%edx
    jne    jump_42cf3
    cmpl   $0xc,0x88(%edi)
    jle    jump_42cf3
    mov    %eax,%edx
    shl    $0x3,%eax
    movb   $0x1,0x62(%edi)
    sub    %edx,%eax
    lea    0xab(%edi),%edx
    movb   $0x5,0x67(%edi)
    add    %eax,%edx
    mov    0x428(%esp),%eax
    mov    %edx,0x63(%edi)
    movb   $0x3,(%eax)
    mov    %edi,%edx
    mov    %edi,0x1(%eax)
    mov    %edi,%eax
    xor    %edi,%edx
    call   func_49b3c
    testb  $0x1,0x84(%edi)
    je     jump_42cf3
    mov    $0xffffffff,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_42cf3:
    mov    0x330(%esp),%eax
    test   %eax,%eax
    je     jump_42d92
    mov    $0x41,%edx
    call   func_4937c
    cmp    $0xffffffff,%eax
    je     jump_42d92
    mov    0x330(%esp),%edx
    cmpl   $0xd,0x88(%edx)
    jle    jump_42d92
    movb   $0x1,0x62(%edx)
    movb   $0x5,0x67(%edx)
    mov    %eax,%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    0x330(%esp),%edx
    add    $0xab,%edx
    add    %eax,%edx
    mov    0x330(%esp),%eax
    mov    %edx,0x63(%eax)
    mov    0x428(%esp),%eax
    mov    0x330(%esp),%edx
    movb   $0x3,(%eax)
    mov    %edx,0x1(%eax)
    mov    0x330(%esp),%eax
    xor    %edx,%edx
    call   func_49b3c
    mov    0x330(%esp),%eax
    testb  $0x1,0x84(%eax)
    je     jump_42d92
    mov    $0xffffffff,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_42d92:
    mov    0x424(%esp),%eax
    mov    0x2c(%eax),%eax
    mov    0x424(%esp),%ecx
    mov    (%eax),%edx
    cmp    %ecx,%edx
    jne    jump_42dae
    mov    0x4(%eax),%eax
    jmp    jump_42db0
  jump_42dae:
    mov    %edx,%eax
  jump_42db0:
    mov    0x3c0(%esp),%edi
    mov    %eax,%ecx
    xor    %eax,%eax
    test   %di,%di
    jg     jump_42dd3
    jmp    jump_42e12
  jump_42dc2:
    mov    0x3c0(%esp),%edx
    inc    %eax
    mov    %ebx,%esi
    cmp    %dx,%ax
    jl     jump_42dd5
    jmp    jump_42e12
  jump_42dd3:
    xor    %ebx,%ebx
  jump_42dd5:
    mov    0x410(%esp),%esi
    movswl %ax,%edx
    mov    (%esi,%edx,4),%esi
    mov    0x58(%esi),%dl
    cmp    $0x3,%dl
    jne    jump_42e0d
    mov    %esi,%edx
    mov    0x59(%esi),%eax
    call   func_35c38
    cmpb   $0x4,0x58(%esi)
    je     jump_42e12
    mov    $0x15e4,%ebx
    mov    $data_922fc,%edx
    xor    %eax,%eax
    call   func_26198
    jmp    jump_42e12
  jump_42e0d:
    cmp    $0x4,%dl
    jne    jump_42dc2
  jump_42e12:
    test   %esi,%esi
    je     jump_43176
    cmpb   $0x4,0x58(%esi)
    je     jump_42e31
    mov    $0x15ef,%ebx
    mov    $data_92308,%edx
    xor    %eax,%eax
    call   func_26198
  jump_42e31:
    movb   $0x1,0x5d(%esi)
    mov    %ecx,0x5e(%esi)
    mov    $0x2,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_42e4b:
    cmpw   $0x0,0x414(%esp)
    jne    jump_42e67
    mov    $0x15fd,%ebx
    mov    $data_92314,%edx
    xor    %eax,%eax
    call   func_26198
  jump_42e67:
    cmpl   $0x0,0x32c(%esp)
    je     jump_43174
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    %ebx,0x2f8(%esp)
    mov    %ebx,0x2fc(%esp)
    mov    %ebx,0x300(%esp)
    mov    0x414(%esp),%ebx
    mov    %dx,0x3e8(%esp)
    test   %bx,%bx
    jg     jump_42ede
    xor    %esi,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_42eb2:
    mov    0x3e8(%esp),%edx
    inc    %edx
    mov    0x414(%esp),%ebx
    mov    %dx,0x3e8(%esp)
    cmp    %bx,%dx
    jl     jump_42ee3
    xor    %esi,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_42ede:
    mov    $0x1633,%ebp
  jump_42ee3:
    mov    0x3e6(%esp),%esi
    sar    $0x10,%esi
    mov    0x418(%esp),%edx
    shl    $0x2,%esi
    xor    %eax,%eax
    add    %edx,%esi
    mov    %ax,0x3e4(%esp)
    mov    (%esi),%esi
    jmp    jump_42f0f
  jump_42f07:
    incw   0x3e4(%esp)
  jump_42f0f:
    mov    0x3e2(%esp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    0x1a(%esi),%dx
    cmp    %edx,%eax
    jge    jump_42eb2
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    add    %edx,%eax
    cmpb   $0xff,0x1(%eax)
    je     jump_42f07
    mov    0x2(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_42f07
    xor    %edx,%edx
    mov    0x1(%eax),%dl
    imul   $0x28,%edx,%edx
    mov    data_103fa2(%edx),%dx
    xor    %dh,%dh
    and    $0x4,%dl
    and    $0xffff,%edx
    je     jump_42f07
    cmpb   $0x11,0x1(%eax)
    jne    jump_42f71
    xor    %eax,%eax
    mov    0x58(%esi),%al
    test   %eax,%eax
    jle    jump_42f07
  jump_42f71:
    movl   $0x47c34f80,0x3a4(%esp)
    xor    %ebx,%ebx
    jmp    jump_42f81
  jump_42f80:
    inc    %ebx
  jump_42f81:
    movswl %bx,%eax
    cmp    %edi,%eax
    jge    jump_430e0
    mov    (%esp,%eax,4),%edx
    mov    0x54(%edx),%ecx
    mov    $0x1,%eax
    sar    $0x10,%ecx
    shl    %cl,%eax
    mov    %eax,%ecx
    xor    %eax,%eax
    mov    0x3fc(%esp),%al
    test   %eax,%ecx
    je     jump_42f80
    lea    0x250(%esp),%ecx
    mov    %ecx,0x33c(%esp)
    xor    %ecx,%ecx
    mov    %ecx,0x298(%esp)
    mov    %ecx,0x29c(%esp)
    mov    %ecx,0x2a0(%esp)
    lea    0x9e(%edx),%eax
    flds   (%esi)
    fsubs  (%eax)
    fstps  0x298(%esp)
    flds   0x4(%esi)
    fsubs  0x4(%eax)
    fstps  0x29c(%esp)
    flds   0x8(%esi)
    fsubs  0x8(%eax)
    fstps  0x2a0(%esp)
    mov    0x298(%esp),%eax
    flds   0x29c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x250(%esp)
    mov    0x29c(%esp),%eax
    flds   0x298(%esp)
    fmul   %st(0),%st
    mov    %eax,0x254(%esp)
    mov    0x2a0(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x258(%esp)
    flds   0x2a0(%esp)
    mov    0x298(%esp),%eax
    fmuls  0x2a0(%esp)
    mov    %eax,0x2f8(%esp)
    mov    0x29c(%esp),%eax
    mov    %eax,0x2fc(%esp)
    mov    0x2a0(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x300(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fstps  0x324(%esp)
    mov    0x324(%esp),%eax
    mov    0x58(%edx),%cl
    mov    %eax,0x3a8(%esp)
    cmp    $0x4,%cl
    je     jump_430af
    flds   0x324(%esp)
    fadds  data_92338
    fstps  0x3a8(%esp)
  jump_430af:
    flds   0x3a8(%esp)
    fcomps 0x3a4(%esp)
    fnstsw %ax
    sahf
    jae    jump_42f80
    mov    0x3a8(%esp),%eax
    mov    %edx,0x318(%esp)
    mov    %eax,0x3a4(%esp)
    jmp    jump_42f80
  jump_430e0:
    mov    0x3e2(%esp),%eax
    mov    0x10(%esi),%edx
    sar    $0x10,%eax
    cmpb   $0x11,0x1(%edx,%eax,4)
    jne    jump_4310a
    flds   0x3a4(%esp)
    fcomps data_92334
    fnstsw %ax
    sahf
    jb     jump_42f07
  jump_4310a:
    cmpl   $0x0,0x318(%esp)
    jne    jump_43122
    mov    $data_92320,%edx
    mov    %ebp,%ebx
    xor    %eax,%eax
    call   func_26198
  jump_43122:
    mov    0x3e2(%esp),%eax
    sar    $0x10,%eax
    mov    0x10(%esi),%edx
    shl    $0x2,%eax
    add    %eax,%edx
    mov    0x318(%esp),%eax
    mov    %edx,0x6b(%esi)
    xor    %edx,%edx
    mov    %eax,0x6f(%esi)
    mov    %esi,%eax
    call   func_3676c
    testb  $0x1,0x73(%esi)
    je     jump_42f07
    mov    0x428(%esp),%eax
    movb   $0x2,(%eax)
    mov    %esi,0x1(%eax)
    mov    $0xffffffff,%esi
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_43174:
    xor    %esi,%esi
  jump_43176:
    mov    %esi,%eax
    add    $0x400,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c


/*----------------------------------------------------------------*/
func_43184:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %edx,%ecx
    mov    %ebx,%ebp
    mov    %esp,%edi
    mov    $data_96960,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    lea    0xc(%esp),%edi
    mov    $data_9696c,%esi
    mov    %edx,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    call   func_4a8fc
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    cmp    0x88(%ecx),%eax
    jge    jump_43246
    mov    %ecx,%eax
    movb   $0x1,0x62(%ecx)
    add    $0xab,%eax
    xor    %edi,%edi
    mov    %eax,0x18(%esp)
    jmp    jump_431d7
  jump_431d6:
    inc    %edi
  jump_431d7:
    movswl %di,%eax
    cmp    0x15a(%ecx),%eax
    jge    jump_43246
    imul   $0x7,%eax,%eax
    mov    0xa8(%ecx,%eax,1),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    cmpb   $0x5,data_107052(%eax)
    jne    jump_431d6
    xor    %ebx,%ebx
    jmp    jump_43200
  jump_431ff:
    inc    %ebx
  jump_43200:
    movswl %bx,%eax
    cmp    $0xa,%eax
    jge    jump_431d6
    movswl %di,%esi
    imul   $0x7,%esi,%esi
    mov    0xab(%ecx,%esi,1),%dl
    cmp    (%esp,%eax,1),%dl
    jne    jump_431ff
    mov    0x18(%esp),%edx
    add    %esi,%edx
    mov    %edx,0x63(%ecx)
    mov    0xc(%esp,%eax,1),%al
    xor    %edx,%edx
    mov    %al,0x67(%ecx)
    mov    %ecx,%eax
    mov    %ebp,0x68(%ecx)
    call   func_49b3c
    testb  $0x1,0x84(%ecx)
    je     jump_431ff
    mov    $0xffffffff,%eax
    jmp    jump_43248
  jump_43246:
    xor    %eax,%eax
  jump_43248:
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_43374:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    mov    data_a3cf4,%dx
    xor    %ch,%ch
    xor    %ebx,%ebx
    test   %dx,%dx
    jle    jump_433d8
    jmp    jump_4339a
  jump_4338e:
    mov    data_a3cf4,%ax
    inc    %ebx
    cmp    %ax,%bx
    jge    jump_433d8
  jump_4339a:
    xor    %eax,%eax
    movswl %bx,%edx
    mov    (%esi),%al
    cmp    %eax,%edx
    je     jump_4338e
    imul   $0x1ee,%edx,%eax
    cmpl   $0xffffffff,data_a2f75(%eax)
    je     jump_4338e
    cmpb   $0x2,0x1c0(%edx,%esi,1)
    jne    jump_4338e
    cmp    $0xffffffff,%edi
    je     jump_433ce
    mov    %esi,%eax
    call   func_43b7c
    cmp    %edi,%eax
    jle    jump_4338e
  jump_433ce:
    mov    $0x1,%al
    mov    %bl,%cl
    shl    %cl,%al
    or     %al,%ch
    jmp    jump_4338e
  jump_433d8:
    mov    %ch,%al
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_433e0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %ebx,%edi
    movswl %dx,%eax
    test   %eax,%eax
    jl     jump_433f9
    cmp    data_a3cf4,%si
    jl     jump_4340a
  jump_433f9:
    mov    $0x1705,%ebx
    mov    $data_92340,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4340a:
    test   %edi,%edi
    jne    jump_4341f
    mov    $0x1706,%ebx
    mov    $data_9234c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4341f:
    movswl %si,%eax
    add    %ecx,%eax
    cmpb   $0x2,0x1c0(%eax)
    je     jump_4349d
    movsbw data_a3d20,%dx
    inc    %edx
    imul   $0xa,%edx,%edx
    cmpb   $0x3,0x1c0(%eax)
    jne    jump_43444
    add    %edx,%edx
  jump_43444:
    movswl %si,%ebx
    lea    0x0(,%ebx,2),%eax
    add    %ecx,%eax
    mov    0x1b2(%eax),%si
    sub    %edx,%esi
    mov    %si,0x1b2(%eax)
    cmpb   $0x3,0x1c0(%ecx,%ebx,1)
    jne    jump_43482
    mov    0x1cf(%ecx),%bx
    cmp    %bx,%si
    jle    jump_43482
    mov    %ebx,%edx
    sub    $0xa,%edx
    mov    %dx,0x1b2(%eax)
  jump_43482:
    mov    $0x1,%dl
    mov    0x2(%edi),%eax
    mov    (%ecx),%cl
    sar    $0x10,%eax
    shl    %cl,%dl
    or     %dl,data_d8460(%eax)
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_4349d:
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret

vtable_434a4:
    .long   func_43543
    .long   func_43584
    .long   func_435d3
    .long   func_4360d
    .long   func_436c7
    .long   func_43778
    .long   func_4382c
    .long   func_43880
    .long   func_4394e
    .long   func_439be
    .long   func_4399e
    .long   func_439f3
    .long   func_43a49
    .long   func_4399e
    .long   func_43ae2
    .long   func_43b22


/*----------------------------------------------------------------*/
func_434e4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x6e4,%esp
    mov    %eax,%ebp
    mov    0x19a(%eax),%eax
    xor    %ebx,%ebx
    sar    $0x18,%eax
    mov    %ebx,0x6c4(%esp)
    mov    data_968e8(,%eax,2),%ax
    and    $0xffff,%eax
    cmp    0x19e(%ebp),%eax
    jg     jump_439ab
    movl   $0xffffffff,0x6c4(%esp)
    cmp    $0x1,%edx
    je     jump_43b55
    mov    0x6c4(%esp),%eax
    add    $0x6e4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_43543:
/*----------------------------------------------------------------*/
    lea    0x358(%esp),%edx
    mov    %ebp,%eax
    call   func_40224
    mov    %eax,%ebx
    test   %eax,%eax
    jle    func_4399e
    lea    0x0(,%ebx,4),%ecx
    xor    %eax,%eax
  jump_43564:
    mov    0x358(%esp,%eax,1),%edx
    mov    0x98(%edx),%ebx
    add    $0x4,%eax
    mov    %ebx,0x8c(%edx)
    cmp    %ecx,%eax
    jge    func_4399e
    jmp    jump_43564


/*----------------------------------------------------------------*/
func_43584:
/*----------------------------------------------------------------*/
    mov    $data_a2f72,%eax
    xor    %edx,%edx
    jmp    jump_43593
  jump_4358d:
    inc    %edx
    add    $0x1ee,%eax
  jump_43593:
    mov    data_a3cf2,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jge    func_4399e
    cmp    %ebp,%eax
    je     jump_4358d
    xor    %ecx,%ecx
    mov    0x0(%ebp),%cl
    add    %ecx,%ecx
    mov    0x1cb(%eax),%ebx
    add    %eax,%ecx
    sar    $0x10,%ebx
    mov    0x1b0(%ecx),%esi
    add    $0x14,%ebx
    sar    $0x10,%esi
    cmp    %ebx,%esi
    jge    jump_4358d
    mov    %bx,0x1b2(%ecx)
    jmp    jump_4358d


/*----------------------------------------------------------------*/
func_435d3:
/*----------------------------------------------------------------*/
    mov    %esp,%edx
    mov    %ebp,%eax
    call   func_40224
    mov    %eax,%edx
    test   %eax,%eax
    jle    func_4399e
    lea    0x0(,%edx,4),%ebx
    xor    %eax,%eax
  jump_435ef:
    mov    (%esp,%eax,1),%edx
    mov    0x88(%edx),%esi
    add    %esi,%esi
    add    $0x4,%eax
    mov    %esi,0x88(%edx)
    cmp    %ebx,%eax
    jge    func_4399e
    jmp    jump_435ef


/*----------------------------------------------------------------*/
func_4360d:
/*----------------------------------------------------------------*/
    mov    $data_a3d21,%edi
    mov    %ebx,0x6bc(%esp)
    jmp    jump_4362d
  jump_4361b:
    mov    0x6bc(%esp),%eax
    inc    %eax
    add    $0x60,%edi
    mov    %eax,0x6bc(%esp)
  jump_4362d:
    mov    data_a629f,%eax
    mov    0x6bc(%esp),%ebx
    sar    $0x10,%eax
    cmp    %ebx,%eax
    jle    func_4399e
    mov    $0x1,%eax
    xor    %edx,%edx
    mov    0x0(%ebp),%cl
    mov    0x14(%edi),%dl
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_4361b
    lea    0x1ac(%esp),%edx
    mov    %edi,%eax
    call   func_1d794
    test   %eax,%eax
    jle    jump_4361b
    shl    $0x2,%eax
    xor    %ecx,%ecx
    mov    %eax,0x6e0(%esp)
  jump_43675:
    mov    0x1ac(%esp,%ecx,1),%edx
    mov    0x54(%edx),%eax
    movzbl 0x0(%ebp),%esi
    sar    $0x10,%eax
    cmp    %esi,%eax
    je     jump_436b3
    cmpb   $0x4,0x58(%edx)
    jne    jump_436b3
    imul   $0x1ee,%eax,%eax
    mov    data_a2f79(%eax),%esi
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_1d538
    mov    %esi,%eax
    mov    0x1ac(%esp,%ecx,1),%edx
    call   func_1d3e8
  jump_436b3:
    mov    0x6e0(%esp),%esi
    add    $0x4,%ecx
    cmp    %esi,%ecx
    jge    jump_4361b
    jmp    jump_43675


/*----------------------------------------------------------------*/
func_436c7:
/*----------------------------------------------------------------*/
    mov    $data_a3d21,%ecx
    mov    %ebx,0x6d8(%esp)
    mov    %ecx,0x6dc(%esp)
    jmp    jump_436fc
  jump_436dc:
    mov    0x6d8(%esp),%eax
    mov    0x6dc(%esp),%edx
    inc    %eax
    add    $0x60,%edx
    mov    %eax,0x6d8(%esp)
    mov    %edx,0x6dc(%esp)
  jump_436fc:
    mov    data_a629f,%eax
    mov    0x6d8(%esp),%edi
    sar    $0x10,%eax
    cmp    %edi,%eax
    jle    func_4399e
    mov    0x6dc(%esp),%eax
    xor    %edx,%edx
    mov    0x0(%ebp),%cl
    mov    0x15(%eax),%dl
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_436dc
    lea    0x504(%esp),%edx
    mov    0x6dc(%esp),%eax
    call   func_1d794
    mov    %eax,%edi
    test   %eax,%eax
    jle    jump_436dc
    shl    $0x2,%edi
    xor    %eax,%eax
  jump_4374b:
    mov    0x504(%esp,%eax,1),%edx
    xor    %ecx,%ecx
    mov    0x54(%edx),%esi
    mov    0x0(%ebp),%cl
    sar    $0x10,%esi
    cmp    %ecx,%esi
    je     jump_4376b
    movl   $0x0,0x88(%edx)
  jump_4376b:
    add    $0x4,%eax
    cmp    %edi,%eax
    jge    jump_436dc
    jmp    jump_4374b


/*----------------------------------------------------------------*/
func_43778:
/*----------------------------------------------------------------*/
    mov    $data_bb1b3,%eax
    mov    $0xffff,%ecx
    mov    %ebx,0x6d0(%esp)
    xor    %edx,%edx
    jmp    jump_43791
  jump_4378d:
    inc    %edx
    add    $0x7b,%eax
  jump_43791:
    mov    data_ca1ed,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jge    jump_437c5
    mov    0x57(%eax),%bl
    cmp    0x0(%ebp),%bl
    jne    jump_4378d
    xor    %ebx,%ebx
    mov    0x16(%eax),%bx
    cmp    $0xa,%ebx
    je     jump_4378d
    mov    0x42(%eax),%si
    cmp    %si,%cx
    jbe    jump_4378d
    mov    %eax,0x6d0(%esp)
    mov    %esi,%ecx
    jmp    jump_4378d
  jump_437c5:
    mov    0x6d0(%esp),%ecx
    test   %ecx,%ecx
    je     func_4399e
    mov    0x10(%ecx),%ecx
    xor    %ebx,%ebx
    jmp    jump_437df
  jump_437db:
    inc    %ebx
    add    $0x4,%ecx
  jump_437df:
    mov    0x6d0(%esp),%edx
    xor    %eax,%eax
    mov    0x18(%edx),%ax
    cmp    %eax,%ebx
    jge    func_4399e
    xor    %eax,%eax
    mov    (%ecx),%al
    test   %eax,%eax
    je     jump_43801
    cmp    $0x1,%eax
    jne    jump_437db
  jump_43801:
    lea    0x6b0(%esp),%edi
    mov    $data_96994,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_782df
    mov    %eax,%edx
    mov    $0x3,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    0x6b0(%esp,%edx,4),%al
    mov    %al,(%ecx)
    jmp    jump_437db


/*----------------------------------------------------------------*/
func_4382c:
/*----------------------------------------------------------------*/
    mov    $data_ca1f1,%edi
    xor    %esi,%esi
    jmp    jump_4383c
  jump_43835:
    inc    %esi
    add    $0x162,%edi
  jump_4383c:
    mov    data_d35e5,%eax
    sar    $0x10,%eax
    cmp    %eax,%esi
    jge    func_4399e
    mov    0x54(%edi),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_43835
    cmpb   $0x5,0x58(%edi)
    jne    jump_43835
    mov    0x59(%edi),%edx
    mov    0xa2(%edi),%ebx
    mov    (%edx),%ecx
    test   $0x7fffffff,%ebx
    jne    jump_43873
    mov    0x4(%edx),%ecx
  jump_43873:
    mov    %edi,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_1d3e8
    jmp    jump_43835


/*----------------------------------------------------------------*/
func_43880:
/*----------------------------------------------------------------*/
    mov    %ebx,0x6cc(%esp)
    mov    %ebx,0x6d4(%esp)
    jmp    jump_43927
  jump_43893:
    inc    %eax
  jump_43894:
    mov    data_a3cf2,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_438ba
    mov    $0x1,%ebx
    mov    data_10529f(%edi),%esi
    mov    %al,%cl
    sar    $0x18,%esi
    shl    %cl,%ebx
    test   %ebx,%esi
    je     jump_43893
    inc    %edx
    jmp    jump_43893
  jump_438ba:
    cmp    $0x2,%edx
    jl     jump_43907
    mov    $0x1,%al
    mov    0x0(%ebp),%cl
    mov    data_1052a2(%edi),%bh
    shl    %cl,%al
    or     %al,%bh
    xor    %eax,%eax
    mov    %bh,data_1052a2(%edi)
    mov    0x0(%ebp),%al
    add    %eax,%eax
    xor    %edx,%edx
    mov    0x6cc(%esp),%ebx
    mov    data_106fa6(%eax),%dx
    cmp    %ebx,%edx
    jne    jump_43907
    movw   $0xffff,data_106fa6(%eax)
    xor    %eax,%eax
    mov    0x0(%ebp),%al
    xor    %ebx,%edx
    mov    %dx,data_106fb4(,%eax,2)
  jump_43907:
    mov    0x6d4(%esp),%ecx
    mov    0x6cc(%esp),%esi
    add    $0x4b,%ecx
    inc    %esi
    mov    %ecx,0x6d4(%esp)
    mov    %esi,0x6cc(%esp)
  jump_43927:
    xor    %eax,%eax
    mov    0x6cc(%esp),%edx
    mov    data_105258,%ax
    cmp    %edx,%eax
    jle    func_4399e
    mov    0x6d4(%esp),%edi
    xor    %edx,%edx
    xor    %eax,%eax
    jmp    jump_43894


/*----------------------------------------------------------------*/
func_4394e:
/*----------------------------------------------------------------*/
    mov    $data_bb1b3,%eax
    xor    %edx,%edx
    jmp    jump_4395b
  jump_43957:
    inc    %edx
    add    $0x7b,%eax
  jump_4395b:
    mov    data_ca1ed,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jge    jump_43979
    mov    0x57(%eax),%bl
    cmp    0x0(%ebp),%bl
    jne    jump_43957
    movl   $0xffffffff,0x62(%eax)
    jmp    jump_43957
  jump_43979:
    mov    0x19a(%ebp),%eax
    sar    $0x18,%eax
    mov    data_968e8(,%eax,2),%ax
    and    $0xffff,%eax
    mov    0x19e(%ebp),%edx
    sub    %eax,%edx
    mov    %edx,0x6c8(%esp)


/*----------------------------------------------------------------*/
func_4399e:
/*----------------------------------------------------------------*/
    mov    0x6c8(%esp),%eax
    mov    %eax,0x19e(%ebp)
  jump_439ab:
    mov    0x6c4(%esp),%eax
    add    $0x6e4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_439be:
/*----------------------------------------------------------------*/
    mov    $data_bb1b3,%edx
    xor    %edi,%edi
    jmp    jump_439cb
  jump_439c7:
    inc    %edi
    add    $0x7b,%edx
  jump_439cb:
    mov    data_ca1ed,%eax
    sar    $0x10,%eax
    cmp    %eax,%edi
    jge    func_4399e
    mov    0x57(%edx),%al
    cmp    0x0(%ebp),%al
    jne    jump_439c7
    mov    0x55(%edx),%cx
    add    $0x2,%ecx
    mov    %edx,%eax
    mov    %cx,0x55(%edx)
    call   func_34e70
    jmp    jump_439c7


/*----------------------------------------------------------------*/
func_439f3:
/*----------------------------------------------------------------*/
    mov    $data_a3d21,%esi
    xor    %edi,%edi
    jmp    jump_43a00
  jump_439fc:
    inc    %edi
    add    $0x60,%esi
  jump_43a00:
    mov    data_a629f,%eax
    sar    $0x10,%eax
    cmp    %eax,%edi
    jge    func_4399e
    mov    $0x1,%edx
    xor    %eax,%eax
    mov    0x0(%ebp),%cl
    mov    0x14(%esi),%al
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_439fc
    mov    %esi,%edx
    xor    %eax,%eax
    mov    0x42(%esi),%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_439fc
  jump_43a2d:
    mov    0x2c(%edx),%ecx
    mov    0x23(%ecx),%bl
    add    $0x4,%edx
    or     $0x2,%bl
    inc    %eax
    mov    %bl,0x23(%ecx)
    mov    0x42(%esi),%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_439fc
    jmp    jump_43a2d


/*----------------------------------------------------------------*/
func_43a49:
/*----------------------------------------------------------------*/
    mov    %ebp,0x6c0(%esp)
    xor    %edi,%edi
    jmp    jump_43a67
  jump_43a54:
    mov    0x6c0(%esp),%eax
    add    $0x2,%ebx
    inc    %eax
    inc    %edi
    mov    %eax,0x6c0(%esp)
  jump_43a67:
    mov    data_a3cf2,%eax
    sar    $0x10,%eax
    cmp    %eax,%edi
    jge    func_4399e
    xor    %eax,%eax
    mov    0x0(%ebp),%al
    cmp    %eax,%edi
    je     jump_43a54
    mov    0x6c0(%esp),%eax
    cmpb   $0x2,0x1c0(%eax)
    jne    jump_43a54
    mov    $data_a2f72,%edx
    xor    %eax,%eax
    lea    (%edx,%ebx,1),%ecx
    jmp    jump_43aa9
  jump_43a9c:
    inc    %eax
    add    $0x1ee,%ecx
    add    $0x1ee,%edx
  jump_43aa9:
    mov    data_a3cf2,%esi
    sar    $0x10,%esi
    cmp    %esi,%eax
    jge    jump_43a54
    cmp    %edi,%eax
    je     jump_43a9c
    movzbl 0x0(%ebp),%esi
    cmp    %esi,%eax
    je     jump_43a9c
    mov    0x1b2(%ecx),%si
    cmp    0x1c9(%edx),%si
    jle    jump_43a9c
    mov    0x1c9(%edx),%si
    mov    %si,0x1b2(%ecx)
    jmp    jump_43a9c


/*----------------------------------------------------------------*/
func_43ae2:
/*----------------------------------------------------------------*/
    mov    0x0(%ebp),%bl
    add    %ebx,%ebx
    xor    %edx,%edx
    mov    data_106fa6(%ebx),%ax
    mov    %ax,%dx
    cmp    $0xffff,%edx
    je     func_4399e
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    data_105296(%eax),%ax
    mov    %ax,data_106fb4(%ebx)
    jmp    func_4399e


/*----------------------------------------------------------------*/
func_43b22:
/*----------------------------------------------------------------*/
    mov    $data_bb1b3,%eax
    xor    %edx,%edx
    jmp    jump_43b2f
  jump_43b2b:
    inc    %edx
    add    $0x7b,%eax
  jump_43b2f:
    mov    data_ca1ed,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jge    func_4399e
    mov    0x57(%eax),%bl
    cmp    0x0(%ebp),%bl
    jne    jump_43b2b
    cmpb   $0xff,0x54(%eax)
    je     jump_43b2b
    addw   $0x64,0x50(%eax)
    jmp    jump_43b2b
  jump_43b55:
    mov    0x19d(%ebp),%al
    sub    $0x5,%al
    mov    %ebx,0x6c8(%esp)
    cmp    $0xf,%al
    ja     func_4399e
    and    $0xff,%eax
    jmp    *%cs:vtable_434a4(,%eax,4)


/*----------------------------------------------------------------*/
func_43b7c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    movswl %dx,%edx
    mov    0x1cf(%eax),%ecx
    mov    0x1b0(%eax,%edx,2),%edx
    sar    $0x10,%ecx
    sar    $0x10,%edx
    mov    %ecx,%ebx
    sub    %edx,%ebx
    mov    %ebx,%edx
    test   %ebx,%ebx
    jle    jump_43bc5
    lea    0x0(,%ebx,4),%edx
    sub    %ebx,%edx
    shl    $0x3,%edx
    mov    0x1c7(%eax),%eax
    add    %ebx,%edx
    sar    $0x10,%eax
    shl    $0x2,%edx
    sub    %eax,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    %eax,%edx
    jmp    jump_43bca
  jump_43bc5:
    mov    $0x64,%edx
  jump_43bca:
    cmp    $0x64,%edx
    jle    jump_43bd4
    mov    $0x64,%edx
  jump_43bd4:
    mov    %edx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_43bdc:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1f4,%esp
    mov    %eax,%ebp
    mov    %edx,0x1f0(%esp)
    mov    %esp,%eax
    call   func_3b120
    cmp    $0xffffffff,%ebx
    jne    jump_43c3f
    mov    $0x1ee,%ebx
    mov    %esp,%edx
    mov    0x1f0(%esp),%eax
    mov    $0x7b,%ecx
    mov    %esp,%esi
    mov    %ebp,%edi
    call   func_1bf94
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x7(%ebp),%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $data_a3d21,%edx
    shl    $0x5,%eax
    movw   $0x0,0x19b(%ebp)
    add    %eax,%edx
    mov    %edx,0x7(%ebp)
    jmp    jump_43c6d
  jump_43c3f:
    mov    $0x7b,%ecx
    mov    %esp,%edi
    mov    %ebp,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x7(%esp),%eax
    mov    0x2(%eax),%eax
    mov    $0x1ee,%ebx
    sar    $0x10,%eax
    mov    %esp,%edx
    mov    %eax,0x7(%esp)
    mov    0x1f0(%esp),%eax
    call   func_1c098
  jump_43c6d:
    mov    %esp,%eax
    xor    %edx,%edx
    add    $0x1f4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_43c80:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x104,%esp
    mov    %eax,%esi
    xor    %eax,%eax
    mov    0x1(%esi),%al
    push   %eax
    mov    $0xfffffff6,%edx
    push   $data_92358
    lea    0xd4(%esp),%eax
    mov    %edx,data_105248
    push   %eax
    mov    %edx,data_10524c
    mov    %edx,data_105250
    call   func_76d09
    add    $0xc,%esp
    xor    %edx,%edx
    lea    0xcc(%esp),%eax
    call   func_1bb10
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_43ce2
    mov    $0x55,%ebx
    mov    $data_92365,%edx
    call   func_261a8
  jump_43ce2:
    xor    %ah,%ah
    mov    %ah,(%esp)
  jump_43ce7:
    mov    $0x9,%ebx
    mov    $data_92374,%edx
    mov    %esp,%eax
    call   func_789ba
    test   %eax,%eax
    je     jump_43d07
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2fe58
    jmp    jump_43ce7
  jump_43d07:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_9237e
    push   %ecx
    call   func_78071
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1c9(%esi)
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_92384
    push   %ecx
    call   func_78071
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    0x1c9(%esi),%dx
    mov    %ax,0x1cb(%esi)
    cmp    %dx,%ax
    jg     jump_43d76
    mov    $0x64,%ebx
    mov    $data_9238a,%edx
    xor    %eax,%eax
    call   func_26198
  jump_43d76:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_92399
    push   %ecx
    call   func_78071
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    0x1cb(%esi),%bx
    mov    %ax,0x1cd(%esi)
    cmp    %bx,%ax
    jg     jump_43dbc
    mov    $0x68,%ebx
    mov    $data_9239f,%edx
    xor    %eax,%eax
    call   func_26198
  jump_43dbc:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_923ae
    push   %ecx
    call   func_78071
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    0x1cd(%esi),%di
    mov    %ax,0x1cf(%esi)
    cmp    %di,%ax
    jg     jump_43e02
    mov    $0x6c,%ebx
    mov    $data_923b4,%edx
    xor    %eax,%eax
    call   func_26198
  jump_43e02:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_923c3
    push   %ecx
    call   func_78071
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    0x1cf(%esi),%dx
    mov    %ax,0x1d1(%esi)
    cmp    %dx,%ax
    jg     jump_43e48
    mov    $0x70,%ebx
    mov    $data_923c9,%edx
    xor    %eax,%eax
    call   func_26198
  jump_43e48:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_923d8
    push   %ecx
    call   func_78071
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    0x1d1(%esi),%bx
    mov    %ax,0x1d3(%esi)
    cmp    %bx,%ax
    jg     jump_43e8e
    mov    $0x74,%ebx
    mov    $data_923de,%edx
    xor    %eax,%eax
    call   func_26198
  jump_43e8e:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_923ed
    push   %ecx
    call   func_78071
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1d5(%esi)
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_923f3
    push   %ecx
    call   func_78071
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1b0(%esi)
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_923f9
    push   %ecx
    call   func_78071
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1d7(%esi)
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_923ff
    push   %ecx
    call   func_78071
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1d9(%esi)
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_92405
    push   %ecx
    call   func_78071
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1db(%esi)
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_9240b
    push   %ecx
    call   func_78071
    add    $0x10,%esp
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_92411
    filds  0x10c(%esp)
    push   %ecx
    fstps  0x1dd(%esi)
    call   func_78071
    add    $0x10,%esp
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_92417
    filds  0x10c(%esp)
    push   %ecx
    fstps  0x1e1(%esi)
    call   func_78071
    add    $0x10,%esp
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_9241d
    filds  0x10c(%esp)
    push   %ecx
    fstps  0x1e5(%esi)
    call   func_78071
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1c7(%esi)
    mov    0x1(%esi),%al
    mov    %al,0x19d(%esi)
    mov    %ecx,%eax
    movl   $0x0,0x19e(%esi)
    call   func_7744e
    add    $0x104,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44024:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    $0x1,%edi
    xor    %edx,%edx
    xor    %eax,%eax
    mov    %edx,(%esp)
    shl    %cl,%edi
    mov    $data_a3d21,%edx
    jmp    jump_44049
  jump_44045:
    inc    %eax
    add    $0x60,%edx
  jump_44049:
    mov    data_a629f,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_44073
    mov    $0x1,%ebp
    xor    %ebx,%ebx
    mov    (%esi),%cl
    mov    0x17(%edx),%bl
    shl    %cl,%ebp
    test   %ebp,%ebx
    je     jump_44045
    test   %edi,%ebx
    je     jump_44045
    movl   $0xffffffff,(%esp)
  jump_44073:
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44080:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    mov    (%eax),%al
    cmp    data_104bea,%al
    jne    jump_440af
    cmpl   $0xffffffff,data_a0d00
    je     jump_440af
    mov    $0xcd,%ebx
    mov    $data_92423,%edx
    xor    %eax,%eax
    call   func_26198
  jump_440af:
    mov    $data_a2f72,%ebx
    mov    %esi,0x10(%esp)
    mov    %esi,%ebp
    movb   $0xe,0x1e9(%esi)
    xor    %edi,%edi
    mov    %ebx,0xc(%esp)
    jmp    jump_44126
  jump_440c9:
    lea    0x8(%esp),%eax
    mov    0x4(%esp),%ecx
    xor    %edx,%edx
    push   %eax
    movsbl %bl,%eax
    mov    (%esi),%dl
    mov    %eax,0x4(%esp)
    mov    %eax,%ebx
    mov    0x10(%esp),%eax
    call   func_44bcc
    mov    0x8(%esp),%edx
    mov    0x4(%esp),%ebx
    push   %edx
    movsbl %al,%ecx
    mov    %esi,%eax
    push   %ebx
    movswl %di,%edx
    mov    0x8(%esp),%ebx
    call   func_450b0
  jump_44103:
    mov    0x10(%esp),%ecx
    mov    0xc(%esp),%eax
    inc    %ebp
    inc    %edi
    add    $0x2,%ecx
    add    $0x1ee,%eax
    mov    %ecx,0x10(%esp)
    mov    %eax,0xc(%esp)
    cmp    $0x7,%edi
    jge    jump_4421d
  jump_44126:
    xor    %eax,%eax
    mov    (%esi),%al
    cmp    %eax,%edi
    je     jump_44103
    imul   $0x1ee,%edi,%eax
    cmpl   $0xffffffff,data_a2f75(%eax)
    je     jump_44103
    xor    %eax,%eax
    mov    data_104bea,%al
    cmp    %eax,%edi
    jne    jump_44151
    cmpl   $0xffffffff,data_a0d00
    jne    jump_441aa
  jump_44151:
    cmpb   $0x0,0x1c0(%ebp)
    jne    jump_441aa
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_44024
    cmp    $0xffffffff,%eax
    jne    jump_441aa
    mov    0x10(%esp),%edx
    mov    0x1d5(%esi),%ax
    mov    %ax,0x1b2(%edx)
    imul   $0x1ee,%edi,%eax
    xor    %edx,%edx
    mov    (%esi),%dl
    add    %edx,%edx
    lea    (%eax,%edx,1),%ebx
    mov    data_a3147(%eax),%dx
    mov    %dx,data_a3124(%ebx)
    xor    %edx,%edx
    mov    (%esi),%dl
    mov    $0x1,%bl
    mov    %bl,data_a3132(%edx,%eax,1)
    mov    %bl,0x1c0(%ebp)
  jump_441aa:
    cmpb   $0x0,0x1c0(%ebp)
    je     jump_44103
    lea    0x4(%esp),%ebx
    movswl %di,%edx
    mov    %esi,%eax
    call   func_44434
    mov    %al,%bl
    cmp    $0xe,%al
    je     jump_44103
    xor    %edx,%edx
    mov    data_104bea,%dl
    cmp    %edx,%edi
    jne    jump_440c9
    cmpl   $0x0,data_a0d00
    jne    jump_440c9
    mov    $0x2,%edx
    mov    %al,0x1e9(%esi)
    xor    %ebx,%ebx
    mov    0x4(%esp),%eax
    mov    0x1e6(%esi),%ecx
    mov    (%esi),%bl
    sar    $0x18,%ecx
    mov    %eax,0x1ea(%esi)
    mov    $data_10ae70,%eax
    call   func_55aec
    jmp    jump_44103
  jump_4421d:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_44228:
    .long   func_44292
    .long   func_442bd
    .long   func_442ac
    .long   func_44349


/*----------------------------------------------------------------*/
func_44238:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %edx,%eax
    mov    %ecx,%edx
    movswl %ax,%ebp
    mov    %ebp,%eax
    shl    $0x5,%eax
    sub    %ebp,%eax
    shl    $0x3,%eax
    sub    %ebp,%eax
    mov    $data_a2f72,%edi
    add    %eax,%eax
    movb   $0xe,(%ebx)
    add    %eax,%edi
    mov    0x1c0(%esi,%ebp,1),%al
    mov    $0x1,%ecx
    cmp    $0x3,%al
    ja     jump_44419
    and    $0xff,%eax
    shl    $0x2,%eax
    mov    %eax,(%esp)
    lea    0x2(%ebx),%eax
    mov    (%esp),%ebp
    mov    %eax,0x4(%esp)
    lea    0x1(%ebx),%eax
    jmp    *%cs:vtable_44228(%ebp)


/*----------------------------------------------------------------*/
func_44292:
/*----------------------------------------------------------------*/
    mov    $0x126,%ebx
    mov    $data_92432,%edx
    xor    %eax,%eax
    call   func_261a8
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_442ac:
/*----------------------------------------------------------------*/
    mov    $0x2,%ecx
    movb   $0xd,(%eax)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_442bd:
/*----------------------------------------------------------------*/
    movb   $0x2,(%eax)
    mov    0x4(%esp),%eax
    movb   $0x3,(%eax)
    mov    data_105248,%ebp
    mov    data_a2f6c,%eax
    sub    %ebp,%eax
    mov    $0x3,%ecx
    cmp    $0x5,%eax
    jl     jump_442e9
    lea    0x3(%ebx),%eax
    mov    $0x4,%ecx
    movb   $0x4,(%eax)
  jump_442e9:
    mov    data_a2f6c,%eax
    sub    data_10524c,%eax
    cmp    $0x5,%eax
    jl     jump_44301
    movswl %cx,%eax
    inc    %ecx
    movb   $0x5,(%ebx,%eax,1)
  jump_44301:
    mov    data_a2f6c,%eax
    sub    data_105250,%eax
    cmp    $0x5,%eax
    jl     jump_44319
    movswl %cx,%eax
    inc    %ecx
    movb   $0x6,(%ebx,%eax,1)
  jump_44319:
    movswl %dx,%eax
    cmpb   $0x0,0x1c0(%esi,%eax,1)
    je     jump_4442a
    cmpb   $0x2,0x1c0(%edi,%eax,1)
    jne    jump_4442a
    movswl %cx,%eax
    inc    %ecx
    movb   $0x7,(%ebx,%eax,1)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44349:
/*----------------------------------------------------------------*/
    movb   $0x8,(%eax)
    mov    data_105248,%ebp
    mov    data_a2f6c,%eax
    sub    %ebp,%eax
    mov    $0x2,%ecx
    cmp    $0x5,%eax
    jl     jump_4436f
    mov    0x4(%esp),%eax
    mov    $0x3,%ecx
    movb   $0x4,(%eax)
  jump_4436f:
    mov    data_a2f6c,%eax
    sub    data_10524c,%eax
    cmp    $0x5,%eax
    jl     jump_44387
    movswl %cx,%eax
    inc    %ecx
    movb   $0x5,(%ebx,%eax,1)
  jump_44387:
    mov    data_a2f6c,%eax
    sub    data_105250,%eax
    cmp    $0x5,%eax
    jl     jump_4439f
    movswl %cx,%eax
    inc    %ecx
    movb   $0x6,(%ebx,%eax,1)
  jump_4439f:
    movswl %cx,%eax
    movb   $0xc,(%ebx,%eax,1)
    movswl %dx,%eax
    lea    (%esi,%eax,1),%ebp
    inc    %ecx
    cmpb   $0x0,0x1c0(%ebp)
    je     jump_443c8
    cmpb   $0x2,0x1c0(%edi,%eax,1)
    jne    jump_443c8
    movswl %cx,%eax
    inc    %ecx
    movb   $0x7,(%ebx,%eax,1)
  jump_443c8:
    movswl %dx,%eax
    lea    (%esi,%eax,1),%ebp
    cmpb   $0x0,0x1c0(%ebp)
    je     jump_443f1
    cmpb   $0x1,0x1c0(%edi,%eax,1)
    jne    jump_443f1
    movswl %cx,%eax
    inc    %ecx
    movb   $0x9,(%ebx,%eax,1)
    movswl %cx,%eax
    inc    %ecx
    movb   $0xb,(%ebx,%eax,1)
  jump_443f1:
    movswl %dx,%eax
    cmpb   $0x0,0x1c0(%esi,%eax,1)
    je     jump_4442a
    cmpb   $0x3,0x1c0(%edi,%eax,1)
    jne    jump_4442a
    movswl %cx,%eax
    inc    %ecx
    movb   $0xa,(%ebx,%eax,1)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_44419:
    mov    $0x17e,%ebx
    mov    $data_92441,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_4442a:
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44434:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %ebx,0x4(%esp)
    mov    (%eax),%al
    cmp    data_104bea,%al
    jne    jump_4446f
    cmpl   $0xffffffff,data_a0d00
    je     jump_4446f
    mov    $0x18d,%ebx
    mov    $data_92450,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4446f:
    mov    $0xffffffff,%edx
    mov    %ecx,%eax
    call   func_43374
    movswl %si,%edx
    mov    %al,%bh
    lea    0x0(,%edx,2),%eax
    mov    0x1c0(%ecx,%edx,1),%bl
    add    %ecx,%eax
    cmp    $0x2,%bl
    jb     jump_44743
    jbe    jump_446c2
    cmp    $0x3,%bl
    je     jump_446e0
    jmp    jump_4474c
  jump_444ad:
    mov    0x1b2(%eax),%ax
    cmp    0x1c9(%ecx),%ax
    jge    jump_446a0
    test   %bh,%bh
    je     jump_444d4
    xor    %eax,%eax
    mov    data_104bea,%al
    cmp    %eax,%edx
    jne    jump_446a0
  jump_444d4:
    xor    %eax,%eax
    movswl %si,%edx
    mov    data_104bea,%al
    cmp    %eax,%edx
    je     jump_44502
    xor    %edx,%edx
    mov    (%ecx),%dl
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_a3cf8(,%eax,2),%eax
    sar    $0x10,%eax
    cmp    $0x2,%eax
    jle    jump_446a0
  jump_44502:
    mov    $0x2,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_4450c:
    mov    0x1b2(%eax),%ax
    cmp    0x1c9(%ecx),%ax
    jge    jump_446a0
    xor    %eax,%eax
    mov    data_104bea,%al
    cmp    %eax,%edx
    jne    jump_446a0
    mov    $0x2,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_44539:
    mov    0x1b2(%eax),%bx
    cmp    0x1cb(%ecx),%bx
    jge    jump_4456e
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    cmp    %ebx,%edx
    jne    jump_4456e
    mov    0x1c9(%ecx),%dx
    dec    %edx
    mov    %dx,0x1b2(%eax)
    mov    $0x2,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_4456e:
    movswl %si,%edx
    lea    0x0(,%edx,2),%eax
    add    %ecx,%eax
    mov    0x1cd(%ecx),%di
    cmp    0x1b2(%eax),%di
    jle    jump_445aa
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    cmp    %ebx,%edx
    jne    jump_445aa
    mov    0x1cb(%ecx),%dx
    dec    %edx
    mov    %dx,0x1b2(%eax)
    jmp    jump_446a0
  jump_445aa:
    movswl %si,%edx
    lea    0x0(,%edx,2),%eax
    add    %ecx,%eax
    mov    0x1cf(%ecx),%di
    cmp    0x1b2(%eax),%di
    jle    jump_445e6
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    cmp    %ebx,%edx
    jne    jump_445e6
    mov    0x1cd(%ecx),%dx
    dec    %edx
    mov    %dx,0x1b2(%eax)
    jmp    jump_446a0
  jump_445e6:
    movswl %si,%eax
    lea    0x0(,%eax,2),%edx
    add    %ecx,%edx
    mov    0x1d1(%ecx),%di
    cmp    0x1b2(%edx),%di
    jle    jump_44622
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    cmp    %ebx,%eax
    jne    jump_44622
    mov    0x1cf(%ecx),%ax
    dec    %eax
    mov    %ax,0x1b2(%edx)
    jmp    jump_446a0
  jump_44622:
    movswl %si,%edx
    lea    0x0(,%edx,2),%eax
    add    %ecx,%eax
    mov    0x1d3(%ecx),%di
    cmp    0x1b2(%eax),%di
    jle    jump_4465b
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    cmp    %ebx,%edx
    jne    jump_4465b
    mov    0x1d1(%ecx),%dx
    dec    %edx
    mov    %dx,0x1b2(%eax)
    jmp    jump_446a0
  jump_4465b:
    xor    %edx,%edx
    movswl %si,%eax
    mov    data_104bea,%dl
    cmp    %edx,%eax
    jne    jump_446a0
    mov    0x1d3(%ecx),%dx
    dec    %edx
    mov    %dx,0x1b2(%ecx,%eax,2)
    jmp    jump_446a0
  jump_4467c:
    mov    data_a3d20,%bl
    cmp    $0x1,%bl
    jb     jump_44698
    jbe    jump_4450c
    cmp    $0x2,%bl
    je     jump_44539
    jmp    jump_446a0
  jump_44698:
    test   %bl,%bl
    je     jump_444ad
  jump_446a0:
    movswl %si,%eax
    mov    0x1d3(%ecx),%dx
    cmp    0x1b2(%ecx,%eax,2),%dx
    jge    jump_4474c
    mov    $0x3,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_446c2:
    mov    0x1b2(%eax),%ax
    cmp    0x1cd(%ecx),%ax
    jle    jump_4474c
    mov    $0xd,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_446e0:
    mov    0x1b2(%eax),%ax
    cmp    0x1c9(%ecx),%ax
    jge    jump_44725
    test   %bh,%bh
    jne    jump_44725
    xor    %eax,%eax
    mov    data_104bea,%al
    cmp    %eax,%edx
    je     jump_4471b
    xor    %edx,%edx
    mov    (%ecx),%dl
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_a3cf8(,%eax,2),%eax
    sar    $0x10,%eax
    cmp    $0x2,%eax
    jle    jump_44739
  jump_4471b:
    mov    $0x2,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_44725:
    movswl %si,%eax
    mov    0x1cf(%ecx),%dx
    cmp    0x1b2(%ecx,%eax,2),%dx
    jle    jump_4474c
  jump_44739:
    mov    $0x8,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_44743:
    cmp    $0x1,%bl
    je     jump_4467c
  jump_4474c:
    mov    data_a2f6c,%eax
    mov    0x1c5(%ecx),%ebx
    mov    %eax,%edx
    sar    $0x10,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    test   %edx,%edx
    jne    jump_449e5
    xor    %eax,%eax
    movswl %si,%ebx
    mov    data_104bea,%al
    cmp    %eax,%ebx
    jne    jump_449e5
    cmpb   $0x2,0x1c0(%ecx,%ebx,1)
    je     jump_449e5
    call   func_782df
    mov    %eax,%edx
    mov    $0x64,%edi
    sar    $0x1f,%edx
    idiv   %edi
    xor    %eax,%eax
    mov    data_104bea,%al
    mov    %edx,(%esp)
    cmp    %eax,%ebx
    je     jump_447b9
    mov    $0x212,%ebx
    mov    $data_9245f,%edx
    xor    %eax,%eax
    call   func_26198
  jump_447b9:
    movswl %si,%eax
    cmpb   $0x3,0x1c0(%ecx,%eax,1)
    jne    jump_44920
    cmpl   $0x50,(%esp)
    jge    jump_44920
    mov    data_a3cf4,%bx
    xor    %edx,%edx
    test   %bx,%bx
    jg     jump_447f3
    jmp    jump_44843
  jump_447e4:
    mov    data_a3cf4,%di
    inc    %edx
    cmp    %di,%dx
    jl     jump_447f6
    jmp    jump_44843
  jump_447f3:
    movzbl (%ecx),%ebp
  jump_447f6:
    movswl %dx,%eax
    cmp    %ebp,%eax
    je     jump_447e4
    cmp    %si,%dx
    je     jump_447e4
    imul   $0x1ee,%eax,%ebx
    cmpl   $0xffffffff,data_a2f75(%ebx)
    je     jump_447e4
    cmpb   $0x2,0x1c0(%ecx,%eax,1)
    jne    jump_447e4
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    imul   $0x1ee,%ebx,%ebx
    cmpb   $0x3,data_a3132(%ebx,%eax,1)
    jne    jump_447e4
    mov    0x4(%esp),%edx
    mov    %eax,(%edx)
    mov    $0xa,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_44843:
    mov    data_a3cf4,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jg     jump_44862
    jmp    jump_448b2
  jump_44853:
    mov    data_a3cf4,%bx
    inc    %eax
    cmp    %bx,%ax
    jl     jump_44865
    jmp    jump_448b2
  jump_44862:
    movzbl (%ecx),%ebp
  jump_44865:
    movswl %ax,%edx
    cmp    %ebp,%edx
    je     jump_44853
    cmp    %si,%ax
    je     jump_44853
    imul   $0x1ee,%edx,%ebx
    cmpl   $0xffffffff,data_a2f75(%ebx)
    je     jump_44853
    cmpb   $0x3,0x1c0(%ecx,%edx,1)
    jne    jump_44853
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    imul   $0x1ee,%ebx,%ebx
    cmpb   $0x2,data_a3132(%edx,%ebx,1)
    jne    jump_44853
    mov    0x4(%esp),%eax
    mov    %edx,(%eax)
    mov    $0x7,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_448b2:
    mov    data_a3cf4,%di
    xor    %edx,%edx
    test   %di,%di
    jg     jump_448d0
    jmp    jump_44920
  jump_448c2:
    mov    data_a3cf4,%ax
    inc    %edx
    cmp    %ax,%dx
    jl     jump_448d3
    jmp    jump_44920
  jump_448d0:
    movzbl (%ecx),%ebp
  jump_448d3:
    movswl %dx,%eax
    cmp    %ebp,%eax
    je     jump_448c2
    cmp    %si,%dx
    je     jump_448c2
    imul   $0x1ee,%eax,%ebx
    cmpl   $0xffffffff,data_a2f75(%ebx)
    je     jump_448c2
    cmpb   $0x2,0x1c0(%ecx,%eax,1)
    jne    jump_448c2
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    imul   $0x1ee,%ebx,%ebx
    cmpb   $0x1,data_a3132(%ebx,%eax,1)
    jne    jump_448c2
    mov    0x4(%esp),%edx
    mov    %eax,(%edx)
    mov    $0x9,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_44920:
    movswl %si,%eax
    mov    0x1c9(%ecx),%bx
    cmp    0x1b2(%ecx,%eax,2),%bx
    jg     jump_449e5
    cmpb   $0x3,0x1c0(%ecx,%eax,1)
    jne    jump_44946
    addl   $0xf,(%esp)
  jump_44946:
    movswl %si,%edx
    mov    0x1cd(%ecx),%eax
    mov    0x1b0(%ecx,%edx,2),%ebx
    sar    $0x10,%eax
    sar    $0x10,%ebx
    add    $0xa,%eax
    cmp    %eax,%ebx
    jle    jump_4497e
    cmpl   $0x5d,(%esp)
    jl     jump_4497e
    mov    %ecx,%eax
    call   func_46208
    test   %eax,%eax
    je     jump_4497e
    mov    $0x6,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_4497e:
    movswl %si,%edx
    mov    0x1cf(%ecx),%di
    cmp    0x1b2(%ecx,%edx,2),%di
    jge    jump_449ad
    cmpl   $0x58,(%esp)
    jl     jump_449ad
    mov    %ecx,%eax
    call   func_46034
    test   %eax,%eax
    je     jump_449ad
    mov    $0x5,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_449ad:
    movswl %si,%edx
    mov    0x1d3(%ecx),%eax
    mov    0x1b0(%ecx,%edx,2),%ebx
    sar    $0x10,%eax
    sar    $0x10,%ebx
    add    $0x14,%eax
    cmp    %eax,%ebx
    jle    jump_449e5
    cmpl   $0x50,(%esp)
    jl     jump_449e5
    mov    %ecx,%eax
    call   func_45e64
    test   %eax,%eax
    je     jump_449e5
    mov    $0x4,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_449e5:
    mov    $0xe,%al
  jump_449e7:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret

vtable_449f0:
    .long   func_44a70
    .long   func_44a7f
    .long   func_44a91
    .long   func_44aa0
    .long   func_44ad3
    .long   func_44ae5
    .long   func_44af7
    .long   func_44b09
    .long   func_44ac4
    .long   func_44b1b
    .long   func_44b2d
    .long   func_44b3f
    .long   func_44b51
    .long   func_44ab2
    .long   func_44b63


/*----------------------------------------------------------------*/
func_44a2c:
/*----------------------------------------------------------------*/
    push   %esi
    sub    $0x4,%esp
    mov    %bl,(%esp)
    mov    (%eax),%al
    cmp    data_104bea,%al
    je     jump_44a52
    mov    $0x263,%ebx
    mov    $data_9246e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_44a52:
    mov    (%esp),%dl
    xor    %esi,%esi
    cmp    $0xe,%dl
    ja     jump_44b80
    xor    %edx,%edx
    mov    (%esp),%dl
    lea    0x1(%ecx),%eax
    jmp    *%cs:vtable_449f0(,%edx,4)


/*----------------------------------------------------------------*/
func_44a70:
/*----------------------------------------------------------------*/
    mov    $0x1,%esi
    movb   $0x0,(%ecx)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44a7f:
/*----------------------------------------------------------------*/
    movb   $0x1,(%ecx)
    mov    $0x2,%esi
    movb   $0x2,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44a91:
/*----------------------------------------------------------------*/
    mov    $0x1,%esi
    movb   $0x3,(%ecx)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44aa0:
/*----------------------------------------------------------------*/
    movb   $0x4,(%ecx)
    mov    $0x2,%esi
    movb   $0x5,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44ab2:
/*----------------------------------------------------------------*/
    movb   $0x1b,(%ecx)
    mov    $0x2,%esi
    movb   $0x1c,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44ac4:
/*----------------------------------------------------------------*/
    mov    $0x1,%esi
    movb   $0xe,(%ecx)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44ad3:
/*----------------------------------------------------------------*/
    movb   $0x6,(%ecx)
    mov    $0x2,%esi
    movb   $0x7,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44ae5:
/*----------------------------------------------------------------*/
    movb   $0x8,(%ecx)
    mov    $0x2,%esi
    movb   $0x9,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44af7:
/*----------------------------------------------------------------*/
    movb   $0xa,(%ecx)
    mov    $0x2,%esi
    movb   $0xb,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44b09:
/*----------------------------------------------------------------*/
    movb   $0xc,(%ecx)
    mov    $0x2,%esi
    movb   $0xd,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44b1b:
/*----------------------------------------------------------------*/
    movb   $0xf,(%ecx)
    mov    $0x2,%esi
    movb   $0x10,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44b2d:
/*----------------------------------------------------------------*/
    movb   $0x11,(%ecx)
    mov    $0x2,%esi
    movb   $0x12,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44b3f:
/*----------------------------------------------------------------*/
    movb   $0x13,(%ecx)
    mov    $0x2,%esi
    movb   $0x14,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44b51:
/*----------------------------------------------------------------*/
    movb   $0x15,(%ecx)
    mov    $0x2,%esi
    movb   $0x16,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_44b63:
/*----------------------------------------------------------------*/
    mov    $0x2cf,%ebx
    mov    $data_9247d,%edx
    xor    %eax,%eax
    mov    $0xe,%esi
    call   func_261a8
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret
  jump_44b80:
    mov    $0x2d4,%ebx
    mov    $data_9248c,%edx
    xor    %eax,%eax
    call   func_261a8
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret

vtable_44b98:
    .long   func_44bfa
    .long   func_44c08
    .long   func_44c76
    .long   func_44cba
    .long   func_44cf5
    .long   func_44d39
    .long   func_44c68
    .long   func_44dae
    .long   func_44e24
    .long   func_44ee5
    .long   func_44f76
    .long   func_44c38
    .long   func_45048


/*----------------------------------------------------------------*/
func_44bcc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1ac,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ecx,0x1ea(%eax)
    mov    %bl,%al
    sub    $0x2,%al
    mov    %ecx,%ebp
    cmp    $0xc,%al
    ja     jump_45054
    and    $0xff,%eax
    jmp    *%cs:vtable_44b98(,%eax,4)


/*----------------------------------------------------------------*/
func_44bfa:
/*----------------------------------------------------------------*/
    mov    $0x3,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_44c08:
/*----------------------------------------------------------------*/
    movswl %dx,%eax
    mov    0x1b2(%esi,%eax,2),%ax
    cmp    0x1d1(%esi),%ax
    jle    jump_44c2a
    mov    $0x4,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_44c2a:
    mov    $0x5,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_44c38:
/*----------------------------------------------------------------*/
    movswl %dx,%eax
    mov    0x1b2(%esi,%eax,2),%ax
    cmp    0x1cb(%esi),%ax
    jl     jump_44c5a
    mov    $0x1b,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_44c5a:
    mov    $0x1c,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_44c68:
/*----------------------------------------------------------------*/
    mov    $0xe,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_44c76:
/*----------------------------------------------------------------*/
    movswl %dx,%edx
    mov    0x1d3(%esi),%eax
    mov    0x1b0(%esi,%edx,2),%ebx
    sar    $0x10,%eax
    sar    $0x10,%ebx
    add    $0x14,%eax
    cmp    %eax,%ebx
    jle    jump_44cac
    mov    %esi,%eax
    call   func_45e64
    test   %eax,%eax
    je     jump_44cac
    mov    $0x6,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_44cac:
    mov    $0x7,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_44cba:
/*----------------------------------------------------------------*/
    movswl %dx,%edx
    mov    0x1cf(%esi),%di
    cmp    0x1b2(%esi,%edx,2),%di
    jge    jump_44ce7
    mov    %esi,%eax
    call   func_46034
    test   %eax,%eax
    je     jump_44ce7
    mov    $0x8,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_44ce7:
    mov    $0x9,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_44cf5:
/*----------------------------------------------------------------*/
    movswl %dx,%edx
    mov    0x1cd(%esi),%eax
    mov    0x1b0(%esi,%edx,2),%ebx
    sar    $0x10,%eax
    sar    $0x10,%ebx
    add    $0xa,%eax
    cmp    %eax,%ebx
    jle    jump_44d2b
    mov    %esi,%eax
    call   func_46208
    test   %eax,%eax
    je     jump_44d2b
    mov    $0xa,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_44d2b:
    mov    $0xb,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_44d39:
/*----------------------------------------------------------------*/
    cmpb   $0x2,0x1c0(%ecx,%esi,1)
    je     jump_44d54
    mov    $0x336,%ebx
    mov    $data_9249b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_44d54:
    movswl %di,%edx
    mov    %edx,%ebx
    shl    $0x5,%ebx
    sub    %edx,%ebx
    shl    $0x3,%ebx
    sub    %edx,%ebx
    add    %ebx,%ebx
    mov    0x1b2(%esi,%edx,2),%dx
    mov    data_a3143(%ebx),%cx
    mov    0x1b0(%esi,%ebp,2),%eax
    sub    %ecx,%edx
    sar    $0x10,%eax
    movswl %dx,%edx
    add    %eax,%edx
    mov    0x1cb(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jle    jump_44da0
    mov    $0xc,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_44da0:
    mov    $0xd,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_44dae:
/*----------------------------------------------------------------*/
    movswl %dx,%eax
    cmpb   $0x3,0x1c0(%esi,%eax,1)
    je     jump_44dcc
    mov    $0x34a,%ebx
    mov    $data_924aa,%edx
    xor    %eax,%eax
    call   func_26198
  jump_44dcc:
    cmpb   $0x1,0x1c0(%esi,%ebp,1)
    je     jump_44de7
    mov    $0x34b,%ebx
    mov    $data_924b9,%edx
    xor    %eax,%eax
    call   func_26198
  jump_44de7:
    movswl %di,%eax
    mov    0x1b2(%esi,%eax,2),%ax
    mov    0x1b2(%esi,%ecx,2),%di
    mov    0x1d5(%esi),%dx
    sub    %edi,%eax
    cmp    %dx,%ax
    jle    jump_44e16
    mov    $0xf,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_44e16:
    mov    $0x10,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_44e24:
/*----------------------------------------------------------------*/
    movswl %dx,%eax
    cmpb   $0x3,0x1c0(%esi,%eax,1)
    je     jump_44e42
    mov    $0x361,%ebx
    mov    $data_924c8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_44e42:
    cmpb   $0x3,0x1c0(%esi,%ebp,1)
    je     jump_44e5d
    mov    $0x362,%ebx
    mov    $data_924d7,%edx
    xor    %eax,%eax
    call   func_26198
  jump_44e5d:
    movswl %di,%edx
    lea    0x0(,%edx,2),%ebx
    lea    0x0(,%ebp,2),%eax
    add    %esi,%ebx
    add    %eax,%esi
    mov    0x1b2(%ebx),%ax
    mov    0x1b2(%esi),%di
    sub    %edi,%eax
    cwtl
    test   %eax,%eax
    jle    jump_44ed7
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    lea    (%eax,%eax,1),%edx
    mov    0x1b2(%ebx),%ax
    mov    data_a3143(%edx),%bx
    mov    %ebp,%edx
    shl    $0x5,%edx
    sub    %ebp,%edx
    shl    $0x3,%edx
    sub    %ebp,%edx
    sub    %ebx,%eax
    add    %edx,%edx
    mov    %eax,%ebx
    mov    %edi,%eax
    sub    data_a3143(%edx),%ax
    movswl %bx,%edx
    cwtl
    sub    %eax,%edx
    test   %edx,%edx
    jle    jump_44ed7
    mov    $0x11,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_44ed7:
    mov    $0x12,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_44ee5:
/*----------------------------------------------------------------*/
    movswl %dx,%eax
    cmpb   $0x3,0x1c0(%esi,%eax,1)
    je     jump_44f03
    mov    $0x384,%ebx
    mov    $data_924e6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_44f03:
    cmpb   $0x1,0x1c0(%esi,%ebp,1)
    je     jump_44f1e
    mov    $0x385,%ebx
    mov    $data_924f5,%edx
    xor    %eax,%eax
    call   func_26198
  jump_44f1e:
    movswl %di,%edx
    mov    %edx,%ebx
    shl    $0x5,%ebx
    sub    %edx,%ebx
    shl    $0x3,%ebx
    sub    %edx,%ebx
    add    %ebx,%ebx
    mov    0x1b2(%esi,%edx,2),%ax
    mov    data_a3143(%ebx),%cx
    mov    0x1b0(%esi,%ebp,2),%edx
    sub    %ecx,%eax
    sar    $0x10,%edx
    cwtl
    sub    %eax,%edx
    mov    0x1c7(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jge    jump_44f68
    mov    $0x13,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_44f68:
    mov    $0x14,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_44f76:
/*----------------------------------------------------------------*/
    test   %ecx,%ecx
    jne    jump_44f8b
    mov    $0x39d,%ebx
    mov    $data_92504,%edx
    xor    %eax,%eax
    call   func_26198
  jump_44f8b:
    mov    0x1bc(%esp),%edx
    test   %edx,%edx
    je     jump_44f98
    mov    %ebp,(%edx)
  jump_44f98:
    mov    $0x2,%edx
    mov    %ebp,%ebx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_45958
    test   %eax,%eax
    jne    jump_44fba
    mov    $0x18,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_44fba:
    mov    %esp,%ebx
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_45848
    test   %ax,%ax
    je     jump_4501a
    mov    $0x1,%eax
    xor    %edx,%edx
    mov    (%esi),%cl
    mov    0x15(%ebp),%dl
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_44fea
    mov    $0x1a,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_44fea:
    movswl %di,%eax
    mov    0x1d3(%esi),%bx
    cmp    0x1b2(%esi,%eax,2),%bx
    jge    jump_4500c
    mov    $0x15,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_4500c:
    mov    $0x16,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_4501a:
    mov    $0x1,%eax
    xor    %edx,%edx
    mov    (%esi),%cl
    mov    0x15(%ebp),%dl
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_4503a
    mov    $0x19,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_4503a:
    mov    $0x17,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_45048:
/*----------------------------------------------------------------*/
    mov    $0x3ce,%ebx
    mov    $data_92513,%edx
    jmp    jump_4505e
  jump_45054:
    mov    $0x3d3,%ebx
    mov    $data_92522,%edx
  jump_4505e:
    xor    %eax,%eax
    call   func_261a8
    mov    $0x1d,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4

vtable_45074:
    .long   func_45173
    .long   func_45807
    .long   func_451d7
    .long   func_45214
    .long   func_4534e
    .long   func_453f5
    .long   func_4548f
    .long   func_45529
    .long   func_45314
    .long   func_455cb
    .long   func_4563d
    .long   func_456af
    .long   func_4575b
    .long   func_452a5
    .long   func_4582b


/*----------------------------------------------------------------*/
func_450b0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c8,%esp
    mov    %eax,%esi
    mov    %dx,0x1c4(%esp)
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    mov    %eax,0x1b8(%esp)
    mov    %eax,%edx
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    $data_a2f72,%edi
    add    %eax,%eax
    add    %eax,%edi
    cmp    $0xe,%bl
    ja     jump_4583c
    xor    %eax,%eax
    mov    %bl,%al
    lea    0x0(,%eax,4),%ebp
    mov    0x1d8(%esp),%eax
    add    %edi,%eax
    mov    0x1d8(%esp),%edx
    mov    %eax,0x1b4(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    lea    (%edx,%edx,1),%ebx
    mov    %eax,0x1b0(%esp)
    mov    $data_a2f72,%eax
    mov    0x1b0(%esp),%edx
    add    %edx,%eax
    mov    %eax,0x1c0(%esp)
    mov    0x1c0(%esp),%edx
    mov    0x1b8(%esp),%eax
    add    0x1b8(%esp),%edx
    add    %eax,%eax
    mov    %edx,0x1bc(%esp)
    mov    0x1c0(%esp),%edx
    add    %edi,%ebx
    add    %eax,%edx
    add    %esi,%eax
    jmp    *%cs:vtable_45074(%ebp)


/*----------------------------------------------------------------*/
func_45173:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    mov    (%esi),%al
    mov    0x1c2(%esp),%edx
    movb   $0x1,0x1c0(%edi,%eax,1)
    sar    $0x10,%edx
    mov    0x1c0(%edi,%eax,1),%al
    mov    %al,0x1c0(%edx,%esi,1)
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    add    %eax,%eax
    lea    (%esi,%eax,1),%edx
    mov    0x1d5(%esi),%ax
    mov    %ax,0x1b2(%edx)
    xor    %eax,%eax
    mov    (%esi),%al
    add    %eax,%eax
    lea    (%edi,%eax,1),%edx
    mov    0x1d5(%edi),%ax
    mov    %ax,0x1b2(%edx)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_451d7:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    mov    (%esi),%al
    mov    0x1c2(%esp),%edx
    movb   $0x2,0x1c0(%edi,%eax,1)
    sar    $0x10,%edx
    mov    0x1c0(%edi,%eax,1),%al
    mov    %al,0x1c0(%edx,%esi,1)
    xor    %eax,%eax
    mov    (%esi),%al
    subw   $0x28,0x1b2(%edi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_45214:
/*----------------------------------------------------------------*/
    mov    data_104bea,%bh
    cmp    (%esi),%bh
    jne    jump_4522b
    xor    %eax,%eax
    mov    %bh,%al
    addw   $0x3,0x1b2(%edi,%eax,2)
  jump_4522b:
    cmp    $0x4,%cl
    jne    jump_45280
    xor    %eax,%eax
    mov    (%esi),%al
    mov    0x1c2(%esp),%edx
    movb   $0x3,0x1c0(%edi,%eax,1)
    sar    $0x10,%edx
    mov    0x1c0(%edi,%eax,1),%al
    mov    %al,0x1c0(%edx,%esi,1)
    mov    0x1b2(%esi,%edx,2),%cx
    add    $0xa,%ecx
    xor    %eax,%eax
    mov    %cx,0x1b2(%esi,%edx,2)
    mov    (%esi),%al
    addw   $0xa,0x1b2(%edi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8
  jump_45280:
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    mov    0x1d1(%esi),%dx
    mov    %dx,0x1b2(%esi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_452a5:
/*----------------------------------------------------------------*/
    mov    (%esi),%al
    cmp    data_104bea,%al
    jne    jump_452bf
    xor    %eax,%eax
    mov    data_104bea,%al
    addw   $0x3,0x1b2(%edi,%eax,2)
  jump_452bf:
    cmp    $0x1b,%cl
    jne    jump_452f5
    xor    %eax,%eax
    mov    (%esi),%al
    add    %eax,%edi
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    movb   $0x1,0x1c0(%edi)
    add    %eax,%esi
    mov    0x1c0(%edi),%al
    mov    %al,0x1c0(%esi)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8
  jump_452f5:
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    subw   $0x19,0x1b2(%esi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_45314:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    mov    (%esi),%al
    movb   $0x1,0x1c0(%edi,%eax,1)
    mov    0x1b8(%esp),%edx
    mov    0x1c0(%edi,%eax,1),%al
    mov    %al,0x1c0(%edx,%esi,1)
    xor    %eax,%eax
    mov    (%esi),%al
    subw   $0x1e,0x1b2(%edi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_4534e:
/*----------------------------------------------------------------*/
    mov    data_104bea,%ch
    cmp    (%esi),%ch
    jne    jump_4536f
    xor    %eax,%eax
    mov    %ch,%al
    addw   $0x5,0x1b2(%edi,%eax,2)
    mov    data_a2f6c,%eax
    mov    %eax,data_105248
  jump_4536f:
    cmp    $0x6,%cl
    jne    jump_453ab
    mov    0x1c2(%esp),%ebp
    mov    %esi,%eax
    sar    $0x10,%ebp
    xor    %ebx,%ebx
    mov    %ebp,%edx
    call   func_45f60
    addw   $0xa,0x1b2(%esi,%ebp,2)
    xor    %eax,%eax
    mov    (%esi),%al
    addw   $0x5,0x1b2(%edi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8
  jump_453ab:
    mov    0x1c2(%esp),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,2),%eax
    add    %esi,%eax
    mov    0x1b2(%eax),%cx
    sub    $0x2,%ecx
    mov    %cx,0x1b2(%eax)
    cmpb   $0x3,0x1c0(%edx,%esi,1)
    jne    jump_4583c
    mov    %ecx,%esi
    sub    $0x2,%esi
    mov    %si,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_453f5:
/*----------------------------------------------------------------*/
    mov    data_104bea,%bh
    cmp    (%esi),%bh
    jne    jump_45416
    xor    %eax,%eax
    mov    %bh,%al
    addw   $0x8,0x1b2(%edi,%eax,2)
    mov    data_a2f6c,%eax
    mov    %eax,data_10524c
  jump_45416:
    cmp    $0x8,%cl
    jne    jump_45452
    mov    0x1c2(%esp),%ebp
    mov    %esi,%eax
    sar    $0x10,%ebp
    xor    %ebx,%ebx
    mov    %ebp,%edx
    call   func_46130
    addw   $0xa,0x1b2(%esi,%ebp,2)
    xor    %eax,%eax
    mov    (%esi),%al
    addw   $0x5,0x1b2(%edi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8
  jump_45452:
    mov    0x1c2(%esp),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,2),%eax
    add    %esi,%eax
    subw   $0x3,0x1b2(%eax)
    cmpb   $0x3,0x1c0(%edx,%esi,1)
    jne    jump_4583c
    subw   $0x3,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_4548f:
/*----------------------------------------------------------------*/
    mov    data_104bea,%dl
    cmp    (%esi),%dl
    jne    jump_454b0
    xor    %eax,%eax
    mov    %dl,%al
    addw   $0x8,0x1b2(%edi,%eax,2)
    mov    data_a2f6c,%eax
    mov    %eax,data_105250
  jump_454b0:
    cmp    $0xa,%cl
    jne    jump_454ec
    mov    0x1c2(%esp),%ebp
    mov    %esi,%eax
    sar    $0x10,%ebp
    xor    %ebx,%ebx
    mov    %ebp,%edx
    call   func_46304
    addw   $0xa,0x1b2(%esi,%ebp,2)
    xor    %eax,%eax
    mov    (%esi),%al
    addw   $0xa,0x1b2(%edi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8
  jump_454ec:
    mov    0x1c2(%esp),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,2),%eax
    add    %esi,%eax
    subw   $0x2,0x1b2(%eax)
    cmpb   $0x3,0x1c0(%edx,%esi,1)
    jne    jump_4583c
    subw   $0x2,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_45529:
/*----------------------------------------------------------------*/
    cmp    $0xc,%cl
    jne    jump_457f3
    addw   $0x5,0x1b2(%eax)
    mov    0x1b0(%esp),%ecx
    mov    data_a313b(%ecx),%ecx
    mov    0x1b0(%edx),%ebp
    sar    $0x10,%ecx
    sar    $0x10,%ebp
    sub    $0xa,%ecx
    cmp    %ecx,%ebp
    jle    jump_4583c
    addw   $0x5,0x1b2(%eax)
    mov    0x1b4(%esp),%eax
    movb   $0x1,0x1c0(%eax)
    mov    0x1bc(%esp),%eax
    movb   $0x1,0x1c0(%eax)
    addw   $0xa,0x1b2(%ebx)
    xor    %eax,%eax
    mov    (%esi),%al
    addw   $0x5,0x1b2(%edi,%eax,2)
    mov    0x1b2(%edx),%cx
    add    $0xa,%ecx
    xor    %eax,%eax
    mov    %cx,0x1b2(%edx)
    mov    (%esi),%al
    mov    0x1c0(%esp),%esi
    add    %eax,%eax
    add    %esi,%eax
    addw   $0xf,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_455cb:
/*----------------------------------------------------------------*/
    cmp    $0xf,%cl
    jne    jump_45629
    addw   $0xa,0x1b2(%eax)
    mov    0x1b4(%esp),%eax
    movb   $0x2,0x1c0(%eax)
    mov    0x1bc(%esp),%eax
    movb   $0x2,0x1c0(%eax)
    subw   $0xf,0x1b2(%ebx)
    xor    %eax,%eax
    mov    (%esi),%al
    addw   $0xa,0x1b2(%edi,%eax,2)
    mov    0x1b2(%edx),%cx
    sub    $0x14,%ecx
    xor    %eax,%eax
    mov    %cx,0x1b2(%edx)
    mov    (%esi),%al
    mov    0x1c0(%esp),%ecx
    add    %eax,%eax
    add    %ecx,%eax
  jump_45629:
    subw   $0xa,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_4563d:
/*----------------------------------------------------------------*/
    cmp    $0x11,%cl
    jne    jump_45629
    addw   $0xf,0x1b2(%eax)
    mov    0x1b4(%esp),%eax
    movb   $0x1,0x1c0(%eax)
    mov    0x1bc(%esp),%eax
    movb   $0x1,0x1c0(%eax)
    subw   $0x5,0x1b2(%ebx)
    xor    %eax,%eax
    mov    (%esi),%al
    subw   $0x5,0x1b2(%edi,%eax,2)
    mov    0x1b2(%edx),%cx
    sub    $0xa,%ecx
    xor    %eax,%eax
    mov    %cx,0x1b2(%edx)
    mov    (%esi),%al
    mov    0x1c0(%esp),%ebx
    add    %eax,%eax
    add    %ebx,%eax
  jump_4569b:
    subw   $0x5,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_456af:
/*----------------------------------------------------------------*/
    cmp    $0x13,%cl
    jne    jump_4569b
    addw   $0x5,0x1b2(%eax)
    mov    0x1b0(%esp),%ecx
    mov    data_a3141(%ecx),%ecx
    sar    $0x10,%ecx
    mov    %ecx,0x1ac(%esp)
    mov    0x1ac(%esp),%ebp
    mov    0x1b0(%edx),%ecx
    sub    $0xa,%ebp
    sar    $0x10,%ecx
    cmp    %ebp,%ecx
    jle    jump_4583c
    addw   $0x5,0x1b2(%eax)
    mov    0x1b4(%esp),%eax
    movb   $0x3,0x1c0(%eax)
    mov    0x1bc(%esp),%eax
    movb   $0x3,0x1c0(%eax)
    addw   $0xa,0x1b2(%ebx)
    xor    %eax,%eax
    mov    (%esi),%al
    addw   $0x5,0x1b2(%edi,%eax,2)
    mov    0x1b2(%edx),%cx
    add    $0xf,%ecx
    xor    %eax,%eax
    mov    %cx,0x1b2(%edx)
    mov    (%esi),%al
    mov    0x1c0(%esp),%edx
    add    %eax,%eax
    add    %edx,%eax
    addw   $0xa,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_4575b:
/*----------------------------------------------------------------*/
    mov    0x1d8(%esp),%ebp
    cmp    $0x15,%cl
    je     jump_45770
    cmp    $0x1a,%cl
    jne    jump_457ee
  jump_45770:
    xor    %eax,%eax
    mov    0x1c2(%esp),%edx
    mov    data_104bea,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    je     jump_4583c
    test   %ebp,%ebp
    jne    jump_4579e
    mov    $0x4fa,%ebx
    mov    $data_92531,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4579e:
    mov    %esp,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_45848
    mov    %eax,%ecx
    test   %ax,%ax
    jne    jump_457c1
    mov    $0x4fd,%ebx
    mov    $data_92540,%edx
    xor    %eax,%eax
    call   func_26198
  jump_457c1:
    mov    %esp,%ebx
    movswl %cx,%ecx
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_45a0c
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    addw   $0xa,0x1b2(%esi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8
  jump_457ee:
    cmp    $0x16,%cl
    jne    jump_4583c
  jump_457f3:
    subw   $0x5,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_45807:
/*----------------------------------------------------------------*/
    cmp    $0x1,%cl
    jne    jump_4583c
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    addw   $0x28,0x1b2(%esi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_4582b:
/*----------------------------------------------------------------*/
    mov    $0x515,%ebx
    mov    $data_9254f,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_4583c:
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_45848:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1bc,%esp
    mov    %eax,%ebp
    mov    %edx,0x1ac(%esp)
    mov    %ebx,0x1b0(%esp)
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %dx,0x1b4(%esp)
    mov    %esp,%edx
    xor    %esi,%esi
    call   func_40224
    mov    %eax,0x1b8(%esp)
    test   %ax,%ax
    jle    jump_45946
    jmp    jump_45915
  jump_4588c:
    cmp    $0x4,%al
    jne    jump_458a6
    mov    $0x2,%edx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    mov    %ebx,%edi
    call   func_45958
    test   %eax,%eax
    jne    jump_45908
    jmp    jump_458ac
  jump_458a6:
    cmp    $0x5,%al
    jne    jump_458ac
    mov    (%ebx),%edi
  jump_458ac:
    mov    0x2(%edi),%eax
    sar    $0x10,%eax
    imul   $0x64,%eax,%eax
    mov    0x1ac(%esp),%ebx
    mov    0x2(%ebx),%ebx
    sar    $0x10,%ebx
    mov    data_d5d47(%ebx,%eax,1),%al
    and    $0xff,%eax
    cmp    $0x3,%eax
    jge    jump_45908
    movswl %si,%eax
    lea    0x0(,%eax,4),%ebx
    mov    0x1b2(%esp),%eax
    mov    0x1b4(%esp),%ecx
    sar    $0x10,%eax
    mov    0x1b0(%esp),%edx
    shl    $0x2,%eax
    inc    %ecx
    add    %edx,%eax
    mov    (%esp,%ebx,1),%ebx
    mov    %cx,0x1b4(%esp)
    mov    %ebx,(%eax)
  jump_45908:
    mov    0x1b8(%esp),%ebx
    inc    %esi
    cmp    %bx,%si
    jge    jump_45946
  jump_45915:
    movswl %si,%eax
    mov    (%esp,%eax,4),%ebx
    mov    0x58(%ebx),%al
    mov    0x59(%ebx),%ebx
    cmp    $0x1,%al
    je     jump_45908
    cmp    $0x2,%al
    je     jump_45908
    cmp    $0x3,%al
    jne    jump_4588c
    mov    0xa(%ebx),%eax
    sar    $0x10,%eax
    imul   $0x60,%eax,%eax
    mov    $data_a3d21,%edi
    add    %eax,%edi
    jmp    jump_458ac
  jump_45946:
    mov    0x1b4(%esp),%eax
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_45958:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1b8,%esp
    mov    %eax,%esi
    mov    %dl,0x1b4(%esp)
    mov    %ebx,%ebp
    mov    %ecx,0x1b0(%esp)
    test   %ebx,%ebx
    jne    jump_45988
    mov    $0x54e,%ebx
    mov    $data_9255e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_45988:
    mov    %esp,%edx
    mov    %ebp,%eax
    call   func_1d794
    xor    %edi,%edi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    %eax,0x1ac(%esp)
    jmp    jump_459a1
  jump_459a0:
    inc    %ebx
  jump_459a1:
    mov    0x1ac(%esp),%edx
    movswl %bx,%eax
    cmp    %edx,%eax
    jge    jump_459f2
    mov    (%esp,%eax,4),%eax
    test   %eax,%eax
    je     jump_459a0
    mov    0x54(%eax),%ebp
    xor    %edx,%edx
    sar    $0x10,%ebp
    mov    (%esi),%dl
    cmp    %edx,%ebp
    jne    jump_459ce
    cmpb   $0x3,0x1b4(%esp)
    je     jump_459e4
  jump_459ce:
    mov    0x54(%eax),%edx
    sar    $0x10,%edx
    mov    0x1c0(%edx,%esi,1),%dl
    cmp    0x1b4(%esp),%dl
    jne    jump_459a0
  jump_459e4:
    mov    0x8c(%eax),%edx
    imul   (%eax),%edx
    inc    %edi
    add    %edx,%ecx
    jmp    jump_459a0
  jump_459f2:
    mov    0x1b0(%esp),%ebx
    test   %ebx,%ebx
    je     jump_459ff
    mov    %ecx,(%ebx)
  jump_459ff:
    movswl %di,%eax
    add    $0x1b8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_45a0c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %edx,%ebp
    mov    %ebx,%edi
    mov    %ecx,%esi
    mov    (%eax),%al
    cmp    data_104bea,%al
    jne    jump_45a30
    mov    $0x574,%ebx
    mov    $data_9256d,%edx
    xor    %eax,%eax
    call   func_26198
  jump_45a30:
    xor    %eax,%eax
    test   %si,%si
    jle    jump_45a4d
  jump_45a37:
    movswl %ax,%edx
    mov    (%edi,%edx,4),%ebx
    movb   $0x1,0x5d(%ebx)
    mov    (%edi,%edx,4),%edx
    inc    %eax
    mov    %ebp,0x5e(%edx)
    cmp    %si,%ax
    jl     jump_45a37
  jump_45a4d:
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_45a54:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%edi
    mov    %edx,%ebp
    mov    %ebx,0x10(%esp)
    mov    (%eax),%al
    cmp    data_104bea,%al
    je     jump_45a7e
    mov    $0x58a,%ebx
    mov    $data_9257c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_45a7e:
    xor    %edx,%edx
    mov    %edx,0x14(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x8(%esp)
    mov    %edx,(%esp)
    mov    %edx,0x18(%esp)
    mov    0x2(%ebp),%edx
    sar    $0x10,%edx
    mov    data_d8460(%edx),%al
    and    $0x1,%al
    xor    %edx,%edx
    mov    %al,%dl
    test   %edx,%edx
    jne    jump_45d42
    mov    data_a3cf4,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jg     jump_45ad1
    jmp    jump_45b66
  jump_45ac0:
    mov    data_a3cf4,%bx
    inc    %eax
    cmp    %bx,%ax
    jge    jump_45b66
  jump_45ad1:
    xor    %ebx,%ebx
    movswl %ax,%edx
    mov    data_104bea,%bl
    cmp    %ebx,%edx
    je     jump_45ac0
    lea    (%edi,%edx,1),%ebx
    cmpb   $0x0,0x1c0(%ebx)
    jne    jump_45ac0
    xor    %ecx,%ecx
    mov    0x15(%ebp),%cl
    mov    %ecx,0xc(%esp)
    xor    %ecx,%ecx
    mov    0xc(%esp),%esi
    mov    0x14(%ebp),%cl
    or     %ecx,%esi
    mov    %esi,0xc(%esp)
    movswl %ax,%ecx
    mov    $0x1,%esi
    shl    %cl,%esi
    mov    %esi,%ecx
    test   %ecx,0xc(%esp)
    je     jump_45ac0
    mov    $0xffffffff,%eax
    mov    %edx,0x18(%esp)
    movb   $0x1,0x1c0(%ebx)
    mov    %eax,(%esp)
    mov    0x1d5(%edi),%ax
    mov    %edx,%ebx
    mov    %ax,0x1b2(%edi,%edx,2)
    shl    $0x5,%edx
    sub    %ebx,%edx
    shl    $0x3,%edx
    sub    %ebx,%edx
    xor    %ebx,%ebx
    mov    (%edi),%bl
    movb   $0x1,data_a3132(%ebx,%edx,2)
    xor    %ebx,%ebx
    mov    (%edi),%bl
    add    %ebx,%ebx
    mov    data_a3147(,%edx,2),%ax
    mov    %ax,data_a3124(%ebx,%edx,2)
  jump_45b66:
    cmpl   $0x0,(%esp)
    jne    jump_45bf5
    mov    data_a3cf4,%cx
    xor    %eax,%eax
    test   %cx,%cx
    jle    jump_45bf5
    jmp    jump_45b91
  jump_45b84:
    mov    data_a3cf4,%si
    inc    %eax
    cmp    %si,%ax
    jge    jump_45bf5
  jump_45b91:
    xor    %ebx,%ebx
    movswl %ax,%edx
    mov    data_104bea,%bl
    cmp    %ebx,%edx
    je     jump_45b84
    cmpb   $0x2,0x1c0(%edx,%edi,1)
    jne    jump_45b84
    mov    $0x1,%ebx
    movswl %ax,%ecx
    movzbl 0x15(%ebp),%esi
    shl    %cl,%ebx
    test   %ebx,%esi
    je     jump_45bc9
    mov    $0xffffffff,%ebx
    mov    %edx,0x18(%esp)
    mov    %ebx,0x8(%esp)
  jump_45bc9:
    cmpl   $0x0,0x8(%esp)
    jne    jump_45b84
    mov    $0x1,%edx
    xor    %ebx,%ebx
    movswl %ax,%ecx
    mov    0x14(%ebp),%bl
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_45b84
    mov    $0xffffffff,%esi
    movswl %ax,%edx
    mov    %esi,0x4(%esp)
    mov    %edx,0x18(%esp)
    jmp    jump_45b84
  jump_45bf5:
    cmpl   $0x0,(%esp)
    jne    jump_45ca4
    cmpl   $0x0,0x8(%esp)
    jne    jump_45ca4
    cmpl   $0x0,0x4(%esp)
    jne    jump_45ca4
    mov    $data_a2f72,%edi
    mov    data_a3cf4,%ax
    xor    %esi,%esi
    test   %ax,%ax
    jle    jump_45ca4
    jmp    jump_45c85
  jump_45c2d:
    mov    data_a3cf4,%cx
    inc    %eax
    cmp    %cx,%ax
    jl     jump_45c41
    jmp    jump_45c72
  jump_45c3c:
    xor    %edx,%edx
    mov    0x15(%ebp),%dl
  jump_45c41:
    mov    $0x1,%ebx
    movswl %si,%ecx
    shl    %cl,%ebx
    test   %ebx,%edx
    je     jump_45c2d
    mov    $0x1,%ebx
    movswl %ax,%ecx
    shl    %cl,%ebx
    test   %ebx,%edx
    je     jump_45c2d
    movswl %ax,%ecx
    cmpb   $0x2,0x1c0(%ecx,%edi,1)
    jne    jump_45c2d
    movl   $0xffffffff,0x14(%esp)
  jump_45c72:
    mov    data_a3cf4,%dx
    inc    %esi
    add    $0x1ee,%edi
    cmp    %dx,%si
    jge    jump_45ca4
  jump_45c85:
    xor    %edx,%edx
    movswl %si,%ebx
    mov    data_104bea,%dl
    cmp    %edx,%ebx
    je     jump_45c72
    mov    data_a3cf4,%bx
    xor    %eax,%eax
    test   %bx,%bx
    jg     jump_45c3c
    jmp    jump_45c72
  jump_45ca4:
    cmpl   $0xffffffff,(%esp)
    jne    jump_45cb1
    mov    $0x4,%edx
    jmp    jump_45d0c
  jump_45cb1:
    cmpl   $0xffffffff,0x8(%esp)
    jne    jump_45cbf
    mov    $0x5,%edx
    jmp    jump_45d0c
  jump_45cbf:
    cmpl   $0xffffffff,0x4(%esp)
    jne    jump_45ccd
    mov    $0x6,%edx
    jmp    jump_45d0c
  jump_45ccd:
    cmpl   $0xffffffff,0x14(%esp)
    jne    jump_45cdb
    mov    $0x7,%edx
    jmp    jump_45d0c
  jump_45cdb:
    mov    0x10(%esp),%edx
    mov    data_104bea,%cl
    movb   $0x0,0x5d(%edx)
    xor    %ebx,%ebx
    movl   $0x0,0x5e(%edx)
    mov    $0x1,%edx
    mov    0x17(%ebp),%bl
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_45d07
    mov    $0x3,%edx
    jmp    jump_45d0c
  jump_45d07:
    mov    $0x14,%edx
  jump_45d0c:
    cmp    $0xffffffff,%edx
    je     jump_45d42
    mov    0x2(%ebp),%ebx
    sar    $0x10,%ebx
    mov    data_d8460(%ebx),%cl
    mov    $data_10ae70,%eax
    or     $0x1,%cl
    movswl %dx,%edx
    mov    %cl,data_d8460(%ebx)
    mov    0x18(%esp),%ecx
    mov    0x10(%esp),%ebx
    call   func_55aec
    mov    $0xffffffff,%edx
    jmp    jump_45d44
  jump_45d42:
    xor    %edx,%edx
  jump_45d44:
    mov    %edx,%eax
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_45d50:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    mov    (%eax),%al
    cmp    data_104bea,%al
    je     jump_45d78
    mov    $0x61c,%ebx
    mov    $data_9258b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_45d78:
    mov    0x56(%ebp),%ax
    mov    %ax,(%esp)
    xor    %ebx,%ebx
    mov    -0x2(%esp),%ecx
    mov    $0x1,%eax
    sar    $0x10,%ecx
    mov    0x15(%edi),%bl
    shl    %cl,%eax
    mov    $0xffffffff,%edx
    test   %eax,%ebx
    jne    jump_45e14
    mov    -0x2(%esp),%ebx
    sar    $0x10,%ebx
    lea    (%esi,%ebx,1),%eax
    mov    0x1c0(%eax),%cl
    test   %cl,%cl
    jne    jump_45e0a
    movb   $0x1,0x1c0(%eax)
    lea    0x0(,%ebx,2),%eax
    lea    (%esi,%eax,1),%ecx
    mov    0x1d5(%esi),%ax
    mov    %ax,0x1b2(%ecx)
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    xor    %ebx,%ebx
    add    %eax,%eax
    mov    (%esi),%bl
    movb   $0x1,data_a3132(%ebx,%eax,1)
    xor    %ebx,%ebx
    mov    (%esi),%bl
    add    %ebx,%ebx
    add    %eax,%ebx
    mov    data_a3147(%eax),%ax
    mov    $0x8,%edx
    mov    %ax,data_a3124(%ebx)
    jmp    jump_45e14
  jump_45e0a:
    cmp    $0x2,%cl
    jne    jump_45e14
    mov    $0x9,%edx
  jump_45e14:
    cmp    $0xffffffff,%edx
    je     jump_45e58
    mov    0x2(%edi),%eax
    sar    $0x10,%eax
    mov    data_d8460(%eax),%al
    and    $0x1,%al
    and    $0xff,%eax
    jne    jump_45e58
    mov    -0x2(%esp),%ecx
    mov    $data_10ae70,%eax
    movswl %dx,%edx
    mov    %ebp,%ebx
    sar    $0x10,%ecx
    call   func_55aec
    mov    0x2(%edi),%eax
    sar    $0x10,%eax
    orb    $0x1,data_d8460(%eax)
    mov    $0xffffffff,%eax
    jmp    jump_45e5a
  jump_45e58:
    xor    %eax,%eax
  jump_45e5a:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_45e64:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x18,%esp
    movswl %dx,%ebx
    cmpb   $0x3,0x1c0(%ebx,%eax,1)
    je     jump_45f51
    mov    data_a792f,%si
    mov    (%eax),%cl
    mov    $0x1,%al
    xor    %ebx,%ebx
    shl    %cl,%al
    mov    %bx,0xc(%esp)
    mov    %al,0x14(%esp)
    mov    %dl,%cl
    mov    $0x1,%al
    mov    %bx,0x8(%esp)
    shl    %cl,%al
    xor    %edx,%edx
    mov    %al,0x10(%esp)
    mov    $data_a62a3,%eax
    test   %si,%si
    jle    jump_45ee7
    mov    data_a792f,%di
  jump_45eb6:
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    0x14(%esp),%bl
    mov    0x20(%eax),%cl
    test   %ebx,%ecx
    je     jump_45eca
    incw   0xc(%esp)
  jump_45eca:
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    0x10(%esp),%cl
    mov    0x20(%eax),%bl
    test   %ecx,%ebx
    je     jump_45ede
    incw   0x8(%esp)
  jump_45ede:
    inc    %edx
    add    $0x27,%eax
    cmp    %di,%dx
    jl     jump_45eb6
  jump_45ee7:
    mov    0xa(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x5,%eax
    jge    jump_45ef7
    xor    %ebx,%ebx
    jmp    jump_45f56
  jump_45ef7:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_45f09
    movw   $0x1,0x8(%esp)
  jump_45f09:
    filds  data_a792f
    filds  0xc(%esp)
    fstps  0x4(%esp)
    fdivrs 0x4(%esp)
    fcompl data_9259a
    fnstsw %ax
    sahf
    jbe    jump_45f32
    xor    %ebx,%ebx
    mov    %ebx,%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_45f32:
    filds  0x8(%esp)
    fdivrs 0x4(%esp)
    fcompl data_925a2
    fnstsw %ax
    sahf
    jbe    jump_45f51
    xor    %ebx,%ebx
    mov    %ebx,%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_45f51:
    mov    $0xffffffff,%ebx
  jump_45f56:
    mov    %ebx,%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_45f60:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    mov    %ebx,(%esp)
    movswl %dx,%eax
    xor    %ebx,%ebx
    mov    0x1c0(%ecx,%eax,1),%dl
    xor    %esi,%esi
    cmp    $0x3,%dl
    jne    jump_45f8f
    call   func_782df
    mov    %eax,%edx
    mov    $0x6,%ebp
    jmp    jump_45f9b
  jump_45f8f:
    call   func_782df
    mov    %eax,%edx
    mov    $0x3,%ebp
  jump_45f9b:
    sar    $0x1f,%edx
    idiv   %ebp
    inc    %edx
    mov    %edx,0x4(%esp)
    mov    $0x1,%dh
    mov    (%ecx),%cl
    shl    %cl,%dh
    movswl %di,%ecx
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    $0x1,%dl
    mov    data_a792f,%di
    mov    data_a2f72(,%eax,2),%cl
    mov    $data_a62a3,%eax
    shl    %cl,%dl
    xor    %ecx,%ecx
    test   %di,%di
    jle    jump_449e7
    jmp    jump_4600e
  jump_45fde:
    movzbl %dl,%ebp
    movzbl 0x20(%eax),%edi
    test   %ebp,%edi
    je     jump_45ffa
    cmp    0x4(%esp),%ebx
    jge    jump_45ffa
    movzbl %dh,%ebp
    test   %ebp,%edi
    jne    jump_45ffa
    inc    %ebx
    or     %dh,0x20(%eax)
  jump_45ffa:
    mov    data_a792f,%di
    inc    %ecx
    add    $0x27,%eax
    cmp    %di,%cx
    jge    jump_449e7
  jump_4600e:
    cmpl   $0x0,(%esp)
    jne    jump_45fde
    movzbl %dh,%ebp
    movzbl 0x20(%eax),%edi
    test   %ebp,%edi
    je     jump_45fde
    cmp    0x4(%esp),%esi
    jge    jump_45ffa
    movzbl %dl,%ebp
    test   %ebp,%edi
    jne    jump_45ffa
    inc    %esi
    or     %dl,0x20(%eax)
    jmp    jump_45ffa


/*----------------------------------------------------------------*/
func_46034:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x18,%esp
    movswl %dx,%ebx
    cmpb   $0x3,0x1c0(%ebx,%eax,1)
    je     jump_46121
    mov    data_a62a1,%si
    mov    (%eax),%cl
    mov    $0x1,%al
    xor    %ebx,%ebx
    shl    %cl,%al
    mov    %bx,0xc(%esp)
    mov    %al,0x14(%esp)
    mov    %dl,%cl
    mov    $0x1,%al
    mov    %bx,0x8(%esp)
    shl    %cl,%al
    xor    %edx,%edx
    mov    %al,0x10(%esp)
    mov    $data_a3d21,%eax
    test   %si,%si
    jle    jump_460b7
    mov    data_a62a1,%di
  jump_46086:
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    0x14(%esp),%bl
    mov    0x17(%eax),%cl
    test   %ebx,%ecx
    je     jump_4609a
    incw   0xc(%esp)
  jump_4609a:
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    0x10(%esp),%cl
    mov    0x17(%eax),%bl
    test   %ecx,%ebx
    je     jump_460ae
    incw   0x8(%esp)
  jump_460ae:
    inc    %edx
    add    $0x60,%eax
    cmp    %di,%dx
    jl     jump_46086
  jump_460b7:
    mov    0xa(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jge    jump_460c7
    xor    %ebx,%ebx
    jmp    jump_46126
  jump_460c7:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_460d9
    movw   $0x1,0x8(%esp)
  jump_460d9:
    filds  data_a62a1
    filds  0xc(%esp)
    fstps  0x4(%esp)
    fdivrs 0x4(%esp)
    fcompl data_925aa
    fnstsw %ax
    sahf
    jbe    jump_46102
    xor    %ebx,%ebx
    mov    %ebx,%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_46102:
    filds  0x8(%esp)
    fdivrs 0x4(%esp)
    fcompl data_925b2
    fnstsw %ax
    sahf
    jbe    jump_46121
    xor    %ebx,%ebx
    mov    %ebx,%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_46121:
    mov    $0xffffffff,%ebx
  jump_46126:
    mov    %ebx,%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_46130:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    mov    %ebx,(%esp)
    movswl %dx,%eax
    xor    %esi,%esi
    mov    0x1c0(%ecx,%eax,1),%dl
    xor    %ebx,%ebx
    cmp    $0x3,%dl
    jne    jump_4615f
    call   func_782df
    mov    %eax,%edx
    mov    $0x4,%ebp
    jmp    jump_4616b
  jump_4615f:
    call   func_782df
    mov    %eax,%edx
    mov    $0x2,%ebp
  jump_4616b:
    sar    $0x1f,%edx
    idiv   %ebp
    inc    %edx
    mov    %edx,0x4(%esp)
    mov    $0x1,%dh
    mov    (%ecx),%cl
    shl    %cl,%dh
    movswl %di,%ecx
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    $0x1,%dl
    mov    data_a62a1,%di
    mov    data_a2f72(,%eax,2),%cl
    mov    $data_a3d21,%eax
    shl    %cl,%dl
    xor    %ecx,%ecx
    test   %di,%di
    jle    jump_449e7
    jmp    jump_461e1
  jump_461ae:
    movzbl %dl,%ebp
    movzbl 0x17(%eax),%edi
    test   %ebp,%edi
    je     jump_461cd
    cmp    0x4(%esp),%esi
    jge    jump_461cd
    movzbl %dh,%ebp
    test   %ebp,%edi
    jne    jump_461cd
    or     %dh,0x16(%eax)
    inc    %esi
    or     %dh,0x17(%eax)
  jump_461cd:
    mov    data_a62a1,%di
    inc    %ecx
    add    $0x60,%eax
    cmp    %di,%cx
    jge    jump_449e7
  jump_461e1:
    cmpl   $0x0,(%esp)
    jne    jump_461ae
    movzbl %dh,%ebp
    movzbl 0x17(%eax),%edi
    test   %ebp,%edi
    je     jump_461ae
    cmp    0x4(%esp),%ebx
    jge    jump_461cd
    movzbl %dl,%ebp
    test   %ebp,%edi
    jne    jump_461cd
    or     %dl,0x16(%eax)
    inc    %ebx
    or     %dl,0x17(%eax)
    jmp    jump_461cd


/*----------------------------------------------------------------*/
func_46208:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    sub    $0x1c,%esp
    movswl %dx,%ebx
    cmpb   $0x3,0x1c0(%ebx,%eax,1)
    je     jump_462f7
    mov    (%eax),%cl
    mov    $0x1,%al
    xor    %ebx,%ebx
    shl    %cl,%al
    mov    %bx,0xc(%esp)
    mov    %al,0x18(%esp)
    mov    %dl,%cl
    mov    $0x1,%al
    mov    %bx,0x10(%esp)
    shl    %cl,%al
    xor    %edx,%edx
    mov    %al,0x14(%esp)
    mov    $data_10525a,%eax
    jmp    jump_4624b
  jump_46247:
    inc    %edx
    add    $0x4b,%eax
  jump_4624b:
    xor    %ebx,%ebx
    movswl %dx,%ecx
    mov    data_105258,%bx
    cmp    %ebx,%ecx
    jge    jump_46287
    xor    %ebx,%ebx
    mov    0x45(%eax),%ecx
    mov    0x18(%esp),%bl
    sar    $0x18,%ecx
    test   %ebx,%ecx
    je     jump_46270
    incw   0xc(%esp)
  jump_46270:
    xor    %ecx,%ecx
    mov    0x45(%eax),%ebx
    mov    0x14(%esp),%cl
    sar    $0x18,%ebx
    test   %ecx,%ebx
    je     jump_46247
    incw   0x10(%esp)
    jmp    jump_46247
  jump_46287:
    mov    0xa(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x5,%eax
    jge    jump_46297
    xor    %ecx,%ecx
    jmp    jump_462fc
  jump_46297:
    mov    0xe(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_462a9
    movw   $0x1,0x10(%esp)
  jump_462a9:
    xor    %eax,%eax
    mov    data_105258,%ax
    filds  0xc(%esp)
    mov    %eax,0x8(%esp)
    fstps  0x4(%esp)
    fildl  0x8(%esp)
    fdivrs 0x4(%esp)
    fcompl data_925ba
    fnstsw %ax
    sahf
    jbe    jump_462da
    xor    %ecx,%ecx
    mov    %ecx,%eax
    add    $0x1c,%esp
    pop    %ecx
    pop    %ebx
    ret
  jump_462da:
    filds  0x10(%esp)
    fdivrs 0x4(%esp)
    fcompl data_925c2
    fnstsw %ax
    sahf
    jbe    jump_462f7
    xor    %ecx,%ecx
    mov    %ecx,%eax
    add    $0x1c,%esp
    pop    %ecx
    pop    %ebx
    ret
  jump_462f7:
    mov    $0xffffffff,%ecx
  jump_462fc:
    mov    %ecx,%eax
    add    $0x1c,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_46304:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x28,%esp
    mov    %eax,%edi
    mov    %dx,0x1c(%esp)
    mov    %ebx,0x8(%esp)
    mov    0x1a(%esp),%eax
    sar    $0x10,%eax
    xor    %ebx,%ebx
    mov    0x1c0(%edi,%eax,1),%dl
    xor    %esi,%esi
    cmp    $0x3,%dl
    jne    jump_46345
    call   func_782df
    mov    %eax,%edx
    mov    $0x2,%ebp
    sar    $0x1f,%edx
    idiv   %ebp
    inc    %edx
    mov    %edx,0xc(%esp)
    jmp    jump_4634d
  jump_46345:
    movl   $0x1,0xc(%esp)
  jump_4634d:
    mov    $0x1,%al
    mov    (%edi),%cl
    mov    0x1a(%esp),%edx
    shl    %cl,%al
    sar    $0x10,%edx
    mov    %al,0x24(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    $0x1,%dl
    mov    data_a2f72(,%eax,2),%cl
    shl    %cl,%dl
    mov    %dl,%cl
    xor    %edx,%edx
    mov    (%edi),%dl
    mov    data_a2f72(,%eax,2),%al
    mov    %dx,0x18(%esp)
    xor    %ah,%ah
    xor    %edx,%edx
    mov    %ax,0x20(%esp)
    mov    $data_10525a,%eax
    jmp    jump_463ed
  jump_46397:
    mov    0x45(%eax),%edi
    movzbl %cl,%ebp
    sar    $0x18,%edi
    test   %ebp,%edi
    je     jump_463e9
    cmp    0xc(%esp),%ebx
    jge    jump_463e9
    movzbl 0x24(%esp),%ebp
    test   %ebp,%edi
    jne    jump_463e9
    mov    0x16(%esp),%ebp
    sar    $0x10,%ebp
    mov    0x24(%esp),%ch
    add    %ebp,%ebp
    xor    %edi,%edi
    or     %ch,0x48(%eax)
    mov    data_106fa6(%ebp),%di
    mov    %edi,(%esp)
    movswl %dx,%edi
    mov    %edi,0x4(%esp)
    mov    (%esp),%edi
    cmp    0x4(%esp),%edi
    jne    jump_463e8
    movw   $0xffff,data_106fa6(%ebp)
  jump_463e8:
    inc    %ebx
  jump_463e9:
    inc    %edx
    add    $0x4b,%eax
  jump_463ed:
    movswl %dx,%edi
    mov    %edi,0x14(%esp)
    xor    %edi,%edi
    mov    0x14(%esp),%ebp
    mov    data_105258,%di
    cmp    %ebp,%edi
    jle    jump_46460
    cmpl   $0x0,0x8(%esp)
    jne    jump_46397
    mov    0x45(%eax),%edi
    sar    $0x18,%edi
    mov    %edi,0x10(%esp)
    movzbl 0x24(%esp),%edi
    mov    0x10(%esp),%ebp
    test   %ebp,%edi
    je     jump_46397
    cmp    0xc(%esp),%esi
    jge    jump_463e9
    movzbl %cl,%edi
    test   %ebp,%edi
    jne    jump_463e9
    mov    0x1e(%esp),%ebp
    mov    0x48(%eax),%ch
    sar    $0x10,%ebp
    or     %cl,%ch
    add    %ebp,%ebp
    xor    %edi,%edi
    mov    %ch,0x48(%eax)
    mov    data_106fa6(%ebp),%di
    cmp    0x14(%esp),%edi
    jne    jump_4645d
    movw   $0xffff,data_106fa6(%ebp)
  jump_4645d:
    inc    %esi
    jmp    jump_463e9
  jump_46460:
    add    $0x28,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_46470:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_105258,%eax
    xor    %edx,%edx
    call   func_46480
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_46480:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%esi
    mov    %edx,%ecx
    movl   $0x0,0x1d6a(%eax)
    lea    0x1d4c(%eax),%ebx
    movl   $0x0,0x1d6e(%eax)
  jump_464a6:
    add    $0x4b,%eax
    movb   $0x0,(%eax)
    mov    (%eax),%dl
    mov    %dl,-0x1(%eax)
    cmp    %ebx,%eax
    jne    jump_464a6
    cmpl   $0x0,data_105254
    jne    jump_466d3
    mov    %esi,%eax
    lea    0x1d4c(%esi),%edx
  jump_464ca:
    add    $0x4b,%eax
    movb   $0xff,-0x6(%eax)
    cmp    %edx,%eax
    jne    jump_464ca
    movw   $0x0,(%esi)
    test   %ecx,%ecx
    jne    jump_464e9
    lea    0x4(%esp),%edx
    mov    $data_925cc,%eax
    jmp    jump_464ef
  jump_464e9:
    lea    0x4(%esp),%edx
    mov    %ecx,%eax
  jump_464ef:
    call   func_1bb10
    mov    %eax,0x1c(%esp)
    mov    0x1c(%esp),%ebx
    test   %ebx,%ebx
    je     jump_466c9
    lea    0xc(%esp),%eax
    push   %eax
    push   $data_925d8
    push   %ebx
    call   func_78071
    add    $0xc,%esp
    mov    0xc(%esp),%eax
    mov    %ax,(%esi)
    xor    %eax,%eax
    mov    (%esi),%ax
    cmp    $0x64,%eax
    jle    jump_4652d
    movw   $0x64,(%esi)
  jump_4652d:
    mov    $0xffffffec,%ebp
    xor    %edi,%edi
    lea    0x2(%esi),%eax
    mov    %edi,0x18(%esp)
    mov    %eax,(%esp)
    mov    %esi,%edi
    mov    $0x20,%cl
    jmp    jump_4655c
  jump_46544:
    mov    (%esp),%edx
    mov    0x18(%esp),%ebx
    add    $0x2,%ebp
    add    $0x4b,%edi
    add    $0x4b,%edx
    inc    %ebx
    mov    %edx,(%esp)
    mov    %ebx,0x18(%esp)
  jump_4655c:
    xor    %eax,%eax
    mov    0x18(%esp),%edx
    mov    (%esi),%ax
    cmp    %edx,%eax
    jle    jump_46625
    mov    (%esp),%eax
    push   %eax
    push   $data_925db
    mov    0x24(%esp),%edx
    push   %edx
    call   func_78071
    add    $0xc,%esp
    lea    0x10(%esp),%eax
    push   %eax
    lea    0x10(%esp),%eax
    push   %eax
    push   $data_925de
    push   %edx
    call   func_78071
    add    $0x10,%esp
    mov    0xc(%esp),%al
    mov    %al,0x4c(%edi)
    cmpl   $0xa,0x18(%esp)
    jle    jump_465b4
    mov    0x10(%esp),%eax
    imul   %ebp,%eax
    mov    %eax,0x10(%esp)
  jump_465b4:
    cmpl   $0xfde8,0x10(%esp)
    jle    jump_465c6
    movl   $0xfde8,0x10(%esp)
  jump_465c6:
    mov    0x10(%esp),%eax
    mov    %edi,%ebx
    xor    %edx,%edx
    mov    %ax,0x3e(%edi)
  jump_465d2:
    lea    0xc(%esp),%eax
    push   %eax
    push   $data_925e4
    mov    0x24(%esp),%eax
    push   %eax
    call   func_78071
    add    $0xc,%esp
    mov    0xc(%esp),%al
    mov    %al,0x40(%ebx)
    cmpl   $0xff,0xc(%esp)
    jne    jump_46600
    mov    %edi,%ebx
    xor    %eax,%eax
    jmp    jump_46617
  jump_46600:
    inc    %edx
    inc    %ebx
    cmp    $0x5,%edx
    jl     jump_465d2
    mov    %edi,%ebx
    xor    %eax,%eax
    jmp    jump_46617
  jump_4660d:
    inc    %eax
    cmp    $0x3c,%eax
    jge    jump_46544
  jump_46617:
    lea    (%ebx,%eax,1),%edx
    cmpb   $0x5e,0x2(%edx)
    jne    jump_4660d
    mov    %cl,0x2(%edx)
    jmp    jump_4660d
  jump_46625:
    xor    %ebx,%ebx
    mov    %esi,0x14(%esp)
    mov    %ebx,0x18(%esp)
    jmp    jump_46676
  jump_46631:
    inc    %eax
    cmp    $0x4,%eax
    jl     jump_4663e
    jmp    jump_4665b
  jump_46639:
    xor    %eax,%eax
    imul   $0x4b,%ecx,%ecx
  jump_4663e:
    lea    (%esi,%ecx,1),%edx
    add    %eax,%edx
    xor    %ebx,%ebx
    mov    0x45(%edx),%bl
    cmp    $0xff,%ebx
    jne    jump_46631
    mov    0x18(%esp),%al
    movb   $0xff,0x46(%edx)
    mov    %al,0x45(%edx)
  jump_4665b:
    inc    %edi
    inc    %ebp
    cmp    $0x5,%edi
    jl     jump_46689
  jump_46662:
    mov    0x14(%esp),%ebp
    mov    0x18(%esp),%eax
    add    $0x4b,%ebp
    inc    %eax
    mov    %ebp,0x14(%esp)
    mov    %eax,0x18(%esp)
  jump_46676:
    xor    %eax,%eax
    mov    0x18(%esp),%ecx
    mov    (%esi),%ax
    cmp    %ecx,%eax
    jle    jump_46698
    mov    0x14(%esp),%ebp
    xor    %edi,%edi
  jump_46689:
    xor    %ecx,%ecx
    mov    0x40(%ebp),%cl
    cmp    $0xff,%ecx
    je     jump_46662
    jmp    jump_46639
  jump_46698:
    lea    0x8(%esp),%edx
    mov    0x1c(%esp),%eax
    call   func_7776d
    mov    0x8(%esp),%eax
    cmp    0x4(%esp),%eax
    jl     jump_466c0
    mov    $0x86,%ebx
    mov    $data_925e7,%edx
    xor    %eax,%eax
    call   func_26198
  jump_466c0:
    mov    0x1c(%esp),%eax
    call   func_7744e
  jump_466c9:
    movl   $0xffffffff,data_105254
  jump_466d3:
    mov    %esi,%eax
    add    $0xe,%esi
  jump_466d8:
    add    $0x2,%eax
    movw   $0xffff,0x1d4c(%eax)
    movw   $0x0,0x1d5a(%eax)
    cmp    %esi,%eax
    jne    jump_466d8
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_466fc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%edi
    xor    %edx,%edx
    xor    %esi,%esi
    mov    %edx,0x18(%esp)
    jmp    jump_46722
  jump_46711:
    add    $0x2,%esi
    lea    0x1(%ebx),%ebp
    xor    %edx,%edx
    mov    %ebp,0x18(%esp)
    mov    %dx,-0x2(%esp,%esi,1)
  jump_46722:
    mov    data_a3cf2,%eax
    mov    0x18(%esp),%ebx
    sar    $0x10,%eax
    cmp    %ebx,%eax
    jg     jump_46711
    xor    %ecx,%ecx
    mov    $data_bb1b3,%esi
    jmp    jump_46743
  jump_4673b:
    mov    0x18(%esp),%ecx
    inc    %ecx
    add    $0x7b,%esi
  jump_46743:
    mov    %ecx,0x18(%esp)
    mov    data_ca1ed,%eax
    mov    0x18(%esp),%edx
    sar    $0x10,%eax
    cmp    %edx,%eax
    jle    jump_4679a
    mov    data_a3cf2,%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    0x57(%esi),%al
    mov    %esi,%ebx
    cmp    %edx,%eax
    jge    jump_4673b
    cmp    data_104bea,%al
    je     jump_4678b
    cmpb   $0x2,data_a3d20
    jne    jump_4678b
    xor    %edx,%edx
    mov    0x46(%esi),%dx
    cmp    $0xf,%edx
    jge    jump_4678b
    incw   (%esp,%eax,2)
  jump_4678b:
    xor    %eax,%eax
    mov    0x57(%ebx),%al
    mov    0x46(%ebx),%bx
    add    %bx,(%esp,%eax,2)
    jmp    jump_4673b
  jump_4679a:
    xor    %ebx,%ebx
    mov    %edi,%esi
    jmp    jump_467b1
  jump_467a0:
    movw   $0x0,0x1d5c(%esi)
  jump_467a9:
    mov    0x18(%esp),%ebx
    inc    %ebx
    add    $0x2,%esi
  jump_467b1:
    mov    %ebx,0x18(%esp)
    mov    data_a3cf2,%eax
    mov    0x18(%esp),%ebp
    sar    $0x10,%eax
    cmp    %ebp,%eax
    jle    jump_468b0
    xor    %eax,%eax
    mov    0x1d4e(%esi),%ax
    lea    0x0(%ebp,%ebp,1),%ebx
    cmp    $0xffff,%eax
    jge    jump_467a0
    xor    %eax,%eax
    mov    (%esp,%ebx,1),%ax
    mov    %eax,0x14(%esp)
    test   %eax,%eax
    je     jump_46812
    inc    %eax
    push   $0x3feb3333
    mov    %eax,0x14(%esp)
    push   $0x33333333
    fildl  0x18(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_78b20
    call   func_76e98
    fistpl 0x14(%esp)
  jump_46812:
    mov    0x14(%esp),%eax
    mov    0x1d5c(%esi),%bx
    add    %eax,%ebx
    xor    %eax,%eax
    mov    0x1d4e(%esi),%ax
    imul   $0x4b,%eax,%eax
    mov    %bx,0x1d5c(%esi)
    lea    (%edi,%eax,1),%ebx
    mov    0x1d5c(%esi),%ax
    cmp    0x3e(%ebx),%ax
    jb     jump_467a9
    mov    0x1d4e(%esi),%ax
    xor    %ebx,%ebx
    mov    %ax,%bx
    imul   $0x4b,%ebx,%eax
    mov    0x18(%esp),%cl
    mov    $0x1,%dl
    shl    %cl,%dl
    or     %dl,0x4a(%edi,%eax,1)
    xor    %eax,%eax
    mov    0x1d4e(%esi),%ax
    imul   $0x4b,%eax,%eax
    or     %dl,0x4b(%edi,%eax,1)
    mov    0x18(%esp),%edx
    xor    %eax,%eax
    movw   $0xffff,0x1d4e(%esi)
    mov    data_104bea,%al
    movw   $0x0,0x1d5c(%esi)
    cmp    %edx,%eax
    jne    jump_467a9
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    xor    %edx,%edx
    call   func_55aec
    mov    %edi,%eax
    call   func_468bc
    jmp    jump_467a9
  jump_468b0:
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_468bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    mov    0x1d6e(%eax),%edx
    test   %edx,%edx
    jne    jump_468f9
    mov    data_104bea,%dl
    call   func_46900
    cmp    $0xffffffff,%eax
    jne    jump_468f9
    mov    $0x15,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_55aec
    movl   $0xffffffff,0x1d6e(%esi)
  jump_468f9:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_46900:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %edx,%ecx
    mov    0x47(%eax),%ebx
    mov    $0x1,%edx
    sar    $0x18,%ebx
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_46944
    mov    0x92(%eax),%ecx
    sar    $0x18,%ecx
    test   %edx,%ecx
    je     jump_46944
    mov    0xdd(%eax),%ecx
    sar    $0x18,%ecx
    test   %edx,%ecx
    je     jump_46944
    mov    0x128(%eax),%eax
    sar    $0x18,%eax
    test   %edx,%eax
    je     jump_46944
    mov    $0xffffffff,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_46944:
    xor    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4694c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,(%esp)
    mov    %ebx,%edi
    movswl %bx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_4696a
    movzbw data_104bea,%di
  jump_4696a:
    xor    %edx,%edx
    mov    (%esp),%dx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    movswl %di,%ecx
    mov    0x47(%esi,%eax,1),%eax
    mov    $0x1,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    mov    $0xffffffff,%ebp
    test   %edx,%eax
    je     jump_4699c
    jmp    jump_469e5
  jump_4699c:
    movswl %di,%ecx
    xor    %eax,%eax
  jump_469a1:
    xor    %edx,%edx
    mov    (%esp),%dx
    imul   $0x4b,%edx,%edx
    add    %esi,%edx
    xor    %bh,%bh
    mov    0x40(%edx,%eax,1),%bl
    mov    %bl,%dl
    and    $0xff,%edx
    cmp    $0xff,%edx
    je     jump_469e5
    and    $0xffff,%ebx
    imul   $0x4b,%ebx,%ebx
    mov    $0x1,%edx
    mov    0x47(%esi,%ebx,1),%ebx
    shl    %cl,%edx
    sar    $0x18,%ebx
    test   %edx,%ebx
    jne    jump_469df
    xor    %ebp,%ebp
  jump_469df:
    inc    %eax
    cmp    $0x5,%eax
    jl     jump_469a1
  jump_469e5:
    mov    %ebp,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_469f0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    sub    $0x8,%esp
    mov    %edx,%esi
    mov    data_a3cf2,%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    %si,%dx
    cmp    %eax,%edx
    jl     jump_46a1a
    mov    $0x116,%ebx
    mov    $data_925f7,%edx
    xor    %eax,%eax
    call   func_26198
  jump_46a1a:
    xor    %edx,%edx
    mov    $data_bb1b3,%eax
    mov    %edx,0x4(%esp)
    jmp    jump_46a2b
  jump_46a27:
    add    $0x7b,%eax
    inc    %edx
  jump_46a2b:
    mov    data_ca1ed,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jge    jump_46a58
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    %si,%cx
    mov    0x57(%eax),%bl
    cmp    %ecx,%ebx
    jne    jump_46a27
    xor    %ecx,%ebx
    mov    0x4(%esp),%ecx
    mov    0x46(%eax),%bx
    add    %ebx,%ecx
    mov    %ecx,0x4(%esp)
    jmp    jump_46a27
  jump_46a58:
    mov    0x4(%esp),%ebx
    test   %ebx,%ebx
    je     jump_46a89
    lea    0x1(%ebx),%eax
    push   $0x3feb3333
    mov    %eax,0x4(%esp)
    push   $0x33333333
    fildl  0x8(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_78b20
    call   func_76e98
    fistpl 0x4(%esp)
  jump_46a89:
    mov    0x4(%esp),%eax
    add    $0x8,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_46a94:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xd0,%esp
    mov    %eax,%esi
    mov    %dx,0xcc(%esp)
    mov    %ebx,0xc8(%esp)
    xor    %eax,%eax
    mov    data_a3cf2,%edx
    mov    0xcc(%esp),%ax
    sar    $0x10,%edx
    cmp    %edx,%eax
    jl     jump_46ad7
    mov    $0x12d,%ebx
    mov    $data_92607,%edx
    xor    %eax,%eax
    call   func_26198
  jump_46ad7:
    mov    %esi,%ebx
    xor    %edx,%edx
    xor    %eax,%eax
    jmp    jump_46ae3
  jump_46adf:
    add    $0x4b,%ebx
    inc    %eax
  jump_46ae3:
    xor    %ecx,%ecx
    mov    (%esi),%cx
    cmp    %ecx,%eax
    jge    jump_46b2c
    xor    %ecx,%ecx
    mov    0xcc(%esp),%cx
    mov    0x1d4e(%esi,%ecx,2),%cx
    and    $0xffff,%ecx
    cmp    %ecx,%eax
    je     jump_46adf
    mov    0xcc(%esp),%ecx
    mov    0x47(%ebx),%edi
    mov    $0x1,%ebp
    sar    $0x18,%edi
    shl    %cl,%ebp
    test   %ebp,%edi
    jne    jump_46adf
    xor    %ecx,%ecx
    mov    %dx,%cx
    inc    %edx
    mov    %ax,(%esp,%ecx,2)
    jmp    jump_46adf
  jump_46b2c:
    test   %dx,%dx
    je     jump_46ba3
    xor    %ecx,%ecx
    call   func_782df
    mov    %dx,%cx
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    xor    %edi,%edi
    mov    (%esp,%edx,2),%di
    lea    0x0(,%edi,4),%eax
    add    %edi,%eax
    mov    %eax,%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    mov    0xcc(%esp),%cl
    add    %eax,%esi
    mov    $0x1,%al
    shl    %cl,%al
    mov    0x4a(%esi),%ah
    mov    0x4b(%esi),%dl
    or     %al,%ah
    or     %al,%dl
    mov    %ah,0x4a(%esi)
    xor    %eax,%eax
    mov    %dl,0x4b(%esi)
    xor    %edx,%edx
    mov    0xcc(%esp),%ax
    mov    data_104bea,%dl
    cmp    %edx,%eax
    jne    jump_46ba3
    mov    0xc8(%esp),%ecx
    mov    $0x16,%edx
    mov    $data_10ae70,%eax
    mov    %edi,%ebx
    call   func_55aec
  jump_46ba3:
    add    $0xd0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_46bb0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x1d74,%esp
    mov    %eax,%edi
    mov    %edx,%ecx
    cmp    $0xffffffff,%ebx
    jne    jump_46be6
    mov    %esp,%eax
    mov    $0x1d72,%ebx
    xor    %edx,%edx
    mov    %esp,%esi
    call   func_46480
    mov    %esp,%edx
    mov    %ecx,%eax
    mov    $0x75c,%ecx
    call   func_1bf94
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    jmp    jump_46bf4
  jump_46be6:
    mov    $0x1d72,%ebx
    mov    %eax,%edx
    mov    %ecx,%eax
    call   func_1c098
  jump_46bf4:
    add    $0x1d74,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_46c00:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_46c10:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    xor    %edx,%edx
    call   func_46480
    mov    %ebx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_46c20:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    mov    $0xffff,%eax
    test   %ebx,%ebx
    jle    jump_46c39
    sub    %edx,%ecx
    lea    -0x1(%ecx),%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    inc    %eax
  jump_46c39:
    cmp    $0x1,%eax
    jge    jump_46c43
    mov    $0x1,%eax
  jump_46c43:
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_46c48:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_46c67
    mov    $data_96004,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_46c67:
    add    $0x143,%eax
    xor    %edx,%edx
    movl   $data_96018,-0x9c(%eax)
    call   func_1a9e0
    sub    $0x98,%eax
    xor    %edx,%edx
    call   func_1b66c
    mov    $0x1,%edx
    sub    $0xab,%eax
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_46ca4
    call   func_76d64
  jump_46ca4:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_46cac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x108,%esp
    mov    %eax,%ebp
    add    $0x143,%eax
    xor    %edx,%edx
    movw   $0xffff,0x898(%eax)
    mov    %edx,0xec(%esp)
  jump_46cd1:
    movl   $0x0,(%eax)
    fildl  0xec(%esp)
    movl   $0x0,0x8(%eax)
    mov    0xec(%esp),%ebx
    fstps  0x4(%eax)
    inc    %ebx
    add    $0xc,%eax
    mov    %ebx,0xec(%esp)
    cmp    $0x64,%ebx
    jl     jump_46cd1
    push   $0x140
    push   $0x47c35000
    push   $0x3f800000
    lea    0xab(%ebp),%eax
    push   $0x41f00000
    call   func_1b808
    lea    0xdf(%ebp),%eax
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    xor    %edx,%edx
    movl   $0xc3160000,0x8(%eax)
    mov    $data_92618,%eax
    call   func_1bb10
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_46e09
    lea    0xc8(%esp),%edx
    push   %edx
    push   $data_92623
    push   %eax
    call   func_78071
    add    $0xc,%esp
    xor    %eax,%eax
    mov    0xc8(%esp),%edi
    mov    data_105258,%ax
    cmp    %edi,%eax
    jne    jump_46df5
    lea    0x143(%ebp),%edx
    xor    %ebx,%ebx
    jmp    jump_46de9
  jump_46d85:
    lea    0xd0(%esp),%eax
    push   %eax
    lea    0xd0(%esp),%eax
    push   %eax
    lea    0xd0(%esp),%eax
    push   %eax
    push   $data_92626
    push   %esi
    add    $0xc,%edx
    call   func_78071
    add    $0x14,%esp
    inc    %ebx
    mov    0xcc(%esp),%eax
    fildl  0xc8(%esp)
    mov    %eax,0xd4(%esp)
    mov    0xd0(%esp),%eax
    fstps  -0xc(%edx)
    fildl  0xd4(%esp)
    mov    %eax,0xd8(%esp)
    fstps  -0x8(%edx)
    fildl  0xd8(%esp)
    fstps  -0x4(%edx)
  jump_46de9:
    xor    %eax,%eax
    mov    data_105258,%ax
    cmp    %eax,%ebx
    jl     jump_46d85
  jump_46df5:
    mov    %esi,%eax
    call   func_7744e
  jump_46dfc:
    add    $0x108,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_46e09:
    cmpl   $0xffffffff,data_105254
    je     jump_46e21
    mov    $0x76,%ebx
    mov    $data_9262f,%edx
    call   func_26198
  jump_46e21:
    mov    $0x64,%ebx
    mov    $0xff,%edx
    lea    0x64(%esp),%eax
    call   func_76ec0
    xor    %esi,%esi
  jump_46e36:
    mov    $0xffffffff,%eax
    xor    %edi,%edi
    mov    %eax,0xf4(%esp)
    mov    %edi,0x104(%esp)
    jmp    jump_46ec6
  jump_46e50:
    xor    %eax,%eax
    mov    0x64(%esp,%edi,1),%al
    cmp    $0xff,%eax
    jne    jump_46eb4
    mov    0x104(%esp),%ecx
    xor    %eax,%eax
    xor    %ebx,%ebx
  jump_46e68:
    mov    data_105298(%ecx),%dl
    and    $0xff,%edx
    cmp    $0xff,%edx
    je     jump_46eb0
    mov    0x64(%esp,%edx,1),%dl
    and    $0xff,%edx
    cmp    $0xff,%edx
    jne    jump_46e9b
    xor    %eax,%eax
    mov    %eax,0xf4(%esp)
    mov    %edx,%eax
    jmp    jump_46eb0
  jump_46e9b:
    cmp    %eax,%edx
    jl     jump_46ea9
    lea    0x1(%edx),%eax
    cmp    %esi,%eax
    jl     jump_46ea9
    lea    0x1(%eax),%esi
  jump_46ea9:
    inc    %ebx
    inc    %ecx
    cmp    $0x5,%ebx
    jl     jump_46e68
  jump_46eb0:
    mov    %al,0x64(%esp,%edi,1)
  jump_46eb4:
    mov    0x104(%esp),%edx
    add    $0x4b,%edx
    inc    %edi
    mov    %edx,0x104(%esp)
  jump_46ec6:
    xor    %eax,%eax
    mov    data_105258,%ax
    cmp    %eax,%edi
    jl     jump_46e50
    cmpl   $0x0,0xf4(%esp)
    je     jump_46e36
    mov    $0x64,%ebx
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_76ec0
    xor    %eax,%eax
    jmp    jump_46f05
  jump_46ef6:
    xor    %edx,%edx
    mov    0x64(%esp,%eax,1),%dl
    mov    (%esp,%edx,1),%bl
    inc    %bl
    inc    %eax
    mov    %bl,(%esp,%edx,1)
  jump_46f05:
    xor    %edx,%edx
    mov    data_105258,%dx
    cmp    %edx,%eax
    jl     jump_46ef6
    xor    %ecx,%ecx
    mov    %ecx,0xf8(%esp)
    test   %esi,%esi
    jle    jump_46dfc
    mov    $0xf0,%edi
    add    $0x143,%ebp
    mov    %ecx,0xe8(%esp)
    mov    %ebp,0xe0(%esp)
    mov    %edi,0xe4(%esp)
  jump_46f43:
    mov    $0x4,%ebx
    mov    0xf8(%esp),%eax
    mov    %ebx,0xfc(%esp)
    mov    %eax,%edx
    mov    $0x2,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    fildl  0xe4(%esp)
    mov    0xf8(%esp),%ebp
    fstps  0x100(%esp)
    movzbl (%esp,%ebp,1),%ebp
    test   %edx,%edx
    je     jump_46fc1
    cmp    %ebx,%ebp
    jle    jump_46fc1
    dec    %ebp
    jmp    jump_46fd1
  jump_46f86:
    mov    0xe4(%esp),%edi
    mov    0xe8(%esp),%ebp
    mov    0xf8(%esp),%eax
    add    $0x1e,%edi
    add    $0x1e,%ebp
    inc    %eax
    mov    %edi,0xe4(%esp)
    mov    %ebp,0xe8(%esp)
    mov    %eax,0xf8(%esp)
    cmp    %eax,%esi
    jle    jump_46dfc
    jmp    jump_46f43
  jump_46fc1:
    cmp    $0x1,%ebp
    jle    jump_46fd1
    movl   $0x17,0xfc(%esp)
  jump_46fd1:
    mov    0xe8(%esp),%eax
    mov    0xe0(%esp),%ebx
    xor    %edi,%edi
    xor    %ecx,%ecx
    mov    %eax,0xf0(%esp)
    jmp    jump_46ff0
  jump_46fec:
    add    $0xc,%ebx
    inc    %ecx
  jump_46ff0:
    xor    %eax,%eax
    mov    data_105258,%ax
    cmp    %eax,%ecx
    jge    jump_46f86
    xor    %eax,%eax
    mov    0xf8(%esp),%edx
    mov    0x64(%esp,%ecx,1),%al
    cmp    %edx,%eax
    jne    jump_46fec
    mov    %edi,%eax
    and    $0x1,%eax
    imul   $0xf,%eax,%eax
    mov    0xf0(%esp),%edx
    add    %eax,%edx
    mov    %edx,0xdc(%esp)
    mov    %ebx,%eax
    fildl  0xdc(%esp)
    fstps  0x4(%ebx)
    fildl  0xfc(%esp)
    fstps  0x8(%ebx)
    push   0x100(%esp)
    movl   $0x0,(%ebx)
    call   func_532ac
    mov    $0x168,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebp
    mov    %eax,0xdc(%esp)
    inc    %edi
    fildl  0xdc(%esp)
    mov    $0x17,%eax
    fadds  0x100(%esp)
    mov    %eax,0xfc(%esp)
    fstps  0x100(%esp)
    jmp    jump_46fec


/*----------------------------------------------------------------*/
func_47088:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,(%esp)
    mov    $0xffff,%edx
    mov    data_d8648,%ebp
    mov    %edx,0x8(%esp)
    sub    0x8(%eax),%ebp
    mov    (%esp),%edx
    xor    %ecx,%ecx
    mov    data_d864c,%eax
    mov    0xc(%edx),%ebx
    mov    data_105258,%cx
    sub    %ebx,%eax
    dec    %ecx
    mov    %eax,0x4(%esp)
    test   %ecx,%ecx
    jge    jump_470d7
    jmp    jump_47143
  jump_470ca:
    dec    %ecx
    sub    $0x2,%edi
    test   %ecx,%ecx
    jge    jump_470e0
    jmp    jump_47143
  jump_470d7:
    lea    0x0(,%ecx,2),%edi
    add    %edx,%edi
  jump_470e0:
    mov    $0xffffffff,%ebx
    xor    %esi,%esi
    xor    %edx,%edx
    mov    0x913(%edi),%si
    mov    $data_105258,%eax
    mov    %si,%dx
    call   func_4694c
    test   %eax,%eax
    je     jump_470ca
    mov    (%esp),%edx
    lea    0x0(,%esi,2),%eax
    add    %edx,%eax
    mov    0x5f1(%eax),%edx
    sar    $0x10,%edx
    lea    -0x19(%edx),%ebx
    cmp    %ebx,%ebp
    jle    jump_470ca
    add    $0x19,%edx
    cmp    %edx,%ebp
    jge    jump_470ca
    mov    0x6b9(%eax),%eax
    sar    $0x10,%eax
    mov    0x4(%esp),%ebx
    lea    -0x19(%eax),%edx
    cmp    %ebx,%edx
    jge    jump_470ca
    add    $0x19,%eax
    cmp    %ebx,%eax
    jle    jump_470ca
    mov    %esi,0x8(%esp)
  jump_47143:
    mov    (%esp),%edx
    mov    0x8(%esp),%eax
    cmp    0x9db(%edx),%ax
    je     jump_4716b
    mov    $0xffffffff,%ebx
    mov    %ax,0x9db(%edx)
    mov    %ebx,data_106fd0
    mov    %ebx,data_106fd4
  jump_4716b:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_47224:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    mov    %ecx,0x8(%esp)
    cmp    $0x6,%dx
    jb     jump_4798f
    jbe    jump_473f4
    cmp    $0x32,%dx
    jb     jump_47976
    cmp    $0x35,%dx
    jbe    jump_47751
    cmp    $0x38,%dx
    jb     jump_47272
    jbe    jump_4794b
    cmp    $0x3a,%dx
    je     jump_47898
  jump_47272:
    mov    0x8(%esp),%ecx
    movswl %di,%edx
    mov    %ebp,%ebx
    mov    %esi,%eax
    call   func_2f424
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_47289:
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffed8,%dx
    call   func_1b084
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffedc,%dx
    call   func_1b084
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    data_ffebc(,%edx,2),%dx
    mov    $data_12fc20,%eax
    and    $0xffff,%edx
    call   func_1b084
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffede,%dx
    xor    %ecx,%ecx
    call   func_1b084
    mov    $0xffffffff,%eax
    mov    %ecx,data_106fd8
    movswl %di,%edx
    mov    0x8(%esp),%ecx
    mov    %eax,data_106fcc
    mov    %eax,data_106fd0
    mov    %esi,%eax
    movw   $0xffff,0x9db(%esi)
    call   func_2f424
    push   $0x0
    mov    $data_10ae70,%eax
    mov    $0x3a,%ebx
    push   $0x0
    mov    0x41(%esi),%edx
    xor    %ecx,%ecx
    call   func_56400
  jump_47328:
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_47331:
    mov    $0x1,%al
    mov    data_104bea,%cl
    xor    %edx,%edx
    shl    %cl,%al
    mov    %edx,0xc(%esp)
    mov    %al,%cl
    lea    0x0(,%edx,4),%eax
    mov    %eax,0xc(%esp)
    mov    0xc(%esp),%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    jmp    jump_4736f
  jump_47359:
    mov    %cl,%bl
    not    %bl
    mov    data_1052a3(%eax),%bh
    add    $0x4b,%eax
    and    %bl,%bh
    inc    %edx
    mov    %bh,data_105258(%eax)
  jump_4736f:
    xor    %ebx,%ebx
    mov    data_105258,%bx
    cmp    %ebx,%edx
    jl     jump_47359
    mov    0x8(%esp),%ecx
    movswl %di,%edx
    mov    %ebp,%ebx
    mov    %esi,%eax
    call   func_2f424
    mov    $0xffffffff,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%esi),%edx
    call   func_564c0
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_473a7:
    push   $0x0
    mov    $0x8,%ecx
    mov    $0x4,%ebx
    push   $0x0
    mov    0x41(%eax),%edx
    mov    $data_10ae70,%eax
    call   func_56728
    mov    %esi,%eax
    call   func_47088
    mov    0x39(%esi),%eax
    mov    0x35(%esi),%ecx
    mov    0x3d(%esi),%edi
    and    %ecx,%eax
    and    %edi,%eax
    cmp    $0xffffffff,%eax
    jne    jump_473e8
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0x10(%ebx)
  jump_473e8:
    mov    $0xffffffff,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_473f4:
    mov    $0x8,%ebx
    mov    0x41(%eax),%edx
    mov    $data_10ae70,%eax
    call   func_567bc
    mov    %esi,%eax
    call   func_47088
    mov    0x39(%esi),%eax
    mov    0x35(%esi),%ebp
    mov    0x3d(%esi),%edx
    and    %ebp,%eax
    and    %edx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_4742c
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_4742c:
    mov    $0xffffffff,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_47438:
    cmpl   $0x0,data_a0cfc
    je     jump_47741
    mov    $0x1,%al
    mov    data_104bea,%cl
    shl    %cl,%al
    xor    %edx,%edx
    mov    %al,%cl
    lea    0x0(,%edx,4),%eax
    mov    %eax,%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    jmp    jump_47475
  jump_47463:
    mov    data_1052a2(%eax),%ch
    add    $0x4b,%eax
    or     %cl,%ch
    inc    %edx
    mov    %ch,data_105257(%eax)
  jump_47475:
    xor    %ebx,%ebx
    mov    data_105258,%bx
    cmp    %ebx,%edx
    jl     jump_47463
    xor    %eax,%eax
    mov    data_104bea,%al
    mov    $0xffff,%edx
    xor    %ebx,%ebx
    mov    %dx,data_106fa6(,%eax,2)
    mov    %bx,data_106fb4(,%eax,2)
    mov    %esi,%eax
    call   func_47088
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_474b0:
    cmpl   $0x0,data_a0cfc
    je     jump_47741
    xor    %ecx,%eax
    mov    data_104bea,%al
    mov    data_106fa6(,%eax,2),%ax
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jge    jump_47741
    xor    %eax,%eax
    mov    data_104bea,%al
    xor    %edx,%edx
    mov    data_106fa6(,%eax,2),%dx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    mov    data_104bea,%cl
    sub    %edx,%eax
    mov    $0x1,%dl
    shl    %cl,%dl
    or     %dl,data_1052a2(%eax)
    xor    %eax,%eax
    mov    %cl,%al
    movw   $0xffff,data_106fa6(,%eax,2)
    xor    %eax,%eax
    mov    %cl,%al
    xor    %ebx,%ebx
    mov    %bx,data_106fb4(,%eax,2)
    mov    %esi,%eax
    call   func_47088
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_47539:
    cmpl   $0x0,data_a0cfc
    je     jump_47741
    mov    $0x1,%al
    mov    data_104bea,%cl
    shl    %cl,%al
    xor    %edx,%edx
    mov    %al,%cl
    lea    0x0(,%edx,4),%eax
    mov    %eax,%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    jmp    jump_4757a
  jump_47564:
    mov    %cl,%bl
    not    %bl
    mov    data_1052a2(%eax),%bh
    add    $0x4b,%eax
    and    %bl,%bh
    inc    %edx
    mov    %bh,data_105257(%eax)
  jump_4757a:
    xor    %ebx,%ebx
    mov    data_105258,%bx
    cmp    %ebx,%edx
    jl     jump_47564
    xor    %eax,%eax
    mov    data_104bea,%al
    mov    $0xffff,%ecx
    xor    %edi,%edi
    mov    %cx,data_106fa6(,%eax,2)
    mov    %di,data_106fb4(,%eax,2)
    mov    %esi,%eax
    call   func_47088
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_475b5:
    mov    data_106fc2,%ebp
    mov    $data_10e9ee,%edx
    not    %ebp
    mov    $0x14,%eax
    mov    %ebp,data_106fc2
    call   func_5a320
    mov    $0xffffffff,%eax
    mov    %eax,data_106fcc
    mov    %eax,data_106fd4
    mov    %esi,%eax
    call   func_47088
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_475f1:
    flds   data_12fc1c
    fcompl data_92664
    fnstsw %ax
    sahf
    jbe    jump_47741
    flds   data_12fc1c
    fld    %st(0)
    fmull  data_9266c
    fstp   %st(1)
    fstps  data_12fc1c
    mov    %esi,%eax
    call   func_47088
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4762c:
    flds   data_12fc1c
    fcomps data_92658
    fnstsw %ax
    sahf
    jae    jump_47741
    flds   data_12fc1c
    fmull  data_9265c
    fstps  data_12fc1c
    mov    %esi,%eax
    call   func_47088
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_47663:
    mov    %esi,%eax
    mov    0xa7(%esi),%ebx
    movl   $0xc2c80000,0xe3(%esi)
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    %esi,%eax
    call   func_47088
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4768a:
    mov    %esi,%eax
    mov    0xa7(%esi),%ebx
    movl   $0x49742400,0xe3(%esi)
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    %esi,%eax
    call   func_47088
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_476b1:
    mov    %ecx,%eax
    cmp    $0x2e,%ecx
    jb     jump_47709
    jbe    jump_474b0
    cmp    $0x49,%ecx
    jb     jump_476e5
    jbe    jump_47663
    cmp    $0x4f,%ecx
    jb     jump_47741
    jbe    jump_4768a
    cmp    $0x51,%ecx
    je     jump_4768a
    mov    %esi,%eax
    call   func_47088
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_476e5:
    cmp    $0x32,%ecx
    jb     jump_47741
    jbe    jump_475b5
    cmp    $0x47,%ecx
    je     jump_47663
    mov    %esi,%eax
    call   func_47088
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_47709:
    cmp    $0xd,%ecx
    jb     jump_47738
    jbe    jump_4762c
    cmp    $0x20,%ecx
    jb     jump_47741
    jbe    jump_47438
    cmp    $0x21,%ecx
    je     jump_47539
    mov    %esi,%eax
    call   func_47088
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_47738:
    cmp    $0xc,%ecx
    je     jump_475f1
  jump_47741:
    mov    %esi,%eax
  jump_47743:
    call   func_47088
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_47751:
    movswl %dx,%eax
    cmp    $0x32,%eax
    jne    jump_47799
    mov    data_106fd8,%bh
    test   $0x4,%bh
    je     jump_47783
    test   $0x8,%bh
    je     jump_47776
    mov    %bh,%dl
    and    $0xf7,%dl
    mov    %dl,data_106fd8
    jmp    jump_47799
  jump_47776:
    mov    %bh,%ah
    and    $0xfb,%ah
    mov    %ah,data_106fd8
    jmp    jump_47799
  jump_47783:
    mov    %bh,%cl
    or     $0x4,%cl
    mov    %cl,data_106fd8
    mov    %cl,%ch
    and    $0xf7,%ch
    mov    %ch,data_106fd8
  jump_47799:
    movswl %di,%eax
    cmp    $0x33,%eax
    jne    jump_477d6
    mov    data_106fd8,%dh
    test   $0x4,%dh
    je     jump_477cb
    test   $0x8,%dh
    je     jump_477be
    mov    %dh,%ch
    and    $0xfb,%ch
    mov    %ch,data_106fd8
    jmp    jump_477d6
  jump_477be:
    mov    %dh,%cl
    or     $0x8,%cl
    mov    %cl,data_106fd8
    jmp    jump_477d6
  jump_477cb:
    mov    %dh,%bl
    or     $0xc,%bl
    mov    %bl,data_106fd8
  jump_477d6:
    movswl %di,%eax
    cmp    $0x34,%eax
    jne    jump_4781b
    mov    data_106fd8,%al
    test   $0x1,%al
    je     jump_47805
    test   $0x2,%al
    je     jump_477f8
    mov    %al,%bh
    and    $0xfd,%bh
    mov    %bh,data_106fd8
    jmp    jump_4781b
  jump_477f8:
    mov    %al,%bl
    and    $0xfe,%bl
    mov    %bl,data_106fd8
    jmp    jump_4781b
  jump_47805:
    mov    %al,%ah
    or     $0x1,%ah
    mov    %ah,%dl
    mov    %ah,data_106fd8
    and    $0xfd,%dl
    mov    %dl,data_106fd8
  jump_4781b:
    movswl %di,%eax
    cmp    $0x35,%eax
    jne    jump_47858
    mov    data_106fd8,%cl
    test   $0x1,%cl
    je     jump_4784d
    test   $0x2,%cl
    je     jump_47840
    mov    %cl,%dl
    and    $0xfe,%dl
    mov    %dl,data_106fd8
    jmp    jump_47858
  jump_47840:
    mov    %cl,%ah
    or     $0x2,%ah
    mov    %ah,data_106fd8
    jmp    jump_47858
  jump_4784d:
    mov    %cl,%ch
    or     $0x3,%ch
    mov    %ch,data_106fd8
  jump_47858:
    cmp    $0x4,%ebp
    jne    jump_47328
    movswl %di,%edx
    mov    %ebp,%eax
    cmp    $0x34,%edx
    je     jump_47870
    cmp    $0x35,%edx
    jne    jump_47875
  jump_47870:
    mov    $0x1,%eax
  jump_47875:
    push   $0x0
    mov    $0x38,%ecx
    mov    $0x1,%ebx
    push   %eax
    mov    0x41(%esi),%edx
    mov    $data_10ae70,%eax
    call   func_56728
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_47898:
    mov    data_106fd8,%ah
    test   $0x4,%ah
    je     jump_478e0
    movl   $0x40400000,0x14(%esp)
    test   $0x8,%ah
    je     jump_478b8
    movl   $0xc0400000,0x14(%esp)
  jump_478b8:
    flds   0x14(%esp)
    fmuls  data_12fc1c
    lea    0x11f(%esi),%eax
    fstps  0x14(%esp)
    push   0x14(%esp)
    mov    $0xffffffff,%ecx
    call   func_53564
    mov    %ecx,data_106fd4
  jump_478e0:
    mov    data_106fd8,%dh
    test   $0x1,%dh
    je     jump_47928
    movl   $0xc0000000,0x10(%esp)
    test   $0x2,%dh
    je     jump_47900
    movl   $0x40000000,0x10(%esp)
  jump_47900:
    flds   0x10(%esp)
    fmuls  data_12fc1c
    mov    $0xffffffff,%eax
    fstps  0x10(%esp)
    flds   0xe3(%esi)
    fadds  0x10(%esp)
    mov    %eax,data_106fd4
    fstps  0xe3(%esi)
  jump_47928:
    cmpl   $0xffffffff,data_106fd4
    jne    jump_47328
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4794b:
    mov    data_106fd8,%ebx
    not    %ebp
    mov    0x41(%eax),%edx
    and    %ebp,%ebx
    mov    $data_10ae70,%eax
    mov    %ebx,data_106fd8
    mov    $0xffffffff,%ebx
    call   func_567bc
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_47976:
    cmp    $0x7,%dx
    jbe    jump_473a7
    cmp    $0x8,%dx
    je     jump_47743
    jmp    jump_47272
  jump_4798f:
    cmp    $0x2,%dx
    jb     jump_47a54
    jbe    jump_47331
    cmp    $0x3,%dx
    jbe    jump_476b1
    cmpl   $0x0,0x35(%eax)
    je     jump_47328
    xor    %edx,%edx
    call   func_47088
    mov    0x9db(%esi),%dx
    cmp    $0xffff,%edx
    jge    jump_47328
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    mov    data_104bea,%cl
    mov    data_10529f(%eax),%ebx
    mov    $0x1,%eax
    sar    $0x18,%ebx
    shl    %cl,%eax
    test   %eax,%ebx
    jne    jump_47328
    mov    $0xffffffff,%ebx
    mov    $data_105258,%eax
    call   func_4694c
    test   %eax,%eax
    je     jump_47328
    mov    $data_10914c,%eax
    xor    %edx,%edx
    call   func_4fb90
    xor    %eax,%eax
    mov    data_104bea,%al
    mov    $0xffffffff,%ecx
    lea    0x0(,%eax,2),%edx
    mov    %ecx,data_106fd4
    mov    0x9db(%esi),%ax
    mov    %ecx,data_106fd0
    mov    %ax,data_106fa6(%edx)
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_47a54:
    cmp    $0x1,%dx
    je     jump_47289
    jmp    jump_47272


/*----------------------------------------------------------------*/
func_47a64:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    (%eax),%cx
    mov    (%edx),%bx
    xor    %eax,%eax
    mov    %bx,%ax
    lea    0x0(,%eax,4),%edx
    mov    data_106fdc,%eax
    lea    (%eax,%edx,1),%esi
    xor    %edx,%edx
    mov    %cx,%dx
    flds   (%esi)
    fcomps (%eax,%edx,4)
    fnstsw %ax
    sahf
    seta   %dl
    xor    %esi,%esi
    mov    data_106fdc,%eax
    mov    %bx,%si
    xor    %ebx,%ebx
    and    $0xff,%edx
    mov    %cx,%bx
    flds   (%eax,%esi,4)
    fcomps (%eax,%ebx,4)
    fnstsw %ax
    sahf
    jae    jump_47ab6
    mov    $0xffffffff,%edx
  jump_47ab6:
    mov    %edx,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_47abc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x13c,%esp
    mov    %eax,%ebp
    lea    0xb4(%esp),%edi
    lea    0x4(%ebp),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    lea    0x4(%eax),%esi
    push   %esi
    call   func_5e9d0
    add    $0x8,%esp
    mov    $data_10ae70,%eax
    mov    %esi,%edx
    call   func_552cc
    mov    %ebp,%ecx
    mov    $data_105258,%esi
    mov    0x147(%ebp),%eax
    xor    %edx,%edx
    mov    %eax,0x108(%esp)
    mov    %eax,0xf0(%esp)
    mov    %edx,0xf8(%esp)
    mov    $0xffffffff,%edi
    jmp    jump_47b2f
  jump_47b1d:
    mov    0xf8(%esp),%eax
    inc    %eax
    add    $0xc,%ecx
    mov    %eax,0xf8(%esp)
  jump_47b2f:
    xor    %eax,%eax
    mov    0xf8(%esp),%ebx
    mov    data_105258,%ax
    cmp    %ebx,%eax
    jle    jump_47b99
    mov    %edi,%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0xf8(%esp),%dx
    call   func_4694c
    test   %eax,%eax
    je     jump_47b1d
    flds   0x147(%ecx)
    fcomps 0xf0(%esp)
    fnstsw %ax
    sahf
    jae    jump_47b78
    mov    0x147(%ecx),%eax
    mov    %eax,0xf0(%esp)
  jump_47b78:
    flds   0x147(%ecx)
    fcomps 0x108(%esp)
    fnstsw %ax
    sahf
    jbe    jump_47b1d
    mov    0x147(%ecx),%eax
    mov    %eax,0x108(%esp)
    jmp    jump_47b1d
  jump_47b99:
    flds   0xe3(%ebp)
    fcomps 0xf0(%esp)
    fnstsw %ax
    sahf
    jae    jump_47bb4
    mov    0xf0(%esp),%eax
    jmp    jump_47bcd
  jump_47bb4:
    flds   0xe3(%ebp)
    fcomps 0x108(%esp)
    fnstsw %ax
    sahf
    jbe    jump_47bd3
    mov    0x108(%esp),%eax
  jump_47bcd:
    mov    %eax,0xe3(%ebp)
  jump_47bd3:
    lea    0xab(%ebp),%eax
    call   func_1b864
    xor    %ecx,%ecx
    lea    0xeb(%ebp),%eax
    mov    %ecx,0xf8(%esp)
    lea    0x143(%ebp),%ecx
    lea    0x6bb(%ebp),%esi
    lea    0x5f3(%ebp),%edi
    mov    %eax,0x104(%esp)
    mov    %ebp,0x118(%esp)
    mov    %ebp,0x110(%esp)
    jmp    jump_47cbf
  jump_47c19:
    lea    0xdc(%esp),%ebx
    xor    %eax,%eax
    mov    0x104(%esp),%edx
    mov    %eax,0xdc(%esp)
    mov    %eax,0xe0(%esp)
    mov    %eax,0xe4(%esp)
    mov    %ecx,%eax
    call   func_53384
    push   %esi
    mov    0xe8(%esp),%eax
    push   %edi
    mov    0x118(%esp),%edx
    mov    0x100(%esp),%ebx
    push   $0xf0
    add    $0xc,%ecx
    add    $0x2,%esi
    push   $0xeb
    mov    %eax,0x783(%edx)
    lea    0xec(%esp),%eax
    push   0xd3(%ebp)
    mov    0x12c(%esp),%edx
    call   func_533d4
    mov    0xf8(%esp),%eax
    inc    %ebx
    mov    %ax,0x913(%edx)
    lea    0x2(%edx),%eax
    add    $0x2,%edi
    mov    0x110(%esp),%edx
    mov    %ebx,0xf8(%esp)
    add    $0x4,%edx
    mov    %eax,0x118(%esp)
    mov    %edx,0x110(%esp)
  jump_47cbf:
    xor    %eax,%eax
    mov    0xf8(%esp),%edx
    mov    data_105258,%ax
    cmp    %edx,%eax
    jg     jump_47c19
    mov    $func_47a64,%ecx
    mov    $0x2,%ebx
    xor    %edx,%edx
    lea    0x783(%ebp),%eax
    mov    data_105258,%dx
    mov    %eax,data_106fdc
    lea    0x913(%ebp),%eax
    call   func_76f56
    xor    %ebx,%ebx
    mov    %ebp,%eax
    mov    %ebx,0xf8(%esp)
    jmp    jump_47d2c
  jump_47d0c:
    mov    0xf8(%esp),%bl
    xor    %edx,%edx
    lea    0x1(%ecx),%edi
    mov    0x913(%eax),%dx
    add    $0x2,%eax
    mov    %edi,0xf8(%esp)
    mov    %bl,(%esp,%edx,1)
  jump_47d2c:
    xor    %edx,%edx
    mov    0xf8(%esp),%ecx
    mov    data_105258,%dx
    cmp    %ecx,%edx
    jg     jump_47d0c
    xor    %eax,%eax
    mov    data_104bea,%al
    mov    data_106fa6(,%eax,2),%ax
    xor    %esi,%esi
    mov    %eax,0x134(%esp)
    lea    0x4(%ebp),%eax
    mov    %esi,0xf8(%esp)
    mov    %eax,0x130(%esp)
    mov    %ebp,0x114(%esp)
    jmp    jump_48134
  jump_47d75:
    cmp    $0x3,%edx
    jle    jump_47d85
    movl   $0x3,0x11c(%esp)
  jump_47d85:
    mov    0x11c(%esp),%edi
    add    $0x3,%edi
    mov    %edi,%edx
    shl    $0x8,%edx
    mov    data_d8d8f,%eax
    add    $0x100,%edx
    add    %edx,%eax
    push   %eax
    mov    %edi,0x120(%esp)
    call   func_5d007
    add    $0x4,%esp
    xor    %eax,%eax
    mov    0x128(%esp),%edx
    mov    %eax,0x120(%esp)
    imul   $0x4b,%edx,%eax
    mov    data_104bea,%cl
    mov    data_10529f(%eax),%ebx
    mov    $0x1,%edx
    sar    $0x18,%ebx
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_47dee
    movl   $0x14,0x120(%esp)
    jmp    jump_47e54
  jump_47dee:
    xor    %edx,%edx
    mov    0x128(%esp),%ebx
    mov    0x134(%esp),%dx
    cmp    %ebx,%edx
    jne    jump_47e54
    xor    %ebx,%edx
    mov    %cl,%dl
    mov    data_106fb4(,%edx,2),%dx
    and    $0xffff,%edx
    imul   $0x12,%edx,%edx
    xor    %ebx,%ebx
    mov    data_105296(%eax),%bx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x2,%eax
    mov    %eax,0x120(%esp)
    cmp    $0xffffffef,%eax
    jge    jump_47e44
    movl   $0xffffffef,0x120(%esp)
    jmp    jump_47e54
  jump_47e44:
    cmp    $0x11,%eax
    jle    jump_47e54
    movl   $0x11,0x120(%esp)
  jump_47e54:
    imul   $0x4b,0x128(%esp),%esi
    mov    0x128(%esp),%eax
    add    %eax,%eax
    lea    (%eax,%ebp,1),%edx
    mov    0x128(%esp),%eax
    shl    $0x2,%eax
    mov    %edx,0x124(%esp)
    lea    (%eax,%ebp,1),%edx
    xor    %edi,%edi
    mov    %edx,0x12c(%esp)
  jump_47e85:
    xor    %ecx,%ecx
    mov    data_105298(%esi),%cl
    cmp    $0xff,%ecx
    je     jump_47f93
    mov    $0xffffffff,%ebx
    xor    %edx,%edx
    mov    $data_105258,%eax
    mov    %cx,%dx
    call   func_4694c
    test   %eax,%eax
    je     jump_47efc
    mov    0x12c(%esp),%edx
    flds   0x783(%edx)
    fadds  0x783(%ebp,%ecx,4)
    fmuls  data_9269b
    fadds  0xe7(%ebp)
    fmuls  data_92697
    call   func_76e98
    fistpl 0xfc(%esp)
    mov    0xfc(%esp),%eax
    cmp    $0x3,%eax
    jle    jump_47f08
    movl   $0x3,0xfc(%esp)
    jmp    jump_47f18
  jump_47efc:
    inc    %edi
    inc    %esi
    cmp    $0x5,%edi
    jl     jump_47e85
    jmp    jump_47f93
  jump_47f08:
    cmp    $0xfffffffd,%eax
    jge    jump_47f18
    movl   $0xfffffffd,0xfc(%esp)
  jump_47f18:
    mov    $0x6b,%eax
    sub    0xfc(%esp),%eax
    xor    %edx,%edx
    mov    0x9db(%ebp),%dx
    cmp    %edx,%ecx
    jne    jump_47f36
    mov    $0xf3,%eax
  jump_47f36:
    cwtl
    mov    0x6b9(%ebp,%ecx,2),%edx
    push   %eax
    sar    $0x10,%edx
    push   $0x0
    add    $0x1b,%edx
    mov    0x5f1(%ebp,%ecx,2),%eax
    push   %edx
    sar    $0x10,%eax
    push   %eax
    mov    0x134(%esp),%eax
    mov    0x6b9(%eax),%eax
    sar    $0x10,%eax
    sub    $0x1b,%eax
    push   %eax
    mov    0x138(%esp),%eax
    mov    0x5f1(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x148(%esp),%edx
    push   %edx
    call   func_5c001
    add    $0x1c,%esp
    inc    %edi
    inc    %esi
    cmp    $0x5,%edi
    jl     jump_47e85
  jump_47f93:
    mov    0x120(%esp),%ebx
    test   %ebx,%ebx
    je     jump_4800a
    mov    %ebx,%edx
    shl    $0x10,%edx
    mov    $0x14,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    push   $0x1
    push   %eax
    push   %eax
    mov    %eax,0x12c(%esp)
    mov    0x134(%esp),%eax
    push   $0x0
    mov    0x6b9(%ebp,%eax,2),%edx
    push   $data_d8da0
    sar    $0x10,%edx
    mov    0x5f1(%ebp,%eax,2),%eax
    push   %edx
    sar    $0x10,%eax
    push   %eax
    mov    0x144(%esp),%edi
    xor    %edx,%edx
    push   %edi
    mov    $data_12fc20,%eax
    mov    data_ffede,%dx
    call   func_1b084
    push   %eax
    mov    0x154(%esp),%eax
    push   %eax
    call   func_5d631
    add    $0x28,%esp
  jump_4800a:
    xor    %eax,%eax
    mov    0x128(%esp),%edx
    mov    0x134(%esp),%ax
    mov    $0x1,%esi
    cmp    %edx,%eax
    jne    jump_48040
    imul   $0x4b,%edx,%eax
    mov    data_104bea,%cl
    mov    data_10529f(%eax),%eax
    mov    %esi,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    jne    jump_48040
    xor    %esi,%esi
  jump_48040:
    imul   $0x4b,0x128(%esp),%eax
    mov    $0x1,%edx
    mov    data_1052a0(%eax),%eax
    mov    data_104bea,%cl
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_48067
    mov    $0x3,%esi
  jump_48067:
    xor    %eax,%eax
    mov    0x128(%esp),%edi
    mov    0x9db(%ebp),%ax
    cmp    %edi,%eax
    jne    jump_48080
    mov    $0x2,%esi
  jump_48080:
    mov    $0xffffffff,%ebx
    mov    $data_92674,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %eax,%edx
    mov    0x128(%esp),%eax
    add    %eax,%eax
    add    %ebp,%eax
    cmp    $0x2,%esi
    jne    jump_480de
    mov    0x6b9(%eax),%ebx
    sar    $0x10,%ebx
    mov    0x5f1(%eax),%eax
    push   %ebx
    sar    $0x10,%eax
    push   %eax
    push   %esi
    mov    $data_12fc20,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    mov    0x140(%esp),%edx
    push   %edx
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_48114
  jump_480de:
    mov    0x6b9(%eax),%ebx
    sar    $0x10,%ebx
    mov    0x5f1(%eax),%eax
    push   %ebx
    sar    $0x10,%eax
    push   %eax
    push   %esi
    mov    $data_12fc20,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    mov    0x140(%esp),%eax
    push   %eax
    call   func_5d026
    add    $0x14,%esp
  jump_48114:
    mov    0x114(%esp),%ebx
    mov    0xf8(%esp),%ecx
    add    $0x2,%ebx
    inc    %ecx
    mov    %ebx,0x114(%esp)
    mov    %ecx,0xf8(%esp)
  jump_48134:
    xor    %eax,%eax
    mov    0xf8(%esp),%edx
    mov    data_105258,%ax
    cmp    %edx,%eax
    jle    jump_481c5
    mov    0x114(%esp),%edx
    xor    %eax,%eax
    mov    0x913(%edx),%ax
    mov    %eax,0x128(%esp)
    xor    %edx,%edx
    mov    $0xffffffff,%ebx
    mov    0x128(%esp),%dx
    mov    $data_105258,%eax
    call   func_4694c
    test   %eax,%eax
    je     jump_48114
    mov    0x128(%esp),%eax
    flds   0x783(%ebp,%eax,4)
    fadds  0xe7(%ebp)
    fmuls  data_92697
    call   func_76e98
    fistpl 0x11c(%esp)
    mov    0x11c(%esp),%edx
    cmp    $0xfffffffd,%edx
    jge    jump_47d75
    movl   $0xfffffffd,0x11c(%esp)
    jmp    jump_47d85
  jump_481c5:
    mov    $data_10debe,%edi
    lea    0x4(%ebp),%esi
    mov    data_106fd0,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    cmp    $0xffffffff,%ebx
    jne    jump_489dc
    mov    $0x1e5,%ecx
    mov    $0x7,%esi
    mov    $0x278,%edi
    mov    $0x1aa,%eax
    push   $0x0
    mov    %eax,0xc8(%esp)
    lea    0xb8(%esp),%eax
    mov    %ecx,0xbc(%esp)
    push   %eax
    mov    %esi,0xc4(%esp)
    mov    %edi,0xc8(%esp)
    call   func_5e9d0
    add    $0x8,%esp
    lea    0xb4(%esp),%edx
    mov    $data_10ae70,%eax
    call   func_552cc
    xor    %eax,%eax
    mov    $0xffff,%edx
    mov    0x134(%esp),%ax
    mov    %edx,0x138(%esp)
    cmp    $0xffff,%eax
    jge    jump_48258
    mov    %eax,0x138(%esp)
  jump_48258:
    xor    %eax,%eax
    mov    0x9db(%ebp),%ax
    cmp    $0xffff,%eax
    jge    jump_4826f
    mov    %eax,0x138(%esp)
  jump_4826f:
    xor    %eax,%eax
    mov    0x138(%esp),%ax
    cmp    $0xffff,%eax
    jge    jump_489d4
    lea    0xb4(%esp),%esi
    mov    $data_10debe,%edi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0xffffffff,%edx
    lea    0xc8(%esp),%edi
    lea    0xb4(%esp),%esi
    mov    0x134(%esp),%ebx
    mov    %edx,0xf4(%esp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    cmp    %bx,%ax
    jne    jump_4832e
    mov    0x138(%esp),%eax
    cmp    0x9db(%ebp),%ax
    je     jump_482fd
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_a2f74(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0xf4(%esp)
  jump_482fd:
    push   $0x82
    mov    0xf6(%esp),%eax
    push   $0xffffffff
    sar    $0x10,%eax
    push   %eax
    mov    $0xa,%ebx
    push   $0x2
    mov    $0x7a,%eax
    xor    %edx,%edx
    call   func_1cea8
    mov    %eax,%ecx
    mov    $data_10deb6,%eax
    call   func_2b8a8
  jump_4832e:
    mov    $0x46,%ebx
    mov    $0x78,%ecx
    lea    0xec(%esp),%eax
    xor    %esi,%esi
    xor    %edx,%edx
    mov    0x138(%esp),%si
    mov    data_ffede,%dx
    mov    %ebx,0x100(%esp)
    mov    %ecx,0xd8(%esp)
    push   %eax
    mov    $data_12fc20,%eax
    lea    0xec(%esp),%ecx
    call   func_1b084
    mov    %esi,%ebx
    mov    %eax,%edx
    lea    0xcc(%esp),%eax
    call   func_2bc40
    mov    0xec(%esp),%edi
    push   %edi
    mov    0xec(%esp),%eax
    push   %eax
    xor    %edx,%edx
    push   %esi
    mov    data_ffede,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    lea    0xd8(%esp),%eax
    push   %eax
    call   func_5cb3c
    mov    $0xffffffff,%ebx
    add    $0x14,%esp
    mov    $data_92685,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    $0x1,%ebx
    mov    0x134(%esp),%edx
    mov    %eax,%edi
    cmp    %dx,%si
    jne    jump_48407
    lea    0x0(,%esi,4),%eax
    add    %esi,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    data_104bea,%cl
    mov    data_10529f(%eax),%edx
    mov    %ebx,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    jne    jump_48407
    xor    %ebx,%ebx
  jump_48407:
    xor    %edx,%edx
    mov    0x138(%esp),%dx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    data_104bea,%cl
    mov    data_1052a0(%eax),%eax
    mov    $0x1,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_48440
    mov    $0x3,%ebx
  jump_48440:
    mov    0x138(%esp),%eax
    cmp    0x9db(%ebp),%ax
    jne    jump_48455
    mov    $0x2,%ebx
  jump_48455:
    mov    0xec(%esp),%edx
    push   %edx
    mov    0xec(%esp),%ecx
    push   %ecx
    xor    %edx,%edx
    push   %ebx
    mov    $data_12fc20,%eax
    mov    %di,%dx
    call   func_1b084
    push   %eax
    lea    0xd8(%esp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    mov    $data_10525a,%ecx
    xor    %edx,%edx
    push   $0x82
    mov    0xf6(%esp),%eax
    mov    0x13c(%esp),%dx
    mov    0x104(%esp),%edi
    push   $0xffffffff
    sar    $0x10,%eax
    add    $0x19,%edi
    push   %eax
    lea    0x0(,%edx,4),%eax
    mov    %edi,%ebx
    add    %edx,%eax
    push   $0x2
    mov    %eax,%esi
    mov    %eax,%edx
    shl    $0x4,%esi
    xor    %eax,%edx
    sub    %eax,%esi
    mov    $data_10deb6,%eax
    add    %esi,%ecx
    mov    %edi,0x110(%esp)
    call   func_2b8a8
    mov    data_104bea,%cl
    mov    data_10529f(%esi),%edx
    lea    (%edi,%eax,1),%ebp
    mov    $0x1,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    mov    %ebp,0x100(%esp)
    test   %eax,%edx
    jne    jump_485ca
    xor    %edx,%edx
    mov    $data_105258,%eax
    mov    %cl,%dl
    call   func_469f0
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    data_106fb4(,%edx,2),%dx
    xor    %ecx,%ecx
    and    $0xffff,%edx
    mov    data_105296(%esi),%cx
    mov    %eax,%ebx
    mov    %ecx,%eax
    call   func_46c20
    mov    %eax,%edx
    cmp    $0xffff,%eax
    jne    jump_4856f
    mov    $0x7b,%eax
    lea    0x64(%esp),%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_48554:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_4856c
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_48554
  jump_4856c:
    pop    %edi
    jmp    jump_4859f
  jump_4856f:
    cmp    $0x1,%eax
    jne    jump_4857b
    mov    $0x1c,%eax
    jmp    jump_48580
  jump_4857b:
    mov    $0x1d,%eax
  jump_48580:
    call   func_1cea8
    push   %eax
    push   %edx
    mov    $0x7c,%eax
    call   func_1cea8
    push   %eax
    lea    0x70(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
  jump_4859f:
    push   $0x82
    mov    0xf6(%esp),%eax
    push   $0xffffffff
    sar    $0x10,%eax
    push   %eax
    lea    0x70(%esp),%ecx
    mov    0x10c(%esp),%ebx
    push   $0x2
    xor    %edx,%edx
    mov    $data_10deb6,%eax
    call   func_2b8a8
  jump_485ca:
    xor    %eax,%eax
    mov    $0x8e,%esi
    mov    %eax,0xf8(%esp)
    jmp    jump_485f2
  jump_485da:
    mov    0xf8(%esp),%ecx
    inc    %ecx
    mov    %ecx,0xf8(%esp)
    cmp    $0x27,%ecx
    jge    jump_48769
  jump_485f2:
    imul   $0x28,0xf8(%esp),%eax
    xor    %edx,%edx
    mov    data_103fa1(%eax),%dl
    xor    %eax,%eax
    mov    0x138(%esp),%ax
    cmp    %eax,%edx
    jne    jump_485da
    cmp    $0x8e,%esi
    jne    jump_4864b
    push   $0x82
    mov    0xf6(%esp),%eax
    push   $0xffffffff
    sar    $0x10,%eax
    push   %eax
    mov    %esi,%ebx
    push   $0x2
    mov    $0x7d,%eax
    xor    %edx,%edx
    call   func_1cea8
    mov    %eax,%ecx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    add    $0xa,%eax
    add    %eax,%esi
  jump_4864b:
    imul   $0x28,0xf8(%esp),%eax
    add    $data_103f9c,%eax
    mov    0xf8(%esp),%dl
    add    $0xa,%eax
    cmp    $0x17,%dl
    jne    jump_48671
    mov    $0x7e,%eax
    call   func_1cea8
  jump_48671:
    push   $0x82
    mov    0xf6(%esp),%edx
    push   $0xffffffff
    sar    $0x10,%edx
    mov    %eax,%ecx
    push   %edx
    mov    %esi,%ebx
    mov    $data_10deb6,%eax
    push   $0x2
    xor    %edx,%edx
    mov    $0x10000,%ebp
    call   func_2b8a8
    add    %eax,%esi
    mov    %ebp,0x10c(%esp)
    lea    0x1(%esi),%eax
    mov    0xf8(%esp),%bl
    mov    %eax,0xd0(%esp)
    lea    0x48(%esi),%eax
    mov    data_ffedc,%dx
    mov    %eax,0xd8(%esp)
    mov    0xf8(%esp),%eax
    cmp    $0x17,%bl
    jne    jump_486ee
    xor    %eax,%eax
    mov    $0x8000,%ebx
    mov    data_104bea,%al
    mov    %ebx,0x10c(%esp)
    mov    data_ffebc(,%eax,2),%dx
    xor    %eax,%eax
  jump_486ee:
    lea    0xec(%esp),%ebx
    movzwl %ax,%ebp
    xor    %edi,%edi
    mov    $data_12fc20,%eax
    mov    %dx,%di
    push   %ebx
    mov    %edi,%edx
    lea    0xec(%esp),%ecx
    call   func_1b084
    mov    %ebp,%ebx
    mov    %eax,%edx
    lea    0xcc(%esp),%eax
    call   func_2bc40
    push   $0x0
    mov    0x110(%esp),%ecx
    push   %ecx
    push   %ecx
    push   $0x0
    push   $data_d8da0
    mov    0x100(%esp),%edx
    push   %edx
    mov    0x100(%esp),%ebx
    push   %ebx
    push   %ebp
    mov    $data_12fc20,%eax
    mov    %edi,%edx
    call   func_1b084
    push   %eax
    lea    0xec(%esp),%eax
    push   %eax
    add    $0x48,%esi
    call   func_5d631
    add    $0x28,%esp
    jmp    jump_485da
  jump_48769:
    xor    %ebp,%ebp
    mov    $data_107020,%edi
    mov    %ebp,0xf8(%esp)
    jmp    jump_48794
  jump_48779:
    mov    0xf8(%esp),%ebp
    inc    %ebp
    add    $0x6a,%edi
    mov    %ebp,0xf8(%esp)
    cmp    $0x4c,%ebp
    jge    jump_48894
  jump_48794:
    imul   $0x6a,0xf8(%esp),%edx
    mov    data_107055(%edx),%dl
    xor    %eax,%eax
    and    $0xff,%edx
    mov    0x138(%esp),%ax
    cmp    %eax,%edx
    jne    jump_48779
    cmp    $0x8e,%esi
    jne    jump_487f1
    push   $0x82
    mov    0xf6(%esp),%eax
    push   $0xffffffff
    sar    $0x10,%eax
    push   %eax
    mov    %esi,%ebx
    push   $0x2
    mov    $0x7d,%eax
    xor    %edx,%edx
    call   func_1cea8
    mov    %eax,%ecx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    add    $0xa,%eax
    add    %eax,%esi
  jump_487f1:
    push   $0x82
    mov    0xf6(%esp),%eax
    push   $0xffffffff
    sar    $0x10,%eax
    push   %eax
    mov    %edi,%ecx
    mov    %esi,%ebx
    push   $0x2
    xor    %edx,%edx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    lea    0xe8(%esp),%ecx
    add    %eax,%esi
    xor    %edx,%edx
    lea    0x1(%esi),%eax
    mov    data_ffed8,%dx
    mov    %eax,0xd0(%esp)
    lea    0x48(%esi),%ebp
    mov    $data_12fc20,%eax
    mov    %ebp,0xd8(%esp)
    call   func_1b084
    mov    %eax,%esi
    lea    0xec(%esp),%eax
    mov    0xf8(%esp),%ebx
    push   %eax
    mov    %esi,%edx
    lea    0xcc(%esp),%eax
    call   func_2bc40
    mov    0xec(%esp),%edx
    push   %edx
    mov    0xec(%esp),%ebx
    push   %ebx
    mov    0x100(%esp),%ecx
    push   %ecx
    push   %esi
    lea    0xd8(%esp),%eax
    push   %eax
    call   func_5cb3c
    mov    %ebp,%esi
    add    $0x14,%esp
    jmp    jump_48779
  jump_48894:
    xor    %eax,%eax
    mov    0x138(%esp),%ax
    cmp    $0x13,%eax
    je     jump_488ac
    cmp    $0x1f,%eax
    jne    jump_489d4
  jump_488ac:
    cmp    $0x8e,%esi
    jne    jump_488e7
    push   $0x82
    mov    0xf6(%esp),%eax
    push   $0xffffffff
    sar    $0x10,%eax
    push   %eax
    mov    %esi,%ebx
    push   $0x2
    mov    $0x7d,%eax
    xor    %edx,%edx
    call   func_1cea8
    mov    %eax,%ecx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    add    $0xa,%eax
    add    %eax,%esi
  jump_488e7:
    mov    $0x7f,%eax
    xor    %edx,%edx
    mov    $0x2,%edi
    mov    0x138(%esp),%dx
    call   func_1cea8
    cmp    $0x1f,%edx
    jne    jump_48914
    mov    $0x80,%eax
    mov    $0x3,%edi
    call   func_1cea8
  jump_48914:
    push   $0x82
    mov    0xf6(%esp),%edx
    push   $0xffffffff
    sar    $0x10,%edx
    push   %edx
    mov    %eax,%ecx
    mov    %esi,%ebx
    push   $0x2
    mov    $data_10deb6,%eax
    xor    %edx,%edx
    call   func_2b8a8
    add    %eax,%esi
    lea    0x1(%esi),%eax
    mov    %eax,0xd0(%esp)
    xor    %eax,%eax
    mov    data_104bea,%al
    add    $0x48,%esi
    mov    data_ffebc(,%eax,2),%dx
    lea    0xec(%esp),%eax
    mov    %esi,0xd8(%esp)
    push   %eax
    mov    $data_12fc20,%eax
    xor    %esi,%esi
    lea    0xec(%esp),%ecx
    mov    %dx,%si
    and    $0xffff,%edi
    mov    %esi,%edx
    mov    %edi,%ebx
    call   func_1b084
    mov    %eax,%edx
    lea    0xcc(%esp),%eax
    call   func_2bc40
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_d8da0
    mov    0x100(%esp),%edx
    push   %edx
    mov    0x100(%esp),%ebx
    push   %ebx
    push   %edi
    mov    $data_12fc20,%eax
    mov    %esi,%edx
    call   func_1b084
    push   %eax
    lea    0xec(%esp),%eax
    push   %eax
    call   func_5d631
    add    $0x28,%esp
  jump_489d4:
    xor    %ecx,%ecx
    mov    %ecx,data_106fd0
  jump_489dc:
    mov    data_106fcc,%esi
    cmp    $0xffffffff,%esi
    jne    jump_48afe
    mov    $0x7,%edi
    mov    $0x1dc,%eax
    mov    $0x25,%edx
    mov    $0x3,%ebx
    xor    %ecx,%ecx
    mov    %edi,0xb8(%esp)
    mov    %eax,0xc0(%esp)
    mov    %edx,0xc4(%esp)
    lea    0xb4(%esp),%edx
    mov    $data_10ae70,%eax
    mov    %edi,0xbc(%esp)
    call   func_552cc
    lea    0xb4(%esp),%eax
    mov    data_104bea,%cl
    mov    %ebx,%edx
    call   func_53e38
    mov    data_106fc2,%ebx
    mov    $data_92696,%eax
    cmp    %esi,%ebx
    jne    jump_48a5b
    mov    $0x81,%eax
    call   func_1cea8
  jump_48a5b:
    xor    %edx,%edx
    mov    data_104bea,%dl
    push   %eax
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    mov    $0x82,%eax
    call   func_1cea8
    push   %eax
    lea    0x70(%esp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_76d09
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0x10,%esp
    mov    data_a2f74(,%eax,2),%al
    lea    0xb4(%esp),%esi
    xor    %ah,%ah
    push   $0x0
    shl    $0x2,%eax
    lea    0x68(%esp),%ecx
    add    $0x13,%eax
    push   $0xff
    cwtl
    mov    $data_10debe,%edi
    push   %eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    push   $0x3
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    xor    %ecx,%ecx
    mov    %ecx,data_106fcc
  jump_48afe:
    xor    %esi,%esi
    mov    %esi,data_106fd4
    add    $0x13c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_48b14:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    mov    %edx,%eax
    lea    0xab(%ecx),%edx
    cmp    $0xffffffff,%ebx
    jne    jump_48b30
    mov    $0x98,%ebx
    call   func_1bf94
    pop    %ecx
    ret
  jump_48b30:
    mov    $0x98,%ebx
    call   func_1c098
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_48b40:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    call   func_2c830
    mov    $data_959d8,%ebx
    add    $0xab,%eax
    mov    $0x64,%edx
    call   func_1b4f0
    add    $0x98,%eax
    call   func_77394
    lea    -0x143(%eax),%edx
    mov    %edx,%eax
    movl   $data_96018,0xa7(%edx)
    call   func_46cac
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_48b90:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    lea    0x6c(%eax),%ebx
    movl   $0x0,(%ebx)
    add    $0xc,%ebx
    movl   $0x0,-0x8(%ebx)
    movl   $0x0,-0x4(%ebx)
    movl   $0x0,(%ebx)
    add    $0x26,%ebx
    movl   $0x0,-0x22(%ebx)
    movl   $0x0,-0x1e(%ebx)
    movl   $0x0,(%ebx)
    sub    $0x9e,%ebx
    xor    %edx,%edx
    movl   $0x0,0xa2(%ebx)
    mov    %ebx,%eax
    movl   $0x0,0xa6(%ebx)
    call   func_48c5c
    mov    %ebx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_48c58:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_48c5c:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    call   func_48eac
    movsbl %dl,%edx
    mov    %ebx,%eax
    call   func_49148
    pop    %ebx
    ret

vtable_48c70:
    .long   func_48cd0
    .long   func_48cd8
    .long   func_48ce0
    .long   func_48ce8
    .long   func_48cf0


/*----------------------------------------------------------------*/
func_48c84:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xec,%esp
    mov    $data_926a0,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_48e8f
    xor    %ecx,%ecx
    mov    $0xc8,%edi
  jump_48cad:
    mov    %esp,%eax
    mov    %esi,%ebx
    mov    %edi,%edx
    call   func_7834e
    cmpb   $0x23,(%esp)
    jne    jump_48cc3
    mov    $0xffffffff,%ecx
  jump_48cc3:
    test   %ecx,%ecx
    je     jump_48cad
    mov    $data_107020,%edx
    xor    %ebp,%ebp
    jmp    jump_48d03


/*----------------------------------------------------------------*/
func_48cd0:
/*----------------------------------------------------------------*/
    mov    0x3e(%edx),%eax
    mov    %eax,0x52(%edx)
    jmp    jump_48cf6


/*----------------------------------------------------------------*/
func_48cd8:
/*----------------------------------------------------------------*/
    mov    0x3e(%edx),%eax
    mov    %eax,0x56(%edx)
    jmp    jump_48cf6


/*----------------------------------------------------------------*/
func_48ce0:
/*----------------------------------------------------------------*/
    mov    0x3e(%edx),%eax
    mov    %eax,0x5e(%edx)
    jmp    jump_48cf6


/*----------------------------------------------------------------*/
func_48ce8:
/*----------------------------------------------------------------*/
    mov    0x3e(%edx),%eax
    mov    %eax,0x62(%edx)
    jmp    jump_48cf6


/*----------------------------------------------------------------*/
func_48cf0:
/*----------------------------------------------------------------*/
    mov    0x36(%edx),%eax
    mov    %eax,0x66(%edx)
  jump_48cf6:
    inc    %ebp
    add    $0x6a,%edx
    cmp    $0x4c,%ebp
    jge    jump_48e7b
  jump_48d03:
    push   %edx
    push   $data_926ab
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    %edx,%edi
    xor    %ebx,%ebx
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    %ecx,%edi
    test   %ecx,%ecx
    jle    jump_48d36
    mov    %edx,%eax
  jump_48d28:
    cmpb   $0x5e,(%eax)
    jne    jump_48d30
    movb   $0x20,(%eax)
  jump_48d30:
    inc    %ebx
    inc    %eax
    cmp    %edi,%ebx
    jl     jump_48d28
  jump_48d36:
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    push   $data_926ae
    push   %esi
    call   func_78071
    add    $0x2c,%esp
    mov    0xc8(%esp),%al
    mov    %al,0x32(%edx)
    mov    0xcc(%esp),%eax
    mov    %eax,0x36(%edx)
    mov    0xd0(%esp),%eax
    mov    %eax,0x3a(%edx)
    mov    0xd4(%esp),%eax
    mov    %eax,0x3e(%edx)
    mov    0xd8(%esp),%eax
    mov    %eax,0x42(%edx)
    mov    0xdc(%esp),%eax
    mov    %eax,0x46(%edx)
    mov    0xe0(%esp),%eax
    mov    %eax,0x4a(%edx)
    mov    0xe4(%esp),%eax
    mov    %eax,0x4e(%edx)
    mov    0xe8(%esp),%al
    mov    %al,0x35(%edx)
    lea    0xe8(%esp),%eax
    push   %eax
    push   $data_926c9
    push   %esi
    call   func_78071
    add    $0xc,%esp
    movw   $0x0,0x33(%edx)
    cmpl   $0xff,0xe8(%esp)
    je     jump_48e4a
  jump_48e0f:
    mov    0xe8(%esp),%cl
    mov    $0x1,%eax
    mov    0x33(%edx),%bx
    shl    %cl,%eax
    or     %eax,%ebx
    lea    0xe8(%esp),%eax
    push   %eax
    push   $data_926cc
    push   %esi
    mov    %bx,0x33(%edx)
    call   func_78071
    add    $0xc,%esp
    cmpl   $0xff,0xe8(%esp)
    jne    jump_48e0f
  jump_48e4a:
    movl   $0x0,0x66(%edx)
    mov    0x66(%edx),%eax
    mov    %eax,0x62(%edx)
    mov    %eax,0x5e(%edx)
    mov    %eax,0x5a(%edx)
    mov    %eax,0x56(%edx)
    mov    %eax,0x52(%edx)
    mov    0x32(%edx),%al
    cmp    $0x4,%al
    ja     jump_48cf6
    and    $0xff,%eax
    jmp    *%cs:vtable_48c70(,%eax,4)
  jump_48e7b:
    mov    %esi,%eax
    call   func_7744e
    add    $0xec,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_48e8f:
    mov    $0xbe,%ebx
    mov    $data_926cf,%edx
    call   func_261a8
    add    $0xec,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_48eac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x24,%esp
    mov    %eax,%ebp
    movl   $0x0,0x15e(%eax)
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,0x10(%eax)
    movl   $0x0,0x20(%eax)
    movl   $0x0,0x24(%eax)
    movl   $0x0,0x18(%eax)
    movl   $0x0,0x1c(%eax)
    movl   $0x0,0x30(%eax)
    movl   $0x0,0x28(%eax)
    movl   $0x0,0x2c(%eax)
    movb   $0x0,0x34(%eax)
    movw   $0xffff,0x56(%eax)
    movb   $0x0,0x58(%eax)
    movl   $0x0,0x90(%eax)
    movl   $0x1,0x8c(%eax)
    movb   $0x0,0x5d(%eax)
    movl   $0x0,0x5e(%eax)
    mov    0x90(%eax),%edx
    mov    %edx,0x88(%eax)
    mov    0x8c(%eax),%edx
    mov    %eax,%ebx
    mov    %edx,0x98(%eax)
    lea    0xaf(%eax),%edx
    xor    %ecx,%ecx
  jump_48f5c:
    add    $0x7,%ebx
    movb   $0xff,0xa4(%ebx)
    mov    %cx,0xa5(%ebx)
    mov    %ecx,0xa7(%ebx)
    cmp    %edx,%ebx
    jne    jump_48f5c
    cmpl   $0x0,data_10701c
    jne    jump_4913e
    mov    $data_108f98,%ebx
    mov    $0x83,%ecx
    lea    0x50(%ebx),%edx
  jump_48f91:
    mov    %ecx,%eax
    call   func_1cea8
    mov    %ebx,%edi
    mov    %eax,%esi
    push   %edi
  jump_48f9d:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_48fb5
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_48f9d
  jump_48fb5:
    pop    %edi
    add    $0x14,%ebx
    inc    %ecx
    cmp    %edx,%ebx
    jne    jump_48f91
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_48c84
    mov    %dx,data_107018
    xor    %ebp,%ebp
    xor    %eax,%eax
    jmp    jump_48fda
  jump_48fd4:
    inc    %ebp
    cmp    $0xe,%ebp
    jge    jump_49008
  jump_48fda:
    mov    $0x1,%dl
    movzbl data_969b8(%ebp),%esi
    mov    %eax,%ebx
    test   %esi,%esi
    jle    jump_48fd4
    movzbl data_969c8(%ebp),%edi
  jump_48ff0:
    xor    %ecx,%ecx
    mov    %dl,%cl
    test   %ecx,%edi
    je     jump_48fff
    incw   data_107018
  jump_48fff:
    inc    %ebx
    add    %dl,%dl
    cmp    %esi,%ebx
    jge    jump_48fd4
    jmp    jump_48ff0
  jump_49008:
    xor    %ebx,%ebx
    mov    %ebx,0x10(%esp)
    mov    %ebx,0xc(%esp)
  jump_49012:
    mov    0xc(%esp),%ecx
    mov    data_9699e(%ecx),%ecx
    sar    $0x10,%ecx
    lea    -0x1(%ecx),%edx
    filds  data_107018
    mov    %edx,0x8(%esp)
    fstps  0x1c(%esp)
    fildl  0x8(%esp)
    fdivrs 0x1c(%esp)
    xor    %esi,%esi
    mov    %esi,0x4(%esp)
    fstps  0x1c(%esp)
    mov    0x1c(%esp),%edx
    mov    %esi,(%esp)
    mov    %edx,0x20(%esp)
  jump_4904d:
    test   %ecx,%ecx
    jle    jump_49066
    mov    0x4(%esp),%ebp
    mov    $0x1,%dl
    movzbl data_969b8(%ebp),%ebp
    xor    %esi,%esi
    test   %ebp,%ebp
    jle    jump_49085
    jmp    jump_4909e
  jump_49066:
    mov    0xc(%esp),%ebx
    mov    0x10(%esp),%ecx
    add    $0x2,%ebx
    inc    %ecx
    mov    %ebx,0xc(%esp)
    mov    %ecx,0x10(%esp)
    cmp    $0x4,%ecx
    jge    jump_49134
    jmp    jump_49012
  jump_49085:
    mov    (%esp),%ebp
    mov    0x4(%esp),%eax
    add    $0x4,%ebp
    inc    %eax
    mov    %ebp,(%esp)
    mov    %eax,0x4(%esp)
    cmp    $0xe,%eax
    jl     jump_4904d
    jmp    jump_49066
  jump_4909e:
    mov    (%esp),%ebx
    mov    0x4(%esp),%edi
    mov    %ebx,0x18(%esp)
    xor    %ebx,%ebx
    mov    data_969c8(%edi),%bl
    mov    %ebx,0x14(%esp)
  jump_490b5:
    xor    %ebx,%ebx
    mov    0x14(%esp),%eax
    mov    %dl,%bl
    test   %eax,%ebx
    je     jump_49127
    fld1
    mov    0x18(%esp),%ebx
    mov    0x10(%esp),%edi
    fadds  0x20(%esp)
    add    %edi,%ebx
    fsts   0x20(%esp)
    lea    -0x1(%ecx),%edi
    fcomps 0x1c(%esp)
    fnstsw %ax
    sahf
    jb     jump_490ff
    flds   0x20(%esp)
    mov    %edi,%ecx
    mov    data_106fe0(%ebx),%dh
    fsubs  0x1c(%esp)
    or     %dl,%dh
    fstps  0x20(%esp)
    mov    %dh,data_106fe0(%ebx)
    jmp    jump_49127
  jump_490ff:
    cmp    $0x1,%ecx
    jne    jump_49127
    flds   0x1c(%esp)
    fadds  data_926db
    fcomps 0x20(%esp)
    fnstsw %ax
    sahf
    jae    jump_49127
    mov    data_106fe0(%ebx),%ah
    or     %dl,%ah
    mov    %edi,%ecx
    mov    %ah,data_106fe0(%ebx)
  jump_49127:
    inc    %esi
    add    %dl,%dl
    cmp    %ebp,%esi
    jge    jump_49085
    jmp    jump_490b5
  jump_49134:
    movl   $0xffffffff,data_10701c
  jump_4913e:
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_49148:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %dl,0xaa(%eax)
    cmp    $0x4,%dl
    jl     jump_4916a
    mov    $0x131,%ebx
    mov    $data_926df,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_4916a:
    mov    0xa7(%ecx),%eax
    sar    $0x18,%eax
    mov    data_9699e(,%eax,2),%eax
    sar    $0x10,%eax
    mov    %eax,0x15a(%ecx)
    mov    0x31(%ecx),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    je     jump_4919f
    xor    %edx,%edx
    mov    0x54(%ecx),%eax
    mov    data_104bea,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    je     jump_491d8
  jump_4919f:
    mov    0xa7(%ecx),%edx
    sar    $0x18,%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    $data_108f98,%esi
    shl    $0x2,%eax
    lea    0x34(%ecx),%edi
    add    %eax,%esi
    push   %edi
  jump_491bf:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_491d7
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_491bf
  jump_491d7:
    pop    %edi
  jump_491d8:
    mov    0xa7(%ecx),%eax
    sar    $0x18,%eax
    lea    0x1(%eax),%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    0x54(%ecx),%edx
    add    %eax,%eax
    sar    $0x10,%edx
    mov    %eax,0x8c(%ecx)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    movl   $0x0,0x14(%ecx)
    cmpb   $0x1,data_a310f(,%eax,2)
    jne    jump_49226
    mov    0x8c(%ecx),%edx
    add    %edx,%edx
    mov    %edx,0x8c(%ecx)
  jump_49226:
    mov    0x8c(%ecx),%eax
    mov    %eax,0x98(%ecx)
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_492ac:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %dl,%cl
    cmp    0x15a(%eax),%ebx
    jg     jump_492f3
    lea    0x0(,%ebx,8),%edx
    sub    %ebx,%edx
    add    %eax,%edx
    mov    0xab(%edx),%ch
    cmp    %ch,%cl
    je     jump_492f3
    cmp    $0xff,%ch
    jne    jump_492d7
    incl   0x15e(%eax)
  jump_492d7:
    lea    0x0(,%ebx,8),%edx
    sub    %ebx,%edx
    mov    %cl,0xab(%edx,%eax,1)
    call   func_496e0
    mov    $0xffffffff,%eax
    pop    %ecx
    ret
  jump_492f3:
    xor    %eax,%eax
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_492f8:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,%ebx
    shl    $0x3,%edx
    sub    %ebx,%edx
    add    %eax,%edx
    cmpb   $0xff,0xab(%edx)
    je     jump_49324
    decl   0x15e(%eax)
    movb   $0xff,0xab(%edx)
    call   func_496e0
    mov    $0xffffffff,%eax
    pop    %ebx
    ret
  jump_49324:
    xor    %eax,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_49328:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %dl,%cl
    mov    $0xffffffff,%edi
    mov    0x15a(%eax),%ebx
    xor    %edx,%edx
    test   %ebx,%ebx
    jg     jump_49352
    jmp    jump_49371
  jump_49344:
    inc    %edx
    mov    0x15a(%esi),%ebp
    add    $0x7,%eax
    cmp    %ebp,%edx
    jge    jump_49371
  jump_49352:
    cmpb   $0xff,0xab(%eax)
    je     jump_49344
    mov    0xa8(%eax),%ebx
    sar    $0x18,%ebx
    imul   $0x6a,%ebx,%ebx
    cmp    data_107052(%ebx),%cl
    jne    jump_49344
    mov    %edx,%edi
  jump_49371:
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4937c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    mov    %dl,%cl
    mov    $0xffffffff,%esi
    mov    0x15a(%ebx),%edx
    xor    %eax,%eax
    test   %edx,%edx
    jg     jump_493a7
    jmp    jump_493b3
  jump_49397:
    inc    %eax
    mov    0x15a(%ebx),%edi
    add    $0x7,%edx
    cmp    %edi,%eax
    jl     jump_493a9
    jmp    jump_493b3
  jump_493a7:
    mov    %ebx,%edx
  jump_493a9:
    cmp    0xab(%edx),%cl
    jne    jump_49397
    mov    %eax,%esi
  jump_493b3:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_493bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %dl,(%esp)
    cmp    0xaa(%eax),%dl
    je     jump_49483
    mov    -0x3(%esp),%edx
    sar    $0x18,%edx
    mov    data_9699e(,%edx,2),%edx
    mov    0x15e(%ecx),%ebx
    sar    $0x10,%edx
    xor    %eax,%eax
    cmp    %ebx,%edx
    jl     jump_49488
    mov    0x15a(%ecx),%ebp
    xor    %edi,%edi
    xor    %esi,%esi
    test   %ebp,%ebp
    jle    jump_49435
    mov    %ecx,%ebp
  jump_49406:
    mov    0xab(%ebp),%bl
    cmp    $0xff,%bl
    je     jump_49427
    mov    %esi,%edx
    mov    %ecx,%eax
    call   func_492f8
    movsbl %bl,%edx
    mov    %ecx,%eax
    mov    %edi,%ebx
    call   func_492ac
    inc    %edi
  jump_49427:
    inc    %esi
    mov    0x15a(%ecx),%eax
    add    $0x7,%ebp
    cmp    %eax,%esi
    jl     jump_49406
  jump_49435:
    mov    -0x3(%esp),%edx
    mov    %ecx,%eax
    sar    $0x18,%edx
    call   func_49148
    mov    0xa7(%ecx),%eax
    sar    $0x18,%eax
    lea    0x0(,%eax,4),%edx
    add    %eax,%edx
    mov    $data_108f98,%esi
    shl    $0x2,%edx
    lea    0x34(%ecx),%edi
    add    %edx,%esi
    push   %edi
  jump_49463:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_4947b
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_49463
  jump_4947b:
    pop    %edi
    mov    %ecx,%eax
    call   func_496e0
  jump_49483:
    mov    $0xffffffff,%eax
  jump_49488:
    add    $0x4,%esp
    pop    %ebp
  jump_4948c:
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_49494:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %ebp
    sub    $0x2c,%esp
    mov    %eax,%esi
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    %ebx,%eax
    call   func_35bb4
    test   %eax,%eax
    jne    jump_49589
    movb   $0x4,0x58(%esi)
    mov    %eax,0x18(%esp)
    mov    %eax,0x1c(%esp)
    mov    %eax,0x20(%esp)
    call   func_782df
    mov    %eax,%edx
    mov    $0x3e8,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x24(%esp)
    fildl  0x24(%esp)
    fstps  0x18(%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x24(%esp)
    fildl  0x24(%esp)
    fstps  0x1c(%esp)
    call   func_782df
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x24(%esp)
    lea    0x18(%esp),%eax
    fildl  0x24(%esp)
    fstps  0x20(%esp)
    push   $0x437a0000
    xor    %ebp,%ebp
    call   func_53054
    mov    %esp,%eax
    mov    %ebp,0xc(%esp)
    mov    %ebp,0x10(%esp)
    mov    %ebp,0x14(%esp)
    mov    %eax,0x28(%esp)
    flds   (%ebx)
    fadds  0x18(%esp)
    fstps  0xc(%esp)
    flds   0x4(%ebx)
    fadds  0x1c(%esp)
    mov    0xc(%esp),%eax
    fstps  0x10(%esp)
    flds   0x8(%ebx)
    mov    %eax,(%esp)
    fadds  0x20(%esp)
    mov    0x10(%esp),%eax
    fstps  0x14(%esp)
    mov    %eax,0x4(%esp)
    mov    0x14(%esp),%eax
    mov    %esp,%edx
    mov    %eax,0x8(%esp)
    mov    %esi,%eax
    call   func_496bc
    add    $0x2c,%esp
    pop    %ebp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_49589:
    mov    $0x43,%edx
    mov    %esi,%eax
    call   func_4937c
    cmp    $0xffffffff,%eax
    je     jump_495c0
    mov    %eax,%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %esi,%eax
    cmpw   $0x0,0xac(%eax)
    je     jump_495c0
    mov    data_108c28,%edx
    add    %edx,0x88(%esi)
    decw   0xac(%eax)
  jump_495c0:
    xor    %edx,%edx
    mov    0x54(%esi),%eax
    mov    data_104bea,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    jne    jump_49604
    cmpb   $0x3,0x5d(%esi)
    jne    jump_49604
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    je     jump_495f9
    mov    $0x10,%edx
    mov    $data_10ae70,%eax
    mov    %esi,%ebx
    mov    0x5e(%esi),%ecx
    call   func_55aec
  jump_495f9:
    movb   $0x0,0x5d(%esi)
    movl   $0x0,0x5e(%esi)
  jump_49604:
    add    $0x2c,%esp
    pop    %ebp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4960c:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,%ebx
    mov    0x8(%eax),%edx
    add    0xc(%eax),%edx
    test   %edx,%edx
    jg     jump_49635
    mov    0x54(%eax),%edx
    sar    $0x10,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmpb   $0x12,data_a310f(,%eax,2)
    jne    jump_49642
  jump_49635:
    testb  $0x2,0x23(%ebx)
    jne    jump_49642
    mov    $0xffffffff,%eax
    pop    %ebx
    ret
  jump_49642:
    xor    %eax,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_49648:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ebx
    mov    %edx,%ecx
    call   func_4960c
    test   %eax,%eax
    je     jump_496b5
    cmpb   $0x3,0x58(%ebx)
    jne    jump_4967c
    mov    0x59(%ebx),%esi
    mov    0xa(%esi),%esi
    sar    $0x10,%esi
    lea    0x0(,%esi,4),%eax
    sub    %esi,%eax
    mov    $data_a3d21,%esi
    shl    $0x5,%eax
    add    %eax,%esi
    jmp    jump_4967f
  jump_4967c:
    mov    0x59(%ebx),%esi
  jump_4967f:
    mov    %ebx,%edx
    mov    %esi,%eax
    call   func_1d538
    movb   $0x5,0x58(%ebx)
    movl   $0x0,0x9e(%ebx)
    mov    %ecx,0x59(%ebx)
    cmp    (%ecx),%esi
    jne    jump_496ab
    movl   $0x3f800000,0xa2(%ebx)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_496ab:
    movl   $0x0,0xa2(%ebx)
  jump_496b5:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_496bc:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    (%edx),%ebx
    mov    %ebx,0x9e(%eax)
    add    $0x9e,%eax
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
    call   func_53440
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_496e0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%edx
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    mov    0x14(%eax),%eax
    movl   $0x0,0x20(%edx)
    movl   $0x0,0x24(%edx)
    movl   $0x0,0x18(%edx)
    movl   $0x0,0x1c(%edx)
    xor    %ebx,%ebx
    movl   $0x0,0x28(%edx)
    xor    %esi,%esi
    movl   $0x0,0x2c(%edx)
    mov    %ebx,0x4(%esp)
    movl   $0x0,0x30(%edx)
    mov    %ebx,(%esp)
    mov    0x15a(%edx),%edi
    mov    %eax,0x10(%edx)
    test   %edi,%edi
    jle    jump_497e2
    mov    %edx,%ebx
  jump_4974a:
    cmpb   $0xff,0xab(%ebx)
    je     jump_497b6
    mov    0xa8(%ebx),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    add    $data_107020,%eax
    mov    (%edx),%edi
    mov    0x52(%eax),%ecx
    add    %ecx,%edi
    mov    %edi,(%edx)
    mov    0x4(%edx),%ebp
    mov    0x56(%eax),%ecx
    add    %ecx,%ebp
    mov    %ebp,0x4(%edx)
    mov    0x10(%edx),%edi
    mov    0x5e(%eax),%ecx
    add    %ecx,%edi
    mov    %edi,0x10(%edx)
    mov    0x20(%edx),%ebp
    mov    0x62(%eax),%ecx
    add    %ecx,%ebp
    mov    %ebp,0x20(%edx)
    mov    0x18(%edx),%edi
    mov    0x66(%eax),%ecx
    add    %ecx,%edi
    mov    %edi,0x18(%edx)
    cmpb   $0x2,0x32(%eax)
    jne    jump_497a5
    mov    0x36(%eax),%eax
    add    %eax,0x1c(%edx)
  jump_497a5:
    mov    0xab(%ebx),%al
    cmp    $0x47,%al
    jne    jump_497c6
    movl   $0xffffffff,0x28(%edx)
  jump_497b6:
    inc    %esi
    mov    0x15a(%edx),%ebp
    add    $0x7,%ebx
    cmp    %ebp,%esi
    jge    jump_497e2
    jmp    jump_4974a
  jump_497c6:
    cmp    $0x2b,%al
    jne    jump_497d0
    incl   0x4(%esp)
    jmp    jump_497b6
  jump_497d0:
    cmp    $0x2c,%al
    jne    jump_497d9
    incl   (%esp)
    jmp    jump_497b6
  jump_497d9:
    cmp    $0x2a,%al
    jne    jump_497b6
    incl   0x24(%edx)
    jmp    jump_497b6
  jump_497e2:
    fildl  0x4(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fmull  data_926eb
    call   func_76e98
    fistpl 0x8(%edx)
    fildl  (%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fmull  data_926f3
    call   func_76e98
    fistpl 0xc(%edx)
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_49828:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    cmpb   $0x1,0x58(%eax)
    je     jump_4984b
    cmpb   $0x2,0x58(%esi)
    je     jump_4984b
    mov    $0x260,%ebx
    mov    $data_926fb,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4984b:
    cmpl   $0x0,0x59(%esi)
    jne    jump_49862
    mov    $0x261,%ebx
    mov    $data_92707,%edx
    xor    %eax,%eax
    call   func_26198
  jump_49862:
    mov    0x59(%esi),%ecx
    mov    0x54(%esi),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    0x57(%ecx),%al
    cmp    %eax,%edx
    je     jump_49885
    mov    $0x265,%ebx
    mov    $data_92713,%edx
    xor    %eax,%eax
    call   func_26198
  jump_49885:
    cmpb   $0x1,0x58(%esi)
    jne    jump_498b8
    mov    data_a2f6c,%eax
    mov    %eax,0x52(%esi)
    xor    %eax,%eax
    mov    0x54(%esi),%edx
    mov    data_104bea,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    jne    jump_498e7
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x11,%eax
    je     jump_498e7
    mov    $0x11,%edx
    jmp    jump_498db
  jump_498b8:
    xor    %eax,%eax
    mov    0x54(%esi),%edx
    mov    data_104bea,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    jne    jump_498e7
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x11,%eax
    je     jump_498e7
    mov    $0x12,%edx
  jump_498db:
    mov    $data_10ae70,%eax
    mov    %esi,%ebx
    call   func_55aec
  jump_498e7:
    mov    0x59(%esi),%eax
    movb   $0x3,0x58(%esi)
    mov    0xc(%eax),%ax
    movswl %ax,%ecx
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    mov    %esi,%edx
    shl    $0x5,%eax
    xor    %ebx,%ebx
    add    $data_a3d21,%eax
    call   func_1d3e8
    mov    0xa7(%esi),%edx
    mov    %esi,%eax
    sar    $0x18,%edx
    call   func_49148
    mov    %esi,%eax
    call   func_4a6ac
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_4992c:
    .long   func_4997b
    .long   func_4997b
    .long   func_49a01
    .long   func_49a22
    .long   func_49a2c


/*----------------------------------------------------------------*/
func_49940:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    cmpb   $0x0,0x58(%eax)
    jne    jump_49961
    mov    $0x288,%ebx
    mov    $data_9271f,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_49961:
    mov    0x58(%ecx),%al
    dec    %al
    cmp    $0x4,%al
    ja     func_49a2c
    and    $0xff,%eax
    jmp    *%cs:vtable_4992c(,%eax,4)


/*----------------------------------------------------------------*/
func_4997b:
/*----------------------------------------------------------------*/
    mov    0x59(%ecx),%esi
    mov    0x52(%esi),%ax
    cmp    0x1a(%esi),%ax
    jb     jump_49999
    mov    $0x297,%ebx
    mov    $data_9272b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_49999:
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0x52(%esi),%dx
    call   func_35a70
    cmp    %ecx,%eax
    je     jump_499bb
    mov    $0x29a,%ebx
    mov    $data_92737,%edx
    xor    %eax,%eax
    call   func_26198
  jump_499bb:
    mov    0xa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x5,%eax
    movb   $0x4,0x58(%ecx)
    add    $data_a3d21,%eax
    mov    %ecx,%edx
    mov    %eax,0x59(%ecx)
    call   func_1d538
    xor    %eax,%eax
    mov    0x52(%esi),%ax
    movb   $0xff,0x54(%esi)
    cmp    $0xffff,%eax
    je     func_49a2c
    mov    0x10(%esi),%edx
    movb   $0xff,0x1(%edx,%eax,4)
    movw   $0xffff,0x52(%esi)
    jmp    func_49a2c


/*----------------------------------------------------------------*/
func_49a01:
/*----------------------------------------------------------------*/
    mov    %ecx,%edx
    mov    0x59(%ecx),%eax
    call   func_35c38
    cmpb   $0x4,0x58(%ecx)
    je     func_49a22
    mov    $0x2b0,%ebx
    mov    $data_92743,%edx
    xor    %eax,%eax
    call   func_26198


/*----------------------------------------------------------------*/
func_49a22:
/*----------------------------------------------------------------*/
    mov    %ecx,%edx
    mov    0x59(%ecx),%eax
    call   func_1d538


/*----------------------------------------------------------------*/
func_49a2c:
/*----------------------------------------------------------------*/
    mov    $data_a2f6c,%eax
    mov    %ecx,%edx
    call   func_20720
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_49a40:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%edi
    lea    0xab(%eax),%ebx
    xor    %esi,%esi
    jmp    jump_49a56
  jump_49a52:
    inc    %esi
    add    $0x7,%ebx
  jump_49a56:
    movswl %si,%eax
    cmp    0x15a(%ecx),%eax
    jge    jump_4948c
    mov    (%ebx),%ah
    cmp    $0xff,%ah
    je     jump_49a52
    movsbl %ah,%eax
    imul   $0x6a,%eax,%eax
    cmpb   $0x1,data_107052(%eax)
    jne    jump_49a52
    cmp    0x3(%ebx),%edi
    je     jump_49a52
    mov    %ebx,%edx
    mov    %ecx,%eax
    call   func_49a8c
    jmp    jump_49a52


/*----------------------------------------------------------------*/
func_49a8c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%esi
    cmpb   $0xff,(%edx)
    jne    jump_49aaa
    mov    $0x2d3,%ebx
    mov    $data_9274f,%edx
    xor    %eax,%eax
    call   func_26198
  jump_49aaa:
    movsbl (%esi),%eax
    imul   $0x6a,%eax,%eax
    add    $data_107020,%eax
    mov    0x33(%eax),%dx
    xor    %dh,%dh
    and    $0x20,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_49b36
    cmpl   $0xffffffff,0x3(%esi)
    jne    jump_49b09
    mov    0x36(%eax),%edx
    add    %edx,0x88(%ecx)
    cmpb   $0x1,0x32(%eax)
    jne    jump_49afd
    mov    0x56(%eax),%eax
    mov    0x90(%ecx),%edi
    sub    %eax,%edi
    mov    %edi,0x90(%ecx)
    test   %edi,%edi
    jge    jump_49afd
    movl   $0x0,0x90(%ecx)
  jump_49afd:
    movl   $0x0,0x3(%esi)
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_49b09:
    mov    0x88(%ecx),%edx
    mov    0x36(%eax),%ebx
    cmp    %ebx,%edx
    jl     jump_49b36
    mov    %edx,%edi
    sub    %ebx,%edi
    mov    %edi,0x88(%ecx)
    cmpb   $0x1,0x32(%eax)
    jne    jump_49b2f
    mov    0x56(%eax),%eax
    add    %eax,0x90(%ecx)
  jump_49b2f:
    movl   $0xffffffff,0x3(%esi)
  jump_49b36:
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_49b3c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    0x62(%ebx),%cl
    xor    %eax,%eax
    test   %cl,%cl
    jne    jump_49b52
    mov    %ebx,%eax
    call   func_49cc4
    jmp    jump_49b5e
  jump_49b52:
    cmp    $0x1,%cl
    jne    jump_49b5e
    mov    %ebx,%eax
    call   func_4a0d0
  jump_49b5e:
    mov    %eax,0x84(%ebx)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_49b68:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x18,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    movl   $0xbf800000,0x10(%esp)
    xor    %edx,%edx
    jmp    jump_49c27
  jump_49b82:
    cmp    $0x1,%esi
    je     jump_49bb6
    jmp    jump_49bfe
  jump_49b8c:
    movsbl %al,%eax
    imul   $0x6a,%eax,%eax
    mov    data_10705a(%eax),%eax
    shl    $0x5,%eax
    mov    %eax,0x14(%esp)
    fildl  0x14(%esp)
    fld    %st(0)
    fmull  data_92763
    fstp   %st(1)
    fstps  0x8(%esp)
    jmp    jump_49c11
  jump_49bb6:
    cmp    $0x30,%al
    jb     jump_49bde
    cmp    $0x32,%al
    jbe    jump_49c7f
    cmp    $0x3d,%al
    jb     jump_49bda
    jbe    jump_49c7f
    cmp    $0x40,%al
    jb     jump_49c11
    jbe    jump_49c7f
    cmp    $0x42,%al
    jmp    jump_49c0b
  jump_49bda:
    cmp    $0x36,%al
    jmp    jump_49c0b
  jump_49bde:
    cmp    $0x25,%al
    jb     jump_49bf0
    cmp    $0x26,%al
    jbe    jump_49c7f
    cmp    $0x2f,%al
    je     jump_49b8c
    jmp    jump_49c11
  jump_49bf0:
    cmp    $0x21,%al
    jb     jump_49c11
    cmp    $0x23,%al
    jbe    jump_49c7f
    jmp    jump_49c11
  jump_49bfe:
    cmp    $0x2,%esi
    jne    jump_49c11
    cmp    $0x2f,%al
    jb     jump_49c11
    jbe    jump_49b8c
    cmp    $0x46,%al
  jump_49c0b:
    je     jump_49c7f
  jump_49c11:
    flds   0x8(%esp)
    fcomps 0x10(%esp)
    fnstsw %ax
    sahf
    jbe    jump_49c26
    mov    0x8(%esp),%eax
    mov    %eax,0x10(%esp)
  jump_49c26:
    inc    %edx
  jump_49c27:
    movswl %dx,%eax
    cmp    0x15a(%ecx),%eax
    jge    jump_49ca9
    imul   $0x7,%eax,%eax
    lea    (%ecx,%eax,1),%ebx
    mov    $0xbf800000,%edi
    mov    0xab(%ebx),%al
    mov    %edi,0x8(%esp)
    cmp    $0xff,%al
    je     jump_49c26
    cmp    $0x4c,%al
    jge    jump_49c26
    movsbl %al,%edi
    imul   $0x6a,%edi,%edi
    cmpl   $0x0,data_107062(%edi)
    je     jump_49c6f
    mov    0xaa(%ebx),%ebx
    sar    $0x10,%ebx
    test   %ebx,%ebx
    je     jump_49c26
  jump_49c6f:
    cmp    $0xff,%al
    jle    jump_49b82
    cmp    $0x9,%al
    jge    jump_49b82
  jump_49c7f:
    movsbl %al,%eax
    imul   $0x6a,%eax,%eax
    mov    data_10705a(%eax),%eax
    shl    $0x5,%eax
    mov    %eax,0x14(%esp)
    fildl  0x14(%esp)
    fld    %st(0)
    fmull  data_9275b
    fstp   %st(1)
    fstps  0x8(%esp)
    jmp    jump_49c11
  jump_49ca9:
    flds   0x10(%esp)
    call   func_76e98
    fistpl 0xc(%esp)
    mov    0xc(%esp),%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_49cc4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xac,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    cmpb   $0x4,0x58(%eax)
    je     jump_49cf0
    cmpb   $0x4,0x58(%ecx)
    je     jump_49cf0
    mov    $0x370,%ebx
    mov    $data_9276b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_49cf0:
    xor    %edx,%edx
    mov    %edx,0x24(%esp)
    mov    %edx,0x28(%esp)
    mov    %edx,0x2c(%esp)
    mov    0x67(%ecx),%dh
    mov    $0x1,%ebx
    cmp    $0x3,%dh
    jne    jump_49d24
    lea    0x6c(%ecx),%edx
    mov    (%edx),%eax
    mov    %eax,0x24(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x28(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x2c(%esp)
    jmp    jump_49d88
  jump_49d24:
    cmp    $0x1,%dh
    jne    jump_49d42
    mov    0x68(%ecx),%edx
    mov    (%edx),%eax
    mov    %eax,0x24(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x28(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x2c(%esp)
    jmp    jump_49d88
  jump_49d42:
    cmp    $0x2,%dh
    jne    jump_49d86
    mov    0x68(%ecx),%edx
    mov    0x14(%edx),%eax
    mov    %eax,0x24(%esp)
    mov    0x18(%edx),%eax
    mov    %eax,0x28(%esp)
    mov    0x1c(%edx),%eax
    add    $0x14,%edx
    mov    %eax,0x2c(%esp)
    mov    0x68(%ecx),%edx
    mov    0x59(%ecx),%eax
    cmp    (%edx),%eax
    jne    jump_49d88
    mov    0x8(%edx),%eax
    mov    %eax,0x24(%esp)
    mov    0xc(%edx),%eax
    mov    %eax,0x28(%esp)
    mov    0x10(%edx),%eax
    add    $0x8,%edx
    mov    %eax,0x2c(%esp)
    jmp    jump_49d88
  jump_49d86:
    xor    %ebx,%ebx
  jump_49d88:
    test   $0x1,%bl
    je     jump_4a0b2
    lea    0x3c(%esp),%edx
    lea    0x9e(%ecx),%eax
    xor    %ebp,%ebp
    mov    %edx,0x90(%esp)
    mov    %ebp,0xc(%esp)
    mov    %ebp,0x10(%esp)
    mov    %ebp,0x14(%esp)
    flds   0x24(%esp)
    fsubs  (%eax)
    fstps  0xc(%esp)
    flds   0x28(%esp)
    fsubs  0x4(%eax)
    fstps  0x10(%esp)
    flds   0x2c(%esp)
    fsubs  0x8(%eax)
    fstps  0x14(%esp)
    mov    0xc(%esp),%eax
    flds   0x10(%esp)
    fmul   %st(0),%st
    mov    %eax,0x3c(%esp)
    mov    0x10(%esp),%eax
    flds   0xc(%esp)
    fmul   %st(0),%st
    mov    %eax,0x40(%esp)
    faddp  %st,%st(1)
    mov    0x14(%esp),%eax
    flds   0x14(%esp)
    fmul   %st(0),%st
    mov    %eax,0x44(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fmuls  data_92777
    fstps  0xa8(%esp)
    fildl  0x94(%ecx)
    mov    0xa8(%esp),%eax
    fstps  0xa0(%esp)
    flds   0xa8(%esp)
    mov    %eax,0x9c(%esp)
    fcomps 0xa0(%esp)
    fnstsw %ax
    sahf
    jbe    jump_49e52
    mov    0xa0(%esp),%eax
    mov    %eax,0xa8(%esp)
  jump_49e52:
    fildl  0x1c(%ecx)
    fld1
    fadds  0xa8(%esp)
    fmulp  %st,%st(1)
    fildl  0x10(%ecx)
    fdivrp %st,%st(1)
    call   func_76e98
    fistpl 0xa4(%esp)
    cmpl   $0x1,0xa4(%esp)
    jge    jump_49e86
    movl   $0x1,0xa4(%esp)
  jump_49e86:
    mov    0xa4(%esp),%eax
    mov    0x88(%ecx),%edx
    cmp    %edx,%eax
    jle    jump_49ebb
    fildl  0x88(%ecx)
    fmuls  0xa8(%esp)
    fildl  0xa4(%esp)
    fdivrp %st,%st(1)
    mov    %edx,0xa4(%esp)
    fstps  0xa8(%esp)
  jump_49ebb:
    flds   0xa8(%esp)
    fcomps 0x9c(%esp)
    fnstsw %ax
    sahf
    jne    jump_49ed1
    or     $0x8,%bl
  jump_49ed1:
    lea    0x3c(%esp),%eax
    call   func_53000
    flds   0x3c(%esp)
    mov    %esp,%eax
    flds   0xa8(%esp)
    fxch   %st(1)
    fmul   %st(1),%st
    mov    %eax,0x84(%esp)
    fstps  0x6c(%esp)
    flds   0x40(%esp)
    mov    0x6c(%esp),%eax
    fmul   %st(1),%st
    mov    %eax,(%esp)
    fstps  0x70(%esp)
    flds   0x44(%esp)
    mov    0x70(%esp),%eax
    fmulp  %st,%st(1)
    mov    %eax,0x4(%esp)
    fstps  0x74(%esp)
    flds   0x6c(%esp)
    mov    0x74(%esp),%eax
    flds   data_9277b
    fxch   %st(1)
    fmul   %st(1),%st
    mov    %eax,0x8(%esp)
    fstps  0x60(%esp)
    lea    0x18(%esp),%eax
    flds   0x70(%esp)
    fmul   %st(1),%st
    mov    %eax,0x88(%esp)
    mov    0x60(%esp),%eax
    fstps  0x64(%esp)
    fmuls  0x74(%esp)
    mov    %eax,0x18(%esp)
    mov    0x64(%esp),%eax
    fstps  0x68(%esp)
    flds   0x60(%esp)
    mov    %eax,0x1c(%esp)
    mov    0x68(%esp),%eax
    flds   data_9277f
    fxch   %st(1)
    fmul   %st(1),%st
    mov    %eax,0x20(%esp)
    fstps  0x30(%esp)
    flds   0x64(%esp)
    lea    0x48(%esp),%eax
    fmul   %st(1),%st
    mov    %eax,0x8c(%esp)
    fstps  0x34(%esp)
    flds   0x68(%esp)
    mov    0x30(%esp),%eax
    fmulp  %st,%st(1)
    mov    %eax,0x48(%esp)
    mov    0x34(%esp),%eax
    fstps  0x38(%esp)
    mov    %eax,0x4c(%esp)
    mov    0x38(%esp),%eax
    lea    0x9e(%ecx),%esi
    mov    %eax,0x50(%esp)
    mov    0x30(%esp),%eax
    xor    %ebp,%ebp
    mov    %eax,0x3c(%esp)
    mov    0x34(%esp),%eax
    mov    %ebp,0x54(%esp)
    mov    %eax,0x40(%esp)
    mov    0x38(%esp),%eax
    mov    %ebp,0x58(%esp)
    mov    %eax,0x44(%esp)
    lea    0x78(%esp),%eax
    mov    %ebp,0x5c(%esp)
    mov    %eax,0x94(%esp)
    flds   (%esi)
    fadds  0x30(%esp)
    fstps  0x54(%esp)
    flds   0x4(%esi)
    fadds  0x34(%esp)
    mov    0x54(%esp),%eax
    fstps  0x58(%esp)
    flds   0x8(%esi)
    mov    %eax,0x78(%esp)
    fadds  0x38(%esp)
    mov    0x58(%esp),%eax
    fstps  0x5c(%esp)
    mov    %eax,0x7c(%esp)
    mov    0x5c(%esp),%eax
    lea    0x78(%ecx),%edx
    mov    %eax,0x80(%esp)
    mov    0x54(%esp),%eax
    mov    %eax,(%edx)
    mov    0x7c(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x80(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    %edx,%eax
    call   func_53440
    cmp    $0x1,%edi
    jne    jump_4a0b2
    flds   (%edx)
    mov    0xa4(%esp),%eax
    fstps  (%esi)
    mov    0x4(%edx),%edi
    mov    %edi,0x4(%esi)
    mov    0x8(%edx),%edi
    mov    %edi,0x8(%esi)
    fildl  0x94(%ecx)
    mov    0x88(%ecx),%esi
    fld    %st(0)
    sub    %eax,%esi
    fsubs  0xa8(%esp)
    mov    %esi,0x88(%ecx)
    fstp   %st(1)
    call   func_76e98
    fistpl 0x94(%ecx)
    test   $0x8,%bl
    je     jump_4a0b2
    mov    0x67(%ecx),%dl
    cmp    $0x1,%dl
    jne    jump_4a0a3
    mov    %ecx,%eax
    mov    0x68(%ecx),%edx
    call   func_49494
    jmp    jump_4a0b2
  jump_4a0a3:
    cmp    $0x2,%dl
    jne    jump_4a0b2
    mov    %ecx,%eax
    mov    0x68(%ecx),%edx
    call   func_49648
  jump_4a0b2:
    mov    %ebx,%eax
    add    $0xac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a0d0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    0x63(%eax),%ecx
    movsbl (%ecx),%edi
    imul   $0x6a,%edi,%edi
    mov    $0xffffffff,%esi
    mov    data_107062(%edi),%ebp
    xor    %ebx,%ebx
    test   %ebp,%ebp
    je     jump_4a104
    movswl 0x1(%ecx),%edi
    test   %edi,%edi
    jne    jump_4a0fb
    xor    %esi,%esi
    jmp    jump_4a104
  jump_4a0fb:
    cmp    $0x1,%edx
    jne    jump_4a104
    decw   0x1(%ecx)
  jump_4a104:
    cmp    $0xffffffff,%esi
    jne    jump_4a13b
    mov    0x67(%eax),%cl
    test   %cl,%cl
    jne    jump_4a117
    call   func_4b944
    jmp    jump_4a139
  jump_4a117:
    cmp    $0x2,%cl
    jne    jump_4a123
    call   func_4cab8
    jmp    jump_4a139
  jump_4a123:
    cmp    $0x1,%cl
    jne    jump_4a12f
    call   func_4c7fc
    jmp    jump_4a139
  jump_4a12f:
    cmp    $0x5,%cl
    jne    jump_4a13b
    call   func_4cdf8
  jump_4a139:
    mov    %eax,%ebx
  jump_4a13b:
    mov    %ebx,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a144:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    xor    %ebx,%ebx
    xor    %eax,%eax
    jmp    jump_4a151
  jump_4a150:
    inc    %eax
  jump_4a151:
    xor    %edx,%edx
    mov    0x15a(%esi),%ecx
    mov    %ax,%dx
    cmp    %ecx,%edx
    jge    jump_4a182
    imul   $0x7,%edx,%edx
    add    %esi,%edx
    cmpb   $0xff,0xab(%edx)
    je     jump_4a150
    mov    0xa8(%edx),%edx
    sar    $0x18,%edx
    imul   $0x6a,%edx,%edx
    add    data_107066(%edx),%ebx
    jmp    jump_4a150
  jump_4a182:
    mov    %ebx,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a18c:
/*----------------------------------------------------------------*/
    push   %edx
    push   %esi
    push   %edi
    sub    $0x10,%esp
    mov    %esp,%edi
    mov    $data_969d8,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0xa7(%eax),%edx
    sar    $0x18,%edx
    mov    (%esp,%edx,4),%edx
    call   func_4a144
    add    %edx,%eax
    add    $0x10,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    ret

vtable_4a1b8:
    .long   func_4a273
    .long   func_4a2a4
    .long   func_4a2b6
    .long   func_4a283
    .long   func_4a2c8


/*----------------------------------------------------------------*/
func_4a1cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    %eax,%esi
    mov    %dx,(%esp)
    mov    -0x2(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_4a1f0
    mov    %edx,%eax
    cmp    data_a3cf4,%ax
    jl     jump_4a201
  jump_4a1f0:
    mov    $0x408,%ebx
    mov    $data_92783,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4a201:
    mov    -0x2(%esp),%ebp
    mov    %esi,%eax
    sar    $0x10,%ebp
    xor    %edx,%edx
    mov    %ebp,%ebx
    call   func_4a36c
    mov    $0x4,%edx
    mov    %al,0x4(%esp)
    mov    %ebp,%ebx
    mov    %esi,%eax
    call   func_4a36c
    mov    $0x2,%edx
    mov    %al,0x8(%esp)
    mov    %ebp,%ebx
    mov    %esi,%eax
    call   func_4a36c
    mov    $0x1,%edx
    mov    %al,0x14(%esp)
    mov    %ebp,%ebx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_4a36c
    mov    %al,0x10(%esp)
    mov    $0x2b,%ah
    mov    $0x2c,%edx
    mov    %ah,0xc(%esp)
    mov    %esi,%eax
    xor    %edi,%edi
    call   func_4a404
    test   %eax,%eax
    je     jump_4a26c
    movb   $0x2c,0xc(%esp)
  jump_4a26c:
    xor    %edx,%edx
    jmp    jump_4a325


/*----------------------------------------------------------------*/
func_4a273:
/*----------------------------------------------------------------*/
    mov    0x1(%esp),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    mov    data_10705e(%eax),%eax


/*----------------------------------------------------------------*/
func_4a283:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    mov    %dx,%bx
    imul   $0x7,%ebx,%ebp
    add    %esi,%ebp
    cmpb   $0x2b,0xab(%ebp)
    jne    jump_4a2fb
    cmpb   $0x2c,0xc(%esp)
    jne    jump_4a2fb
    inc    %edi
    inc    %ecx
    jmp    jump_4a324


/*----------------------------------------------------------------*/
func_4a2a4:
/*----------------------------------------------------------------*/
    mov    0xd(%esp),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    mov    data_10705e(%eax),%eax
    jmp    func_4a283


/*----------------------------------------------------------------*/
func_4a2b6:
/*----------------------------------------------------------------*/
    mov    0x11(%esp),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    mov    data_10705e(%eax),%eax
    jmp    func_4a283


/*----------------------------------------------------------------*/
func_4a2c8:
/*----------------------------------------------------------------*/
    mov    0x5(%esp),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    mov    data_10705e(%eax),%eax
    jmp    func_4a283
  jump_4a2da:
    imul   $0x6a,%eax,%eax
    mov    data_107052(%eax),%bl
    mov    $0xffffffff,%eax
    cmp    $0x4,%bl
    ja     func_4a283
    and    $0xff,%ebx
    jmp    *%cs:vtable_4a1b8(,%ebx,4)
  jump_4a2fb:
    cmp    $0xffffffff,%eax
    je     jump_4a324
    xor    %ebx,%ebx
    mov    %dx,%bx
    imul   $0x7,%ebx,%ebx
    mov    0xa8(%esi,%ebx,1),%ebx
    sar    $0x18,%ebx
    imul   $0x6a,%ebx,%ebx
    mov    data_10705e(%ebx),%ebp
    inc    %edi
    cmp    %ebp,%eax
    jle    jump_4a324
    sub    %ebp,%eax
    add    %eax,%ecx
  jump_4a324:
    inc    %edx
  jump_4a325:
    xor    %eax,%eax
    mov    0x15a(%esi),%ebx
    mov    %dx,%ax
    cmp    %ebx,%eax
    jge    jump_4a344
    imul   $0x7,%eax,%ebp
    add    %esi,%ebp
    cmpb   $0xff,0xab(%ebp)
    jne    jump_4a2da
    jmp    jump_4a324
  jump_4a344:
    test   %edi,%edi
    jle    jump_4a35e
    mov    %ecx,%eax
    shl    $0x2,%ecx
    add    %eax,%ecx
    add    %ecx,%ecx
    mov    %ecx,%edx
    mov    %ecx,%eax
    sar    $0x1f,%edx
    idiv   %edi
    mov    %eax,%ecx
    jmp    jump_4a360
  jump_4a35e:
    xor    %ecx,%ecx
  jump_4a360:
    mov    %ecx,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a36c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %dl,(%esp)
    mov    %ebx,%edi
    movswl %bx,%edx
    test   %edx,%edx
    jl     jump_4a388
    cmp    data_a3cf4,%bx
    jl     jump_4a399
  jump_4a388:
    mov    $0x45f,%ebx
    mov    $data_9278f,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4a399:
    mov    $0xff,%ah
    xor    %ebx,%ebx
    mov    %ah,0x4(%esp)
    xor    %eax,%eax
    jmp    jump_4a3ac
  jump_4a3a5:
    inc    %eax
    cmp    $0x4c,%ax
    jge    jump_4a3f7
  jump_4a3ac:
    movswl %ax,%edx
    imul   $0x6a,%edx,%edx
    mov    data_107052(%edx),%cl
    cmp    (%esp),%cl
    jne    jump_4a3a5
    xor    %ecx,%ecx
    mov    data_107055(%edx),%cl
    imul   $0x4b,%ecx,%ecx
    mov    $0x1,%ebp
    mov    data_10529f(%ecx),%esi
    movswl %di,%ecx
    sar    $0x18,%esi
    shl    %cl,%ebp
    test   %ebp,%esi
    je     jump_4a3a5
    movswl %bx,%ecx
    cmp    data_10705e(%edx),%ecx
    jg     jump_4a3a5
    mov    %al,0x4(%esp)
    mov    data_10705e(%edx),%bx
    jmp    jump_4a3a5
  jump_4a3f7:
    mov    0x4(%esp),%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4a404:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %dl,(%esp)
    mov    data_a3cf4,%dx
    cmp    0x56(%eax),%dx
    jle    jump_4a425
    mov    0x54(%ecx),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jge    jump_4a436
  jump_4a425:
    mov    $0x476,%ebx
    mov    $data_9279b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4a436:
    mov    -0x3(%esp),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    xor    %edx,%edx
    mov    data_107055(%eax),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    mov    0x54(%ecx),%ecx
    sub    %edx,%eax
    sar    $0x10,%ecx
    mov    data_10529f(%eax),%eax
    mov    $0x1,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    sete   %al
    and    $0xff,%eax
    dec    %eax
    add    $0x4,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a480:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    cmpl   $0x0,0x88(%eax)
    jne    jump_4a4af
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_4a494:
    movb   $0x2,0x67(%eax)
    mov    %ebx,0x68(%eax)
    jmp    jump_4a4e5
  jump_4a49d:
    movb   $0x1,0x67(%eax)
    mov    %ebx,0x68(%eax)
    jmp    jump_4a4e5
  jump_4a4a6:
    movb   $0x0,0x67(%eax)
    mov    %ebx,0x68(%eax)
    jmp    jump_4a4e5
  jump_4a4af:
    lea    0xab(%eax),%ecx
    movb   $0x1,0x62(%eax)
    xor    %edi,%edi
    cmp    $0x1,%dx
    jb     jump_4a4cf
    cmp    $0x2,%dx
    jbe    jump_4a49d
    cmp    $0x3,%dx
    je     jump_4a4a6
    jmp    jump_4a4d4
  jump_4a4cf:
    test   %dx,%dx
    je     jump_4a494
  jump_4a4d4:
    mov    $0x4a3,%ebx
    mov    $data_927a7,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4a4e5:
    xor    %ebx,%ebx
    jmp    jump_4a4ed
  jump_4a4e9:
    inc    %ebx
    add    $0x7,%ecx
  jump_4a4ed:
    movswl %bx,%eax
    cmp    0x15a(%esi),%eax
    jge    jump_4a52b
    mov    (%ecx),%ah
    cmp    $0xff,%ah
    je     jump_4a4e9
    movsbl %ah,%eax
    imul   $0x6a,%eax,%eax
    cmpb   $0x0,data_107052(%eax)
    je     jump_4a519
    cmpb   $0x1,0x67(%esi)
    jne    jump_4a4e9
    cmpb   $0x46,(%ecx)
    jne    jump_4a4e9
  jump_4a519:
    mov    %esi,%eax
    xor    %edx,%edx
    mov    %ecx,0x63(%esi)
    call   func_49b3c
    test   $0x1,%al
    je     jump_4a4e9
    mov    %ecx,%edi
  jump_4a52b:
    mov    %edi,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4a534:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %dl,%cl
    xor    %eax,%eax
    jmp    jump_4a53f
  jump_4a53e:
    inc    %eax
  jump_4a53f:
    movswl %ax,%edx
    cmp    0x15a(%ebx),%edx
    jge    jump_4a55e
    imul   $0x7,%edx,%edx
    cmp    0xab(%edx,%ebx,1),%cl
    jne    jump_4a53e
    mov    $0xffffffff,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_4a55e:
    xor    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a564:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    push   %esi
    mov    %eax,%esi
    xor    %eax,%eax
    jmp    jump_4a56e
  jump_4a56d:
    inc    %eax
  jump_4a56e:
    movswl %ax,%edx
    cmp    0x15a(%esi),%edx
    jge    jump_4a5b0
    imul   $0x7,%edx,%edx
    add    %esi,%edx
    mov    0xa8(%edx),%ebx
    sar    $0x18,%ebx
    imul   $0x6a,%ebx,%ebx
    cmpb   $0x0,data_107052(%ebx)
    jne    jump_4a56d
    cmpl   $0x0,data_107062(%ebx)
    je     jump_4a5a9
    mov    0xaa(%edx),%edx
    sar    $0x10,%edx
    test   %edx,%edx
    je     jump_4a56d
  jump_4a5a9:
    mov    $0xffffffff,%edx
    jmp    jump_4a5b2
  jump_4a5b0:
    xor    %edx,%edx
  jump_4a5b2:
    mov    %edx,%eax
    pop    %esi
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a5b8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    0x9c(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_4a5dd
    movl   $0x0,0x94(%eax)
    jmp    jump_4a606
  jump_4a5dd:
    mov    0x9c(%eax),%dx
    xor    %dh,%dh
    and    $0x2,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_4a5fd
    mov    data_108a80,%ebx
    mov    0x10(%eax),%edx
    add    %ebx,%edx
    jmp    jump_4a600
  jump_4a5fd:
    mov    0x10(%eax),%edx
  jump_4a600:
    mov    %edx,0x94(%eax)
  jump_4a606:
    movl   $0x0,0x90(%eax)
    lea    0xab(%eax),%ebx
    mov    0x15a(%eax),%ecx
    xor    %esi,%esi
    test   %ecx,%ecx
    jle    jump_4a687
    jmp    jump_4a636
  jump_4a628:
    inc    %esi
    mov    0x15a(%eax),%edi
    add    $0x7,%ebx
    cmp    %edi,%esi
    jge    jump_4a687
  jump_4a636:
    mov    (%ebx),%dl
    cmp    $0xff,%dl
    je     jump_4a628
    movsbl %dl,%edx
    imul   $0x6a,%edx,%edx
    add    $data_107020,%edx
    mov    0x33(%edx),%cx
    xor    %ch,%ch
    and    $0x20,%cl
    movswl %cx,%ecx
    test   %ecx,%ecx
    je     jump_4a628
    cmpl   $0xffffffff,0x3(%ebx)
    jne    jump_4a628
    mov    0x88(%eax),%ecx
    mov    0x36(%edx),%edi
    cmp    %edi,%ecx
    jl     jump_4a628
    mov    %ecx,%ebp
    sub    %edi,%ebp
    mov    %ebp,0x88(%eax)
    cmpb   $0x1,0x32(%edx)
    jne    jump_4a628
    mov    0x56(%edx),%edx
    add    %edx,0x90(%eax)
    jmp    jump_4a628
  jump_4a687:
    mov    0x9c(%eax),%dx
    xor    %dh,%dh
    and    $0x8,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_4a6a4
    movl   $0x0,0x90(%eax)
  jump_4a6a4:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a6ac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x28,%esp
    mov    %eax,%esi
    movw   $0x0,0x9c(%eax)
    call   func_4a8fc
    xor    %edx,%edx
    mov    0x15a(%esi),%ebx
    mov    %eax,0x88(%esi)
    lea    0xab(%esi),%eax
    test   %ebx,%ebx
    jle    jump_4a706
    jmp    jump_4a6ec
  jump_4a6de:
    inc    %edx
    mov    0x15a(%esi),%ecx
    add    $0x7,%eax
    cmp    %ecx,%edx
    jge    jump_4a706
  jump_4a6ec:
    mov    (%eax),%ch
    cmp    $0xff,%ch
    je     jump_4a6de
    movsbl %ch,%ebx
    imul   $0x6a,%ebx,%ebx
    mov    data_107062(%ebx),%bx
    mov    %bx,0x1(%eax)
    jmp    jump_4a6de
  jump_4a706:
    cmpb   $0x5,0x58(%esi)
    jne    jump_4a8b9
    mov    0x59(%esi),%edx
    lea    0xc(%esp),%ecx
    xor    %edi,%edi
    mov    0x4(%edx),%eax
    mov    (%edx),%ebx
    mov    %ecx,0x18(%esp)
    mov    %edi,(%esp)
    mov    %edi,0x4(%esp)
    mov    %edi,0x8(%esp)
    flds   0x8(%ebx)
    fsubs  0x8(%eax)
    fstps  (%esp)
    flds   0xc(%ebx)
    fsubs  0xc(%eax)
    fstps  0x4(%esp)
    flds   0x10(%ebx)
    fsubs  0x10(%eax)
    add    $0x8,%eax
    fstps  0x8(%esp)
    mov    (%esp),%eax
    flds   0x4(%esp)
    fmul   %st(0),%st
    mov    %eax,0xc(%esp)
    mov    0x4(%esp),%eax
    flds   (%esp)
    fmul   %st(0),%st
    mov    %eax,0x10(%esp)
    faddp  %st,%st(1)
    mov    0x8(%esp),%eax
    flds   0x8(%esp)
    fmul   %st(0),%st
    mov    %eax,0x14(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    0x8(%esi),%eax
    mov    0xc(%esi),%edi
    add    $0x8,%ebx
    add    %edi,%eax
    fstps  0x20(%esp)
    mov    %eax,0x1c(%esp)
    mov    0x23(%edx),%bl
    fildl  0x1c(%esp)
    fstps  0x24(%esp)
    test   $0x1,%bl
    je     jump_4a7b5
    flds   0x24(%esp)
    fmuls  data_927bf
    fstps  0x24(%esp)
  jump_4a7b5:
    mov    0x54(%esi),%edx
    sar    $0x10,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmpb   $0x12,data_a310f(,%eax,2)
    jne    jump_4a7f2
    fld1
    fcomps 0x24(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4a7e4
    movl   $0x3f800000,0x24(%esp)
  jump_4a7e4:
    flds   0x24(%esp)
    fmuls  data_927c3
    fstps  0x24(%esp)
  jump_4a7f2:
    flds   0x9e(%esi)
    fadds  0x24(%esp)
    fsts   0x9e(%esi)
    fcomps 0x20(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4a815
    mov    0x20(%esp),%eax
    mov    %eax,0x9e(%esi)
  jump_4a815:
    flds   0x9e(%esi)
    fcomps 0x20(%esp)
    fnstsw %ax
    sahf
    jne    jump_4a8b9
    testl  $0x7fffffff,0xa2(%esi)
    jne    jump_4a83b
    mov    0x59(%esi),%edi
    mov    (%edi),%edi
    jmp    jump_4a841
  jump_4a83b:
    mov    0x59(%esi),%edi
    mov    0x4(%edi),%edi
  jump_4a841:
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    mov    0x54(%esi),%ecx
    add    %eax,%eax
    sar    $0x10,%ecx
    add    $data_a2f72,%eax
    cmp    %ebx,%ecx
    jne    jump_4a871
    mov    %esi,%ebx
    mov    %edi,%edx
    call   func_45a54
    jmp    jump_4a897
  jump_4a871:
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x15(%edi),%bl
    mov    0x14(%edi),%dl
    mov    data_104bea,%cl
    or     %edx,%ebx
    mov    $0x1,%edx
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_4a897
    mov    %esi,%ebx
    mov    %edi,%edx
    call   func_45d50
  jump_4a897:
    mov    %esi,%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_1d3e8
    cmpb   $0x4,0x58(%esi)
    je     jump_4a8b9
    mov    $0x55a,%ebx
    mov    $data_927b3,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4a8b9:
    mov    %esi,%eax
    call   func_4a5b8
    add    $0x28,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a8cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    data_a2f6c,%edx
    sub    0x52(%eax),%edx
    mov    $0x64,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    test   %eax,%eax
    jge    jump_4a8ec
    xor    %eax,%eax
    pop    %edx
    pop    %ebx
    ret
  jump_4a8ec:
    cmp    $0xa,%eax
    jle    jump_4a8f6
    mov    $0xa,%eax
  jump_4a8f6:
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a8fc:
/*----------------------------------------------------------------*/
    push   %edx
    sub    $0xc,%esp
    mov    %eax,%edx
    mov    0x18(%eax),%eax
    mov    %eax,0x4(%esp)
    mov    %edx,%eax
    call   func_4a8cc
    mov    %eax,(%esp)
    fildl  (%esp)
    fmuls  data_927c7
    fld1
    faddp  %st,%st(1)
    fstps  0x8(%esp)
    fld1
    fcomps 0x8(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4a939
    movl   $0x3f800000,0x8(%esp)
    jmp    jump_4a950
  jump_4a939:
    flds   0x8(%esp)
    fcomps data_927cb
    fnstsw %ax
    sahf
    jbe    jump_4a950
    movl   $0x40000000,0x8(%esp)
  jump_4a950:
    fildl  0x4(%esp)
    fld    %st(0)
    fmuls  0x8(%esp)
    fstp   %st(1)
    call   func_76e98
    fistpl 0x4(%esp)
    mov    0x4(%esp),%eax
    add    $0xc,%esp
    pop    %edx
    ret

vtable_4a970:
    .long   func_4a9cf
    .long   func_4aa03
    .long   func_4aa0d
    .long   func_4aa16
    .long   func_4a9bb
    .long   func_4a9e8


/*----------------------------------------------------------------*/
func_4a988:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    0x15a(%eax),%edx
    xor    %ebx,%ebx
    xor    %esi,%esi
    test   %edx,%edx
    jle    jump_4aa45
    mov    %eax,%ecx
  jump_4a9a4:
    mov    0xaa(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    func_4a9bb
    cmpb   $0xff,0xab(%ecx)
    jne    jump_4aa1b


/*----------------------------------------------------------------*/
func_4a9bb:
/*----------------------------------------------------------------*/
    inc    %esi
    mov    0x15a(%edi),%ebp
    add    $0x7,%ecx
    cmp    %ebp,%esi
    jge    jump_4aa45
    jmp    jump_4a9a4


/*----------------------------------------------------------------*/
func_4a9cf:
/*----------------------------------------------------------------*/
    imul   $0xa,0x3e(%edx),%eax
    add    %eax,%ebx
    mov    0x3a(%edx),%eax
    mov    %eax,%edx
    mov    $0x5,%ebp
    sar    $0x1f,%edx
    idiv   %ebp
    add    %eax,%ebx
    jmp    func_4a9bb


/*----------------------------------------------------------------*/
func_4a9e8:
/*----------------------------------------------------------------*/
    mov    0x3e(%edx),%eax
    lea    (%eax,%eax,4),%eax
    add    %eax,%ebx
    mov    0x3a(%edx),%eax
    mov    %eax,%edx
    mov    $0x5,%ebp
    sar    $0x1f,%edx
    idiv   %ebp
    add    %eax,%ebx
    jmp    func_4a9bb


/*----------------------------------------------------------------*/
func_4aa03:
/*----------------------------------------------------------------*/
    mov    0x3e(%edx),%eax
    lea    (%eax,%eax,4),%eax
    add    %eax,%ebx
    jmp    func_4a9bb


/*----------------------------------------------------------------*/
func_4aa0d:
/*----------------------------------------------------------------*/
    mov    0x3e(%edx),%eax
    add    %eax,%eax
    add    %eax,%ebx
    jmp    func_4a9bb


/*----------------------------------------------------------------*/
func_4aa16:
/*----------------------------------------------------------------*/
    add    0x3e(%edx),%ebx
    jmp    func_4a9bb
  jump_4aa1b:
    mov    0xa8(%ecx),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    mov    $data_107020,%edx
    add    %eax,%edx
    add    0x46(%edx),%ebx
    mov    0x32(%edx),%al
    cmp    $0x5,%al
    ja     func_4a9bb
    and    $0xff,%eax
    jmp    *%cs:vtable_4a970(,%eax,4)
  jump_4aa45:
    mov    %edi,%eax
    call   func_4a8fc
    mov    %eax,%edx
    shl    $0x2,%eax
    add    %edx,%eax
    add    %eax,%eax
    add    %eax,%ebx
    mov    0x8c(%edi),%eax
    shl    $0x2,%eax
    add    %eax,%ebx
    mov    $0xa,%ecx
    mov    %ebx,%edx
    mov    %ebx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4aa78:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    test   %edx,%edx
    jne    jump_4aa94
    mov    $0x5b6,%ebx
    mov    $data_927cf,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4aa94:
    cmpb   $0x4,0x58(%ecx)
    je     jump_4aaab
    mov    $0x5b7,%ebx
    mov    $data_927db,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4aaab:
    mov    0x59(%ecx),%eax
    cmp    %eax,%esi
    jne    jump_4aab8
    xor    %eax,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4aab8:
    movb   $0x1,0x5d(%ecx)
    mov    %esi,0x5e(%ecx)
    mov    0x2(%eax),%ecx
    sar    $0x10,%ecx
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    add    %eax,%ecx
    mov    0x2(%esi),%eax
    shl    $0x2,%ecx
    sar    $0x10,%eax
    mov    data_d5d47(%ecx,%eax,1),%al
    and    $0xff,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4aaec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x204,%esp
    mov    %eax,0x1dc(%esp)
    mov    %edx,0x1f8(%esp)
    xor    %edx,%edx
    mov    %edx,0x1e0(%esp)
    cmpb   $0x4,0x58(%eax)
    jne    jump_4ae24
    mov    %esp,%edx
    mov    0x59(%eax),%eax
    call   func_1d794
    test   %eax,%eax
    jg     jump_4ab3e
    jmp    jump_4acd8
  jump_4ab2b:
    mov    0x1e8(%esp),%ebx
    add    $0x4,%ebp
    cmp    %ebx,%ebp
    jl     jump_4ab5e
    jmp    jump_4acd8
  jump_4ab3e:
    mov    0x1dc(%esp),%edx
    shl    $0x2,%eax
    xor    %ebp,%ebp
    add    $0x9e,%edx
    mov    %eax,0x1e8(%esp)
    mov    %edx,0x1fc(%esp)
  jump_4ab5e:
    mov    (%esp,%ebp,1),%eax
    mov    0x54(%eax),%edx
    mov    0x1f8(%esp),%ecx
    sar    $0x10,%edx
    cmp    %ecx,%edx
    jne    jump_4ab2b
    cmpb   $0x4,0x58(%eax)
    jne    jump_4ab2b
    lea    0x1c4(%esp),%edx
    xor    %esi,%esi
    mov    %edx,0x1e4(%esp)
    mov    %esi,0x1ac(%esp)
    mov    0x1fc(%esp),%edx
    mov    %esi,0x1b0(%esp)
    mov    %esi,0x1b4(%esp)
    flds   (%edx)
    fsubs  0x9e(%eax)
    fstps  0x1ac(%esp)
    flds   0x4(%edx)
    fsubs  0xa2(%eax)
    fstps  0x1b0(%esp)
    flds   0x8(%edx)
    fsubs  0xa6(%eax)
    add    $0x9e,%eax
    fstps  0x1b4(%esp)
    mov    0x1ac(%esp),%eax
    flds   0x1b0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c4(%esp)
    mov    0x1b0(%esp),%eax
    flds   0x1ac(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c8(%esp)
    faddp  %st,%st(1)
    mov    0x1b4(%esp),%eax
    flds   0x1b4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1cc(%esp)
    sub    $0x8,%esp
    faddp  %st,%st(1)
    mov    %ebp,%edi
    fstpl  (%esp)
    xor    %ecx,%ecx
    call   func_76e30
    mov    (%esp,%ebp,1),%edx
    fstps  0x200(%esp)
    add    $0xab,%edx
    jmp    jump_4ac46
  jump_4ac42:
    inc    %ecx
    add    $0x7,%edx
  jump_4ac46:
    mov    (%esp,%edi,1),%eax
    cmp    0x15a(%eax),%ecx
    jge    jump_4ac92
    mov    (%edx),%bl
    cmp    $0xff,%bl
    je     jump_4ac42
    movsbl %bl,%ebx
    imul   $0x6a,%ebx,%ebx
    cmpb   $0x3,data_107052(%ebx)
    jne    jump_4ac42
    mov    data_10705a(%ebx),%eax
    shl    $0x5,%eax
    mov    %eax,0x1ec(%esp)
    fildl  0x1ec(%esp)
    fcomps 0x200(%esp)
    fnstsw %ax
    sahf
    jb     jump_4ac42
    add    data_107082(%ebx),%esi
    jmp    jump_4ac42
  jump_4ac92:
    test   %esi,%esi
    jle    jump_4ab2b
    mov    0x1dc(%esp),%edx
    mov    0x24(%edx),%edx
    add    %edx,%edx
    cmp    %edx,%esi
    jle    jump_4ab2b
    mov    $0x29,%edx
    mov    $0x1,%ecx
    call   func_4937c
    mov    %ecx,0x1e0(%esp)
    cmp    $0xffffffff,%eax
    je     jump_4ab2b
    movl   $0x2,0x1e0(%esp)
  jump_4acd8:
    cmpl   $0x0,0x1e0(%esp)
    jne    jump_4ae24
    mov    0x1dc(%esp),%esi
    xor    %edi,%edi
    xor    %ecx,%ecx
    add    $0x9e,%esi
    mov    $0x10,%ebp
    jmp    jump_4ad02
  jump_4acfe:
    add    $0x4,%ecx
    inc    %edi
  jump_4ad02:
    mov    0x1dc(%esp),%eax
    mov    0x59(%eax),%eax
    mov    0x58(%eax),%edx
    sar    $0x10,%edx
    cmp    %edx,%edi
    jge    jump_4ae24
    mov    0x46(%ecx,%eax,1),%ebx
    xor    %eax,%eax
    mov    0x1f8(%esp),%edx
    mov    0x57(%ebx),%al
    cmp    %edx,%eax
    jne    jump_4acfe
    lea    0x1d0(%esp),%eax
    mov    %eax,0x1f0(%esp)
    xor    %eax,%eax
    mov    %eax,0x1b8(%esp)
    mov    %eax,0x1bc(%esp)
    mov    %eax,0x1c0(%esp)
    flds   (%esi)
    fsubs  (%ebx)
    fstps  0x1b8(%esp)
    flds   0x4(%esi)
    fsubs  0x4(%ebx)
    fstps  0x1bc(%esp)
    flds   0x8(%esi)
    fsubs  0x8(%ebx)
    mov    0x1b8(%esp),%eax
    fstps  0x1c0(%esp)
    flds   0x1bc(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1d0(%esp)
    mov    0x1bc(%esp),%eax
    flds   0x1b8(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1d4(%esp)
    faddp  %st,%st(1)
    mov    0x1c0(%esp),%eax
    flds   0x1c0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1d8(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    mov    %ebp,%edx
    call   func_76e30
    mov    %ebx,%eax
    fstps  0x1f4(%esp)
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_4acfe
    mov    0x10(%ebx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_4acfe
    flds   0x1f4(%esp)
    fcomps data_927e7
    fnstsw %ax
    sahf
    jae    jump_4acfe
    movl   $0x1,0x1e0(%esp)
  jump_4ae24:
    mov    0x1e0(%esp),%eax
    add    $0x204,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret

vtable_4ae38:
    .long   func_4aec3
    .long   func_4aecf
    .long   func_4aeed
    .long   func_4aeed
    .long   func_4af0b
    .long   func_4af0b
    .long   func_4af0b
    .long   func_4aec3

vtable_4ae58:
    .long   func_4b28e
    .long   func_4b281
    .long   func_4b2a8
    .long   func_4b2a8
    .long   func_4b2c3
    .long   func_4b2c3
    .long   func_4b2c3
    .long   func_4b28e

vtable_4ae78:
    .long   func_4b535
    .long   func_4b535
    .long   func_4b4ce
    .long   func_4b4bc
    .long   func_4b503


/*----------------------------------------------------------------*/
func_4ae8c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3ac,%esp
    mov    %eax,%ebp
    mov    %edx,0x3a8(%esp)
    add    $0xab,%eax
    mov    %eax,0x3a0(%esp)
    mov    %ebp,%eax
    add    $0x9e,%eax
    mov    %eax,0x3a4(%esp)
    cmp    $0xffffffff,%ebx
    je     jump_4af37
    jmp    jump_4b2e9


/*----------------------------------------------------------------*/
func_4aec3:
/*----------------------------------------------------------------*/
    movl   $0x0,0x5e(%ebp)
    jmp    jump_4b1f2


/*----------------------------------------------------------------*/
func_4aecf:
/*----------------------------------------------------------------*/
    mov    0x5e(%ebp),%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $data_a3d21,%edx
    shl    $0x5,%eax
    add    %eax,%edx
    mov    %edx,0x5e(%ebp)
    jmp    jump_4b1f2


/*----------------------------------------------------------------*/
func_4aeed:
/*----------------------------------------------------------------*/
    mov    0x5e(%ebp),%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    sub    %edx,%eax
    mov    $data_bb1b3,%edx
    add    %eax,%edx
    mov    %edx,0x5e(%ebp)
    jmp    jump_4b1f2


/*----------------------------------------------------------------*/
func_4af0b:
/*----------------------------------------------------------------*/
    mov    $0x642,%ebx
    mov    $data_927eb,%edx
    xor    %eax,%eax
    call   func_261a8
    jmp    jump_4b1f2
  jump_4af21:
    mov    $0x647,%ebx
    mov    $data_927f7,%edx
    xor    %eax,%eax
    call   func_261a8
    jmp    jump_4b1f2
  jump_4af37:
    lea    0x164(%esp),%eax
    mov    $0x162,%ebx
    lea    0x164(%esp),%edx
    call   func_48b90
    mov    0x3a8(%esp),%eax
    call   func_1bf94
    mov    0x164(%esp),%eax
    mov    %eax,0x0(%ebp)
    mov    0x168(%esp),%eax
    mov    %eax,0x4(%ebp)
    mov    0x16c(%esp),%eax
    mov    %eax,0x8(%ebp)
    mov    0x170(%esp),%eax
    mov    %eax,0xc(%ebp)
    mov    0x174(%esp),%eax
    mov    %eax,0x10(%ebp)
    mov    0x178(%esp),%eax
    mov    %eax,0x14(%ebp)
    mov    0x17c(%esp),%eax
    mov    %eax,0x18(%ebp)
    mov    0x180(%esp),%eax
    mov    %eax,0x1c(%ebp)
    mov    0x184(%esp),%eax
    mov    %eax,0x20(%ebp)
    mov    0x188(%esp),%eax
    mov    %eax,0x24(%ebp)
    mov    0x18c(%esp),%eax
    mov    %eax,0x28(%ebp)
    mov    0x190(%esp),%eax
    mov    $0x7,%ecx
    mov    %eax,0x2c(%ebp)
    lea    0x198(%esp),%esi
    mov    0x194(%esp),%eax
    lea    0x34(%ebp),%edi
    mov    %eax,0x30(%ebp)
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x1b6(%esp),%eax
    mov    %eax,0x52(%ebp)
    mov    0x1ba(%esp),%eax
    mov    %ax,0x56(%ebp)
    mov    0x1bc(%esp),%al
    mov    %al,0x58(%ebp)
    mov    0x1bd(%esp),%eax
    mov    %eax,0x59(%ebp)
    mov    0x1c1(%esp),%al
    mov    %al,0x5d(%ebp)
    mov    0x1c2(%esp),%eax
    mov    %eax,0x5e(%ebp)
    mov    0x1c6(%esp),%al
    mov    %al,0x62(%ebp)
    mov    0x1c7(%esp),%eax
    mov    %eax,0x63(%ebp)
    mov    0x1cb(%esp),%al
    mov    %al,0x67(%ebp)
    mov    0x1cc(%esp),%eax
    mov    %eax,0x68(%ebp)
    lea    0x6c(%ebp),%edx
    mov    0x1d0(%esp),%eax
    mov    %eax,(%edx)
    mov    0x1d4(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x1d8(%esp),%eax
    mov    %eax,0x8(%edx)
    lea    0x78(%ebp),%edx
    mov    0x1dc(%esp),%eax
    mov    %eax,(%edx)
    mov    0x1e0(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x1e4(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x1e8(%esp),%eax
    mov    %eax,0x84(%ebp)
    mov    0x1ec(%esp),%eax
    mov    %eax,0x88(%ebp)
    mov    0x1f0(%esp),%eax
    mov    %eax,0x8c(%ebp)
    mov    0x1f4(%esp),%eax
    mov    %eax,0x90(%ebp)
    mov    0x1f8(%esp),%eax
    mov    %eax,0x94(%ebp)
    mov    0x1fc(%esp),%eax
    mov    %eax,0x98(%ebp)
    mov    0x200(%esp),%eax
    mov    %ax,0x9c(%ebp)
    mov    0x3a4(%esp),%edx
    mov    0x202(%esp),%eax
    mov    %eax,(%edx)
    mov    0x206(%esp),%eax
    mov    %eax,0x4(%edx)
    push   $func_4b780
    mov    0x20e(%esp),%eax
    mov    $0x19,%ebx
    mov    %eax,0x8(%edx)
    mov    $0x7,%ecx
    mov    0x212(%esp),%al
    lea    0x213(%esp),%edx
    mov    %al,0xaa(%ebp)
    mov    0x3a4(%esp),%eax
    call   func_78b30
    mov    0x2be(%esp),%eax
    mov    %eax,0x15a(%ebp)
    mov    0x2c2(%esp),%eax
    mov    %eax,0x15e(%ebp)
    mov    0x5d(%ebp),%al
    cmp    $0x7,%al
    ja     jump_4af21
    and    $0xff,%eax
    jmp    *%cs:vtable_4ae38(,%eax,4)
  jump_4b176:
    jne    jump_4b196
    mov    0x59(%ebp),%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $data_a3d21,%edx
    shl    $0x5,%eax
    add    %eax,%edx
    mov    %edx,0x59(%ebp)
    jmp    jump_4b26d
  jump_4b196:
    mov    0x59(%ebp),%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    sub    %edx,%eax
    mov    $data_bb1b3,%edx
    add    %eax,%edx
    mov    %edx,0x59(%ebp)
    lea    0x164(%esp),%eax
    xor    %edx,%edx
    add    $0x3ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_4b1c3:
    mov    0x59(%ebp),%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    $data_a62a3,%edx
    add    %eax,%edx
    mov    %edx,0x59(%ebp)
    lea    0x164(%esp),%eax
    xor    %edx,%edx
    add    $0x3ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_4b1f2:
    mov    0x58(%ebp),%al
    cmp    $0x3,%al
    jb     jump_4b264
    cmp    $0x4,%al
    jbe    jump_4b176
    cmp    $0x5,%al
    je     jump_4b1c3
  jump_4b205:
    mov    $0x1a,%ecx
    lea    0x334(%esp),%edi
    mov    $data_969e8,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    mov    0x55(%ebp),%edx
    sar    $0x18,%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    lea    0x334(%esp),%eax
    add    %edx,%eax
    push   %eax
    push   $data_92803
    mov    $0x67a,%ebx
    call   func_2620c
    add    $0x8,%esp
    mov    $data_9281a,%edx
    xor    %eax,%eax
    call   func_261b8
    lea    0x164(%esp),%eax
    xor    %edx,%edx
    add    $0x3ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_4b264:
    cmp    $0x1,%al
    jb     jump_4b205
    jmp    jump_4b196
  jump_4b26d:
    lea    0x164(%esp),%eax
    xor    %edx,%edx
    add    $0x3ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4b281:
/*----------------------------------------------------------------*/
    mov    0x5e(%ebp),%eax
    mov    0x2(%eax),%eax
    sar    $0x10,%eax
    mov    %eax,0x5e(%esp)


/*----------------------------------------------------------------*/
func_4b28e:
/*----------------------------------------------------------------*/
    mov    0x58(%ebp),%al
    dec    %al
    cmp    $0x4,%al
    ja     jump_4b550
    and    $0xff,%eax
    jmp    *%cs:vtable_4ae78(,%eax,4)


/*----------------------------------------------------------------*/
func_4b2a8:
/*----------------------------------------------------------------*/
    mov    0x5e(%ebp),%edx
    sub    $data_bb1b3,%edx
    mov    $0x7b,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0x5e(%esp)
    jmp    func_4b28e


/*----------------------------------------------------------------*/
func_4b2c3:
/*----------------------------------------------------------------*/
    mov    $0x6a7,%ebx
    mov    $data_92826,%edx
    xor    %eax,%eax
    call   func_261a8
    jmp    func_4b28e
  jump_4b2d6:
    mov    $0x6ac,%ebx
    mov    $data_92832,%edx
    xor    %eax,%eax
    call   func_261a8
    jmp    func_4b28e
  jump_4b2e9:
    mov    0x0(%ebp),%eax
    mov    %eax,(%esp)
    mov    0x4(%ebp),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%ebp),%eax
    mov    %eax,0x8(%esp)
    mov    0xc(%ebp),%eax
    mov    %eax,0xc(%esp)
    mov    0x10(%ebp),%eax
    mov    %eax,0x10(%esp)
    mov    0x14(%ebp),%eax
    mov    %eax,0x14(%esp)
    mov    0x18(%ebp),%eax
    mov    %eax,0x18(%esp)
    mov    0x1c(%ebp),%eax
    mov    %eax,0x1c(%esp)
    mov    0x20(%ebp),%eax
    mov    %eax,0x20(%esp)
    mov    0x24(%ebp),%eax
    mov    %eax,0x24(%esp)
    mov    0x28(%ebp),%eax
    mov    %eax,0x28(%esp)
    mov    0x2c(%ebp),%eax
    mov    %eax,0x2c(%esp)
    mov    0x30(%ebp),%eax
    mov    $0x7,%ecx
    mov    %eax,0x30(%esp)
    lea    0x34(%esp),%edi
    lea    0x34(%ebp),%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x52(%ebp),%eax
    mov    %eax,0x52(%esp)
    mov    0x56(%ebp),%ax
    mov    %ax,0x56(%esp)
    mov    0x58(%ebp),%al
    lea    0x59(%ebp),%edx
    mov    %al,0x58(%esp)
    mov    (%edx),%eax
    lea    0x5d(%ebp),%edx
    mov    %eax,0x59(%esp)
    mov    (%edx),%al
    mov    %al,0x5d(%esp)
    mov    0x1(%edx),%eax
    lea    0x62(%ebp),%edx
    mov    %eax,0x5e(%esp)
    mov    (%edx),%al
    mov    %al,0x62(%esp)
    mov    0x1(%edx),%eax
    mov    %eax,0x63(%esp)
    mov    0x5(%edx),%al
    lea    0x6(%edx),%ebx
    mov    %al,0x67(%esp)
    mov    (%ebx),%eax
    lea    0xa(%edx),%ebx
    mov    %eax,0x68(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x6c(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x70(%esp)
    mov    0x8(%ebx),%eax
    lea    0x16(%edx),%ebx
    mov    %eax,0x74(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x78(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x7c(%esp)
    mov    0x8(%ebx),%eax
    mov    %eax,0x80(%esp)
    mov    0x22(%edx),%eax
    mov    %eax,0x84(%esp)
    mov    0x88(%ebp),%eax
    mov    %eax,0x88(%esp)
    mov    0x8c(%ebp),%eax
    mov    %eax,0x8c(%esp)
    mov    0x90(%ebp),%eax
    mov    %eax,0x90(%esp)
    mov    0x94(%ebp),%eax
    mov    %eax,0x94(%esp)
    mov    0x98(%ebp),%eax
    mov    %eax,0x98(%esp)
    mov    0x9c(%ebp),%ax
    mov    %ax,0x9c(%esp)
    mov    0x3a4(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x9e(%esp)
    mov    0x3a4(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0xa2(%esp)
    mov    0x3a4(%esp),%eax
    mov    0x8(%eax),%eax
    mov    $data_96038,%ecx
    mov    %eax,0xa6(%esp)
    mov    $0x19,%ebx
    mov    0xaa(%ebp),%al
    mov    0x3a0(%esp),%edx
    mov    %al,0xaa(%esp)
    lea    0xab(%esp),%eax
    call   func_78b54
    mov    0x15a(%ebp),%eax
    mov    %eax,0x15a(%esp)
    mov    0x15e(%ebp),%eax
    mov    %eax,0x15e(%esp)
    mov    0x5d(%ebp),%al
    cmp    $0x7,%al
    ja     jump_4b2d6
    and    $0xff,%eax
    jmp    *%cs:vtable_4ae58(,%eax,4)


/*----------------------------------------------------------------*/
func_4b4bc:
/*----------------------------------------------------------------*/
    mov    0x59(%ebp),%eax
    mov    0x2(%eax),%eax
    sar    $0x10,%eax
    mov    %eax,0x59(%esp)
    jmp    jump_4b59b


/*----------------------------------------------------------------*/
func_4b4ce:
/*----------------------------------------------------------------*/
    mov    0x59(%ebp),%ebp
    test   %ebp,%ebp
    jne    jump_4b4e6
    mov    $0x6c0,%ebx
    mov    $data_9283e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4b4e6:
    mov    %ebp,%edx
    sub    $data_bb1b3,%edx
    mov    $0x7b,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0x59(%esp)
    jmp    jump_4b59b


/*----------------------------------------------------------------*/
func_4b503:
/*----------------------------------------------------------------*/
    mov    0x59(%ebp),%ebp
    test   %ebp,%ebp
    jne    jump_4b51b
    mov    $0x6cf,%ebx
    mov    $data_9284a,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4b51b:
    mov    %ebp,%edx
    sub    $data_a62a3,%edx
    mov    $0x27,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0x59(%esp)
    jmp    jump_4b59b


/*----------------------------------------------------------------*/
func_4b535:
/*----------------------------------------------------------------*/
    mov    0x59(%ebp),%edx
    sub    $data_bb1b3,%edx
    mov    $0x7b,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0x59(%esp)
    jmp    jump_4b59b
  jump_4b550:
    mov    $0x1a,%ecx
    lea    0x2c8(%esp),%edi
    mov    $data_96a54,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    mov    0x55(%ebp),%edx
    sar    $0x18,%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    lea    0x2c8(%esp),%eax
    add    %edx,%eax
    push   %eax
    push   $data_92856
    mov    $0x6ee,%ebx
    call   func_2620c
    add    $0x8,%esp
    mov    $data_9286d,%edx
    xor    %eax,%eax
    call   func_261b8
  jump_4b59b:
    mov    $0x162,%ebx
    mov    %esp,%edx
    mov    0x3a8(%esp),%eax
    call   func_1c098
    mov    %esp,%eax
    xor    %edx,%edx
    add    $0x3ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4b5c0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    (%edx),%bl
    mov    %bl,(%eax)
    mov    0x1(%edx),%bx
    mov    %bx,0x1(%eax)
    mov    0x3(%edx),%edx
    mov    %edx,0x3(%eax)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4b5e0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %edx,%ebp
    mov    (%edx),%edx
    mov    %edx,(%eax)
    mov    0x4(%ebp),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ebp),%edx
    mov    %edx,0x8(%eax)
    mov    0xc(%ebp),%edx
    mov    %edx,0xc(%eax)
    mov    0x10(%ebp),%edx
    mov    %edx,0x10(%eax)
    mov    0x14(%ebp),%edx
    mov    %edx,0x14(%eax)
    mov    0x18(%ebp),%edx
    mov    %edx,0x18(%eax)
    mov    0x1c(%ebp),%edx
    mov    %edx,0x1c(%eax)
    mov    0x20(%ebp),%edx
    mov    %edx,0x20(%eax)
    mov    0x24(%ebp),%edx
    mov    %edx,0x24(%eax)
    mov    0x28(%ebp),%edx
    mov    %edx,0x28(%eax)
    mov    0x2c(%ebp),%edx
    mov    %edx,0x2c(%eax)
    mov    0x30(%ebp),%edx
    mov    %edx,0x30(%eax)
    mov    $0x7,%ecx
    lea    0x34(%eax),%edi
    lea    0x34(%ebp),%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x52(%ebp),%edx
    mov    %edx,0x52(%eax)
    mov    0x56(%ebp),%dx
    mov    %dx,0x56(%eax)
    mov    0x58(%ebp),%dl
    mov    %dl,0x58(%eax)
    lea    0x59(%ebp),%edx
    mov    (%edx),%ebx
    lea    0x5d(%ebp),%edx
    mov    %ebx,0x59(%eax)
    add    $0x59,%eax
    mov    (%edx),%bl
    mov    %bl,0x4(%eax)
    add    $0x4,%eax
    mov    0x1(%edx),%edx
    mov    %edx,0x1(%eax)
    lea    0x5(%eax),%edx
    lea    0x62(%ebp),%eax
    mov    (%eax),%bl
    mov    %bl,(%edx)
    add    $0x6,%edx
    mov    0x1(%eax),%ebx
    mov    %ebx,-0x5(%edx)
    add    $0x4,%edx
    mov    0x5(%eax),%bl
    mov    %bl,-0x5(%edx)
    lea    0x6(%eax),%ebx
    add    $0xc,%edx
    mov    (%ebx),%ecx
    lea    0xa(%eax),%ebx
    mov    %ecx,-0x10(%edx)
    sub    $0x16,%edx
    mov    (%ebx),%ecx
    mov    %ecx,0xa(%edx)
    mov    0x4(%ebx),%ecx
    mov    %ecx,0xe(%edx)
    flds   0x8(%ebx)
    lea    0x16(%eax),%ebx
    fstps  0x12(%edx)
    mov    (%ebx),%ecx
    mov    %ecx,0x16(%edx)
    mov    0x4(%ebx),%ecx
    mov    %ecx,0x1a(%edx)
    mov    0x8(%ebx),%ecx
    mov    %ecx,0x1e(%edx)
    mov    0x22(%eax),%eax
    mov    %eax,0x22(%edx)
    lea    -0x62(%edx),%eax
    mov    0x88(%ebp),%edx
    mov    %edx,0x88(%eax)
    mov    0x8c(%ebp),%edx
    mov    %edx,0x8c(%eax)
    mov    0x90(%ebp),%edx
    mov    %edx,0x90(%eax)
    mov    0x94(%ebp),%edx
    mov    %edx,0x94(%eax)
    mov    0x98(%ebp),%edx
    mov    %edx,0x98(%eax)
    mov    0x9c(%ebp),%dx
    mov    %dx,0x9c(%eax)
    lea    0x9e(%ebp),%edx
    add    $0x9e,%eax
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
    mov    $data_96038,%ecx
    sub    $0x9e,%eax
    mov    0xaa(%ebp),%dl
    mov    $0x19,%ebx
    mov    %dl,0xaa(%eax)
    add    $0xab,%eax
    lea    0xab(%ebp),%edx
    call   func_78b54
    mov    0x15a(%ebp),%edx
    mov    %edx,0xaf(%eax)
    sub    $0xab,%eax
    mov    0x15e(%ebp),%edx
    mov    %edx,0x15e(%eax)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4b780:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    (%edx),%bl
    mov    %bl,(%eax)
    mov    0x1(%edx),%bx
    mov    %bx,0x1(%eax)
    mov    0x3(%edx),%edx
    mov    %edx,0x3(%eax)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4b7a0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    mov    %edx,0x8(%esp)
    mov    %ebx,(%esp)
    mov    %cx,0x10(%esp)
    mov    0xe(%esp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    %edx,0xc(%esp)
    test   %eax,%eax
    jl     jump_4b7ce
    cmp    data_a3cf4,%cx
    jl     jump_4b7df
  jump_4b7ce:
    mov    $0x2f,%ebx
    mov    $data_9287c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4b7df:
    mov    0x54(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_4b7f6
    mov    data_a3cf4,%bx
    cmp    0x56(%esi),%bx
    jg     jump_4b807
  jump_4b7f6:
    mov    $0x30,%ebx
    mov    $data_9288b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4b807:
    mov    0x9c(%esi),%ax
    xor    %ah,%ah
    and    $0x10,%al
    mov    (%esp),%edi
    cwtl
    xor    %ebp,%ebp
    test   %eax,%eax
    je     jump_4b81e
    xor    %edi,%edi
  jump_4b81e:
    mov    0x90(%esi),%ebx
    cmp    %ebx,%edi
    jle    jump_4b83a
    mov    (%esp),%ebp
    mov    0xc(%esp),%ah
    mov    %ebx,%edi
    or     $0x2,%ah
    sub    %ebx,%ebp
    mov    %ah,0xc(%esp)
  jump_4b83a:
    mov    0x8c(%esi),%ecx
    cmp    %ecx,%ebp
    jl     jump_4b851
    mov    0xc(%esp),%dl
    or     $0x4,%dl
    mov    %ecx,%ebp
    mov    %dl,0xc(%esp)
  jump_4b851:
    cmpl   $0x1,0x8(%esp)
    jne    jump_4b938
    mov    0x58(%esi),%dh
    xor    %ecx,%ecx
    cmp    $0x4,%dh
    jne    jump_4b86b
    mov    0x59(%esi),%ecx
    jmp    jump_4b896
  jump_4b86b:
    cmp    $0x3,%dh
    je     jump_4b87a
    cmp    $0x1,%dh
    je     jump_4b87a
    cmp    $0x2,%dh
    jne    jump_4b896
  jump_4b87a:
    mov    0x59(%esi),%eax
    mov    0xa(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $data_a3d21,%ecx
    shl    $0x5,%eax
    add    %eax,%ecx
  jump_4b896:
    test   %ecx,%ecx
    jne    jump_4b8ab
    mov    $0x53,%ebx
    mov    $data_9289a,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4b8ab:
    mov    0xe(%esp),%eax
    mov    0x54(%esi),%edx
    sar    $0x10,%eax
    sar    $0x10,%edx
    mov    %eax,0x4(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    %ecx,%ebx
    add    %eax,%eax
    mov    0x4(%esp),%edx
    add    $data_a2f72,%eax
    call   func_433e0
    mov    0x90(%esi),%edx
    mov    0x8c(%esi),%ebx
    sub    %edi,%edx
    sub    %ebp,%ebx
    mov    %edx,0x90(%esi)
    mov    %ebx,0x8c(%esi)
    cmp    $0x1,%ebx
    jge    jump_4b938
    mov    %esi,%eax
    mov    0xa7(%esi),%ebx
    mov    0x54(%esi),%edx
    call   func_49940
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    data_104bea,%al
    sar    $0x18,%ebx
    cmp    %eax,%edx
    jne    jump_4b938
    mov    data_10f096,%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    je     jump_4b938
    mov    $0xc,%edx
    mov    $data_10ae70,%eax
    call   func_55aec
  jump_4b938:
    mov    0xc(%esp),%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4b944:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x50c,%esp
    mov    %eax,%ebp
    mov    %edx,0x4cc(%esp)
    mov    $0xffffffff,%ebx
    xor    %edx,%edx
    mov    0x63(%eax),%eax
    mov    %edx,0x4e0(%esp)
    mov    %ebx,0x4c8(%esp)
    mov    %ebx,%ecx
    mov    (%eax),%al
    mov    %edx,0x4d0(%esp)
    mov    %al,0x504(%esp)
    cmp    $0xff,%al
    jne    jump_4b997
    mov    $0xa2,%ebx
    mov    $data_928a9,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4b997:
    mov    0x501(%esp),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    mov    $data_107020,%edi
    add    %eax,%edi
    mov    0x88(%ebp),%edx
    mov    0x36(%edi),%eax
    cmp    %edx,%eax
    jg     jump_4b9c1
    mov    %eax,0x4d0(%esp)
    jmp    jump_4b9ca
  jump_4b9c1:
    xor    %ebx,%ebx
    mov    %ebx,0x4c8(%esp)
  jump_4b9ca:
    mov    0x68(%ebp),%esi
    test   %esi,%esi
    jne    jump_4b9e2
    mov    $0xad,%ebx
    mov    $data_928b8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4b9e2:
    mov    0x58(%ebp),%dl
    cmp    $0x4,%dl
    jne    jump_4bb35
    cmp    0x58(%esi),%dl
    jne    jump_4bb35
    mov    0x59(%ebp),%eax
    cmp    0x59(%esi),%eax
    jne    jump_4bb35
    cmpl   $0x0,0x3a(%edi)
    je     jump_4bb37
    lea    0x440(%esp),%ebx
    mov    %ebx,0x4a0(%esp)
    xor    %ebx,%ebx
    lea    0x9e(%esi),%eax
    mov    %ebx,0x464(%esp)
    mov    %ebx,0x468(%esp)
    mov    %ebx,0x46c(%esp)
    lea    0x9e(%ebp),%edx
    flds   (%eax)
    fsubs  (%edx)
    fstps  0x464(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%edx)
    fstps  0x468(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%edx)
    mov    0x464(%esp),%eax
    fstps  0x46c(%esp)
    flds   0x468(%esp)
    fmul   %st(0),%st
    mov    %eax,0x440(%esp)
    mov    0x468(%esp),%eax
    flds   0x464(%esp)
    fmul   %st(0),%st
    mov    %eax,0x444(%esp)
    faddp  %st,%st(1)
    mov    0x46c(%esp),%eax
    flds   0x46c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x448(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    0x3a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x500(%esp)
    mov    0x9c(%ebp),%ax
    xor    %ah,%ah
    fstps  0x4d4(%esp)
    and    $0x4,%al
    fildl  0x500(%esp)
    cwtl
    fstps  0x4dc(%esp)
    test   %eax,%eax
    je     jump_4bafd
    flds   0x4dc(%esp)
    fmuls  data_928c7
    fstps  0x4dc(%esp)
  jump_4bafd:
    flds   0x4d4(%esp)
    fcomps 0x4dc(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4bb12
    xor    %ecx,%ecx
  jump_4bb12:
    cmpb   $0x2f,0x504(%esp)
    jne    jump_4bb37
    flds   0x4dc(%esp)
    fmull  data_928cb
    fcomps 0x4d4(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4bb37
  jump_4bb35:
    xor    %ecx,%ecx
  jump_4bb37:
    cmpl   $0x0,0x4c8(%esp)
    je     jump_4bb5d
    test   %ecx,%ecx
    je     jump_4bb5d
    cmp    %ebp,%esi
    je     jump_4bb5d
    mov    0x33(%edi),%ax
    xor    %ah,%ah
    and    $0x1,%al
    cwtl
    test   %eax,%eax
    je     jump_4bb5d
    mov    $0x1,%eax
    jmp    jump_4bb5f
  jump_4bb5d:
    xor    %eax,%eax
  jump_4bb5f:
    or     %eax,0x4e0(%esp)
    testb  $0x1,0x4e0(%esp)
    je     jump_4c7e9
    lea    0x9e(%esi),%edx
    lea    0x78(%ebp),%eax
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
    mov    0x32(%edi),%cl
    xor    %ebx,%ebx
    test   %cl,%cl
    jne    jump_4bb99
    mov    0x52(%edi),%ebx
  jump_4bb99:
    cmpb   $0x2f,0x504(%esp)
    jne    jump_4bba6
    mov    0x4a(%edi),%ebx
  jump_4bba6:
    test   %ebx,%ebx
    je     jump_4bbc7
    mov    0x4cc(%esp),%edx
    mov    0x54(%ebp),%ecx
    mov    %esi,%eax
    sar    $0x10,%ecx
    call   func_4b7a0
    or     %eax,0x4e0(%esp)
    jmp    jump_4bbcf
  jump_4bbc7:
    orb    $0x10,0x4e0(%esp)
  jump_4bbcf:
    cmpl   $0x1,0x4cc(%esp)
    je     jump_4c67d
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4bbf0:
    mov    data_a2f6c,%eax
    mov    %eax,0x52(%esi)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4bc0b:
    lea    0x3bc(%esp),%edx
    mov    %edx,0x4a8(%esp)
    xor    %edx,%edx
    lea    0x9e(%esi),%eax
    mov    %edx,0x434(%esp)
    mov    %edx,0x438(%esp)
    mov    %edx,0x43c(%esp)
    flds   (%eax)
    fsubs  0x9e(%ebp)
    fstps  0x434(%esp)
    flds   0x4(%eax)
    fsubs  0xa2(%ebp)
    fstps  0x438(%esp)
    flds   0x8(%eax)
    mov    0x434(%esp),%eax
    fsubs  0xa6(%ebp)
    mov    %eax,0x3bc(%esp)
    mov    0x438(%esp),%eax
    fstps  0x43c(%esp)
    mov    %eax,0x3c0(%esp)
    mov    0x43c(%esp),%eax
    mov    %eax,0x3c4(%esp)
    mov    0x4a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x500(%esp)
    xor    %ebx,%ebx
    fildl  0x500(%esp)
    sub    $0x4,%esp
    lea    0x3c0(%esp),%eax
    fstps  (%esp)
    lea    0x3f0(%esp),%edx
    call   func_53054
    lea    0x9e(%esi),%eax
    mov    %edx,0x4a4(%esp)
    mov    %ebx,0x47c(%esp)
    mov    %ebx,0x480(%esp)
    mov    %ebx,0x484(%esp)
    flds   (%eax)
    fadds  0x3bc(%esp)
    fstps  0x47c(%esp)
    flds   0x4(%eax)
    fadds  0x3c0(%esp)
    fstps  0x480(%esp)
    flds   0x8(%eax)
    mov    0x47c(%esp),%eax
    fadds  0x3c4(%esp)
    mov    %eax,0x3ec(%esp)
    mov    0x480(%esp),%eax
    fstps  0x484(%esp)
    mov    %eax,0x3f0(%esp)
    mov    0x484(%esp),%eax
    mov    %eax,0x3f4(%esp)
    mov    %edx,%eax
    add    $0x9e,%ebp
    lea    0x9e(%esi),%edx
    mov    (%eax),%ebx
    mov    %ebx,(%edx)
    mov    0x4(%eax),%ebx
    mov    %ebx,0x4(%edx)
    mov    0x8(%eax),%ebx
    mov    %ebx,0x8(%edx)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4bd6d:
    mov    (%edx),%eax
    mov    %eax,0x494(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x498(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x49c(%esp)
    mov    (%ebx),%eax
    mov    %eax,(%edx)
    mov    0x4(%ebx),%eax
    mov    %eax,0x4(%edx)
    mov    0x8(%ebx),%eax
    mov    %eax,0x8(%edx)
    mov    0x494(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x498(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x49c(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4bdca:
    lea    0x488(%esp),%eax
    mov    %eax,0x4c0(%esp)
    xor    %eax,%eax
    mov    %eax,0x3e0(%esp)
    mov    %eax,0x3e4(%esp)
    mov    %eax,0x3e8(%esp)
    flds   (%ebx)
    fsubs  (%edx)
    fstps  0x3e0(%esp)
    flds   0x4(%ebx)
    fsubs  0x4(%edx)
    fstps  0x3e4(%esp)
    flds   0x8(%ebx)
    fsubs  0x8(%edx)
    mov    0x3e0(%esp),%eax
    fstps  0x3e8(%esp)
    flds   0x3e4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x488(%esp)
    mov    0x3e4(%esp),%eax
    flds   0x3e0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x48c(%esp)
    faddp  %st,%st(1)
    mov    0x3e8(%esp),%eax
    flds   0x3e8(%esp)
    fmul   %st(0),%st
    mov    %eax,0x490(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    0x4a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x500(%esp)
    fildl  0x500(%esp)
    fsubrp %st,%st(1)
    fsts   0x4d8(%esp)
    fcomps data_928d3
    fnstsw %ax
    sahf
    jae    jump_4be9b
    movl   $0x42800000,0x4d8(%esp)
  jump_4be9b:
    lea    0x488(%esp),%eax
    push   0x4d8(%esp)
    call   func_53054
    xor    %ebx,%ebx
    lea    0x458(%esp),%eax
    mov    %ebx,0x44c(%esp)
    mov    %ebx,0x450(%esp)
    mov    %ebx,0x454(%esp)
    mov    %eax,0x4c4(%esp)
    flds   0x9e(%ebp)
    fadds  0x488(%esp)
    fstps  0x44c(%esp)
    flds   0xa2(%ebp)
    fadds  0x48c(%esp)
    mov    0x44c(%esp),%eax
    fstps  0x450(%esp)
    flds   0xa6(%ebp)
    mov    %eax,0x458(%esp)
    fadds  0x490(%esp)
    mov    0x450(%esp),%eax
    fstps  0x454(%esp)
    mov    %eax,0x45c(%esp)
    mov    0x454(%esp),%eax
    mov    %eax,0x460(%esp)
    mov    0x44c(%esp),%eax
    mov    %eax,0x9e(%esi)
    mov    0x45c(%esp),%eax
    mov    %eax,0xa2(%esi)
    add    $0x9e,%esi
    mov    0x460(%esp),%eax
    add    $0x9e,%ebp
    mov    %eax,0x8(%esi)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4bf7c:
    movl   $0x0,0x88(%esi)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4bf99:
    lea    0x1ac(%esp),%edx
    mov    0x59(%ebp),%eax
    call   func_1d794
    test   %eax,%eax
    jle    jump_4c7e9
    mov    %ebx,%ecx
    mov    %ebx,%ebp
    shl    $0x2,%eax
    xor    %edx,%edx
    mov    %eax,0x4e8(%esp)
  jump_4bfc0:
    mov    0x1ac(%esp,%edx,1),%ebx
    cmp    %ebx,%esi
    je     jump_4c1ae
    lea    0x9e(%ebx),%eax
    lea    0x41c(%esp),%ebx
    mov    %ebx,0x4ac(%esp)
    xor    %ebx,%ebx
    mov    %ebx,0x470(%esp)
    mov    %ebx,0x474(%esp)
    mov    %ebx,0x478(%esp)
    flds   (%eax)
    fsubs  0x0(%ebp)
    fstps  0x470(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%ebp)
    fstps  0x474(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%ebp)
    mov    0x470(%esp),%eax
    fstps  0x478(%esp)
    flds   0x474(%esp)
    fmul   %st(0),%st
    mov    %eax,0x41c(%esp)
    mov    0x474(%esp),%eax
    flds   0x470(%esp)
    fmul   %st(0),%st
    mov    %eax,0x420(%esp)
    faddp  %st,%st(1)
    mov    0x478(%esp),%eax
    flds   0x478(%esp)
    fmul   %st(0),%st
    mov    %eax,0x424(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    0x4e(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x500(%esp)
    fstps  0x4f0(%esp)
    fildl  0x500(%esp)
    fstps  0x4f4(%esp)
    flds   0x4f0(%esp)
    fcomps 0x4f4(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4c1ae
    mov    0x4a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x500(%esp)
    fildl  0x500(%esp)
    fsubrs 0x4f0(%esp)
    fsts   0x4f8(%esp)
    fcomps 0x4f4(%esp)
    fnstsw %ax
    sahf
    jae    jump_4c0e9
    mov    0x4f4(%esp),%eax
    mov    %eax,0x4f8(%esp)
  jump_4c0e9:
    lea    0x41c(%esp),%eax
    push   0x4f8(%esp)
    call   func_53054
    lea    0x3c8(%esp),%eax
    mov    %eax,0x4b4(%esp)
    xor    %eax,%eax
    mov    %eax,0x410(%esp)
    mov    %eax,0x414(%esp)
    mov    %eax,0x418(%esp)
    flds   (%ecx)
    fadds  0x41c(%esp)
    fstps  0x410(%esp)
    flds   0x4(%ecx)
    fadds  0x420(%esp)
    mov    0x410(%esp),%eax
    fstps  0x414(%esp)
    flds   0x8(%ecx)
    mov    %eax,0x3c8(%esp)
    fadds  0x424(%esp)
    mov    0x414(%esp),%eax
    fstps  0x418(%esp)
    mov    %eax,0x3cc(%esp)
    mov    0x418(%esp),%eax
    mov    0x1ac(%esp,%edx,1),%ebx
    mov    %eax,0x3d0(%esp)
    mov    0x410(%esp),%eax
    mov    %eax,0x9e(%ebx)
    mov    0x3cc(%esp),%eax
    mov    %eax,0xa2(%ebx)
    add    $0x9e,%ebx
    mov    0x3d0(%esp),%eax
    mov    %eax,0x8(%ebx)
  jump_4c1ae:
    mov    0x4e8(%esp),%eax
    add    $0x4,%edx
    cmp    %eax,%edx
    jge    jump_4c7e9
    jmp    jump_4bfc0
  jump_4c1c5:
    mov    0x98(%esi),%eax
    mov    0x8c(%esi),%edx
    mov    0x4a(%edi),%ebx
    sub    %edx,%eax
    cmp    %ebx,%eax
    jle    jump_4c1dc
    mov    %ebx,%eax
  jump_4c1dc:
    add    %eax,0x8c(%esi)
    mov    0x8c(%ebp),%esi
    sub    %eax,%esi
    mov    %esi,0x8c(%ebp)
    cmp    $0x1,%esi
    jge    jump_4c7e9
    mov    %ebp,%eax
    call   func_49940
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c213:
    mov    0x18(%esi),%eax
    sub    0x88(%esi),%eax
    cmp    %edx,%eax
    jle    jump_4c222
    mov    %edx,%eax
  jump_4c222:
    add    %eax,0x88(%esi)
    sub    %eax,0x88(%ebp)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c241:
    mov    %esp,%edx
    mov    0x59(%ebp),%eax
    call   func_1d794
    xor    %ebp,%ebp
    cmp    %eax,%ebp
    jge    jump_4c7e9
    lea    0x9e(%esi),%ebx
    shl    $0x2,%eax
    lea    0x0(,%ebp,4),%edx
    mov    %eax,0x4e4(%esp)
  jump_4c26c:
    mov    (%esp,%edx,1),%ecx
    cmp    %ecx,%esi
    je     jump_4c405
    lea    0x9e(%ecx),%eax
    lea    0x404(%esp),%ecx
    mov    %ecx,0x4b8(%esp)
    xor    %ecx,%ecx
    mov    %ecx,0x3f8(%esp)
    mov    %ecx,0x3fc(%esp)
    mov    %ecx,0x400(%esp)
    flds   (%eax)
    fsubs  (%ebx)
    fstps  0x3f8(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%ebx)
    fstps  0x3fc(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%ebx)
    mov    0x3f8(%esp),%eax
    fstps  0x400(%esp)
    flds   0x3fc(%esp)
    fmul   %st(0),%st
    mov    %eax,0x404(%esp)
    mov    0x3fc(%esp),%eax
    flds   0x3f8(%esp)
    fmul   %st(0),%st
    mov    %eax,0x408(%esp)
    faddp  %st,%st(1)
    mov    0x400(%esp),%eax
    flds   0x400(%esp)
    fmul   %st(0),%st
    mov    %eax,0x40c(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    0x4a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x500(%esp)
    fildl  0x500(%esp)
    fstps  0x4ec(%esp)
    fcomps 0x4ec(%esp)
    fnstsw %ax
    sahf
    jae    jump_4c405
    lea    0x404(%esp),%eax
    push   0x4ec(%esp)
    call   func_53054
    lea    0x3d4(%esp),%eax
    mov    %ecx,0x428(%esp)
    mov    %ecx,0x42c(%esp)
    mov    %ecx,0x430(%esp)
    mov    %eax,0x4b0(%esp)
    flds   (%ebx)
    fadds  0x404(%esp)
    fstps  0x428(%esp)
    flds   0x4(%ebx)
    fadds  0x408(%esp)
    mov    0x428(%esp),%eax
    fstps  0x42c(%esp)
    flds   0x8(%ebx)
    mov    %eax,0x3d4(%esp)
    fadds  0x40c(%esp)
    mov    0x42c(%esp),%eax
    fstps  0x430(%esp)
    mov    %eax,0x3d8(%esp)
    mov    0x430(%esp),%eax
    mov    (%esp,%edx,1),%ecx
    mov    %eax,0x3dc(%esp)
    mov    0x428(%esp),%eax
    mov    %eax,0x9e(%ecx)
    mov    0x3d8(%esp),%eax
    mov    %eax,0xa2(%ecx)
    add    $0x9e,%ecx
    mov    0x3dc(%esp),%eax
    mov    %eax,0x8(%ecx)
  jump_4c405:
    mov    0x4e4(%esp),%eax
    add    $0x4,%edx
    inc    %ebp
    cmp    %eax,%edx
    jge    jump_4c7e9
    jmp    jump_4c26c
  jump_4c41d:
    mov    0x15e(%esi),%ebx
    test   %ebx,%ebx
    je     jump_4c7e9
    mov    data_a2f6c,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x15a(%esi),%edi
    mov    %edx,%ebp
    xor    %eax,%eax
    xor    %edx,%edx
    test   %edi,%edi
    jg     jump_4c45b
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c45b:
    mov    %esi,%ebx
  jump_4c45d:
    cmpb   $0xff,0xab(%ebx)
    je     jump_4c487
    cmp    %ebp,%edx
    jne    jump_4c486
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_492f8
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c486:
    inc    %edx
  jump_4c487:
    inc    %eax
    mov    0x15a(%esi),%ecx
    add    $0x7,%ebx
    cmp    %ecx,%eax
    jl     jump_4c45d
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c4a8:
    mov    $0x5,%cl
    cmpb   $0x32,0x504(%esp)
    jne    jump_4c4b6
    xor    %cl,%cl
  jump_4c4b6:
    lea    0xab(%esi),%eax
    mov    0x15a(%esi),%ebx
    xor    %ebp,%ebp
    xor    %edx,%edx
    test   %ebx,%ebx
    jle    jump_4c4f2
    jmp    jump_4c4da
  jump_4c4cc:
    inc    %edx
    mov    0x15a(%esi),%edi
    add    $0x7,%eax
    cmp    %edi,%edx
    jge    jump_4c4f2
  jump_4c4da:
    mov    (%eax),%bl
    cmp    $0xff,%bl
    je     jump_4c4cc
    movsbl %bl,%ebx
    imul   $0x6a,%ebx,%ebx
    cmp    data_107052(%ebx),%cl
    jne    jump_4c4cc
    inc    %ebp
    jmp    jump_4c4cc
  jump_4c4f2:
    mov    0x8c(%esi),%eax
    sub    %ebp,%eax
    mov    %eax,0x8c(%esi)
    cmp    $0x1,%eax
    jge    jump_4c7e9
    mov    0x4e0(%esp),%ch
    mov    %esi,%eax
    or     $0x4,%ch
    call   func_49940
    mov    %ch,0x4e0(%esp)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c534:
    xor    %al,%al
    mov    %al,0x508(%esp)
    cmpb   $0x42,0x504(%esp)
    jne    jump_4c54f
    movb   $0x5,0x508(%esp)
  jump_4c54f:
    lea    0xab(%esi),%edx
    mov    0x15a(%esi),%ecx
    xor    %ebp,%ebp
    xor    %eax,%eax
    test   %ecx,%ecx
    jle    jump_4c59a
    xor    %ebx,%ebx
  jump_4c565:
    mov    (%edx),%cl
    cmp    $0xff,%cl
    je     jump_4c58c
    movsbl %cl,%ecx
    imul   $0x6a,%ecx,%ecx
    mov    data_107052(%ecx),%cl
    cmp    0x508(%esp),%cl
    jne    jump_4c58c
    add    $0x4,%ebx
    inc    %ebp
    mov    %eax,0x354(%esp,%ebx,1)
  jump_4c58c:
    inc    %eax
    mov    0x15a(%esi),%ecx
    add    $0x7,%edx
    cmp    %ecx,%eax
    jl     jump_4c565
  jump_4c59a:
    test   %ebp,%ebp
    je     jump_4c7e9
    mov    data_a2f6c,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebp
    mov    %esi,%eax
    mov    0x358(%esp,%edx,4),%edx
    call   func_492f8
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c5cf:
    mov    %esi,%eax
    call   func_49940
    lea    0xab(%ebp),%edx
    mov    0x63(%ebp),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x7,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x4e0(%esp),%bh
    mov    %eax,%edx
    mov    %ebp,%eax
    or     $0x4,%bh
    call   func_492f8
    mov    %bh,0x4e0(%esp)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c61a:
    mov    0x15a(%esi),%edi
    xor    %ebx,%ebx
    lea    0xab(%esi),%ecx
    jmp    jump_4c634
  jump_4c62a:
    inc    %ebx
    mov    0x15a(%esi),%edi
    add    $0x7,%ecx
  jump_4c634:
    cmp    %edi,%ebx
    jge    jump_4c7e9
    mov    (%ecx),%al
    cmp    $0x47,%al
    je     jump_4c646
    cmp    $0x49,%al
    jne    jump_4c62a
  jump_4c646:
    mov    %ebx,%edx
    mov    %esi,%eax
    call   func_492f8
    jmp    jump_4c62a
  jump_4c651:
    mov    0x9c(%esi),%dh
    movl   $0x0,0x94(%esi)
    or     $0x1,%dh
    mov    %dh,0x9c(%esi)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c67d:
    mov    0x4d0(%esp),%eax
    mov    0x88(%ebp),%edx
    sub    %eax,%edx
    mov    0x504(%esp),%al
    mov    %edx,0x88(%ebp)
    cmp    $0x32,%al
    jb     jump_4c753
    jbe    jump_4c4a8
    lea    0x9e(%esi),%ebx
    cmp    $0x3d,%al
    jb     jump_4c705
    jbe    jump_4c5cf
    cmp    $0x42,%al
    jb     jump_4c6ea
    jbe    jump_4c534
    cmp    $0x44,%al
    jb     jump_4c7e9
    jbe    jump_4c213
    cmp    $0x4a,%al
    je     jump_4bf99
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c6ea:
    cmp    $0x40,%al
    je     jump_4c41d
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c705:
    lea    0x9e(%ebp),%edx
    cmp    $0x36,%al
    jb     jump_4c738
    jbe    jump_4c4a8
    cmp    $0x37,%al
    jbe    jump_4bd6d
    cmp    $0x3b,%al
    je     jump_4c1c5
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c738:
    cmp    $0x34,%al
    je     jump_4bdca
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c753:
    cmp    $0x25,%al
    jb     jump_4c7bc
    jbe    jump_4c534
    cmp    $0x2d,%al
    jb     jump_4c7a1
    jbe    jump_4bc0b
    cmp    $0x30,%al
    jb     jump_4c7e9
    jbe    jump_4c61a
    mov    0x9c(%esi),%ch
    movl   $0x0,0x90(%esi)
    or     $0x8,%ch
    mov    %ch,0x9c(%esi)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c7a1:
    cmp    $0x28,%al
    je     jump_4c241
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c7bc:
    cmp    $0x22,%al
    jb     jump_4c7e1
    jbe    jump_4bbf0
    cmp    $0x23,%al
    je     jump_4bf7c
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c7e1:
    cmp    $0x21,%al
    je     jump_4c651
  jump_4c7e9:
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4c7fc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4c,%esp
    mov    %eax,0x44(%esp)
    mov    %edx,0x2c(%esp)
    mov    0x63(%eax),%ecx
    mov    (%ecx),%cl
    movsbl %cl,%eax
    imul   $0x6a,%eax,%eax
    xor    %edx,%edx
    mov    $data_107020,%esi
    mov    %edx,0x40(%esp)
    mov    %edx,0x34(%esp)
    mov    0x44(%esp),%edx
    add    %eax,%esi
    mov    $0xffffffff,%edi
    mov    0x88(%edx),%ebp
    mov    0x36(%esi),%eax
    mov    %edi,0x38(%esp)
    cmp    %ebp,%eax
    jg     jump_4c848
    mov    %eax,0x34(%esp)
    jmp    jump_4c84e
  jump_4c848:
    xor    %eax,%eax
    mov    %eax,0x38(%esp)
  jump_4c84e:
    mov    0x44(%esp),%ebp
    mov    0x68(%ebp),%ebp
    test   %ebp,%ebp
    jne    jump_4c86a
    mov    $0x217,%ebx
    mov    $data_928d7,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4c86a:
    mov    0x0(%ebp),%eax
    mov    %eax,(%esp)
    mov    0x4(%ebp),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%ebp),%eax
    mov    0x44(%esp),%edx
    mov    %eax,0x8(%esp)
    mov    (%esp),%eax
    mov    %eax,0x78(%edx)
    mov    0x4(%esp),%eax
    mov    %eax,0x7c(%edx)
    add    $0x78,%edx
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%edx)
    cmpl   $0x0,0x3a(%esi)
    je     jump_4c985
    mov    0x44(%esp),%eax
    lea    0xc(%esp),%edx
    xor    %ebx,%ebx
    mov    %edx,0x24(%esp)
    mov    %ebx,0x18(%esp)
    mov    %ebx,0x1c(%esp)
    mov    %ebx,0x20(%esp)
    flds   (%esp)
    fsubs  0x9e(%eax)
    fstps  0x18(%esp)
    flds   0x4(%esp)
    fsubs  0xa2(%eax)
    fstps  0x1c(%esp)
    flds   0x8(%esp)
    fsubs  0xa6(%eax)
    add    $0x9e,%eax
    fstps  0x20(%esp)
    mov    0x18(%esp),%eax
    flds   0x1c(%esp)
    fmul   %st(0),%st
    mov    %eax,0xc(%esp)
    mov    0x1c(%esp),%eax
    flds   0x18(%esp)
    fmul   %st(0),%st
    mov    %eax,0x10(%esp)
    faddp  %st,%st(1)
    mov    0x20(%esp),%eax
    flds   0x20(%esp)
    fmul   %st(0),%st
    mov    %eax,0x14(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    0x3a(%esi),%eax
    shl    $0x5,%eax
    mov    %eax,0x28(%esp)
    mov    0x44(%esp),%eax
    mov    0x9c(%eax),%ax
    xor    %ah,%ah
    fstps  0x30(%esp)
    and    $0x4,%al
    fildl  0x28(%esp)
    cwtl
    fstps  0x3c(%esp)
    test   %eax,%eax
    je     jump_4c95c
    flds   0x3c(%esp)
    fmuls  data_928e6
    fstps  0x3c(%esp)
  jump_4c95c:
    flds   0x30(%esp)
    fcomps 0x3c(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4c96b
    xor    %edi,%edi
  jump_4c96b:
    cmp    $0x2f,%cl
    jne    jump_4c985
    flds   0x3c(%esp)
    fmull  data_928ea
    fcomps 0x30(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4c985
    xor    %edi,%edi
  jump_4c985:
    cmpl   $0x0,0x38(%esp)
    je     jump_4c9a4
    test   %edi,%edi
    je     jump_4c9a4
    mov    0x33(%esi),%ax
    xor    %ah,%ah
    and    $0xc,%al
    cwtl
    test   %eax,%eax
    je     jump_4c9a4
    mov    $0x1,%eax
    jmp    jump_4c9a6
  jump_4c9a4:
    xor    %eax,%eax
  jump_4c9a6:
    or     %eax,0x40(%esp)
    testb  $0x1,0x40(%esp)
    je     jump_4caab
    cmpl   $0x1,0x2c(%esp)
    jne    jump_4caab
    mov    0x44(%esp),%edx
    mov    0x34(%esp),%eax
    sub    %eax,0x88(%edx)
    cmpb   $0x0,0x32(%esi)
    jne    jump_4caa2
    mov    0x44(%esp),%ebx
    mov    %ebp,%eax
    mov    0x54(%ebx),%ebx
    mov    0x52(%esi),%edx
    sar    $0x10,%ebx
    call   func_36a5c
    mov    0x40(%esp),%eax
    add    $0x4c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4c9f9:
    mov    0x10(%ebp),%esi
    xor    %eax,%eax
    xor    %edi,%edi
    mov    %eax,0x48(%esp)
    jmp    jump_4ca0a
  jump_4ca06:
    inc    %edi
    add    $0x4,%esi
  jump_4ca0a:
    xor    %eax,%eax
    mov    0x18(%ebp),%ax
    cmp    %eax,%edi
    jge    jump_4ca6b
    cmpl   $0x5,0x48(%esp)
    jge    jump_4ca6b
    xor    %eax,%eax
    mov    (%esi),%al
    cmp    $0xff,%eax
    je     jump_4ca06
    mov    0x2(%esi),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_4ca06
    xor    %eax,%eax
    mov    0x1(%esi),%al
    imul   $0x28,%eax,%eax
    mov    data_103f9c(%eax),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    jne    jump_4ca06
    mov    $0x1,%ecx
    mov    $0xff,%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    %di,%dx
    call   func_34b0c
    cmp    $0xffffffff,%eax
    jne    jump_4ca06
    incl   0x48(%esp)
    jmp    jump_4ca06
  jump_4ca6b:
    mov    0x44(%esp),%edx
    mov    0x44(%esp),%eax
    add    $0xab,%edx
    mov    0x63(%eax),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x7,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    mov    0x44(%esp),%eax
    call   func_492f8
    mov    0x40(%esp),%eax
    add    $0x4c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4caa2:
    cmp    $0x46,%cl
    je     jump_4c9f9
  jump_4caab:
    mov    0x40(%esp),%eax
    add    $0x4c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4cab8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x64,%esp
    mov    %eax,%edi
    mov    %edx,0x4c(%esp)
    mov    0x63(%eax),%ecx
    mov    (%ecx),%cl
    movsbl %cl,%eax
    imul   $0x6a,%eax,%eax
    mov    $0xffffffff,%ebx
    xor    %edx,%edx
    mov    $data_107020,%ebp
    mov    %edx,0x5c(%esp)
    mov    %ebx,0x58(%esp)
    add    %eax,%ebp
    mov    %edx,0x50(%esp)
    mov    0x88(%edi),%edx
    mov    0x36(%ebp),%eax
    mov    %ebx,0x54(%esp)
    cmp    %edx,%eax
    jg     jump_4cb02
    mov    %eax,0x50(%esp)
    jmp    jump_4cb08
  jump_4cb02:
    xor    %ebx,%ebx
    mov    %ebx,0x54(%esp)
  jump_4cb08:
    mov    0x68(%edi),%esi
    test   %esi,%esi
    jne    jump_4cb20
    mov    $0x275,%ebx
    mov    $data_928f2,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4cb20:
    lea    0x14(%esi),%edx
    mov    (%edx),%eax
    mov    %eax,0x30(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x34(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x38(%esp)
    mov    (%esi),%eax
    cmp    0x59(%edi),%eax
    jne    jump_4cb55
    lea    0x8(%esi),%edx
    mov    (%edx),%eax
    mov    %eax,0x30(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x34(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x38(%esp)
  jump_4cb55:
    lea    0x78(%edi),%edx
    mov    0x30(%esp),%eax
    mov    %eax,(%edx)
    mov    0x34(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x38(%esp),%eax
    xor    %ebx,%ebx
    mov    %eax,0x8(%edx)
    mov    %esp,%edx
    lea    0x9e(%edi),%eax
    mov    %ebx,0x24(%esp)
    mov    %ebx,0x28(%esp)
    mov    %ebx,0x2c(%esp)
    mov    %edx,0x3c(%esp)
    flds   0x30(%esp)
    fsubs  (%eax)
    fstps  0x24(%esp)
    flds   0x34(%esp)
    fsubs  0x4(%eax)
    fstps  0x28(%esp)
    flds   0x38(%esp)
    fsubs  0x8(%eax)
    fstps  0x2c(%esp)
    mov    0x24(%esp),%eax
    flds   0x28(%esp)
    fmul   %st(0),%st
    mov    %eax,(%esp)
    mov    0x28(%esp),%eax
    flds   0x24(%esp)
    fmul   %st(0),%st
    mov    %eax,0x4(%esp)
    faddp  %st,%st(1)
    mov    0x2c(%esp),%eax
    flds   0x2c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x8(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    0x3a(%ebp),%eax
    fstps  0x48(%esp)
    test   %eax,%eax
    je     jump_4cc01
    shl    $0x5,%eax
    mov    %eax,0x40(%esp)
    fildl  0x40(%esp)
    fcomps 0x48(%esp)
    fnstsw %ax
    sahf
    jae    jump_4cc01
    mov    %ebx,0x58(%esp)
  jump_4cc01:
    cmpl   $0x0,0x54(%esp)
    je     jump_4cc23
    cmpl   $0x0,0x58(%esp)
    je     jump_4cc23
    mov    0x33(%ebp),%ax
    xor    %ah,%ah
    and    $0x2,%al
    cwtl
    test   %eax,%eax
    je     jump_4cc23
    mov    $0x1,%eax
    jmp    jump_4cc25
  jump_4cc23:
    xor    %eax,%eax
  jump_4cc25:
    mov    0x5c(%esp),%edx
    or     %eax,%edx
    mov    0x4c(%esp),%ebx
    mov    %edx,0x5c(%esp)
    cmp    $0x1,%ebx
    jne    jump_4cdea
    testb  $0x1,0x5c(%esp)
    je     jump_4cdea
    mov    0x50(%esp),%eax
    sub    %eax,0x88(%edi)
    cmpb   $0x0,0x32(%ebp)
    jne    jump_4cdb9
    cmpl   $0x1,0x52(%ebp)
    jle    jump_4cdb9
    andb   $0xfd,0x23(%esi)
    mov    0x5c(%esp),%eax
    add    $0x64,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4cc76:
    orb    $0x2,0x23(%esi)
    mov    0x5c(%esp),%eax
    add    $0x64,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4cc87:
    mov    (%esi),%eax
    cmp    0x59(%edi),%eax
    jne    jump_4cc91
    mov    0x4(%esi),%eax
  jump_4cc91:
    mov    $0x1,%dl
    mov    0x56(%edi),%cl
    shl    %cl,%dl
    or     %dl,0x17(%eax)
    mov    0x5c(%esp),%eax
    add    $0x64,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4cca8:
    lea    0xc(%esp),%ebx
    mov    0x4(%esi),%edx
    mov    (%esi),%eax
    mov    %ebx,0x44(%esp)
    xor    %ebx,%ebx
    mov    %ebx,0x18(%esp)
    mov    %ebx,0x1c(%esp)
    mov    %ebx,0x20(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%edx)
    fstps  0x18(%esp)
    flds   0xc(%eax)
    fsubs  0xc(%edx)
    add    $0x8,%eax
    fstps  0x1c(%esp)
    flds   0x8(%eax)
    fsubs  0x10(%edx)
    mov    0x18(%esp),%eax
    fstps  0x20(%esp)
    flds   0x1c(%esp)
    fmul   %st(0),%st
    mov    %eax,0xc(%esp)
    mov    0x1c(%esp),%eax
    flds   0x18(%esp)
    fmul   %st(0),%st
    mov    %eax,0x10(%esp)
    faddp  %st,%st(1)
    mov    0x20(%esp),%eax
    flds   0x20(%esp)
    fmul   %st(0),%st
    mov    %eax,0x14(%esp)
    sub    $0x8,%esp
    faddp  %st,%st(1)
    add    $0x8,%edx
    fstpl  (%esp)
    xor    %edx,%edx
    call   func_76e30
    fstps  0x60(%esp)
    mov    $data_ca1f1,%eax
  jump_4cd2b:
    mov    data_d35e5,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%edx
    jge    jump_4cd8c
    mov    0x54(%eax),%ecx
    sar    $0x10,%ecx
    cmp    $0xffffffff,%ecx
    je     jump_4cd59
    cmpb   $0x5,0x58(%eax)
    jne    jump_4cd58
    cmp    0x59(%eax),%esi
    jne    jump_4cd58
    mov    0x60(%esp),%ecx
    mov    %ecx,0x9e(%eax)
  jump_4cd58:
    inc    %edx
  jump_4cd59:
    inc    %ebx
    add    $0x162,%eax
    cmp    $0x6b,%ebx
    jl     jump_4cd2b
    jmp    jump_4cd8c
  jump_4cd66:
    mov    (%esi),%ecx
    cmp    0x59(%edi),%ecx
    jne    jump_4cd70
    mov    0x4(%esi),%ecx
  jump_4cd70:
    mov    %edi,%edx
    mov    0x59(%edi),%eax
    call   func_1d538
    xor    %ebx,%ebx
    mov    %edi,%edx
    movb   $0x5,0x58(%edi)
    mov    %ecx,%eax
    mov    %esi,0x59(%edi)
    call   func_1d3e8
  jump_4cd8c:
    lea    0xab(%edi),%edx
    mov    0x63(%edi),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x7,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    mov    %edi,%eax
    call   func_492f8
    mov    0x5c(%esp),%eax
    add    $0x64,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4cdb9:
    cmp    $0x33,%cl
    jb     jump_4cde1
    jbe    jump_4cca8
    cmp    $0x3c,%cl
    jb     jump_4cdea
    jbe    jump_4cd66
    cmp    $0x3e,%cl
    je     jump_4cc87
    mov    0x5c(%esp),%eax
    add    $0x64,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4cde1:
    cmp    $0x20,%cl
    je     jump_4cc76
  jump_4cdea:
    mov    0x5c(%esp),%eax
    add    $0x64,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4cdf8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x75c,%esp
    mov    %eax,%esi
    mov    %edx,0x73c(%esp)
    mov    $0xffffffff,%ebx
    mov    0x63(%eax),%ecx
    xor    %edx,%edx
    xor    %ebp,%ebp
    mov    %edx,0x72c(%esp)
    mov    (%ecx),%cl
    mov    %ebx,0x728(%esp)
    cmp    $0xff,%cl
    jne    jump_4ce3e
    mov    $0x2ea,%ebx
    mov    $data_92901,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4ce3e:
    movsbl %cl,%eax
    imul   $0x6a,%eax,%eax
    mov    $data_107020,%edi
    add    %eax,%edi
    mov    0x88(%esi),%edx
    mov    0x36(%edi),%eax
    cmp    %edx,%eax
    jg     jump_4ce5c
    mov    %eax,%ebp
    jmp    jump_4ce65
  jump_4ce5c:
    xor    %ebx,%ebx
    mov    %ebx,0x728(%esp)
  jump_4ce65:
    cmpl   $0x0,0x728(%esp)
    setne  %al
    mov    0x72c(%esp),%ebx
    and    $0xff,%eax
    or     %eax,%ebx
    mov    %ebx,0x72c(%esp)
    testb  $0x1,0x72c(%esp)
    je     jump_4d6e8
    cmpl   $0x1,0x73c(%esp)
    je     jump_4d5fc
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4ceb4:
    lea    0x6bc(%esp),%eax
    xor    %edi,%edi
    mov    %eax,0x714(%esp)
    mov    %edi,0x704(%esp)
    mov    %edi,0x708(%esp)
    mov    %edi,0x70c(%esp)
    flds   0x9e(%esi)
    fchs
    fstps  0x704(%esp)
    flds   0xa2(%esi)
    mov    0x704(%esp),%eax
    fchs
    fstps  0x708(%esp)
    flds   0xa6(%esi)
    fchs
    mov    %eax,0x6bc(%esp)
    mov    0x708(%esp),%eax
    fstps  0x70c(%esp)
    mov    %eax,0x6c0(%esp)
    mov    0x70c(%esp),%eax
    mov    %eax,0x6c4(%esp)
    mov    0x704(%esp),%eax
    mov    %eax,0x9e(%esi)
    mov    0x6c0(%esp),%eax
    mov    %eax,0xa2(%esi)
    add    $0x9e,%esi
    mov    0x6c4(%esp),%eax
    mov    %eax,0x8(%esi)
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4cf6d:
    lea    0x358(%esp),%edx
    mov    0x59(%esi),%eax
    call   func_1d794
    test   %eax,%eax
    jle    jump_4d6e8
    lea    0x0(,%eax,4),%ebx
    xor    %edx,%edx
  jump_4cf8d:
    mov    0x358(%esp,%edx,1),%eax
    cmpb   $0x4,0x58(%eax)
    jne    jump_4d053
    flds   0xa2(%eax)
    fmul   %st(0),%st
    flds   0x9e(%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0xa6(%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    add    $0x9e,%eax
    call   func_76e30
    mov    0x4e(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x758(%esp)
    fstps  0x748(%esp)
    fildl  0x758(%esp)
    fstps  0x750(%esp)
    flds   0x748(%esp)
    fcomps 0x750(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4d053
    mov    0x4a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x758(%esp)
    fildl  0x758(%esp)
    fsubrs 0x748(%esp)
    fsts   0x754(%esp)
    fcomps 0x750(%esp)
    fnstsw %ax
    sahf
    jae    jump_4d03b
    mov    0x750(%esp),%eax
    mov    %eax,0x754(%esp)
  jump_4d03b:
    mov    0x358(%esp,%edx,1),%eax
    add    $0x9e,%eax
    push   0x754(%esp)
    call   func_53054
  jump_4d053:
    add    $0x4,%edx
    cmp    %ebx,%edx
    jge    jump_4d6e8
    jmp    jump_4cf8d
  jump_4d063:
    mov    0x4a(%edi),%eax
    mov    0x8c(%esi),%edi
    add    %eax,%edi
    mov    0x98(%esi),%ebp
    mov    %edi,0x8c(%esi)
    cmp    %ebp,%edi
    jle    jump_4d6e8
    mov    %ebp,0x8c(%esi)
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d09b:
    mov    %esi,%edx
    mov    0x59(%esi),%eax
    call   func_1d538
    mov    0x54(%esi),%edx
    sar    $0x10,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %ebx,%ebx
    mov    data_a2f79(,%eax,2),%eax
    mov    %esi,%edx
    mov    %eax,0x59(%esi)
    call   func_1d3e8
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d0dd:
    lea    0x504(%esp),%edx
    mov    0x59(%esi),%eax
    call   func_1d794
    test   %eax,%eax
    jle    jump_4d276
    lea    0x9e(%esi),%edx
    shl    $0x2,%eax
    xor    %ebp,%ebp
    mov    %edx,0x74c(%esp)
    mov    %eax,0x730(%esp)
  jump_4d10d:
    mov    0x504(%esp,%ebp,1),%edx
    cmp    %edx,%esi
    je     jump_4d1fe
    lea    0x9e(%edx),%eax
    xor    %ebx,%ebx
    lea    0x6f8(%esp),%edx
    mov    %ebx,0x6ec(%esp)
    mov    %ebx,0x6f0(%esp)
    mov    %ebx,0x6f4(%esp)
    mov    %edx,0x718(%esp)
    mov    0x74c(%esp),%edx
    flds   (%eax)
    fsubs  (%edx)
    fstps  0x6ec(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%edx)
    fstps  0x6f0(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%edx)
    mov    0x6ec(%esp),%eax
    fstps  0x6f4(%esp)
    flds   0x6f0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x6f8(%esp)
    mov    0x6f0(%esp),%eax
    flds   0x6ec(%esp)
    fmul   %st(0),%st
    mov    %eax,0x6fc(%esp)
    faddp  %st,%st(1)
    mov    0x6f4(%esp),%eax
    flds   0x6f4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x700(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    0x3a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x758(%esp)
    fildl  0x758(%esp)
    fcompp
    fnstsw %ax
    sahf
    jb     jump_4d1fe
    mov    0x73c(%esp),%edx
    mov    0x54(%esi),%ecx
    mov    0x4a(%edi),%ebx
    mov    0x504(%esp,%ebp,1),%eax
    sar    $0x10,%ecx
    call   func_4b7a0
  jump_4d1fe:
    mov    0x730(%esp),%eax
    add    $0x4,%ebp
    cmp    %eax,%ebp
    jge    jump_4d276
    jmp    jump_4d10d
  jump_4d211:
    mov    0x4a(%edi),%edx
    mov    0x88(%esi),%ebx
    add    %edx,%ebx
    mov    0x63(%esi),%edx
    mov    %ebx,0x88(%esi)
    sub    %eax,%edx
    mov    $0x7,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_492f8
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d24f:
    mov    0x4a(%edi),%eax
    sub    %eax,0x8c(%esi)
    mov    0x88(%esi),%ebx
    add    0x4e(%edi),%ebx
    mov    0x8c(%esi),%ecx
    mov    %ebx,0x88(%esi)
    cmp    $0x1,%ecx
    jge    jump_4d6e8
  jump_4d276:
    mov    %esi,%eax
    call   func_49940
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d290:
    mov    0x15a(%esi),%ecx
    xor    %edx,%edx
    test   %ecx,%ecx
    jle    jump_4d6e8
    jmp    jump_4d2b4
  jump_4d2a2:
    inc    %edx
    mov    0x15a(%esi),%ebx
    add    $0x7,%eax
    cmp    %ebx,%edx
    jge    jump_4d6e8
  jump_4d2b4:
    mov    (%eax),%bh
    cmp    $0xff,%bh
    je     jump_4d2a2
    cmp    $0x41,%bh
    je     jump_4d2a2
    movsbl %bh,%ebx
    imul   $0x6a,%ebx,%ebx
    cmpl   $0x0,data_107062(%ebx)
    je     jump_4d2a2
    mov    data_107062(%ebx),%bx
    mov    %bx,0x1(%eax)
    jmp    jump_4d2a2
  jump_4d2dc:
    lea    0x1ac(%esp),%edx
    mov    0x59(%esi),%eax
    call   func_1d794
    xor    %ebx,%ebx
    mov    %eax,%edx
    mov    %ebx,0x740(%esp)
    cmp    %ebx,%eax
    jle    jump_4d367
    lea    0x0(,%eax,4),%edx
    lea    0x0(,%ebx,4),%ebp
    mov    %edx,0x734(%esp)
  jump_4d313:
    mov    0x1ac(%esp,%ebp,1),%eax
    mov    0x54(%esi),%ecx
    mov    0x54(%eax),%edx
    sar    $0x10,%ecx
    sar    $0x10,%edx
    cmp    %ecx,%edx
    je     jump_4d34a
    imul   $0x1ee,%ecx,%ebx
    add    %ebx,%edx
    cmpb   $0x2,data_a3132(%edx)
    jne    jump_4d34a
    mov    0x73c(%esp),%edx
    mov    0x4a(%edi),%ebx
    call   func_4b7a0
  jump_4d34a:
    mov    0x740(%esp),%edx
    mov    0x734(%esp),%ebx
    inc    %edx
    add    $0x4,%ebp
    mov    %edx,0x740(%esp)
    cmp    %ebx,%ebp
    jl     jump_4d313
  jump_4d367:
    lea    0xab(%esi),%edx
    mov    0x63(%esi),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x7,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_492f8
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d39a:
    mov    %esp,%edx
    mov    0x59(%esi),%eax
    xor    %ebp,%ebp
    call   func_1d794
    cmp    %eax,%ebp
    jge    jump_4d6e8
    lea    0x9e(%esi),%edx
    shl    $0x2,%eax
    lea    0x0(,%ebp,4),%ebx
    mov    %eax,0x738(%esp)
  jump_4d3c5:
    mov    (%esp,%ebx,1),%ecx
    cmp    %ecx,%esi
    je     jump_4d55e
    lea    0x9e(%ecx),%eax
    lea    0x6d4(%esp),%ecx
    mov    %ecx,0x720(%esp)
    xor    %ecx,%ecx
    mov    %ecx,0x6b0(%esp)
    mov    %ecx,0x6b4(%esp)
    mov    %ecx,0x6b8(%esp)
    flds   (%eax)
    fsubs  (%edx)
    fstps  0x6b0(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%edx)
    fstps  0x6b4(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%edx)
    mov    0x6b0(%esp),%eax
    fstps  0x6b8(%esp)
    flds   0x6b4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x6d4(%esp)
    mov    0x6b4(%esp),%eax
    flds   0x6b0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x6d8(%esp)
    faddp  %st,%st(1)
    mov    0x6b8(%esp),%eax
    flds   0x6b8(%esp)
    fmul   %st(0),%st
    mov    %eax,0x6dc(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    mov    0x4a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x758(%esp)
    fildl  0x758(%esp)
    fstps  0x744(%esp)
    fcomps 0x744(%esp)
    fnstsw %ax
    sahf
    jae    jump_4d55e
    lea    0x6d4(%esp),%eax
    push   0x744(%esp)
    call   func_53054
    lea    0x6c8(%esp),%eax
    mov    %ecx,0x6e0(%esp)
    mov    %ecx,0x6e4(%esp)
    mov    %ecx,0x6e8(%esp)
    mov    %eax,0x710(%esp)
    flds   (%edx)
    fadds  0x6d4(%esp)
    fstps  0x6e0(%esp)
    flds   0x4(%edx)
    fadds  0x6d8(%esp)
    mov    0x6e0(%esp),%eax
    fstps  0x6e4(%esp)
    flds   0x8(%edx)
    mov    %eax,0x6c8(%esp)
    fadds  0x6dc(%esp)
    mov    0x6e4(%esp),%eax
    fstps  0x6e8(%esp)
    mov    %eax,0x6cc(%esp)
    mov    0x6e8(%esp),%eax
    mov    (%esp,%ebx,1),%ecx
    mov    %eax,0x6d0(%esp)
    mov    0x6e0(%esp),%eax
    mov    %eax,0x9e(%ecx)
    mov    0x6cc(%esp),%eax
    mov    %eax,0xa2(%ecx)
    add    $0x9e,%ecx
    mov    0x6d0(%esp),%eax
    mov    %eax,0x8(%ecx)
  jump_4d55e:
    mov    0x738(%esp),%eax
    add    $0x4,%ebx
    inc    %ebp
    cmp    %eax,%ebx
    jge    jump_4d6e8
    jmp    jump_4d3c5
  jump_4d576:
    mov    $0x2,%edx
    mov    %esi,%eax
    call   func_49328
    cmp    $0xffffffff,%eax
    je     jump_4d6e8
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_492f8
    orb    $0x2,0x9c(%esi)
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d5ae:
    orb    $0x4,0x9c(%esi)
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d5c8:
    orb    $0x10,0x9c(%esi)
    mov    0x63(%esi),%edx
    sub    %eax,%edx
    mov    $0x7,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_492f8
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d5fc:
    sub    %ebp,0x88(%esi)
    cmp    $0x39,%cl
    jb     jump_4d686
    jbe    jump_4d5ae
    cmp    $0x41,%cl
    jb     jump_4d661
    lea    0xab(%esi),%eax
    jbe    jump_4d290
    cmp    $0x48,%cl
    jb     jump_4d645
    jbe    jump_4d0dd
    cmp    $0x4b,%cl
    je     jump_4d211
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d645:
    cmp    $0x45,%cl
    je     jump_4d5c8
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d661:
    cmp    $0x3a,%cl
    jbe    jump_4d063
    cmp    $0x3f,%cl
    je     jump_4d576
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d686:
    cmp    $0x27,%cl
    jb     jump_4d6d4
    jbe    jump_4d39a
    cmp    $0x35,%cl
    jb     jump_4d6b8
    jbe    jump_4d24f
    cmp    $0x38,%cl
    je     jump_4cf6d
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d6b8:
    cmp    $0x2e,%cl
    je     jump_4ceb4
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4d6d4:
    cmp    $0x24,%cl
    jb     jump_4d6e8
    jbe    jump_4d09b
    cmp    $0x26,%cl
    je     jump_4d2dc
  jump_4d6e8:
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4d700:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_96ac0,%eax
    call   func_786da
    mov    $data_108fe8,%eax
    mov    $0x1,%edx
    call   func_48b90
    mov    %edx,data_96ac8
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_4d724:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %ebx,%edi
    test   %ecx,%ecx
    je     jump_4d73c
    push   $0x96
    push   %eax
    call   func_5e9d0
    add    $0x8,%esp
  jump_4d73c:
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffed8,%dx
    call   func_1b084
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_4d764
    mov    $0x34,%ebx
    mov    $data_92910,%edx
    call   func_26198
  jump_4d764:
    push   $0x2d
    push   $0x3f
    push   %edi
    push   %ecx
    push   %esi
    call   func_5cb3c
    imul   $0x6a,%edi,%ecx
    add    $0x14,%esp
    push   $0x7a
    push   $0xff
    mov    $0x2,%ebx
    mov    $0x3f,%edx
    push   $0xffffffff
    mov    $data_10de96,%eax
    mov    $data_10de9e,%edi
    push   $0x8
    add    $data_107020,%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4d7a8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %ebx,(%esp)
    mov    $0xffffffff,%ebx
    lea    -0x94(%edx),%esi
    lea    -0x16f(%eax),%ecx
    test   %esi,%esi
    jle    jump_4d921
    mov    %ecx,%edx
    mov    %ecx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %esi,%edx
    sub    %eax,%edx
    mov    %edx,0xc(%esp)
    add    $0x12,%edx
    add    %eax,%esi
    mov    %edx,0xc(%esp)
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,%edx
    mov    $0x12,%ecx
    sar    $0x1f,%edx
    mov    %eax,0xc(%esp)
    idiv   %ecx
    mov    %esi,0x8(%esp)
    lea    -0x12(%esi),%ecx
    mov    %eax,0xc(%esp)
    mov    %ecx,%edx
    mov    %ecx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %ecx,0x8(%esp)
    mov    %eax,%edx
    mov    $0x12,%ecx
    sar    $0x1f,%edx
    mov    %eax,0x8(%esp)
    idiv   %ecx
    mov    0xc(%esp),%edx
    mov    %eax,0x8(%esp)
    xor    %eax,%eax
    mov    data_969a8(%edx),%al
    mov    %eax,0x4(%esp)
    cmp    $0xe,%edx
    jge    jump_4d921
    mov    0x8(%esp),%eax
    mov    0x4(%esp),%edi
    cmp    %edi,%eax
    jl     jump_4d921
    xor    %eax,%eax
    mov    data_969b8(%edx),%al
    mov    0x8(%esp),%edx
    add    %edi,%eax
    cmp    %edx,%eax
    jle    jump_4d921
    mov    0xc(%esp),%eax
    mov    (%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    xor    %edx,%edx
    mov    0x8(%esp),%ecx
    mov    data_106fe0(%eax),%dl
    mov    $0x1,%eax
    sub    %edi,%ecx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_4d921
    mov    0xc(%esp),%ebp
    xor    %edi,%edi
    test   %ebp,%ebp
    jle    jump_4d8ec
    mov    (%esp),%eax
    mov    %eax,0x10(%esp)
  jump_4d8ab:
    mov    $0x1,%al
    mov    0x10(%esp),%ebp
    xor    %edx,%edx
    jmp    jump_4d8ce
  jump_4d8b5:
    mov    0x10(%esp),%eax
    mov    0xc(%esp),%edx
    add    $0x4,%eax
    inc    %edi
    mov    %eax,0x10(%esp)
    cmp    %edx,%edi
    jge    jump_4d8ec
    jmp    jump_4d8ab
  jump_4d8cb:
    inc    %edx
    add    %al,%al
  jump_4d8ce:
    xor    %ecx,%ecx
    mov    data_969b8(%edi),%cl
    cmp    %ecx,%edx
    jge    jump_4d8b5
    xor    %ecx,%ecx
    movzbl data_106fe0(%ebp),%esi
    mov    %al,%cl
    test   %ecx,%esi
    je     jump_4d8cb
    inc    %ebx
    jmp    jump_4d8cb
  jump_4d8ec:
    mov    0x8(%esp),%ebp
    mov    0x4(%esp),%ecx
    mov    $0x1,%al
    sub    %ecx,%ebp
    xor    %edx,%edx
    test   %ebp,%ebp
    jl     jump_4d921
    mov    0xc(%esp),%esi
    mov    (%esp),%edi
    shl    $0x2,%esi
    add    %edi,%esi
    movzbl data_106fe0(%esi),%esi
  jump_4d911:
    xor    %ecx,%ecx
    mov    %al,%cl
    test   %ecx,%esi
    je     jump_4d91a
    inc    %ebx
  jump_4d91a:
    inc    %edx
    add    %al,%al
    cmp    %ebp,%edx
    jle    jump_4d911
  jump_4d921:
    mov    %ebx,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4d92c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_2c830
    add    $0xcd,%eax
    call   func_48b90
    lea    -0xcd(%eax),%edx
    movl   $data_9607c,0xa7(%edx)
    movb   $0xff,0xbb(%edx)
    movb   $0x0,0xbc(%edx)
    movl   $0xffffffff,0xbd(%edx)
    movl   $0xffffffff,0xc1(%edx)
    movl   $0x0,0xc5(%edx)
    movl   $0x0,0xab(%edx)
    mov    %edx,%eax
    movl   $0x0,0xc9(%edx)
    call   func_4da5c
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_4da08:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_4da27
    mov    $data_96068,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_4da27:
    add    $0xcd,%eax
    xor    %edx,%edx
    movl   $data_9607c,-0x26(%eax)
    call   func_48c58
    mov    $0x1,%edx
    sub    $0xcd,%eax
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_4da55
    call   func_76d64
  jump_4da55:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4da5c:
/*----------------------------------------------------------------*/
    push   %ebx
    cmpl   $0x0,data_96acc
    je     jump_4da78
    xor    %ebx,%ebx
    movl   $0x4c,0xb7(%eax)
    mov    %ebx,data_96acc
  jump_4da78:
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4da7c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,0x4(%esp)
    mov    %ecx,(%esp)
    call   func_4da5c
    mov    0x4(%esp),%eax
    mov    %edx,0xab(%eax)
    mov    %ebx,0xc9(%eax)
    cmp    $0xffffffff,%ebx
    jne    jump_4dcfd
    lea    0xcd(%eax),%ebp
    mov    0xab(%eax),%eax
    mov    %eax,0x8(%esp)
    mov    (%eax),%eax
    mov    %eax,0x0(%ebp)
    mov    0x8(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x4(%ebp)
    mov    0x8(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x8(%ebp)
    mov    0x8(%esp),%eax
    mov    0xc(%eax),%eax
    mov    %eax,0xc(%ebp)
    mov    0x8(%esp),%eax
    mov    0x10(%eax),%eax
    mov    %eax,0x10(%ebp)
    mov    0x8(%esp),%eax
    mov    0x14(%eax),%eax
    mov    %eax,0x14(%ebp)
    mov    0x8(%esp),%eax
    mov    0x18(%eax),%eax
    mov    %eax,0x18(%ebp)
    mov    0x8(%esp),%eax
    mov    0x1c(%eax),%eax
    mov    %eax,0x1c(%ebp)
    mov    0x8(%esp),%eax
    mov    0x20(%eax),%eax
    mov    %eax,0x20(%ebp)
    mov    0x8(%esp),%eax
    mov    0x24(%eax),%eax
    mov    %eax,0x24(%ebp)
    mov    0x8(%esp),%eax
    mov    0x28(%eax),%eax
    mov    %eax,0x28(%ebp)
    mov    0x8(%esp),%eax
    mov    0x2c(%eax),%eax
    mov    %eax,0x2c(%ebp)
    mov    0x8(%esp),%eax
    mov    0x30(%eax),%eax
    mov    0x8(%esp),%esi
    mov    %eax,0x30(%ebp)
    mov    $0x7,%ecx
    lea    0x34(%ebp),%edi
    lea    0x34(%esi),%esi
    mov    0x8(%esp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x52(%eax),%eax
    mov    %eax,0x52(%ebp)
    mov    0x8(%esp),%eax
    mov    0x56(%eax),%ax
    mov    %ax,0x56(%ebp)
    mov    0x8(%esp),%eax
    mov    0x58(%eax),%al
    mov    %al,0x58(%ebp)
    mov    0x8(%esp),%eax
    mov    0x59(%eax),%eax
    mov    %eax,0x59(%ebp)
    mov    0x8(%esp),%eax
    mov    0x59(%eax),%eax
    mov    %eax,0x59(%ebp)
    mov    0x8(%esp),%eax
    mov    0x59(%eax),%eax
    mov    %eax,0x59(%ebp)
    mov    0x8(%esp),%eax
    mov    0x5d(%eax),%al
    mov    %al,0x5d(%ebp)
    mov    0x8(%esp),%eax
    mov    0x5e(%eax),%eax
    mov    %eax,0x5e(%ebp)
    mov    0x8(%esp),%eax
    mov    0x62(%eax),%al
    mov    %al,0x62(%ebp)
    mov    0x8(%esp),%eax
    mov    0x63(%eax),%eax
    mov    %eax,0x63(%ebp)
    mov    0x8(%esp),%eax
    mov    0x67(%eax),%al
    mov    %al,0x67(%ebp)
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,0x68(%ebp)
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,0x68(%ebp)
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,0x68(%ebp)
    mov    0x8(%esp),%eax
    mov    0x8(%esp),%edx
    mov    0x68(%eax),%eax
    add    $0x6c,%edx
    mov    %eax,0x68(%ebp)
    lea    0x6c(%ebp),%eax
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
    mov    0x8(%esp),%eax
    lea    0x78(%ebp),%edx
    flds   0x78(%eax)
    add    $0x78,%eax
    fstps  (%edx)
    mov    0x4(%eax),%ebx
    mov    %ebx,0x4(%edx)
    flds   0x8(%eax)
    mov    0x8(%esp),%eax
    fstps  0x8(%edx)
    mov    0x84(%eax),%eax
    mov    %eax,0x84(%ebp)
    mov    0x8(%esp),%eax
    mov    0x88(%eax),%eax
    mov    %eax,0x88(%ebp)
    mov    0x8(%esp),%eax
    mov    0x8c(%eax),%eax
    mov    %eax,0x8c(%ebp)
    mov    0x8(%esp),%eax
    mov    0x90(%eax),%eax
    mov    %eax,0x90(%ebp)
    mov    0x8(%esp),%eax
    mov    0x94(%eax),%eax
    mov    %eax,0x94(%ebp)
    mov    0x8(%esp),%eax
    mov    0x98(%eax),%eax
    mov    %eax,0x98(%ebp)
    mov    0x8(%esp),%eax
    push   $func_4b780
    mov    0x9c(%eax),%ax
    mov    $0x19,%ebx
    mov    %ax,0x9c(%ebp)
    mov    0xc(%esp),%eax
    mov    $0x7,%ecx
    lea    0x9e(%ebp),%edx
    flds   0x9e(%eax)
    add    $0x9e,%eax
    fstps  (%edx)
    mov    0x4(%eax),%esi
    mov    %esi,0x4(%edx)
    flds   0x8(%eax)
    mov    0xc(%esp),%eax
    fstps  0x8(%edx)
    mov    0xc(%esp),%edx
    mov    0xaa(%eax),%al
    add    $0xab,%edx
    mov    %al,0xaa(%ebp)
    lea    0xab(%ebp),%eax
    call   func_78b30
    mov    0x8(%esp),%eax
    mov    0x15a(%eax),%eax
    mov    %eax,0x15a(%ebp)
    mov    0x8(%esp),%eax
    mov    0x15e(%eax),%eax
    mov    %eax,0x15e(%ebp)
  jump_4dcfd:
    mov    0x4(%esp),%edx
    mov    (%esp),%eax
    mov    %eax,0x233(%edx)
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4dd14:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    0xc5(%eax),%eax
    call   func_2ed4c
    mov    0xb7(%esi),%edx
    xor    %edi,%edi
    test   %edx,%edx
    jle    jump_4dda7
    xor    %ebp,%ebp
  jump_4dd39:
    mov    data_107052(%ebp),%al
    cmp    0xbc(%esi),%al
    jne    jump_4dd99
    xor    %eax,%eax
    mov    data_107055(%ebp),%al
    cmp    $0xff,%eax
    je     jump_4dd73
    imul   $0x4b,%eax,%eax
    mov    data_104bea,%cl
    mov    data_10529f(%eax),%edx
    mov    $0x1,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_4dd99
  jump_4dd73:
    mov    $0xffffffff,%ebx
    mov    %esi,%edx
    mov    0xc5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    xor    %edx,%edx
    mov    %edi,%ebx
    mov    %ax,%dx
    mov    0xc5(%esi),%eax
    call   func_2ec50
  jump_4dd99:
    inc    %edi
    mov    0xb7(%esi),%ebx
    add    $0x6a,%ebp
    cmp    %ebx,%edi
    jl     jump_4dd39
  jump_4dda7:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4ddb0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%ebp
    mov    %dx,0xc(%esp)
    mov    %ebx,0x4(%esp)
    mov    %ecx,(%esp)
    mov    %edx,%eax
    cmp    $0x32,%dx
    jb     jump_4e5d5
    jbe    jump_4de7a
    cmp    $0x36,%dx
    jb     jump_4e5b0
    jbe    jump_4ded9
    cmp    $0x39,%dx
    jb     jump_4e5a4
    jbe    jump_4df03
    cmp    $0x1c01,%dx
    jb     jump_4e61f
    jbe    jump_4de0f
    cmp    $0x1c02,%dx
    je     jump_4de45
    jmp    jump_4e61f
  jump_4de0f:
    xor    %edx,%edx
    mov    0xc5(%ebp),%eax
    mov    0x4(%esp),%dx
    call   func_2eca4
    cmp    0xbb(%ebp),%al
    je     jump_4e63b
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %al,0xbb(%ebp)
    mov    %ebp,%eax
    call   *0xc(%ebx)
    jmp    jump_4e63b
  jump_4de45:
    xor    %edx,%edx
    mov    0xc5(%ebp),%eax
    mov    0x4(%esp),%dx
    mov    $0x4,%ecx
    call   func_2eca4
    mov    $0x5,%edx
    movsbl %al,%ebx
    mov    $data_10ae70,%eax
    call   func_56b60
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4de7a:
    cmpl   $0xffffffff,0x233(%ebp)
    je     jump_4e63b
    mov    %ebp,%eax
    call   func_4e69c
    test   %eax,%eax
    je     jump_4de9c
    movl   $0xffffffff,0xc1(%ebp)
  jump_4de9c:
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4deb2:
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_4e644
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4dec4:
    mov    $0x1,%edx
    mov    %ebp,%eax
    call   func_4e644
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4ded9:
    mov    $0x2,%edx
    mov    %ebp,%eax
    call   func_4e644
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4deee:
    mov    $0x4,%edx
    mov    %ebp,%eax
    call   func_4e644
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4df03:
    mov    $0x5,%edx
    mov    %ebp,%eax
    call   func_4e644
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4df18:
    cmpl   $0xffffffff,0x233(%ebp)
    je     jump_4e63b
    cmpl   $0x0,0xab(%ebp)
    jne    jump_4df3f
    mov    $0x13d,%ebx
    mov    $data_9291f,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4df3f:
    mov    0xab(%ebp),%ebx
    mov    (%esp),%edx
    mov    0xa7(%ebx),%ebx
    mov    0x4(%esp),%eax
    sar    $0x18,%ebx
    call   func_4d7a8
    mov    %eax,data_96ad0
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4df75:
    cmpl   $0x0,0xab(%ebp)
    jne    jump_4df8a
    movl   $data_108fe8,0xab(%ebp)
    jmp    jump_4df91
  jump_4df8a:
    mov    %ebp,%eax
    call   func_4da5c
  jump_4df91:
    mov    $data_9292e,%edx
    mov    $data_10ae70,%eax
    movl   $0xffffffff,0xc1(%ebp)
    xor    %ebx,%ebx
    movl   $0x0,0x22f(%ebp)
    call   func_56da8
    mov    %eax,0xc5(%ebp)
    test   %eax,%eax
    jne    jump_4dfcf
    mov    $0x153,%ebx
    mov    $data_92936,%edx
    call   func_26198
  jump_4dfcf:
    mov    0xc5(%ebp),%eax
    movl   $0x0,0xab(%eax)
    mov    $func_4d724,%edx
    mov    0xc5(%ebp),%eax
    call   func_2f1c8
    mov    0xc5(%ebp),%eax
    movw   $0x40,0x8c9(%eax)
    xor    %edx,%edx
    mov    0xc5(%ebp),%eax
    call   func_2e9cc
    mov    0xc5(%ebp),%eax
    movb   $0xf2,0xc6(%eax)
    cmpb   $0xff,0xbb(%ebp)
    jne    jump_4e02f
    mov    $0x4,%edx
    mov    %ebp,%eax
    call   func_4e644
    jmp    jump_4e036
  jump_4e02f:
    mov    %ebp,%eax
    call   func_4dd14
  jump_4e036:
    movl   $0xffffffff,0xbd(%ebp)
    movl   $0xffffffff,0x39(%ebp)
    movl   $0xffffffff,0x35(%ebp)
    mov    %ebp,%eax
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    (%esp),%ecx
    call   *0xc(%ebx)
    mov    0xa(%esp),%edx
    mov    0x4(%esp),%ebx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2d258
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e079:
    movl   $0x0,0x39(%ebp)
    mov    $0xffffffff,%ebx
    movl   $0x0,0x35(%ebp)
    mov    $data_108fe8,%eax
    mov    0xab(%ebp),%ecx
    mov    %ebx,data_96ad0
    cmp    %ecx,%eax
    je     jump_4e302
    mov    (%ecx),%eax
    mov    %eax,data_108fe8
    mov    0x4(%ecx),%eax
    mov    %eax,data_108fec
    mov    0x8(%ecx),%eax
    mov    %eax,data_108ff0
    mov    0xc(%ecx),%eax
    mov    %eax,data_108ff4
    mov    0x10(%ecx),%eax
    mov    %eax,data_108ff8
    mov    0x14(%ecx),%eax
    mov    %eax,data_108ffc
    mov    0x18(%ecx),%eax
    mov    %eax,data_109000
    mov    0x1c(%ecx),%eax
    mov    %eax,data_109004
    mov    0x20(%ecx),%eax
    mov    $data_10901c,%edi
    mov    %eax,data_109008
    mov    0x24(%ecx),%eax
    mov    %ecx,0x8(%esp)
    mov    %eax,data_10900c
    mov    0x28(%ecx),%eax
    mov    0x8(%esp),%esi
    mov    %eax,data_109010
    mov    0x2c(%ecx),%eax
    lea    0x34(%esi),%esi
    mov    %eax,data_109014
    mov    0x30(%ecx),%eax
    mov    $0x7,%ecx
    mov    %eax,data_109018
    mov    0x8(%esp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x52(%eax),%eax
    mov    %eax,data_10903a
    mov    0x8(%esp),%eax
    mov    0x56(%eax),%ax
    mov    %ax,data_10903e
    mov    0x8(%esp),%eax
    mov    0x58(%eax),%al
    mov    %al,data_109040
    mov    0x8(%esp),%eax
    mov    0x59(%eax),%eax
    mov    %eax,data_109041
    mov    0x8(%esp),%eax
    mov    0x59(%eax),%eax
    mov    %eax,data_109041
    mov    0x8(%esp),%eax
    mov    0x59(%eax),%eax
    mov    %eax,data_109041
    mov    0x8(%esp),%eax
    mov    0x5d(%eax),%al
    mov    %al,data_109045
    mov    0x8(%esp),%eax
    mov    0x5e(%eax),%eax
    mov    %eax,data_109046
    mov    0x8(%esp),%eax
    mov    0x62(%eax),%al
    mov    %al,data_10904a
    mov    0x8(%esp),%eax
    mov    0x63(%eax),%eax
    mov    %eax,data_10904b
    mov    0x8(%esp),%eax
    mov    0x67(%eax),%al
    mov    %al,data_10904f
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,data_109050
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,data_109050
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,data_109050
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,data_109050
    mov    0x8(%esp),%eax
    flds   0x6c(%eax)
    add    $0x6c,%eax
    fstps  data_109054
    mov    0x4(%eax),%edx
    mov    %edx,data_109058
    flds   0x8(%eax)
    mov    0x8(%esp),%eax
    fstps  data_10905c
    flds   0x78(%eax)
    add    $0x78,%eax
    fstps  data_109060
    mov    0x4(%eax),%edx
    mov    %edx,data_109064
    flds   0x8(%eax)
    mov    0x8(%esp),%eax
    mov    0x84(%eax),%eax
    mov    %eax,data_10906c
    mov    0x8(%esp),%eax
    mov    0x88(%eax),%eax
    mov    %eax,data_109070
    mov    0x8(%esp),%eax
    mov    0x8c(%eax),%eax
    mov    %eax,data_109074
    mov    0x8(%esp),%eax
    mov    0x90(%eax),%eax
    mov    %eax,data_109078
    mov    0x8(%esp),%eax
    mov    0x94(%eax),%eax
    mov    %eax,data_10907c
    mov    0x8(%esp),%eax
    mov    0x98(%eax),%eax
    mov    %eax,data_109080
    mov    0x8(%esp),%eax
    mov    0x9c(%eax),%ax
    mov    %ax,data_109084
    mov    0x8(%esp),%eax
    fstps  data_109068
    flds   0x9e(%eax)
    add    $0x9e,%eax
    fstps  data_109086
    mov    0x4(%eax),%edx
    mov    %edx,data_10908a
    flds   0x8(%eax)
    mov    0x8(%esp),%eax
    mov    $0x19,%ebx
    mov    0x8(%esp),%edx
    mov    0xaa(%eax),%al
    add    $0xab,%edx
    mov    %al,data_109092
    mov    $func_4b780,%eax
    mov    $0x7,%ecx
    push   %eax
    mov    $data_109093,%eax
    fstps  data_10908e
    call   func_78b30
    mov    0x8(%esp),%eax
    mov    0x15a(%eax),%eax
    mov    %eax,data_109142
    mov    0x8(%esp),%eax
    mov    0x15e(%eax),%eax
    mov    %eax,data_109146
  jump_4e302:
    mov    0x6b(%ebp),%bx
    xor    %esi,%esi
    test   %bx,%bx
    jle    jump_4e334
  jump_4e30d:
    mov    0x67(%ebp),%eax
    movswl %si,%edx
    mov    (%esp),%ecx
    mov    (%eax,%edx,4),%eax
    mov    0x4(%esp),%ebx
    mov    0xa(%esp),%edx
    mov    0xa7(%eax),%edi
    sar    $0x10,%edx
    inc    %esi
    call   *0x8(%edi)
    cmp    0x6b(%ebp),%si
    jl     jump_4e30d
  jump_4e334:
    mov    0x22f(%ebp),%eax
    test   %eax,%eax
    jne    jump_4e63b
    mov    %eax,0xab(%ebp)
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e351:
    mov    0x233(%ebp),%esi
    cmp    $0xffffffff,%esi
    jne    jump_4e365
    mov    %esi,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e365:
    push   $0x0
    mov    $0x8,%ecx
    mov    $0x4,%ebx
    push   $0x0
    mov    $data_10ae70,%eax
    mov    0x41(%ebp),%edx
    call   func_56728
    mov    0x39(%ebp),%eax
    mov    0x35(%ebp),%edi
    mov    0x3d(%ebp),%edx
    and    %edi,%eax
    and    %edx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_4e39f
    mov    %ebp,%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0x10(%ebx)
  jump_4e39f:
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e3ab:
    mov    0x233(%ebp),%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_4e3bf
    mov    %ebx,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e3bf:
    mov    $0x8,%ebx
    mov    $data_10ae70,%eax
    mov    0x41(%ebp),%edx
    call   func_567bc
    cmpl   $0x0,0x39(%ebp)
    je     jump_4e405
    cmpl   $0x0,0x35(%ebp)
    je     jump_4e405
    cmpl   $0x0,data_96ad0
    jge    jump_4e3ec
    cmpl   $0x0,0x3d(%ebp)
    je     jump_4e405
  jump_4e3ec:
    movl   $0xffffffff,data_96ad0
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    jmp    jump_4e40f
  jump_4e405:
    movl   $0xffffffff,data_96ad0
  jump_4e40f:
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e41b:
    mov    0x35(%ebp),%eax
    test   %eax,%eax
    je     jump_4e63d
    cmp    0x8(%ebp),%ebx
    jl     jump_4e63b
    mov    %ebx,%eax
    cmp    0x10(%ebp),%eax
    jg     jump_4e63b
    mov    %ecx,%eax
    cmp    0xc(%ebp),%eax
    jl     jump_4e63b
    cmp    0x14(%ebp),%eax
    jg     jump_4e63b
    mov    0x233(%ebp),%edi
    cmp    $0xffffffff,%edi
    jne    jump_4e462
    mov    %edi,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e462:
    cmpl   $0x0,data_96ad0
    jl     jump_4e4d9
    cmpl   $0x0,0xab(%ebp)
    jne    jump_4e485
    mov    $0x1b2,%ebx
    mov    $data_92945,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4e485:
    mov    data_96ad0,%ebx
    mov    0xb8(%ebp),%edx
    mov    0xab(%ebp),%eax
    sar    $0x18,%edx
    call   func_492ac
    test   %eax,%eax
    je     jump_4e4d9
    mov    0x57(%ebp),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_4e4b8
    mov    $data_10914c,%eax
    call   func_4fb90
  jump_4e4b8:
    movl   $0xffffffff,0xbd(%ebp)
    mov    %ebp,%eax
    mov    0xa7(%ebp),%ebx
    movl   $0xffffffff,0x22f(%ebp)
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_4e4d9:
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e4e5:
    cmpl   $0x0,0x35(%ebp)
    je     jump_4e63b
    cmp    0x8(%ebp),%ebx
    jl     jump_4e63b
    cmp    0x10(%ebp),%ebx
    jg     jump_4e63b
    mov    (%esp),%eax
    cmp    0xc(%ebp),%eax
    jl     jump_4e63b
    cmp    0x14(%ebp),%eax
    jg     jump_4e63b
    mov    0x233(%ebp),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_4e52a
    mov    %ecx,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e52a:
    cmpl   $0x0,data_96ad0
    jl     jump_4e598
    cmpl   $0x0,0xab(%ebp)
    jne    jump_4e54d
    mov    $0x1d8,%ebx
    mov    $data_92954,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4e54d:
    mov    data_96ad0,%edx
    mov    0xab(%ebp),%eax
    call   func_492f8
    test   %eax,%eax
    je     jump_4e598
    mov    0x57(%ebp),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_4e577
    mov    $data_10914c,%eax
    call   func_4fb90
  jump_4e577:
    movl   $0xffffffff,0xbd(%ebp)
    mov    %ebp,%eax
    mov    0xa7(%ebp),%ebx
    movl   $0xffffffff,0x22f(%ebp)
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_4e598:
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e5a4:
    cmp    $0x37,%dx
    je     jump_4deee
    jmp    jump_4e61f
  jump_4e5b0:
    cmp    $0x34,%dx
    jb     jump_4deb2
    jbe    jump_4dec4
    mov    $0x3,%edx
    mov    %ebp,%eax
    call   func_4e644
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e5d5:
    cmp    $0x5,%dx
    jb     jump_4e5fd
    jbe    jump_4e4e5
    cmp    $0x7,%dx
    jb     jump_4e3ab
    jbe    jump_4e351
    cmp    $0x8,%dx
    je     jump_4df18
    jmp    jump_4e61f
  jump_4e5fd:
    cmp    $0x2,%dx
    jb     jump_4e615
    jbe    jump_4e079
    cmp    $0x4,%dx
    je     jump_4e41b
    jmp    jump_4e61f
  jump_4e615:
    cmp    $0x1,%dx
    je     jump_4df75
  jump_4e61f:
    mov    0xa(%esp),%edx
    mov    (%esp),%ecx
    mov    0x4(%esp),%ebx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2f424
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e63b:
    xor    %eax,%eax
  jump_4e63d:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4e644:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    test   %dl,%dl
    jl     jump_4e697
    cmp    $0x6,%dl
    jge    jump_4e697
    cmp    0xbc(%eax),%dl
    je     jump_4e697
    mov    %ebx,%eax
    mov    %dl,0xbc(%ebx)
    call   func_4dd14
    mov    0xc5(%ebx),%eax
    movb   $0xff,0xbb(%ebx)
    cmpw   $0x0,0x8c7(%eax)
    je     jump_4e68a
    xor    %edx,%edx
    call   func_2eca4
    mov    %al,0xbb(%ebx)
  jump_4e68a:
    mov    0xa7(%ebx),%ecx
    mov    %ebx,%eax
    xor    %edx,%edx
    call   *0xc(%ecx)
  jump_4e697:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4e69c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    0xab(%eax),%ebx
    mov    0xc9(%eax),%edx
    xor    %ebp,%ebp
    mov    0xa7(%ebx),%ebx
    xor    %esi,%esi
    sar    $0x18,%ebx
    test   %edx,%edx
    jne    jump_4e74d
  jump_4e6c5:
    test   %esi,%esi
    jne    jump_4e74d
    inc    %ebx
    cmp    $0x4,%ebx
    jl     jump_4e6d5
    xor    %ebx,%ebx
  jump_4e6d5:
    cmp    $0x2,%ebx
    jne    jump_4e6f4
    mov    $0x1,%eax
    mov    data_105830,%edx
    mov    data_104bea,%cl
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_4e6c5
  jump_4e6f4:
    cmp    $0x3,%ebx
    jne    jump_4e713
    mov    $0x1,%eax
    mov    data_105bb4,%edx
    mov    data_104bea,%cl
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_4e6c5
  jump_4e713:
    mov    0xab(%edi),%eax
    mov    0xa7(%eax),%edx
    sar    $0x18,%edx
    cmp    %edx,%ebx
    jne    jump_4e72f
    mov    $0xffffffff,%esi
    xor    %ebp,%ebp
    jmp    jump_4e6c5
  jump_4e72f:
    movsbl %bl,%edx
    call   func_493bc
    test   %eax,%eax
    je     jump_4e6c5
    mov    $0xffffffff,%esi
    mov    %esi,%ebp
    mov    %esi,0xbd(%edi)
    jmp    jump_4e6c5
  jump_4e74d:
    mov    %ebp,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4e758:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xf4,%esp
    sub    $0x82,%ebp
    mov    %eax,0x46(%ebp)
    cmpl   $0x0,0xab(%eax)
    jne    jump_4e788
    mov    $0x24a,%ebx
    mov    $data_92963,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4e788:
    mov    0x46(%ebp),%eax
    mov    $data_d8654,%ebx
    mov    $0x14a,%ecx
    mov    $0x72,%edi
    mov    0xab(%eax),%eax
    mov    $0x1d8,%edx
    push   $0x0
    mov    0xa7(%eax),%esi
    mov    $0x1dc,%eax
    sar    $0x18,%esi
    mov    %ebx,-0xa(%ebp)
    mov    %ecx,-0x6(%ebp)
    mov    %edi,-0x2(%ebp)
    mov    %eax,0x2(%ebp)
    lea    -0xa(%ebp),%eax
    mov    %edx,0x6(%ebp)
    push   %eax
    mov    $0x149,%edi
    mov    %esi,0x5a(%ebp)
    call   func_5e9d0
    mov    $0x7,%ebx
    add    $0x8,%esp
    mov    $0x159,%ecx
    mov    $0x1d8,%eax
    push   $0x0
    mov    %eax,0x6(%ebp)
    lea    -0xa(%ebp),%eax
    mov    %edi,0x2(%ebp)
    push   %eax
    mov    %ebx,-0x6(%ebp)
    mov    %ecx,-0x2(%ebp)
    call   func_5e9d0
    mov    data_ffed8,%ax
    xor    %edx,%edx
    add    $0x8,%esp
    mov    %edx,0x4e(%ebp)
    mov    %eax,0x7a(%ebp)
    mov    %edx,0x62(%ebp)
    jmp    jump_4e82d
  jump_4e814:
    mov    0x5a(%ebp),%ecx
    mov    0x62(%ebp),%esi
    add    $0x4,%ecx
    inc    %esi
    mov    %ecx,0x5a(%ebp)
    mov    %esi,0x62(%ebp)
    cmp    $0xe,%esi
    jge    jump_4e9a0
  jump_4e82d:
    mov    0x62(%ebp),%edx
    xor    %eax,%eax
    mov    data_969a8(%edx),%al
    mov    0x62(%ebp),%ebx
    mov    %eax,%edx
    sub    %ebx,%edx
    imul   $0x24,%edx,%edx
    add    %ebx,%eax
    imul   $0x12,%eax,%eax
    lea    0xa6(%eax),%edi
    lea    0x193(%edx),%esi
    xor    %eax,%eax
    mov    $0x1,%dh
    mov    data_969b8(%ebx),%al
    mov    %dh,0x7e(%ebp)
    mov    %eax,0x72(%ebp)
    xor    %eax,%eax
    mov    0x72(%ebp),%edx
    mov    %eax,0x4a(%ebp)
    test   %edx,%edx
    jle    jump_4e814
    mov    0x5a(%ebp),%eax
    mov    0x4e(%ebp),%edx
    mov    %eax,0x6e(%ebp)
    imul   $0x7,%edx,%eax
    mov    %eax,0x52(%ebp)
  jump_4e87e:
    mov    0x6e(%ebp),%eax
    xor    %edx,%edx
    mov    data_106fe0(%eax),%dl
    xor    %eax,%eax
    mov    0x7e(%ebp),%al
    test   %eax,%edx
    je     jump_4e8c4
    mov    data_96ad0,%ebx
    test   %ebx,%ebx
    jl     jump_4e8f5
    cmp    0x4e(%ebp),%ebx
    jne    jump_4e8f5
    mov    0x46(%ebp),%eax
    cmpb   $0xff,0xbb(%eax)
    je     jump_4e8e6
    push   %edi
    mov    0xb8(%eax),%eax
    push   %esi
    sar    $0x18,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x7a(%ebp),%dx
    jmp    jump_4e973
  jump_4e8c4:
    mov    0x7e(%ebp),%bl
    add    %bl,%bl
    mov    0x72(%ebp),%ecx
    mov    %bl,0x7e(%ebp)
    mov    0x4a(%ebp),%ebx
    add    $0x24,%esi
    inc    %ebx
    add    $0x12,%edi
    mov    %ebx,0x4a(%ebp)
    cmp    %ecx,%ebx
    jge    jump_4e814
    jmp    jump_4e87e
  jump_4e8e6:
    push   %edi
    push   %esi
    mov    0x18(%eax),%ax
    xor    %edx,%edx
    push   $0x1
    jmp    jump_4e970
  jump_4e8f5:
    mov    0x46(%ebp),%eax
    cmpl   $0x0,0xab(%eax)
    jne    jump_4e912
    mov    $0x28d,%ebx
    mov    $data_92972,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4e912:
    mov    0x46(%ebp),%eax
    mov    0x52(%ebp),%ebx
    mov    0xab(%eax),%eax
    add    %ebx,%eax
    mov    0xab(%eax),%bh
    cmp    $0xff,%bh
    je     jump_4e963
    cmp    $0x4c,%bh
    jl     jump_4e941
    mov    $0x291,%ebx
    mov    $data_92981,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4e941:
    mov    0x46(%ebp),%eax
    mov    0x52(%ebp),%ecx
    mov    0xab(%eax),%eax
    add    %ecx,%eax
    push   %edi
    mov    0xa8(%eax),%eax
    push   %esi
    sar    $0x18,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x7a(%ebp),%dx
    jmp    jump_4e973
  jump_4e963:
    push   %edi
    mov    0x46(%ebp),%eax
    push   %esi
    xor    %edx,%edx
    mov    0x18(%eax),%ax
    push   $0x0
  jump_4e970:
    mov    %ax,%dx
  jump_4e973:
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   $data_d8668
    call   func_5cb3c
    add    $0x14,%esp
    mov    0x52(%ebp),%eax
    mov    0x4e(%ebp),%edx
    add    $0x7,%eax
    inc    %edx
    mov    %eax,0x52(%ebp)
    mov    %edx,0x4e(%ebp)
    jmp    jump_4e8c4
  jump_4e9a0:
    mov    0x46(%ebp),%eax
    mov    0x14(%eax),%edx
    mov    0x10(%eax),%ecx
    mov    0xc(%eax),%ebx
    push   %edx
    mov    0x8(%eax),%edx
    mov    $data_10ae70,%eax
    call   func_55274
    mov    0x46(%ebp),%eax
    cmpb   $0xff,0xbb(%eax)
    je     jump_4ea9c
    mov    $data_d8654,%ebx
    mov    $0x13b,%ecx
    mov    $0x7,%esi
    mov    $0x1dc,%edi
    mov    $0x69,%eax
    push   $0xf2
    mov    %ebx,0x32(%ebp)
    mov    %eax,0x42(%ebp)
    lea    0x32(%ebp),%eax
    mov    %ecx,0x36(%ebp)
    push   %eax
    mov    %esi,0x3a(%ebp)
    mov    %edi,0x3e(%ebp)
    call   func_5e9d0
    mov    0x3e(%ebp),%eax
    mov    0x36(%ebp),%edx
    add    $0x8,%esp
    sub    %edx,%eax
    push   $0x3a
    sar    %eax
    push   %eax
    mov    0x46(%ebp),%eax
    mov    0xb8(%eax),%eax
    sar    $0x18,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x7a(%ebp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    lea    0x32(%ebp),%eax
    push   %eax
    lea    0x32(%ebp),%esi
    mov    $data_10de9e,%edi
    call   func_5cb3c
    mov    0x46(%ebp),%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0xb8(%eax),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    add    $0x14,%esp
    add    $data_107020,%eax
    push   %eax
    push   $data_92990
    lea    -0x72(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    push   $0x0
    push   $0xff
    push   $0xf3
    lea    -0x72(%ebp),%ecx
    mov    $0x3,%ebx
    push   $0x42
    mov    %ebx,%edx
    mov    $data_10de96,%eax
    call   func_2b8a8
    lea    0x32(%ebp),%edx
    mov    $data_10ae70,%eax
    call   func_552cc
  jump_4ea9c:
    mov    0x46(%ebp),%eax
    cmpl   $0x0,0xc1(%eax)
    je     jump_4eb43
    mov    $data_d8654,%ecx
    mov    $0x7,%esi
    mov    $0x72,%edi
    mov    $0x141,%eax
    mov    $0x150,%edx
    push   $0x0
    mov    %ecx,-0xa(%ebp)
    mov    %eax,0x2(%ebp)
    lea    -0xa(%ebp),%eax
    mov    %esi,-0x6(%ebp)
    push   %eax
    mov    %edi,-0x2(%ebp)
    mov    %edx,0x6(%ebp)
    call   func_5e9d0
    xor    %eax,%eax
    mov    data_104bea,%al
    xor    %edx,%edx
    add    $0x8,%esp
    mov    data_ffeca(,%eax,2),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_4eb12
    mov    $0x2cb,%ebx
    mov    $data_92993,%edx
    call   func_26198
  jump_4eb12:
    mov    0x46(%ebp),%eax
    mov    0xab(%eax),%eax
    push   $0x0
    mov    0xa7(%eax),%eax
    push   $0x0
    sar    $0x18,%eax
    push   %eax
    push   %ecx
    lea    -0xa(%ebp),%eax
    push   %eax
    call   func_5cb3c
    mov    0x46(%ebp),%eax
    add    $0x14,%esp
    movl   $0x0,0xc1(%eax)
  jump_4eb43:
    mov    0x46(%ebp),%eax
    cmpl   $0x0,0xbd(%eax)
    je     jump_4ede9
    mov    $data_d8654,%ecx
    mov    $0x7,%esi
    mov    $0x130,%eax
    mov    $0x66,%edx
    push   $0x0
    lea    -0x3e(%ebp),%edi
    mov    %ecx,-0xa(%ebp)
    mov    %eax,0x2(%ebp)
    lea    -0xa(%ebp),%eax
    mov    %esi,-0x6(%ebp)
    push   %eax
    mov    %esi,-0x2(%ebp)
    mov    %edx,0x6(%ebp)
    call   func_5e9d0
    lea    -0xa(%ebp),%edx
    add    $0x8,%esp
    mov    $data_10ae70,%eax
    mov    $0x3,%ebx
    call   func_552cc
    xor    %ecx,%ecx
    lea    -0xa(%ebp),%eax
    mov    data_104bea,%cl
    mov    %ebx,%edx
    mov    $data_96ad4,%esi
    call   func_53e38
    mov    $0xc,%ecx
    mov    0x46(%ebp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0xab(%eax),%ebx
    cmp    $data_108fe8,%ebx
    je     jump_4ec45
    mov    0x22f(%eax),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_4ec45
    mov    %ebx,%eax
    mov    0x46(%ebp),%ebx
    mov    data_d3664,%edx
    call   func_4a18c
    cmp    0xc9(%ebx),%ecx
    jne    jump_4ebf8
    mov    %ebx,%eax
    call   func_4ee00
  jump_4ebf8:
    xor    %ebx,%ebx
    mov    0x44(%edx),%bx
    mov    0x50(%edx),%dx
    and    $0xffff,%edx
    call   func_46c20
    mov    %eax,%edx
    cmp    $0xffff,%eax
    je     jump_4ec45
    cmp    $0x1,%eax
    jne    jump_4ec22
    mov    $0x1c,%eax
    jmp    jump_4ec27
  jump_4ec22:
    mov    $0x1d,%eax
  jump_4ec27:
    call   func_1cea8
    push   %eax
    push   %edx
    mov    $0x87,%eax
    call   func_1cea8
    push   %eax
    lea    -0x3e(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
  jump_4ec45:
    lea    -0x3e(%ebp),%eax
    push   %eax
    mov    0x46(%ebp),%eax
    mov    0xab(%eax),%eax
    xor    %edx,%edx
    add    $0x34,%eax
    mov    data_104bea,%dl
    push   %eax
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    push   $data_929a2
    lea    -0x72(%ebp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_76d09
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0x14,%esp
    mov    data_a2f74(,%eax,2),%al
    lea    -0xa(%ebp),%esi
    xor    %ah,%ah
    push   $0x0
    shl    $0x2,%eax
    lea    -0x72(%ebp),%ecx
    add    $0x13,%eax
    push   $0xffffffff
    cwtl
    mov    $0x3,%ebx
    push   %eax
    mov    $data_10debe,%edi
    xor    %edx,%edx
    push   $0x2
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffee6,%dx
    call   func_1b084
    mov    %eax,0x66(%ebp)
    mov    0x46(%ebp),%eax
    mov    0xab(%eax),%eax
    mov    (%eax),%eax
    mov    %eax,0x1e(%ebp)
    mov    0x46(%ebp),%eax
    mov    0xab(%eax),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x22(%ebp)
    mov    0x46(%ebp),%eax
    mov    0xab(%eax),%eax
    mov    0x10(%eax),%eax
    mov    %eax,0x26(%ebp)
    mov    0x46(%ebp),%eax
    mov    0xab(%eax),%eax
    mov    0x20(%eax),%eax
    mov    %eax,0x2a(%ebp)
    mov    0x46(%ebp),%eax
    lea    0xa(%ebp),%edi
    mov    $0x7,%edx
    mov    0xab(%eax),%eax
    lea    -0xa(%ebp),%esi
    mov    %edx,0x56(%ebp)
    mov    0x18(%eax),%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    %eax,0x2e(%ebp)
    mov    $0x14,%edi
    xor    %eax,%eax
    mov    %edi,0x76(%ebp)
    mov    %eax,0x5e(%ebp)
    jmp    jump_4ed84
  jump_4ed66:
    mov    0x76(%ebp),%ebx
    mov    0x5e(%ebp),%ecx
    mov    0x56(%ebp),%esi
    add    $0xe,%ebx
    add    $0x4,%ecx
    inc    %esi
    mov    %ebx,0x76(%ebp)
    mov    %ecx,0x5e(%ebp)
    mov    %esi,0x56(%ebp)
    cmp    $0x14,%ecx
    je     jump_4eddc
  jump_4ed84:
    mov    0xe(%ebp),%eax
    add    $0x27,%eax
    mov    %eax,0x16(%ebp)
    mov    0x5e(%ebp),%eax
    mov    0x1e(%eax,%ebp,1),%edx
    mov    $0x28,%edi
    test   %edx,%edx
    jle    jump_4edb0
    imul   $0xe,%edx,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x2,%edx
    sbb    %edx,%eax
    sar    $0x2,%eax
    add    %eax,0x16(%ebp)
  jump_4edb0:
    mov    0x56(%ebp),%eax
    xor    %esi,%esi
    mov    %eax,0x6a(%ebp)
  jump_4edb8:
    mov    0x76(%ebp),%eax
    push   %eax
    push   %edi
    mov    0x6a(%ebp),%edx
    push   %edx
    mov    0x66(%ebp),%ebx
    push   %ebx
    lea    0xa(%ebp),%eax
    push   %eax
    inc    %esi
    add    $0xe,%edi
    call   func_5cb3c
    add    $0x14,%esp
    cmp    $0xf,%esi
    jge    jump_4ed66
    jmp    jump_4edb8
  jump_4eddc:
    mov    0x46(%ebp),%eax
    movl   $0x0,0xbd(%eax)
  jump_4ede9:
    mov    0x46(%ebp),%eax
    xor    %edx,%edx
    call   func_2d218
    lea    0x82(%ebp),%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4ee00:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%edx
    mov    0xc9(%eax),%ecx
    mov    $0x2710,%ebx
    cmp    $0xffffffff,%ecx
    jne    jump_4ee43
    mov    0xab(%eax),%esi
    test   %esi,%esi
    je     jump_4ee43
    mov    %esi,%eax
    call   func_4a144
    mov    %eax,%ecx
    lea    0xcd(%edx),%eax
    call   func_4a144
    sub    %eax,%ecx
    mov    $0x1e,%ebx
    mov    %ecx,%eax
    test   %ecx,%ecx
    jle    jump_4ee43
    add    %ecx,%ebx
  jump_4ee43:
    mov    %ebx,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4ee50:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_96b08,%eax
    call   func_786da
    mov    $data_10914c,%eax
    mov    $0x1,%edx
    call   func_4ee74
    mov    %edx,data_96b10
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_4ee74:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    add    $0x240,%eax
    call   func_1bb78
    lea    -0x240(%eax),%ecx
    movl   $0x0,0x207(%ecx)
    movl   $0x0,0x20b(%ecx)
    movl   $0x0,0x20f(%ecx)
    movl   $0x0,0x213(%ecx)
    movl   $0x0,0x217(%ecx)
    movl   $0x0,0x223(%ecx)
    movl   $0x0,0x227(%ecx)
    movl   $0xffffffff,0x22b(%ecx)
    movb   $0x0,(%ecx)
    movb   $0x0,0xff(%ecx)
    movb   $0x0,0x1fe(%ecx)
    movl   $0x0,0x21b(%ecx)
    movl   $0x0,0x21f(%ecx)
    movl   $0x0,0x238(%ecx)
    movl   $0x0,0x23c(%ecx)
    mov    $0x84,%ebx
    movw   $0x0,0x378(%ecx)
    xor    %edx,%edx
    movw   $0x0,0xca8(%ecx)
    lea    0xbb4(%ecx),%eax
    movw   $0x0,0xcaa(%ecx)
    call   func_76ec0
    mov    $0x40,%ebx
    lea    0xc68(%ecx),%eax
    xor    %edx,%edx
    call   func_76ec0
    mov    $0x380,%ebx
    lea    0x37a(%ecx),%eax
    xor    %edx,%edx
    call   func_76ec0
    movw   $0x0,0x6fa(%ecx)
    movb   $0x64,0x6fe(%ecx)
    movb   $0x7f,0x6ff(%ecx)
    movw   $0x0,0x700(%ecx)
    mov    %ecx,%eax
    movw   $0x0,0xbb2(%ecx)
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4ef94:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    call   func_4fe8c
    lea    0x240(%ebx),%eax
    xor    %edx,%edx
    call   func_1bbc8
    sub    $0x240,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4efb0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%ebp
    mov    %ebx,%edi
    call   func_66cbf
    movl   $0xffffffff,0x20f(%esi)
    cmp    $0xffffffff,%ebp
    jne    jump_4eff6
    call   func_67ff8
    mov    %eax,0x21f(%esi)
    test   %eax,%eax
    je     jump_4f021
    mov    $0x8,%edx
    mov    %esi,%eax
    call   func_4f5e8
    mov    %esi,%eax
    call   func_4ff94
    mov    %ebp,0x20b(%esi)
  jump_4eff6:
    cmp    $0xffffffff,%edi
    jne    jump_4f01c
    call   func_699cc
    mov    %eax,0x21b(%esi)
    test   %eax,%eax
    je     jump_4f021
    mov    $0x8,%edx
    mov    %esi,%eax
    call   func_4f184
    mov    %edi,0x207(%esi)
  jump_4f01c:
    mov    $0xffffffff,%eax
  jump_4f021:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4f184:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    %edx,(%esp)
    cmpw   $0x0,0xca8(%eax)
    je     jump_4f19f
    xor    %eax,%eax
    jmp    jump_4f205
  jump_4f19f:
    cmpl   $0x8,(%esp)
    jle    jump_4f1b6
    mov    $0xda,%ebx
    mov    $data_929ae,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f1b6:
    xor    %esi,%esi
    jmp    jump_4f1c5
  jump_4f1ba:
    inc    %esi
    movl   $0x0,0xc6c(%eax)
  jump_4f1c5:
    mov    (%esp),%ebx
    movswl %si,%edi
    cmp    %ebx,%edi
    jge    jump_4f1f5
    mov    0x21b(%ebp),%ecx
    push   %ecx
    call   func_69bfe
    mov    %eax,%edx
    lea    0x0(,%edi,8),%eax
    add    %ebp,%eax
    add    $0x4,%esp
    mov    %edx,%edi
    mov    %edx,0xc68(%eax)
    test   %edi,%edi
    jne    jump_4f1ba
  jump_4f1f5:
    mov    %si,0xca8(%ebp)
    mov    0xca6(%ebp),%eax
    sar    $0x10,%eax
  jump_4f205:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4f32c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    cmpl   $0xffffffff,0x217(%eax)
    je     jump_4f402
    cmpl   $0x0,0x207(%eax)
    je     jump_4f402
    movswl %di,%eax
    test   %eax,%eax
    jl     jump_4f363
    cmp    0xca8(%esi),%di
    jl     jump_4f374
  jump_4f363:
    mov    $0x12a,%ebx
    mov    $data_929db,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f374:
    movswl %di,%edx
    lea    0x0(,%edx,8),%eax
    add    %esi,%eax
    mov    0xc6c(%eax),%ecx
    test   %ecx,%ecx
    jne    jump_4f3a4
    push   %edx
    push   $data_929ea
    push   $data_96668
    call   func_76d09
    add    $0xc,%esp
    call   func_2624c
    jmp    jump_4f402
  jump_4f3a4:
    jne    jump_4f3b7
    mov    $0x137,%ebx
    mov    $data_92a1b,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f3b7:
    movswl %di,%eax
    shl    $0x3,%eax
    lea    (%esi,%eax,1),%edx
    mov    0xc68(%edx),%ebx
    push   %ebx
    mov    %edx,0x4(%esp)
    call   func_6a177
    add    $0x4,%esp
    cmp    $0x4,%eax
    jne    jump_4f3ef
    cmp    $0xffffffff,%ebp
    jne    jump_4f402
    mov    (%esp),%eax
    mov    0xc68(%eax),%ecx
    push   %ecx
    call   func_69eb6
    add    $0x4,%esp
  jump_4f3ef:
    movswl %di,%eax
    mov    0xc68(%esi,%eax,8),%edi
    push   %edi
    call   func_69e49
    add    $0x4,%esp
  jump_4f402:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4f45c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    movswl %dx,%eax
    test   %eax,%eax
    jl     jump_4f473
    cmp    0xca8(%esi),%cx
    jl     jump_4f484
  jump_4f473:
    mov    $0x152,%ebx
    mov    $data_92a39,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f484:
    movswl %cx,%eax
    shl    $0x3,%eax
    add    %eax,%esi
    cmpl   $0x0,0xc6c(%esi)
    je     jump_4f4a4
    mov    0xc68(%esi),%ebx
    push   %ebx
    call   func_69f90
    add    $0x4,%esp
  jump_4f4a4:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4f4d4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    movswl %dx,%eax
    test   %eax,%eax
    jl     jump_4f4eb
    cmp    0xca8(%ecx),%si
    jl     jump_4f4fc
  jump_4f4eb:
    mov    $0x166,%ebx
    mov    $data_92a48,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f4fc:
    movswl %si,%eax
    shl    $0x3,%eax
    lea    (%ecx,%eax,1),%esi
    cmpl   $0x0,0xc6c(%esi)
    je     jump_4f52f
    mov    0xc68(%esi),%ebx
    push   %ebx
    call   func_69f90
    mov    0xc6c(%esi),%ecx
    add    $0x4,%esp
    test   %ecx,%ecx
    je     jump_4f52f
    mov    %ecx,%eax
    call   *data_987b0
  jump_4f52f:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4f5e8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    %edx,(%esp)
    cmpw   $0x0,0x378(%eax)
    je     jump_4f603
    xor    %eax,%eax
    jmp    jump_4f653
  jump_4f603:
    cmpl   $0x8,(%esp)
    jle    jump_4f61a
    mov    $0x199,%ebx
    mov    $data_92a59,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f61a:
    xor    %esi,%esi
    jmp    jump_4f61f
  jump_4f61e:
    inc    %esi
  jump_4f61f:
    mov    (%esp),%ebx
    movswl %si,%edi
    cmp    %ebx,%edi
    jge    jump_4f643
    mov    0x21f(%ebp),%ecx
    push   %ecx
    call   func_68230
    add    $0x4,%esp
    mov    %eax,0x358(%ebp,%edi,4)
    test   %eax,%eax
    jne    jump_4f61e
  jump_4f643:
    mov    %si,0x378(%ebp)
    mov    0x376(%ebp),%eax
    sar    $0x10,%eax
  jump_4f653:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4f65c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x60,%esp
    mov    %eax,%ebp
    mov    %edx,%edi
    cmpl   $0xffffffff,0x20b(%eax)
    je     jump_4f682
    mov    $0x1b4,%ebx
    mov    $data_92a68,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f682:
    mov    0x376(%ebp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jg     jump_4f6a0
    mov    $0x1b5,%ebx
    mov    $data_92a77,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f6a0:
    cmpl   $0x0,0x20b(%ebp)
    je     jump_4f6b7
    mov    0x376(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x8,%eax
    jge    jump_4f6be
  jump_4f6b7:
    xor    %eax,%eax
    jmp    jump_4f8c0
  jump_4f6be:
    mov    0x223(%ebp),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_4f6d4
    mov    %ecx,%eax
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4f6d4:
    mov    0x358(%ebp),%esi
    push   %esi
    call   func_6847b
    add    $0x4,%esp
    push   $0x0
    push   $0x0
    push   %esi
    call   func_68670
    add    $0xc,%esp
    push   $0x5622
    push   %esi
    call   func_688a6
    add    $0x8,%esp
    push   $0x0
    push   $0x5622
    mov    0x21f(%ebp),%eax
    mov    $0xc800,%esi
    push   %eax
    mov    %esi,0x60(%esp)
    call   func_68ffc
    add    $0xc,%esp
    mov    %eax,%ecx
    cmp    %esi,%eax
    jl     jump_4f734
    mov    $0x1c9,%ebx
    mov    $data_92a86,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f734:
    cmp    0x54(%esp),%ecx
    jle    jump_4f73e
    mov    %ecx,0x54(%esp)
  jump_4f73e:
    mov    0x54(%esp),%eax
    mov    $data_92a95,%ebx
    mov    $0x4,%edx
    add    %eax,%eax
    call   func_2628c
    mov    0x54(%esp),%edx
    mov    %eax,0x238(%ebp)
    add    %eax,%edx
    mov    0x238(%ebp),%ebx
    mov    %edx,0x23c(%ebp)
    test   %ebx,%ebx
    jne    jump_4f780
    mov    $0x1d0,%ebx
    mov    $data_92aa5,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f780:
    cmpl   $0x0,0x238(%ebp)
    jne    jump_4f794
    xor    %eax,%eax
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4f794:
    test   %edi,%edi
    je     jump_4f88c
    mov    %edi,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,0x5c(%esp)
    test   %eax,%eax
    jne    jump_4f7bc
    mov    $0x1db,%ebx
    mov    $data_92ab4,%edx
    call   func_26198
  jump_4f7bc:
    mov    0x5c(%esp),%esi
    test   %esi,%esi
    jne    jump_4f7cf
    xor    %eax,%eax
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4f7cf:
    lea    0x50(%esp),%eax
    push   %eax
    push   $data_92ac3
    push   %esi
    call   func_78071
    add    $0xc,%esp
    cmpl   $0x20,0x50(%esp)
    jle    jump_4f7fa
    mov    $0x1e2,%ebx
    mov    $data_92ac6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f7fa:
    lea    0x37a(%ebp),%eax
    xor    %esi,%esi
    mov    %eax,0x58(%esp)
    jmp    jump_4f834
  jump_4f808:
    movswl %si,%ecx
    imul   $0x1c,%ecx,%ecx
    mov    0x58(%esp),%eax
    mov    $0x18,%ebx
    mov    %esp,%edx
    add    %ecx,%eax
    call   func_77780
    movb   $0x0,0x391(%ecx,%ebp,1)
    inc    %esi
    movl   $0x0,0x392(%ecx,%ebp,1)
  jump_4f834:
    mov    0x50(%esp),%edx
    movswl %si,%eax
    cmp    %edx,%eax
    jge    jump_4f878
    mov    %esp,%eax
    push   %eax
    push   $data_92ad5
    mov    0x64(%esp),%ebx
    push   %ebx
    call   func_78071
    add    $0xc,%esp
    mov    %esp,%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    cmp    $0x18,%ecx
    jb     jump_4f808
    mov    $0x1e8,%ebx
    mov    $data_92ad8,%edx
    xor    %eax,%eax
    call   func_26198
    jmp    jump_4f808
  jump_4f878:
    mov    0x50(%esp),%eax
    mov    %ax,0x6fa(%ebp)
    mov    0x5c(%esp),%eax
    call   func_7744e
  jump_4f88c:
    movl   $0xffffffff,0x223(%ebp)
    movl   $0x0,0x22b(%ebp)
    movl   $0x0,0x233(%ebp)
    mov    0x54(%esp),%eax
    movb   $0x0,0x237(%ebp)
    mov    %eax,0x22f(%ebp)
    mov    $0xffffffff,%eax
  jump_4f8c0:
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4f8cc:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,(%esp)
    cmpl   $0xffffffff,0x22b(%eax)
    je     jump_4f8ec
    cmpl   $0x0,0x20b(%eax)
    jne    jump_4f8f3
  jump_4f8ec:
    xor    %eax,%eax
    jmp    jump_4fa11
  jump_4f8f3:
    movswl %di,%eax
    test   %eax,%eax
    jl     jump_4f903
    cmp    0x6fa(%esi),%di
    jl     jump_4f914
  jump_4f903:
    mov    $0x200,%ebx
    mov    $data_92ae7,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f914:
    mov    0x6fa(%esi),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_4f948
    lea    0x240(%esi),%eax
    call   func_1bea0
    mov    0x6fa(%esi),%ebp
    sar    $0x10,%ebp
    mov    %eax,%edx
    lea    0x0(,%ebp,8),%eax
    sub    %ebp,%eax
    mov    %edx,0x392(%esi,%eax,4)
  jump_4f948:
    mov    %esi,%eax
    call   func_4fa1c
    mov    0x358(%esi),%ebp
    push   %ebp
    call   func_6847b
    add    $0x4,%esp
    push   $0x0
    push   $0x0
    push   %ebp
    call   func_68670
    add    $0xc,%esp
    push   $0x5622
    push   %ebp
    call   func_688a6
    add    $0x8,%esp
    mov    0x6fb(%esi),%edx
    mov    %esi,%eax
    sar    $0x18,%edx
    call   func_4ff4c
    movswl %di,%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    $0x200,%ebx
    shl    $0x2,%eax
    lea    0x37a(%esi),%edx
    xor    %ecx,%ecx
    add    %eax,%edx
    lea    0x240(%esi),%eax
    call   func_1bbfc
    mov    %eax,%ebp
    test   %eax,%eax
    je     jump_4f9c9
    mov    $0x214,%ebx
    mov    $data_92af6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_4f9c9:
    test   %ebp,%ebp
    je     jump_4f9d7
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_4f9d7:
    cmpl   $0xffffffff,(%esp)
    jne    jump_4f9fb
    movswl %di,%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    0x392(%esi,%eax,4),%edx
    lea    0x240(%esi),%eax
    call   func_1bf0c
  jump_4f9fb:
    movl   $0xffffffff,0x227(%esi)
    mov    $0xffffffff,%eax
    mov    %di,0x6fc(%esi)
  jump_4fa11:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4fa1c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    cmpl   $0xffffffff,0x227(%eax)
    jne    jump_4fa6a
    mov    0x358(%eax),%ebx
    push   %ebx
    movl   $0x0,0x227(%eax)
    call   func_6875f
    add    $0x4,%esp
    lea    0x240(%esi),%eax
    call   func_1bea0
    mov    0x6fa(%esi),%edx
    sar    $0x10,%edx
    mov    %eax,%ebx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    %ebx,0x392(%esi,%eax,4)
  jump_4fa6a:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4fab4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    cmpl   $0xffffffff,0x22b(%eax)
    je     jump_4fb89
    cmpl   $0x0,0x20b(%eax)
    je     jump_4fb89
    mov    0x358(%eax),%edi
    push   %edi
    call   func_690f5
    add    $0x4,%esp
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_4fafc
    movl   $0x0,0x233(%esi)
    mov    %dl,0x237(%esi)
  jump_4fafc:
    mov    0x22f(%esi),%ebx
    sub    0x233(%esi),%ebx
    cmp    $0x1400,%ebx
    jle    jump_4fb15
    mov    $0x1400,%ebx
  jump_4fb15:
    test   %ebx,%ebx
    je     jump_4fb89
    mov    0x234(%esi),%eax
    lea    0x240(%esi),%ecx
    sar    $0x18,%eax
    mov    0x233(%esi),%ebp
    mov    0x238(%esi,%eax,4),%edx
    mov    %ecx,%eax
    add    %ebp,%edx
    call   func_1bf94
    mov    0x233(%esi),%edx
    add    %eax,%edx
    mov    %edx,0x233(%esi)
    test   %eax,%eax
    jne    jump_4fb64
    mov    %ecx,%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_1becc
    mov    %esi,%eax
    call   func_4fa1c
    jmp    jump_4fb89
  jump_4fb64:
    mov    0x234(%esi),%eax
    sar    $0x18,%eax
    push   %edx
    mov    0x238(%esi,%eax,4),%ecx
    mov    0x234(%esi),%eax
    push   %ecx
    sar    $0x18,%eax
    push   %eax
    push   %edi
    call   func_691da
    add    $0x10,%esp
  jump_4fb89:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4fb90:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,0x4(%esp)
    cmpl   $0xffffffff,0x213(%eax)
    je     jump_4fca1
    cmpl   $0x0,0x20b(%eax)
    je     jump_4fca1
    movswl %dx,%edx
    call   func_50140
    mov    %eax,(%esp)
    test   %eax,%eax
    je     jump_4fca1
    mov    0x4(%esp),%edi
    mov    $0x1,%ebp
    add    $0x4,%edi
    jmp    jump_4fbda
  jump_4fbd7:
    inc    %ebp
    add    %eax,%edi
  jump_4fbda:
    mov    0x4(%esp),%eax
    mov    0x376(%eax),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebp
    jge    jump_4fca1
    mov    0x358(%edi),%esi
    push   %esi
    call   func_68a7e
    add    $0x4,%esp
    cmp    $0x4,%eax
    je     jump_4fbd7
    push   %esi
    call   func_6847b
    add    $0x4,%esp
    mov    (%esp),%eax
    mov    0xe(%eax),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    push   %esi
    call   func_68670
    add    $0xc,%esp
    mov    (%esp),%eax
    mov    0xc(%eax),%edi
    push   %edi
    mov    0x8(%eax),%ebp
    push   %ebp
    push   %esi
    call   func_685ee
    add    $0xc,%esp
    mov    (%esp),%eax
    mov    0x10(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    push   %esi
    call   func_688a6
    add    $0x8,%esp
    mov    0x4(%esp),%eax
    mov    0x6fc(%eax),%eax
    sar    $0x18,%eax
    push   %eax
    push   %esi
    call   func_6891c
    add    $0x8,%esp
    push   $0x1
    push   %esi
    call   func_68a08
    add    $0x8,%esp
    push   %esi
    call   func_686f2
    add    $0x4,%esp
    mov    (%esp),%eax
    xor    %edx,%edx
    mov    %esi,(%eax)
    mov    0x4(%esp),%eax
    mov    (%esp),%ebx
    add    $0xbb4,%eax
    jmp    jump_4fc91
  jump_4fc88:
    inc    %edx
    add    $0x16,%eax
    cmp    $0x6,%edx
    jge    jump_4fca1
  jump_4fc91:
    cmp    %ebx,%eax
    je     jump_4fc88
    cmp    (%eax),%esi
    jne    jump_4fc88
    movl   $0x0,(%eax)
    jmp    jump_4fc88
  jump_4fca1:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4fe8c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    cmpl   $0xffffffff,0x20f(%eax)
    jne    jump_4feff
    mov    0xca8(%eax),%dx
    xor    %ebx,%ebx
    test   %dx,%dx
    jle    jump_4febf
  jump_4feab:
    movswl %bx,%edx
    mov    %esi,%eax
    call   func_4f4d4
    inc    %ebx
    cmp    0xca8(%esi),%bx
    jl     jump_4feab
  jump_4febf:
    mov    %esi,%edi
    xor    %ebp,%ebp
    jmp    jump_4fed8
  jump_4fec5:
    mov    0x358(%edi),%ebx
    push   %ebx
    add    $0x4,%edi
    inc    %ebp
    call   func_6875f
    add    $0x4,%esp
  jump_4fed8:
    mov    0x376(%esi),%edx
    sar    $0x10,%edx
    cmp    %edx,%ebp
    jl     jump_4fec5
    mov    0xbb8(%esi),%eax
    call   func_262cc
    call   func_66e3b
    movl   $0x0,0x20f(%esi)
  jump_4feff:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4ff08:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_4ff1c
    mov    %edx,%eax
    call   func_4ff28
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_4ff1c:
/*----------------------------------------------------------------*/
    movl   $0xffffffff,0x217(%eax)
    ret


/*----------------------------------------------------------------*/
func_4ff28:
/*----------------------------------------------------------------*/
    movl   $0xffffffff,0x213(%eax)
    ret


/*----------------------------------------------------------------*/
func_4ff4c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jl     jump_4ff60
    cmp    $0x7f,%ebx
    jg     jump_4ff60
    mov    %dl,0x6fe(%eax)
  jump_4ff60:
    mov    0x6fb(%eax),%ebx
    sar    $0x18,%ebx
    push   %ebx
    mov    0x358(%eax),%edx
    push   %edx
    call   func_6891c
    add    $0x8,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4ff94:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,0x8(%esp)
    mov    $data_92b8c,%eax
    xor    %edx,%edx
    mov    0x8(%esp),%ecx
    call   func_1bb10
    xor    %esi,%esi
    xor    %edi,%edi
    mov    %eax,%ebp
    mov    %esi,0xc(%esp)
    jmp    jump_4ffcb
  jump_4ffbd:
    mov    (%esp),%ebx
    add    $0x4,%ecx
    inc    %edi
    add    %ebx,%esi
    cmp    $0x3,%edi
    jge    jump_50030
  jump_4ffcb:
    lea    0x4(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_92b98
    push   %ebp
    call   func_78071
    add    $0x10,%esp
    mov    %esi,0xc50(%ecx)
    mov    (%esp),%eax
    add    %esi,%eax
    dec    %eax
    mov    %eax,0xc5c(%ecx)
    mov    0x4(%esp),%eax
    mov    %eax,0xc44(%ecx)
    mov    (%esp),%eax
    imul   0x4(%esp),%eax
    add    %eax,0xc(%esp)
    test   %edi,%edi
    jle    jump_4ffbd
    mov    0xc44(%ecx),%eax
    cmp    0xc40(%ecx),%eax
    jge    jump_4ffbd
    mov    $0x347,%ebx
    mov    $data_92b9e,%edx
    xor    %eax,%eax
    call   func_26198
    jmp    jump_4ffbd
  jump_50030:
    cmp    $0x6,%esi
    je     jump_50046
    mov    $0x34d,%ebx
    mov    $data_92bad,%edx
    xor    %eax,%eax
    call   func_26198
  jump_50046:
    mov    $data_92bbc,%ebx
    mov    $0x1,%edx
    mov    0xc(%esp),%eax
    call   func_2628c
    mov    0x8(%esp),%edx
    mov    %eax,%ecx
    xor    %ebx,%ebx
    mov    0x8(%esp),%eax
    mov    %edx,%edi
    add    $0xbb4,%eax
    jmp    jump_50088
  jump_5006e:
    mov    %ecx,0xbb8(%edi)
    add    $0x16,%edi
    inc    %ebx
    mov    0xc44(%edx),%esi
    add    $0x16,%eax
    add    %esi,%ecx
    cmp    $0x6,%ebx
    jge    jump_500ad
  jump_50088:
    movl   $0x0,(%eax)
    movw   $0x0,0x10(%eax)
    movw   $0x5622,0x12(%eax)
    movw   $0xffff,0x14(%eax)
    cmp    0xc5c(%edx),%ebx
    jle    jump_5006e
    add    $0x4,%edx
    jmp    jump_5006e
  jump_500ad:
    mov    %esp,%eax
    push   %eax
    push   $data_92bc6
    push   %ebp
    call   func_78071
    add    $0xc,%esp
    mov    0x8(%esp),%edx
    mov    (%esp),%eax
    mov    %ax,0x700(%edx)
    xor    %eax,%eax
    mov    0x700(%edx),%ax
    cmp    $0x64,%eax
    jl     jump_500eb
    mov    $0x369,%ebx
    mov    $data_92bc9,%edx
    xor    %eax,%eax
    call   func_26198
  jump_500eb:
    mov    0x8(%esp),%ebx
    mov    0x8(%esp),%ecx
    mov    0x8(%esp),%esi
    xor    %edx,%edx
    add    $0x702,%ebx
    jmp    jump_50120
  jump_50101:
    push   %ebx
    push   $data_92bd8
    add    $0x2,%ecx
    push   %ebp
    inc    %edx
    add    $0xa,%ebx
    call   func_78071
    add    $0xc,%esp
    movw   $0xffff,0xae8(%ecx)
  jump_50120:
    xor    %eax,%eax
    mov    0x700(%esi),%ax
    cmp    %eax,%edx
    jl     jump_50101
    mov    %ebp,%eax
    call   func_7744e
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_50140:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x164,%esp
    mov    %eax,%esi
    mov    %dx,0x160(%esp)
    cmpl   $0xffffffff,0x213(%eax)
    je     jump_50167
    cmpl   $0x0,0x20b(%eax)
    jne    jump_5016e
  jump_50167:
    xor    %eax,%eax
    jmp    jump_5051e
  jump_5016e:
    mov    0x15e(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_50189
    xor    %edx,%edx
    mov    0x700(%esi),%dx
    cmp    %edx,%eax
    jl     jump_5019a
  jump_50189:
    mov    $0x37b,%ebx
    mov    $data_92bdb,%edx
    xor    %eax,%eax
    call   func_26198
  jump_5019a:
    mov    0x15e(%esp),%eax
    xor    %ecx,%ecx
    sar    $0x10,%eax
    mov    %ecx,0x150(%esp)
    test   %eax,%eax
    jl     jump_50517
    xor    %edx,%edx
    mov    0x700(%esi),%dx
    cmp    %edx,%eax
    jge    jump_50517
    mov    0xae8(%esi,%eax,2),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_5027d
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    sub    %edx,%eax
    lea    0xbb4(%esi),%edx
    add    %eax,%eax
    add    %eax,%edx
    mov    %esi,%ecx
    mov    %edx,0x150(%esp)
    xor    %eax,%eax
    jmp    jump_50202
  jump_501fe:
    add    $0x2,%ecx
    inc    %eax
  jump_50202:
    xor    %edi,%edi
    mov    0xbb2(%esi),%di
    cmp    %edi,%eax
    jge    jump_5023a
    mov    0x15e(%esp),%edi
    movzwl 0xc38(%ecx),%ebp
    sar    $0x10,%edi
    cmp    %edi,%ebp
    je     jump_5023a
    jmp    jump_501fe
  jump_50226:
    add    $0x2,%ecx
    mov    0xc38(%ecx),%di
    inc    %eax
    mov    %di,0xc36(%ecx)
    jmp    jump_50243
  jump_5023a:
    lea    0x0(,%eax,2),%ecx
    add    %esi,%ecx
  jump_50243:
    xor    %edi,%edi
    mov    0xbb2(%esi),%di
    cmp    %edi,%eax
    jl     jump_50226
    mov    0x160(%esp),%eax
    mov    %ax,0xc36(%esi,%edi,2)
    mov    0x150(%esp),%eax
    add    $0x164,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_50272:
    inc    %ecx
    add    $0x4,%eax
    cmp    $0x3,%ecx
    jl     jump_502d9
    jmp    jump_502e6
  jump_5027d:
    mov    %eax,%edx
    shl    $0x2,%eax
    add    %edx,%eax
    lea    0x702(%esi),%edx
    add    %eax,%eax
    add    %edx,%eax
    push   %eax
    push   $data_92bea
    lea    0x120(%esp),%eax
    push   %eax
    mov    $0x200,%ebx
    call   func_76d09
    add    $0xc,%esp
    mov    %esp,%eax
    lea    0x118(%esp),%edx
    call   func_1bb78
    mov    %esp,%eax
    call   func_1bbfc
    mov    %esp,%eax
    call   func_1be28
    xor    %edx,%edx
    mov    %eax,0x158(%esp)
    xor    %ecx,%ecx
    mov    0x158(%esp),%edi
    mov    %esi,%eax
  jump_502d9:
    cmp    0xc44(%eax),%edi
    jge    jump_50272
    mov    $0xffffffff,%edx
  jump_502e6:
    cmp    $0xffffffff,%edx
    je     jump_502fc
    mov    $0x3ad,%ebx
    mov    $data_92bf6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_502fc:
    mov    $0xffffffff,%eax
    mov    %ecx,%edx
    mov    0xc50(%esi,%ecx,4),%ecx
    mov    %eax,0x14c(%esp)
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    shl    $0x2,%eax
    lea    0x0(,%edx,4),%ebp
    sub    %ecx,%eax
    add    %esi,%ebp
    add    %eax,%eax
    mov    0xc5c(%ebp),%ebx
    add    %esi,%eax
    cmp    %ebx,%ecx
    jle    jump_50346
    jmp    jump_5035b
  jump_50338:
    inc    %ecx
    mov    0xc5c(%ebp),%edi
    add    $0x16,%eax
    cmp    %edi,%ecx
    jg     jump_5035b
  jump_50346:
    mov    0xbc6(%eax),%edi
    sar    $0x10,%edi
    cmp    $0xffffffff,%edi
    jne    jump_50338
    mov    %ecx,0x14c(%esp)
  jump_5035b:
    cmpl   $0xffffffff,0x14c(%esp)
    jne    jump_503f4
    shl    $0x2,%edx
    mov    %esi,0x15c(%esp)
    xor    %ebp,%ebp
    mov    %edx,0x154(%esp)
    jmp    jump_50390
  jump_5037e:
    mov    0x15c(%esp),%ebx
    add    $0x2,%ebx
    inc    %ebp
    mov    %ebx,0x15c(%esp)
  jump_50390:
    xor    %eax,%eax
    mov    0xbb2(%esi),%ax
    cmp    %eax,%ebp
    jge    jump_503f4
    mov    0x15c(%esp),%edx
    xor    %eax,%eax
    mov    0xc38(%edx),%ax
    mov    0xae8(%esi,%eax,2),%edi
    mov    0x154(%esp),%eax
    add    %esi,%eax
    sar    $0x10,%edi
    cmp    0xc50(%eax),%edi
    jl     jump_5037e
    cmp    0xc5c(%eax),%edi
    jg     jump_5037e
    imul   $0x16,%edi,%eax
    add    %esi,%eax
    mov    0xbb4(%eax),%ecx
    test   %ecx,%ecx
    je     jump_503ed
    push   %ecx
    call   func_68a7e
    add    $0x4,%esp
    cmp    $0x4,%eax
    je     jump_5037e
  jump_503ed:
    mov    %edi,0x14c(%esp)
  jump_503f4:
    mov    0x14c(%esp),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_5050e
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    shl    $0x2,%eax
    sub    %ecx,%eax
    lea    0xbb4(%esi),%edx
    add    %eax,%eax
    add    %eax,%edx
    mov    0x12(%edx),%ebp
    sar    $0x10,%ebp
    mov    %edx,0x150(%esp)
    cmp    $0xffffffff,%ebp
    je     jump_50492
    mov    %esi,%ecx
    xor    %eax,%eax
    jmp    jump_50438
  jump_50434:
    add    $0x2,%ecx
    inc    %eax
  jump_50438:
    xor    %edi,%edi
    mov    0xbb2(%esi),%di
    cmp    %edi,%eax
    jge    jump_50468
    xor    %edi,%edi
    mov    0xc38(%ecx),%di
    cmp    %ebp,%edi
    je     jump_50468
    jmp    jump_50434
  jump_50454:
    add    $0x2,%ecx
    mov    0xc38(%ecx),%di
    inc    %eax
    mov    %di,0xc36(%ecx)
    jmp    jump_50471
  jump_50468:
    lea    0x0(,%eax,2),%ecx
    add    %esi,%ecx
  jump_50471:
    xor    %edi,%edi
    mov    0xbb2(%esi),%di
    cmp    %edi,%eax
    jl     jump_50454
    mov    %edi,%edx
    dec    %edx
    mov    %dx,0xbb2(%esi)
    movw   $0xffff,0xaea(%esi,%ebp,2)
  jump_50492:
    mov    0x150(%esp),%edx
    mov    %esp,%eax
    mov    0x4(%edx),%edx
    call   func_1bf1c
    mov    0x150(%esp),%eax
    mov    0x4(%eax),%eax
    mov    0x150(%esp),%edx
    add    $0x2a,%eax
    mov    %eax,0x8(%edx)
    mov    0x158(%esp),%eax
    sub    $0x2b,%eax
    mov    %eax,0xc(%edx)
    mov    0x160(%esp),%eax
    mov    %ax,0x14(%edx)
    mov    0x15e(%esp),%eax
    sar    $0x10,%eax
    mov    0x14c(%esp),%edx
    mov    %dx,0xaea(%esi,%eax,2)
    mov    0xbb2(%esi),%ax
    xor    %edx,%edx
    mov    %ax,%dx
    inc    %eax
    mov    %ax,0xbb2(%esi)
    mov    0x160(%esp),%eax
    mov    %ax,0xc38(%esi,%edx,2)
  jump_5050e:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
  jump_50517:
    mov    0x150(%esp),%eax
  jump_5051e:
    add    $0x164,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_50530:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc8,%esp
    mov    %eax,0xb0(%esp)
    mov    %ecx,%edi
    mov    %edx,%ebp
    mov    0xa(%edx),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    mov    $data_a3d21,%esi
    sub    %edx,%eax
    xor    %edx,%edx
    shl    $0x5,%eax
    mov    data_96b2a,%dx
    add    %eax,%esi
    mov    $data_12fc20,%eax
    call   func_1b084
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_50585
    mov    $0x41,%ebx
    mov    $data_92c08,%edx
    call   func_26198
  jump_50585:
    push   $0x4b
    push   $0x4b
    mov    (%esi),%edx
    push   %edx
    push   %ecx
    mov    0xc0(%esp),%ebx
    push   %ebx
    call   func_5cb3c
    add    $0x14,%esp
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_96b2c,%dx
    call   func_1b084
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_505c5
    mov    $0x45,%ebx
    mov    $data_92c16,%edx
    call   func_26198
  jump_505c5:
    xor    %edx,%edx
    mov    0x16(%ebp),%dx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    xor    %edx,%edx
    push   $0x4b
    mov    0x14(%ebp),%dx
    push   $0xc8
    add    %edx,%eax
    push   %eax
    push   %ecx
    mov    0xc0(%esp),%ecx
    push   %ecx
    call   func_5cb3c
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0x14,%esp
    mov    data_a2f74(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0xb4(%esp)
    mov    %eax,0xa8(%esp)
    test   %edi,%edi
    je     jump_50651
    cmpl   $0x96,data_d8648
    jge    jump_50646
    movl   $0xf3,0xa8(%esp)
    jmp    jump_50651
  jump_50646:
    movl   $0xf3,0xb4(%esp)
  jump_50651:
    mov    $0x1,%eax
    mov    data_104bea,%cl
    shl    %cl,%eax
    movzbl 0x14(%esi),%edi
    mov    %eax,%ecx
    cmp    %eax,%edi
    je     jump_50689
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmp    data_a2f79(,%eax,2),%esi
    jne    jump_506a7
    test   %ecx,%edi
    je     jump_506a7
  jump_50689:
    mov    $0xa,%ebx
    mov    $0x4,%edx
    xor    %ecx,%ecx
    mov    0xb0(%esp),%eax
    mov    data_104bea,%cl
    call   func_53e38
  jump_506a7:
    mov    0xa(%ebp),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    0xb0(%esp),%esi
    shl    $0x5,%eax
    push   $0x0
    add    $data_a3d21,%eax
    mov    $0x12,%ebx
    lea    0x1c(%eax),%ecx
    mov    $data_10de9e,%edi
    mov    0xaa(%esp),%eax
    push   $0xff
    sar    $0x10,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %eax
    mov    0xbc(%esp),%esi
    mov    $0x78,%edx
    push   $0x0
    mov    $data_10de96,%eax
    mov    $data_10debe,%edi
    call   func_2b8a8
    push   $0x0
    lea    0x24(%ebp),%eax
    mov    $0xf,%ebx
    mov    %eax,0xbc(%esp)
    mov    0xb6(%esp),%eax
    push   $0xff
    sar    $0x10,%eax
    mov    $0x113,%edx
    push   %eax
    mov    0xc4(%esp),%ecx
    mov    %eax,0xb8(%esp)
    push   $0x0
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    0xb8(%esp),%edx
    mov    $data_10deb6,%eax
    call   func_2b4f4
    lea    0x127(%eax),%edx
    xor    %eax,%eax
    mov    0x16(%ebp),%ax
    mov    data_10469c(,%eax,4),%esi
    xor    %eax,%eax
    mov    0x14(%ebp),%ax
    push   %esi
    mov    data_104688(,%eax,4),%edi
    push   %edi
    mov    $0x88,%eax
    call   func_1cea8
    push   %eax
    lea    0xc(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
    push   $0x0
    lea    0x4(%esp),%ecx
    push   $0xff
    mov    0xb4(%esp),%eax
    mov    $0x10,%ebx
    push   %eax
    mov    $data_10de9e,%edi
    mov    0xbc(%esp),%esi
    push   $0x0
    mov    $data_10de96,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    $0x1e,%edx
    mov    0x5a(%ebp),%ebx
    mov    %edx,0xa0(%esp)
    cmp    $0xffffffff,%ebx
    jne    jump_5082a
    mov    $0x89,%eax
    mov    0xb0(%esp),%esi
    mov    0xac(%esp),%ecx
    call   func_1cea8
    push   $0x0
    mov    $data_10de9e,%edi
    mov    %edx,%ebx
    push   $0xff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %ecx
    mov    $0x113,%edx
    mov    $0x27,%esi
    push   $0x0
    mov    %eax,%ecx
    mov    $data_10de96,%eax
    mov    %esi,0xb0(%esp)
    call   func_2b8a8
  jump_5082a:
    cmpb   $0xff,0x54(%ebp)
    je     jump_50912
    mov    $0xf,%ecx
    lea    0x64(%esp),%edi
    mov    $data_96b30,%esi
    xor    %edx,%edx
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x54(%ebp),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_103fa2(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    jne    jump_508d9
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_358bc
    mov    %ax,%dx
    cmp    $0xffff,%edx
    jne    jump_508a9
    mov    $0x8a,%eax
    lea    0x64(%esp),%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_5088e:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_508a6
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_5088e
  jump_508a6:
    pop    %edi
    jmp    jump_508d9
  jump_508a9:
    cmp    $0x1,%edx
    jne    jump_508b5
    mov    $0x1c,%eax
    jmp    jump_508ba
  jump_508b5:
    mov    $0x1d,%eax
  jump_508ba:
    call   func_1cea8
    push   %eax
    push   %edx
    mov    $0x8b,%eax
    call   func_1cea8
    push   %eax
    lea    0x70(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
  jump_508d9:
    xor    %edx,%edx
    lea    0x64(%esp),%eax
    mov    0x54(%ebp),%dl
    push   %eax
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    add    $data_103f9c,%eax
    add    $0xa,%eax
    push   %eax
    mov    $0x8c,%eax
    call   func_1cea8
    push   %eax
    lea    0xc(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
    jmp    jump_5097f
  jump_50912:
    mov    $0x8d,%eax
    mov    %esp,%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
  jump_50921:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_50939
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_50921
  jump_50939:
    pop    %edi
    mov    0x42(%ebp),%ax
    cmp    0x4c(%ebp),%ax
    jne    jump_50974
    mov    $0x8e,%eax
    mov    %esp,%edi
    call   func_1cea8
    mov    %eax,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_5095b:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_50973
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_5095b
  jump_50973:
    pop    %edi
  jump_50974:
    movl   $0xf3,0xb4(%esp)
  jump_5097f:
    mov    0xb0(%esp),%esi
    push   $0x0
    mov    0xb6(%esp),%eax
    lea    0x4(%esp),%ecx
    push   $0xff
    sar    $0x10,%eax
    mov    0xa8(%esp),%ebx
    push   %eax
    mov    $0x113,%edx
    mov    $data_10de9e,%edi
    push   $0x0
    mov    $data_10de96,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    $0x19,%eax
    xor    %esi,%esi
    mov    %eax,0xa0(%esp)
    mov    data_96b6c,%ax
    mov    data_ffedc,%di
    mov    %eax,0xbc(%esp)
    jmp    jump_509ec
  jump_509e2:
    inc    %esi
    cmp    $0x2,%esi
    jge    jump_50a72
  jump_509ec:
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    0xbc(%esp,%esi,1),%dl
    call   func_35930
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_509e2
    mov    0x10(%ebp),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_509e2
    push   $0x0
    push   $0x4000
    push   $0x4000
    push   $0x0
    push   $data_d8da0
    mov    0xb4(%esp),%eax
    push   %eax
    xor    %eax,%eax
    push   $0xf5
    mov    0xd8(%esp,%esi,1),%al
    xor    %edx,%edx
    push   %eax
    mov    %di,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    0xd4(%esp),%edx
    push   %edx
    call   func_5d631
    add    $0x28,%esp
    addl   $0x19,0xa0(%esp)
    jmp    jump_509e2
  jump_50a72:
    mov    data_ffeec,%ax
    mov    %eax,0xc0(%esp)
    xor    %eax,%eax
    mov    0x46(%ebp),%ax
    push   $0x3fe80000
    mov    %eax,0xbc(%esp)
    push   $0x0
    fildl  0xc0(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_78b20
    call   func_76e98
    fistpl 0xb8(%esp)
    mov    0xb8(%esp),%eax
    mov    %eax,0xc4(%esp)
    xor    %eax,%eax
    mov    0xc4(%esp),%ax
    test   %eax,%eax
    jge    jump_50ad8
    xor    %ecx,%ecx
    mov    %ecx,0xc4(%esp)
    jmp    jump_50ae8
  jump_50ad8:
    cmp    $0x14,%eax
    jle    jump_50ae8
    movl   $0x14,0xc4(%esp)
  jump_50ae8:
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_d8da0
    push   $0x3c
    xor    %eax,%eax
    push   $0x118
    mov    0xe0(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0xe0(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    0xd4(%esp),%edx
    push   %edx
    call   func_5d631
    mov    data_ffeee,%ax
    add    $0x28,%esp
    mov    %eax,0xc0(%esp)
    xor    %eax,%eax
    mov    0x44(%ebp),%ax
    push   $0x3fe80000
    mov    %eax,0xbc(%esp)
    push   $0x0
    fildl  0xc0(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_78b20
    call   func_76e98
    fistpl 0xb8(%esp)
    mov    0xb8(%esp),%eax
    mov    %eax,0xc4(%esp)
    xor    %eax,%eax
    mov    0xc4(%esp),%ax
    test   %eax,%eax
    jge    jump_50b98
    xor    %edi,%edi
    mov    %edi,0xc4(%esp)
    jmp    jump_50ba8
  jump_50b98:
    cmp    $0x14,%eax
    jle    jump_50ba8
    movl   $0x14,0xc4(%esp)
  jump_50ba8:
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_d8da0
    push   $0x3c
    xor    %eax,%eax
    push   $0x15e
    mov    0xe0(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0xe0(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    0xd4(%esp),%ebx
    push   %ebx
    call   func_5d631
    mov    data_ffef0,%ax
    add    $0x28,%esp
    mov    %eax,0xc0(%esp)
    mov    0x48(%ebp),%ax
    mov    %eax,0xc4(%esp)
    xor    %eax,%eax
    mov    0xc4(%esp),%ax
    test   %eax,%eax
    jge    jump_50c23
    xor    %edx,%edx
    mov    %edx,0xc4(%esp)
    jmp    jump_50c33
  jump_50c23:
    cmp    $0x14,%eax
    jle    jump_50c33
    movl   $0x14,0xc4(%esp)
  jump_50c33:
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_d8da0
    push   $0x3c
    xor    %eax,%eax
    push   $0x1a4
    mov    0xe0(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0xe0(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    0xd4(%esp),%ecx
    push   %ecx
    mov    $0x1ea,%edi
    mov    $0x3c,%esi
    call   func_5d631
    mov    $0x6,%ebx
    add    $0x28,%esp
    mov    data_ffef8,%ax
    mov    %esi,0xa4(%esp)
    mov    %eax,0xc0(%esp)
    mov    %ebx,0xc4(%esp)
    xor    %esi,%esi
    jmp    jump_50cac
  jump_50cab:
    inc    %esi
  jump_50cac:
    xor    %eax,%eax
    mov    0x4a(%ebp),%ax
    cmp    %eax,%esi
    jge    jump_50d52
    xor    %eax,%eax
    mov    0x4c(%ebp),%ax
    cmp    %eax,%esi
    jne    jump_50ccf
    movl   $0x7,0xc4(%esp)
  jump_50ccf:
    xor    %eax,%eax
    mov    0x42(%ebp),%ax
    cmp    %eax,%esi
    jne    jump_50ce4
    movl   $0x8,0xc4(%esp)
  jump_50ce4:
    mov    0xa4(%esp),%ecx
    push   %ecx
    xor    %eax,%eax
    push   %edi
    mov    0xcc(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0xcc(%esp),%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    0xc0(%esp),%eax
    push   %eax
    call   func_5cb3c
    mov    $0xa,%ecx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    add    $0x5,%edi
    add    $0x14,%esp
    cmp    $0x9,%edx
    jne    jump_50cab
    mov    0xa4(%esp),%edx
    add    $0x5,%edx
    mov    $0x1ea,%edi
    mov    %edx,0xa4(%esp)
    jmp    jump_50cab
  jump_50d52:
    add    $0xc8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret

vtable_50d5c:
    .long   func_510c6
    .long   func_5112c
    .long   func_50e12
    .long   func_50e7b
    .long   func_50ecd


/*----------------------------------------------------------------*/
func_50d70:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x15c,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ecx,%edi
    mov    %edx,0x134(%esp)
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_96b6e,%dx
    call   func_1b084
    push   $0x32
    mov    0xa7(%esi),%edx
    push   $0x41
    sar    $0x18,%edx
    push   %edx
    push   %eax
    push   %ebp
    call   func_5cb3c
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0x14,%esp
    mov    data_a2f74(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0x154(%esp)
    test   %edi,%edi
    je     jump_50df1
    movl   $0xf3,0x154(%esp)
  jump_50df1:
    mov    0x134(%esp),%eax
    mov    0x58(%eax),%al
    dec    %al
    cmp    $0x4,%al
    ja     jump_51192
    and    $0xff,%eax
    jmp    *%cs:vtable_50d5c(,%eax,4)


/*----------------------------------------------------------------*/
func_50e12:
/*----------------------------------------------------------------*/
    mov    0x134(%esp),%esi
    mov    0x59(%esi),%esi
    lea    0x24(%esi),%eax
    push   %eax
    mov    $0x8f,%eax
    call   func_1cea8
    push   %eax
    lea    0x8(%esp),%eax
    push   %eax
    xor    %edx,%edx
    xor    %ecx,%ecx
    call   func_76d09
    mov    $data_12fc20,%eax
    add    $0xc,%esp
    mov    data_96b72,%dx
    xor    %ebx,%ebx
    call   func_1b084
    push   $0x31
    mov    0x16(%esi),%cx
    mov    %eax,%edx
    lea    0x0(,%ecx,4),%eax
    mov    0x14(%esi),%bx
    add    %ecx,%eax
    push   $0x24e
    add    %ebx,%eax
    push   %eax
    push   %edx
    push   %ebp
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_511a4


/*----------------------------------------------------------------*/
func_50e7b:
/*----------------------------------------------------------------*/
    mov    0x134(%esp),%ecx
    mov    0x59(%ecx),%ecx
    lea    0x1c(%ecx),%eax
    push   %eax
    mov    $0x90,%eax
    call   func_1cea8
    push   %eax
    lea    0x8(%esp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_76d09
    add    $0xc,%esp
    mov    $data_12fc20,%eax
    mov    data_96b70,%dx
    call   func_1b084
    push   $0x31
    push   $0x24e
    mov    (%ecx),%esi
    push   %esi
    push   %eax
    push   %ebp
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_511a4


/*----------------------------------------------------------------*/
func_50ecd:
/*----------------------------------------------------------------*/
    mov    0x134(%esp),%edx
    mov    0x59(%edx),%edx
    lea    0xf0(%esp),%ecx
    xor    %ebx,%ebx
    mov    0x4(%edx),%esi
    mov    (%edx),%eax
    mov    %ecx,0x120(%esp)
    mov    %ebx,0xfc(%esp)
    mov    %ebx,0x100(%esp)
    mov    %ebx,0x104(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%esi)
    fstps  0xfc(%esp)
    flds   0xc(%eax)
    fsubs  0xc(%esi)
    add    $0x8,%eax
    fstps  0x100(%esp)
    flds   0x8(%eax)
    fsubs  0x10(%esi)
    mov    0xfc(%esp),%eax
    fstps  0x104(%esp)
    flds   0x100(%esp)
    fmul   %st(0),%st
    mov    %eax,0xf0(%esp)
    mov    0x100(%esp),%eax
    flds   0xfc(%esp)
    fmul   %st(0),%st
    mov    %eax,0xf4(%esp)
    faddp  %st,%st(1)
    mov    0x104(%esp),%eax
    flds   0x104(%esp)
    fmul   %st(0),%st
    mov    %eax,0xf8(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    mov    0x13c(%esp),%ebx
    call   func_76e30
    mov    0x134(%esp),%eax
    mov    0xc(%ebx),%ecx
    mov    0x8(%eax),%eax
    add    %ecx,%eax
    add    $0x8,%esi
    mov    %eax,0x124(%esp)
    fstps  0x128(%esp)
    fildl  0x124(%esp)
    mov    0x23(%edx),%ah
    fstps  0x12c(%esp)
    test   $0x1,%ah
    je     jump_50fd0
    flds   0x12c(%esp)
    fmuls  data_92c3a
    fstps  0x12c(%esp)
  jump_50fd0:
    mov    0x134(%esp),%esi
    mov    0x54(%esi),%esi
    sar    $0x10,%esi
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    cmpb   $0x12,data_a310f(,%eax,2)
    jne    jump_51020
    fld1
    fcomps 0x12c(%esp)
    fnstsw %ax
    sahf
    jbe    jump_5100c
    movl   $0x3f800000,0x12c(%esp)
  jump_5100c:
    flds   0x12c(%esp)
    fmuls  data_92c3e
    fstps  0x12c(%esp)
  jump_51020:
    mov    0x134(%esp),%eax
    flds   0x128(%esp)
    fsubs  0x9e(%eax)
    fdivs  0x12c(%esp)
    mov    $0x91,%eax
    call   func_76e98
    fistpl 0x124(%esp)
    call   func_1cea8
    mov    %eax,%edi
    mov    0x134(%esp),%eax
    mov    0x124(%esp),%esi
    mov    0xa2(%eax),%ebx
    inc    %esi
    test   $0x7fffffff,%ebx
    jne    jump_51074
    mov    (%edx),%eax
    jmp    jump_51077
  jump_51074:
    mov    0x4(%edx),%eax
  jump_51077:
    mov    $0x1,%edx
    xor    %ebx,%ebx
    mov    data_104bea,%cl
    mov    0x17(%eax),%bl
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_51090
    lea    0x1c(%eax),%edi
  jump_51090:
    cmp    $0x1,%esi
    jne    jump_5109c
    mov    $0x1c,%eax
    jmp    jump_510a1
  jump_5109c:
    mov    $0x1d,%eax
  jump_510a1:
    call   func_1cea8
    push   %eax
    push   %esi
    push   %edi
    mov    $0x92,%eax
    call   func_1cea8
    push   %eax
    lea    0x10(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x14,%esp
    jmp    jump_511a4


/*----------------------------------------------------------------*/
func_510c6:
/*----------------------------------------------------------------*/
    mov    0x134(%esp),%esi
    mov    0x59(%esi),%esi
    lea    0x24(%esi),%eax
    push   %eax
    mov    $0x93,%eax
    call   func_1cea8
    push   %eax
    lea    0x8(%esp),%eax
    push   %eax
    xor    %edx,%edx
    xor    %ecx,%ecx
    call   func_76d09
    mov    $data_12fc20,%eax
    add    $0xc,%esp
    mov    data_96b72,%dx
    xor    %ebx,%ebx
    call   func_1b084
    push   $0x31
    mov    0x16(%esi),%cx
    mov    %eax,%edx
    lea    0x0(,%ecx,4),%eax
    mov    0x14(%esi),%bx
    add    %ecx,%eax
    push   $0x24e
    add    %ebx,%eax
    push   %eax
    push   %edx
    push   %ebp
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_511a4


/*----------------------------------------------------------------*/
func_5112c:
/*----------------------------------------------------------------*/
    mov    0x134(%esp),%esi
    mov    0x59(%esi),%esi
    lea    0x24(%esi),%eax
    push   %eax
    mov    $0x94,%eax
    call   func_1cea8
    push   %eax
    lea    0x8(%esp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_76d09
    mov    $data_12fc20,%eax
    add    $0xc,%esp
    mov    data_96b72,%dx
    xor    %ecx,%ecx
    call   func_1b084
    push   $0x31
    mov    %eax,%edx
    mov    0x16(%esi),%cx
    xor    %eax,%eax
    lea    0x0(,%ecx,4),%ebx
    mov    0x14(%esi),%ax
    add    %ecx,%ebx
    push   $0x24e
    add    %ebx,%eax
    push   %eax
    push   %edx
    push   %ebp
    call   func_5cb3c
    add    $0x14,%esp
    jmp    jump_511a4
  jump_51192:
    push   $data_92c24
    lea    0x4(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x8,%esp
  jump_511a4:
    mov    0x134(%esp),%eax
    mov    0x5d(%eax),%bh
    test   %bh,%bh
    je     jump_51210
    cmp    $0x7,%bh
    je     jump_51210
    cmpb   $0x4,0x58(%eax)
    jne    jump_51210
    mov    $0x95,%eax
    mov    0x134(%esp),%edx
    call   func_1cea8
    cmpb   $0x1,0x5d(%edx)
    jne    jump_511ea
    mov    $0x96,%eax
    call   func_1cea8
  jump_511ea:
    mov    %esp,%edi
    mov    %eax,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_511f7:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_5120f
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_511f7
  jump_5120f:
    pop    %edi
  jump_51210:
    push   $0x8e
    mov    0x156(%esp),%eax
    lea    0x4(%esp),%ecx
    mov    $0x5,%ebx
    mov    $0x17c,%edx
    push   $0xff
    sar    $0x10,%eax
    mov    $data_10de9e,%edi
    push   %eax
    mov    %ebp,%esi
    mov    %eax,0x130(%esp)
    push   $0x0
    mov    $data_10de96,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    0x134(%esp),%eax
    add    $0x34,%eax
    push   %eax
    push   $data_92c37
    lea    0x8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    mov    $data_10debe,%edi
    mov    %ebp,%esi
    push   $0x0
    lea    0x4(%esp),%ecx
    mov    $0x5,%ebx
    push   $0xff
    mov    0x12c(%esp),%eax
    mov    $0x96,%edx
    push   %eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    mov    $data_10deb6,%eax
    mov    $0x103,%edi
    call   func_2b8a8
    mov    0x134(%esp),%eax
    xor    %esi,%esi
    call   func_4a8cc
    mov    %eax,0x130(%esp)
  jump_512be:
    cmp    0x130(%esp),%esi
    jl     jump_51360
  jump_512cb:
    mov    0x134(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0xdc(%esp)
    mov    0x134(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0xe0(%esp)
    mov    0x134(%esp),%eax
    mov    0x10(%eax),%eax
    mov    %eax,0xe4(%esp)
    mov    0x134(%esp),%eax
    lea    0xc8(%esp),%edi
    mov    0x20(%eax),%eax
    mov    $0x19,%ebx
    mov    %eax,0xe8(%esp)
    mov    0x134(%esp),%eax
    mov    %ebp,%esi
    xor    %ecx,%ecx
    mov    0x18(%eax),%eax
    mov    %ebx,0x14c(%esp)
    mov    %eax,0xec(%esp)
    mov    %ecx,0x140(%esp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    data_ffee6,%ax
    mov    $0x7,%esi
    mov    %eax,0x158(%esp)
    mov    %esi,0x138(%esp)
    jmp    jump_513df
  jump_51360:
    mov    0x134(%esp),%eax
    mov    0x54(%eax),%eax
    mov    $0x6,%ebx
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    %edi,%ecx
    mov    data_ffee6,%dx
    push   $0x6
    mov    $data_12fc20,%eax
    inc    %esi
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    add    $0x9,%edi
    call   func_53eb8
    cmp    $0x9,%esi
    jl     jump_512be
    jmp    jump_512cb
  jump_513a5:
    mov    0x14c(%esp),%ebx
    mov    0x140(%esp),%ecx
    mov    0x138(%esp),%esi
    add    $0xe,%ebx
    add    $0x4,%ecx
    inc    %esi
    mov    %ebx,0x14c(%esp)
    mov    %ecx,0x140(%esp)
    mov    %esi,0x138(%esp)
    cmp    $0x14,%ecx
    je     jump_51475
  jump_513df:
    mov    0xcc(%esp),%eax
    add    $0x95,%eax
    mov    %eax,0xd4(%esp)
    mov    0x140(%esp),%eax
    mov    0xdc(%esp,%eax,1),%edi
    mov    $0x96,%esi
    test   %edi,%edi
    jle    jump_51420
    imul   $0xe,%edi,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x2,%edx
    sbb    %edx,%eax
    sar    $0x2,%eax
    add    %eax,0xd4(%esp)
  jump_51420:
    mov    0x138(%esp),%eax
    xor    %edi,%edi
    mov    %eax,0x148(%esp)
  jump_51430:
    mov    0x14c(%esp),%eax
    push   %eax
    push   %esi
    mov    0x150(%esp),%edx
    push   %edx
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    0x164(%esp),%dx
    call   func_1b084
    push   %eax
    lea    0xd8(%esp),%eax
    push   %eax
    inc    %edi
    add    $0xe,%esi
    call   func_5cb3c
    add    $0x14,%esp
    cmp    $0xe,%edi
    jge    jump_513a5
    jmp    jump_51430
  jump_51475:
    mov    0x134(%esp),%eax
    mov    0x8c(%eax),%eax
    mov    %eax,0x118(%esp)
    mov    0x134(%esp),%eax
    mov    $0xb,%edx
    mov    0x88(%eax),%eax
    mov    $0x15e,%edi
    mov    %eax,0x11c(%esp)
    mov    0x134(%esp),%eax
    mov    $0x16b,%ecx
    xor    %ebx,%ebx
    mov    0x98(%eax),%eax
    mov    %ebx,0x144(%esp)
    mov    %eax,0x110(%esp)
    mov    0x134(%esp),%eax
    mov    %ecx,0x13c(%esp)
    call   func_4a8fc
    mov    %eax,0x114(%esp)
    mov    $0x8,%eax
    mov    %edx,0x10c(%esp)
    mov    %eax,0x108(%esp)
    jmp    jump_515d5
  jump_514fb:
    mov    %edx,%eax
    mov    0x144(%esp),%edx
    mov    0x110(%esp,%edx,1),%ebx
    cmp    %ebx,%eax
    jle    jump_51516
    mov    %ebx,0x118(%esp,%edx,1)
  jump_51516:
    mov    0x144(%esp),%eax
    xor    %esi,%esi
    mov    %eax,0x150(%esp)
    jmp    jump_5155e
  jump_51528:
    imul   $0xe,%eax,%eax
    add    $0x5,%eax
    push   %eax
    mov    0x154(%esp),%eax
    push   %edi
    mov    0x110(%esp,%eax,1),%edx
    push   %edx
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    0x164(%esp),%dx
    call   func_1b084
    push   %eax
    push   %ebp
    inc    %esi
    call   func_5cb3c
    add    $0x14,%esp
  jump_5155e:
    movswl %si,%eax
    cmp    $0x7,%eax
    jl     jump_51528
    mov    0x150(%esp),%eax
    imul   $0x62,0x118(%esp,%eax,1),%edx
    mov    0x150(%esp),%ebx
    mov    0x110(%esp,%ebx,1),%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    push   $0xffffffff
    push   $0x0
    mov    $0x66,%edx
    mov    $0x4,%ebx
    sub    %eax,%edx
    mov    0x144(%esp),%ecx
    push   %edx
    mov    %ebp,%eax
    mov    %edi,%edx
    call   func_2bb74
  jump_515ab:
    mov    0x13c(%esp),%ebx
    mov    0x144(%esp),%ecx
    add    $0xe,%edi
    add    $0xe,%ebx
    add    $0x4,%ecx
    mov    %ebx,0x13c(%esp)
    mov    %ecx,0x144(%esp)
    cmp    $0x8,%ecx
    je     jump_51603
  jump_515d5:
    mov    0x144(%esp),%eax
    cmpl   $0x0,0x110(%esp,%eax,1)
    jle    jump_515ab
    mov    0x118(%esp,%eax,1),%edx
    test   %edx,%edx
    jge    jump_514fb
    xor    %ecx,%ecx
    mov    %ecx,0x118(%esp,%eax,1)
    jmp    jump_51516
  jump_51603:
    add    $0x15c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_51610:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    cmp    $0xffffffff,%ecx
    jne    jump_51629
    push   $0x96
    push   %eax
    call   func_5e9d0
    add    $0x8,%esp
  jump_51629:
    push   $0x37
    push   $0x38
    xor    %edx,%edx
    push   %edi
    mov    $data_12fc20,%eax
    mov    data_ffef4,%dx
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5cb3c
    add    $0x14,%esp
    push   $0x37
    push   $0x38
    xor    %edx,%edx
    push   $0x7
    mov    $data_12fc20,%eax
    mov    data_ffee2,%dx
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5cb3c
    add    $0x14,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_51674:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_96128,0xa7(%eax)
    call   func_516d4
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_51690:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_516af
    mov    $data_960e4,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_516af:
    mov    $0x1,%edx
    movl   $data_96128,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_516cf
    call   func_76d64
  jump_516cf:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_516d4:
/*----------------------------------------------------------------*/
    movl   $0x0,0xab(%eax)
    ret


/*----------------------------------------------------------------*/
func_516e0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x58,%esp
    mov    %eax,-0x4(%ebp)
    mov    $data_a3d21,%eax
    mov    data_a62a1,%cx
    xor    %ebx,%ebx
    xor    %edx,%edx
    test   %cx,%cx
    jle    jump_51742
    jmp    jump_51714
  jump_51704:
    mov    data_a62a1,%si
    inc    %edx
    add    $0x60,%eax
    cmp    %si,%dx
    jge    jump_51742
  jump_51714:
    mov    $0x1,%edi
    mov    data_104bea,%cl
    movzbl 0x14(%eax),%esi
    shl    %cl,%edi
    cmp    %edi,%esi
    jne    jump_51704
    xor    %ecx,%ecx
    mov    data_104bea,%cl
    imul   $0x1ee,%ecx,%ecx
    cmp    data_a2f79(%ecx),%eax
    je     jump_51704
    inc    %ebx
    jmp    jump_51704
  jump_51742:
    xor    %ecx,%ecx
    mov    data_104bea,%cl
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    data_a2f79(,%eax,2),%eax
    movzbl 0x14(%eax),%esi
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%esi
    je     jump_5176d
    inc    %ebx
  jump_5176d:
    cmp    $0x1,%ebx
    jne    jump_51779
    mov    $0x1c,%eax
    jmp    jump_5177e
  jump_51779:
    mov    $0x1d,%eax
  jump_5177e:
    call   func_1cea8
    push   %eax
    mov    -0x4(%ebp),%eax
    mov    0xab(%eax),%eax
    push   %ebx
    mov    0x8c7(%eax),%ax
    and    $0xffff,%eax
    cmp    $0x1,%eax
    jne    jump_517a6
    mov    $0x1c,%eax
    jmp    jump_517ab
  jump_517a6:
    mov    $0x1d,%eax
  jump_517ab:
    call   func_1cea8
    mov    %eax,%ecx
    mov    -0x4(%ebp),%eax
    mov    0xab(%eax),%eax
    push   %ecx
    mov    0x8c7(%eax),%ax
    xor    %ebx,%ebx
    and    $0xffff,%eax
    mov    data_104bea,%bl
    push   %eax
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    xor    %ebx,%ebx
    mov    data_a2f73(,%eax,2),%bl
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    mov    $0x97,%eax
    call   func_1cea8
    push   %eax
    lea    -0x58(%ebp),%eax
    push   %eax
    xor    %ebx,%ebx
    call   func_76d09
    mov    data_104bea,%bl
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    add    $0x1c,%esp
    mov    data_a2f74(,%eax,2),%al
    mov    -0x4(%ebp),%ebx
    push   $0x0
    lea    -0x58(%ebp),%ecx
    mov    $0x19,%edx
    xor    %ah,%ah
    mov    $data_10debe,%edi
    shl    $0x2,%eax
    push   $0xff
    add    $0x13,%eax
    add    $0x4,%ebx
    cwtl
    mov    %ebx,-0x8(%ebp)
    push   %eax
    mov    %ebx,%esi
    mov    $0x9,%ebx
    push   $0x2
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    $0x3,%ebx
    xor    %ecx,%ecx
    mov    -0x8(%ebp),%eax
    mov    data_104bea,%cl
    mov    %ebx,%edx
    call   func_53e38
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    call   func_2d218
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_51894:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ebp
    mov    %dx,0x8(%esp)
    mov    %ebx,(%esp)
    mov    %ecx,0x4(%esp)
    cmp    $0x2,%dx
    jb     jump_51b53
    jbe    jump_51a9e
    cmp    $0x1c01,%dx
    je     jump_51ac7
  jump_518c3:
    mov    0x6(%esp),%edx
    mov    0x4(%esp),%ecx
    mov    (%esp),%ebx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2f424
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_518df:
    mov    0xab(%eax),%ebx
    test   %ebx,%ebx
    jne    jump_51971
    mov    $data_92c42,%edx
    mov    $data_10ae70,%eax
    call   func_56da8
    mov    %eax,0xab(%ebp)
    test   %eax,%eax
    jne    jump_51915
    mov    $0x1cb,%ebx
    mov    $data_92c4e,%edx
    call   func_26198
  jump_51915:
    mov    0xab(%ebp),%eax
    movl   $0x0,0xab(%eax)
    mov    0xab(%ebp),%eax
    movw   $0x8d,0x8c9(%eax)
    mov    $func_50530,%edx
    mov    0xab(%ebp),%eax
    call   func_2f1c8
    mov    $func_10a14,%edx
    mov    0xab(%ebp),%eax
    call   func_2f1d8
    mov    0xab(%ebp),%eax
    movb   $0x0,0xc5(%eax)
    mov    0xab(%ebp),%eax
    movl   $0xffffffff,0xbb(%eax)
  jump_51971:
    xor    %eax,%eax
    mov    data_96b2c,%ax
    cmp    $0xffff,%eax
    jne    jump_519b4
    mov    $data_92c5c,%edx
    mov    $data_12fc20,%eax
    xor    %ebx,%ebx
    call   func_1b270
    mov    %ax,data_96b2c
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_519b4
    mov    $0x1d9,%ebx
    mov    $data_92c6d,%edx
    xor    %eax,%eax
    call   func_26198
  jump_519b4:
    xor    %eax,%eax
    mov    data_96b2a,%ax
    cmp    $0xffff,%eax
    jne    jump_519f7
    mov    $data_92c7b,%edx
    mov    $data_12fc20,%eax
    xor    %ebx,%ebx
    call   func_1b270
    mov    %ax,data_96b2a
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_519f7
    mov    $0x1e0,%ebx
    mov    $data_92c89,%edx
    xor    %eax,%eax
    call   func_26198
  jump_519f7:
    mov    0xab(%ebp),%eax
    call   func_2ed4c
    mov    data_ca1ef,%ax
    xor    %edi,%edi
    test   %ax,%ax
    jle    jump_51a63
    jmp    jump_51a1e
  jump_51a11:
    mov    data_ca1ef,%dx
    inc    %edi
    cmp    %dx,%di
    jge    jump_51a63
  jump_51a1e:
    movswl %di,%eax
    imul   $0x7b,%eax,%eax
    mov    $data_bb1b3,%esi
    add    %eax,%esi
    mov    0x57(%esi),%al
    cmp    data_104bea,%al
    jne    jump_51a11
    mov    $0x96,%ebx
    mov    %esi,%edx
    mov    0xab(%ebp),%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    movswl %ax,%edx
    mov    0x67(%esi),%ebx
    and    $0xffff,%edx
    mov    0xab(%ebp),%eax
    call   func_2ec50
    jmp    jump_51a11
  jump_51a63:
    mov    0x4(%esp),%ecx
    mov    0xab(%ebp),%eax
    xor    %edx,%edx
    call   func_2f1e0
    mov    0xaf(%ebp),%dx
    mov    0xab(%ebp),%eax
    mov    (%esp),%ebx
    call   func_2ecdc
    mov    0x6(%esp),%edx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2f424
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_51a9e:
    mov    0xab(%eax),%eax
    mov    0x6(%esp),%edx
    mov    0x8cd(%eax),%ax
    sar    $0x10,%edx
    mov    %ax,0xaf(%ebp)
    mov    %ebp,%eax
    call   func_2f424
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_51ac7:
    xor    %edx,%edx
    mov    0xab(%eax),%eax
    mov    (%esp),%dx
    call   func_2ed14
    cmpl   $0x96,data_d8648
    jle    jump_51b01
    mov    $0x1,%ecx
    mov    $0x11,%ebx
    mov    %eax,data_d3664
    mov    $data_10ae70,%eax
    mov    %ecx,%edx
    call   func_56b60
    jmp    jump_51b36
  jump_51b01:
    mov    0xa(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    mov    $0x1,%ecx
    sub    %edx,%eax
    mov    $data_a3d21,%edx
    shl    $0x5,%eax
    mov    $0x10,%ebx
    add    %eax,%edx
    mov    $data_10ae70,%eax
    mov    %edx,data_d3660
    mov    %ecx,%edx
    call   func_56b60
  jump_51b36:
    mov    0xab(%ebp),%eax
    mov    0x8cd(%eax),%ax
    mov    %ax,0xaf(%ebp)
    xor    %eax,%eax
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_51b53:
    cmp    $0x1,%dx
    je     jump_518df
    jmp    jump_518c3


/*----------------------------------------------------------------*/
func_51b64:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_96110,0xa7(%eax)
    call   func_516d4
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_51b80:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_51b9f
    mov    $data_960d0,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_51b9f:
    mov    $0x1,%edx
    movl   $data_96110,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_51bbf
    call   func_76d64
  jump_51bbf:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_51bc4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x58,%esp
    mov    %eax,-0x8(%ebp)
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    $data_a2f72,%eax
    call   func_3efe0
    mov    %eax,%edx
    test   %eax,%eax
    jge    jump_51bfb
    xor    %eax,%edx
    jmp    jump_51c05
  jump_51bfb:
    cmp    $0x64,%eax
    jle    jump_51c05
    mov    $0x64,%edx
  jump_51c05:
    mov    -0x8(%ebp),%eax
    mov    0xab(%eax),%eax
    push   %edx
    mov    0x8c7(%eax),%ax
    and    $0xffff,%eax
    cmp    $0x1,%eax
    jne    jump_51c27
    mov    $data_92c97,%eax
    jmp    jump_51c2c
  jump_51c27:
    mov    $data_92c98,%eax
  jump_51c2c:
    push   %eax
    mov    -0x8(%ebp),%eax
    mov    0xab(%eax),%eax
    mov    0x8c7(%eax),%ax
    xor    %edx,%edx
    and    $0xffff,%eax
    mov    data_104bea,%dl
    push   %eax
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_a2f73(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    mov    $0x98,%eax
    call   func_1cea8
    push   %eax
    lea    -0x58(%ebp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_76d09
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0x18,%esp
    mov    data_a2f74(,%eax,2),%al
    mov    -0x8(%ebp),%edx
    push   $0x0
    lea    -0x58(%ebp),%ecx
    mov    $0x9,%ebx
    xor    %ah,%ah
    mov    $data_10debe,%edi
    shl    $0x2,%eax
    push   $0xff
    add    $0x13,%eax
    add    $0x4,%edx
    cwtl
    mov    %edx,-0x4(%ebp)
    push   %eax
    mov    %edx,%esi
    mov    $0x19,%edx
    push   $0x2
    mov    $data_10deb6,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    mov    $0x3,%ebx
    xor    %ecx,%ecx
    mov    -0x4(%ebp),%eax
    mov    data_104bea,%cl
    mov    %ebx,%edx
    call   func_53e38
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   func_2d218
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret

vtable_51d10:
    .long   func_52015
    .long   func_52015
    .long   func_52015
    .long   func_52056
    .long   func_52097


/*----------------------------------------------------------------*/
func_51d24:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1bc,%esp
    mov    %eax,%edi
    mov    %dx,0x1b4(%esp)
    mov    %ebx,0x1b0(%esp)
    mov    %ecx,0x1ac(%esp)
    cmp    $0x2,%dx
    jb     jump_520cf
    jbe    jump_51f6c
    cmp    $0x1c01,%dx
    je     jump_51f9b
  jump_51d60:
    mov    0x1b2(%esp),%edx
    mov    0x1ac(%esp),%ecx
    mov    0x1b0(%esp),%ebx
    mov    %edi,%eax
    sar    $0x10,%edx
    call   func_2f424
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_51d89:
    cmpl   $0x0,0xab(%eax)
    jne    jump_51e08
    mov    $data_92c9a,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,0xab(%edi)
    test   %eax,%eax
    jne    jump_51dbc
    mov    $0x259,%ebx
    mov    $data_92ca6,%edx
    call   func_26198
  jump_51dbc:
    mov    0xab(%edi),%eax
    movl   $0x0,0xab(%eax)
    mov    0xab(%edi),%eax
    movw   $0x6a,0x8c9(%eax)
    mov    $func_50d70,%edx
    mov    0xab(%edi),%eax
    call   func_2f1c8
    mov    $func_10a14,%edx
    mov    0xab(%edi),%eax
    call   func_2f1d8
    mov    0xab(%edi),%eax
    movb   $0x0,0xc5(%eax)
  jump_51e08:
    xor    %eax,%eax
    mov    data_104bea,%al
    mov    data_ffebc(,%eax,2),%ax
    mov    %ax,data_96b6e
    xor    %eax,%eax
    mov    data_96b72,%ax
    cmp    $0xffff,%eax
    jne    jump_51e60
    mov    $data_92cb4,%edx
    mov    $data_12fc20,%eax
    xor    %ebx,%ebx
    call   func_1b270
    mov    %ax,data_96b72
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_51e60
    mov    $0x269,%ebx
    mov    $data_92cc5,%edx
    xor    %eax,%eax
    call   func_26198
  jump_51e60:
    xor    %eax,%eax
    mov    data_96b70,%ax
    cmp    $0xffff,%eax
    jne    jump_51ea3
    mov    $data_92cd3,%edx
    mov    $data_12fc20,%eax
    xor    %ebx,%ebx
    call   func_1b270
    mov    %ax,data_96b70
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_51ea3
    mov    $0x270,%ebx
    mov    $data_92ce1,%edx
    xor    %eax,%eax
    call   func_26198
  jump_51ea3:
    mov    0xab(%edi),%eax
    xor    %edx,%edx
    call   func_2ed4c
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %ebx,%ebx
    add    %eax,%eax
    mov    %esp,%edx
    add    $data_a2f72,%eax
    call   func_40224
    mov    %eax,%ebp
    xor    %eax,%eax
    mov    %ax,0x1b8(%esp)
    jmp    jump_51f16
  jump_51ee0:
    mov    $0x64,%ebx
    mov    (%esp,%eax,4),%esi
    xor    %ecx,%ecx
    mov    %esi,%edx
    mov    0xab(%edi),%eax
    call   func_2ea8c
    movswl %ax,%edx
    mov    0x52(%esi),%ebx
    and    $0xffff,%edx
    mov    0xab(%edi),%eax
    call   func_2ec50
    incw   0x1b8(%esp)
  jump_51f16:
    mov    0x1b6(%esp),%eax
    sar    $0x10,%eax
    cmp    %ebp,%eax
    jl     jump_51ee0
    mov    0x1ac(%esp),%ecx
    mov    0xab(%edi),%eax
    xor    %edx,%edx
    call   func_2f1e0
    mov    0xaf(%edi),%dx
    mov    0xab(%edi),%eax
    mov    0x1b0(%esp),%ebx
    call   func_2ecdc
    mov    0x1b2(%esp),%edx
    mov    %edi,%eax
    sar    $0x10,%edx
    call   func_2f424
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_51f6c:
    mov    0xab(%eax),%eax
    mov    0x1b2(%esp),%edx
    mov    0x8cd(%eax),%ax
    sar    $0x10,%edx
    mov    %ax,0xaf(%edi)
    mov    %edi,%eax
    call   func_2f424
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_51f9b:
    xor    %edx,%edx
    mov    0xab(%eax),%eax
    mov    0x1b0(%esp),%dx
    call   func_2ed14
    mov    %eax,%esi
    mov    %eax,%edx
    cmp    $0x5,%ecx
    jne    jump_520b9
    mov    $data_92cef,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    mov    $0xffffffff,%ecx
    call   func_56da8
    mov    %esi,%edx
    xor    %ebx,%ebx
    call   func_4da7c
    mov    $0x1,%ecx
    mov    $0x8,%ebx
    mov    $data_10ae70,%eax
    mov    %ecx,%edx
    call   func_56b60
    mov    0xab(%edi),%eax
    mov    0x8cd(%eax),%ax
    mov    %ax,0xaf(%edi)
    mov    $0xffffffff,%eax
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_52015:
/*----------------------------------------------------------------*/
    mov    $0x1,%ecx
    mov    0x59(%edx),%eax
    mov    $0x11,%ebx
    mov    %eax,data_d3664
    mov    %ecx,%edx
    mov    $data_10ae70,%eax
    call   func_56b60
    mov    0xab(%edi),%eax
    mov    0x8cd(%eax),%ax
    mov    %ax,0xaf(%edi)
    mov    $0xffffffff,%eax
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_52056:
/*----------------------------------------------------------------*/
    mov    $0x1,%ecx
    mov    0x59(%esi),%eax
    mov    $0x10,%ebx
    mov    %eax,data_d3660
    mov    %ecx,%edx
    mov    $data_10ae70,%eax
    call   func_56b60
    mov    0xab(%edi),%eax
    mov    0x8cd(%eax),%ax
    mov    %ax,0xaf(%edi)
    mov    $0xffffffff,%eax
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_52097:
/*----------------------------------------------------------------*/
    mov    $0x3,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_56b60
    mov    $0xffffffff,%eax
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_520b9:
    mov    0x58(%eax),%al
    dec    %al
    cmp    $0x4,%al
    ja     jump_520de
    and    $0xff,%eax
    jmp    *%cs:vtable_51d10(,%eax,4)
  jump_520cf:
    cmp    $0x1,%dx
    je     jump_51d89
    jmp    jump_51d60
  jump_520de:
    xor    %eax,%eax
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_520ec:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_960f8,0xa7(%eax)
    call   func_5214c
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_52108:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_52127
    mov    $data_960bc,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_52127:
    mov    $0x1,%edx
    movl   $data_960f8,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_52147
    call   func_76d64
  jump_52147:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5214c:
/*----------------------------------------------------------------*/
    movl   $0x0,0xaf(%eax)
    movl   $0x0,0xab(%eax)
    movw   $0x0,0xb3(%eax)
    movw   $0x0,0xb5(%eax)
    ret


/*----------------------------------------------------------------*/
func_52174:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    movl   $data_109df8,0xaf(%eax)
    xor    %edx,%edx
    mov    0xaf(%eax),%ecx
    mov    $data_92cfd,%eax
    xor    %esi,%esi
    call   func_1bb10
    mov    %eax,%edi
  jump_52199:
    mov    $0xc7,%edx
    mov    %edi,%ebx
    mov    %ecx,%eax
    call   func_7834e
    inc    %esi
    add    $0xc8,%ecx
    cmp    $0x15,%esi
    jl     jump_52199
    mov    %edi,%eax
    call   func_7744e
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_521c0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x13c,%esp
    mov    %eax,%ebp
    mov    %edx,0x138(%esp)
    call   func_52714
    lea    0x118(%esp),%edi
    mov    $0x1f6,%edx
    lea    0x4(%ebp),%esi
    mov    $0x7,%ebx
    mov    $0x278,%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0x99,%eax
    mov    $0x24,%esi
    mov    %edx,0x11c(%esp)
    mov    %ebx,0x120(%esp)
    mov    %ecx,0x124(%esp)
    mov    %esi,0x128(%esp)
    call   func_1cea8
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x8,%esp
    mov    $data_10debe,%edi
    push   $0x6e
    lea    0x4(%esp),%ecx
    xor    %ebx,%ebx
    push   $0xff
    lea    0x120(%esp),%esi
    xor    %edx,%edx
    push   $0xf3
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x3
    mov    $data_10deb6,%eax
    mov    0x148(%esp),%edi
    call   func_2b8a8
    test   %edi,%edi
    jne    jump_526ca
    lea    0x118(%esp),%edi
    push   $0x0
    lea    0x4(%ebp),%eax
    lea    0x4(%ebp),%esi
    push   %eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_5e9d0
    mov    $0x23,%eax
    lea    0x120(%esp),%esi
    add    $0x8,%esp
    mov    $data_10debe,%edi
    mov    %eax,0x128(%esp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0xb3(%ebp),%eax
    push   $0x0
    sar    $0x10,%eax
    push   $0xff
    mov    data_96779(%eax),%al
    mov    $data_1050a4,%ecx
    mov    0xb1(%ebp),%edx
    and    $0xff,%eax
    sar    $0x10,%edx
    push   %eax
    lea    0x0(,%edx,4),%eax
    xor    %ebx,%ebx
    add    %edx,%eax
    push   $0x3
    shl    $0x2,%eax
    xor    %edx,%edx
    add    %eax,%ecx
    mov    $data_10deb6,%eax
    call   func_2b8a8
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffef4,%dx
    call   func_1b084
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5231a
    mov    $0x325,%ebx
    mov    $data_92d09,%edx
    call   func_26198
  jump_5231a:
    push   $0x55
    mov    0xb1(%ebp),%eax
    push   $0x4b
    sar    $0x10,%eax
    push   %eax
    push   %ecx
    lea    0x4(%ebp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffee2,%dx
    call   func_1b084
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5235d
    mov    $0x329,%ebx
    mov    $data_92d17,%edx
    call   func_26198
  jump_5235d:
    push   $0x55
    mov    0xb3(%ebp),%eax
    push   $0x4b
    sar    $0x10,%eax
    push   %eax
    push   %ecx
    lea    0x4(%ebp),%esi
    push   %esi
    call   func_5cb3c
    mov    $0xffffffff,%ebx
    add    $0x14,%esp
    mov    $data_92d25,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %eax,%ecx
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_523ab
    mov    $0x334,%ebx
    mov    $data_92d35,%edx
    xor    %eax,%eax
    call   func_26198
  jump_523ab:
    push   $0xcd
    mov    0xb1(%ebp),%eax
    push   $0x48
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    %cx,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_5cb3c
    mov    $0xc1,%ebx
    mov    $0x6b,%edx
    add    $0x14,%esp
    xor    %ecx,%ecx
    mov    %esi,%eax
    mov    data_104bea,%cl
    call   func_53e38
    cmpl   $0x0,0xaf(%ebp)
    jne    jump_52408
    mov    $0x340,%ebx
    mov    $data_92d43,%edx
    xor    %eax,%eax
    call   func_26198
  jump_52408:
    mov    0xb1(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x15,%eax
    jl     jump_52427
    mov    $0x341,%ebx
    mov    $data_92d51,%edx
    xor    %eax,%eax
    call   func_26198
  jump_52427:
    mov    0xb1(%ebp),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    mov    0xaf(%ebp),%edx
    shl    $0x3,%eax
    add    %edx,%eax
    push   %eax
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    shl    $0x2,%eax
    add    $data_1050a4,%eax
    push   %eax
    mov    $0x9a,%eax
    call   func_1cea8
    push   %eax
    lea    0xc(%esp),%eax
    push   %eax
    mov    $0x109,%ebx
    call   func_76d09
    add    $0x10,%esp
    mov    %ebx,0x120(%esp)
    lea    0x118(%esp),%esi
    mov    0x14(%ebp),%eax
    push   $0x96
    mov    %eax,0x12c(%esp)
    mov    $data_10de9e,%edi
    mov    0xb3(%ebp),%eax
    push   $0xff
    sar    $0x10,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    data_96779(%eax),%al
    and    $0xff,%eax
    push   %eax
    lea    0xc(%esp),%ecx
    xor    %ebx,%ebx
    push   $0x0
    xor    %edx,%edx
    mov    $data_10de96,%eax
    call   func_2b8a8
    mov    $0x9b,%edx
    xor    %ebx,%ebx
  jump_524d5:
    mov    %edx,%eax
    add    $0x4,%ebx
    call   func_1cea8
    inc    %edx
    mov    %eax,0xec(%esp,%ebx,1)
    cmp    $0x14,%ebx
    jne    jump_524d5
    mov    $0xa0,%ebx
    xor    %edx,%edx
  jump_524f3:
    mov    %ebx,%eax
    add    $0x4,%edx
    call   func_1cea8
    inc    %ebx
    mov    %eax,0x128(%esp,%edx,1)
    cmp    $0xc,%edx
    jne    jump_524f3
    mov    $0xa3,%ebx
    xor    %edx,%edx
  jump_52511:
    mov    %ebx,%eax
    add    $0x4,%edx
    call   func_1cea8
    inc    %ebx
    mov    %eax,0x100(%esp,%edx,1)
    cmp    $0x14,%edx
    jne    jump_52511
    mov    $0x11,%ecx
    mov    $0x145,%esi
    mov    $0x144,%edi
    mov    $0x172,%eax
    mov    %ecx,0x11c(%esp)
    mov    %esi,0x120(%esp)
    mov    %edi,0x124(%esp)
    mov    %eax,0x128(%esp)
    mov    0xb9(%ebp),%eax
    sar    $0x10,%eax
    mov    0x12c(%esp,%eax,4),%edx
    mov    0xb7(%ebp),%eax
    sar    $0x10,%eax
    mov    0xf8(%esp,%eax,4),%ebx
    mov    0xb5(%ebp),%eax
    push   %edx
    sar    $0x10,%eax
    push   %ebx
    mov    0xf8(%esp,%eax,4),%ecx
    push   %ecx
    mov    $0xa8,%eax
    call   func_1cea8
    push   %eax
    lea    0x10(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x14,%esp
    lea    0x118(%esp),%esi
    push   $0xfa
    mov    $data_10debe,%edi
    xor    %edx,%edx
    push   $0x0
    xor    %ebx,%ebx
    lea    0x8(%esp),%ecx
    push   $0xffffffff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x82
    mov    $data_10deb6,%eax
    lea    0x128(%esp),%edi
    call   func_2b8a8
    mov    $data_10ae70,%eax
    lea    0x4(%ebp),%edx
    mov    $data_d8668,%esi
    call   func_552cc
    mov    $0x18b,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0x1cf,%edx
    mov    $0x17d,%esi
    mov    $0x1b1,%edi
    mov    %eax,0x124(%esp)
    mov    %edx,0x128(%esp)
    mov    %esi,0x11c(%esp)
    mov    %edi,0x120(%esp)
    xor    %esi,%esi
    xor    %edi,%edi
    jmp    jump_5264b
  jump_52628:
    mov    0x11c(%esp),%ebx
    mov    0x124(%esp),%ecx
    inc    %esi
    add    $0x10,%ebx
    add    $0x10,%ecx
    mov    %ebx,0x11c(%esp)
    mov    %ecx,0x124(%esp)
  jump_5264b:
    movswl %si,%eax
    cmp    $0x7,%eax
    jge    jump_526ac
    push   %eax
    mov    %edi,%ecx
    mov    0xb1(%ebp),%ebx
    xor    %edx,%edx
    mov    $data_12fc20,%eax
    mov    data_ffee0,%dx
    push   %edi
    sar    $0x10,%ebx
    call   func_1b084
    mov    %eax,%edx
    lea    0x120(%esp),%eax
    call   func_53f40
    cmp    0xb5(%ebp),%si
    jne    jump_52628
    push   %edi
    push   $0xf3
    mov    $0xe,%ecx
    lea    0x120(%esp),%eax
    push   $0x18
    mov    %edi,%ebx
    mov    %edi,%edx
    call   func_2bb74
    jmp    jump_52628
  jump_526ac:
    push   $0x1d8
    mov    $0x1ed,%ecx
    mov    $0x1a4,%ebx
    mov    $0x17b,%edx
    mov    $data_10ae70,%eax
    call   func_55274
  jump_526ca:
    add    $0x13c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_526d8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    mov    data_d8648,%edx
    cmp    $0x1f6,%edx
    jle    jump_5270e
    cmp    $0x278,%edx
    jge    jump_5270e
    mov    data_d864c,%ecx
    cmp    $0x17d,%ecx
    jle    jump_5270e
    cmp    $0x1d8,%ecx
    jge    jump_5270e
    mov    $0xffffffff,%eax
    pop    %edx
    pop    %ecx
    ret
  jump_5270e:
    xor    %eax,%eax
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_52714:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x28,%esp
    mov    %eax,0x14(%esp)
    mov    %esp,%edi
    mov    $data_d8668,%esi
    mov    $0x1f6,%edx
    mov    $0x17d,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0x278,%ecx
    mov    $0x1d8,%esi
    mov    %edx,0x4(%esp)
    mov    %ebx,0x8(%esp)
    mov    %ecx,0xc(%esp)
    mov    $0xf2,%edx
    mov    %esi,0x10(%esp)
    call   func_526d8
    cmp    $0xffffffff,%eax
    jne    jump_52765
    mov    $0x96,%edx
  jump_52765:
    push   %edx
    lea    0x4(%esp),%eax
    push   %eax
    call   func_5e9d0
    add    $0x8,%esp
    mov    $0x278,%ecx
    mov    $0x17d,%ebx
    push   $0x1d8
    mov    $0x1f6,%edx
    mov    $data_10ae70,%eax
    call   func_55274
    mov    $0x3,%ebx
    mov    $data_92d5f,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    call   func_56e18
    mov    %eax,0x1c(%esp)
    test   %eax,%eax
    jne    jump_527be
    mov    $0x3bb,%ebx
    mov    $data_92d69,%edx
    call   func_26198
  jump_527be:
    mov    0x1c(%esp),%eax
    mov    0x1c(%esp),%esi
    xor    %edi,%edi
    mov    0x572(%eax),%ax
    add    $0x172,%esi
    mov    %eax,0x24(%esp)
    test   %ax,%ax
    jle    jump_52894
    jmp    jump_5285c
  jump_527e7:
    test   %eax,%eax
    jle    jump_527f2
    mov    $0x1,%ecx
    jmp    jump_527fe
  jump_527f2:
    cmp    $0xffffff24,%eax
    jle    jump_527fe
    mov    $0x2,%ecx
  jump_527fe:
    mov    0x5(%ebx),%edx
    sar    $0x10,%edx
    movl   $0x5,0x18(%esp)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idivl  0x18(%esp)
    add    $0x5,%eax
    mov    0x3(%ebx),%edx
    mov    $0x5,%ebx
    sar    $0x10,%edx
    push   %eax
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    add    %ebx,%eax
    push   %eax
    mov    0x0(%ebp),%eax
    shl    $0x2,%eax
    add    %eax,%ecx
    mov    0x24(%esp),%eax
    push   %ecx
    mov    0xab(%eax),%edx
    push   %edx
    lea    0x10(%esp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
  jump_5284f:
    mov    0x24(%esp),%ebx
    inc    %edi
    add    $0x4,%esi
    cmp    %bx,%di
    jge    jump_52894
  jump_5285c:
    mov    (%esi),%ebx
    flds   0xd(%ebx)
    fadds  data_92d77
    mov    0x4(%ebx),%ah
    call   func_76e98
    fistpl 0x20(%esp)
    test   %ah,%ah
    jne    jump_5284f
    mov    $0x3,%ecx
    mov    0x20(%esp),%eax
    mov    (%ebx),%ebp
    cmp    $0xdc,%eax
    jle    jump_527e7
    xor    %ecx,%ecx
    jmp    jump_527fe
  jump_52894:
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_d8da0
    mov    0x28(%esp),%eax
    push   $0x24
    mov    0xb1(%eax),%eax
    push   $0x62
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    data_ffef4,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    lea    0x24(%esp),%eax
    push   %eax
    call   func_5d631
    add    $0x28,%esp
    mov    data_ffef2,%ax
    xor    %edx,%edx
    push   $0x0
    mov    $0x62,%ecx
    mov    %ax,%dx
    push   $0x24
    mov    $data_12fc20,%eax
    mov    $0x3,%ebx
    call   func_1b084
    mov    %eax,%edx
    lea    0x8(%esp),%eax
    call   func_53eb8
    mov    $0xa9,%eax
    call   func_1cea8
    push   $0x0
    lea    0x4(%esp),%esi
    mov    $data_10debe,%edi
    push   $0xff
    mov    $0x50,%ebx
    mov    $0x41,%edx
    push   $0xffffffff
    mov    %eax,%ecx
    mov    $data_10deb6,%eax
    push   $0xc
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    add    $0x28,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5294c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x34,%esp
    mov    %eax,%ebp
    mov    %dx,0x30(%esp)
    mov    %ebx,0x2c(%esp)
    mov    %ecx,0x28(%esp)
    mov    %esp,%edi
    mov    $data_96b74,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    cmp    $0x1f5,%dx
    jb     jump_52fb9
    jbe    jump_52e19
    cmp    $0x1f9,%dx
    jb     jump_52fa9
    jbe    jump_52f4c
    cmp    $0x1fa,%dx
    jbe    jump_529a5
    cmp    $0x1c01,%dx
    je     jump_52dcc
  jump_529a5:
    mov    0x2e(%esp),%edx
    mov    0x28(%esp),%ecx
    mov    0x2c(%esp),%ebx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2f424
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_529c2:
    cmp    $0x17b,%ebx
    jle    jump_52a04
    cmp    $0x1ed,%ebx
    jge    jump_52a04
    cmp    $0x1a4,%ecx
    jle    jump_52a04
    cmp    $0x1d8,%ecx
    jge    jump_52a04
    mov    $data_96b14,%ebx
    mov    $0x5,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    call   func_56b60
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_52a04:
    mov    %ebp,%eax
    call   func_526d8
    cmp    $0xffffffff,%eax
    jne    jump_529a5
    mov    $data_96b20,%ebx
    mov    $0x5,%edx
    mov    $data_10ae70,%eax
    xor    %ecx,%ecx
    call   func_56b60
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_52a32:
    cmp    $0x17b,%ebx
    jle    jump_52aa4
    cmp    $0x1ed,%ebx
    jge    jump_52aa4
    cmp    $0x1a4,%ecx
    jle    jump_52aa4
    cmp    $0x1d8,%ecx
    jge    jump_52aa4
    mov    $data_10914c,%eax
    xor    %edx,%edx
    call   func_4fb90
    lea    -0x17b(%ebx),%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x4,%edx
    sbb    %edx,%eax
    sar    $0x4,%eax
    mov    %ax,0xb5(%ebp)
    mov    0xb3(%ebp),%edx
    mov    $data_a2f6c,%eax
    sar    $0x10,%edx
    call   func_1ee08
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_52aa4:
    mov    %ebp,%eax
    call   func_526d8
    cmp    $0xffffffff,%eax
    jne    jump_52ff7
    mov    $data_10914c,%eax
    xor    %edx,%edx
    call   func_4fb90
    mov    $data_a2f6c,%eax
    xor    %ebx,%ebx
    call   func_1f404
    mov    $data_a2f6c,%eax
    mov    $data_92d7b,%edx
    call   func_1f038
    mov    $data_10ae70,%eax
    call   func_56da8
    lea    0x190(%eax),%edx
  jump_52aeb:
    add    $0x4,%eax
    movl   $0x0,0x137a(%eax)
    cmp    %edx,%eax
    jne    jump_52aeb
    mov    $data_92d86,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    call   func_2280c
    mov    $data_92d90,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    add    $0x11f,%eax
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%edx
    movl   $0x3f800000,(%eax)
    movl   $0x0,(%edx)
    movl   $0x3f800000,0x4(%edx)
    add    $0x18,%eax
    movl   $0x0,0x8(%edx)
    movl   $0x0,(%eax)
    xor    %ebx,%ebx
    movl   $0x0,0x4(%eax)
    mov    $data_92d97,%edx
    movl   $0x3f800000,0x8(%eax)
    mov    $data_10ae70,%eax
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_52b90
    mov    $0x444,%ebx
    mov    $data_92da4,%edx
    call   func_26198
  jump_52b90:
    mov    %ecx,%eax
    mov    $0x1,%edx
    call   func_2dd70
    mov    0xbb(%ebp),%al
    xor    %ebx,%ebx
    mov    %al,data_a3d20
    mov    $data_a2f6c,%eax
    xor    %ecx,%ecx
    call   func_1eea4
    mov    $data_10ae70,%eax
    mov    %ebx,data_96bc0
    mov    $0xc,%ebx
    call   func_56b60
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_52bd6:
    mov    $data_92db2,%eax
    mov    $0xffffffff,%esi
    call   func_54048
    xor    %edi,%edi
    mov    %esi,data_96bc0
    mov    0xab(%ebp),%eax
    mov    %edi,data_12fc10
    test   %eax,%eax
    jne    jump_52c70
    mov    $data_92dbd,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,0xab(%ebp)
    test   %eax,%eax
    jne    jump_52c27
    mov    $0x463,%ebx
    mov    $data_92dc6,%edx
    call   func_26198
  jump_52c27:
    mov    0xab(%ebp),%eax
    movl   $0x0,0xab(%eax)
    mov    0xab(%ebp),%eax
    movw   $0x6d,0x8c9(%eax)
    mov    $func_51610,%edx
    mov    0xab(%ebp),%eax
    call   func_2f1c8
    mov    0xab(%ebp),%eax
    xor    %edx,%edx
    call   func_2e9cc
    mov    0xab(%ebp),%eax
    movb   $0xf2,0xc6(%eax)
  jump_52c70:
    mov    0xab(%ebp),%eax
    call   func_2ed4c
    xor    %esi,%esi
    jmp    jump_52c95
  jump_52c7f:
    mov    $0x73,%ebx
    movswl %si,%edx
    mov    0xab(%ebp),%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    inc    %esi
  jump_52c95:
    movswl %si,%eax
    cmp    $0x15,%eax
    jl     jump_52c7f
    mov    0x67(%ebp),%eax
    movw   $0x2,0xb7(%ebp)
    mov    (%eax),%eax
    movl   $0x2,0x72(%eax)
    mov    0x67(%ebp),%eax
    movw   $0x5,0xb9(%ebp)
    mov    0x4(%eax),%eax
    movl   $0x7,0x72(%eax)
    mov    0x67(%ebp),%eax
    movw   $0x1,0xbb(%ebp)
    mov    0x8(%eax),%eax
    movl   $0xb,0x72(%eax)
    mov    $0x1,%ah
    mov    0xb7(%ebp),%ebx
    mov    %ah,data_a3d20
    movw   $0x0,0xb3(%ebp)
    sar    $0x10,%ebx
    mov    0xb5(%ebp),%eax
    mov    0xb1(%ebp),%ecx
    sar    $0x10,%eax
    sar    $0x10,%ecx
    mov    -0x2(%esp,%eax,4),%edx
    mov    $data_a2f6c,%eax
    sar    $0x10,%edx
    call   func_1e10c
    xor    %dl,%dl
    movw   $0x0,0xb5(%ebp)
    mov    %dl,data_104bea
    mov    %dl,data_a2f73
    mov    0xb3(%ebp),%edx
    mov    $data_a2f6c,%eax
    sar    $0x10,%edx
    lea    0x14(%esp),%edi
    call   func_1ee08
    lea    0x4(%ebp),%esi
    mov    $0x17b,%ecx
    mov    $0x1d8,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0xf2
    mov    $0x1a4,%esi
    mov    $0x1ed,%edi
    mov    %eax,0x28(%esp)
    lea    0x18(%esp),%eax
    mov    %ecx,0x1c(%esp)
    push   %eax
    mov    %esi,0x24(%esp)
    mov    %edi,0x28(%esp)
    call   func_5e9d0
    add    $0x8,%esp
    lea    0x14(%esp),%edx
    mov    $data_10ae70,%eax
    call   func_552cc
    mov    0x2e(%esp),%edx
    mov    0x28(%esp),%ecx
    mov    %ebp,%eax
    mov    0x2c(%esp),%ebx
    call   func_52174
    sar    $0x10,%edx
    mov    %ebp,%eax
    call   func_2f424
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_52db9:
    mov    0x2e(%esp),%edx
    sar    $0x10,%edx
    call   func_2f424
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_52dcc:
    mov    0xb1(%eax),%eax
    sar    $0x10,%eax
    cmp    %ebx,%eax
    je     jump_52e0d
    mov    0x2c(%esp),%eax
    mov    0xb7(%ebp),%edx
    mov    %ax,0xb3(%ebp)
    sar    $0x10,%edx
    mov    0xb1(%ebp),%ebx
    mov    $data_a2f6c,%eax
    sar    $0x10,%ebx
    call   func_1e70c
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_52e0d:
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_52e19:
    incw   0xb7(%eax)
    mov    0xb5(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x5,%eax
    jne    jump_52e37
    movw   $0x0,0xb7(%ebp)
  jump_52e37:
    mov    $data_a2f6c,%eax
    mov    0xb1(%ebp),%ecx
    mov    0xb5(%ebp),%edx
    mov    0xb7(%ebp),%ebx
    sar    $0x10,%edx
    sar    $0x10,%ecx
    mov    -0x2(%esp,%edx,4),%edx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    call   func_1e10c
    mov    data_96bac,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_10ae74(,%eax,4),%eax
    call   func_24d30
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
    mov    0x67(%ebp),%eax
    mov    0xb5(%ebp),%edx
    mov    (%eax),%eax
    sar    $0x10,%edx
    mov    %edx,0x72(%eax)
    mov    0x67(%ebp),%eax
    mov    (%eax),%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_52eb8:
    incw   0xb9(%eax)
    mov    0xb7(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x8,%eax
    jne    jump_52ed6
    movw   $0x3,0xb9(%ebp)
  jump_52ed6:
    mov    $data_a2f6c,%eax
    mov    0xb1(%ebp),%ebx
    mov    0xb7(%ebp),%edx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    call   func_1e70c
    mov    data_96bac,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_10ae74(,%eax,4),%eax
    call   func_24d30
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
    mov    0xb7(%ebp),%edx
    mov    0x67(%ebp),%eax
    sar    $0x10,%edx
    mov    0x4(%eax),%eax
    add    $0x2,%edx
    mov    %edx,0x72(%eax)
    mov    0x67(%ebp),%eax
    mov    0x4(%eax),%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_52f4c:
    incw   0xbb(%eax)
    mov    0xb9(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jne    jump_52f6a
    movw   $0x0,0xbb(%ebp)
  jump_52f6a:
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    0xb9(%ebp),%edx
    mov    0x67(%ebp),%eax
    sar    $0x10,%edx
    mov    0x8(%eax),%eax
    add    $0xa,%edx
    mov    %edx,0x72(%eax)
    mov    0x67(%ebp),%eax
    mov    0x8(%eax),%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_52fa9:
    cmp    $0x1f7,%dx
    je     jump_52eb8
    jmp    jump_529a5
  jump_52fb9:
    cmp    $0x2,%dx
    jb     jump_52fe8
    jbe    jump_52db9
    cmp    $0x4,%dx
    jb     jump_529a5
    cmp    $0x5,%dx
    jbe    jump_52a32
    cmp    $0xc,%dx
    je     jump_529c2
    jmp    jump_529a5
  jump_52fe8:
    cmp    $0x1,%dx
    je     jump_52bd6
    jmp    jump_529a5
  jump_52ff7:
    xor    %eax,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_53000:
/*----------------------------------------------------------------*/
    push   %edx
    sub    $0x8,%esp
    mov    %eax,%edx
    flds   0x4(%eax)
    fmul   %st(0),%st
    flds   (%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x8(%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fstps  0x4(%esp)
    fldz
    fcomps 0x4(%esp)
    fnstsw %ax
    sahf
    jae    jump_5304c
    fld1
    fdivs  0x4(%esp)
    flds   (%edx)
    fmul   %st(1),%st
    fstps  (%edx)
    flds   0x4(%edx)
    fmul   %st(1),%st
    fstps  0x4(%edx)
    fmuls  0x8(%edx)
    fstps  0x8(%edx)
  jump_5304c:
    add    $0x8,%esp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_53054:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_53000
    flds   0x8(%esp)
    flds   (%edx)
    fmul   %st(1),%st
    fstps  (%edx)
    flds   0x4(%edx)
    fmul   %st(1),%st
    fstps  0x4(%edx)
    fmuls  0x8(%edx)
    fstps  0x8(%edx)
    pop    %edx
    ret    $0x4


/*----------------------------------------------------------------*/
func_53078:
/*----------------------------------------------------------------*/
    testl  $0x7fffffff,(%eax)
    jne    jump_53098
    testl  $0x7fffffff,0x4(%eax)
    jne    jump_53098
    testl  $0x7fffffff,0x8(%eax)
    jne    jump_53098
    mov    $0xffffffff,%eax
    ret
  jump_53098:
    xor    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_5309c:
/*----------------------------------------------------------------*/
    sub    $0x4,%esp
    flds   0x4(%eax)
    fmuls  0x4(%edx)
    flds   (%eax)
    fmuls  (%edx)
    faddp  %st,%st(1)
    flds   0x8(%eax)
    fmuls  0x8(%edx)
    faddp  %st,%st(1)
    fstps  (%esp)
    flds   0x4(%eax)
    fmul   %st(0),%st
    flds   (%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x8(%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fdivrs (%esp)
    fstps  (%esp)
    flds   0x4(%edx)
    fmul   %st(0),%st
    flds   (%edx)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x8(%edx)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_76e30
    fdivrs (%esp)
    fsts   (%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_78bd0
    fmuls  data_96144
    fsts   (%esp)
    add    $0x4,%esp
    ret


/*----------------------------------------------------------------*/
func_53114:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x18,%esp
    mov    (%eax),%ebx
    mov    %ebx,0xc(%esp)
    mov    0x4(%eax),%ebx
    mov    %ebx,0x10(%esp)
    mov    0x8(%eax),%ebx
    mov    %ebx,0x14(%esp)
    mov    0xc(%esp),%ebx
    mov    %ebx,(%esp)
    mov    0x10(%esp),%ebx
    mov    %ebx,0x4(%esp)
    mov    0x14(%esp),%ebx
    mov    %ebx,0x8(%esp)
    flds   0x10(%esp)
    fmuls  0x4(%edx)
    flds   0xc(%esp)
    fmuls  (%edx)
    faddp  %st,%st(1)
    flds   0x14(%esp)
    fmuls  0x8(%edx)
    faddp  %st,%st(1)
    fstps  (%eax)
    flds   0x4(%esp)
    fmuls  0x10(%edx)
    flds   (%esp)
    fmuls  0xc(%edx)
    faddp  %st,%st(1)
    flds   0x8(%esp)
    fmuls  0x14(%edx)
    faddp  %st,%st(1)
    fstps  0x4(%eax)
    flds   0x4(%esp)
    fmuls  0x1c(%edx)
    flds   (%esp)
    fmuls  0x18(%edx)
    faddp  %st,%st(1)
    flds   0x8(%esp)
    fmuls  0x20(%edx)
    faddp  %st,%st(1)
    fstps  0x8(%eax)
    add    $0x18,%esp
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5323c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x14,%esp
    mov    %eax,%edx
    testl  $0x7fffffff,0x24(%esp)
    je     jump_532a0
    flds   0x24(%esp)
    fmuls  data_96140
    fstpl  (%esp)
    mov    0x4(%esp),%ecx
    push   %ecx
    mov    0x4(%esp),%esi
    push   %esi
    call   func_775da
    push   %ecx
    push   %esi
    fstps  0x14(%esp)
    call   func_775e6
    mov    0x4(%edx),%eax
    mov    %eax,0x8(%esp)
    flds   0x8(%esp)
    fmuls  0xc(%esp)
    flds   0x8(%edx)
    fmul   %st(2),%st
    fsubrp %st,%st(1)
    fstps  0x4(%edx)
    flds   0x8(%edx)
    fmuls  0xc(%esp)
    flds   0x8(%esp)
    fmulp  %st,%st(2)
    faddp  %st,%st(1)
    fstps  0x8(%edx)
  jump_532a0:
    add    $0x14,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    ret    $0x4


/*----------------------------------------------------------------*/
func_532ac:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x14,%esp
    mov    %eax,%edx
    testl  $0x7fffffff,0x24(%esp)
    je     jump_5330e
    flds   0x24(%esp)
    fmuls  data_96140
    fstpl  (%esp)
    mov    0x4(%esp),%ecx
    push   %ecx
    mov    0x4(%esp),%esi
    push   %esi
    call   func_775da
    push   %ecx
    push   %esi
    fstps  0x14(%esp)
    call   func_775e6
    mov    (%edx),%eax
    flds   0x8(%edx)
    fmul   %st(1),%st
    mov    %eax,0x8(%esp)
    flds   0x8(%esp)
    fmuls  0xc(%esp)
    faddp  %st,%st(1)
    fstps  (%edx)
    flds   0x8(%edx)
    fmuls  0xc(%esp)
    flds   0x8(%esp)
    fmulp  %st,%st(2)
    fsubp  %st,%st(1)
    fstps  0x8(%edx)
  jump_5330e:
    add    $0x14,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    ret    $0x4


/*----------------------------------------------------------------*/
func_53384:
/*----------------------------------------------------------------*/
    flds   0x4(%edx)
    fmuls  0x4(%eax)
    flds   (%edx)
    fmuls  (%eax)
    faddp  %st,%st(1)
    flds   0x8(%edx)
    fmuls  0x8(%eax)
    faddp  %st,%st(1)
    fadds  0xc(%edx)
    fstps  (%ebx)
    flds   0x14(%edx)
    fmuls  0x4(%eax)
    flds   0x10(%edx)
    fmuls  (%eax)
    faddp  %st,%st(1)
    flds   0x18(%edx)
    fmuls  0x8(%eax)
    faddp  %st,%st(1)
    fadds  0x1c(%edx)
    fstps  0x4(%ebx)
    flds   0x24(%edx)
    fmuls  0x4(%eax)
    flds   0x20(%edx)
    fmuls  (%eax)
    faddp  %st,%st(1)
    flds   0x28(%edx)
    fmuls  0x8(%eax)
    faddp  %st,%st(1)
    fadds  0x2c(%edx)
    fstps  0x8(%ebx)
    ret


/*----------------------------------------------------------------*/
func_533d4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0xc,%esp
    mov    0x24(%esp),%ebx
    mov    0x28(%esp),%edx
    flds   0x18(%esp)
    flds   (%eax)
    fmul   %st(1),%st
    fld1
    fdivs  0x8(%eax)
    fld    %st(1)
    fmul   %st(1),%st
    fstp   %st(2)
    flds   0x4(%eax)
    fmulp  %st,%st(3)
    fmulp  %st,%st(2)
    fldl   data_92dd4
    fxch   %st(1)
    fadd   %st(1),%st
    call   func_76e98
    fistpl 0x8(%esp)
    mov    0x8(%esp),%eax
    faddp  %st,%st(1)
    mov    %ax,(%ebx)
    call   func_76e98
    fistpl 0x8(%esp)
    mov    0x8(%esp),%eax
    mov    %ax,(%edx)
    mov    0x1c(%esp),%eax
    add    %ax,(%ebx)
    mov    0x20(%esp),%eax
    add    %ax,(%edx)
    add    $0xc,%esp
    pop    %edx
    pop    %ebx
    ret    $0x14


/*----------------------------------------------------------------*/
func_53440:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x10,%esp
    mov    data_96b88,%ebx
    mov    %eax,%ecx
    fldz
    fcomps (%eax)
    fnstsw %ax
    sahf
    ja     jump_5345d
    mov    %ebx,%edx
    mov    %ebx,%eax
    jmp    jump_53463
  jump_5345d:
    mov    %ebx,%edx
    neg    %edx
    mov    %edx,%eax
  jump_53463:
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,0x4(%esp)
    fildl  0x4(%esp)
    fadds  (%ecx)
    call   func_76e98
    fistpl (%esp)
    mov    (%esp),%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    imul   %ebx,%edx
    mov    %eax,(%esp)
    mov    %edx,(%esp)
    fildl  (%esp)
    fstps  (%ecx)
    fldz
    fcomps 0x4(%ecx)
    fnstsw %ax
    sahf
    ja     jump_534a6
    mov    %ebx,%edx
    mov    %ebx,%eax
    jmp    jump_534ac
  jump_534a6:
    mov    %ebx,%edx
    neg    %edx
    mov    %edx,%eax
  jump_534ac:
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,0x8(%esp)
    fildl  0x8(%esp)
    fadds  0x4(%ecx)
    call   func_76e98
    fistpl (%esp)
    mov    (%esp),%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    imul   %ebx,%edx
    mov    %eax,(%esp)
    mov    %edx,(%esp)
    fildl  (%esp)
    fstps  0x4(%ecx)
    fldz
    fcomps 0x8(%ecx)
    fnstsw %ax
    sahf
    ja     jump_534f1
    mov    %ebx,%edx
    mov    %ebx,%eax
    jmp    jump_534f7
  jump_534f1:
    mov    %ebx,%edx
    neg    %edx
    mov    %edx,%eax
  jump_534f7:
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,0xc(%esp)
    fildl  0xc(%esp)
    fadds  0x8(%ecx)
    call   func_76e98
    fistpl (%esp)
    mov    (%esp),%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    imul   %ebx,%edx
    mov    %eax,(%esp)
    mov    %edx,(%esp)
    fildl  (%esp)
    fstps  0x8(%ecx)
    mov    %ebx,data_96b88
    add    $0x10,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_53564:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    0xc(%esp),%ebx
    test   $0x7fffffff,%ebx
    je     jump_53584
    lea    0x18(%edx),%eax
    push   %ebx
    call   func_532ac
    mov    %edx,%eax
    call   func_53754
  jump_53584:
    pop    %edx
    pop    %ebx
    ret    $0x4


/*----------------------------------------------------------------*/
func_535b4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    0xc(%esp),%ebx
    test   $0x7fffffff,%ebx
    je     jump_535dd
    lea    0x18(%edx),%eax
    push   %ebx
    call   func_5323c
    lea    0xc(%edx),%eax
    push   %ebx
    call   func_5323c
    mov    %edx,%eax
    call   func_53864
  jump_535dd:
    pop    %edx
    pop    %ebx
    ret    $0x4


/*----------------------------------------------------------------*/
func_535e4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    0xc(%esp),%ebx
    test   $0x7fffffff,%ebx
    je     jump_5360d
    lea    0x18(%edx),%eax
    push   %ebx
    call   func_532ac
    lea    0xc(%edx),%eax
    push   %ebx
    call   func_532ac
    mov    %edx,%eax
    call   func_53864
  jump_5360d:
    pop    %edx
    pop    %ebx
    ret    $0x4


/*----------------------------------------------------------------*/
func_53754:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x38,%esp
    mov    %eax,%ebx
    lea    0xc(%eax),%edx
    mov    %edx,%eax
    xor    %esi,%esi
    call   func_53000
    lea    0xc(%esp),%eax
    mov    %esi,0x18(%esp)
    mov    %esi,0x1c(%esp)
    mov    %esi,0x20(%esp)
    mov    %eax,0x30(%esp)
    lea    0x18(%ebx),%ecx
    flds   0x4(%edx)
    fmuls  0x8(%ecx)
    flds   0x8(%edx)
    fmuls  0x4(%ecx)
    fsubrp %st,%st(1)
    fstps  0x18(%esp)
    flds   0x8(%edx)
    fmuls  (%ecx)
    flds   (%edx)
    fmuls  0x8(%ecx)
    fsubrp %st,%st(1)
    fstps  0x1c(%esp)
    flds   (%edx)
    fmuls  0x4(%ecx)
    mov    0x18(%esp),%eax
    flds   0x4(%edx)
    fmuls  (%ecx)
    mov    %eax,0xc(%esp)
    fsubrp %st,%st(1)
    mov    0x1c(%esp),%eax
    fstps  0x20(%esp)
    mov    %eax,0x10(%esp)
    mov    0x20(%esp),%eax
    mov    %eax,0x14(%esp)
    mov    0x18(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x10(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    %ebx,%eax
    call   func_53000
    lea    0x24(%esp),%eax
    mov    %esi,(%esp)
    mov    %esi,0x4(%esp)
    mov    %esi,0x8(%esp)
    mov    %eax,0x34(%esp)
    flds   0x4(%ebx)
    fmuls  0x8(%edx)
    flds   0x8(%ebx)
    fmuls  0x4(%edx)
    fsubrp %st,%st(1)
    fstps  (%esp)
    flds   0x8(%ebx)
    fmuls  (%edx)
    flds   (%ebx)
    fmuls  0x8(%edx)
    fsubrp %st,%st(1)
    fstps  0x4(%esp)
    flds   (%ebx)
    fmuls  0x4(%edx)
    mov    (%esp),%eax
    flds   0x4(%ebx)
    fmuls  (%edx)
    mov    %eax,0x24(%esp)
    fsubrp %st,%st(1)
    mov    0x4(%esp),%eax
    fstps  0x8(%esp)
    mov    %eax,0x28(%esp)
    mov    0x8(%esp),%eax
    mov    %eax,0x2c(%esp)
    mov    (%esp),%eax
    mov    %eax,(%ecx)
    mov    0x28(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x2c(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    %ecx,%eax
    call   func_53000
    add    $0x38,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_53864:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x38,%esp
    mov    %eax,%ebx
    lea    0x18(%eax),%edx
    lea    0xc(%ebx),%ecx
    mov    %edx,%eax
    xor    %esi,%esi
    call   func_53000
    lea    0xc(%esp),%eax
    mov    %esi,0x18(%esp)
    mov    %esi,0x1c(%esp)
    mov    %esi,0x20(%esp)
    mov    %eax,0x30(%esp)
    flds   0x4(%ecx)
    fmuls  0x8(%edx)
    flds   0x8(%ecx)
    fmuls  0x4(%edx)
    fsubrp %st,%st(1)
    fstps  0x18(%esp)
    flds   0x8(%ecx)
    fmuls  (%edx)
    flds   (%ecx)
    fmuls  0x8(%edx)
    fsubrp %st,%st(1)
    fstps  0x1c(%esp)
    flds   (%ecx)
    fmuls  0x4(%edx)
    mov    0x18(%esp),%eax
    flds   0x4(%ecx)
    fmuls  (%edx)
    mov    %eax,0xc(%esp)
    fsubrp %st,%st(1)
    mov    0x1c(%esp),%eax
    fstps  0x20(%esp)
    mov    %eax,0x10(%esp)
    mov    0x20(%esp),%eax
    mov    %eax,0x14(%esp)
    mov    0x18(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x10(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    %ebx,%eax
    call   func_53000
    lea    0x24(%esp),%eax
    mov    %esi,(%esp)
    mov    %esi,0x4(%esp)
    mov    %esi,0x8(%esp)
    mov    %eax,0x34(%esp)
    flds   0x4(%edx)
    fmuls  0x8(%ebx)
    flds   0x8(%edx)
    fmuls  0x4(%ebx)
    fsubrp %st,%st(1)
    fstps  (%esp)
    flds   0x8(%edx)
    fmuls  (%ebx)
    flds   (%edx)
    fmuls  0x8(%ebx)
    fsubrp %st,%st(1)
    fstps  0x4(%esp)
    flds   (%edx)
    fmuls  0x4(%ebx)
    mov    (%esp),%eax
    flds   0x4(%edx)
    fmuls  (%ebx)
    mov    %eax,0x24(%esp)
    fsubrp %st,%st(1)
    mov    0x4(%esp),%eax
    fstps  0x8(%esp)
    mov    %eax,0x28(%esp)
    mov    0x8(%esp),%eax
    mov    %eax,0x2c(%esp)
    mov    (%esp),%eax
    mov    %eax,(%ecx)
    mov    0x28(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x2c(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    %ecx,%eax
    call   func_53000
    add    $0x38,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_53b08:
/*----------------------------------------------------------------*/
    sub    $0x4,%esp
    mov    %edx,(%esp)
    mov    %ebx,%edx
    flds   0x4(%edx)
    mov    (%esp),%edx
    fmuls  0x4(%edx)
    mov    %ebx,%edx
    flds   (%edx)
    mov    (%esp),%edx
    fmuls  (%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x8(%edx)
    mov    (%esp),%edx
    fmuls  0x8(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  (%eax)
    flds   0x10(%edx)
    mov    (%esp),%edx
    fmuls  0x4(%edx)
    mov    %ebx,%edx
    flds   0xc(%edx)
    mov    (%esp),%edx
    fmuls  (%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x14(%edx)
    mov    (%esp),%edx
    fmuls  0x8(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x4(%eax)
    flds   0x1c(%edx)
    mov    (%esp),%edx
    fmuls  0x4(%edx)
    mov    %ebx,%edx
    flds   0x18(%edx)
    mov    (%esp),%edx
    fmuls  (%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x20(%edx)
    mov    (%esp),%edx
    fmuls  0x8(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x8(%eax)
    flds   0x4(%edx)
    mov    (%esp),%edx
    fmuls  0x10(%edx)
    mov    %ebx,%edx
    flds   (%edx)
    mov    (%esp),%edx
    fmuls  0xc(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x8(%edx)
    mov    (%esp),%edx
    fmuls  0x14(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x10(%eax)
    flds   0xc(%edx)
    mov    (%esp),%edx
    fmuls  0xc(%edx)
    mov    %ebx,%edx
    flds   0x10(%edx)
    mov    (%esp),%edx
    fmuls  0x10(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x14(%edx)
    mov    (%esp),%edx
    fmuls  0x14(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x14(%eax)
    flds   0x18(%edx)
    mov    (%esp),%edx
    fmuls  0xc(%edx)
    mov    %ebx,%edx
    flds   0x1c(%edx)
    mov    (%esp),%edx
    fmuls  0x10(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x20(%edx)
    mov    (%esp),%edx
    fmuls  0x14(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x18(%eax)
    flds   0x4(%edx)
    mov    (%esp),%edx
    fmuls  0x1c(%edx)
    mov    %ebx,%edx
    flds   (%edx)
    mov    (%esp),%edx
    fmuls  0x18(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x8(%edx)
    mov    (%esp),%edx
    fmuls  0x20(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x20(%eax)
    flds   0xc(%edx)
    mov    (%esp),%edx
    fmuls  0x18(%edx)
    mov    %ebx,%edx
    flds   0x10(%edx)
    mov    (%esp),%edx
    fmuls  0x1c(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x14(%edx)
    mov    (%esp),%edx
    fmuls  0x20(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x24(%eax)
    flds   0x18(%edx)
    mov    (%esp),%edx
    fmuls  0x18(%edx)
    mov    %ebx,%edx
    flds   0x1c(%edx)
    mov    (%esp),%edx
    fmuls  0x1c(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x20(%edx)
    mov    (%esp),%edx
    fmuls  0x20(%edx)
    faddp  %st,%st(1)
    mov    %ecx,%edx
    fstps  0x28(%eax)
    flds   0x4(%edx)
    mov    (%esp),%edx
    fmuls  0x4(%edx)
    mov    %ecx,%edx
    flds   (%edx)
    mov    (%esp),%edx
    fmuls  (%edx)
    faddp  %st,%st(1)
    mov    %ecx,%edx
    flds   0x8(%edx)
    mov    (%esp),%edx
    fmuls  0x8(%edx)
    faddp  %st,%st(1)
    mov    %ecx,%edx
    fstps  0xc(%eax)
    flds   0x4(%edx)
    mov    (%esp),%edx
    fmuls  0x10(%edx)
    mov    %ecx,%edx
    flds   (%edx)
    mov    (%esp),%edx
    fmuls  0xc(%edx)
    faddp  %st,%st(1)
    mov    %ecx,%edx
    flds   0x8(%edx)
    mov    (%esp),%edx
    fmuls  0x14(%edx)
    faddp  %st,%st(1)
    mov    %ecx,%edx
    fstps  0x1c(%eax)
    flds   0x4(%edx)
    mov    (%esp),%edx
    fmuls  0x1c(%edx)
    mov    %ecx,%edx
    flds   (%edx)
    mov    (%esp),%edx
    fmuls  0x18(%edx)
    faddp  %st,%st(1)
    mov    %ecx,%edx
    flds   0x8(%edx)
    mov    (%esp),%edx
    fmuls  0x20(%edx)
    faddp  %st,%st(1)
    fstps  0x2c(%eax)
    add    $0x4,%esp
    ret

vtable_53cea:
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0

vtable_53d02:
    .long   0

vtable_53d06:
    .long   0


/*----------------------------------------------------------------*/
func_53d0a:
/*----------------------------------------------------------------*/
    add    %al,(%eax)


/*----------------------------------------------------------------*/
func_53d0c:
/*----------------------------------------------------------------*/
    add    %al,(%eax)

vtable_53d0e:
    .long   0
    .long   0
    .long   0

vtable_53d1c:
    .long   0


/*----------------------------------------------------------------*/
func_53d22:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    pushf
    cli
    mov    $0x100,%eax
    mov    $0x10,%ebx
    int    $0x31
    mov    %edx,vtable_53d1c
    mov    %ax,func_53d0c
    movw   $0x0,vtable_53cea
    mov    $0x4f01,%eax
    mov    %ax,vtable_53d06
    mov    0x8(%ebp),%eax
    mov    %ax,vtable_53d02
    movw   $0x0,vtable_53d0e
    pushfw
    pop    %ax
    mov    %ax,func_53d0a
    mov    $0x300,%eax
    mov    $0x10,%ebx
    mov    $0x0,%ecx
    lea    vtable_53cea,%edi
    int    $0x31
    mov    $0x101,%eax
    mov    vtable_53d1c,%edx
    int    $0x31
    mov    vtable_53d06,%ax
    cmp    $0x4f,%ax
    je     jump_53da6
    xor    %ax,%ax
  jump_53da6:
    push   %ebp
    mov    %esp,%ebp
    testb  $0x2,0x5(%ebp)
    cli
    je     jump_53db1
    sti
  jump_53db1:
    pop    %ebp
    popf
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_53dc0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_96b8c,%eax
    call   func_786da
    mov    $data_10ae70,%eax
    mov    $0x1,%edx
    call   func_54344
    mov    %edx,data_96b94
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_53de4:
/*----------------------------------------------------------------*/
    incl   data_132b58
    ret


/*----------------------------------------------------------------*/
func_53dec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    $0x2000000,%edx
    xor    %ecx,%ecx
    xor    %edi,%edi
  jump_53dfa:
    lea    (%ecx,%edx,1),%ebx
    mov    %ebx,%eax
    call   func_78734
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_53e0c
    mov    %ebx,%ecx
  jump_53e0c:
    cmp    $0x2000000,%ecx
    je     jump_53e1c
    cmp    $0x1000,%edx
    jge    jump_53e21
  jump_53e1c:
    mov    $0xffffffff,%edi
  jump_53e21:
    mov    %esi,%eax
    call   func_7882f
    sar    %edx
    test   %edi,%edi
    je     jump_53dfa
    mov    %ecx,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_53e38:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ebx,(%esp)
    cmp    data_a3cf4,%cx
    jl     jump_53e5f
    mov    $0xd0,%ebx
    mov    $data_92ddc,%edx
    xor    %eax,%eax
    call   func_26198
  jump_53e5f:
    mov    data_ffee0,%ax
    xor    %edx,%edx
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_53e89
    mov    $0xd5,%ebx
    mov    $data_92dea,%edx
    call   func_26198
  jump_53e89:
    movswl %cx,%ecx
    mov    %ecx,%eax
    mov    (%esp),%edx
    shl    $0x5,%eax
    xor    %ebx,%ebx
    sub    %ecx,%eax
    push   %ecx
    shl    $0x3,%eax
    push   %edx
    sub    %ecx,%eax
    mov    %ebp,%edx
    mov    %esi,%ecx
    mov    data_a2f73(,%eax,2),%bl
    mov    %edi,%eax
    call   func_53eb8
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_53eb8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%ebp
    mov    %ebx,(%esp)
    mov    %ecx,%esi
    mov    0x16(%esp),%ecx
    sar    $0x10,%ecx
    mov    %ecx,%ebx
    shl    $0x5,%ebx
    sub    %ecx,%ebx
    shl    $0x3,%ebx
    sub    %ecx,%ebx
    mov    data_a2f74(,%ebx,2),%bl
    and    $0xff,%ebx
    xor    %eax,%eax
    shl    $0x2,%ebx
    mov    %al,%dl
    add    $0x13,%ebx
    neg    %dl
    add    %bl,%dl
    jmp    jump_53f0a
  jump_53ef7:
    mov    $0x13,%ecx
    sub    %ebx,%ecx
    mov    data_10de92,%ebx
    inc    %eax
    mov    %dl,(%ecx,%ebx,1)
    dec    %dl
  jump_53f0a:
    movswl %ax,%ebx
    cmp    $0x4,%ebx
    jl     jump_53ef7
    mov    data_10de92,%edx
    push   %edx
    call   func_5d007
    add    $0x4,%esp
    mov    0x14(%esp),%ebx
    push   %ebx
    push   %esi
    mov    0x8(%esp),%ecx
    push   %ecx
    push   %ebp
    push   %edi
    call   func_5d026
    add    $0x14,%esp
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_53f40:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%ebp
    mov    %ebx,%edi
    mov    %ecx,(%esp)
    mov    0x16(%esp),%ebx
    xor    %eax,%eax
    sar    $0x10,%ebx
    mov    %al,%dl
    shl    $0x2,%ebx
    neg    %dl
    add    $0x13,%ebx
    add    %bl,%dl
    jmp    jump_53f79
  jump_53f66:
    mov    $0x13,%ecx
    sub    %ebx,%ecx
    mov    data_10de92,%ebx
    inc    %eax
    mov    %dl,(%ecx,%ebx,1)
    dec    %dl
  jump_53f79:
    movswl %ax,%ebx
    cmp    $0x4,%ebx
    jl     jump_53f66
    mov    data_10de92,%edx
    push   %edx
    call   func_5d007
    add    $0x4,%esp
    mov    0x14(%esp),%ebx
    push   %ebx
    mov    0x4(%esp),%ecx
    push   %ecx
    push   %edi
    push   %ebp
    push   %esi
    call   func_5d026
    add    $0x14,%esp
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_53fb0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x18c,%esp
    mov    %eax,%edx
    mov    %esp,%eax
    mov    $0x200,%ebx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    jne    jump_5401b
    mov    $0x74,%ebx
    lea    0x118(%esp),%edx
    mov    %esp,%eax
    call   func_1bf94
    mov    %esp,%edx
    mov    $data_a2f6c,%eax
    xor    %ecx,%ecx
    call   func_21aa0
    xor    %ebx,%ebx
    push   $0x0
    mov    $0xd,%edx
    mov    $data_10ae70,%eax
    call   func_56be8
    mov    $0xffffffff,%ebx
    mov    %esp,%edx
    mov    $data_10ae70,%eax
    call   func_5a294
    jmp    jump_54033
  jump_5401b:
    mov    $0xaa,%eax
    call   func_1cea8
    xor    %ebx,%ebx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_556cc
  jump_54033:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x18c,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_54048:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x18c,%esp
    mov    %eax,%edx
    mov    %esp,%eax
    call   func_1bb78
    mov    %esp,%eax
    call   func_1bca8
    test   %eax,%eax
    jne    jump_541dc
    mov    data_a2f6c,%eax
    mov    %eax,0x118(%esp)
    mov    data_a3cf2,%eax
    sar    $0x10,%eax
    mov    %eax,0x11c(%esp)
    xor    %eax,%eax
    xor    %edx,%edx
    mov    data_104bea,%al
    xor    %ebx,%ebx
    mov    %eax,0x120(%esp)
    xor    %eax,%eax
    jmp    jump_540b2
  jump_5409a:
    add    $0x1ee,%eax
    xor    %ecx,%ecx
    add    $0x4,%ebx
    mov    data_a2d85(%eax),%cl
    inc    %edx
    mov    %ecx,0x120(%esp,%ebx,1)
  jump_540b2:
    mov    data_a3cf2,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%edx
    jl     jump_5409a
    xor    %eax,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    jmp    jump_540e0
  jump_540c7:
    add    $0x1ee,%ebx
    xor    %ecx,%ecx
    add    $0x4,%edx
    mov    data_a2d86(%ebx),%cl
    inc    %eax
    mov    %ecx,0x13c(%esp,%edx,1)
  jump_540e0:
    mov    data_a3cf2,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jl     jump_540c7
    xor    %eax,%eax
    xor    %edx,%edx
    jmp    jump_54116
  jump_540f3:
    xor    %ebx,%ebx
    mov    data_104bea,%bl
    imul   $0x1ee,%ebx,%ebx
    mov    data_a312f(%ebx,%eax,1),%ebx
    add    $0x4,%edx
    sar    $0x18,%ebx
    inc    %eax
    mov    %ebx,0x158(%esp,%edx,1)
  jump_54116:
    mov    data_a3cf2,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jl     jump_540f3
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %ebx,%ebx
    add    %eax,%eax
    xor    %edx,%edx
    add    $data_a2f72,%eax
    call   func_40224
    xor    %edx,%edx
    mov    data_104bea,%dl
    mov    %eax,0x178(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    $data_a2f72,%eax
    xor    %edx,%edx
    call   func_402e0
    mov    data_104bea,%dl
    mov    %eax,0x17c(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    mov    $0x74,%ebx
    add    $data_a2f72,%eax
    lea    0x118(%esp),%edx
    call   func_40664
    mov    %eax,0x180(%esp)
    mov    %esp,%eax
    call   func_1c098
    mov    %esp,%edx
    mov    $data_a2f6c,%eax
    call   func_21374
    xor    %ebx,%ebx
    mov    %esp,%edx
    mov    $data_10ae70,%eax
    call   func_5a294
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x18c,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_541dc:
    mov    $0xaa,%eax
    call   func_1cea8
    xor    %ebx,%ebx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_556cc
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x18c,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_54208:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x28,%esp
    mov    %eax,%ecx
    movl   $data_d8da0,(%esp)
    mov    0xc(%eax),%eax
    mov    0x4(%ecx),%ebx
    sub    %ebx,%eax
    mov    %eax,0x4(%esp)
    mov    0x10(%ecx),%eax
    mov    0x8(%ecx),%esi
    sub    %esi,%eax
    mov    %eax,0x8(%esp)
    mov    0x4(%esp),%eax
    imul   0x8(%esp),%eax
    xor    %edi,%edi
    mov    %edi,0xc(%esp)
    mov    %edi,0x10(%esp)
    cmp    $jump_27100,%eax
    jl     jump_5425c
    mov    $0x13e,%ebx
    mov    $data_92df8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_5425c:
    mov    0x4(%esp),%eax
    push   $0xffffffff
    xor    %ebx,%ebx
    mov    %eax,0x24(%esp)
    mov    0xc(%esp),%eax
    push   %ebx
    mov    %eax,0x2c(%esp)
    lea    0x8(%esp),%eax
    push   %ebx
    mov    %eax,0x20(%esp)
    lea    0x20(%esp),%eax
    push   %eax
    push   %ebx
    push   %ebx
    push   %ecx
    mov    %ebx,0x34(%esp)
    mov    %ebx,0x38(%esp)
    call   func_5eaaf
    add    $0x1c,%esp
    test   %eax,%eax
    je     jump_542a7
    mov    $0x147,%ebx
    mov    $data_92e06,%edx
    xor    %eax,%eax
    call   func_26198
  jump_542a7:
    add    $0x28,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_542b0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x28,%esp
    mov    %eax,%ecx
    movl   $data_d8da0,(%esp)
    mov    0xc(%eax),%eax
    mov    0x4(%ecx),%ebx
    sub    %ebx,%eax
    mov    %eax,0x4(%esp)
    mov    0x10(%ecx),%eax
    mov    0x8(%ecx),%esi
    sub    %esi,%eax
    mov    %eax,0x8(%esp)
    mov    0x4(%esp),%eax
    imul   0x8(%esp),%eax
    xor    %edi,%edi
    mov    %edi,0xc(%esp)
    mov    %edi,0x10(%esp)
    cmp    $jump_27100,%eax
    jl     jump_54304
    mov    $0x158,%ebx
    mov    $data_92e14,%edx
    xor    %eax,%eax
    call   func_26198
  jump_54304:
    push   $0xffffffff
    xor    %ebx,%ebx
    push   %ebx
    push   %ebx
    mov    0x10(%esp),%eax
    push   %ecx
    mov    %eax,0x30(%esp)
    mov    0x18(%esp),%eax
    push   %ebx
    mov    %eax,0x38(%esp)
    lea    0x14(%esp),%eax
    push   %ebx
    mov    %eax,0x2c(%esp)
    lea    0x2c(%esp),%eax
    push   %eax
    mov    %ebx,0x34(%esp)
    mov    %ebx,0x38(%esp)
    call   func_5eaaf
    add    $0x1c,%esp
    add    $0x28,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_54344:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    add    $0x3026,%eax
    call   func_2b2c0
    add    $0x20,%eax
    call   func_2b2c0
    add    $0x21d6a,%eax
    call   func_1acc0
    lea    -0x24db0(%eax),%edx
    mov    %edx,%eax
    call   func_54448
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_54374:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    xor    %ecx,%ecx
    jmp    jump_5437f
  jump_5437e:
    inc    %ecx
  jump_5437f:
    movswl %cx,%edx
    cmp    $0x400,%edx
    jge    jump_543ba
    imul   $0xc,%edx,%eax
    add    %ebx,%eax
    mov    0x4(%eax),%edx
    test   %edx,%edx
    je     jump_5439d
    mov    %edx,%eax
    call   func_2627c
  jump_5439d:
    movswl %cx,%eax
    imul   $0xc,%eax,%eax
    mov    0x4(%ebx,%eax,1),%eax
    test   %eax,%eax
    je     jump_5437e
    mov    0xa7(%eax),%esi
    mov    $0x2,%edx
    call   *(%esi)
    jmp    jump_5437e
  jump_543ba:
    xor    %edx,%edx
    jmp    jump_543ce
  jump_543be:
    movswl %dx,%eax
    mov    0x300e(%ebx,%eax,4),%eax
    call   func_76d5c
    inc    %edx
  jump_543ce:
    movswl %dx,%eax
    cmp    $0x6,%eax
    jge    jump_543ee
    shl    $0x2,%eax
    add    %ebx,%eax
    mov    0x300e(%eax),%edi
    test   %edi,%edi
    je     jump_543be
    mov    %edi,%eax
    call   func_2627c
    jmp    jump_543be
  jump_543ee:
    mov    0x48a6(%ebx),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_543ff
    mov    %ecx,%edx
    mov    %ebx,%eax
    jmp    jump_5440c
  jump_543ff:
    cmpl   $0xffffffff,0x48aa(%ebx)
    jne    jump_54411
    mov    %ebx,%eax
    xor    %edx,%edx
  jump_5440c:
    call   func_59934
  jump_54411:
    mov    %ebx,%eax
    call   func_54664
    xor    %edx,%edx
    lea    0x24db0(%ebx),%eax
    call   func_1acf4
    sub    $0x21d6a,%eax
    xor    %edx,%edx
    call   func_2b2e0
    sub    $0x20,%eax
    xor    %edx,%edx
    call   func_2b2e0
    sub    $0x3026,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_54448:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    add    $0x3066,%eax
    movw   $0x0,0x11c0(%eax)
    movw   $0x0,-0x66(%eax)
    movw   $0xffff,0x11c2(%eax)
    movw   $0x0,0x16f0(%eax)
    movw   $0x0,0x16f2(%eax)
    movw   $0x0,0x1446(%eax)
    movw   $0x0,0x15a8(%eax)
    movw   $0x0,0x16ca(%eax)
    movl   $0xffffffff,-0x64(%eax)
    movl   $0xffffffff,0x16cc(%eax)
    movw   $0x0,0x16f4(%eax)
    mov    $0x11c0,%ebx
    movw   $0x0,0x16f6(%eax)
    xor    %edx,%edx
    movl   $0x3f800000,0x21d46(%eax)
    mov    %edx,data_132b58
    call   func_76ec0
    mov    $0x3000,%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_76ec0
    mov    $0x160,%ebx
    lea    0x44ae(%ecx),%eax
    xor    %edx,%edx
    call   func_76ec0
    mov    $0x120,%ebx
    lea    0x4610(%ecx),%eax
    xor    %edx,%edx
    call   func_76ec0
    mov    $0x18,%ebx
    lea    0x300e(%ecx),%eax
    xor    %edx,%edx
    call   func_76ec0
    mov    $0x20,%ebx
    mov    $0xffffffff,%edx
    lea    0x4736(%ecx),%eax
    call   func_76ec0
    xor    %eax,%eax
    jmp    jump_5454e
  jump_54533:
    imul   $0x8e,%edx,%edx
    movw   $0xffff,0x3066(%ecx,%edx,1)
    inc    %eax
    movw   $0xffff,0x30ea(%ecx,%edx,1)
  jump_5454e:
    movswl %ax,%edx
    cmp    $0x20,%edx
    jl     jump_54533
    movl   $0x0,0x489e(%ecx)
    movl   $0x0,0x48a2(%ecx)
    movl   $0x0,0x24d9c(%ecx)
    movl   $0x0,0x24da0(%ecx)
    movl   $0x0,0x24da4(%ecx)
    movl   $0xffffffff,0x24da8(%ecx)
    mov    $0x10,%edx
    movl   $0x0,0x48a6(%ecx)
    lea    0x21d82(%ecx),%eax
    movl   $0x0,0x48aa(%ecx)
    xor    %ebx,%ebx
    movl   $0x0,0x48ae(%ecx)
    call   func_76ec0
    mov    $0x3000,%ebx
    lea    0x21d96(%ecx),%eax
    movl   $0x3c,0x21d82(%ecx)
    xor    %edx,%edx
    movw   $0x0,0x24d96(%ecx)
    call   func_76ec0
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_545ec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%esi
    xor    %edx,%edx
    mov    0x4732(%eax),%ebx
    mov    %edx,data_132b58
    cmp    $0xffffffff,%ebx
    jne    jump_54658
    push   $func_53de4
    call   func_67728
    add    $0x4,%esp
    mov    %eax,0x4732(%esi)
    cmp    $0xffffffff,%eax
    jne    jump_5462f
    mov    $0x1e5,%ebx
    mov    $data_92e22,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_5462f:
    mov    0x4732(%esi),%edi
    cmp    $0xffffffff,%edi
    jne    jump_5463e
    xor    %eax,%eax
    jmp    jump_5465d
  jump_5463e:
    push   $0x64
    push   %edi
    call   func_6797c
    add    $0x8,%esp
    mov    0x4732(%esi),%eax
    push   %eax
    call   func_67b46
    add    $0x4,%esp
  jump_54658:
    mov    $0xffffffff,%eax
  jump_5465d:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_54664:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    mov    0x4732(%eax),%edx
    cmp    $0xffffffff,%edx
    je     jump_54697
    push   %edx
    call   func_67c15
    add    $0x4,%esp
    mov    0x4732(%esi),%ecx
    push   %ecx
    call   func_67ce4
    add    $0x4,%esp
    movl   $0xffffffff,0x4732(%esi)
  jump_54697:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5469c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    cmpl   $0xffffffff,0x48a6(%eax)
    je     jump_546b9
    cmpl   $0xffffffff,0x48aa(%eax)
    jne    jump_546bf
  jump_546b9:
    incl   0x48b6(%esi)
  jump_546bf:
    mov    data_d8608,%edi
    movl   $0xffffffff,0x48b2(%esi)
    test   %edi,%edi
    je     jump_54702
    cmpl   $0x0,0x24da4(%esi)
    jne    jump_54702
    cmpl   $0x0,0x489e(%esi)
    jne    jump_54702
    mov    $0x1,%edx
    mov    $data_d8654,%eax
    xor    %ebx,%ebx
    movl   $0xffffffff,0x24da4(%esi)
    call   func_2c7d0
    jmp    jump_5475a
  jump_54702:
    cmpl   $0x0,0x24da4(%esi)
    je     jump_5475a
    mov    data_d8608,%ebx
    test   %ebx,%ebx
    jne    jump_5475a
    mov    $data_d8654,%eax
    xor    %edx,%edx
    mov    %ebx,0x24da4(%esi)
    call   func_2c7d0
    mov    0x3002(%esi),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_5475a
    push   $0x0
    mov    $0x6,%ebx
    mov    %ecx,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_56d30
    push   $0x0
    mov    $0x7,%ebx
    mov    %esi,%eax
    mov    0x3002(%esi),%edx
    xor    %ecx,%ecx
    call   func_56d30
  jump_5475a:
    mov    0x24da4(%esi),%edi
    mov    $0xffffffff,%eax
    test   %edi,%edi
    jne    jump_547d4
    cmpl   $0x0,0x489e(%esi)
    jne    jump_547d4
    mov    0x4226(%esi),%edx
    sar    $0x10,%edx
    test   %edx,%edx
    je     jump_547d4
    mov    data_d864c,%edx
    test   %edx,%edx
    jne    jump_547ae
    mov    data_d8648,%ebp
    test   %ebp,%ebp
    jne    jump_5479f
    xor    %eax,%eax
    jmp    jump_547d4
  jump_5479f:
    cmp    $0x27f,%ebp
    jne    jump_547d4
    mov    $0x1,%eax
    jmp    jump_547d4
  jump_547ae:
    cmp    $0x1df,%edx
    jne    jump_547d4
    mov    data_d8648,%ecx
    test   %ecx,%ecx
    jne    jump_547c7
    mov    $0x2,%eax
    jmp    jump_547d4
  jump_547c7:
    cmp    $0x27f,%ecx
    jne    jump_547d4
    mov    $0x3,%eax
  jump_547d4:
    cmp    0x24da8(%esi),%eax
    je     jump_547f7
    xor    %edx,%edx
    mov    %eax,0x24da8(%esi)
    cmp    $0xffffffff,%eax
    je     jump_547ec
    lea    0x4(%eax),%edx
  jump_547ec:
    mov    %esi,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_5a270
  jump_547f7:
    mov    data_d8644,%edi
    cmp    $0xffffffff,%edi
    jne    jump_54844
    cmp    0x48a6(%esi),%edi
    jne    jump_5483d
    cmpl   $0x0,0x48b2(%esi)
    je     jump_5483d
    push   $0x0
    mov    data_d864c,%edx
    mov    data_d8648,%ebx
    push   %edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    push   %ebx
    xor    %edx,%edx
    mov    $0x1,%ebx
    call   func_59c80
    movl   $0x0,0x48b2(%esi)
  jump_5483d:
    mov    %esi,%eax
    call   func_5691c
  jump_54844:
    cmpl   $0x0,0x489e(%esi)
    jne    jump_5486f
    cmpw   $0x0,0x4730(%esi)
    je     jump_5485e
    mov    %esi,%eax
    call   func_56824
  jump_5485e:
    cmpw   $0x0,0x460e(%esi)
    je     jump_5486f
    mov    %esi,%eax
    call   func_56694
  jump_5486f:
    mov    data_d85fc,%edi
    cmp    $0xffffffff,%edi
    jne    jump_549c7
    cmp    0x48a6(%esi),%edi
    jne    jump_548d1
    cmpl   $0x0,data_d8600
    je     jump_548a1
    xor    %eax,%eax
    mov    data_d8620,%ax
    cmp    $0x13,%eax
    je     jump_548d1
    cmp    $0x19,%eax
    je     jump_548d1
  jump_548a1:
    mov    data_d8600,%edx
    xor    %eax,%eax
    push   %edx
    mov    data_d8622,%ax
    mov    $0x3,%ebx
    push   %eax
    xor    %eax,%eax
    mov    data_d8622,%ecx
    mov    data_d8620,%ax
    sar    $0x10,%ecx
    push   %eax
    xor    %edx,%edx
    mov    %esi,%eax
    call   func_59c80
  jump_548d1:
    cmpl   $0xffffffff,0x48aa(%esi)
    jne    jump_54980
    cmpl   $0x0,data_d8604
    je     jump_54980
    xor    %eax,%eax
    mov    data_d8620,%ax
    cmp    $0x19,%eax
    jne    jump_54980
    mov    data_132b1c,%edi
    push   %edi
    push   $data_92e30
    lea    0x8(%esp),%eax
    push   %eax
    mov    $data_92e39,%edx
    movl   $0x0,0x48aa(%esi)
    call   func_76d09
    add    $0xc,%esp
    xor    %ebx,%ebx
    mov    %esi,%eax
    call   func_56da8
    mov    %esp,%ebx
    mov    $data_132b20,%edx
    mov    %eax,%ecx
    call   func_2fcb0
    mov    %ecx,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    xor    %ebp,%ebp
    call   func_552f8
    mov    data_d862c,%eax
    mov    %ebp,data_d8600
    mov    %eax,data_132b14
    mov    data_d8630,%eax
    movl   $0xffffffff,0x48aa(%esi)
    mov    %eax,data_132b18
    mov    data_132b1c,%eax
    xor    %ecx,%ecx
    inc    %eax
    mov    %cx,data_d8620
    mov    %eax,data_132b1c
  jump_54980:
    mov    $0xffffffff,%eax
    cmp    data_d8600,%eax
    je     jump_5499b
    xor    %edx,%edx
    mov    data_d8620,%dx
    cmp    $0x1,%edx
    jne    jump_549a2
  jump_5499b:
    mov    %esi,%eax
    call   func_54d64
  jump_549a2:
    cmp    $0xffffffff,%eax
    jne    jump_549c7
    push   $0x0
    mov    $0x3,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    data_d8620,%cx
    mov    data_d8622,%bx
    call   func_56be8
  jump_549c7:
    mov    data_d8638,%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_54b16
    cmp    0x48a6(%esi),%ebx
    jne    jump_54a1d
    cmpl   $0x0,data_d8600
    jne    jump_54a1d
    mov    data_d862c,%ebp
    xor    %eax,%eax
    test   %ebp,%ebp
    je     jump_54a01
    cmpl   $0x0,data_d8608
    je     jump_54a01
    mov    $0x1,%eax
  jump_54a01:
    push   $0x0
    mov    data_d862c,%ebx
    push   %ebx
    movswl %ax,%ecx
    xor    %edx,%edx
    push   $0x0
    mov    %esi,%eax
    mov    $0x2,%ebx
    call   func_59c80
  jump_54a1d:
    cmpl   $0x0,data_d862c
    je     jump_54b16
    mov    0x24da8(%esi),%edi
    cmp    $0xffffffff,%edi
    je     jump_54a8b
    cmpl   $0x0,0x489e(%esi)
    jne    jump_54a72
    mov    $data_10914c,%eax
    xor    %edx,%edx
    call   func_4fb90
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   func_5a270
    mov    $0xffffffff,%edx
    mov    %esi,%eax
    movl   $0xffffffff,0x24da8(%esi)
    call   func_570ac
    jmp    jump_54b16
  jump_54a72:
    movl   $0x0,0x489e(%esi)
    movl   $0xffffffff,0x48a2(%esi)
    jmp    jump_54b16
  jump_54a8b:
    cmp    data_d8600,%edi
    jne    jump_54ad4
    mov    data_d864c,%ebx
    push   %ebx
    mov    data_d8648,%ecx
    push   %ecx
    push   $data_d8668
    call   func_5bf2b
    mov    %eax,data_132b10
    mov    0x21d92(%esi),%eax
    mov    0x39(%eax),%edi
    add    $0xc,%esp
    test   %edi,%edi
    je     jump_54b16
    mov    $0x3f1,%edx
    mov    0xa7(%eax),%edi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   *0x8(%edi)
    jmp    jump_54b16
  jump_54ad4:
    cmp    0x24da4(%esi),%edi
    jne    jump_54afc
    mov    0x489e(%esi),%edx
    test   %edx,%edx
    jne    jump_54afc
    mov    data_d864c,%ecx
    mov    data_d8648,%ebx
    push   %edx
    mov    %esi,%eax
    mov    $0xc,%edx
    jmp    jump_54b11
  jump_54afc:
    push   $0x0
    mov    $0x4,%edx
    mov    data_d864c,%ecx
    mov    data_d8648,%ebx
    mov    %esi,%eax
  jump_54b11:
    call   func_56be8
  jump_54b16:
    mov    data_d863c,%eax
    cmp    $0xffffffff,%eax
    jne    jump_54b87
    mov    0x48a6(%esi),%edx
    cmp    %eax,%edx
    jne    jump_54b45
    push   $0x0
    mov    data_d8630,%ebx
    push   %ebx
    xor    %ecx,%ecx
    xor    %eax,%edx
    push   $0x1
    mov    %esi,%eax
    mov    $0x2,%ebx
    call   func_59c80
  jump_54b45:
    cmpl   $0x0,data_d8630
    je     jump_54b87
    cmpl   $0xffffffff,0x24da4(%esi)
    jne    jump_54b6d
    mov    $data_d8654,%eax
    movl   $0x0,0x24da4(%esi)
    call   func_2c744
    jmp    jump_54b87
  jump_54b6d:
    push   $0x0
    mov    $0x5,%edx
    mov    data_d864c,%ecx
    mov    data_d8648,%ebx
    mov    %esi,%eax
    call   func_56be8
  jump_54b87:
    mov    0x44aa(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_54b9d
    mov    %esi,%eax
    call   func_55e80
    jmp    jump_54b87
  jump_54b9d:
    cmpw   $0x0,0x475a(%esi)
    je     jump_54bc5
    mov    0x4226(%esi),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_54bc5
    cmpl   $0x0,0x489e(%esi)
    jne    jump_54bc5
    mov    %esi,%eax
    call   func_55b74
  jump_54bc5:
    cmpl   $0xffffffff,0x24d9c(%esi)
    jne    jump_54bf4
    mov    0x4758(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_54bf4
    cmpl   $0x0,0x489e(%esi)
    jne    jump_54bf4
    mov    $0x7,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_56b60
  jump_54bf4:
    cmpl   $0xffffffff,data_10936f
    jne    jump_54d07
    mov    data_109377,%ecx
    test   %ecx,%ecx
    jne    jump_54d07
    cmpl   $0x0,data_109373
    jne    jump_54cd4
    mov    0x4226(%esi),%eax
    sar    $0x10,%eax
    cmp    $0x7,%eax
    je     jump_54cd4
    cmp    $0xd,%eax
    je     jump_54cd4
    cmp    $0x6,%eax
    je     jump_54cd4
    mov    data_96bae,%eax
    mov    $0xffffffff,%esi
    sar    $0x10,%eax
    xor    %ebx,%ebx
    cmp    $0xffffffff,%eax
    je     jump_54c77
    mov    %eax,%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    cmpl   $0x0,data_1094de(,%eax,4)
    je     jump_54c77
    mov    $0xffffffff,%ebx
    mov    data_96bb0,%si
    mov    %ecx,data_96bb4
  jump_54c77:
    movswl %si,%eax
    cmp    $0xffffffff,%eax
    jne    jump_54cc0
    mov    data_96bae,%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_54c90
    xor    %esi,%esi
    jmp    jump_54cc0
  jump_54c90:
    mov    data_132b58,%eax
    mov    data_d8648,%edx
    mov    $0x5,%ecx
    add    %edx,%eax
    xor    %edx,%edx
    div    %ecx
    mov    data_96bb0,%ax
    mov    %edx,%esi
    cmp    %ax,%dx
    jne    jump_54cc0
    movswl %ax,%edx
    inc    %edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    %edx,%esi
  jump_54cc0:
    mov    $data_10914c,%eax
    movswl %si,%edx
    call   func_4f8cc
    mov    %si,data_96bb0
  jump_54cd4:
    mov    data_96bb4,%ebx
    cmp    $0xffffffff,%ebx
    je     jump_54d07
    movsbl %bl,%edx
    lea    0x1(%ebx),%eax
    mov    %eax,data_96bb4
    mov    $data_10914c,%eax
    call   func_4ff4c
    cmpl   $0x64,data_96bb4
    jne    jump_54d07
    movl   $0xffffffff,data_96bb4
  jump_54d07:
    mov    $data_10914c,%edx
    mov    $0xffffffff,%ebx
  jump_54d11:
    mov    data_10936f,%edi
    cmp    %edi,%ebx
    jne    jump_54d3d
    mov    data_109373,%ebp
    cmp    %ebp,%edi
    jne    jump_54d3d
    cmp    data_109377,%ebp
    jne    jump_54d36
    mov    %edx,%eax
    call   func_4fa1c
    jmp    jump_54d3d
  jump_54d36:
    mov    %edx,%eax
    call   func_4fab4
  jump_54d3d:
    mov    data_132b58,%esi
    sub    data_132b34,%esi
    cmp    $0x3,%esi
    jb     jump_54d11
    mov    data_132b58,%eax
    mov    %eax,data_132b34
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_54d64:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    mov    data_d8620,%ax
    cmp    $0x20,%ax
    jb     jump_5501f
    jbe    jump_54da7
    cmp    $0x26,%ax
    jb     jump_55001
    jbe    jump_54df4
    cmp    $0x31,%ax
    jb     jump_54fed
    jbe    jump_54e90
    cmp    $0x32,%ax
    je     jump_54e83
    jmp    jump_54f14
  jump_54da7:
    cmpl   $0xffffffff,data_a0cfc
    jne    jump_55083
    notl   data_132b5c
    jmp    jump_55083
  jump_54dbf:
    cmpl   $0x0,0x489e(%ecx)
    jne    jump_55083
    mov    0x4226(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0x8,%eax
    je     jump_55083
    mov    $0xffffffff,%ebx
    mov    $0x2,%edx
    mov    %ecx,%eax
    call   func_56e9c
    jmp    jump_55083
  jump_54df4:
    cmpl   $0x0,0x489e(%ecx)
    jne    jump_55083
    mov    0x4226(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0x8,%eax
    je     jump_55083
    mov    $0xffffffff,%ebx
    mov    $0x4,%edx
    mov    %ecx,%eax
    call   func_56e9c
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54e2b:
    mov    0x489e(%ecx),%esi
    test   %esi,%esi
    jne    jump_55083
    mov    %esi,data_96774
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54e46:
    cmpl   $0xffffffff,data_a0cfc
    jne    jump_55083
    notl   0x24da0(%ecx)
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54e60:
    cmpl   $0xffffffff,data_a0cfc
    jne    jump_55083
    mov    %ecx,%eax
    mov    0x21d92(%ecx),%edx
    xor    %ebx,%ebx
    call   func_552f8
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54e83:
    notl   data_109377
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54e90:
    notl   data_10935f
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54e9d:
    mov    data_a0cfc,%eax
    cmp    $0xffffffff,%eax
    jne    jump_55083
    cmp    0x24d98(%ecx),%eax
    jne    jump_54ec4
    movl   $0x0,0x24d98(%ecx)
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54ec4:
    mov    %eax,0x24d98(%ecx)
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54ed1:
    lea    0x24db0(%ecx),%ebx
    mov    %ebx,%eax
    call   func_1b4d0
    mov    0x27c98(%ecx),%edx
    mov    0x27c94(%ecx),%eax
    call   func_31c18
    mov    %ebx,%eax
    call   func_1ace8
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54efd:
    cmpl   $0x0,0x489e(%ecx)
    jne    jump_54f31
    mov    0x4226(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0x11,%eax
    jne    jump_54f1e
  jump_54f14:
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54f1e:
    mov    $0xffffffff,%edx
    mov    %ecx,%eax
    call   func_570ac
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54f31:
    movl   $0x0,0x489e(%ecx)
    movl   $0x0,0x48a2(%ecx)
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54f4c:
    cmpl   $0x0,0x48aa(%ecx)
    jne    jump_55083
    mov    data_a0cfc,%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_55083
    cmpl   $0x0,0x48a6(%ecx)
    jne    jump_54f95
    xor    %eax,%eax
    mov    $0x1e,%edx
    call   func_78303
    mov    %ecx,%eax
    movl   $0x3f800000,0x24dac(%ecx)
    call   func_59908
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54f95:
    mov    %ebx,%edx
    mov    %ecx,%eax
    call   func_59934
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54fa5:
    cmpl   $0x0,0x48a6(%ecx)
    jne    jump_55083
    cmpl   $0xffffffff,data_a0cfc
    jne    jump_55083
    cmpl   $0x0,0x48aa(%ecx)
    jne    jump_54fdd
    mov    $data_92e44,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_59988
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54fdd:
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_59934
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54fed:
    cmp    $0x2d,%ax
    je     jump_54e2b
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_55001:
    cmp    $0x21,%ax
    jbe    jump_54e9d
    cmp    $0x22,%ax
    je     jump_54ed1
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_5501f:
    cmp    $0x12,%ax
    jb     jump_5505f
    jbe    jump_54e46
    cmp    $0x19,%ax
    jb     jump_5504b
    jbe    jump_54fa5
    cmp    $0x1f,%ax
    je     jump_54dbf
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_5504b:
    cmp    $0x13,%ax
    je     jump_54f4c
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_5505f:
    cmp    $0x1,%ax
    jb     jump_54f14
    jbe    jump_54efd
    cmp    $0x11,%ax
    je     jump_54e60
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_55083:
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5508c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x2c,%esp
    mov    %eax,-0x4(%ebp)
    cmpl   $0xffffffff,0x24d98(%eax)
    jne    jump_55136
    mov    data_10ae60,%ebx
    inc    %ebx
    mov    %ebx,data_10ae60
    cmp    $0xa,%ebx
    jne    jump_55100
    mov    data_132b58,%eax
    mov    data_10ae68,%esi
    xor    %edi,%edi
    mov    %eax,data_10ae64
    mov    %eax,%ebx
    mov    %eax,data_10ae68
    sub    %esi,%ebx
    mov    %edi,data_10ae60
    test   %ebx,%ebx
    jne    jump_550e3
    mov    $0x1,%ebx
  jump_550e3:
    mov    $0x3e8,%eax
    xor    %edx,%edx
    div    %ebx
    push   %ebx
    push   %eax
    push   $data_92e51
    push   $data_96b98
    call   func_76d09
    add    $0x10,%esp
  jump_55100:
    push   $0x1e
    mov    $0x96,%ecx
    mov    $0xa,%ebx
    mov    $0x19,%edx
    mov    $data_10deb6,%eax
    call   func_2b3e0
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    mov    $data_96b98,%ecx
    mov    $data_10deb6,%eax
    push   $0x0
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_2b8a8
  jump_55136:
    cmpl   $0x0,data_132b5c
    je     jump_55199
    mov    data_d864c,%edx
    xor    %ebx,%ebx
    cmp    $0xf0,%edx
    jge    jump_55154
    mov    $0x1cc,%ebx
  jump_55154:
    mov    data_d864c,%ecx
    push   %ecx
    mov    data_d8648,%esi
    push   %esi
    push   $data_92e5e
    lea    -0x2c(%ebp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
    push   $0x0
    mov    $data_10debe,%edi
    push   $0xffffffff
    xor    %edx,%edx
    lea    -0x2c(%ebp),%ecx
    push   $0xffffffff
    mov    $data_d8668,%esi
    mov    $data_10deb6,%eax
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
  jump_55199:
    cmpl   $0x1,data_d8628
    jne    jump_551b2
    mov    -0x4(%ebp),%eax
    mov    0x3006(%eax),%eax
    call   func_65e2b
    jmp    jump_551c0
  jump_551b2:
    mov    -0x4(%ebp),%eax
    mov    0x3006(%eax),%eax
    call   func_5ba38
  jump_551c0:
    mov    -0x4(%ebp),%eax
    mov    0x3006(%eax),%eax
    call   func_5b71c
    cmpl   $0xffffffff,data_132b60
    jne    jump_55209
    xor    %edx,%edx
    mov    $data_d8654,%eax
    mov    data_132b64,%dl
    call   func_2c5e4
    mov    data_132b64,%edx
    inc    %edx
    mov    %edx,data_132b64
    cmp    $0x40,%edx
    jle    jump_55209
    xor    %ecx,%ecx
    mov    %ecx,data_132b64
    mov    %ecx,data_132b60
  jump_55209:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_55214:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    %eax,0x14(%esp)
    mov    %edx,%ebp
    mov    %ebx,%edi
    mov    %ecx,%esi
    mov    0x28(%esp),%eax
    mov    %edx,0x4(%esp)
    mov    %eax,0x10(%esp)
    mov    0x14(%esp),%eax
    mov    %ebx,0x8(%esp)
    mov    %ecx,0xc(%esp)
    mov    0x300a(%eax),%eax
    push   $0x0
    mov    %eax,0x4(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    call   func_5e9d0
    add    $0x8,%esp
    mov    %esi,%ecx
    mov    0x28(%esp),%edx
    mov    %edi,%ebx
    push   %edx
    mov    0x18(%esp),%eax
    mov    %ebp,%edx
    call   func_55274
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_55274:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    0xc(%esp),%edi
    push   %edi
    mov    0x300a(%eax),%eax
    push   %ecx
    mov    0x3006(%esi),%edi
    mov    %ebx,%ecx
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    %edi,%eax
    call   func_5b7c2
    cmp    $0xffffffff,%eax
    jne    jump_552c6
    mov    0x3006(%esi),%eax
    call   func_5b71c
    push   $0x1df
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    push   $0x27f
    mov    0x300a(%esi),%edx
    mov    0x3006(%esi),%eax
    call   func_5b7c2
  jump_552c6:
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_552cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    test   %edx,%edx
    jne    jump_552e0
    push   $0x1df
    mov    $0x27f,%ecx
    xor    %ebx,%ebx
    jmp    jump_552ed
  jump_552e0:
    mov    0x10(%edx),%ebx
    mov    0xc(%edx),%ecx
    push   %ebx
    mov    0x8(%edx),%ebx
    mov    0x4(%edx),%edx
  jump_552ed:
    call   func_55274
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_552f8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%ebp
    mov    %edx,0x1c(%esp)
    mov    %ebx,0x18(%esp)
    cmpl   $0x0,0x489e(%eax)
    je     jump_55323
    mov    $0x4cc,%ebx
    mov    $data_92e66,%edx
    xor    %eax,%eax
    call   func_26198
  jump_55323:
    mov    0x24d9c(%ebp),%eax
    mov    data_a0d00,%ebx
    mov    %eax,0x14(%esp)
    movl   $0x0,0x24d9c(%ebp)
    test   %ebx,%ebx
    jne    jump_55362
    mov    $data_92e74,%edx
    mov    %ebp,%eax
    call   func_56da8
    mov    0xa7(%eax),%ebx
    movl   $0x0,0xab(%eax)
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_55362:
    mov    0x3002(%ebp),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_5537f
    push   $0x0
    mov    $0x6,%ebx
    mov    %ecx,%edx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    call   func_56d30
  jump_5537f:
    mov    $0x20,%ebx
    mov    $0x1,%edx
    mov    $data_132b38,%eax
    movl   $0xffffffff,0x3002(%ebp)
    call   func_76ec0
    xor    %ecx,%ecx
    push   $0xffffffff
    mov    $0xf,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_56be8
    cmpl   $0xffffffff,data_96bb8
    jne    jump_553c4
    mov    0x1c(%esp),%eax
    add    $0x4,%eax
    call   func_54208
  jump_553c4:
    mov    0x1c(%esp),%edx
    mov    0x4226(%ebp),%ebx
    mov    %ebp,%eax
    sar    $0x10,%ebx
    mov    0x41(%edx),%edx
    call   func_57220
    cmp    $0xffffffff,%eax
    je     jump_553f1
    mov    $0x4ee,%ebx
    mov    $data_92e81,%edx
    xor    %eax,%eax
    call   func_26198
  jump_553f1:
    mov    0x1c(%esp),%edi
    mov    0x6b(%edi),%di
    xor    %ecx,%ecx
    test   %di,%di
    jle    jump_55440
    jmp    jump_55408
  jump_55402:
    inc    %ecx
    cmp    %di,%cx
    jge    jump_55440
  jump_55408:
    mov    0x1c(%esp),%edx
    mov    0x67(%edx),%edx
    movswl %cx,%eax
    mov    0x4226(%ebp),%ebx
    mov    (%edx,%eax,4),%edx
    sar    $0x10,%ebx
    mov    %ebp,%eax
    mov    0x41(%edx),%edx
    call   func_57220
    cmp    $0xffffffff,%eax
    je     jump_55402
    mov    $0x4f4,%ebx
    mov    $data_92e8f,%edx
    xor    %eax,%eax
    call   func_26198
    jmp    jump_55402
  jump_55440:
    mov    0x1c(%esp),%esi
    mov    $0xc8,%edx
    mov    0x1c(%esp),%eax
    mov    0xa7(%esi),%esi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   *0x8(%esi)
    mov    0x1c(%esp),%esi
    mov    $0x1,%edx
    mov    0x1c(%esp),%eax
    mov    0xa7(%esi),%esi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   *0x8(%esi)
    mov    0x1c(%esp),%esi
    mov    %ebp,%eax
    mov    $0x2,%edx
    call   func_55618
    xor    %ecx,%ecx
    mov    0xa7(%esi),%esi
    xor    %ebx,%ebx
    mov    0x1c(%esp),%eax
    call   *0x8(%esi)
    xor    %esi,%esi
    test   %di,%di
    jle    jump_554c6
  jump_5549c:
    mov    0x1c(%esp),%edx
    mov    0x18(%esp),%ecx
    mov    0x67(%edx),%edx
    movswl %si,%eax
    mov    0x4226(%ebp),%ebx
    mov    (%edx,%eax,4),%edx
    sar    $0x10,%ebx
    mov    %ebp,%eax
    mov    0x41(%edx),%edx
    inc    %esi
    call   func_57310
    cmp    %di,%si
    jl     jump_5549c
  jump_554c6:
    mov    0x1c(%esp),%esi
    mov    %esp,%edi
    lea    0x4(%esi),%esi
    mov    0x1c(%esp),%edx
    mov    0x18(%esp),%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    %ebp,%eax
    mov    0x4226(%ebp),%ebx
    mov    0x41(%edx),%edx
    sar    $0x10,%ebx
    call   func_57310
    mov    data_96bb8,%edi
    movl   $0xffffffff,0x3002(%ebp)
    cmp    $0xffffffff,%edi
    jne    jump_5550b
    mov    %esp,%eax
    call   func_542b0
  jump_5550b:
    push   $0xffffffff
    mov    $0xe,%edx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_56be8
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_552cc
    cmpl   $0xffffffff,data_a0d00
    jne    jump_55539
    mov    0x14(%esp),%eax
    mov    %eax,0x24d9c(%ebp)
  jump_55539:
    mov    $0xffffffff,%edx
    mov    0x48a2(%ebp),%eax
    mov    %edx,data_96bb8
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_55618:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %edi
    mov    %eax,%ecx
    cmpl   $0x0,0x489e(%eax)
    je     jump_55638
    mov    $0x57e,%ebx
    mov    $data_92e9d,%edx
    xor    %eax,%eax
    call   func_26198
  jump_55638:
    movl   $0xffffffff,0x489e(%ecx)
    mov    data_96774,%ebx
    movl   $0x0,0x48a2(%ecx)
    cmp    $0xffffffff,%ebx
    jne    jump_556b0
  jump_55657:
    mov    0x489e(%ecx),%edi
    cmp    $0xffffffff,%edi
    jne    jump_556b0
    cmp    data_10f71a,%edi
    jne    jump_55676
    mov    $data_10ae70,%eax
    call   func_59b80
    jmp    jump_55680
  jump_55676:
    mov    $data_d85f8,%eax
    call   func_2656c
  jump_55680:
    mov    $data_10ae70,%eax
    call   func_5469c
    mov    $data_10ae70,%eax
    call   func_5508c
    cmpl   $0x0,data_10f71a
    je     jump_556a7
    mov    $data_10ae70,%eax
    call   func_59a54
  jump_556a7:
    cmpl   $0xffffffff,data_96774
    je     jump_55657
  jump_556b0:
    xor    %edx,%edx
    mov    %edx,data_d8638
    mov    %edx,data_d863c
    mov    %edx,data_d85fc
    pop    %edi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_556cc:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    $data_92eab,%ebx
    mov    $0xb3,%eax
    mov    $0x2,%edx
    call   func_78bdc
    test   %eax,%eax
    je     jump_556f1
    call   func_2fa18
  jump_556f1:
    call   func_2625c
    mov    %eax,%edx
    mov    %eax,%ecx
    call   func_2c978
    movl   $0x0,0x3d(%edx)
    movl   $0x32,0xc(%edx)
    movl   $0x12c,0x14(%edx)
    mov    %esi,0xab(%edx)
    mov    0xc(%edx),%eax
    mov    %eax,0x8(%edx)
    mov    0x14(%edx),%eax
    mov    %eax,0x10(%edx)
    mov    0x300a(%ebp),%eax
    mov    $data_92eb2,%ebx
    mov    %eax,0x4(%edx)
    mov    $0xab,%eax
    mov    $0x2,%edx
    call   func_78bdc
    test   %eax,%eax
    je     jump_5574c
    call   func_2c830
  jump_5574c:
    call   func_2625c
    mov    %eax,%edx
    call   func_2c978
    mov    $0x1e,%eax
    call   func_1cea8
    lea    0x20(%edx),%edi
    mov    %eax,%esi
    push   %edi
  jump_55768:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_55780
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_55768
  jump_55780:
    pop    %edi
    movl   $0x104,0xc(%edx)
    movl   $0x122,0x14(%edx)
    mov    0xc(%edx),%eax
    mov    %eax,0x8(%edx)
    mov    0x14(%edx),%eax
    mov    %eax,0x10(%edx)
    mov    0x300a(%ebp),%eax
    movl   $0xffffffff,0x3d(%edx)
    movw   $0xc9,0x45(%edx)
    mov    %eax,0x4(%edx)
    mov    0x41(%ecx),%eax
    mov    %eax,0x63(%edx)
    mov    %ecx,%eax
    mov    $0xffffffff,%ebx
    call   func_2c990
    mov    %ecx,%edx
    mov    %ebp,%eax
    call   func_552f8
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_557d4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x30,%esp
    mov    %eax,0x24(%esp)
    mov    %edx,%esi
    mov    %ebx,0x1c(%esp)
    mov    %cx,0x2c(%esp)
    mov    $data_92ebf,%edx
    mov    $data_10deb6,%eax
    call   func_2b594
    mov    %eax,0x20(%esp)
    mov    %eax,%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    $0x9b,%edi
    add    $0x5,%eax
    mov    $data_92ec1,%ebx
    mov    %eax,0x18(%esp)
    mov    $0xab,%eax
    mov    $0x2,%edx
    call   func_78bdc
    test   %eax,%eax
    je     jump_5582c
    call   func_2c830
  jump_5582c:
    call   func_2625c
    mov    $0x13,%ebx
    mov    %eax,%ecx
    mov    %eax,%ebp
    call   func_2c978
    mov    %esi,%edx
    lea    0x20(%ecx),%eax
    call   func_77780
    mov    $0x280,%edx
    sub    %edi,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    0x18(%esp),%ebx
    mov    $0x1e0,%edx
    mov    %eax,0x8(%ecx)
    add    %edi,%eax
    sub    %ebx,%edx
    mov    %eax,0x10(%ecx)
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    movb   $0x0,0x33(%ecx)
    movw   $0xffff,0x5b(%ecx)
    mov    %eax,0xc(%ecx)
    add    %ebx,%eax
    mov    %eax,0x14(%ecx)
    mov    0x24(%esp),%eax
    movw   $0x5,0x5d(%ecx)
    mov    0x300a(%eax),%eax
    mov    $0x2,%edx
    mov    %eax,0x4(%ecx)
    mov    $0xab,%eax
    mov    $data_92eca,%ebx
    call   func_78bdc
    test   %eax,%eax
    je     jump_558b7
    call   func_2c830
  jump_558b7:
    call   func_2625c
    mov    %eax,%ebx
    mov    %eax,0x14(%esp)
    call   func_2c978
    mov    $0x1e,%eax
    call   func_1cea8
    lea    0x20(%ebx),%edi
    mov    %eax,%esi
    push   %edi
  jump_558d7:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_558ef
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_558d7
  jump_558ef:
    pop    %edi
    movw   $0xffff,0x5b(%ebx)
    mov    $0x1e,%eax
    movw   $0x2,0x5d(%ebx)
    call   func_1cea8
    mov    %eax,%edx
    mov    $data_10deb6,%eax
    call   func_2b4f4
    mov    0x10(%ebp),%edx
    sub    %eax,%edx
    lea    -0xa(%edx),%eax
    mov    %eax,0x8(%ebx)
    mov    0x10(%ebp),%eax
    sub    $0x3,%eax
    mov    %eax,0x10(%ebx)
    mov    0x20(%esp),%edi
    mov    0x14(%ebp),%eax
    sub    %edi,%eax
    sub    $0x5,%eax
    mov    %eax,0xc(%ebx)
    mov    0x14(%ebp),%eax
    sub    $0x2,%eax
    mov    %eax,0x14(%ebx)
    mov    0x24(%esp),%eax
    mov    0x300a(%eax),%eax
    movl   $0xffffffff,0x3d(%ebx)
    movl   $0xffffffff,0x5f(%ebx)
    movw   $0xc9,0x45(%ebx)
    mov    %eax,0x4(%ebx)
    mov    0x41(%ebp),%eax
    mov    %ebx,%edx
    mov    %eax,0x63(%ebx)
    mov    %ebp,%eax
    mov    $data_92ed7,%ebx
    call   func_2c990
    mov    $0xc1,%eax
    mov    $0x2,%edx
    call   func_78bdc
    test   %eax,%eax
    je     jump_5598b
    call   func_2f48c
  jump_5598b:
    call   func_2625c
    mov    %eax,0x28(%esp)
    test   %eax,%eax
    jne    jump_559a7
    mov    $0x5f7,%ebx
    mov    $data_92edf,%edx
    call   func_26198
  jump_559a7:
    mov    0x28(%esp),%eax
    call   func_2c978
    mov    0x8(%ebp),%eax
    mov    0x28(%esp),%edx
    add    $0xf,%eax
    mov    %eax,0x8(%edx)
    mov    0x10(%ebp),%eax
    sub    $0xf,%eax
    mov    %eax,0x10(%edx)
    mov    0x20(%esp),%edx
    mov    0xc(%ebp),%eax
    add    %edx,%eax
    mov    0x28(%esp),%edx
    add    $0x8,%eax
    mov    0x20(%esp),%ebx
    mov    %eax,0xc(%edx)
    add    %ebx,%eax
    add    $0x8,%eax
    mov    %eax,0x14(%edx)
    mov    0x24(%esp),%eax
    mov    0x300a(%eax),%eax
    mov    %eax,0x4(%edx)
    mov    0x2a(%esp),%ebx
    mov    0x41(%ebp),%eax
    movw   $0x0,0x45(%edx)
    sar    $0x10,%ebx
    mov    %eax,0x63(%edx)
    mov    %edx,%eax
    mov    0x1c(%esp),%edx
    call   func_2f9a4
    mov    0x28(%esp),%edx
    mov    %ebp,%eax
    mov    %esp,%edi
    call   func_2c990
    lea    0x4(%ebp),%esi
    xor    %ecx,%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    %ecx,data_96bb8
    mov    0x4(%esp),%esi
    mov    0xc(%esp),%edi
    mov    0x8(%esp),%eax
    mov    0x10(%esp),%edx
    sub    $0x8,%esi
    add    $0x8,%edi
    sub    $0x8,%eax
    add    $0x7,%edx
    mov    %esi,0x4(%esp)
    mov    %edi,0xc(%esp)
    mov    %eax,0x8(%esp)
    mov    %edx,0x10(%esp)
    mov    %esp,%eax
    mov    %esp,%edx
    call   func_54208
    mov    0x24(%esp),%eax
    call   func_552cc
    push   %ecx
    push   %ecx
    xor    %edx,%edx
    push   $0x1
    mov    $data_12fc20,%eax
    mov    data_ffeea,%dx
    call   func_1b084
    push   %eax
    lea    0x10(%esp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    mov    %ebp,%edx
    xor    %ebx,%ebx
    mov    0x24(%esp),%eax
    call   func_552f8
    mov    %esp,%eax
    mov    %esp,%edx
    call   func_542b0
    mov    0x24(%esp),%eax
    call   func_552cc
    mov    0x14(%esp),%edx
    xor    %ebx,%ebx
    mov    0x24(%esp),%eax
    mov    0x41(%edx),%edx
    call   func_57530
    mov    0x28(%esp),%edx
    mov    0x24(%esp),%eax
    xor    %ebx,%ebx
    mov    0x41(%edx),%edx
    call   func_57530
    mov    0x24(%esp),%eax
    mov    0x41(%ebp),%edx
    xor    %ebx,%ebx
    call   func_57530
    mov    0x1c(%esp),%eax
    add    $0x30,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_55aec:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %edx,%esi
    mov    %ebx,%edi
    cmpl   $0xffffffff,data_a0d00
    jne    jump_55b02
    xor    %edx,%edx
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    ret
  jump_55b02:
    mov    0x4758(%eax),%edx
    sar    $0x10,%edx
    cmp    $0x20,%edx
    jne    jump_55b17
    xor    %edx,%edx
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    ret
  jump_55b17:
    mov    %edx,%ebx
    shl    $0x2,%edx
    add    %ebx,%edx
    mov    %si,0x475e(%eax,%edx,2)
    mov    0x4758(%eax),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%edx
    add    %ebx,%edx
    mov    %edi,0x4760(%eax,%edx,2)
    mov    0x4758(%eax),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%edx
    add    %ebx,%edx
    mov    %ecx,0x4764(%eax,%edx,2)
    mov    0x475a(%eax),%bx
    inc    %ebx
    mov    $0xffffffff,%edx
    mov    %bx,0x475a(%eax)
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_55b74:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%esi
    cmpl   $0xffffffff,data_10ae6c
    je     jump_55e3d
    mov    0x4758(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_55e3d
    mov    0x4226(%esi),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_55e3d
    mov    $data_92efb,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_55bd2
    mov    $0x63b,%ebx
    mov    $data_92f04,%edx
    call   func_26198
  jump_55bd2:
    mov    0x475a(%esi),%eax
    sar    $0x10,%eax
    lea    0x0(,%eax,4),%ecx
    add    %eax,%ecx
    lea    0x475e(%esi),%edx
    add    %ecx,%ecx
    mov    %ebp,%eax
    add    %ecx,%edx
    mov    $0xffffffff,%ebx
    call   func_26874
    mov    data_a0d00,%edi
    xor    %ecx,%ecx
    mov    %ebx,data_10ae6c
    mov    %ecx,0x8(%esp)
    test   %edi,%edi
    jne    jump_55c1f
    mov    %ebp,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    call   func_552f8
    mov    %eax,0x8(%esp)
  jump_55c1f:
    mov    0x8(%esp),%eax
    xor    %ebp,%ebp
    xor    %edi,%edi
    mov    %ebp,data_10ae6c
    test   %eax,%eax
    jne    jump_55d48
    jmp    jump_55dfb
  jump_55c3a:
    mov    $0x14,%edi
    jmp    jump_55dfb
  jump_55c44:
    mov    $0x11,%edi
    mov    %eax,data_d3664
    jmp    jump_55dfb
  jump_55c53:
    mov    $0x11,%edi
    mov    %edx,data_d3664
    jmp    jump_55dfb
  jump_55c63:
    cmpl   $0x7,0xc(%esp)
    jne    jump_55c81
    mov    0xa(%esp),%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    sar    $0x10,%edx
    call   func_56b60
    jmp    jump_55dfb
  jump_55c81:
    movl   $0xffffffff,0x24d9c(%esi)
    jmp    jump_55dfb
  jump_55c90:
    mov    0xc(%esp),%al
    mov    $0xd,%edi
    mov    %al,data_968dd
    jmp    jump_55dfb
  jump_55ca3:
    mov    0x58(%eax),%dl
    mov    %eax,%ebp
    cmp    $0x4,%dl
    je     jump_55cbe
    mov    $0x6a8,%ebx
    mov    $data_92f12,%edx
    xor    %eax,%eax
    call   func_26198
  jump_55cbe:
    mov    0xc(%esp),%eax
    mov    0x59(%ebp),%ebp
    mov    %eax,(%esp)
    cmp    $0x4,%ecx
    je     jump_55cd2
    cmp    $0x8,%ecx
    jne    jump_55cd9
  jump_55cd2:
    cmpl   $0x2,0x8(%esp)
    jne    jump_55ce9
  jump_55cd9:
    mov    $0x10,%edi
    mov    %ebp,data_d3660
    jmp    jump_55dfb
  jump_55ce9:
    mov    (%esp),%eax
    mov    %eax,%ecx
    shl    $0x5,%ecx
    sub    %eax,%ecx
    shl    $0x3,%ecx
    mov    $0x2,%edx
    sub    %eax,%ecx
    mov    %ebp,%ebx
    add    %ecx,%ecx
    mov    $data_a2f72,%eax
    mov    %ecx,0x4(%esp)
    add    %ecx,%eax
    xor    %ecx,%ecx
    mov    $0xd,%edi
    call   func_45958
    test   %eax,%eax
    je     jump_55d2f
    mov    0x4(%esp),%eax
    movb   $0x1,data_a315b(%eax)
    mov    %ebp,data_a315c(%eax)
    jmp    jump_55d3b
  jump_55d2f:
    mov    0x4(%esp),%eax
    xor    %dh,%dh
    mov    %dh,data_a315b(%eax)
  jump_55d3b:
    mov    (%esp),%al
    mov    %al,data_968dd
    jmp    jump_55dfb
  jump_55d48:
    mov    0x475a(%esi),%eax
    sar    $0x10,%eax
    lea    0x0(,%eax,4),%ecx
    add    %eax,%ecx
    add    %ecx,%ecx
    lea    (%esi,%ecx,1),%ebp
    mov    0x475c(%ebp),%ecx
    mov    0x4760(%ebp),%eax
    mov    0x4764(%ebp),%edx
    sar    $0x10,%ecx
    mov    %edx,0xc(%esp)
    cmp    $0x9,%ecx
    jb     jump_55dd3
    jbe    jump_55ca3
    cmp    $0x14,%ecx
    jb     jump_55da3
    jbe    jump_55ca3
    cmp    $0x17,%ecx
    jb     jump_55d9e
    jbe    jump_55c90
    cmp    $0x19,%ecx
    jmp    jump_55df5
  jump_55d9e:
    cmp    $0x16,%ecx
    jmp    jump_55df5
  jump_55da3:
    cmp    $0x10,%ecx
    jb     jump_55dc8
    cmp    $0x12,%ecx
    jbe    jump_55c53
    cmpl   $0x1,0x8(%esp)
    jne    jump_55c63
    mov    $0x10,%edi
    mov    %eax,data_d3660
    jmp    jump_55dfb
  jump_55dc8:
    cmp    $0xf,%ecx
    je     jump_55c44
    jmp    jump_55dfb
  jump_55dd3:
    cmp    $0x3,%ecx
    jae    jump_55ca3
    cmp    $0x1,%ecx
    jb     jump_55df3
    jbe    jump_55c44
    mov    $0xd,%edi
    mov    %al,data_968dd
    jmp    jump_55dfb
  jump_55df3:
    test   %ecx,%ecx
  jump_55df5:
    je     jump_55c3a
  jump_55dfb:
    mov    0x475c(%esi),%dx
    inc    %edx
    mov    0x475a(%esi),%bx
    mov    %dx,0x475c(%esi)
    cmp    %bx,%dx
    jne    jump_55e28
    movw   $0x0,0x475c(%esi)
    movw   $0x0,0x475a(%esi)
  jump_55e28:
    movswl %di,%ebx
    test   %ebx,%ebx
    je     jump_55e3d
    mov    $0x1,%ecx
    mov    %esi,%eax
    mov    %ecx,%edx
    call   func_56b60
  jump_55e3d:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_55e48:
    .long   func_56087
    .long   func_560ee
    .long   func_5613c
    .long   func_56165
    .long   func_56250

vtable_55e5c:
    .long   func_563d3
    .long   func_55f1a
    .long   func_55f4a
    .long   func_55f39
    .long   func_56057
    .long   func_5639b
    .long   func_563b0
    .long   func_55f57
    .long   func_5601f


/*----------------------------------------------------------------*/
func_55e80:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x524,%esp
    mov    %eax,%ebp
    lea    0x422c(%eax),%esi
    mov    $0x140,%ecx
    lea    0x436c(%eax),%edi
    xor    %edx,%edx
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    0x44ac(%ebp),%ax
    mov    %dx,0x520(%esp)
    mov    %eax,0x51c(%esp)
    movw   $0x0,0x44ac(%ebp)
    test   %ax,%ax
    jle    jump_563f3
  jump_55ed9:
    mov    0x51e(%esp),%eax
    sar    $0x10,%eax
    imul   $0xa,%eax,%eax
    mov    0x436c(%eax,%ebp,1),%dx
    mov    0x436e(%eax,%ebp,1),%ecx
    mov    0x4372(%eax,%ebp,1),%eax
    mov    %eax,0x514(%esp)
    cmp    $0x8,%dx
    ja     jump_563c2
    xor    %eax,%eax
    mov    %dx,%ax
    jmp    *%cs:vtable_55e5c(,%eax,4)


/*----------------------------------------------------------------*/
func_55f1a:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x514(%esp)
    sete   %al
    xor    %ebx,%ebx
    mov    %al,%bl
    movswl %cx,%edx
    dec    %ebx
    mov    %ebp,%eax
    call   func_56e9c
    jmp    func_563d3


/*----------------------------------------------------------------*/
func_55f39:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%edx
    mov    %ebp,%eax
    call   func_570ac
    jmp    func_563d3


/*----------------------------------------------------------------*/
func_55f4a:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    %edx,data_96774
    jmp    func_563d3


/*----------------------------------------------------------------*/
func_55f57:
/*----------------------------------------------------------------*/
    mov    $data_a2f6c,%eax
    call   func_20b3c
    mov    %eax,%ebx
    test   %eax,%eax
    je     jump_55f8d
    mov    0x24d9c(%ebp),%edi
    mov    $0x7,%ecx
    cmp    $0xffffffff,%edi
    jne    jump_55f7c
    mov    $0x8,%ecx
  jump_55f7c:
    mov    $0x13,%edx
    mov    %ebp,%eax
    call   func_55aec
    jmp    func_563d3
  jump_55f8d:
    mov    $data_a2f6c,%eax
    call   func_20c94
    cmpl   $0xffffffff,0x24da0(%ebp)
    jne    jump_56001
    mov    data_a3cf4,%di
    xor    %esi,%esi
    test   %di,%di
    jle    jump_56001
    jmp    jump_55fbc
  jump_55fb0:
    mov    data_a3cf4,%ax
    inc    %esi
    cmp    %ax,%si
    jge    jump_56001
  jump_55fbc:
    xor    %eax,%eax
    movswl %si,%ecx
    mov    data_104bea,%al
    cmp    %eax,%ecx
    je     jump_55fb0
    imul   $0x1ee,%eax,%eax
    mov    $0xffffffff,%ebx
    mov    %ecx,%edx
    add    $data_a2f72,%eax
    call   func_46130
    xor    %eax,%eax
    mov    data_104bea,%al
    imul   $0x1ee,%eax,%eax
    mov    $0xffffffff,%ebx
    mov    %ecx,%edx
    add    $data_a2f72,%eax
    call   func_45f60
    jmp    jump_55fb0
  jump_56001:
    push   $0x0
    mov    $0xd,%edx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_56be8
    mov    %ebp,%eax
    call   func_5508c
    jmp    func_563d3


/*----------------------------------------------------------------*/
func_5601f:
/*----------------------------------------------------------------*/
    mov    $data_a2f6c,%eax
    call   func_20b3c
    test   %eax,%eax
    je     jump_5604c
    cmpl   $0x0,data_a0d00
    jne    jump_5604c
    movswl %dx,%ecx
    mov    %eax,%ebx
    mov    $0x13,%edx
    mov    %ebp,%eax
    call   func_55aec
    jmp    func_563d3
  jump_5604c:
    notl   0x24d9c(%ebp)
    jmp    func_563d3


/*----------------------------------------------------------------*/
func_56057:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x48a6(%ebp)
    jne    func_563d3
    cmpl   $0x0,0x48aa(%ebp)
    jne    func_563d3
    mov    $0xffffffff,%ebx
    mov    $data_92f20,%edx
    mov    %ebp,%eax
    call   func_59988
    jmp    func_563d3


/*----------------------------------------------------------------*/
func_56087:
/*----------------------------------------------------------------*/
    mov    $data_92f2d,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,0x518(%esp)
    call   func_33884
  jump_560a1:
    cmpl   $0x0,0x489e(%ebp)
    jne    jump_560ba
    mov    0x518(%esp),%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_552f8
  jump_560ba:
    cmpl   $0x1,0x514(%esp)
    jne    func_563d3
    mov    $data_93002,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_56da8
    xor    %ecx,%ecx
    push   $0x0
    mov    $0xd,%ebx
    mov    0x41(%eax),%edx
    mov    %ebp,%eax
    call   func_56d30
    jmp    func_563d3


/*----------------------------------------------------------------*/
func_560ee:
/*----------------------------------------------------------------*/
    mov    $data_92f38,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,%ecx
    mov    %eax,0x518(%esp)
    mov    0x4226(%ebp),%eax
    sar    $0x10,%eax
    push   %eax
    push   $data_92f43
    lea    0x4b8(%esp),%eax
    push   %eax
    lea    0x4bc(%esp),%ebx
    call   func_76d09
    add    $0xc,%esp
    mov    $data_92f4d,%edx
    mov    %ecx,%eax
    call   func_2fcb0
    jmp    jump_560a1


/*----------------------------------------------------------------*/
func_5613c:
/*----------------------------------------------------------------*/
    mov    $data_92f56,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    $data_92f61,%ebx
    mov    $data_92f69,%edx
    mov    %eax,0x518(%esp)
    call   func_2fcb0
    jmp    jump_560a1


/*----------------------------------------------------------------*/
func_56165:
/*----------------------------------------------------------------*/
    push   %ecx
    push   $data_92f72
    lea    0x4d4(%esp),%eax
    push   %eax
    mov    $data_92f7c,%edx
    call   func_76d09
    add    $0xc,%esp
    xor    %ebx,%ebx
    mov    %ebp,%eax
    call   func_56da8
    lea    0x4cc(%esp),%ebx
    mov    $data_92f87,%edx
    mov    %eax,%esi
    mov    %eax,0x518(%esp)
    call   func_2fcb0
    mov    %esi,%eax
    add    $0xc95,%eax
    add    $0xcb0,%esi
    mov    (%eax),%bl
    mov    %eax,0x510(%esp)
    mov    %esi,0x504(%esp)
    cmp    $0x1,%bl
    je     jump_561d6
    mov    $0x784,%ebx
    mov    $data_92f93,%edx
    xor    %eax,%eax
    call   func_26198
  jump_561d6:
    mov    0x504(%esp),%eax
    cmpb   $0x0,(%eax)
    je     jump_561f3
    mov    $0x785,%ebx
    mov    $data_92fa1,%edx
    xor    %eax,%eax
    call   func_26198
  jump_561f3:
    mov    0x510(%esp),%esi
    mov    %esp,%edi
    mov    0x5(%esi),%esi
    push   %edi
  jump_56200:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_56218
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_56200
  jump_56218:
    pop    %edi
    imul   $0x6a,%ecx,%eax
    add    $data_107020,%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    mov    0x518(%esp),%eax
    mov    0x5(%eax),%ebx
    push   %ebx
    call   func_76d09
    add    $0xc,%esp
    mov    0x504(%esp),%eax
    movw   $0x1c,0x1(%eax)
    mov    %cx,0x3(%eax)
    jmp    jump_560a1


/*----------------------------------------------------------------*/
func_56250:
/*----------------------------------------------------------------*/
    push   %ecx
    push   $data_92faf
    lea    0x4f0(%esp),%eax
    push   %eax
    mov    $data_92fba,%edx
    call   func_76d09
    add    $0xc,%esp
    xor    %ebx,%ebx
    mov    %ebp,%eax
    call   func_56da8
    lea    0x4e8(%esp),%ebx
    mov    $data_92fc5,%edx
    mov    %eax,%esi
    mov    %eax,0x518(%esp)
    call   func_2fcb0
    mov    %esi,%eax
    add    $0xc95,%eax
    add    $0xcb0,%esi
    mov    (%eax),%dl
    mov    %eax,0x50c(%esp)
    mov    %esi,0x508(%esp)
    cmp    $0x1,%dl
    je     jump_562c1
    mov    $0x79f,%ebx
    mov    $data_92fd2,%edx
    xor    %eax,%eax
    call   func_26198
  jump_562c1:
    mov    0x508(%esp),%eax
    cmpb   $0x0,(%eax)
    je     jump_562de
    mov    $0x7a0,%ebx
    mov    $data_92fe0,%edx
    xor    %eax,%eax
    call   func_26198
  jump_562de:
    mov    0x50c(%esp),%esi
    lea    0x258(%esp),%edi
    mov    0x5(%esi),%esi
    push   %edi
  jump_562f0:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_56308
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_562f0
  jump_56308:
    pop    %edi
    imul   $0x28,%ecx,%eax
    add    $data_103f9c,%eax
    add    $0xa,%eax
    push   %eax
    lea    0x25c(%esp),%eax
    push   %eax
    mov    0x514(%esp),%eax
    mov    0x5(%eax),%edx
    push   %edx
    call   func_76d09
    add    $0xc,%esp
    cmp    $0x17,%ecx
    je     jump_5634b
    mov    0x508(%esp),%eax
    movw   $0x1e,0x1(%eax)
    mov    %cx,0x3(%eax)
    jmp    jump_560a1
  jump_5634b:
    xor    %ah,%ah
    mov    0x508(%esp),%edx
    mov    data_104bea,%al
    movw   $0x0,0x3(%edx)
    add    $0xe,%eax
    mov    %ax,0x1(%edx)
    jmp    jump_560a1
  jump_5636d:
    mov    $data_92fee,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,0x518(%esp)
    test   %ecx,%ecx
    je     jump_560a1
    mov    $data_92ff9,%edx
    mov    %ecx,%ebx
    call   func_2fcb0
    jmp    jump_560a1


/*----------------------------------------------------------------*/
func_5639b:
/*----------------------------------------------------------------*/
    mov    0x514(%esp),%eax
    dec    %eax
    cmp    $0x4,%eax
    ja     jump_5636d
    jmp    *%cs:vtable_55e48(,%eax,4)


/*----------------------------------------------------------------*/
func_563b0:
/*----------------------------------------------------------------*/
    movl   $0x0,0x489e(%ebp)
    mov    %ecx,0x48a2(%ebp)
    jmp    func_563d3
  jump_563c2:
    mov    $0x7d7,%ebx
    mov    $data_9300c,%edx
    xor    %eax,%eax
    call   func_261a8


/*----------------------------------------------------------------*/
func_563d3:
/*----------------------------------------------------------------*/
    mov    0x520(%esp),%ecx
    inc    %ecx
    mov    0x51c(%esp),%esi
    mov    %cx,0x520(%esp)
    cmp    %si,%cx
    jl     jump_55ed9
  jump_563f3:
    add    $0x524,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_56400:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    0x18(%esp),%ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %bx,(%esp)
    mov    0x460c(%eax),%edx
    sar    $0x10,%edx
    cmp    $0x10,%edx
    jne    jump_56431
    mov    $0x7ed,%ebx
    mov    $data_9301a,%edx
    xor    %eax,%eax
    call   func_26198
  jump_56431:
    cmpl   $0xffffffff,0x48a6(%esi)
    je     jump_56443
    cmpl   $0xffffffff,0x48aa(%esi)
    jne    jump_56445
  jump_56443:
    xor    %ebp,%ebp
  jump_56445:
    xor    %eax,%eax
    jmp    jump_5644a
  jump_56449:
    inc    %eax
  jump_5644a:
    movswl %ax,%edx
    cmp    $0x10,%edx
    jge    jump_5649a
    imul   $0x16,%edx,%edx
    add    %esi,%edx
    cmpl   $0x0,0x44ae(%edx)
    jne    jump_56449
    mov    %edi,0x44ae(%edx)
    mov    (%esp),%eax
    mov    %ecx,0x44b4(%edx)
    mov    %ax,0x44b2(%edx)
    mov    0x14(%esp),%eax
    mov    %eax,0x44b8(%edx)
    mov    data_132b58,%eax
    mov    %ebp,0x44bc(%edx)
    add    %ebp,%eax
    mov    %eax,0x44c0(%edx)
    incw   0x460e(%esi)
  jump_5649a:
    push   $0x0
    mov    0x18(%esp),%ebp
    push   %ebp
    mov    $0x4,%ebx
    mov    %edi,%edx
    push   %ecx
    mov    0xa(%esp),%ecx
    mov    %esi,%eax
    sar    $0x10,%ecx
    call   func_59c80
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_564c0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%edi
    mov    %ebx,%ecx
    xor    %edx,%edx
    jmp    jump_564cc
  jump_564cb:
    inc    %edx
  jump_564cc:
    movswl %dx,%ebx
    cmp    $0x10,%ebx
    jge    jump_5650c
    imul   $0x16,%ebx,%ebx
    add    %eax,%ebx
    cmp    0x44ae(%ebx),%edi
    jne    jump_564cb
    movswl %cx,%esi
    cmp    $0xffffffff,%esi
    je     jump_564f2
    cmp    0x44b2(%ebx),%cx
    jne    jump_564cb
  jump_564f2:
    movswl %dx,%ebx
    imul   $0x16,%ebx,%ebx
    movl   $0x0,0x44ae(%ebx,%eax,1)
    decw   0x460e(%eax)
    jmp    jump_564cb
  jump_5650c:
    push   $0x0
    push   $0x0
    mov    $0x5,%ebx
    push   $0x0
    movswl %cx,%ecx
    mov    %edi,%edx
    call   func_59c80
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_56528:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    xor    %eax,%eax
    jmp    jump_56533
  jump_56532:
    inc    %eax
  jump_56533:
    movswl %ax,%edx
    cmp    $0x10,%edx
    jge    jump_5655a
    imul   $0x16,%edx,%edx
    add    %ecx,%edx
    cmp    0x44ae(%edx),%esi
    jne    jump_56532
    cmp    0x44b2(%edx),%bx
    jne    jump_56532
    mov    0x44bc(%edx),%eax
    pop    %esi
    pop    %ecx
    ret
  jump_5655a:
    mov    $0xffff,%eax
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_56564:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ecx,%ebp
    xor    %edx,%edx
    jmp    jump_56572
  jump_56571:
    inc    %edx
  jump_56572:
    movswl %dx,%eax
    cmp    $0x10,%eax
    jge    jump_5659f
    imul   $0x16,%eax,%eax
    add    %esi,%eax
    cmp    0x44ae(%eax),%edi
    jne    jump_56571
    cmp    0x44b2(%eax),%bx
    jne    jump_56571
    mov    %ebp,0x44bc(%eax)
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_5659f:
    xor    %eax,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_56694:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ebp
    add    $0x44ae,%eax
    xor    %edx,%edx
    mov    0x160(%eax),%di
    mov    %dx,0x8(%esp)
    mov    %eax,0x4(%esp)
    jmp    jump_566d0
  jump_566b8:
    mov    %edx,(%esp)
    mov    0x6(%esi),%eax
    mov    0xa(%esi),%edx
    call   *(%esp)
  jump_566c4:
    mov    0xe(%esi),%eax
    add    %eax,0x12(%esi)
  jump_566ca:
    dec    %edi
  jump_566cb:
    incw   0x8(%esp)
  jump_566d0:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    jge    jump_5671c
    movswl %di,%edx
    test   %edx,%edx
    jle    jump_5671c
    imul   $0x16,%eax,%eax
    mov    0x4(%esp),%esi
    add    %eax,%esi
    mov    (%esi),%edx
    test   %edx,%edx
    je     jump_566cb
    mov    data_132b58,%ebx
    cmp    0x12(%esi),%ebx
    jb     jump_566ca
    mov    0x2(%esi),%eax
    sar    $0x10,%eax
    cmp    $0x29a,%eax
    je     jump_566b8
    mov    0xa(%esi),%ecx
    mov    %eax,%ebx
    push   %ecx
    mov    %ebp,%eax
    mov    0x6(%esi),%ecx
    call   func_56d30
    jmp    jump_566c4
  jump_5671c:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_56728:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    mov    0x472e(%eax),%edx
    sar    $0x10,%edx
    cmp    $0x10,%edx
    jne    jump_56750
    mov    $0x8c6,%ebx
    mov    $data_93036,%edx
    xor    %eax,%eax
    call   func_26198
  jump_56750:
    xor    %eax,%eax
    jmp    jump_56755
  jump_56754:
    inc    %eax
  jump_56755:
    movswl %ax,%edx
    cmp    $0x10,%edx
    jge    jump_56799
    imul   $0x12,%edx,%edx
    add    %esi,%edx
    cmpl   $0x0,0x4610(%edx)
    jne    jump_56754
    mov    %edi,0x4610(%edx)
    mov    %ebp,0x4614(%edx)
    mov    0x10(%esp),%eax
    mov    %cx,0x4618(%edx)
    mov    %eax,0x461a(%edx)
    mov    0x14(%esp),%eax
    mov    %eax,0x461e(%edx)
    incw   0x4730(%esi)
  jump_56799:
    mov    0x10(%esp),%eax
    push   %ebp
    mov    0x18(%esp),%ebp
    mov    $0x6,%ebx
    push   %ebp
    movswl %cx,%ecx
    push   %eax
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_59c80
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_567bc:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%edi
    mov    %ebx,%ecx
    xor    %edx,%edx
    jmp    jump_567c8
  jump_567c7:
    inc    %edx
  jump_567c8:
    movswl %dx,%ebx
    cmp    $0x10,%ebx
    jge    jump_56808
    imul   $0x12,%ebx,%ebx
    add    %eax,%ebx
    cmp    0x4610(%ebx),%edi
    jne    jump_567c7
    movswl %cx,%esi
    cmp    $0xffffffff,%esi
    je     jump_567ee
    cmp    0x4618(%ebx),%cx
    jne    jump_567c7
  jump_567ee:
    movswl %dx,%ebx
    imul   $0x12,%ebx,%ebx
    movl   $0x0,0x4610(%ebx,%eax,1)
    decw   0x4730(%eax)
    jmp    jump_567c7
  jump_56808:
    push   $0x0
    push   $0x0
    mov    $0x7,%ebx
    push   $0x0
    movswl %cx,%ecx
    mov    %edi,%edx
    call   func_59c80
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_56824:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%esi
    mov    data_d8638,%ecx
    mov    0x4730(%eax),%ax
    xor    %edx,%edx
    mov    %ax,0xc(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,(%esp)
    cmp    $0xffffffff,%ecx
    jne    jump_56857
    movl   $0x1,0x4(%esp)
  jump_56857:
    cmpl   $0xffffffff,data_d863c
    jne    jump_56865
    orb    $0x2,0x4(%esp)
  jump_56865:
    cmpl   $0xffffffff,data_d8644
    jne    jump_56872
    orb    $0x4,(%esp)
  jump_56872:
    xor    %edx,%edx
    mov    %dx,0x8(%esp)
    jmp    jump_56880
  jump_5687b:
    incw   0x8(%esp)
  jump_56880:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    jge    jump_55e3d
    mov    0xa(%esp),%ebx
    sar    $0x10,%ebx
    test   %ebx,%ebx
    jle    jump_55e3d
    imul   $0x12,%eax,%eax
    add    %esi,%eax
    mov    0x4610(%eax),%edi
    test   %edi,%edi
    je     jump_5687b
    mov    0x4(%esp),%edx
    test   %edx,0x4614(%eax)
    je     jump_568d9
    mov    0x461e(%eax),%ebx
    mov    %edi,%edx
    push   %ebx
    mov    0x4616(%eax),%ebx
    mov    0x461a(%eax),%ecx
    sar    $0x10,%ebx
    mov    %esi,%eax
    call   func_56d30
  jump_568d9:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    imul   $0x12,%eax,%eax
    add    %esi,%eax
    mov    (%esp),%ecx
    test   %ecx,0x4614(%eax)
    je     jump_5690f
    mov    data_d864c,%ebp
    mov    data_d8648,%ecx
    mov    %edi,%edx
    mov    0x4616(%eax),%ebx
    push   %ebp
    sar    $0x10,%ebx
    mov    %esi,%eax
    call   func_56d30
  jump_5690f:
    decw   0xc(%esp)
    jmp    jump_5687b


/*----------------------------------------------------------------*/
func_5691c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    mov    data_d8648,%edi
    mov    0x3002(%eax),%edx
    mov    data_d864c,%ebp
    cmp    $0xffffffff,%edx
    je     jump_56a65
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    0x4(%esi,%eax,4),%ecx
    lea    0x4(%ecx),%eax
    cmp    0xc(%eax),%edi
    jg     jump_56a30
    cmp    0x4(%eax),%edi
    jl     jump_56a30
    cmp    0x10(%eax),%ebp
    jg     jump_56a30
    cmp    0x8(%eax),%ebp
    jl     jump_56a30
    mov    0x69(%ecx),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_56b53
    mov    0x6b(%ecx),%bx
    xor    %edx,%edx
    test   %bx,%bx
    jg     jump_569a0
    jmp    jump_56b53
  jump_56994:
    inc    %edx
    cmp    0x6b(%ecx),%dx
    jl     jump_569a6
    jmp    jump_56b53
  jump_569a0:
    mov    0x67(%ecx),%eax
    mov    %eax,(%esp)
  jump_569a6:
    movswl %dx,%eax
    mov    (%esp),%ebx
    shl    $0x2,%eax
    add    %ebx,%eax
    mov    (%eax),%eax
    mov    0x35(%eax),%ebx
    mov    %eax,0xc(%esp)
    test   %ebx,%ebx
    je     jump_56994
    mov    0x10(%eax),%ebx
    add    $0x4,%eax
    cmp    %ebx,%edi
    jg     jump_56994
    cmp    0x4(%eax),%edi
    jl     jump_56994
    cmp    0x10(%eax),%ebp
    jg     jump_56994
    cmp    0x8(%eax),%ebp
    jl     jump_56994
    mov    $0x8,%ebx
    push   %ebp
    mov    %edi,%ecx
    mov    %esi,%eax
    mov    0x3002(%esi),%edx
    call   func_56d30
    push   $0x0
    mov    $0x6,%ebx
    mov    %esi,%eax
    mov    0x3002(%esi),%edx
    xor    %ecx,%ecx
    call   func_56d30
    push   $0x0
    mov    0x10(%esp),%edx
    mov    $0x7,%ebx
    mov    %esi,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_56d30
    mov    0xc(%esp),%eax
    mov    0x41(%eax),%eax
    mov    %eax,0x3002(%esi)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_56a30:
    mov    $0x8,%ebx
    push   %ebp
    mov    %edi,%ecx
    mov    %esi,%eax
    mov    0x3002(%esi),%edx
    call   func_56d30
    push   $0x0
    mov    $0x6,%ebx
    mov    %esi,%eax
    mov    0x3002(%esi),%edx
    xor    %ecx,%ecx
    call   func_56d30
    movl   $0xffffffff,0x3002(%esi)
  jump_56a65:
    mov    0x4226(%esi),%edx
    sar    $0x10,%edx
    test   %edx,%edx
    jl     jump_56b53
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    $0x1f,%ecx
    xor    %ebx,%ebx
    mov    0x3068(%esi,%eax,2),%ax
    mov    %ebx,0x4(%esp)
    mov    %ax,0x10(%esp)
  jump_56a9c:
    mov    0xe(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_56b30
    cmpl   $0x0,0x4(%esp)
    jne    jump_56b30
    movswl %cx,%eax
    test   %eax,%eax
    jge    jump_56ace
    mov    $0x992,%ebx
    mov    $data_93044,%edx
    xor    %eax,%eax
    call   func_26198
  jump_56ace:
    mov    0x4226(%esi),%eax
    sar    $0x10,%eax
    imul   $0x8e,%eax,%eax
    lea    (%esi,%eax,1),%edx
    movswl %cx,%eax
    mov    0x306a(%edx,%eax,4),%eax
    mov    %eax,0x8(%esp)
    test   %eax,%eax
    je     jump_56b2a
    imul   $0xc,%eax,%eax
    mov    0x4(%esi,%eax,1),%edx
    cmpl   $0xffffffff,0xa3(%edx)
    jne    jump_56b25
    lea    0x4(%edx),%eax
    cmp    0xc(%eax),%edi
    jg     jump_56b25
    cmp    0x4(%eax),%edi
    jl     jump_56b25
    cmp    0x10(%eax),%ebp
    jg     jump_56b25
    cmp    0x8(%eax),%ebp
    jl     jump_56b25
    mov    0x35(%edx),%eax
    cmp    $0xffffffff,%eax
    jne    jump_56b25
    mov    %eax,0x4(%esp)
  jump_56b25:
    decw   0x10(%esp)
  jump_56b2a:
    dec    %ecx
    jmp    jump_56a9c
  jump_56b30:
    cmpl   $0xffffffff,0x4(%esp)
    jne    jump_56b53
    mov    0x8(%esp),%eax
    push   $0x0
    mov    $0x7,%ebx
    xor    %ecx,%ecx
    mov    %eax,%edx
    mov    %eax,0x3002(%esi)
    mov    %esi,%eax
    call   func_56d30
  jump_56b53:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_56b60:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,(%esp)
    mov    %ebx,%edi
    mov    0x44aa(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x20,%eax
    jne    jump_56b8b
    mov    $0x9b5,%ebx
    mov    $data_93052,%edx
    xor    %eax,%eax
    call   func_26198
  jump_56b8b:
    mov    0x44aa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    (%esp),%edx
    mov    %dx,0x422c(%esi,%eax,2)
    mov    0x44aa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %edi,0x422e(%esi,%eax,2)
    mov    0x44aa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %ecx,0x4232(%esi,%eax,2)
    incw   0x44ac(%esi)
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_56be8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%edi
    mov    %dx,0x8(%esp)
    mov    %ebx,(%esp)
    mov    %ecx,0x4(%esp)
    mov    0x4226(%eax),%edx
    sar    $0x10,%edx
    test   %edx,%edx
    jl     jump_56d24
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    $0x1f,%esi
    mov    0x3068(%edi,%eax,2),%ax
    xor    %ecx,%ecx
    mov    %ax,0xc(%esp)
  jump_56c2f:
    mov    0xa(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_56d24
    test   %ecx,%ecx
    jne    jump_56d24
    movswl %si,%eax
    test   %eax,%eax
    jge    jump_56c5e
    mov    $0x9ea,%ebx
    mov    $data_93060,%edx
    xor    %eax,%eax
    call   func_26198
  jump_56c5e:
    mov    0x4226(%edi),%eax
    sar    $0x10,%eax
    imul   $0x8e,%eax,%eax
    movswl %si,%edx
    add    %edi,%eax
    mov    0x306a(%eax,%edx,4),%eax
    test   %eax,%eax
    je     jump_56d1e
    imul   $0xc,%eax,%eax
    mov    0x20(%esp),%ebx
    mov    0x4(%edi,%eax,1),%eax
    test   %ebx,%ebx
    je     jump_56ca2
    mov    data_132b38(%edx),%dl
    and    $0xff,%edx
    je     jump_56d19
  jump_56ca2:
    mov    0x8(%esp),%ebx
    mov    0x35(%eax),%edx
    mov    %eax,%ebp
    test   %edx,%edx
    jne    jump_56cc0
    mov    0x6(%esp),%edx
    sar    $0x10,%edx
    cmp    $0x1,%edx
    je     jump_56cc0
    cmp    $0xe,%edx
    jne    jump_56cd5
  jump_56cc0:
    cmpl   $0x0,0x63(%ebp)
    je     jump_56cce
    movswl %bx,%edx
    cmp    $0x2,%edx
    jle    jump_56cd5
  jump_56cce:
    mov    $0xffffffff,%edx
    jmp    jump_56cd7
  jump_56cd5:
    xor    %edx,%edx
  jump_56cd7:
    test   %edx,%edx
    je     jump_56d07
    cmpl   $0x0,0x20(%esp)
    je     jump_56cec
    movswl %si,%edx
    movb   $0x1,data_132b38(%edx)
  jump_56cec:
    mov    0x6(%esp),%edx
    mov    0x4(%esp),%ecx
    mov    (%esp),%ebx
    mov    0xa7(%eax),%ebp
    sar    $0x10,%edx
    call   *0x8(%ebp)
    mov    %eax,%ecx
    jmp    jump_56d19
  jump_56d07:
    cmpl   $0x0,0x20(%esp)
    je     jump_56d19
    movswl %si,%eax
    xor    %dl,%dl
    mov    %dl,data_132b38(%eax)
  jump_56d19:
    decw   0xc(%esp)
  jump_56d1e:
    dec    %esi
    jmp    jump_56c2f
  jump_56d24:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_56d30:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %ebx,%edi
    mov    %ecx,%ebx
    mov    0xc(%esp),%ecx
    mov    0x4226(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jge    jump_56d50
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_56d50:
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    0x4(%esi,%eax,4),%eax
    mov    0xa7(%eax),%esi
    movswl %di,%edx
    call   *0x8(%esi)
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_56d70:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %ebx,%edi
    mov    %esp,%ebx
    call   func_56da8
    test   %eax,%eax
    je     jump_56d9f
    mov    0x10(%esp),%edx
    movswl %di,%ebx
    push   %edx
    mov    0x2(%esp),%edx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_56d30
    mov    $0xffffffff,%eax
  jump_56d9f:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_56da8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%ebp
    mov    %ebx,(%esp)
    xor    %esi,%esi
    xor    %ecx,%ecx
    jmp    jump_56dbd
  jump_56dbc:
    inc    %ecx
  jump_56dbd:
    movswl %cx,%eax
    cmp    $0x400,%eax
    jge    jump_56e0c
    cmp    0x3000(%edi),%si
    jg     jump_56e0c
    imul   $0xc,%eax,%eax
    add    %edi,%eax
    mov    0x4(%eax),%edx
    test   %edx,%edx
    je     jump_56dbc
    mov    $0xa,%ebx
    add    $0x20,%edx
    mov    %ebp,%eax
    inc    %esi
    call   func_789ba
    test   %eax,%eax
    jne    jump_56dbc
    mov    (%esp),%ebx
    test   %ebx,%ebx
    je     jump_56dfa
    mov    %cx,(%ebx)
  jump_56dfa:
    movswl %cx,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    0x4(%edi,%eax,4),%eax
    jmp    jump_56e0e
  jump_56e0c:
    xor    %eax,%eax
  jump_56e0e:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_56e18:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %edx,%ebp
    mov    %bx,0x4(%esp)
    mov    %ecx,(%esp)
    cmp    0x4226(%eax),%bx
    jge    jump_56e92
    xor    %ecx,%ecx
    jmp    jump_56e38
  jump_56e37:
    inc    %ecx
  jump_56e38:
    mov    0x2(%esp),%eax
    sar    $0x10,%eax
    imul   $0x8e,%eax,%eax
    add    %esi,%eax
    cmp    0x3068(%eax),%cx
    jge    jump_56e92
    movswl %cx,%edx
    mov    0x306a(%eax,%edx,4),%edi
    imul   $0xc,%edi,%eax
    add    %esi,%eax
    mov    0x4(%eax),%edx
    test   %edx,%edx
    je     jump_56e37
    mov    $0xa,%ebx
    add    $0x20,%edx
    mov    %ebp,%eax
    call   func_789ba
    test   %eax,%eax
    jne    jump_56e37
    mov    (%esp),%ebx
    test   %ebx,%ebx
    je     jump_56e83
    mov    %di,(%ebx)
  jump_56e83:
    lea    0x0(,%edi,4),%eax
    sub    %edi,%eax
    mov    0x4(%esi,%eax,4),%eax
    jmp    jump_56e94
  jump_56e92:
    xor    %eax,%eax
  jump_56e94:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_56e9c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,-0x4(%ebp)
    cmp    0x4228(%eax),%di
    je     jump_570a5
    movswl %di,%eax
    test   %eax,%eax
    jl     jump_56ec5
    cmp    $0x20,%eax
    jl     jump_56ed6
  jump_56ec5:
    mov    $0xa9b,%ebx
    mov    $data_9306e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_56ed6:
    mov    0x4226(%esi),%ebx
    sar    $0x10,%ebx
    test   %ebx,%ebx
    jl     jump_56f0a
    lea    0x0(,%ebx,8),%eax
    add    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    mov    0x3064(%esi,%eax,2),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_56f0a
    mov    $data_10914c,%eax
    call   func_4f45c
  jump_56f0a:
    movswl %di,%ebx
    lea    0x0(,%ebx,8),%eax
    add    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    mov    0x3064(%esi,%eax,2),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_56f36
    mov    $data_10914c,%eax
    xor    %ebx,%ebx
    call   func_4f32c
  jump_56f36:
    mov    0x4226(%esi),%ebx
    sar    $0x10,%ebx
    test   %ebx,%ebx
    jl     jump_56f71
    lea    0x0(,%ebx,8),%eax
    add    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    add    %eax,%eax
    lea    (%esi,%eax,1),%edx
    cmpl   $0x0,0x30f0(%edx)
    je     jump_56f71
    mov    %edx,%ecx
    lea    0x3066(%esi),%edx
    add    %eax,%edx
    mov    %ebx,%eax
    call   *0x30f0(%ecx)
  jump_56f71:
    mov    0x3002(%esi),%eax
    cmp    $0xffffffff,%eax
    je     jump_56f8e
    push   $0x0
    mov    $0x6,%ebx
    mov    %eax,%edx
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_56d30
  jump_56f8e:
    push   $0x0
    mov    $0x2,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_56be8
    cmpl   $0xffffffff,-0x4(%ebp)
    jne    jump_56ff2
    mov    0x4226(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_56ff2
    mov    0x4758(%esi),%ax
    movswl %ax,%edx
    inc    %eax
    mov    %ax,0x4758(%esi)
    mov    0x4228(%esi),%ax
    mov    %ax,0x4736(%esi,%edx,2)
    mov    0x4756(%esi),%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    jne    jump_56feb
    movw   $0x0,0x4758(%esi)
  jump_56feb:
    incw   0x4756(%esi)
  jump_56ff2:
    mov    %di,0x4228(%esi)
    mov    0x4226(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_57029
    cmpl   $0xffffffff,data_96bc0
    jne    jump_57029
    mov    $data_9307c,%eax
    xor    %edx,%edx
    call   func_78313
    test   %eax,%eax
    jne    jump_57029
    mov    $data_93087,%eax
    call   func_53fb0
  jump_57029:
    mov    0x3006(%esi),%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    %ecx,data_96bc0
    call   func_5b71c
    push   $0x1df
    mov    $0x27f,%ecx
    mov    %esi,%eax
    call   func_55214
    movswl %di,%ecx
    lea    0x0(,%ecx,8),%eax
    add    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    add    %eax,%eax
    lea    (%esi,%eax,1),%edx
    cmpl   $0x0,0x30ec(%edx)
    je     jump_57082
    mov    %edx,%ebx
    lea    0x3066(%esi),%edx
    add    %eax,%edx
    mov    %ecx,%eax
    call   *0x30ec(%ebx)
  jump_57082:
    push   $0x0
    mov    $0x1,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_56be8
    mov    %esi,%eax
    movl   $0xffffffff,0x3002(%esi)
    call   func_5691c
  jump_570a5:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_570ac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %edx,%ebx
    mov    0x4754(%eax),%edx
    sar    $0x10,%edx
    test   %edx,%edx
    jne    jump_570c2
    xor    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_570c2:
    mov    0x4756(%eax),%edx
    sar    $0x10,%edx
    test   %edx,%edx
    jne    jump_570d6
    mov    $0xf,%edx
    jmp    jump_570d7
  jump_570d6:
    dec    %edx
  jump_570d7:
    movswl %dx,%ecx
    mov    0x4736(%eax,%ecx,2),%cx
    cmp    $0xffffffff,%ebx
    jne    jump_5711a
    mov    %dx,0x4758(%eax)
    mov    0x4756(%eax),%edx
    sar    $0x10,%edx
    movw   $0xffff,0x4736(%eax,%edx,2)
    mov    0x4756(%eax),%bx
    dec    %ebx
    movswl %cx,%edx
    mov    %bx,0x4756(%eax)
    xor    %ebx,%ebx
    call   func_56e9c
  jump_5711a:
    mov    %ecx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_571b8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    test   %edx,%edx
    je     jump_5721a
    mov    0x2ffe(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x3ff,%eax
    je     jump_5721a
    mov    $0x1,%edx
    jmp    jump_571db
  jump_571da:
    inc    %edx
  jump_571db:
    movswl %dx,%eax
    cmp    $0x400,%eax
    jge    jump_57209
    imul   $0xc,%eax,%ebx
    add    %ecx,%ebx
    cmpl   $0x0,(%ebx)
    jne    jump_571da
    movl   $0x1,(%ebx)
    mov    %esi,0x4(%ebx)
    incw   0x3000(%ecx)
    movl   $0x12345678,(%esi)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_57209:
    mov    $0xb37,%ebx
    mov    $data_930a0,%edx
    xor    %eax,%eax
    call   func_26198
  jump_5721a:
    xor    %eax,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_57220:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%edi
    mov    %ebx,%esi
    movswl %bx,%edx
    test   %edx,%edx
    jl     jump_57235
    cmp    $0x20,%edx
    jl     jump_57246
  jump_57235:
    mov    $0xb42,%ebx
    mov    $data_930ae,%edx
    xor    %eax,%eax
    call   func_26198
  jump_57246:
    cmp    $0x400,%edi
    jl     jump_5725f
    mov    $0xb43,%ebx
    mov    $data_930bc,%edx
    xor    %eax,%eax
    call   func_26198
  jump_5725f:
    test   %edi,%edi
    je     jump_57286
    movswl %si,%ebx
    lea    0x0(,%ebx,8),%edx
    add    %ebx,%edx
    shl    $0x3,%edx
    sub    %ebx,%edx
    add    %edx,%edx
    add    %ecx,%edx
    mov    0x3066(%edx),%ebx
    sar    $0x10,%ebx
    cmp    $0x20,%ebx
    jne    jump_5728d
  jump_57286:
    xor    %edx,%edx
    jmp    jump_57308
  jump_5728d:
    xor    %eax,%eax
    test   %ebx,%ebx
    jne    jump_572ac
    incw   0x4226(%ecx)
    movw   $0x1,0x3068(%edx)
    mov    %edi,0x306a(%edx)
    jmp    jump_572da
  jump_572ab:
    inc    %eax
  jump_572ac:
    movswl %ax,%edx
    cmp    $0x20,%edx
    jge    jump_572da
    movswl %si,%ebx
    imul   $0x8e,%ebx,%ebx
    shl    $0x2,%edx
    add    %ecx,%ebx
    add    %ebx,%edx
    cmpl   $0x0,0x306a(%edx)
    jne    jump_572ab
    mov    %edi,0x306a(%edx)
    incw   0x3068(%ebx)
  jump_572da:
    lea    0x0(,%edi,4),%edx
    sub    %edi,%edx
    shl    $0x2,%edx
    add    %edx,%ecx
    movswl %ax,%edx
    incl   (%ecx)
    cmp    $0x20,%edx
    jl     jump_57303
    mov    $0xb65,%ebx
    mov    $data_930ca,%edx
    xor    %eax,%eax
    call   func_26198
  jump_57303:
    mov    $0xffffffff,%edx
  jump_57308:
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_57310:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %bx,(%esp)
    mov    %ecx,%ebp
    mov    -0x2(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_57330
    cmp    $0x20,%eax
    jl     jump_57341
  jump_57330:
    mov    $0xb75,%ebx
    mov    $data_930d8,%edx
    xor    %eax,%eax
    call   func_26198
  jump_57341:
    cmp    $0x400,%esi
    jl     jump_5735a
    mov    $0xb76,%ebx
    mov    $data_930e6,%edx
    xor    %eax,%eax
    call   func_26198
  jump_5735a:
    test   %esi,%esi
    je     jump_57381
    mov    -0x2(%esp),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    0x3066(%edi,%eax,2),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_57388
  jump_57381:
    xor    %eax,%eax
    jmp    jump_573f5
  jump_57388:
    xor    %ecx,%ecx
    jmp    jump_5738d
  jump_5738c:
    inc    %ecx
  jump_5738d:
    movswl %cx,%eax
    cmp    $0x20,%eax
    jge    jump_573df
    mov    -0x2(%esp),%edx
    sar    $0x10,%edx
    imul   $0x8e,%edx,%edx
    shl    $0x2,%eax
    add    %edi,%edx
    add    %edx,%eax
    mov    0x306a(%eax),%ebx
    cmp    %ebx,%esi
    jne    jump_5738c
    movl   $0x0,0x306a(%eax)
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    decw   0x3068(%edx)
    decl   (%edi,%eax,4)
    test   %ebp,%ebp
    je     jump_573df
    mov    %esi,%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_57530
  jump_573df:
    movswl %cx,%eax
    cmp    $0x20,%eax
    jl     jump_573f0
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_573f0:
    mov    $0xffffffff,%eax
  jump_573f5:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_5748c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    %ebx,%edi
    movswl %dx,%eax
    test   %eax,%eax
    jl     jump_574a1
    cmp    $0x20,%eax
    jl     jump_574b2
  jump_574a1:
    mov    $0xba8,%ebx
    mov    $data_93110,%edx
    xor    %eax,%eax
    call   func_26198
  jump_574b2:
    movswl %cx,%edx
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    %eax,%esi
    xor    %eax,%eax
    mov    0x30ea(%esi),%ax
    cmp    $0xffff,%eax
    je     jump_574dd
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_574dd:
    mov    $0xffffffff,%eax
    mov    %di,0x30ea(%esi)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_574f0:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    movswl %dx,%edx
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    %ebx,0x30ec(%ecx,%eax,2)
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_57510:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    movswl %dx,%edx
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    %ebx,0x30f0(%ecx,%eax,2)
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_57530:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    %ebx,%edi
    cmp    $0x400,%edx
    jl     jump_57552
    mov    $0xbdb,%ebx
    mov    $data_9311e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_57552:
    test   %ecx,%ecx
    je     jump_575b6
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    mov    (%esi,%eax,4),%edx
    dec    %edx
    mov    %edx,(%esi,%eax,4)
    je     jump_5756c
    test   %edi,%edi
    je     jump_575b6
  jump_5756c:
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    shl    $0x2,%eax
    lea    (%esi,%eax,1),%edx
    mov    0x4(%edx),%eax
    call   func_2627c
    mov    0x4(%edx),%eax
    test   %eax,%eax
    je     jump_57597
    mov    0xa7(%eax),%edi
    mov    $0x2,%edx
    call   *(%edi)
  jump_57597:
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    movl   $0x0,0x4(%esi,%eax,4)
    movl   $0x0,(%esi,%eax,4)
    decw   0x3000(%esi)
  jump_575b6:
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_575bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    mov    $0x100,%eax
    mov    $data_9312c,%ebx
    mov    $0x1,%edx
    call   func_77604
    call   func_2625c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_575f0
    mov    $0xbf7,%ebx
    mov    $data_9313a,%edx
    call   func_26198
  jump_575f0:
    mov    %ecx,%edx
    xor    %eax,%eax
  jump_575f4:
    mov    %al,(%edx)
    inc    %eax
    inc    %edx
    cmp    $0x100,%eax
    jl     jump_575f4
    mov    $0x100,%eax
    mov    $data_93148,%ebx
    movb   $0x96,0xf2(%ecx)
    mov    $0x1,%edx
    mov    %ecx,0x3012(%esi)
    call   func_77604
    call   func_2625c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5763a
    mov    $0xc01,%ebx
    mov    $data_93156,%edx
    call   func_26198
  jump_5763a:
    mov    %ecx,%edx
    xor    %eax,%eax
  jump_5763e:
    mov    %al,(%edx)
    inc    %eax
    inc    %edx
    cmp    $0x100,%eax
    jl     jump_5763e
    mov    $0x80,%eax
    mov    $data_93164,%edx
    mov    %ecx,0x3022(%esi)
    call   func_5b617
    mov    %eax,0x3006(%esi)
    mov    %esi,%eax
    call   func_57670
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_57670:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3bc,%esp
    mov    %eax,%edi
    mov    %edx,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%edx
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_5981b
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93170
    push   %edx
    call   func_78071
    add    $0x10,%esp
    call   func_53dec
    mov    0x378(%esp),%edx
    mov    %eax,%ecx
    cmp    %edx,%eax
    jg     jump_576d3
    mov    $0xc27,%ebx
    mov    $data_93176,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_576d3:
    lea    0x24db0(%edi),%ebx
    lea    -0x30d40(%ecx),%edx
    mov    %ebx,%eax
    call   func_1ad1c
    call   func_2d2cc
    lea    0x3046(%edi),%eax
    mov    %ebx,0x384(%esp)
    mov    %eax,0x390(%esp)
    lea    0x3026(%edi),%eax
    mov    %ebx,0x388(%esp)
    mov    %eax,0x38c(%esp)
  jump_57713:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93184
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_59814
    mov    0x378(%esp),%eax
    mov    %ax,0x3a8(%esp)
    cmp    $0x9,%ebx
    jb     jump_595d8
    jbe    jump_5779b
    cmp    $0xe,%ebx
    jb     jump_59443
    cmp    $0x1b,%ebx
    jbe    jump_5779b
    cmp    $0x64,%ebx
    jb     jump_5942c
    jbe    jump_59286
    cmp    $0xc8,%ebx
    jb     jump_597fe
    jbe    jump_59307
    cmp    $0x12c,%ebx
    je     jump_59385
    jmp    jump_597fe
  jump_5779b:
    mov    0x378(%esp),%ecx
    test   %ecx,%ecx
    jne    jump_577cc
    mov    $data_9318a,%ebx
    mov    $0xab,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_577c5
    call   func_2c830
  jump_577c5:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_577cc:
    cmp    $0x5,%ecx
    jne    jump_577f7
    mov    $data_9318d,%ebx
    mov    $0xab,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_577f0
    call   func_25bf8
  jump_577f0:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_577f7:
    cmp    $0x6,%ecx
    jne    jump_57822
    mov    $data_93190,%ebx
    mov    $0xb1,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_5781b
    call   func_25cb8
  jump_5781b:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_57822:
    cmp    $0x7,%ecx
    jne    jump_5784d
    mov    $data_93194,%ebx
    mov    $0x18c,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57846
    call   func_372b0
  jump_57846:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_5784d:
    cmp    $0xb,%ecx
    jne    jump_57878
    mov    $data_93197,%ebx
    mov    $0xfe0,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57871
    call   func_31200
  jump_57871:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_57878:
    cmp    $0xc,%ecx
    jne    jump_578a3
    mov    $data_9319a,%ebx
    mov    $0xaf,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_5789c
    call   func_33598
  jump_5789c:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_578a3:
    cmp    $0x9,%ecx
    jne    jump_5791e
    mov    $data_9319d,%ebp
    mov    $0x9dd,%eax
    mov    $0x2,%ebx
    call   func_78bdc
    mov    %ebx,0x380(%esp)
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57910
    call   func_2c830
    add    $0xab,%eax
    call   func_1b4f0
    lea    -0xab(%eax),%edx
    mov    $0x64,%eax
    lea    0x143(%edx),%ecx
    mov    $data_959d8,%ebx
    mov    %eax,%edx
    mov    %ecx,%eax
    call   func_77394
    lea    -0x143(%eax),%edx
    mov    %edx,%eax
    movl   $data_96018,0xa7(%edx)
    call   func_46cac
    mov    %edx,%eax
  jump_57910:
    mov    0x380(%esp),%edx
    mov    %ebp,%ebx
    jmp    jump_57bfa
  jump_5791e:
    cmp    $0xe,%ecx
    jne    jump_57949
    mov    $data_931a0,%ebx
    mov    $0xad,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57942
    call   func_39d80
  jump_57942:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_57949:
    cmp    $0xf,%ecx
    jne    jump_57974
    mov    $data_931a4,%ebx
    mov    $0xaf,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_5796d
    call   func_2f2f4
  jump_5796d:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_57974:
    cmp    $0x10,%ecx
    jne    jump_5799f
    mov    $data_931a7,%ebx
    mov    $0xb1,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57998
    call   func_51674
  jump_57998:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_5799f:
    cmp    $0x11,%ecx
    jne    jump_579ca
    mov    $data_931aa,%ebx
    mov    $0xb1,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_579c3
    call   func_51b64
  jump_579c3:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_579ca:
    cmp    $0x12,%ecx
    jne    jump_579f5
    mov    $data_931ad,%ebx
    mov    $0xbd,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_579ee
    call   func_520ec
  jump_579ee:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_579f5:
    cmp    $0x13,%ecx
    jne    jump_57a20
    mov    $data_931b0,%ecx
    mov    $0x108,%eax
    mov    $0x2,%edx
    call   func_78bdc
    mov    %eax,%ebx
    test   %eax,%eax
    je     jump_57a19
    call   func_10a3c
  jump_57a19:
    mov    %ecx,%ebx
    jmp    jump_57bfa
  jump_57a20:
    cmp    $0x14,%ecx
    jne    jump_57a4b
    mov    $data_931b3,%ebx
    mov    $0xdaf,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57a44
    call   func_2fc50
  jump_57a44:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_57a4b:
    cmp    $0x15,%ecx
    jne    jump_57a76
    mov    $data_931b6,%ecx
    mov    $0xc3,%eax
    mov    $0x2,%edx
    call   func_78bdc
    mov    %eax,%ebx
    test   %eax,%eax
    je     jump_57a6f
    call   func_3201c
  jump_57a6f:
    mov    %ecx,%ebx
    jmp    jump_57bfa
  jump_57a76:
    cmp    $0x16,%ecx
    jne    jump_57aa1
    mov    $data_931b9,%ebx
    mov    $0xdaf,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57a9a
    call   func_33830
  jump_57a9a:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_57aa1:
    cmp    $0x17,%ecx
    jne    jump_57acc
    mov    $data_931bc,%ebx
    mov    $0xdb3,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57ac5
    call   func_267a0
  jump_57ac5:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_57acc:
    cmp    $0x18,%ecx
    jne    jump_57af7
    mov    $data_931bf,%ebx
    mov    $0xab,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57af0
    call   func_27bf8
  jump_57af0:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_57af7:
    cmp    $0x19,%ecx
    jne    jump_57b22
    mov    $data_931c2,%ebx
    mov    $0xaf,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57b1b
    call   func_2d464
  jump_57b1b:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_57b22:
    cmp    $0x1a,%ecx
    jne    jump_57b4d
    mov    $data_931c5,%ebx
    mov    $0xb3,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57b46
    call   func_2fa18
  jump_57b46:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_57b4d:
    cmp    $0x1d,%ecx
    jne    jump_57b78
    mov    $data_931c8,%ebx
    mov    $0xab,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57b71
    call   func_395ec
  jump_57b71:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_57b78:
    cmp    $0x1e,%ecx
    jne    jump_57ba0
    mov    $data_931cc,%ebx
    mov    $0xab,%eax
    mov    $0x2,%ecx
    call   func_78bdc
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_57b9c
    call   func_2712c
  jump_57b9c:
    mov    %ecx,%edx
    jmp    jump_57bfa
  jump_57ba0:
    cmp    $0x1f,%ecx
    jne    jump_57bce
    mov    $data_931cf,%ebx
    mov    $0xab,%eax
    mov    $0x2,%edx
    call   func_78bdc
    test   %eax,%eax
    je     jump_57bfa
    call   func_2c830
    movl   $data_961dc,0xa7(%eax)
    jmp    jump_57bfa
  jump_57bce:
    cmp    $0x20,%ecx
    jne    jump_57c06
    mov    $data_931d3,%ebx
    mov    $0xab,%eax
    mov    $0x2,%edx
    call   func_78bdc
    test   %eax,%eax
    je     jump_57bfa
    call   func_2c830
    movl   $data_961c4,0xa7(%eax)
  jump_57bfa:
    call   func_2625c
    mov    %eax,0x37c(%esp)
  jump_57c06:
    mov    0x37c(%esp),%ebp
    mov    0x37c(%esp),%eax
    add    $0x20,%ebp
    call   func_2c978
    push   %ebp
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_931d7
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_931dd
    push   %esi
    call   func_78071
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_931e0
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    $data_931e3,%edx
    lea    0x334(%esp),%eax
    call   func_76d70
    test   %eax,%eax
    je     jump_57cbd
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_57ca9
    push   %ebp
    push   $data_931e8
    mov    $0xc8d,%ebx
    call   func_2620c
    add    $0x8,%esp
    mov    $data_931f6,%edx
    xor    %eax,%eax
    call   func_261b8
  jump_57ca9:
    mov    0x37c(%esp),%edx
    mov    0x41(%ecx),%eax
    mov    %eax,0x63(%edx)
    mov    %ecx,%eax
    call   func_2c990
  jump_57cbd:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93204
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x3a0(%esp),%edx
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_57d6e
    jmp    jump_57cfc
  jump_57cef:
    mov    0x3a0(%esp),%edx
    inc    %ecx
    cmp    %dx,%cx
    jge    jump_57d6e
  jump_57cfc:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_9320a
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x37c(%esp),%edx
    sar    $0x10,%ebx
    mov    0x41(%edx),%edx
    call   func_57220
    test   %eax,%eax
    jne    jump_57d40
    mov    $0xc97,%ebx
    mov    $data_9320d,%edx
    call   func_261a8
  jump_57d40:
    movswl %cx,%eax
    test   %eax,%eax
    jne    jump_57cef
    imul   $0x8e,0x378(%esp),%eax
    mov    0x37c(%esp),%edx
    mov    0x30ea(%edi,%eax,1),%ax
    movl   $0x0,0x1a(%edx)
    mov    %ax,0x18(%edx)
    jmp    jump_57cef
  jump_57d6e:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9321b
    push   %esi
    call   func_78071
    add    $0x10,%esp
    cmpl   $0x0,0x378(%esp)
    je     jump_57da4
    mov    0x37c(%esp),%eax
    movl   $0xffffffff,0x3d(%eax)
  jump_57da4:
    mov    0x3a6(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x19,%eax
    jne    jump_57dec
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93221
    push   %esi
    call   func_78071
    add    $0x10,%esp
    cmpl   $0x0,0x378(%esp)
    je     jump_57dec
    mov    0x37c(%esp),%eax
    movl   $0xffffffff,0xab(%eax)
  jump_57dec:
    mov    0x37c(%esp),%eax
    add    $0x8,%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93227
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x37c(%esp),%eax
    add    $0xc,%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9322d
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x37c(%esp),%eax
    add    $0x10,%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93233
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x37c(%esp),%eax
    add    $0x14,%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93239
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9323f
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x37c(%esp),%edx
    mov    0x378(%esp),%eax
    mov    %ax,0x1e(%edx)
    mov    0x3a6(%esp),%eax
    sar    $0x10,%eax
    cmp    $0xf,%eax
    jne    jump_57eda
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93245
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %eax,0xab(%edx)
  jump_57eda:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9324b
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x37c(%esp),%edx
    mov    0x378(%esp),%eax
    mov    %ax,0x59(%edx)
    lea    0x45(%edx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93251
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x47(%edx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93257
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4b(%edx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9325d
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4f(%edx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93263
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93269
    push   %esi
    xor    %ebx,%ebx
    call   func_78071
    add    $0x10,%esp
    lea    0x6d(%edx),%ecx
    mov    0x378(%esp),%eax
    mov    %ebx,0x3b0(%esp)
    mov    %eax,0x3ac(%esp)
    test   %ax,%ax
    jle    jump_580ee
    lea    0xb(%ecx),%eax
    lea    0x9(%ecx),%ebp
    mov    %eax,0x394(%esp)
    lea    0x5(%ecx),%eax
    mov    %eax,0x398(%esp)
  jump_57fca:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9326f
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%edx
    test   %edx,%edx
    jne    jump_58086
    mov    0x394(%esp),%ebx
    push   %ebx
    push   %ebp
    mov    0x3a0(%esp),%eax
    push   %eax
    lea    0x340(%esp),%eax
    push   %eax
    push   $data_93275
    push   %esi
    movb   $0x0,(%ecx)
    call   func_78071
    add    $0x18,%esp
    lea    0x334(%esp),%eax
    call   func_2d334
    mov    %eax,0x1(%ecx)
  jump_58030:
    mov    0x37c(%esp),%eax
    mov    %ecx,%edx
    mov    0x394(%esp),%ebx
    call   func_2d400
    add    $0xd,%ebp
    mov    0x3b0(%esp),%edx
    mov    0x398(%esp),%eax
    add    $0xd,%ebx
    add    $0xd,%ecx
    inc    %edx
    mov    %ebx,0x394(%esp)
    add    $0xd,%eax
    mov    0x3ac(%esp),%ebx
    mov    %edx,0x3b0(%esp)
    mov    %eax,0x398(%esp)
    cmp    %bx,%dx
    jge    jump_580ee
    jmp    jump_57fca
  jump_58086:
    cmp    $0x1,%edx
    jne    jump_580d8
    mov    0x394(%esp),%eax
    push   %eax
    push   %ebp
    mov    0x3a0(%esp),%edx
    push   %edx
    lea    0x340(%esp),%eax
    push   %eax
    push   $data_93281
    push   %esi
    mov    $0xffffffff,%ebx
    movb   $0x1,(%ecx)
    call   func_78071
    add    $0x18,%esp
    lea    0x334(%esp),%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    and    $0xffff,%eax
    mov    %eax,0x1(%ecx)
    jmp    jump_58030
  jump_580d8:
    mov    $0xce1,%ebx
    mov    $data_9328d,%edx
    xor    %eax,%eax
    call   func_261a8
    jmp    jump_58030
  jump_580ee:
    mov    0x37c(%esp),%edx
    mov    0x300a(%edi),%eax
    mov    %eax,0x4(%edx)
    jmp    jump_57713
  jump_58103:
    mov    $data_9329b,%ebx
    mov    $0xa09,%eax
    mov    $0x2,%ebp
    call   func_78bdc
    mov    %eax,%ecx
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_58124
    call   func_2ae80
  jump_58124:
    mov    %ebp,%edx
    call   func_2625c
    mov    %eax,%edx
    mov    %eax,%ebp
    add    $0x20,%edx
    call   func_2c978
    push   %edx
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_932a0
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_932a6
    push   %esi
    call   func_78071
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_932a9
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    $data_932ac,%edx
    lea    0x334(%esp),%eax
    call   func_76d70
    test   %eax,%eax
    je     jump_581c3
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_581b4
    mov    $0xcf8,%ebx
    mov    $data_932b1,%edx
    call   func_26198
  jump_581b4:
    mov    0x41(%ecx),%eax
    mov    %ebp,%edx
    mov    %eax,0x63(%ebp)
    mov    %ecx,%eax
    call   func_2c990
  jump_581c3:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_932bf
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x3a0(%esp),%eax
    xor    %ecx,%ecx
    test   %ax,%ax
    jle    jump_5823d
    jmp    jump_581fe
  jump_581f1:
    mov    0x3a0(%esp),%eax
    inc    %ecx
    cmp    %ax,%cx
    jge    jump_5823d
  jump_581fe:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_932c5
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x41(%ebp),%edx
    sar    $0x10,%ebx
    call   func_57220
    test   %eax,%eax
    jne    jump_581f1
    mov    $0xd02,%ebx
    mov    $data_932c8,%edx
    call   func_261a8
    jmp    jump_581f1
  jump_5823d:
    lea    0x8(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_932d6
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0xc(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_932dc
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x10(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_932e2
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_932e8
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x280(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_932ee
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x280(%esp),%edx
    mov    %ebp,%eax
    call   func_2af04
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_932f4
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0xa01(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_932fa
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0xa03(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93300
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0xa05(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93306
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0xa07(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9330c
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_583bb
    movl   $0xffffffff,0x9e5(%ebp)
    mov    %ebx,0x9e9(%ebp)
  jump_583bb:
    lea    0x45(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93312
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x47(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93318
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4b(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9331e
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4f(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93324
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9332a
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x9f5(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93330
    push   %esi
    call   func_78071
    add    $0x10,%esp
    cmpl   $0x0,0x378(%esp)
    je     jump_58481
    movl   $0xffffffff,0x9f1(%ebp)
  jump_58481:
    mov    0x300a(%edi),%eax
    mov    %eax,0x4(%ebp)
    jmp    jump_57713
  jump_5848f:
    mov    0x3a0(%esp),%eax
    inc    %ecx
    cmp    %ax,%cx
    jge    jump_584db
  jump_5849c:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_93360
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x41(%ebp),%edx
    sar    $0x10,%ebx
    call   func_57220
    test   %eax,%eax
    jne    jump_5848f
    mov    $0xd4b,%ebx
    mov    $data_93363,%edx
    call   func_261a8
    jmp    jump_5848f
  jump_584db:
    lea    0x8(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93371
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0xc(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93377
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x10(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9337d
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93383
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93389
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%al
    mov    %al,0xbf(%ebp)
    mov    %esp,%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9338f
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x80(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93395
    push   %esi
    lea    0x90(%esp),%ebx
    call   func_78071
    add    $0x10,%esp
    mov    %esp,%edx
    mov    %ebp,%eax
    call   func_22644
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9339b
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x3a4(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_933a1
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_933a7
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_933ad
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_933b3
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_933b9
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_933bf
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %eax,0x57e(%ebp)
    lea    0x45(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_933c5
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x47(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_933cb
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4b(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_933d1
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4f(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_933d7
    push   %esi
    call   func_78071
    mov    0x300a(%edi),%eax
    movw   $0xffff,0x18(%ebp)
    movl   $0x0,0x1a(%ebp)
    mov    data_a3cf4,%dx
    movb   $0x0,0xd9(%ebp)
    add    $0x10,%esp
    mov    %eax,0x4(%ebp)
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_57713
  jump_5872b:
    mov    $0x1,%dl
    mov    %al,%cl
    shl    %cl,%dl
    mov    0xd9(%ebp),%dh
    mov    data_a3cf4,%bx
    or     %dl,%dh
    inc    %eax
    mov    %dh,0xd9(%ebp)
    cmp    %bx,%ax
    jge    jump_57713
    jmp    jump_5872b
  jump_58752:
    mov    $data_933dd,%ebx
    mov    $0xb3,%eax
    mov    $0x2,%ebp
    call   func_78bdc
    mov    %eax,%edx
    mov    %eax,%ecx
    test   %eax,%eax
    je     jump_58773
    call   func_2d9c4
  jump_58773:
    mov    %ebp,%edx
    call   func_2625c
    mov    %eax,%edx
    mov    %eax,%ebp
    add    $0x20,%edx
    call   func_2da68
    push   %edx
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_933e1
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_933e7
    push   %esi
    call   func_78071
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_933ea
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    $data_933ed,%edx
    lea    0x334(%esp),%eax
    call   func_76d70
    test   %eax,%eax
    je     jump_58812
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_58803
    mov    $0xd8d,%ebx
    mov    $data_933f2,%edx
    call   func_26198
  jump_58803:
    mov    0x41(%ecx),%eax
    mov    %ebp,%edx
    mov    %eax,0x63(%ebp)
    mov    %ecx,%eax
    call   func_2c990
  jump_58812:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93400
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x3a0(%esp),%edx
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_588b5
    jmp    jump_58851
  jump_58844:
    mov    0x3a0(%esp),%ebx
    inc    %ecx
    cmp    %bx,%cx
    jge    jump_588b5
  jump_58851:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_93406
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x41(%ebp),%edx
    sar    $0x10,%ebx
    call   func_57220
    test   %eax,%eax
    jne    jump_5888e
    mov    $0xd97,%ebx
    mov    $data_93409,%edx
    call   func_261a8
  jump_5888e:
    movswl %cx,%eax
    test   %eax,%eax
    jne    jump_58844
    imul   $0x8e,0x378(%esp),%eax
    mov    0x30ea(%edi,%eax,1),%ax
    movl   $0x0,0x1a(%ebp)
    mov    %ax,0x18(%ebp)
    jmp    jump_58844
  jump_588b5:
    lea    0x8(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93417
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0xc(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9341d
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x10(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93423
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93429
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9342f
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x1e(%ebp)
    lea    0x45(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93435
    push   %esi
    movw   $0x0,0x59(%ebp)
    call   func_78071
    add    $0x10,%esp
    lea    0x47(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9343b
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4b(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93441
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4f(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93447
    push   %esi
    call   func_78071
    mov    0x300a(%edi),%eax
    add    $0x10,%esp
    mov    %eax,0x4(%ebp)
    lea    0x3b4(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9344d
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x3b2(%esp),%edx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2da80
    test   %eax,%eax
    jne    jump_589ff
    mov    $0xdb9,%ebx
    mov    $data_93453,%edx
    call   func_261a8
  jump_589ff:
    xor    %ecx,%ecx
    mov    0x3b4(%esp),%eax
    mov    %ecx,0x39c(%esp)
    test   %ax,%ax
    jle    jump_58b72
    jmp    jump_58a39
  jump_58a1a:
    mov    0x39c(%esp),%edx
    inc    %edx
    mov    0x3b4(%esp),%ebx
    mov    %edx,0x39c(%esp)
    cmp    %bx,%dx
    jge    jump_58b72
  jump_58a39:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93461
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x368(%esp)
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_93467
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x36a(%esp)
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_9346a
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x36e(%esp)
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_9346d
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x36c(%esp)
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_93470
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x370(%esp)
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_93473
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x372(%esp)
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_93476
    push   %esi
    lea    0x374(%esp),%ecx
    call   func_78071
    add    $0xc,%esp
    xor    %ebx,%ebx
    mov    0x378(%esp),%eax
    xor    %edx,%edx
    mov    %ax,0x374(%esp)
    mov    %ebp,%eax
    call   func_2dac8
    test   %eax,%eax
    jne    jump_58a1a
    mov    $0xdd4,%ebx
    mov    $data_93479,%edx
    call   func_261a8
    jmp    jump_58a1a
  jump_58b72:
    xor    %ecx,%ecx
    mov    data_a3cf4,%ax
    mov    %cx,0x3b8(%esp)
    test   %ax,%ax
    jle    jump_57713
  jump_58b8b:
    mov    0x3b8(%esp),%cl
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    $0x1,%ebx
    movswl %ax,%edx
    xor    %ecx,%ecx
    mov    %ebp,%eax
    call   func_2dac8
    mov    0x3b8(%esp),%edx
    inc    %edx
    mov    data_a3cf4,%bx
    mov    %dx,0x3b8(%esp)
    cmp    %bx,%dx
    jge    jump_57713
    jmp    jump_58b8b
  jump_58bcc:
    mov    $data_93487,%ebx
    mov    $0x504e,%eax
    mov    $0x2,%edx
    call   func_78bdc
    mov    %eax,%ecx
    mov    %eax,%ebp
    test   %eax,%eax
    je     jump_58bed
    call   func_15ed4
  jump_58bed:
    call   func_2625c
    mov    %eax,%edx
    mov    %eax,%ebp
    add    $0x20,%edx
    call   func_2c978
    push   %edx
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9348a
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_93490
    push   %esi
    call   func_78071
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_93493
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    $data_93496,%edx
    lea    0x334(%esp),%eax
    call   func_76d70
    test   %eax,%eax
    je     jump_58c8a
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_58c7b
    mov    $0xde9,%ebx
    mov    $data_9349b,%edx
    call   func_26198
  jump_58c7b:
    mov    0x41(%ecx),%eax
    mov    %ebp,%edx
    mov    %eax,0x63(%ebp)
    mov    %ecx,%eax
    call   func_2c990
  jump_58c8a:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_934a9
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x3a0(%esp),%eax
    xor    %ecx,%ecx
    test   %ax,%ax
    jle    jump_58d04
    jmp    jump_58cc5
  jump_58cb8:
    mov    0x3a0(%esp),%edx
    inc    %ecx
    cmp    %dx,%cx
    jge    jump_58d04
  jump_58cc5:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_934af
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x41(%ebp),%edx
    sar    $0x10,%ebx
    call   func_57220
    test   %eax,%eax
    jne    jump_58cb8
    mov    $0xdf3,%ebx
    mov    $data_934b2,%edx
    call   func_261a8
    jmp    jump_58cb8
  jump_58d04:
    lea    0x8(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_934c0
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0xc(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_934c6
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x10(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_934cc
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_934d2
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_934d8
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%al
    mov    %al,0x4f2e(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_934de
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %eax,0xb8(%ebp)
    mov    %ebp,%eax
    call   func_18370
    lea    0x45(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_934e4
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x47(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_934ea
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4b(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_934f0
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4f(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_934f6
    push   %esi
    call   func_78071
    mov    0x300a(%edi),%eax
    movw   $0xffff,0x18(%ebp)
    movl   $0x0,0x1a(%ebp)
    add    $0x10,%esp
    mov    %eax,0x4(%ebp)
    jmp    jump_57713
  jump_58e4c:
    mov    0x3a0(%esp),%eax
    inc    %ecx
    cmp    %ax,%cx
    jge    jump_58ebd
  jump_58e59:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_93524
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x41(%ebp),%edx
    sar    $0x10,%ebx
    call   func_57220
    test   %eax,%eax
    jne    jump_58e96
    mov    $0xe2b,%ebx
    mov    $data_93527,%edx
    call   func_261a8
  jump_58e96:
    movswl %cx,%eax
    test   %eax,%eax
    jne    jump_58e4c
    imul   $0x8e,0x378(%esp),%eax
    mov    0x30ea(%edi,%eax,1),%ax
    movl   $0x0,0x1a(%ebp)
    mov    %ax,0x18(%ebp)
    jmp    jump_58e4c
  jump_58ebd:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93535
    push   %esi
    call   func_78071
    add    $0x10,%esp
    cmpl   $0x0,0x378(%esp)
    je     jump_58eec
    movl   $0xffffffff,0x3d(%ebp)
  jump_58eec:
    lea    0x8(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9353b
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0xc(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93541
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x10(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93547
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9354d
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93553
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x59(%ebp)
    lea    0x45(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93559
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x47(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9355f
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4b(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93565
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4f(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9356b
    push   %esi
    call   func_78071
    mov    0x300a(%edi),%eax
    add    $0x10,%esp
    mov    %eax,0x4(%ebp)
    jmp    jump_57713
  jump_58ff3:
    mov    $data_93571,%ebx
    mov    $0x902,%eax
    mov    $0x2,%edx
    call   func_78bdc
    test   %eax,%eax
    je     jump_59010
    call   func_2e248
  jump_59010:
    call   func_2625c
    mov    %eax,%edx
    mov    %eax,%ebp
    add    $0x20,%edx
    call   func_2e3bc
    push   %edx
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93574
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_9357a
    push   %esi
    call   func_78071
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_9357d
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    $data_93580,%edx
    lea    0x334(%esp),%eax
    call   func_76d70
    test   %eax,%eax
    je     jump_590ad
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5909e
    mov    $0xe5e,%ebx
    mov    $data_93585,%edx
    call   func_26198
  jump_5909e:
    mov    0x41(%ecx),%eax
    mov    %ebp,%edx
    mov    %eax,0x63(%ebp)
    mov    %ecx,%eax
    call   func_2c990
  jump_590ad:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93593
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x3a0(%esp),%edx
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_59127
    jmp    jump_590e8
  jump_590db:
    mov    0x3a0(%esp),%ebx
    inc    %ecx
    cmp    %bx,%cx
    jge    jump_59127
  jump_590e8:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_93599
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x41(%ebp),%edx
    sar    $0x10,%ebx
    call   func_57220
    test   %eax,%eax
    jne    jump_590db
    mov    $0xe68,%ebx
    mov    $data_9359c,%edx
    call   func_261a8
    jmp    jump_590db
  jump_59127:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_935aa
    push   %esi
    call   func_78071
    add    $0x10,%esp
    cmpl   $0x0,0x378(%esp)
    je     jump_59156
    movl   $0xffffffff,0x3d(%ebp)
  jump_59156:
    lea    0x8(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_935b0
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0xc(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_935b6
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x10(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_935bc
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_935c2
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_935c8
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x1e(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_935ce
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x59(%ebp)
    lea    0x45(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_935d4
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x47(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_935da
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4b(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_935e0
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x4f(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_935e6
    push   %esi
    call   func_78071
    mov    0x300a(%edi),%eax
    add    $0x10,%esp
    mov    %eax,0x4(%ebp)
    jmp    jump_57713
  jump_59286:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9363d
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x180(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93643
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x180(%esp),%edx
    mov    0x388(%esp),%eax
    xor    %ebx,%ebx
    call   func_1adac
    mov    0x376(%esp),%edx
    mov    %ax,%bx
    sar    $0x10,%edx
    mov    %edi,%eax
    call   func_5748c
    test   %eax,%eax
    jne    jump_57713
    mov    $0xeca,%ebx
    mov    $data_93649,%edx
    call   func_26198
    jmp    jump_57713
  jump_59307:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93657
    push   %esi
    xor    %edx,%edx
    call   func_78071
    add    $0x10,%esp
    mov    $data_d8654,%eax
    mov    0x378(%esp),%dx
    xor    %ecx,%ecx
    call   func_2c08c
    jmp    jump_59372
  jump_5933d:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9365d
    xor    %ebx,%ebx
    push   %esi
    lea    0x110(%esp),%edx
    mov    %cx,%bx
    call   func_78071
    add    $0x10,%esp
    mov    $data_d8654,%eax
    inc    %ecx
    call   func_2c0c0
  jump_59372:
    mov    0x378(%esp),%ebp
    movswl %cx,%eax
    cmp    %ebp,%eax
    jl     jump_5933d
    jmp    jump_57713
  jump_59385:
    lea    0x200(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93663
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x200(%esp),%edx
    mov    0x38c(%esp),%eax
    call   func_2b360
    cmp    $0xffffffff,%eax
    je     jump_593cc
    mov    $0xee6,%ebx
    mov    $data_93669,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_593cc:
    lea    0x200(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93677
    push   %esi
    movl   $0x0,0x3042(%edi)
    call   func_78071
    add    $0x10,%esp
    lea    0x200(%esp),%edx
    mov    0x390(%esp),%eax
    call   func_2b360
    cmp    $0xffffffff,%eax
    je     jump_5941d
    mov    $0xeeb,%ebx
    mov    $data_9367d,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_5941d:
    movl   $0x0,0x3062(%edi)
    jmp    jump_57713
  jump_5942c:
    cmp    $0x1d,%ebx
    jb     jump_597fe
    cmp    $0x20,%ebx
    jbe    jump_5779b
    jmp    jump_597fe
  jump_59443:
    cmp    $0xb,%ebx
    jb     jump_58ff3
    cmp    $0xc,%ebx
    jbe    jump_5779b
    mov    $data_935ec,%ebx
    mov    $0xc0,%eax
    mov    $0x2,%edx
    call   func_78bdc
    test   %eax,%eax
    je     jump_59472
    call   func_5a594
  jump_59472:
    call   func_2625c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5948c
    mov    $0xe8e,%ebx
    mov    $data_935f3,%edx
    call   func_26198
  jump_5948c:
    mov    %ecx,%eax
    call   func_5a5f4
    mov    %ecx,0x21d92(%edi)
    lea    0x20(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93601
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x8(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93607
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0xc(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9360d
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x10(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93613
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x14(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93619
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0xaf(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9361f
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0xb3(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93625
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0xb7(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9362b
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0xbb(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93631
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x300(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_93637
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x300(%esp),%edx
    mov    0x384(%esp),%eax
    call   func_1adac
    mov    %ax,0x18(%ecx)
    mov    0x300a(%edi),%eax
    mov    %eax,0x4(%ecx)
    mov    %eax,0xab(%ecx)
    jmp    jump_57713
  jump_595d8:
    cmp    $0x3,%ebx
    jb     jump_596e8
    jbe    jump_58752
    cmp    $0x5,%ebx
    jb     jump_58bcc
    cmp    $0x7,%ebx
    jbe    jump_5779b
    mov    $data_934fc,%ebx
    mov    $0x237,%eax
    mov    $0x2,%edx
    call   func_78bdc
    test   %eax,%eax
    je     jump_59616
    call   func_4d92c
  jump_59616:
    call   func_2625c
    mov    %eax,%edx
    mov    %eax,%ebp
    add    $0x20,%edx
    call   func_2c978
    push   %edx
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_934ff
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_93505
    push   %esi
    call   func_78071
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_93508
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    $data_9350b,%edx
    lea    0x334(%esp),%eax
    call   func_76d70
    test   %eax,%eax
    je     jump_596b3
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_596a4
    mov    $0xe21,%ebx
    mov    $data_93510,%edx
    call   func_26198
  jump_596a4:
    mov    0x41(%ecx),%eax
    mov    %ebp,%edx
    mov    %eax,0x63(%ebp)
    mov    %ecx,%eax
    call   func_2c990
  jump_596b3:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9351e
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x3a0(%esp),%ebx
    xor    %ecx,%ecx
    test   %bx,%bx
    jle    jump_58ebd
    jmp    jump_58e59
  jump_596e8:
    cmp    $0x1,%ebx
    jb     jump_597f6
    jbe    jump_58103
    mov    $data_93336,%ecx
    mov    $0x596,%eax
    mov    $0x2,%ebp
    call   func_78bdc
    mov    %eax,%ebx
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_59718
    call   func_224a4
  jump_59718:
    mov    %ecx,%ebx
    mov    %ebp,%edx
    call   func_2625c
    mov    %eax,%edx
    add    $0x20,%edx
    mov    %eax,%ebp
    call   func_2c978
    mov    0x21(%edx),%eax
    push   %edx
    mov    %eax,data_96bac
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9333b
    push   %esi
    call   func_78071
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_93341
    push   %esi
    call   func_78071
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_93344
    push   %esi
    call   func_78071
    add    $0xc,%esp
    mov    $data_93347,%edx
    lea    0x334(%esp),%eax
    call   func_76d70
    test   %eax,%eax
    je     jump_597c1
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_597b2
    mov    $0xd41,%ebx
    mov    $data_9334c,%edx
    call   func_26198
  jump_597b2:
    mov    0x41(%ecx),%eax
    mov    %ebp,%edx
    mov    %eax,0x63(%ebp)
    mov    %ecx,%eax
    call   func_2c990
  jump_597c1:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_9335a
    push   %esi
    call   func_78071
    add    $0x10,%esp
    mov    0x3a0(%esp),%ebx
    xor    %ecx,%ecx
    test   %bx,%bx
    jle    jump_584db
    jmp    jump_5849c
  jump_597f6:
    test   %ebx,%ebx
    je     jump_5779b
  jump_597fe:
    mov    $0xef2,%ebx
    mov    $data_9368b,%edx
    xor    %eax,%eax
    call   func_26198
    jmp    jump_57713
  jump_59814:
    mov    %esi,%eax
    call   func_7744e
  jump_5981b:
    add    $0x3bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_59828:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x118,%esp
    mov    %eax,%esi
    mov    %esp,%eax
    mov    $0x200,%ebx
    mov    $data_93699,%edx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    jne    jump_59886
    mov    $0x4,%ebx
    mov    $data_10935f,%edx
    mov    %esp,%eax
    call   func_1bf94
    mov    $0x4,%ebx
    mov    $data_109377,%edx
    mov    %esp,%eax
    call   func_1bf94
    mov    $0x4,%ebx
    mov    %esp,%eax
    lea    0x24dac(%esi),%edx
    call   func_1bf94
  jump_59886:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x118,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5989c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x118,%esp
    mov    %eax,%ecx
    mov    %esp,%eax
    mov    $data_936a4,%edx
    call   func_1bb78
    mov    %esp,%eax
    call   func_1bca8
    test   %eax,%eax
    jne    jump_598f2
    mov    $0x4,%ebx
    mov    $data_10935f,%edx
    mov    %esp,%eax
    call   func_1c098
    mov    $0x4,%ebx
    mov    $data_109377,%edx
    mov    %esp,%eax
    call   func_1c098
    mov    $0x4,%ebx
    mov    %esp,%eax
    lea    0x24dac(%ecx),%edx
    call   func_1c098
  jump_598f2:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x118,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_59908:
/*----------------------------------------------------------------*/
    mov    0x48a6(%eax),%edx
    test   %edx,%edx
    jne    jump_59931
    cmpl   $0x0,0x48aa(%eax)
    jne    jump_59931
    movl   $0xffffffff,0x48a6(%eax)
    mov    %edx,0x48ba(%eax)
    mov    %edx,0x48b6(%eax)
  jump_59931:
    ret


/*----------------------------------------------------------------*/
func_59934:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ecx
    cmpl   $0xffffffff,0x48a6(%eax)
    je     jump_5994a
    cmpl   $0xffffffff,0x48aa(%eax)
    jne    jump_59983
  jump_5994a:
    cmpl   $0xffffffff,0x48a6(%ecx)
    jne    jump_59979
    mov    %ecx,%eax
    movl   $0x0,0x48a6(%ecx)
    call   func_59de0
    test   %edx,%edx
    je     jump_59979
    mov    $data_936af,%ebx
    mov    $data_936bc,%edx
    mov    %ecx,%eax
    call   func_59e88
  jump_59979:
    movl   $0x0,0x48aa(%ecx)
  jump_59983:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_59988:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    $data_132b20,%edi
    mov    %edx,%esi
    push   %edi
  jump_59996:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_599ae
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_59996
  jump_599ae:
    pop    %edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    $data_132b20,%edi
    sub    $0x4,%ecx
    mov    $data_936c9,%esi
    add    %ecx,%edi
    push   %edi
  jump_599c9:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_599e1
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_599c9
  jump_599e1:
    pop    %edi
    mov    data_d862c,%eax
    mov    %eax,data_132b14
    mov    data_d8630,%eax
    mov    0x48a6(%ebp),%ecx
    mov    %eax,data_132b18
    cmp    $0xffffffff,%ecx
    je     jump_59a0a
    cmpl   $0xffffffff,0x48aa(%ebp)
    jne    jump_59a11
  jump_59a0a:
    xor    %eax,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_59a11:
    mov    %ebp,%eax
    call   func_59cfc
    test   %eax,%eax
    je     jump_59a4d
    movl   $0xffffffff,0x48aa(%ebp)
    movl   $0x0,0x48b6(%ebp)
    mov    $0xffffffff,%eax
    movl   $0x0,0x48be(%ebp)
    xor    %edi,%edi
    mov    %ebx,0x48ae(%ebp)
    mov    %edi,data_132b1c
  jump_59a4d:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_59a54:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ecx
    cmpl   $0x0,0x48aa(%eax)
    je     jump_59b75
    mov    data_d8648,%eax
    mov    %eax,(%esp)
    mov    data_132b14,%eax
    mov    %eax,data_d862c
    mov    data_132b18,%eax
    mov    $0xffffffff,%edi
    mov    %eax,data_d8630
    mov    $data_d85f8,%eax
    mov    data_d864c,%ebp
    call   func_2656c
    cmp    data_d85fc,%edi
    je     jump_59ad0
    cmp    data_d8638,%edi
    jne    jump_59ab6
    cmpl   $0x0,data_d862c
    jne    jump_59ad0
  jump_59ab6:
    cmpl   $0xffffffff,data_d863c
    jne    jump_59b47
    cmpl   $0x0,data_d8630
    je     jump_59b47
  jump_59ad0:
    mov    data_d8648,%eax
    movl   $0x0,0x48aa(%ecx)
    mov    data_d864c,%ebp
    mov    0x489e(%ecx),%esi
    mov    %eax,(%esp)
    xor    %eax,%eax
    test   %esi,%esi
    jne    jump_59b1e
    mov    $data_936ce,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    $data_936d9,%ebx
    mov    $data_936e0,%edx
    mov    %eax,%esi
    call   func_2fcb0
    mov    %esi,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_552f8
  jump_59b1e:
    test   %eax,%eax
    jne    jump_59b2e
    movl   $0xffffffff,0x48aa(%ecx)
    jmp    jump_59b47
  jump_59b2e:
    xor    %eax,%eax
    call   func_782ac
    call   func_78303
    xor    %edi,%edi
    mov    data_96bbc,%eax
    mov    %eax,0x24dac(%ecx)
  jump_59b47:
    test   %edi,%edi
    je     jump_59b61
    mov    (%esp),%eax
    xor    %edi,%edi
    mov    %ebp,data_d864c
    mov    %edi,data_d8644
    mov    %eax,data_d8648
  jump_59b61:
    mov    data_d862c,%eax
    mov    %eax,data_132b14
    mov    data_d8630,%eax
    mov    %eax,data_132b18
  jump_59b75:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_59b80:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    lea    0x48c2(%eax),%esi
    xor    %edx,%edx
    xor    %edi,%edi
    mov    %edx,data_d8638
    mov    %edx,data_d863c
    mov    %edx,data_d8644
    mov    %edx,data_d85fc
  jump_59baa:
    imul   $0x18,0x48be(%ecx),%eax
    mov    0x48b6(%ecx),%ebx
    cmp    0x48c2(%ecx,%eax,1),%ebx
    jae    jump_59c20
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_59bc7:
    call   func_265a8
    jmp    jump_59c38
  jump_59bce:
    mov    0x10(%eax),%ebp
    push   %ebp
    mov    0xc(%eax),%edx
    push   %edx
    mov    0x8(%eax),%edx
    sar    $0x10,%edx
    push   %edx
    mov    0x4(%eax),%ebx
    mov    0x6(%eax),%eax
    push   %ebx
    sar    $0x10,%eax
    push   %eax
    mov    0x48ba(%ecx),%ebp
    push   %ebp
    mov    0x48be(%ecx),%eax
    push   %eax
    push   $data_936e9
    push   $data_96668
    call   func_76d09
    add    $0x24,%esp
    mov    $data_93730,%edx
    mov    $0x1011,%ebx
    call   func_2624c
    mov    %edi,%eax
    call   func_261a8
    jmp    jump_59c38
  jump_59c20:
    add    %esi,%eax
    mov    0x8(%eax),%dx
    cmp    $0x1,%dx
    jb     jump_59bce
    cmp    $0x3,%dx
    jbe    jump_59bc7
    cmp    $0x7,%dx
    ja     jump_59bce
  jump_59c38:
    mov    0x48be(%ecx),%edx
    inc    %edx
    mov    0x48ba(%ecx),%ebx
    mov    %edx,0x48be(%ecx)
    cmp    %ebx,%edx
    jl     jump_59baa
    cmpl   $0xffffffff,0x48ae(%ecx)
    je     jump_59c6c
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_59934
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_59c6c:
    mov    %edi,0x48be(%ecx)
    mov    %edi,0x48b6(%ecx)
    jmp    jump_59baa


/*----------------------------------------------------------------*/
func_59c80:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %edx,%edi
    cmpl   $0xffffffff,0x48a6(%eax)
    jne    jump_59cf4
    cmpl   $0x0,0x48aa(%eax)
    jne    jump_59cf4
    mov    0x48ba(%eax),%esi
    lea    0x0(,%esi,4),%edx
    sub    %esi,%edx
    shl    $0x3,%edx
    lea    0x48c2(%eax),%esi
    add    %esi,%edx
    mov    0x48b6(%eax),%esi
    mov    %esi,(%edx)
    mov    %edi,0x4(%edx)
    mov    %bx,0x8(%edx)
    mov    %cx,0xa(%edx)
    mov    0xc(%esp),%esi
    mov    %esi,0xc(%edx)
    mov    0x10(%esp),%esi
    mov    %esi,0x10(%edx)
    mov    0x14(%esp),%esi
    mov    %esi,0x14(%edx)
    mov    0x48ba(%eax),%edi
    inc    %edi
    mov    %edi,0x48ba(%eax)
    cmp    $0x1388,%edi
    jne    jump_59cf4
    xor    %edx,%edx
    call   func_59934
  jump_59cf4:
    pop    %edi
    pop    %esi
    ret    $0xc


/*----------------------------------------------------------------*/
func_59cfc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    sub    $0x118,%esp
    mov    %eax,%esi
    mov    %esp,%eax
    call   func_1bb78
    cmpl   $0xffffffff,0x48a6(%esi)
    jne    jump_59d27
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    xor    %ebx,%ebx
    jmp    jump_59dd1
  jump_59d27:
    mov    $0x200,%ebx
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_1bbfc
    test   %eax,%eax
    je     jump_59d4a
    mov    $0x104f,%ebx
    mov    $data_9373e,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_59d4a:
    mov    %esp,%eax
    call   func_1be28
    cmp    $0x1d4d0,%eax
    jbe    jump_59d69
    mov    $0x1052,%ebx
    mov    $data_9374c,%edx
    xor    %eax,%eax
    call   func_26198
  jump_59d69:
    mov    $0x10,%ebx
    mov    %esp,%eax
    lea    0x21d82(%esi),%edx
    call   func_1bf94
    mov    $0x1d4c0,%ebx
    mov    %esp,%eax
    lea    0x48c2(%esi),%edx
    mov    $0x18,%ecx
    call   func_1bf94
    xor    %edx,%edx
    mov    %eax,%ebx
    div    %ecx
    xor    %edx,%edx
    mov    %eax,0x48ba(%esi)
    mov    %ebx,%eax
    div    %ecx
    test   %edx,%edx
    je     jump_59db9
    mov    $0x1059,%ebx
    mov    $data_9375a,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_59db9:
    mov    $0xffffffff,%ebx
    mov    %esp,%eax
    xor    %edx,%edx
    movl   $0x0,0x48be(%esi)
    call   func_1bbc8
  jump_59dd1:
    mov    %ebx,%eax
    add    $0x118,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_59de0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x118,%esp
    mov    %eax,%esi
    mov    %esp,%eax
    call   func_1bb78
    cmpl   $0xffffffff,0x48a6(%esi)
    je     jump_59e55
    mov    $0x21,%ebx
    mov    $data_93768,%edx
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_1bbfc
    test   %eax,%eax
    je     jump_59e24
    mov    $0x106c,%ebx
    mov    $data_93775,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_59e24:
    mov    $0x10,%ebx
    mov    %esp,%eax
    lea    0x21d82(%esi),%edx
    call   func_1c098
    mov    0x48ba(%esi),%edx
    lea    0x0(,%edx,4),%ebx
    sub    %edx,%ebx
    mov    %esp,%eax
    shl    $0x3,%ebx
    lea    0x48c2(%esi),%edx
    call   func_1c098
  jump_59e55:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x118,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_59e6c:
    .long   func_59f01
    .long   func_59f2d
    .long   func_59f77
    .long   func_59fa6
    .long   func_59fa6
    .long   func_59ff2
    .long   func_59ff2


/*----------------------------------------------------------------*/
func_59e88:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%eax
    cmpl   $0x0,0x48a6(%esi)
    jne    jump_5a08a
    cmpl   $0x0,0x48aa(%esi)
    jne    jump_5a08a
    mov    $data_93783,%edx
    call   func_77f5e
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_59ed0
    mov    $0x107d,%ebx
    mov    $data_93785,%edx
    call   func_261a8
  jump_59ed0:
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_59cfc
    cmp    $0xffffffff,%eax
    je     jump_59eef
    mov    $0x1080,%ebx
    mov    $data_93793,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_59eef:
    lea    0x48c2(%esi),%eax
    xor    %ebx,%ebx
    mov    %eax,-0x4(%ebp)
    xor    %edi,%edi
    jmp    jump_5a058


/*----------------------------------------------------------------*/
func_59f01:
/*----------------------------------------------------------------*/
    mov    (%edx),%eax
    push   %eax
    push   $data_937a1
    push   %ecx
    call   func_786ea
    add    $0xc,%esp
    mov    0x10(%edx),%eax
    push   %eax
    mov    0xc(%edx),%eax
    push   %eax
    push   $data_937c3
    push   %ecx
    call   func_786ea
    add    $0x10,%esp
    jmp    jump_5a057


/*----------------------------------------------------------------*/
func_59f2d:
/*----------------------------------------------------------------*/
    mov    (%edx),%eax
    push   %eax
    push   $data_937da
    push   %ecx
    call   func_786ea
    mov    0x10(%edx),%eax
    add    $0xc,%esp
    cmp    %eax,%edi
    je     jump_59f4c
    mov    $data_937fd,%eax
    jmp    jump_59f51
  jump_59f4c:
    mov    $data_93802,%eax
  jump_59f51:
    push   %eax
    cmp    0xc(%edx),%edi
    je     jump_59f5e
    mov    $data_93805,%eax
    jmp    jump_59f63
  jump_59f5e:
    mov    $data_9380b,%eax
  jump_59f63:
    push   %eax
    push   $data_93810
    push   %ecx
    call   func_786ea
    add    $0x10,%esp
    jmp    jump_5a057


/*----------------------------------------------------------------*/
func_59f77:
/*----------------------------------------------------------------*/
    mov    (%edx),%eax
    push   %eax
    push   $data_9381e
    push   %ecx
    call   func_786ea
    add    $0xc,%esp
    mov    0xc(%edx),%eax
    push   %eax
    mov    0xd(%edx),%eax
    sar    $0x18,%eax
    push   %eax
    push   $data_93840
    push   %ecx
    call   func_786ea
    add    $0x10,%esp
    jmp    jump_5a057


/*----------------------------------------------------------------*/
func_59fa6:
/*----------------------------------------------------------------*/
    mov    0x6(%edx),%eax
    sar    $0x10,%eax
    cmp    $0x4,%eax
    jne    jump_59fb8
    mov    $data_9384f,%eax
    jmp    jump_59fbd
  jump_59fb8:
    mov    $data_9385c,%eax
  jump_59fbd:
    push   %eax
    mov    (%edx),%eax
    push   %eax
    push   $data_93869
    push   %ecx
    call   func_786ea
    add    $0x10,%esp
    mov    0x10(%edx),%eax
    push   %eax
    mov    0xc(%edx),%eax
    push   %eax
    mov    0x8(%edx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4(%edx),%eax
    push   %eax
    push   $data_9387f
    push   %ecx
    call   func_786ea
    add    $0x18,%esp
    jmp    jump_5a057


/*----------------------------------------------------------------*/
func_59ff2:
/*----------------------------------------------------------------*/
    mov    0x6(%edx),%eax
    sar    $0x10,%eax
    cmp    $0x6,%eax
    jne    jump_5a004
    mov    $data_938a8,%eax
    jmp    jump_5a009
  jump_5a004:
    mov    $data_938b7,%eax
  jump_5a009:
    push   %eax
    mov    (%edx),%eax
    push   %eax
    push   $data_938c6
    push   %ecx
    call   func_786ea
    add    $0x10,%esp
    mov    0x14(%edx),%eax
    push   %eax
    mov    0x10(%edx),%eax
    push   %eax
    mov    0xc(%edx),%eax
    push   %eax
    mov    0x8(%edx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4(%edx),%eax
    push   %eax
    push   $data_938dc
    push   %ecx
    call   func_786ea
    add    $0x1c,%esp
    jmp    jump_5a057
  jump_5a042:
    mov    0x6(%edx),%eax
    sar    $0x10,%eax
    push   %eax
    push   $data_9390d
    push   %ecx
    call   func_786ea
    add    $0xc,%esp
  jump_5a057:
    inc    %ebx
  jump_5a058:
    movswl %bx,%eax
    cmp    0x48ba(%esi),%eax
    jge    jump_5a083
    imul   $0x18,%eax,%eax
    mov    -0x4(%ebp),%edx
    add    %eax,%edx
    mov    0x8(%edx),%ax
    dec    %eax
    cmp    $0x6,%ax
    ja     jump_5a042
    and    $0xffff,%eax
    jmp    *%cs:vtable_59e6c(,%eax,4)
  jump_5a083:
    mov    %ecx,%eax
    call   func_7744e
  jump_5a08a:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_5a094:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,(%esp)
    mov    %ecx,%ebp
    mov    0x24d94(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x180,%eax
    jne    jump_5a0c4
    mov    $0x10cb,%ebx
    mov    $data_93930,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_5a0c4:
    xor    %edx,%edx
    jmp    jump_5a0c9
  jump_5a0c8:
    inc    %edx
  jump_5a0c9:
    movswl %dx,%eax
    cmp    $0x180,%eax
    jge    jump_5a12c
    shl    $0x5,%eax
    lea    (%esi,%eax,1),%ecx
    cmpl   $0x0,0x21db2(%ecx)
    jne    jump_5a0c8
    mov    (%esp),%edx
    mov    %edi,0x21db2(%ecx)
    lea    0x21d96(%esi),%edi
    mov    $0x13,%ebx
    add    %edi,%eax
    mov    %edx,0x21d96(%ecx)
    lea    0x8(%eax),%edi
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_77780
    mov    %edi,%eax
    movb   $0x0,0x21db1(%ecx)
    call   func_78c27
    mov    data_132b58,%eax
    mov    %eax,0x21d9a(%ecx)
    incw   0x24d96(%esi)
    jmp    jump_5a13d
  jump_5a12c:
    mov    $0x10dd,%ebx
    mov    $data_9393e,%edx
    xor    %eax,%eax
    call   func_26198
  jump_5a13d:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_5a144:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   %edx,%edx
    je     jump_5a18f
    xor    %edx,%edx
    jmp    jump_5a153
  jump_5a152:
    inc    %edx
  jump_5a153:
    movswl %dx,%eax
    cmp    $0x180,%eax
    jge    jump_5a17e
    shl    $0x5,%eax
    add    %ebx,%eax
    cmp    0x21db2(%eax),%ecx
    jne    jump_5a152
    movl   $0x0,0x21db2(%eax)
    decw   0x24d96(%ebx)
    pop    %ecx
    pop    %ebx
    ret
  jump_5a17e:
    mov    $0x10f1,%ebx
    mov    $data_9394c,%edx
    xor    %eax,%eax
    call   func_261a8
  jump_5a18f:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5a194:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    mov    0x24d96(%esi),%dx
    xor    %eax,%eax
    test   %dx,%dx
    jg     jump_5a1b4
    jmp    jump_5a1f9
  jump_5a1aa:
    inc    %eax
    cmp    0x24d96(%esi),%ax
    jge    jump_5a1f9
  jump_5a1b4:
    movswl %ax,%edx
    shl    $0x5,%edx
    add    %esi,%edx
    cmp    0x21db2(%edx),%edi
    jne    jump_5a1aa
    test   %ebx,%ebx
    je     jump_5a1d0
    mov    0x21d96(%edx),%edx
    mov    %edx,(%ebx)
  jump_5a1d0:
    test   %ecx,%ecx
    je     jump_5a1e3
    movswl %ax,%edx
    shl    $0x5,%edx
    mov    0x21d9a(%edx,%esi,1),%edx
    mov    %edx,(%ecx)
  jump_5a1e3:
    movswl %ax,%edx
    add    $0x21d96,%esi
    shl    $0x5,%edx
    add    %esi,%edx
    add    $0x8,%edx
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    ret
  jump_5a1f9:
    xor    %edx,%edx
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_5a270:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    0x24da4(%esi),%edi
    xor    %eax,%eax
    test   %edi,%edi
    je     jump_5a285
    cmp    $0xffffffff,%ecx
    jne    jump_5a28f
  jump_5a285:
    mov    $data_d8654,%eax
    call   func_2c7d0
  jump_5a28f:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_5a294:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    %eax,%ecx
    add    $0x3000,%eax
    mov    %eax,(%esp)
    jmp    jump_5a2b9
  jump_5a2ab:
    mov    (%esp),%edx
    add    $0xc,%ecx
    cmp    %edx,%ecx
    je     jump_56e0e
  jump_5a2b9:
    cmpl   $0x0,(%ecx)
    je     jump_5a2ab
    mov    0x4(%ecx),%eax
    mov    0xa7(%eax),%ebp
    mov    %edi,%ebx
    mov    %esi,%edx
    call   *0x14(%ebp)
    jmp    jump_5a2ab

vtable_5a2d0:
    .long   func_5a33a
    .long   func_5a421
    .long   func_5a355
    .long   func_5a421
    .long   func_5a477
    .long   func_5a477
    .long   func_5a370
    .long   func_5a38b
    .long   func_5a3a6
    .long   func_5a421
    .long   func_5a477
    .long   func_5a3c1
    .long   func_5a3d9
    .long   func_5a421
    .long   func_5a421
    .long   func_5a3f1
    .long   func_5a477
    .long   func_5a421
    .long   func_5a477
    .long   func_5a409


/*----------------------------------------------------------------*/
func_5a320:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    dec    %eax
    cmp    $0x13,%ax
    ja     func_5a477
    and    $0xffff,%eax
    jmp    *%cs:vtable_5a2d0(,%eax,4)


/*----------------------------------------------------------------*/
func_5a33a:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_9395a,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_5a437


/*----------------------------------------------------------------*/
func_5a355:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_9396c,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_5a437


/*----------------------------------------------------------------*/
func_5a370:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_9397d,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_5a437


/*----------------------------------------------------------------*/
func_5a38b:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_9398f,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_5a437


/*----------------------------------------------------------------*/
func_5a3a6:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_939a1,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_5a437


/*----------------------------------------------------------------*/
func_5a3c1:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_939b3,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_5a437


/*----------------------------------------------------------------*/
func_5a3d9:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_939c4,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_5a437


/*----------------------------------------------------------------*/
func_5a3f1:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_939d5,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_5a437


/*----------------------------------------------------------------*/
func_5a409:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_939e7,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_5a437


/*----------------------------------------------------------------*/
func_5a421:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_939f6,%edx
    mov    $data_12fc20,%eax
    call   func_1b270
    mov    %eax,%ecx
  jump_5a437:
    xor    %eax,%eax
    mov    %cx,%ax
    cmp    $0xffff,%eax
    jne    jump_5a454
    mov    $0x1168,%ebx
    mov    $data_93a08,%edx
    xor    %eax,%eax
    call   func_26198
  jump_5a454:
    push   $0x0
    push   $0x0
    xor    %edx,%edx
    push   $0x0
    mov    $data_12fc20,%eax
    mov    %cx,%dx
    call   func_1b084
    push   %eax
    push   $data_d8668
    call   func_5cb3c
    add    $0x14,%esp


/*----------------------------------------------------------------*/
func_5a477:
/*----------------------------------------------------------------*/
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5a47c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%ebp
    mov    data_96bc4(,%ebx,2),%bx
    mov    $0xf2,%eax
    mov    %bx,(%esp)
    cmp    $0xffffffff,%ecx
    jne    jump_5a4a1
    mov    $0x96,%eax
  jump_5a4a1:
    movswl %ax,%ebx
    push   %ebx
    push   %esi
    call   func_5e9d0
    add    $0x8,%esp
    push   $0x0
    mov    $data_10debe,%edi
    mov    0x2(%esp),%ebx
    push   $0xff
    sar    $0x10,%ebx
    mov    $data_10deb6,%eax
    push   %ebx
    mov    %ebp,%ecx
    mov    $0x1,%ebx
    push   $0x40
    mov    %ebx,%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2b8a8
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_5a4e4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x24,%esp
    mov    %eax,%ebp
    push   %edx
    push   $data_93a16
    lea    0x1c(%esp),%eax
    push   %eax
    mov    $0xf3,%ebx
    mov    %edx,0x2c(%esp)
    call   func_76d09
    mov    $0xf2,%eax
    mov    data_132b10,%esi
    add    $0xc,%esp
    cmp    %esi,%edx
    jne    jump_5a51e
    mov    $0xfe,%eax
    xor    %ebx,%ebx
  jump_5a51e:
    test   %ecx,%ecx
    je     jump_5a527
    mov    $0xf1,%eax
  jump_5a527:
    push   $0x0
    lea    0x18(%esp),%ecx
    mov    $data_10debe,%edi
    cwtl
    mov    %ebp,%esi
    push   %eax
    movswl %bx,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %eax
    lea    0xc(%esp),%edi
    mov    $0x1,%ebx
    push   $0x40
    mov    $data_10deb6,%eax
    mov    %ebx,%edx
    mov    %ebp,%esi
    call   func_2b8a8
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    %esp,%eax
    mov    0x20(%esp),%edi
    mov    0x4(%esp),%ebp
    mov    0x10(%esp),%edx
    push   %edi
    add    $0x23,%ebp
    dec    %edx
    push   %eax
    mov    0x10(%esp),%eax
    mov    %ebp,0xc(%esp)
    inc    %eax
    mov    %edx,0x18(%esp)
    mov    %eax,0x10(%esp)
    call   func_5e9d0
    add    $0x8,%esp
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_5a594:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2c830
    mov    %eax,%edx
    movl   $data_961ac,0xa7(%eax)
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_5a5ac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_5a5cb
    mov    $data_9615c,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_5a5cb:
    mov    $0x1,%edx
    movl   $data_961ac,0xa7(%eax)
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_5a5eb
    call   func_76d64
  jump_5a5eb:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_5a5f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    mov    %eax,%edx
    mov    $data_10ae70,%eax
    call   func_571b8
    mov    %eax,0x41(%ebx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5a60c:
/*----------------------------------------------------------------*/
    push   %esi
    mov    %eax,%esi
    mov    %edx,%eax
    mov    %ebx,%edx
    cmp    $0x3eb,%ax
    jb     jump_5a9c0
    jbe    jump_5a76b
    cmp    $0x3ee,%ax
    jb     jump_5a946
    jbe    jump_5a84b
    cmp    $0x3f1,%ax
    jb     jump_5aa04
    jbe    jump_5a8f3
    cmp    $0x1c01,%ax
    je     jump_5a8bb
    xor    %eax,%eax
    pop    %esi
    ret
  jump_5a651:
    cwtl
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_2f424
    pop    %esi
    ret
  jump_5a65f:
    mov    $data_93a1b,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    movb   $0x0,0xbf(%esi)
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5a68c
    mov    $0x11d1,%ebx
    mov    $data_93a26,%edx
    call   func_26198
  jump_5a68c:
    mov    %ecx,%eax
    mov    $func_5a47c,%edx
    call   func_2ed4c
    mov    %ecx,%eax
    movl   $0xffffffff,0xab(%ecx)
    call   func_2f1c8
    cmpl   $0x0,0x8e6(%ecx)
    jne    jump_5a6d3
    mov    $0x2000,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_2f228
    test   %eax,%eax
    jne    jump_5a6d3
    mov    $0x11d9,%ebx
    mov    $data_93a34,%edx
    call   func_26198
  jump_5a6d3:
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_5ae68
    xor    %eax,%eax
    pop    %esi
    ret
  jump_5a6e0:
    mov    $0x6,%edx
    movswl %ax,%ebx
    xor    %ecx,%ecx
    mov    $data_10ae70,%eax
    call   func_56b60
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_5a6fb:
    cmpb   $0x0,0xbf(%esi)
    je     jump_5a764
    mov    $data_93a42,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    movb   $0x0,0xbf(%esi)
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5a731
    mov    $0x11f0,%ebx
    mov    $data_93a4d,%edx
    call   func_26198
  jump_5a731:
    mov    $func_5a47c,%edx
    mov    %ecx,%eax
    movl   $0xffffffff,0xab(%ecx)
    call   func_2f1c8
    mov    %ecx,%eax
    call   func_2ed4c
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_5ae68
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_5a764:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_5a76b:
    cmpb   $0x1,0xbf(%esi)
    je     jump_5a7d4
    mov    $data_93a5b,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    movb   $0x1,0xbf(%esi)
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5a7a1
    mov    $0x1204,%ebx
    mov    $data_93a66,%edx
    call   func_26198
  jump_5a7a1:
    mov    $func_5a47c,%edx
    mov    %ecx,%eax
    movl   $0xffffffff,0xab(%ecx)
    call   func_2f1c8
    mov    %ecx,%eax
    call   func_2ed4c
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_5ab2c
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_5a7d4:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_5a7db:
    cmpb   $0x2,0xbf(%esi)
    je     jump_5a844
    mov    $data_93a74,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    movb   $0x2,0xbf(%esi)
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5a811
    mov    $0x1218,%ebx
    mov    $data_93a7f,%edx
    call   func_26198
  jump_5a811:
    mov    $func_5a47c,%edx
    mov    %ecx,%eax
    movl   $0xffffffff,0xab(%ecx)
    call   func_2f1c8
    mov    %ecx,%eax
    call   func_2ed4c
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_5af30
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_5a844:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_5a84b:
    cmpb   $0x4,0xbf(%esi)
    je     jump_5a8b4
    mov    $data_93aa6,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    movb   $0x4,0xbf(%esi)
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5a881
    mov    $0x123e,%ebx
    mov    $data_93ab1,%edx
    call   func_26198
  jump_5a881:
    mov    $func_5a47c,%edx
    mov    %ecx,%eax
    movl   $0xffffffff,0xab(%ecx)
    call   func_2f1c8
    mov    %ecx,%eax
    call   func_2ed4c
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_5b244
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_5a8b4:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_5a8bb:
    mov    0xbf(%esi),%ah
    cmp    $0x3,%ah
    jne    jump_5a8d8
    cmp    $0x5,%ecx
    jne    jump_5a8ec
    mov    data_10de82,%eax
    mov    %bl,0xf2(%eax)
    jmp    jump_5a8ec
  jump_5a8d8:
    cmp    $0x4,%ah
    jne    jump_5a8ec
    mov    $data_10914c,%eax
    movswl %bx,%edx
    xor    %ebx,%ebx
    call   func_4f8cc
  jump_5a8ec:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_5a8f3:
    cmpb   $0x3,0xbf(%esi)
    jne    jump_5a93f
    mov    $data_93abf,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5a922
    mov    $0x1262,%ebx
    mov    $data_93aca,%edx
    call   func_26198
  jump_5a922:
    xor    %edx,%edx
    mov    %ecx,%eax
    mov    data_132b10,%dx
    call   func_2ecdc
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_5a93f:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_5a946:
    cmp    $0x3ec,%ax
    jbe    jump_5a7db
    cmpb   $0x3,0xbf(%esi)
    je     jump_5a9b9
    mov    $data_93a8d,%edx
    mov    $data_10ae70,%eax
    xor    %ebx,%ebx
    movb   $0x3,0xbf(%esi)
    call   func_56da8
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5a986
    mov    $0x122b,%ebx
    mov    $data_93a98,%edx
    call   func_26198
  jump_5a986:
    mov    $func_5a4e4,%edx
    mov    %ecx,%eax
    movl   $0x0,0xab(%ecx)
    call   func_2f1c8
    mov    %ecx,%eax
    call   func_2ed4c
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_5b200
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_5a9b9:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_5a9c0:
    cmp    $0xc8,%ax
    jb     jump_5a9e4
    jbe    jump_5a65f
    cmp    $0xca,%ax
    jbe    jump_5a6e0
    cmp    $0x3ea,%ax
    je     jump_5a6fb
    xor    %eax,%eax
    pop    %esi
    ret
  jump_5a9e4:
    cmp    $0x1,%ax
    jb     jump_5aa04
    cmp    $0x2,%ax
    jbe    jump_5a651
    cmp    $0x6,%ax
    jb     jump_5aa04
    cmp    $0x7,%ax
    jbe    jump_5a651
  jump_5aa04:
    xor    %eax,%eax
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_5aa08:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x18,%esp
    mov    %eax,-0x4(%ebp)
    push   $0x0
    push   $0x0
    mov    0x18(%eax),%ax
    xor    %edx,%edx
    push   $0x0
    mov    %ax,%dx
    mov    $data_12fc20,%eax
    call   func_1b084
    push   %eax
    mov    -0x4(%ebp),%eax
    add    $0x4,%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    mov    -0x4(%ebp),%eax
    push   $0xf2
    add    $0xab,%eax
    push   %eax
    call   func_5e9d0
    mov    -0x4(%ebp),%eax
    mov    0xbf(%eax),%dl
    add    $0x8,%esp
    test   %dl,%dl
    jne    jump_5aa68
    mov    $data_93ad8,%esi
    jmp    jump_5aa85
  jump_5aa68:
    cmp    $0x1,%dl
    jne    jump_5aa74
    mov    $data_93ae3,%esi
    jmp    jump_5aa85
  jump_5aa74:
    cmp    $0x2,%dl
    jne    jump_5aa80
    mov    $data_93aee,%esi
    jmp    jump_5aa85
  jump_5aa80:
    mov    $data_93af9,%esi
  jump_5aa85:
    lea    -0x18(%ebp),%edi
    push   %edi
  jump_5aa89:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_5aaa1
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_5aa89
  jump_5aaa1:
    pop    %edi
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%ecx
    mov    -0x4(%ebp),%ebx
    mov    -0x4(%ebp),%edx
    mov    0xb3(%eax),%eax
    mov    0xb7(%ecx),%ecx
    add    $0x32,%eax
    mov    0xb3(%ebx),%ebx
    push   %eax
    mov    0xaf(%edx),%edx
    mov    $data_10deb6,%eax
    call   func_2b3e0
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x18(%ebp),%ecx
    mov    $0x1,%ebx
    push   $0x0
    mov    $data_10deb6,%eax
    mov    %ebx,%edx
    call   func_2b8a8
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    call   func_2d218
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5ab04:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x6,%ebx
    mov    (%edx),%edx
    mov    (%eax),%eax
    call   func_789ba
    pop    %ebx
    ret

vtable_5ab18:
    .long   func_5acaf
    .long   func_5abf9
    .long   func_5ac53
    .long   func_5acaf
    .long   func_5acaf


/*----------------------------------------------------------------*/
func_5ab2c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x84,%esp
    mov    %edx,%esi
    movb   $0x1,0xbf(%eax)
    call   func_78222
    xor    %edx,%edx
    xor    %ebp,%ebp
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    xor    %edi,%edi
    mov    %edx,0x6c(%esp)
    mov    %edx,0x68(%esp)
    mov    %edx,0x70(%esp)
    mov    %bx,0x78(%esp)
    mov    %cx,0x7c(%esp)
    xor    %edx,%edx
    mov    %di,0x80(%esp)
    mov    %dx,0x74(%esp)
    test   %eax,%eax
    je     jump_5ab89
    mov    $0x12a9,%ebx
    mov    $data_93b04,%edx
    xor    %eax,%eax
    call   func_26198
  jump_5ab89:
    xor    %eax,%eax
    xor    %edi,%edi
    mov    %ax,0x54(%esp)
    mov    %edi,0x50(%esp)
  jump_5ab96:
    lea    0x50(%esp),%eax
    call   func_78c46
    test   %eax,%eax
    jne    jump_5ad24
    cmpl   $0x0,0x5a(%esp)
    jne    jump_5ad1b
    mov    0x50(%esp),%edi
    lea    0x64(%esp),%ecx
    lea    0x60(%esp),%ebx
    add    $0x4,%edi
    mov    $data_10ae70,%eax
    mov    %edi,%edx
    call   func_5a194
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_5ad09
    incw   0x80(%esp)
  jump_5abdf:
    mov    0x56(%esp),%eax
    mov    0x6c(%esp),%edx
    mov    0x7c(%esp),%edi
    add    %eax,%edx
    inc    %edi
    mov    %edx,0x6c(%esp)
    mov    %di,0x7c(%esp)
    jmp    jump_5ab96


/*----------------------------------------------------------------*/
func_5abf9:
/*----------------------------------------------------------------*/
    add    $0x20,%edi
    push   %edi
    mov    0x5a(%esp),%eax
    push   %eax
    mov    0x6c(%esp),%edx
    push   %edx
    push   $data_93b12
    lea    0x10(%esp),%eax
    push   %eax
    mov    $0xffffffff,%ebx
    xor    %ecx,%ecx
    call   func_76d09
    add    $0x14,%esp
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_2ea8c
    xor    %edx,%edx
    mov    0x60(%esp),%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    mov    0x74(%esp),%ecx
    call   func_2ec50
    mov    0x56(%esp),%eax
    mov    0x68(%esp),%ebx
    inc    %ecx
    add    %eax,%ebx
    mov    %cx,0x74(%esp)
    mov    %ebx,0x68(%esp)
    jmp    jump_5abdf


/*----------------------------------------------------------------*/
func_5ac53:
/*----------------------------------------------------------------*/
    push   %eax
    mov    0x5a(%esp),%ebx
    push   %ebx
    mov    0x6c(%esp),%ecx
    push   %ecx
    push   $data_93b27
    lea    0x10(%esp),%eax
    push   %eax
    lea    0x14(%esp),%edx
    mov    $0xffffffff,%ebx
    call   func_76d09
    add    $0x14,%esp
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_2ea8c
    xor    %edx,%edx
    mov    0x60(%esp),%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    mov    0x70(%esp),%edi
    call   func_2ec50
    mov    0x56(%esp),%eax
    mov    0x78(%esp),%ebx
    add    %eax,%edi
    inc    %ebx
    mov    %edi,0x70(%esp)
    mov    %bx,0x78(%esp)
    jmp    jump_5abdf


/*----------------------------------------------------------------*/
func_5acaf:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    0x5a(%esp),%ecx
    push   %ecx
    mov    0x6c(%esp),%edi
    push   %edi
    push   $data_93b37
    lea    0x10(%esp),%eax
    push   %eax
    lea    0x14(%esp),%edx
    mov    $0xffffffff,%ebx
    call   func_76d09
    add    $0x14,%esp
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_2ea8c
    xor    %edx,%edx
    mov    0x60(%esp),%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2ec50
    jmp    jump_5abdf
  jump_5acf3:
    mov    $0x12e3,%ebx
    mov    $data_93b47,%edx
    xor    %eax,%eax
    call   func_261a8
    jmp    jump_5abdf
  jump_5ad09:
    mov    0x60(%esp),%edx
    dec    %edx
    cmp    $0x4,%edx
    ja     jump_5acf3
    jmp    *%cs:vtable_5ab18(,%edx,4)
  jump_5ad1b:
    add    0x56(%esp),%ebp
    jmp    jump_5ab96
  jump_5ad24:
    mov    0x68(%esp),%ebx
    mov    0x72(%esp),%eax
    push   %ebx
    sar    $0x10,%eax
    push   %eax
    push   $data_93b55
    lea    0xc(%esp),%eax
    push   %eax
    lea    0x10(%esp),%edx
    xor    %ecx,%ecx
    call   func_76d09
    add    $0x10,%esp
    mov    $0xffffffff,%ebx
    mov    %esi,%eax
    call   func_2ea8c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    mov    0x70(%esp),%ecx
    call   func_2ec50
    mov    0x76(%esp),%eax
    push   %ecx
    sar    $0x10,%eax
    push   %eax
    push   $data_93b70
    lea    0xc(%esp),%eax
    push   %eax
    mov    $0xffffffff,%ebx
    lea    0x10(%esp),%edx
    call   func_76d09
    add    $0x10,%esp
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_2ea8c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    mov    0x6c(%esp),%edi
    call   func_2ec50
    mov    0x7a(%esp),%eax
    push   %edi
    sar    $0x10,%eax
    push   %eax
    push   $data_93b8d
    lea    0xc(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
    mov    $0xffffffff,%ebx
    mov    %esp,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2ec50
    mov    0x7e(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    push   $data_93baf
    lea    0x8(%esp),%eax
    push   %eax
    xor    %ecx,%ecx
    mov    $0xffffffff,%ebx
    call   func_76d09
    add    $0xc,%esp
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_2ea8c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2ec50
    push   %ebp
    push   $data_93bcc
    lea    0x8(%esp),%eax
    push   %eax
    xor    %ecx,%ecx
    mov    $0xffffffff,%ebx
    call   func_76d09
    add    $0xc,%esp
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_2ea8c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2ec50
    mov    $func_5ab04,%edx
    mov    %esi,%eax
    call   func_2f1d8
    mov    %esi,%eax
    call   func_2f1e0
    add    $0x84,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5ae68:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x34,%esp
    mov    %edx,%ebp
    mov    data_10f096,%edx
    sar    $0x10,%edx
    movb   $0x0,0xbf(%eax)
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    $0x1f,%esi
    mov    data_10ded8(,%eax,2),%di
  jump_5ae9d:
    movswl %di,%eax
    test   %eax,%eax
    jle    jump_5af25
    movswl %si,%eax
    test   %eax,%eax
    jge    jump_5aec0
    mov    $0x131e,%ebx
    mov    $data_93bec,%edx
    xor    %eax,%eax
    call   func_26198
  jump_5aec0:
    mov    data_10f096,%eax
    sar    $0x10,%eax
    imul   $0x8e,%eax,%eax
    movswl %si,%edx
    mov    data_10deda(%eax,%edx,4),%eax
    test   %eax,%eax
    je     jump_5af1f
    imul   $0xc,%eax,%edx
    mov    data_10ae74(%edx),%edx
    cmpl   $0x0,0x63(%edx)
    jne    jump_5aeef
    mov    $0x20,%bl
    jmp    jump_5aef1
  jump_5aeef:
    mov    $0x43,%bl
  jump_5aef1:
    add    $0x20,%edx
    push   %edx
    push   %eax
    movsbl %bl,%eax
    push   %eax
    push   $data_93bfa
    lea    0x10(%esp),%eax
    xor    %ecx,%ecx
    push   %eax
    lea    0x14(%esp),%edx
    mov    $0xffffffff,%ebx
    call   func_76d09
    add    $0x14,%esp
    mov    %ebp,%eax
    dec    %edi
    call   func_2ea8c
  jump_5af1f:
    dec    %esi
    jmp    jump_5ae9d
  jump_5af25:
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5af30:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x80,%esp
    mov    %edx,%esi
    mov    $data_12fc20,%edx
    xor    %edi,%edi
    mov    %edx,0x70(%esp)
    lea    0x7d0(%edx),%eax
    mov    %edi,0x7c(%esp)
    mov    %eax,0x68(%esp)
    mov    %edx,0x74(%esp)
    mov    %edx,%ebp
    jmp    jump_5afe0
  jump_5af61:
    xor    %eax,%eax
    mov    0x640(%ebp),%ax
    imul   $0x32,%eax,%edx
    mov    0x68(%esp),%ebx
    shl    $0x2,%eax
    add    %ebx,%edx
    add    $data_12fc20,%eax
    push   %edx
    mov    0x320(%eax),%ecx
    push   %ecx
    push   $data_93c09
    lea    0xc(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0x10,%esp
    mov    0x74(%esp),%eax
    mov    $0xffffffff,%ebx
    mov    0x320(%eax),%edx
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_78c27
    add    %edx,%edi
    mov    %esp,%edx
    mov    %esi,%eax
    add    $0x2,%ebp
    call   func_2ea8c
    xor    %edx,%edx
    mov    $0x1,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    mov    0x7c(%esp),%ecx
    call   func_2ec50
    mov    0x74(%esp),%ebx
    inc    %ecx
    add    $0x4,%ebx
    mov    %ecx,0x7c(%esp)
    mov    %ebx,0x74(%esp)
  jump_5afe0:
    mov    0x70(%esp),%eax
    mov    0x2ee0(%eax),%eax
    mov    0x7c(%esp),%edx
    sar    $0x10,%eax
    cmp    %edx,%eax
    jg     jump_5af61
    mov    $0xffffffff,%ebx
    mov    $data_93c11,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    mov    0x70(%esp),%eax
    add    $0x7d0,%eax
    mov    %eax,0x6c(%esp)
    mov    0x70(%esp),%eax
    xor    %ebp,%ebp
    mov    %eax,0x64(%esp)
    mov    %eax,0x78(%esp)
    jmp    jump_5b048
  jump_5b029:
    mov    0x64(%esp),%eax
    mov    0x78(%esp),%edx
    inc    %ebp
    add    $0x32,%eax
    add    $0x4,%edx
    mov    %eax,0x64(%esp)
    mov    %edx,0x78(%esp)
    cmp    $0xc8,%ebp
    jge    jump_5b0a2
  jump_5b048:
    imul   $0x32,%ebp,%eax
    mov    0x64(%esp),%edx
    cmpb   $0x0,0x7d0(%edx)
    je     jump_5b029
    add    0x6c(%esp),%eax
    push   %eax
    push   $data_93c13
    lea    0x8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    mov    0x78(%esp),%eax
    mov    $0xffffffff,%ebx
    mov    0x320(%eax),%edx
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_78c27
    add    %edx,%edi
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_2ea8c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2ec50
    jmp    jump_5b029
  jump_5b0a2:
    mov    $0xffffffff,%ebx
    mov    $data_93c16,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    mov    0x70(%esp),%eax
    mov    0x2ede(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    push   $data_93c18
    lea    0x8(%esp),%eax
    push   %eax
    mov    $0xffffffff,%ebx
    lea    0xc(%esp),%edx
    call   func_76d09
    add    $0xc,%esp
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_2ea8c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2ec50
    mov    0x70(%esp),%eax
    mov    0x2ee0(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    push   $data_93c2c
    lea    0x8(%esp),%eax
    push   %eax
    xor    %ecx,%ecx
    mov    $0xffffffff,%ebx
    call   func_76d09
    add    $0xc,%esp
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_2ea8c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_2ec50
    mov    $0xffffffff,%ebx
    mov    $data_93c3e,%edx
    mov    %esi,%eax
    call   func_2ea8c
    mov    0x70(%esp),%eax
    mov    0x2ee8(%eax),%ebx
    push   %ebx
    push   $data_93c40
    lea    0x8(%esp),%eax
    push   %eax
    lea    0xc(%esp),%edx
    xor    %ecx,%ecx
    call   func_76d09
    add    $0xc,%esp
    mov    $0xffffffff,%ebx
    mov    %esi,%eax
    call   func_2ea8c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2ec50
    push   %edi
    push   $data_93c56
    lea    0x8(%esp),%eax
    push   %eax
    call   func_76d09
    add    $0xc,%esp
    mov    $0xffffffff,%ebx
    mov    %esp,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2ec50
    mov    0x70(%esp),%eax
    mov    0x2ee8(%eax),%eax
    sub    %edi,%eax
    push   %eax
    push   $data_93c60
    lea    0x8(%esp),%eax
    push   %eax
    xor    %ecx,%ecx
    mov    $0xffffffff,%ebx
    call   func_76d09
    add    $0xc,%esp
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_2ea8c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2ec50
    add    $0x80,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5b200:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%edi
    movb   $0x3,0xbf(%eax)
    xor    %esi,%esi
    movswl %si,%edx
    cmp    $0x100,%edx
    jl     jump_5b21f
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_5b21f:
    mov    $0xffffffff,%ebx
    movswl %si,%edx
    mov    %edi,%eax
    xor    %ecx,%ecx
    call   func_2ea8c
    inc    %esi
    movswl %si,%edx
    cmp    $0x100,%edx
    jl     jump_5b21f
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5b244:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x50,%esp
    mov    %edx,%edi
    movb   $0x4,0xbf(%eax)
    mov    data_109846,%dx
    xor    %esi,%esi
    test   %dx,%dx
    jle    jump_5b2a1
  jump_5b262:
    movswl %si,%edx
    imul   $0x1c,%edx,%eax
    add    $data_1094c6,%eax
    mov    0x18(%eax),%ebx
    push   %ebx
    push   %eax
    push   %edx
    push   $data_93c6a
    lea    0x10(%esp),%eax
    xor    %ecx,%ecx
    push   %eax
    mov    $0xffffffff,%ebx
    lea    0x14(%esp),%edx
    call   func_76d09
    add    $0x14,%esp
    mov    %edi,%eax
    inc    %esi
    call   func_2ea8c
    cmp    data_109846,%si
    jl     jump_5b262
  jump_5b2a1:
    add    $0x50,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5b2b0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_5b2cf
    mov    $data_96184,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_5b2cf:
    mov    $0x1,%edx
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_5b2e5
    call   func_76d64
  jump_5b2e5:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5b2f0:
/*----------------------------------------------------------------*/
    call   func_2c830
    movl   $data_961c4,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_5b300:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_5b31f
    mov    $data_96198,%edx
    call   func_76d3c
    call   func_76d5c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_5b31f:
    mov    $0x1,%edx
    call   func_2c848
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_5b335
    call   func_76d64
  jump_5b335:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5b340:
/*----------------------------------------------------------------*/
    call   func_2c830
    movl   $data_961dc,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_5b50c:
/*----------------------------------------------------------------*/
    push   $0x24
    call   func_78cfa
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    mov    %eax,-0xc(%ebp)
    mov    %edx,-0x8(%ebp)
    mov    -0xc(%ebp),%eax
    mov    (%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    (%eax),%edx
    je     jump_5b541
    movl   $0x0,-0x4(%ebp)
    jmp    jump_5b60c
  jump_5b541:
    mov    -0xc(%ebp),%eax
    mov    0x10(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0x8(%eax),%edx
    jge    jump_5b55b
    movl   $0x0,-0x4(%ebp)
    jmp    jump_5b60c
  jump_5b55b:
    mov    -0xc(%ebp),%eax
    mov    0x8(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0x10(%eax),%edx
    jle    jump_5b575
    movl   $0x0,-0x4(%ebp)
    jmp    jump_5b60c
  jump_5b575:
    mov    -0xc(%ebp),%eax
    mov    0xc(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0x4(%eax),%edx
    jge    jump_5b58f
    movl   $0x0,-0x4(%ebp)
    jmp    jump_5b60c
  jump_5b58f:
    mov    -0xc(%ebp),%eax
    mov    0x4(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0xc(%eax),%edx
    jle    jump_5b5a9
    movl   $0x0,-0x4(%ebp)
    jmp    jump_5b60c
  jump_5b5a9:
    mov    -0xc(%ebp),%eax
    mov    0x4(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0x4(%eax),%edx
    jge    jump_5b5c0
    movl   $0x0,-0x4(%ebp)
    jmp    jump_5b60c
  jump_5b5c0:
    mov    -0xc(%ebp),%eax
    mov    0xc(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0xc(%eax),%edx
    jle    jump_5b5d7
    movl   $0x0,-0x4(%ebp)
    jmp    jump_5b60c
  jump_5b5d7:
    mov    -0xc(%ebp),%eax
    mov    0x8(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0x8(%eax),%edx
    jge    jump_5b5ee
    movl   $0x0,-0x4(%ebp)
    jmp    jump_5b60c
  jump_5b5ee:
    mov    -0xc(%ebp),%eax
    mov    0x10(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0x10(%eax),%edx
    jle    jump_5b605
    movl   $0x0,-0x4(%ebp)
    jmp    jump_5b60c
  jump_5b605:
    movl   $0x1,-0x4(%ebp)
  jump_5b60c:
    mov    -0x4(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5b617:
/*----------------------------------------------------------------*/
    push   $0x28
    call   func_78cfa
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    mov    %eax,-0xc(%ebp)
    mov    $0xc,%eax
    call   func_78734
    mov    %eax,-0x4(%ebp)
    cmpl   $0x0,-0x4(%ebp)
    jne    jump_5b651
    movl   $0x0,-0x8(%ebp)
    jmp    jump_5b6cf
  jump_5b651:
    mov    $0x4,%edx
    mov    -0xc(%ebp),%eax
    call   func_78817
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    mov    %edx,0x4(%eax)
    mov    -0x4(%ebp),%eax
    cmpl   $0x0,0x4(%eax)
    jne    jump_5b680
    mov    -0x4(%ebp),%eax
    call   func_7882f
    movl   $0x0,-0x8(%ebp)
    jmp    jump_5b6cf
  jump_5b680:
    mov    $0x14,%edx
    mov    -0xc(%ebp),%eax
    call   func_78817
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    mov    %edx,(%eax)
    mov    -0x4(%ebp),%eax
    cmpl   $0x0,(%eax)
    jne    jump_5b6b8
    mov    -0x4(%ebp),%eax
    mov    0x4(%eax),%eax
    call   func_7882f
    mov    -0x4(%ebp),%eax
    call   func_7882f
    movl   $0x0,-0x8(%ebp)
    jmp    jump_5b6cf
  jump_5b6b8:
    mov    -0xc(%ebp),%eax
    mov    -0x4(%ebp),%edx
    mov    %eax,0x8(%edx)
    mov    -0x4(%ebp),%eax
    call   func_5b71c
    mov    -0x4(%ebp),%eax
    mov    %eax,-0x8(%ebp)
  jump_5b6cf:
    mov    -0x8(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5b71c:
/*----------------------------------------------------------------*/
    push   $0x24
    call   func_78cfa
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x8,%esp
    mov    %eax,-0x8(%ebp)
    movl   $0x0,-0x4(%ebp)
  jump_5b73e:
    mov    -0x4(%ebp),%eax
    mov    -0x8(%ebp),%edx
    cmp    0x8(%edx),%eax
    jb     jump_5b753
    jmp    jump_5b769
  jump_5b74b:
    mov    -0x4(%ebp),%eax
    incl   -0x4(%ebp)
    jmp    jump_5b73e
  jump_5b753:
    mov    -0x4(%ebp),%edx
    shl    $0x2,%edx
    mov    -0x8(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    movl   $0x0,(%eax)
    jmp    jump_5b74b
  jump_5b769:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5b7c2:
/*----------------------------------------------------------------*/
    push   $0x34
    call   func_78cfa
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x24,%esp
    mov    %eax,-0x24(%ebp)
    mov    %edx,-0x20(%ebp)
    mov    %ebx,-0x1c(%ebp)
    mov    %ecx,-0x18(%ebp)
    movl   $0x0,-0x4(%ebp)
  jump_5b7ea:
    mov    -0x4(%ebp),%eax
    mov    -0x24(%ebp),%edx
    cmp    0x8(%edx),%eax
    jb     jump_5b7ff
    jmp    jump_5b812
  jump_5b7f7:
    mov    -0x4(%ebp),%eax
    incl   -0x4(%ebp)
    jmp    jump_5b7ea
  jump_5b7ff:
    mov    -0x4(%ebp),%edx
    shl    $0x2,%edx
    mov    -0x24(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    cmpl   $0x0,(%eax)
    jne    jump_5b7f7
  jump_5b812:
    mov    -0x4(%ebp),%eax
    mov    -0x24(%ebp),%edx
    cmp    0x8(%edx),%eax
    jne    jump_5b829
    movl   $0xffffffff,-0x14(%ebp)
    jmp    jump_5b8ec
  jump_5b829:
    mov    -0x4(%ebp),%edx
    shl    $0x2,%edx
    mov    -0x24(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    movl   $0x1,(%eax)
    imul   $0x14,-0x4(%ebp),%edx
    mov    -0x24(%ebp),%eax
    mov    (%eax),%eax
    add    %edx,%eax
    mov    %eax,-0xc(%ebp)
    mov    -0x20(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    %eax,(%edx)
    mov    -0x1c(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    %eax,0x4(%edx)
    mov    -0x18(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    %eax,0x8(%edx)
    mov    0x10(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    %eax,0xc(%edx)
    mov    0x14(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    %eax,0x10(%edx)
    movl   $0x0,-0x8(%ebp)
    mov    -0x24(%ebp),%eax
    mov    (%eax),%eax
    mov    %eax,-0x10(%ebp)
  jump_5b886:
    mov    -0x8(%ebp),%eax
    mov    -0x24(%ebp),%edx
    cmp    0x8(%edx),%eax
    jb     jump_5b8a2
    jmp    jump_5b8e6
  jump_5b893:
    mov    -0x8(%ebp),%eax
    incl   -0x8(%ebp)
    mov    -0x10(%ebp),%eax
    addl   $0x14,-0x10(%ebp)
    jmp    jump_5b886
  jump_5b8a2:
    mov    -0x8(%ebp),%edx
    shl    $0x2,%edx
    mov    -0x24(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    cmpl   $0x0,(%eax)
    je     jump_5b8bd
    mov    -0xc(%ebp),%eax
    cmp    -0x10(%ebp),%eax
    jne    jump_5b8bf
  jump_5b8bd:
    jmp    jump_5b893
  jump_5b8bf:
    mov    -0x10(%ebp),%edx
    mov    -0xc(%ebp),%eax
    call   func_5b50c
    test   %eax,%eax
    je     jump_5b8e4
    mov    -0x4(%ebp),%edx
    shl    $0x2,%edx
    mov    -0x24(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    movl   $0x2,(%eax)
    jmp    jump_5b8e6
  jump_5b8e4:
    jmp    jump_5b893
  jump_5b8e6:
    mov    -0x4(%ebp),%eax
    mov    %eax,-0x14(%ebp)
  jump_5b8ec:
    mov    -0x14(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_5ba38:
/*----------------------------------------------------------------*/
    push   $0x3c
    call   func_78cfa
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    mov    %eax,-0xc(%ebp)
    movl   $0x0,-0x4(%ebp)
  jump_5ba5a:
    mov    -0x4(%ebp),%eax
    mov    -0xc(%ebp),%edx
    cmp    0x8(%edx),%eax
    jb     jump_5ba6f
    jmp    jump_5bab7
  jump_5ba67:
    mov    -0x4(%ebp),%eax
    incl   -0x4(%ebp)
    jmp    jump_5ba5a
  jump_5ba6f:
    mov    -0x4(%ebp),%edx
    shl    $0x2,%edx
    mov    -0xc(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    cmpl   $0x1,(%eax)
    jne    jump_5bab5
    imul   $0x14,-0x4(%ebp),%edx
    mov    -0xc(%ebp),%eax
    mov    (%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x8(%ebp)
    mov    -0x8(%ebp),%eax
    push   0x10(%eax)
    mov    -0x8(%ebp),%eax
    push   0xc(%eax)
    mov    -0x8(%ebp),%eax
    push   0x8(%eax)
    mov    -0x8(%ebp),%eax
    push   0x4(%eax)
    mov    -0x8(%ebp),%eax
    push   %eax
    call   *data_96c00
    add    $0x14,%esp
  jump_5bab5:
    jmp    jump_5ba67
  jump_5bab7:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5be08:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    call   *(%esi)
    mov    $data_96c08,%edi
  jump_5be1c:
    mov    (%eax),%bl
    mov    %bl,(%edi)
    inc    %edi
    inc    %eax
    or     %bl,%bl
    jne    jump_5be1c
    mov    $data_96c08,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5be31:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    $data_96bd4,%edi
    mov    $0xd,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5be50:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffe0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x18(%ebp)
    jle    jump_5becf
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5becf
    mov    0x4(%esi),%eax
    mov    %eax,-0x1c(%ebp)
    cmp    $0x0,%eax
    jg     jump_5be83
    mov    $0x0,%eax
  jump_5be83:
    mov    %eax,-0x4(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x20(%ebp)
    cmp    $0x0,%eax
    jg     jump_5be96
    mov    $0x0,%eax
  jump_5be96:
    mov    %eax,-0x8(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x18(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5bea6
    mov    %edx,%eax
  jump_5bea6:
    mov    %eax,-0xc(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5beb5
    mov    %edx,%eax
  jump_5beb5:
    mov    %eax,-0x10(%ebp)
    mov    -0xc(%ebp),%eax
    cmp    -0x4(%ebp),%eax
    jl     jump_5beda
    mov    -0x10(%ebp),%eax
    cmp    -0x8(%ebp),%eax
    jl     jump_5beda
    mov    (%ebx),%eax
    mov    %eax,-0x14(%ebp)
    jmp    jump_5bee5
  jump_5becf:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5beda:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5bee5:
    mov    0xc(%ebp),%ecx
    mov    0x10(%ebp),%ebx
    add    -0x1c(%ebp),%ecx
    add    -0x20(%ebp),%ebx
    cmp    -0x4(%ebp),%ecx
    jl     jump_5bf20
    cmp    -0xc(%ebp),%ecx
    jg     jump_5bf20
    cmp    -0x8(%ebp),%ebx
    jl     jump_5bf20
    cmp    -0x10(%ebp),%ebx
    jg     jump_5bf20
    mov    %ebx,%eax
    imull  -0x18(%ebp)
    add    -0x14(%ebp),%eax
    add    %ecx,%eax
    mov    %eax,%ebx
    xor    %eax,%eax
    mov    (%ebx),%al
    mov    0x14(%ebp),%dl
    mov    %dl,(%ebx)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5bf20:
    mov    $0xfffffffd,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5bf2b:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffe0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x18(%ebp)
    jle    jump_5bfaa
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5bfaa
    mov    0x4(%esi),%eax
    mov    %eax,-0x1c(%ebp)
    cmp    $0x0,%eax
    jg     jump_5bf5e
    mov    $0x0,%eax
  jump_5bf5e:
    mov    %eax,-0x4(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x20(%ebp)
    cmp    $0x0,%eax
    jg     jump_5bf71
    mov    $0x0,%eax
  jump_5bf71:
    mov    %eax,-0x8(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x18(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5bf81
    mov    %edx,%eax
  jump_5bf81:
    mov    %eax,-0xc(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5bf90
    mov    %edx,%eax
  jump_5bf90:
    mov    %eax,-0x10(%ebp)
    mov    -0xc(%ebp),%eax
    cmp    -0x4(%ebp),%eax
    jl     jump_5bfb5
    mov    -0x10(%ebp),%eax
    cmp    -0x8(%ebp),%eax
    jl     jump_5bfb5
    mov    (%ebx),%eax
    mov    %eax,-0x14(%ebp)
    jmp    jump_5bfc0
  jump_5bfaa:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5bfb5:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5bfc0:
    mov    0xc(%ebp),%ecx
    mov    0x10(%ebp),%ebx
    add    -0x1c(%ebp),%ecx
    add    -0x20(%ebp),%ebx
    cmp    -0x4(%ebp),%ecx
    jl     jump_5bff6
    cmp    -0xc(%ebp),%ecx
    jg     jump_5bff6
    cmp    -0x8(%ebp),%ebx
    jl     jump_5bff6
    cmp    -0x10(%ebp),%ebx
    jg     jump_5bff6
    mov    %ebx,%eax
    imull  -0x18(%ebp)
    add    -0x14(%ebp),%eax
    add    %ecx,%eax
    mov    %eax,%ebx
    xor    %eax,%eax
    mov    (%ebx),%al
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5bff6:
    mov    $0xfffffffd,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5c001:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffa8,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x50(%ebp)
    jle    jump_5c080
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5c080
    mov    0x4(%esi),%eax
    mov    %eax,-0x54(%ebp)
    cmp    $0x0,%eax
    jg     jump_5c034
    mov    $0x0,%eax
  jump_5c034:
    mov    %eax,-0x3c(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x58(%ebp)
    cmp    $0x0,%eax
    jg     jump_5c047
    mov    $0x0,%eax
  jump_5c047:
    mov    %eax,-0x40(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x50(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5c057
    mov    %edx,%eax
  jump_5c057:
    mov    %eax,-0x44(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5c066
    mov    %edx,%eax
  jump_5c066:
    mov    %eax,-0x48(%ebp)
    mov    -0x44(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jl     jump_5c08b
    mov    -0x48(%ebp),%eax
    cmp    -0x40(%ebp),%eax
    jl     jump_5c08b
    mov    (%ebx),%eax
    mov    %eax,-0x4c(%ebp)
    jmp    jump_5c096
  jump_5c080:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5c08b:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5c096:
    mov    -0x54(%ebp),%eax
    add    %eax,0xc(%ebp)
    add    %eax,0x14(%ebp)
    mov    -0x58(%ebp),%eax
    add    %eax,0x10(%ebp)
    add    %eax,0x18(%ebp)
    mov    0x14(%ebp),%eax
    sub    0xc(%ebp),%eax
    mov    %eax,-0x4(%ebp)
    cltd
    mov    %edx,-0xc(%ebp)
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,-0x8(%ebp)
    mov    0x18(%ebp),%eax
    sub    0x10(%ebp),%eax
    mov    %eax,-0x10(%ebp)
    cltd
    mov    %edx,-0x18(%ebp)
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,-0x14(%ebp)
    mov    0xc(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    mov    0x14(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    mov    0x10(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    mov    0x18(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    cmpl   $0x0,-0x4(%ebp)
    je     jump_5c817
    cmpl   $0x0,-0x10(%ebp)
    je     jump_5c8a2
    mov    -0xc(%ebp),%eax
    xor    -0x18(%ebp),%eax
    mov    %eax,-0x1c(%ebp)
    mov    -0x8(%ebp),%edx
    mov    -0x14(%ebp),%ebx
    mov    $0xffffffff,%eax
    cmp    %ebx,%edx
    je     jump_5c11c
    jl     jump_5c118
    xchg   %edx,%ebx
  jump_5c118:
    xor    %eax,%eax
    div    %ebx
  jump_5c11c:
    mov    %eax,-0x20(%ebp)
    movl   $0x0,-0x34(%ebp)
  jump_5c126:
    xor    %edx,%edx
    mov    -0x24(%ebp),%eax
    sub    -0x3c(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x44(%ebp),%eax
    sub    -0x24(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x28(%ebp),%eax
    sub    -0x40(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x48(%ebp),%eax
    sub    -0x28(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x2c(%ebp),%eax
    sub    -0x3c(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x44(%ebp),%eax
    sub    -0x2c(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x30(%ebp),%eax
    sub    -0x40(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x48(%ebp),%eax
    sub    -0x30(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    or     %edx,-0x34(%ebp)
    or     %edx,%edx
    je     jump_5c4e5
    test   %dl,%dh
    jne    jump_5c9f8
    mov    -0x8(%ebp),%ebx
    cmp    -0x14(%ebp),%ebx
    jl     jump_5c1e0
    test   $0x8,%dl
    jne    jump_5c229
    test   $0x4,%dl
    jne    jump_5c27d
    test   $0x2,%dl
    jne    jump_5c301
    test   $0x1,%dl
    jne    jump_5c359
    test   $0x8,%dh
    jne    jump_5c389
    test   $0x4,%dh
    jne    jump_5c3e4
    test   $0x2,%dh
    jne    jump_5c463
    test   $0x1,%dh
    jne    jump_5c4ba
    jmp    jump_5c126
  jump_5c1e0:
    test   $0x8,%dl
    jne    jump_5c251
    test   $0x4,%dl
    jne    jump_5c2a9
    test   $0x2,%dl
    jne    jump_5c2d9
    test   $0x1,%dl
    jne    jump_5c32d
    test   $0x8,%dh
    jne    jump_5c3b5
    test   $0x4,%dh
    jne    jump_5c40c
    test   $0x2,%dh
    jne    jump_5c437
    test   $0x1,%dh
    jne    jump_5c492
    jmp    jump_5c126
  jump_5c229:
    mov    -0x3c(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    sub    0xc(%ebp),%eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    jmp    jump_5c126
  jump_5c251:
    mov    -0x3c(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    sub    0xc(%ebp),%eax
    mov    %eax,%edx
    dec    %edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0xffffffff,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    jmp    jump_5c126
  jump_5c27d:
    mov    -0x44(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    sub    0xc(%ebp),%eax
    neg    %eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    jmp    jump_5c126
  jump_5c2a9:
    mov    -0x44(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    sub    0xc(%ebp),%eax
    neg    %eax
    mov    %eax,%edx
    dec    %edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0xffffffff,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    jmp    jump_5c126
  jump_5c2d9:
    mov    -0x40(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    0x10(%ebp),%eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    jmp    jump_5c126
  jump_5c301:
    mov    -0x40(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    0x10(%ebp),%eax
    mov    %eax,%edx
    dec    %edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0xffffffff,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    jmp    jump_5c126
  jump_5c32d:
    mov    -0x48(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    0x10(%ebp),%eax
    neg    %eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    jmp    jump_5c126
  jump_5c359:
    mov    -0x48(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    0x10(%ebp),%eax
    neg    %eax
    mov    %eax,%edx
    dec    %edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0xffffffff,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    jmp    jump_5c126
  jump_5c389:
    mov    -0x3c(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    sub    0xc(%ebp),%eax
    neg    %eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    jmp    jump_5c126
  jump_5c3b5:
    mov    -0x3c(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    sub    0xc(%ebp),%eax
    neg    %eax
    mov    %eax,%edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0x0,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    jmp    jump_5c126
  jump_5c3e4:
    mov    -0x44(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    sub    0xc(%ebp),%eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    jmp    jump_5c126
  jump_5c40c:
    mov    -0x44(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    sub    0xc(%ebp),%eax
    mov    %eax,%edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0x0,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    jmp    jump_5c126
  jump_5c437:
    mov    -0x40(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    sub    0x10(%ebp),%eax
    neg    %eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    jmp    jump_5c126
  jump_5c463:
    mov    -0x40(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    sub    0x10(%ebp),%eax
    neg    %eax
    mov    %eax,%edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0x0,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    jmp    jump_5c126
  jump_5c492:
    mov    -0x48(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    sub    0x10(%ebp),%eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    jmp    jump_5c126
  jump_5c4ba:
    mov    -0x48(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    sub    0x10(%ebp),%eax
    mov    %eax,%edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0x0,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    jmp    jump_5c126
  jump_5c4e5:
    mov    -0x28(%ebp),%eax
    imull  -0x50(%ebp)
    add    -0x4c(%ebp),%eax
    add    -0x24(%ebp),%eax
    mov    %eax,%edi
    mov    -0x50(%ebp),%esi
    xor    -0x18(%ebp),%esi
    sub    -0x18(%ebp),%esi
    mov    -0x20(%ebp),%ebx
    mov    -0x8(%ebp),%eax
    cmp    -0x14(%ebp),%eax
    je     jump_5c928
    jg     jump_5c679
    mov    -0x30(%ebp),%eax
    sub    -0x28(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    inc    %eax
    mov    %eax,%ecx
    mov    -0x28(%ebp),%eax
    sub    0x10(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mul    %ebx
    add    $0x80000000,%eax
    mov    %eax,%edx
    cmpl   $0xffffffff,-0xc(%ebp)
    je     jump_5c5da
    cmpl   $0x1,0x1c(%ebp)
    je     jump_5c571
    jg     jump_5c5af
    mov    0x20(%ebp),%eax
  jump_5c548:
    mov    %al,(%edi)
    add    %ebx,%edx
    adc    %esi,%edi
    dec    %ecx
    je     jump_5c56c
    mov    %al,(%edi)
    add    %ebx,%edx
    adc    %esi,%edi
    dec    %ecx
    je     jump_5c56c
    mov    %al,(%edi)
    add    %ebx,%edx
    adc    %esi,%edi
    dec    %ecx
    je     jump_5c56c
    mov    %al,(%edi)
    add    %ebx,%edx
    adc    %esi,%edi
    dec    %ecx
    jne    jump_5c548
  jump_5c56c:
    jmp    jump_5c9e9
  jump_5c571:
    mov    0x20(%ebp),%eax
    push   %ebp
    mov    %ebx,%ebp
    mov    %eax,%ebx
  jump_5c579:
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    adc    %esi,%edi
    dec    %ecx
    je     jump_5c5a9
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    adc    %esi,%edi
    dec    %ecx
    je     jump_5c5a9
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    adc    %esi,%edi
    dec    %ecx
    je     jump_5c5a9
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    adc    %esi,%edi
    dec    %ecx
    jne    jump_5c579
  jump_5c5a9:
    pop    %ebp
    jmp    jump_5c9e9
  jump_5c5af:
    mov    0x8(%ebp),%esi
    mov    -0x24(%ebp),%edi
    sub    0x4(%esi),%edi
    mov    -0x28(%ebp),%eax
    sub    0x8(%esi),%eax
    mov    %eax,%esi
    mov    -0x18(%ebp),%eax
    add    %eax,%eax
    inc    %eax
  jump_5c5c6:
    pusha
    call   *0x20(%ebp)
    popa
    add    %ebx,%edx
    jae    jump_5c5d0
    inc    %edi
  jump_5c5d0:
    add    %eax,%esi
    dec    %ecx
    jne    jump_5c5c6
    jmp    jump_5c9e9
  jump_5c5da:
    neg    %esi
    cmpl   $0x1,0x1c(%ebp)
    je     jump_5c610
    jg     jump_5c64e
    mov    0x20(%ebp),%eax
  jump_5c5e7:
    mov    %al,(%edi)
    add    %ebx,%edx
    sbb    %esi,%edi
    dec    %ecx
    je     jump_5c60b
    mov    %al,(%edi)
    add    %ebx,%edx
    sbb    %esi,%edi
    dec    %ecx
    je     jump_5c60b
    mov    %al,(%edi)
    add    %ebx,%edx
    sbb    %esi,%edi
    dec    %ecx
    je     jump_5c60b
    mov    %al,(%edi)
    add    %ebx,%edx
    sbb    %esi,%edi
    dec    %ecx
    jne    jump_5c5e7
  jump_5c60b:
    jmp    jump_5c9e9
  jump_5c610:
    mov    0x20(%ebp),%eax
    push   %ebp
    mov    %ebx,%ebp
    mov    %eax,%ebx
  jump_5c618:
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    sbb    %esi,%edi
    dec    %ecx
    je     jump_5c648
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    sbb    %esi,%edi
    dec    %ecx
    je     jump_5c648
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    sbb    %esi,%edi
    dec    %ecx
    je     jump_5c648
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    sbb    %esi,%edi
    dec    %ecx
    jne    jump_5c618
  jump_5c648:
    pop    %ebp
    jmp    jump_5c9e9
  jump_5c64e:
    mov    0x8(%ebp),%esi
    mov    -0x24(%ebp),%edi
    sub    0x4(%esi),%edi
    mov    -0x28(%ebp),%eax
    sub    0x8(%esi),%eax
    mov    %eax,%esi
    mov    -0x18(%ebp),%eax
    add    %eax,%eax
    inc    %eax
  jump_5c665:
    pusha
    call   *0x20(%ebp)
    popa
    add    %ebx,%edx
    jae    jump_5c66f
    dec    %edi
  jump_5c66f:
    add    %eax,%esi
    dec    %ecx
    jne    jump_5c665
    jmp    jump_5c9e9
  jump_5c679:
    mov    -0x2c(%ebp),%eax
    sub    -0x24(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    inc    %eax
    mov    %eax,%ecx
    mov    -0x24(%ebp),%eax
    sub    0xc(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mul    %ebx
    add    $0x80000000,%eax
    mov    %eax,%edx
    cmpl   $0xffffffff,-0xc(%ebp)
    je     jump_5c75e
    cmpl   $0x1,0x1c(%ebp)
    je     jump_5c6e9
    jg     jump_5c733
    mov    0x20(%ebp),%eax
  jump_5c6b4:
    mov    %al,(%edi)
    inc    %edi
    add    %ebx,%edx
    jae    jump_5c6bd
    add    %esi,%edi
  jump_5c6bd:
    dec    %ecx
    je     jump_5c6e4
    mov    %al,(%edi)
    inc    %edi
    add    %ebx,%edx
    jae    jump_5c6c9
    add    %esi,%edi
  jump_5c6c9:
    dec    %ecx
    je     jump_5c6e4
    mov    %al,(%edi)
    inc    %edi
    add    %ebx,%edx
    jae    jump_5c6d5
    add    %esi,%edi
  jump_5c6d5:
    dec    %ecx
    je     jump_5c6e4
    mov    %al,(%edi)
    inc    %edi
    add    %ebx,%edx
    jae    jump_5c6e1
    add    %esi,%edi
  jump_5c6e1:
    dec    %ecx
    jne    jump_5c6b4
  jump_5c6e4:
    jmp    jump_5c9e9
  jump_5c6e9:
    mov    0x20(%ebp),%eax
    push   %ebp
    mov    %ebx,%ebp
    mov    %eax,%ebx
  jump_5c6f1:
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    inc    %edi
    add    %ebp,%edx
    jae    jump_5c6fd
    add    %esi,%edi
  jump_5c6fd:
    dec    %ecx
    je     jump_5c72d
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    inc    %edi
    add    %ebp,%edx
    jae    jump_5c70c
    add    %esi,%edi
  jump_5c70c:
    dec    %ecx
    je     jump_5c72d
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    inc    %edi
    add    %ebp,%edx
    jae    jump_5c71b
    add    %esi,%edi
  jump_5c71b:
    dec    %ecx
    je     jump_5c72d
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    inc    %edi
    add    %ebp,%edx
    jae    jump_5c72a
    add    %esi,%edi
  jump_5c72a:
    dec    %ecx
    jne    jump_5c6f1
  jump_5c72d:
    pop    %ebp
    jmp    jump_5c9e9
  jump_5c733:
    mov    0x8(%ebp),%esi
    mov    -0x24(%ebp),%edi
    sub    0x4(%esi),%edi
    mov    -0x28(%ebp),%eax
    sub    0x8(%esi),%eax
    mov    %eax,%esi
    mov    -0x18(%ebp),%eax
    add    %eax,%eax
    inc    %eax
  jump_5c74a:
    pusha
    call   *0x20(%ebp)
    popa
    add    %ebx,%edx
    jae    jump_5c754
    inc    %esi
  jump_5c754:
    add    %eax,%edi
    dec    %ecx
    jne    jump_5c74a
    jmp    jump_5c9e9
  jump_5c75e:
    cmpl   $0x1,0x1c(%ebp)
    je     jump_5c7a2
    jg     jump_5c7ec
    mov    0x20(%ebp),%eax
  jump_5c76d:
    mov    %al,(%edi)
    dec    %edi
    add    %ebx,%edx
    jae    jump_5c776
    add    %esi,%edi
  jump_5c776:
    dec    %ecx
    je     jump_5c79d
    mov    %al,(%edi)
    dec    %edi
    add    %ebx,%edx
    jae    jump_5c782
    add    %esi,%edi
  jump_5c782:
    dec    %ecx
    je     jump_5c79d
    mov    %al,(%edi)
    dec    %edi
    add    %ebx,%edx
    jae    jump_5c78e
    add    %esi,%edi
  jump_5c78e:
    dec    %ecx
    je     jump_5c79d
    mov    %al,(%edi)
    dec    %edi
    add    %ebx,%edx
    jae    jump_5c79a
    add    %esi,%edi
  jump_5c79a:
    dec    %ecx
    jne    jump_5c76d
  jump_5c79d:
    jmp    jump_5c9e9
  jump_5c7a2:
    mov    0x20(%ebp),%eax
    push   %ebp
    mov    %ebx,%ebp
    mov    %eax,%ebx
  jump_5c7aa:
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    dec    %edi
    add    %ebp,%edx
    jae    jump_5c7b6
    add    %esi,%edi
  jump_5c7b6:
    dec    %ecx
    je     jump_5c7e6
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    dec    %edi
    add    %ebp,%edx
    jae    jump_5c7c5
    add    %esi,%edi
  jump_5c7c5:
    dec    %ecx
    je     jump_5c7e6
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    dec    %edi
    add    %ebp,%edx
    jae    jump_5c7d4
    add    %esi,%edi
  jump_5c7d4:
    dec    %ecx
    je     jump_5c7e6
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    dec    %edi
    add    %ebp,%edx
    jae    jump_5c7e3
    add    %esi,%edi
  jump_5c7e3:
    dec    %ecx
    jne    jump_5c7aa
  jump_5c7e6:
    pop    %ebp
    jmp    jump_5c9e9
  jump_5c7ec:
    mov    0x8(%ebp),%esi
    mov    -0x24(%ebp),%edi
    sub    0x4(%esi),%edi
    mov    -0x28(%ebp),%eax
    sub    0x8(%esi),%eax
    mov    %eax,%esi
    mov    -0x18(%ebp),%eax
    add    %eax,%eax
    inc    %eax
  jump_5c803:
    pusha
    call   *0x20(%ebp)
    popa
    add    %ebx,%edx
    jae    jump_5c80d
    dec    %esi
  jump_5c80d:
    add    %eax,%edi
    dec    %ecx
    jne    jump_5c803
    jmp    jump_5c9e9
  jump_5c817:
    mov    0xc(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jl     jump_5c9f8
    cmp    -0x44(%ebp),%eax
    jg     jump_5c9f8
    mov    0x10(%ebp),%eax
    cmp    0x18(%ebp),%eax
    jg     jump_5c837
    mov    0x18(%ebp),%eax
  jump_5c837:
    cmp    -0x40(%ebp),%eax
    jl     jump_5c9f8
    mov    0x10(%ebp),%eax
    cmp    0x18(%ebp),%eax
    jl     jump_5c84b
    mov    0x18(%ebp),%eax
  jump_5c84b:
    cmp    -0x48(%ebp),%eax
    jg     jump_5c9f8
    mov    0x10(%ebp),%eax
    cmp    -0x40(%ebp),%eax
    jg     jump_5c85f
    mov    -0x40(%ebp),%eax
  jump_5c85f:
    cmp    -0x48(%ebp),%eax
    jl     jump_5c867
    mov    -0x48(%ebp),%eax
  jump_5c867:
    mov    %eax,-0x28(%ebp)
    mov    0x18(%ebp),%eax
    cmp    -0x40(%ebp),%eax
    jg     jump_5c875
    mov    -0x40(%ebp),%eax
  jump_5c875:
    cmp    -0x48(%ebp),%eax
    jl     jump_5c87d
    mov    -0x48(%ebp),%eax
  jump_5c87d:
    mov    %eax,-0x30(%ebp)
    mov    0xc(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    mov    -0x50(%ebp),%esi
    xor    -0x18(%ebp),%esi
    sub    -0x18(%ebp),%esi
    mov    -0x30(%ebp),%eax
    sub    -0x28(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,%ecx
    inc    %ecx
    jmp    jump_5c948
  jump_5c8a2:
    mov    0x10(%ebp),%eax
    cmp    -0x40(%ebp),%eax
    jl     jump_5c9f8
    cmp    -0x48(%ebp),%eax
    jg     jump_5c9f8
    mov    0xc(%ebp),%eax
    cmp    0x14(%ebp),%eax
    jg     jump_5c8c2
    mov    0x14(%ebp),%eax
  jump_5c8c2:
    cmp    -0x3c(%ebp),%eax
    jl     jump_5c9f8
    mov    0xc(%ebp),%eax
    cmp    0x14(%ebp),%eax
    jl     jump_5c8d6
    mov    0x14(%ebp),%eax
  jump_5c8d6:
    cmp    -0x44(%ebp),%eax
    jg     jump_5c9f8
    mov    0xc(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jg     jump_5c8ea
    mov    -0x3c(%ebp),%eax
  jump_5c8ea:
    cmp    -0x44(%ebp),%eax
    jl     jump_5c8f2
    mov    -0x44(%ebp),%eax
  jump_5c8f2:
    mov    %eax,-0x24(%ebp)
    mov    0x14(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jg     jump_5c900
    mov    -0x3c(%ebp),%eax
  jump_5c900:
    cmp    -0x44(%ebp),%eax
    jl     jump_5c908
    mov    -0x44(%ebp),%eax
  jump_5c908:
    mov    %eax,-0x2c(%ebp)
    mov    0x10(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    mov    -0xc(%ebp),%esi
    inc    %esi
    or     -0xc(%ebp),%esi
    mov    -0x2c(%ebp),%eax
    sub    -0x24(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,%ecx
    inc    %ecx
    jmp    jump_5c948
  jump_5c928:
    mov    -0x50(%ebp),%esi
    xor    -0x18(%ebp),%esi
    sub    -0x18(%ebp),%esi
    mov    -0xc(%ebp),%eax
    inc    %eax
    or     -0xc(%ebp),%eax
    add    %eax,%esi
    mov    -0x2c(%ebp),%eax
    sub    -0x24(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,%ecx
    inc    %ecx
  jump_5c948:
    mov    -0x28(%ebp),%eax
    imull  -0x50(%ebp)
    add    -0x4c(%ebp),%eax
    add    -0x24(%ebp),%eax
    mov    %eax,%edi
    cmpl   $0x1,0x1c(%ebp)
    je     jump_5c97f
    jg     jump_5c9ac
    mov    0x20(%ebp),%eax
  jump_5c961:
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    je     jump_5c97d
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    je     jump_5c97d
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    je     jump_5c97d
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    jne    jump_5c961
  jump_5c97d:
    jmp    jump_5c9e9
  jump_5c97f:
    mov    0x20(%ebp),%ebx
  jump_5c982:
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    je     jump_5c9aa
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    je     jump_5c9aa
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    je     jump_5c9aa
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    jne    jump_5c982
  jump_5c9aa:
    jmp    jump_5c9e9
  jump_5c9ac:
    mov    0x8(%ebp),%esi
    mov    -0x24(%ebp),%edi
    sub    0x4(%esi),%edi
    mov    -0x28(%ebp),%eax
    sub    0x8(%esi),%eax
    mov    %eax,%esi
    xor    %eax,%eax
    testl  $0xffffffff,-0x10(%ebp)
    setne  %al
    or     -0x18(%ebp),%eax
    xor    %ebx,%ebx
    testl  $0xffffffff,-0x4(%ebp)
    setne  %bl
    or     -0xc(%ebp),%ebx
  jump_5c9db:
    pusha
    call   *0x20(%ebp)
    popa
    add    %eax,%esi
    add    %ebx,%edi
    dec    %ecx
    jne    jump_5c9db
    jmp    jump_5c9e9
  jump_5c9e9:
    xor    %eax,%eax
    cmpl   $0x1,-0x34(%ebp)
    setae  %al
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5c9f8:
    mov    $0x2,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5cb3c:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffb0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x48(%ebp)
    jle    jump_5cbbb
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5cbbb
    mov    0x4(%esi),%eax
    mov    %eax,-0x4c(%ebp)
    cmp    $0x0,%eax
    jg     jump_5cb6f
    mov    $0x0,%eax
  jump_5cb6f:
    mov    %eax,-0x34(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x50(%ebp)
    cmp    $0x0,%eax
    jg     jump_5cb82
    mov    $0x0,%eax
  jump_5cb82:
    mov    %eax,-0x38(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x48(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5cb92
    mov    %edx,%eax
  jump_5cb92:
    mov    %eax,-0x3c(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5cba1
    mov    %edx,%eax
  jump_5cba1:
    mov    %eax,-0x40(%ebp)
    mov    -0x3c(%ebp),%eax
    cmp    -0x34(%ebp),%eax
    jl     jump_5cbc6
    mov    -0x40(%ebp),%eax
    cmp    -0x38(%ebp),%eax
    jl     jump_5cbc6
    mov    (%ebx),%eax
    mov    %eax,-0x44(%ebp)
    jmp    jump_5cbd1
  jump_5cbbb:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5cbc6:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5cbd1:
    mov    -0x4c(%ebp),%eax
    add    %eax,0x14(%ebp)
    mov    -0x50(%ebp),%eax
    add    %eax,0x18(%ebp)
    mov    0x10(%ebp),%esi
    shl    $0x3,%esi
    add    $0x8,%esi
    add    0xc(%ebp),%esi
    mov    (%esi),%esi
    add    0xc(%ebp),%esi
    mov    %esi,-0x30(%ebp)
    mov    0x8(%esi),%eax
    add    0x14(%ebp),%eax
    mov    %eax,-0xc(%ebp)
    mov    0xc(%esi),%eax
    add    0x18(%ebp),%eax
    mov    %eax,-0x10(%ebp)
    mov    0x10(%esi),%eax
    add    0x14(%ebp),%eax
    mov    %eax,-0x14(%ebp)
    mov    0x14(%esi),%eax
    add    0x18(%ebp),%eax
    mov    %eax,-0x18(%ebp)
    add    $0x18,%esi
    mov    -0x14(%ebp),%eax
    cmp    -0xc(%ebp),%eax
    jl     jump_5cf35
    mov    -0x18(%ebp),%eax
    cmp    -0x10(%ebp),%eax
    jl     jump_5cf35
    xor    %edx,%edx
    mov    -0xc(%ebp),%eax
    sub    -0x34(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x3c(%ebp),%eax
    sub    -0xc(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x10(%ebp),%eax
    sub    -0x38(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x40(%ebp),%eax
    sub    -0x10(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x14(%ebp),%eax
    sub    -0x34(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x3c(%ebp),%eax
    sub    -0x14(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x18(%ebp),%eax
    sub    -0x38(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x40(%ebp),%eax
    sub    -0x18(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    %edx,-0x1c(%ebp)
    test   %dl,%dh
    jne    jump_5cf2a
    or     %dh,%dl
    jne    jump_5ccbc
    mov    0x8(%ebp),%esi
    mov    0x4(%esi),%eax
    sub    %eax,0x14(%ebp)
    mov    0x8(%esi),%eax
    sub    %eax,0x18(%ebp)
    push   -0x48(%ebp)
    push   0x18(%ebp)
    push   0x14(%ebp)
    push   -0x30(%ebp)
    push   0x8(%ebp)
    call   func_5cf40
    add    $0x14,%esp
    jmp    jump_5cf22
  jump_5ccbc:
    mov    -0x10(%ebp),%eax
    imull  -0x48(%ebp)
    add    -0x44(%ebp),%eax
    add    -0xc(%ebp),%eax
    mov    %eax,%edi
    mov    -0x10(%ebp),%ecx
    mov    %ecx,-0x20(%ebp)
    jmp    jump_5cce8
  jump_5ccd2:
    movzbl %al,%eax
    add    %eax,%esi
    dec    %esi
  jump_5ccd8:
    inc    %esi
  jump_5ccd9:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5ccd8
    jne    jump_5ccd2
    jb     jump_5ccd8
    add    -0x48(%ebp),%edi
    inc    %ecx
  jump_5cce8:
    cmp    -0x38(%ebp),%ecx
    jl     jump_5ccd9
    mov    %edi,-0x24(%ebp)
    mov    %ecx,-0x20(%ebp)
    mov    %edi,%eax
    sub    -0xc(%ebp),%eax
    add    -0x34(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    mov    %edi,%eax
    sub    -0xc(%ebp),%eax
    add    -0x3c(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    jmp    jump_5cf16
  jump_5cd0e:
    mov    -0x20(%ebp),%eax
    cmp    -0x40(%ebp),%eax
    jg     jump_5cf22
    mov    -0x24(%ebp),%edi
    testl  $0x8,-0x1c(%ebp)
    jne    jump_5cd9b
    testl  $0x400,-0x1c(%ebp)
    jne    jump_5ce25
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cd53
    jne    jump_5cd7c
    jae    jump_5cd96
  jump_5cd3e:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cd53
    jne    jump_5cd7c
    jb     jump_5cd3e
    jae    jump_5cd96
  jump_5cd53:
    movzbl %al,%ecx
  jump_5cd56:
    mov    (%esi),%al
    inc    %esi
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %al,%ah
    rol    $0x8,%eax
    mov    %ah,%al
    rol    $0x8,%eax
    mov    %ah,%al
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cd53
    jae    jump_5cd96
    je     jump_5cd3e
  jump_5cd7c:
    movzbl %al,%ecx
  jump_5cd7f:
    push   %ecx
    and    $0x3,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    pop    %ecx
    shr    $0x2,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cd53
    jne    jump_5cd7c
    jb     jump_5cd3e
  jump_5cd96:
    jmp    jump_5cf07
  jump_5cd9b:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cdbb
    jne    jump_5cdec
    jae    jump_5ce20
  jump_5cda6:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cdbb
    jne    jump_5cdec
    jb     jump_5cda6
    jae    jump_5ce20
  jump_5cdbb:
    movzbl %al,%ecx
    mov    -0x28(%ebp),%eax
    sub    %edi,%eax
    cmp    %ecx,%eax
    jge    jump_5cdde
    or     %eax,%eax
    js     jump_5cdcf
    add    %eax,%edi
    sub    %eax,%ecx
  jump_5cdcf:
    testl  $0x400,-0x1c(%ebp)
    je     jump_5cd56
    jne    jump_5ce4c
  jump_5cdde:
    add    %ecx,%edi
    inc    %esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cdbb
    jae    jump_5ce20
    je     jump_5cda6
  jump_5cdec:
    movzbl %al,%ecx
    mov    -0x28(%ebp),%eax
    sub    %edi,%eax
    cmp    %ecx,%eax
    jge    jump_5ce11
    or     %eax,%eax
    js     jump_5ce02
    add    %eax,%edi
    sub    %eax,%ecx
    add    %eax,%esi
  jump_5ce02:
    testl  $0x400,-0x1c(%ebp)
    je     jump_5cd7f
    jne    jump_5ce8f
  jump_5ce11:
    add    %ecx,%edi
    add    %ecx,%esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cdbb
    jne    jump_5cdec
    jb     jump_5cda6
  jump_5ce20:
    jmp    jump_5cf07
  jump_5ce25:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5ce49
    jne    jump_5ce8c
    jae    jump_5cec2
  jump_5ce34:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5ce49
    jne    jump_5ce8c
    jb     jump_5ce34
    jae    jump_5cec2
  jump_5ce49:
    movzbl %al,%ecx
  jump_5ce4c:
    cmp    -0x2c(%ebp),%edi
    jg     jump_5cee7
    mov    %edi,%eax
    add    %ecx,%eax
    dec    %eax
    sub    -0x2c(%ebp),%eax
    cltd
    not    %edx
    and    %eax,%edx
    sub    %edx,%ecx
    mov    (%esi),%al
    inc    %esi
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %al,%ah
    rol    $0x8,%eax
    mov    %ah,%al
    rol    $0x8,%eax
    mov    %ah,%al
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    add    %edx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5ce49
    jae    jump_5cec2
    je     jump_5ce34
  jump_5ce8c:
    movzbl %al,%ecx
  jump_5ce8f:
    cmp    -0x2c(%ebp),%edi
    jg     jump_5cef8
    mov    %edi,%eax
    add    %ecx,%eax
    dec    %eax
    sub    -0x2c(%ebp),%eax
    cltd
    not    %edx
    and    %eax,%edx
    sub    %edx,%ecx
    push   %ecx
    and    $0x3,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    pop    %ecx
    shr    $0x2,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    add    %edx,%edi
    add    %edx,%esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5ce49
    jne    jump_5ce8c
    jb     jump_5ce34
  jump_5cec2:
    jmp    jump_5cf07
  jump_5cecf:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cee4
    jne    jump_5cef5
    jb     jump_5cecf
    jae    jump_5cf07
  jump_5cee4:
    movzbl %al,%ecx
  jump_5cee7:
    add    %ecx,%edi
    inc    %esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cee4
    jae    jump_5cf07
    je     jump_5cecf
  jump_5cef5:
    movzbl %al,%ecx
  jump_5cef8:
    add    %ecx,%edi
    add    %ecx,%esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cee4
    jne    jump_5cef5
    jb     jump_5cecf
  jump_5cf07:
    mov    -0x48(%ebp),%eax
    add    %eax,-0x24(%ebp)
    add    %eax,-0x28(%ebp)
    add    %eax,-0x2c(%ebp)
    incl   -0x20(%ebp)
  jump_5cf16:
    mov    -0x20(%ebp),%eax
    cmp    -0x18(%ebp),%eax
    jle    jump_5cd0e
  jump_5cf22:
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5cf2a:
    mov    $0xfffffffd,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5cf35:
    mov    $0xfffffffc,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5cf40:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%esi),%eax
    add    %eax,0x10(%ebp)
    mov    0x8(%esi),%eax
    add    %eax,0x14(%ebp)
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,0x18(%ebp)
    jle    jump_5cfff
    mov    0xc(%ebp),%esi
    mov    (%ebx),%edi
    mov    0x8(%esi),%eax
    add    0x10(%ebp),%eax
    add    %eax,%edi
    mov    0xc(%esi),%eax
    mov    %eax,%ebx
    add    0x14(%ebp),%eax
    mull   0x18(%ebp)
    add    %eax,%edi
    mov    %edi,%edx
    mov    0x10(%esi),%eax
    mov    0x14(%esi),%eax
    inc    %eax
    sub    %ebx,%eax
    mov    %eax,%ebx
    jle    jump_5cfff
    add    $0x18,%esi
  jump_5cf94:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cfb4
    jne    jump_5cfdd
    jae    jump_5cff7
  jump_5cf9f:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cfb4
    jne    jump_5cfdd
    jb     jump_5cf9f
    jae    jump_5cff7
  jump_5cfb4:
    movzbl %al,%ecx
    mov    (%esi),%al
    inc    %esi
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %al,%ah
    rol    $0x8,%eax
    mov    %ah,%al
    rol    $0x8,%eax
    mov    %ah,%al
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cfb4
    jae    jump_5cff7
    je     jump_5cf9f
  jump_5cfdd:
    movzbl %al,%ecx
    push   %ecx
    and    $0x3,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    pop    %ecx
    shr    $0x2,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5cfb4
    jne    jump_5cfdd
    jb     jump_5cf9f
  jump_5cff7:
    add    0x18(%ebp),%edx
    mov    %edx,%edi
    dec    %ebx
    jne    jump_5cf94
  jump_5cfff:
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5d007:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    $data_98464,%edi
    mov    $0x40,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5d026:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffb0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x48(%ebp)
    jle    jump_5d0a5
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5d0a5
    mov    0x4(%esi),%eax
    mov    %eax,-0x4c(%ebp)
    cmp    $0x0,%eax
    jg     jump_5d059
    mov    $0x0,%eax
  jump_5d059:
    mov    %eax,-0x34(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x50(%ebp)
    cmp    $0x0,%eax
    jg     jump_5d06c
    mov    $0x0,%eax
  jump_5d06c:
    mov    %eax,-0x38(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x48(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5d07c
    mov    %edx,%eax
  jump_5d07c:
    mov    %eax,-0x3c(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5d08b
    mov    %edx,%eax
  jump_5d08b:
    mov    %eax,-0x40(%ebp)
    mov    -0x3c(%ebp),%eax
    cmp    -0x34(%ebp),%eax
    jl     jump_5d0b0
    mov    -0x40(%ebp),%eax
    cmp    -0x38(%ebp),%eax
    jl     jump_5d0b0
    mov    (%ebx),%eax
    mov    %eax,-0x44(%ebp)
    jmp    jump_5d0bb
  jump_5d0a5:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5d0b0:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5d0bb:
    mov    -0x4c(%ebp),%eax
    add    %eax,0x14(%ebp)
    mov    -0x50(%ebp),%eax
    add    %eax,0x18(%ebp)
    mov    0x10(%ebp),%esi
    shl    $0x3,%esi
    add    $0x8,%esi
    add    0xc(%ebp),%esi
    mov    (%esi),%esi
    add    0xc(%ebp),%esi
    mov    %esi,-0x30(%ebp)
    mov    0x8(%esi),%eax
    add    0x14(%ebp),%eax
    mov    %eax,-0xc(%ebp)
    mov    0xc(%esi),%eax
    add    0x18(%ebp),%eax
    mov    %eax,-0x10(%ebp)
    mov    0x10(%esi),%eax
    add    0x14(%ebp),%eax
    mov    %eax,-0x14(%ebp)
    mov    0x14(%esi),%eax
    add    0x18(%ebp),%eax
    mov    %eax,-0x18(%ebp)
    add    $0x18,%esi
    mov    -0x14(%ebp),%eax
    cmp    -0xc(%ebp),%eax
    jl     jump_5d4f3
    mov    -0x18(%ebp),%eax
    cmp    -0x10(%ebp),%eax
    jl     jump_5d4f3
    xor    %edx,%edx
    mov    -0xc(%ebp),%eax
    sub    -0x34(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x3c(%ebp),%eax
    sub    -0xc(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x10(%ebp),%eax
    sub    -0x38(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x40(%ebp),%eax
    sub    -0x10(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x14(%ebp),%eax
    sub    -0x34(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x3c(%ebp),%eax
    sub    -0x14(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x18(%ebp),%eax
    sub    -0x38(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x40(%ebp),%eax
    sub    -0x18(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    %edx,-0x1c(%ebp)
    test   %dl,%dh
    jne    jump_5d4e8
    or     %dh,%dl
    jne    jump_5d1a6
    mov    0x8(%ebp),%esi
    mov    0x4(%esi),%eax
    sub    %eax,0x14(%ebp)
    mov    0x8(%esi),%eax
    sub    %eax,0x18(%ebp)
    push   -0x48(%ebp)
    push   0x18(%ebp)
    push   0x14(%ebp)
    push   -0x30(%ebp)
    push   0x8(%ebp)
    call   func_5d4fe
    add    $0x14,%esp
    jmp    jump_5d4e0
  jump_5d1a6:
    mov    -0x10(%ebp),%eax
    imull  -0x48(%ebp)
    add    -0x44(%ebp),%eax
    add    -0xc(%ebp),%eax
    mov    %eax,%edi
    mov    -0x10(%ebp),%ecx
    mov    %ecx,-0x20(%ebp)
    jmp    jump_5d1d2
  jump_5d1bc:
    movzbl %al,%eax
    add    %eax,%esi
    dec    %esi
  jump_5d1c2:
    inc    %esi
  jump_5d1c3:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d1c2
    jne    jump_5d1bc
    jb     jump_5d1c2
    add    -0x48(%ebp),%edi
    inc    %ecx
  jump_5d1d2:
    cmp    -0x38(%ebp),%ecx
    jl     jump_5d1c3
    mov    %edi,-0x24(%ebp)
    mov    %ecx,-0x20(%ebp)
    mov    %edi,%eax
    sub    -0xc(%ebp),%eax
    add    -0x34(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    mov    %edi,%eax
    sub    -0xc(%ebp),%eax
    add    -0x3c(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    jmp    jump_5d4d4
  jump_5d1f8:
    mov    -0x20(%ebp),%eax
    cmp    -0x40(%ebp),%eax
    jg     jump_5d4e0
    mov    -0x24(%ebp),%edi
    testl  $0x8,-0x1c(%ebp)
    jne    jump_5d2ed
    testl  $0x400,-0x1c(%ebp)
    jne    jump_5d37b
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d249
    jne    jump_5d27a
    jae    jump_5d2e8
  jump_5d230:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d249
    jne    jump_5d27a
    jb     jump_5d230
    jae    jump_5d2e8
  jump_5d249:
    movzbl %al,%ecx
  jump_5d24c:
    xor    %eax,%eax
    mov    (%esi),%al
    inc    %esi
    mov    data_98464(%eax),%al
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %al,%ah
    rol    $0x8,%eax
    mov    %ah,%al
    rol    $0x8,%eax
    mov    %ah,%al
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d249
    jae    jump_5d2e8
    je     jump_5d230
  jump_5d27a:
    movzbl %al,%ecx
  jump_5d27d:
    xor    %eax,%eax
    or     %ecx,%ecx
    je     jump_5d2d5
    cmp    $0x4,%ecx
    jl     jump_5d2c6
  jump_5d288:
    mov    (%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,(%edi)
    mov    0x1(%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,0x1(%edi)
    mov    0x2(%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,0x2(%edi)
    mov    0x3(%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,0x3(%edi)
    add    $0x4,%esi
    add    $0x4,%edi
    sub    $0x4,%ecx
    je     jump_5d2d5
    cmp    $0x4,%ecx
    jge    jump_5d288
  jump_5d2c6:
    mov    (%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,(%edi)
    inc    %esi
    inc    %edi
    dec    %ecx
    jne    jump_5d2c6
  jump_5d2d5:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d249
    jne    jump_5d27a
    jb     jump_5d230
  jump_5d2e8:
    jmp    jump_5d4c5
  jump_5d2ed:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d30d
    jne    jump_5d33e
    jae    jump_5d376
  jump_5d2f8:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d30d
    jne    jump_5d33e
    jb     jump_5d2f8
    jae    jump_5d376
  jump_5d30d:
    movzbl %al,%ecx
    mov    -0x28(%ebp),%eax
    sub    %edi,%eax
    cmp    %ecx,%eax
    jge    jump_5d330
    or     %eax,%eax
    js     jump_5d321
    add    %eax,%edi
    sub    %eax,%ecx
  jump_5d321:
    testl  $0x400,-0x1c(%ebp)
    je     jump_5d24c
    jne    jump_5d3a6
  jump_5d330:
    add    %ecx,%edi
    inc    %esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d30d
    jae    jump_5d376
    je     jump_5d2f8
  jump_5d33e:
    movzbl %al,%ecx
    mov    -0x28(%ebp),%eax
    sub    %edi,%eax
    cmp    %ecx,%eax
    jge    jump_5d367
    or     %eax,%eax
    js     jump_5d354
    add    %eax,%edi
    sub    %eax,%ecx
    add    %eax,%esi
  jump_5d354:
    testl  $0x400,-0x1c(%ebp)
    je     jump_5d27d
    jne    jump_5d3f5
  jump_5d367:
    add    %ecx,%edi
    add    %ecx,%esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d30d
    jne    jump_5d33e
    jb     jump_5d2f8
  jump_5d376:
    jmp    jump_5d4c5
  jump_5d37b:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d3a3
    jne    jump_5d3f2
    jae    jump_5d480
  jump_5d38a:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d3a3
    jne    jump_5d3f2
    jb     jump_5d38a
    jae    jump_5d480
  jump_5d3a3:
    movzbl %al,%ecx
  jump_5d3a6:
    cmp    -0x2c(%ebp),%edi
    jg     jump_5d4a5
    mov    %edi,%eax
    add    %ecx,%eax
    dec    %eax
    sub    -0x2c(%ebp),%eax
    cltd
    not    %edx
    and    %eax,%edx
    sub    %edx,%ecx
    xor    %eax,%eax
    mov    (%esi),%al
    inc    %esi
    mov    data_98464(%eax),%al
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %al,%ah
    rol    $0x8,%eax
    mov    %ah,%al
    rol    $0x8,%eax
    mov    %ah,%al
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    add    %edx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d3a3
    jae    jump_5d480
    je     jump_5d38a
  jump_5d3f2:
    movzbl %al,%ecx
  jump_5d3f5:
    cmp    -0x2c(%ebp),%edi
    jg     jump_5d4b6
    mov    %edi,%eax
    add    %ecx,%eax
    dec    %eax
    sub    -0x2c(%ebp),%eax
    cltd
    not    %edx
    and    %eax,%edx
    sub    %edx,%ecx
    xor    %eax,%eax
    or     %ecx,%ecx
    je     jump_5d465
    cmp    $0x4,%ecx
    jl     jump_5d456
  jump_5d418:
    mov    (%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,(%edi)
    mov    0x1(%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,0x1(%edi)
    mov    0x2(%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,0x2(%edi)
    mov    0x3(%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,0x3(%edi)
    add    $0x4,%esi
    add    $0x4,%edi
    sub    $0x4,%ecx
    je     jump_5d465
    cmp    $0x4,%ecx
    jge    jump_5d418
  jump_5d456:
    mov    (%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,(%edi)
    inc    %esi
    inc    %edi
    dec    %ecx
    jne    jump_5d456
  jump_5d465:
    add    %edx,%edi
    add    %edx,%esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d3a3
    jne    jump_5d3f2
    jb     jump_5d38a
  jump_5d480:
    jmp    jump_5d4c5
  jump_5d48d:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d4a2
    jne    jump_5d4b3
    jb     jump_5d48d
    jae    jump_5d4c5
  jump_5d4a2:
    movzbl %al,%ecx
  jump_5d4a5:
    add    %ecx,%edi
    inc    %esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d4a2
    jae    jump_5d4c5
    je     jump_5d48d
  jump_5d4b3:
    movzbl %al,%ecx
  jump_5d4b6:
    add    %ecx,%edi
    add    %ecx,%esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d4a2
    jne    jump_5d4b3
    jb     jump_5d48d
  jump_5d4c5:
    mov    -0x48(%ebp),%eax
    add    %eax,-0x24(%ebp)
    add    %eax,-0x28(%ebp)
    add    %eax,-0x2c(%ebp)
    incl   -0x20(%ebp)
  jump_5d4d4:
    mov    -0x20(%ebp),%eax
    cmp    -0x18(%ebp),%eax
    jle    jump_5d1f8
  jump_5d4e0:
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5d4e8:
    mov    $0xfffffffd,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5d4f3:
    mov    $0xfffffffc,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5d4fe:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%esi),%eax
    add    %eax,0x10(%ebp)
    mov    0x8(%esi),%eax
    add    %eax,0x14(%ebp)
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,0x18(%ebp)
    jle    jump_5d629
    mov    0xc(%ebp),%esi
    mov    (%ebx),%edi
    mov    0x8(%esi),%eax
    add    0x10(%ebp),%eax
    add    %eax,%edi
    mov    0xc(%esi),%eax
    mov    %eax,%ebx
    add    0x14(%ebp),%eax
    mull   0x18(%ebp)
    add    %eax,%edi
    mov    %edi,%edx
    mov    0x10(%esi),%eax
    mov    0x14(%esi),%eax
    inc    %eax
    sub    %ebx,%eax
    mov    %eax,%ebx
    jle    jump_5d629
    add    $0x18,%esi
  jump_5d556:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d57e
    jne    jump_5d5af
    jae    jump_5d61d
  jump_5d565:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d57e
    jne    jump_5d5af
    jb     jump_5d565
    jae    jump_5d61d
  jump_5d57e:
    movzbl %al,%ecx
    xor    %eax,%eax
    mov    (%esi),%al
    inc    %esi
    mov    data_98464(%eax),%al
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %al,%ah
    rol    $0x8,%eax
    mov    %ah,%al
    rol    $0x8,%eax
    mov    %ah,%al
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d57e
    jae    jump_5d61d
    je     jump_5d565
  jump_5d5af:
    movzbl %al,%ecx
    xor    %eax,%eax
    or     %ecx,%ecx
    je     jump_5d60a
    cmp    $0x4,%ecx
    jl     jump_5d5fb
  jump_5d5bd:
    mov    (%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,(%edi)
    mov    0x1(%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,0x1(%edi)
    mov    0x2(%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,0x2(%edi)
    mov    0x3(%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,0x3(%edi)
    add    $0x4,%esi
    add    $0x4,%edi
    sub    $0x4,%ecx
    je     jump_5d60a
    cmp    $0x4,%ecx
    jge    jump_5d5bd
  jump_5d5fb:
    mov    (%esi),%al
    mov    data_98464(%eax),%al
    mov    %al,(%edi)
    inc    %esi
    inc    %edi
    dec    %ecx
    jne    jump_5d5fb
  jump_5d60a:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5d57e
    jne    jump_5d5af
    jb     jump_5d565
  jump_5d61d:
    add    0x18(%ebp),%edx
    mov    %edx,%edi
    dec    %ebx
    jne    jump_5d556
  jump_5d629:
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5d631:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffff10,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    cmpl   $0x10000,0x24(%ebp)
    jne    jump_5d65d
    cmpl   $0x10000,0x28(%ebp)
    jne    jump_5d65d
    cmpl   $0x0,0x20(%ebp)
    je     jump_5e19b
  jump_5d65d:
    push   0x10(%ebp)
    push   0xc(%ebp)
    call   func_610e8
    add    $0x8,%esp
    mov    %eax,%ecx
    shr    $0x10,%eax
    dec    %eax
    mov    %eax,-0x44(%ebp)
    and    $0xffff,%ecx
    dec    %ecx
    mov    %ecx,-0x48(%ebp)
    lea    -0x14(%ebp),%ebx
    lea    -0x28(%ebp),%esi
    mov    %ebx,(%esi)
    mov    0x1c(%ebp),%edx
    mov    %edx,(%ebx)
    movl   $0x0,0x4(%esi)
    movl   $0x0,data_98570
    movl   $0x0,data_985ac
    movl   $0x0,0x8(%esi)
    movl   $0x0,data_98574
    movl   $0x0,data_98588
    mov    %eax,0x4(%ebx)
    mov    %eax,0xc(%esi)
    mov    %eax,data_98584
    mov    %eax,data_98598
    mov    %ecx,0x8(%ebx)
    mov    %ecx,0x10(%esi)
    mov    %ecx,data_9859c
    mov    %ecx,data_985b0
    push   0x10(%ebp)
    push   0xc(%ebp)
    call   func_6111c
    add    $0x8,%esp
    mov    %eax,%ebx
    cwtl
    neg    %eax
    mov    %eax,-0x3c(%ebp)
    sar    $0x10,%ebx
    neg    %ebx
    mov    %ebx,-0x40(%ebp)
    testl  $0x2,0x2c(%ebp)
    jne    jump_5d756
    push   $0xff
    lea    -0x28(%ebp),%eax
    push   %eax
    call   func_5e9d0
    add    $0x8,%esp
    testl  $0x1,0x2c(%ebp)
    je     jump_5d73e
    push   -0x3c(%ebp)
    push   -0x40(%ebp)
    push   0x10(%ebp)
    push   0xc(%ebp)
    lea    -0x28(%ebp),%eax
    push   %eax
    call   func_5d026
    add    $0x14,%esp
    jmp    jump_5d756
  jump_5d73e:
    push   -0x3c(%ebp)
    push   -0x40(%ebp)
    push   0x10(%ebp)
    push   0xc(%ebp)
    lea    -0x28(%ebp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
  jump_5d756:
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0xe8(%ebp)
    jle    jump_5d7f7
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5d7f7
    mov    0x4(%esi),%eax
    mov    %eax,-0xec(%ebp)
    cmp    $0x0,%eax
    jg     jump_5d78a
    mov    $0x0,%eax
  jump_5d78a:
    mov    %eax,-0xd4(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0xf0(%ebp)
    cmp    $0x0,%eax
    jg     jump_5d7a3
    mov    $0x0,%eax
  jump_5d7a3:
    mov    %eax,-0xd8(%ebp)
    mov    0xc(%esi),%eax
    mov    -0xe8(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5d7b9
    mov    %edx,%eax
  jump_5d7b9:
    mov    %eax,-0xdc(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5d7cb
    mov    %edx,%eax
  jump_5d7cb:
    mov    %eax,-0xe0(%ebp)
    mov    -0xdc(%ebp),%eax
    cmp    -0xd4(%ebp),%eax
    jl     jump_5d802
    mov    -0xe0(%ebp),%eax
    cmp    -0xd8(%ebp),%eax
    jl     jump_5d802
    mov    (%ebx),%eax
    mov    %eax,-0xe4(%ebp)
    jmp    jump_5d80d
  jump_5d7f7:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5d802:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5d80d:
    mov    0x14(%ebp),%eax
    sub    -0x40(%ebp),%eax
    mov    %eax,-0x4c(%ebp)
    mov    0x18(%ebp),%eax
    sub    -0x3c(%ebp),%eax
    mov    %eax,-0x50(%ebp)
    movl   $0x0,-0x30(%ebp)
    movl   $0x0,-0x2c(%ebp)
    push   0x28(%ebp)
    push   0x24(%ebp)
    push   0x20(%ebp)
    lea    -0x40(%ebp),%eax
    push   %eax
    lea    -0x38(%ebp),%eax
    push   %eax
    lea    -0x30(%ebp),%eax
    push   %eax
    call   func_60579
    add    $0x18,%esp
    mov    -0x38(%ebp),%eax
    add    -0x4c(%ebp),%eax
    mov    %eax,data_98564
    mov    -0x34(%ebp),%eax
    add    -0x50(%ebp),%eax
    mov    %eax,data_98568
    mov    -0x44(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    movl   $0x0,-0x2c(%ebp)
    push   0x28(%ebp)
    push   0x24(%ebp)
    push   0x20(%ebp)
    lea    -0x40(%ebp),%eax
    push   %eax
    lea    -0x38(%ebp),%eax
    push   %eax
    lea    -0x30(%ebp),%eax
    push   %eax
    call   func_60579
    add    $0x18,%esp
    mov    -0x38(%ebp),%eax
    add    -0x4c(%ebp),%eax
    mov    %eax,data_98578
    mov    -0x34(%ebp),%eax
    add    -0x50(%ebp),%eax
    mov    %eax,data_9857c
    mov    -0xec(%ebp),%eax
    add    %eax,data_98564
    add    %eax,data_98578
    mov    -0xf0(%ebp),%eax
    add    %eax,data_98568
    add    %eax,data_9857c
    mov    -0x44(%ebp),%eax
    mov    -0x48(%ebp),%ebx
    mov    %eax,-0x30(%ebp)
    mov    %ebx,-0x2c(%ebp)
    push   0x28(%ebp)
    push   0x24(%ebp)
    push   0x20(%ebp)
    lea    -0x40(%ebp),%eax
    push   %eax
    lea    -0x38(%ebp),%eax
    push   %eax
    lea    -0x30(%ebp),%eax
    push   %eax
    call   func_60579
    add    $0x18,%esp
    mov    -0x38(%ebp),%eax
    add    -0x4c(%ebp),%eax
    mov    %eax,data_9858c
    mov    -0x34(%ebp),%eax
    add    -0x50(%ebp),%eax
    mov    %eax,data_98590
    mov    -0x48(%ebp),%eax
    movl   $0x0,-0x30(%ebp)
    mov    %eax,-0x2c(%ebp)
    push   0x28(%ebp)
    push   0x24(%ebp)
    push   0x20(%ebp)
    lea    -0x40(%ebp),%eax
    push   %eax
    lea    -0x38(%ebp),%eax
    push   %eax
    lea    -0x30(%ebp),%eax
    push   %eax
    call   func_60579
    add    $0x18,%esp
    mov    -0x38(%ebp),%eax
    add    -0x4c(%ebp),%eax
    mov    %eax,data_985a0
    mov    -0x34(%ebp),%eax
    add    -0x50(%ebp),%eax
    mov    %eax,data_985a4
    mov    -0xec(%ebp),%eax
    add    %eax,data_9858c
    add    %eax,data_985a0
    mov    -0xf0(%ebp),%eax
    add    %eax,data_98590
    add    %eax,data_985a4
    lea    -0x14(%ebp),%ebx
    mov    (%ebx),%eax
    mov    %eax,-0x58(%ebp)
    mov    0x4(%ebx),%ecx
    inc    %ecx
    mov    %ecx,-0x54(%ebp)
    push   %ds
    pop    %es
    mov    $data_98564,%ebx
    mov    %ebx,%eax
    add    $0x50,%eax
    mov    %ebx,-0x64(%ebp)
    mov    %eax,-0x68(%ebp)
    mov    $0x7fff,%esi
    mov    $0xffff8000,%edi
    mov    $0xf,%ecx
  jump_5d997:
    mov    $0x0,%edx
    mov    (%ebx),%eax
    sub    -0xd4(%ebp),%eax
    shld   $0x1,%eax,%edx
    mov    -0xdc(%ebp),%eax
    sub    (%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    0x4(%ebx),%eax
    sub    -0xd8(%ebp),%eax
    shld   $0x1,%eax,%edx
    mov    -0xe0(%ebp),%eax
    sub    0x4(%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    0x4(%ebx),%eax
    cmp    %esi,%eax
    jg     jump_5d9da
    mov    %eax,%esi
    mov    %ebx,-0x6c(%ebp)
  jump_5d9da:
    cmp    %edi,%eax
    jl     jump_5d9e0
    mov    %eax,%edi
  jump_5d9e0:
    and    %edx,%ecx
    add    $0x14,%ebx
    cmp    -0x68(%ebp),%ebx
    jne    jump_5d997
    or     %ecx,%ecx
    jne    jump_5dfcc
    mov    -0x6c(%ebp),%eax
    mov    %eax,-0x78(%ebp)
    mov    %eax,-0x7c(%ebp)
    mov    %esi,-0x8c(%ebp)
    cmp    %esi,%edi
    je     jump_5dfcc
  jump_5da09:
    mov    -0x78(%ebp),%ebx
    mov    %ebx,-0x70(%ebp)
    mov    %ebx,%esi
    sub    $0x14,%esi
    cmp    -0x64(%ebp),%esi
    jge    jump_5da1f
    mov    -0x68(%ebp),%esi
    sub    $0x14,%esi
  jump_5da1f:
    mov    %esi,-0x78(%ebp)
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    cmp    -0xd8(%ebp),%edx
    jge    jump_5da38
    cmp    -0xd8(%ebp),%ecx
    jle    jump_5da09
  jump_5da38:
    sub    %edx,%ecx
    je     jump_5da09
    mov    %ecx,-0x80(%ebp)
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xa8(%ebp)
    mov    -0x80(%ebp),%ecx
    mov    0xc(%esi),%edx
    sub    0xc(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xb0(%ebp)
    mov    -0x80(%ebp),%ecx
    mov    0x10(%esi),%edx
    sub    0x10(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xb8(%ebp)
    mov    (%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,-0x90(%ebp)
    mov    0xc(%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,-0x98(%ebp)
    mov    0x10(%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,-0xa0(%ebp)
  jump_5dacf:
    mov    -0x7c(%ebp),%ebx
    mov    %ebx,-0x74(%ebp)
    mov    %ebx,%esi
    add    $0x14,%esi
    cmp    -0x68(%ebp),%esi
    jl     jump_5dae2
    mov    -0x64(%ebp),%esi
  jump_5dae2:
    mov    %esi,-0x7c(%ebp)
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    cmp    -0xd8(%ebp),%edx
    jge    jump_5dafb
    cmp    -0xd8(%ebp),%ecx
    jle    jump_5dacf
  jump_5dafb:
    sub    %edx,%ecx
    je     jump_5dacf
    mov    %ecx,-0x84(%ebp)
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xac(%ebp)
    mov    -0x84(%ebp),%ecx
    mov    0xc(%esi),%edx
    sub    0xc(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xb4(%ebp)
    mov    -0x84(%ebp),%ecx
    mov    0x10(%esi),%edx
    sub    0x10(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xbc(%ebp)
    mov    (%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,-0x94(%ebp)
    mov    0xc(%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,-0x9c(%ebp)
    mov    0x10(%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,-0xa4(%ebp)
    mov    -0xe0(%ebp),%eax
    sub    -0x8c(%ebp),%eax
    sub    -0xe0(%ebp),%edi
    jg     jump_5dbb1
    add    %edi,%eax
  jump_5dbb1:
    mov    %eax,-0x88(%ebp)
    mov    -0xd8(%ebp),%eax
    sub    -0x8c(%ebp),%eax
    jle    jump_5dc68
    sub    %eax,-0x88(%ebp)
    mov    -0xd8(%ebp),%ecx
    mov    %ecx,-0x8c(%ebp)
    mov    -0x70(%ebp),%ebx
    sub    0x4(%ebx),%ecx
    sub    %ecx,-0x80(%ebp)
    shl    $0x10,%ecx
    mov    -0xa8(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0x90(%ebp)
    mov    -0xb0(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0x98(%ebp)
    mov    -0xb8(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0xa0(%ebp)
    mov    -0xd8(%ebp),%ecx
    mov    -0x74(%ebp),%ebx
    sub    0x4(%ebx),%ecx
    sub    %ecx,-0x84(%ebp)
    shl    $0x10,%ecx
    mov    -0xac(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0x94(%ebp)
    mov    -0xb4(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0x9c(%ebp)
    mov    -0xbc(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0xa4(%ebp)
  jump_5dc68:
    mov    -0x8c(%ebp),%eax
    imull  -0xe8(%ebp)
    add    -0xe4(%ebp),%eax
    add    $0x0,%eax
    mov    %eax,-0x5c(%ebp)
    mov    -0x90(%ebp),%eax
    mov    -0x94(%ebp),%ebx
    mov    -0x98(%ebp),%ecx
    mov    -0x9c(%ebp),%edx
    mov    -0xa0(%ebp),%esi
    mov    -0xa4(%ebp),%edi
  jump_5dca4:
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    cmp    %eax,%ebx
    jg     jump_5dcb3
    xchg   %eax,%ebx
    xchg   %ecx,%edx
    xchg   %esi,%edi
  jump_5dcb3:
    sar    $0x10,%eax
    cmp    -0xdc(%ebp),%eax
    jg     jump_5df75
    sar    $0x10,%ebx
    cmp    -0xd4(%ebp),%ebx
    jl     jump_5df75
    mov    %eax,-0xc0(%ebp)
    mov    %ebx,-0xc4(%ebp)
    mov    %ecx,-0xd0(%ebp)
    sub    %eax,%ebx
    je     jump_5ddb8
    push   %ebx
    sub    %ecx,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ebx
    sar    $0x10,%edx
    idiv   %ebx
    mov    %eax,-0xc8(%ebp)
    shld   $0x10,%eax,%edx
    pop    %ebx
    and    $0xffff,%eax
    and    $0xffff,%edx
    mov    $0x1,%ecx
    test   $0x8000,%edx
    je     jump_5dd2d
    or     $0xffff0000,%edx
    neg    %ecx
    cmp    $0x1,%eax
    sbb    $0xffffffff,%edx
  jump_5dd2d:
    add    %edx,%ecx
    push   %ecx
    push   %edx
    sub    %esi,%edi
    mov    %edi,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ebx
    sar    $0x10,%edx
    idiv   %ebx
    mov    %eax,-0xcc(%ebp)
    shld   $0x10,%eax,%edx
    and    $0xffff,%eax
    and    $0xffff,%edx
    mov    -0x54(%ebp),%ecx
    test   $0x8000,%edx
    je     jump_5dd6b
    neg    %ecx
    cmp    $0x1,%eax
    sbb    $0xffffffff,%edx
  jump_5dd6b:
    mov    -0x54(%ebp),%eax
    imul   %dx
    cwtl
    pop    %edx
    pop    %ebx
    add    %eax,%edx
    mov    %edx,data_985b4
    add    %ecx,%edx
    mov    %edx,data_985b8
    add    %eax,%ebx
    mov    %ebx,data_985bc
    add    %ecx,%ebx
    mov    %ebx,data_985c0
    mov    -0xd4(%ebp),%ecx
    sub    -0xc0(%ebp),%ecx
    jg     jump_5dffb
  jump_5dda6:
    mov    -0xc4(%ebp),%eax
    sub    -0xdc(%ebp),%eax
    jg     jump_5e029
  jump_5ddb8:
    mov    %esi,%ecx
    shr    $0x10,%esi
    mov    %esi,%eax
    mull   -0x54(%ebp)
    add    -0x58(%ebp),%eax
    mov    -0xd0(%ebp),%esi
    shr    $0x10,%esi
    add    %eax,%esi
    mov    -0xc0(%ebp),%eax
    mov    -0x5c(%ebp),%edi
    add    %eax,%edi
    mov    -0xc4(%ebp),%ebx
    sub    %eax,%ebx
    push   %ebp
    mov    -0xd0(%ebp),%edx
    mov    -0xc8(%ebp),%eax
    or     %eax,%eax
    jns    jump_5ddf8
    neg    %eax
    not    %edx
  jump_5ddf8:
    shl    $0x10,%eax
    shl    $0x10,%edx
    mov    -0xcc(%ebp),%ebp
    or     %ebp,%ebp
    jns    jump_5de0c
    neg    %ebp
    not    %ecx
  jump_5de0c:
    shl    $0x10,%ebp
    shl    $0x10,%ecx
    push   %ebx
    xor    %ebx,%ebx
    cmpl   $0x5,(%esp)
    jl     jump_5ded7
  jump_5de1f:
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5de28
    mov    %bl,(%edi)
  jump_5de28:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_985b4(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5de43
    mov    %bl,0x1(%edi)
  jump_5de43:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_985b4(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5de5e
    mov    %bl,0x2(%edi)
  jump_5de5e:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_985b4(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5de79
    mov    %bl,0x3(%edi)
  jump_5de79:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_985b4(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5de94
    mov    %bl,0x4(%edi)
  jump_5de94:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_985b4(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5deaf
    mov    %bl,0x5(%edi)
  jump_5deaf:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_985b4(,%ebx,4),%esi
    add    $0x6,%edi
    subl   $0x6,(%esp)
    js     jump_5df71
    cmpl   $0x5,(%esp)
    jge    jump_5de1f
  jump_5ded7:
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5dee0
    mov    %bl,(%edi)
  jump_5dee0:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_985b4(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5df71
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5df00
    mov    %bl,0x1(%edi)
  jump_5df00:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_985b4(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5df71
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5df20
    mov    %bl,0x2(%edi)
  jump_5df20:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_985b4(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5df71
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5df40
    mov    %bl,0x3(%edi)
  jump_5df40:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_985b4(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5df71
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5df60
    mov    %bl,0x4(%edi)
  jump_5df60:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_985b4(,%ebx,4),%esi
  jump_5df71:
    add    $0x4,%esp
    pop    %ebp
  jump_5df75:
    mov    -0xe8(%ebp),%edi
    add    %edi,-0x5c(%ebp)
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %eax
    decl   -0x88(%ebp)
    js     jump_5dfcc
    je     jump_5dfd2
    decl   -0x80(%ebp)
    je     jump_5e034
    add    -0xa8(%ebp),%eax
    add    -0xb0(%ebp),%ecx
    add    -0xb8(%ebp),%esi
  jump_5dfa9:
    decl   -0x84(%ebp)
    je     jump_5e0e4
    add    -0xac(%ebp),%ebx
    add    -0xb4(%ebp),%edx
    add    -0xbc(%ebp),%edi
    jmp    jump_5dca4
  jump_5dfcc:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5dfd2:
    add    -0xa8(%ebp),%eax
    add    -0xb0(%ebp),%ecx
    add    -0xb8(%ebp),%esi
    add    -0xac(%ebp),%ebx
    add    -0xb4(%ebp),%edx
    add    -0xbc(%ebp),%edi
    jmp    jump_5dca4
  jump_5dffb:
    add    %ecx,-0xc0(%ebp)
    shl    $0x10,%ecx
    mov    -0xc8(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0xd0(%ebp)
    mov    -0xcc(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,%esi
    jmp    jump_5dda6
  jump_5e029:
    sub    %eax,-0xc4(%ebp)
    jmp    jump_5ddb8
  jump_5e034:
    push   %ebx
    push   %edx
    mov    -0x78(%ebp),%ebx
    mov    %ebx,-0x70(%ebp)
    mov    %ebx,%esi
    sub    $0x14,%esi
    cmp    -0x64(%ebp),%esi
    jge    jump_5e04c
    mov    -0x68(%ebp),%esi
    sub    $0x14,%esi
  jump_5e04c:
    mov    %esi,-0x78(%ebp)
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,-0x80(%ebp)
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xa8(%ebp)
    mov    -0x80(%ebp),%ecx
    mov    0xc(%esi),%edx
    sub    0xc(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xb0(%ebp)
    mov    -0x80(%ebp),%ecx
    mov    0x10(%esi),%edx
    sub    0x10(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xb8(%ebp)
    mov    (%ebx),%eax
    shl    $0x10,%eax
    add    $0x8000,%eax
    mov    0xc(%ebx),%ecx
    shl    $0x10,%ecx
    add    $0x8000,%ecx
    mov    0x10(%ebx),%esi
    shl    $0x10,%esi
    add    $0x8000,%esi
    pop    %edx
    pop    %ebx
    jmp    jump_5dfa9
  jump_5e0e4:
    push   %eax
    push   %ecx
    mov    -0x7c(%ebp),%ebx
    mov    %ebx,-0x74(%ebp)
    mov    %ebx,%edi
    add    $0x14,%edi
    cmp    -0x68(%ebp),%edi
    jl     jump_5e0f9
    mov    -0x64(%ebp),%edi
  jump_5e0f9:
    mov    %edi,-0x7c(%ebp)
    mov    0x4(%edi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,-0x84(%ebp)
    mov    (%edi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xac(%ebp)
    mov    -0x84(%ebp),%ecx
    mov    0xc(%edi),%edx
    sub    0xc(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xb4(%ebp)
    mov    -0x84(%ebp),%ecx
    mov    0x10(%edi),%edx
    sub    0x10(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xbc(%ebp)
    mov    0xc(%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    0x10(%ebx),%edi
    shl    $0x10,%edi
    add    $0x8000,%edi
    mov    (%ebx),%ebx
    shl    $0x10,%ebx
    add    $0x8000,%ebx
    pop    %ecx
    pop    %eax
    jmp    jump_5dca4
  jump_5e19b:
    testl  $0x1,0x2c(%ebp)
    je     jump_5e1c0
    push   0x18(%ebp)
    push   0x14(%ebp)
    push   0x10(%ebp)
    push   0xc(%ebp)
    push   0x8(%ebp)
    call   func_5d026
    add    $0x14,%esp
    jmp    jump_5dfcc
  jump_5e1c0:
    push   0x18(%ebp)
    push   0x14(%ebp)
    push   0x10(%ebp)
    push   0xc(%ebp)
    push   0x8(%ebp)
    call   func_5cb3c
    add    $0x14,%esp
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5e1dd:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffdc,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    movl   $0x0,-0x18(%ebp)
    movl   $0x0,-0x1c(%ebp)
    movl   $0x0,-0x20(%ebp)
    movl   $0x0,-0x24(%ebp)
    mov    0xc(%ebp),%esi
    shl    $0x3,%esi
    add    $0x8,%esi
    add    0x8(%ebp),%esi
    mov    (%esi),%esi
    add    0x8(%ebp),%esi
    mov    %esi,-0x4(%ebp)
    mov    -0x4(%ebp),%esi
    mov    0x8(%esi),%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x8(%ebp)
    mov    0xc(%esi),%eax
    mov    %eax,%ebx
    add    0x14(%ebp),%eax
    mov    %eax,-0xc(%ebp)
    mov    0x10(%esi),%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x10(%ebp)
    mov    0x14(%esi),%eax
    mov    %eax,%ecx
    add    0x14(%ebp),%ecx
    mov    %ecx,-0x14(%ebp)
    inc    %eax
    sub    %ebx,%eax
    mov    %eax,%ebx
    jle    jump_5e302
    add    $0x18,%esi
    movl   $0x7fffffff,-0x18(%ebp)
    movl   $0x7fffffff,-0x1c(%ebp)
    movl   $0x80000000,-0x20(%ebp)
    movl   $0x80000000,-0x24(%ebp)
    mov    -0xc(%ebp),%edx
  jump_5e272:
    mov    -0x8(%ebp),%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5e295
    jne    jump_5e2c8
    jae    jump_5e2fa
  jump_5e280:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5e295
    jne    jump_5e2c8
    jb     jump_5e280
    jae    jump_5e2fa
  jump_5e295:
    movzbl %al,%ecx
    mov    (%esi),%al
    inc    %esi
    cmp    %edi,-0x18(%ebp)
    jl     jump_5e2a3
    mov    %edi,-0x18(%ebp)
  jump_5e2a3:
    add    %ecx,%edi
    cmp    %edi,-0x20(%ebp)
    jg     jump_5e2ad
    mov    %edi,-0x20(%ebp)
  jump_5e2ad:
    cmp    %edx,-0x1c(%ebp)
    jl     jump_5e2b5
    mov    %edx,-0x1c(%ebp)
  jump_5e2b5:
    cmp    %edx,-0x24(%ebp)
    jg     jump_5e2bd
    mov    %edx,-0x24(%ebp)
  jump_5e2bd:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5e295
    jae    jump_5e2fa
    je     jump_5e280
  jump_5e2c8:
    movzbl %al,%ecx
    add    %ecx,%esi
    cmp    %edi,-0x18(%ebp)
    jl     jump_5e2d5
    mov    %edi,-0x18(%ebp)
  jump_5e2d5:
    add    %ecx,%edi
    cmp    %edi,-0x20(%ebp)
    jg     jump_5e2df
    mov    %edi,-0x20(%ebp)
  jump_5e2df:
    cmp    %edx,-0x1c(%ebp)
    jl     jump_5e2e7
    mov    %edx,-0x1c(%ebp)
  jump_5e2e7:
    cmp    %edx,-0x24(%ebp)
    jg     jump_5e2ef
    mov    %edx,-0x24(%ebp)
  jump_5e2ef:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5e295
    jne    jump_5e2c8
    jb     jump_5e280
  jump_5e2fa:
    inc    %edx
    dec    %ebx
    jne    jump_5e272
  jump_5e302:
    mov    0x18(%ebp),%eax
    and    $0x1,%eax
    je     jump_5e31e
    mov    0x10(%ebp),%eax
    add    0x10(%ebp),%eax
    mov    %eax,%ebx
    sub    -0x18(%ebp),%eax
    sub    -0x20(%ebp),%ebx
    mov    %eax,-0x20(%ebp)
    mov    %ebx,-0x18(%ebp)
  jump_5e31e:
    mov    0x18(%ebp),%eax
    and    $0x2,%eax
    je     jump_5e33a
    mov    0x14(%ebp),%eax
    add    0x14(%ebp),%eax
    mov    %eax,%ebx
    sub    -0x1c(%ebp),%eax
    sub    -0x24(%ebp),%ebx
    mov    %eax,-0x24(%ebp)
    mov    %ebx,-0x1c(%ebp)
  jump_5e33a:
    mov    0x1c(%ebp),%edi
    mov    -0x18(%ebp),%eax
    stos   %eax,%es:(%edi)
    mov    -0x1c(%ebp),%eax
    stos   %eax,%es:(%edi)
    mov    -0x20(%ebp),%eax
    stos   %eax,%es:(%edi)
    mov    -0x24(%ebp),%eax
    stos   %eax,%es:(%edi)
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5e9d0:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffe0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x18(%ebp)
    jle    jump_5ea4f
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5ea4f
    mov    0x4(%esi),%eax
    mov    %eax,-0x1c(%ebp)
    cmp    $0x0,%eax
    jg     jump_5ea03
    mov    $0x0,%eax
  jump_5ea03:
    mov    %eax,-0x4(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x20(%ebp)
    cmp    $0x0,%eax
    jg     jump_5ea16
    mov    $0x0,%eax
  jump_5ea16:
    mov    %eax,-0x8(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x18(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5ea26
    mov    %edx,%eax
  jump_5ea26:
    mov    %eax,-0xc(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5ea35
    mov    %edx,%eax
  jump_5ea35:
    mov    %eax,-0x10(%ebp)
    mov    -0xc(%ebp),%eax
    cmp    -0x4(%ebp),%eax
    jl     jump_5ea5a
    mov    -0x10(%ebp),%eax
    cmp    -0x8(%ebp),%eax
    jl     jump_5ea5a
    mov    (%ebx),%eax
    mov    %eax,-0x14(%ebp)
    jmp    jump_5ea65
  jump_5ea4f:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5ea5a:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5ea65:
    mov    -0x8(%ebp),%eax
    imull  -0x18(%ebp)
    add    -0x14(%ebp),%eax
    add    -0x4(%ebp),%eax
    mov    %eax,%edi
    mov    -0xc(%ebp),%ebx
    inc    %ebx
    sub    -0x4(%ebp),%ebx
    mov    -0x18(%ebp),%esi
    sub    %ebx,%esi
    mov    0xc(%ebp),%al
    mov    %al,%ah
    shl    $0x10,%eax
    mov    0xc(%ebp),%al
    mov    %al,%ah
    mov    -0x8(%ebp),%edx
    jmp    jump_5eaa2
  jump_5ea91:
    mov    %ebx,%ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %ebx,%ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    add    %esi,%edi
    inc    %edx
  jump_5eaa2:
    cmp    -0x10(%ebp),%edx
    jle    jump_5ea91
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5eaaf:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffff64,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x70(%ebp)
    jle    jump_5eb31
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5eb31
    mov    0x4(%esi),%eax
    mov    %eax,-0x78(%ebp)
    cmp    $0x0,%eax
    jg     jump_5eae5
    mov    $0x0,%eax
  jump_5eae5:
    mov    %eax,-0x60(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x7c(%ebp)
    cmp    $0x0,%eax
    jg     jump_5eaf8
    mov    $0x0,%eax
  jump_5eaf8:
    mov    %eax,-0x64(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x70(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5eb08
    mov    %edx,%eax
  jump_5eb08:
    mov    %eax,-0x68(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5eb17
    mov    %edx,%eax
  jump_5eb17:
    mov    %eax,-0x6c(%ebp)
    mov    -0x68(%ebp),%eax
    cmp    -0x60(%ebp),%eax
    jl     jump_5eb3c
    mov    -0x6c(%ebp),%eax
    cmp    -0x64(%ebp),%eax
    jl     jump_5eb3c
    mov    (%ebx),%eax
    mov    %eax,-0x74(%ebp)
    jmp    jump_5eb47
  jump_5eb31:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5eb3c:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5eb47:
    mov    -0x60(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    mov    -0x64(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    mov    -0x68(%ebp),%eax
    mov    %eax,-0x34(%ebp)
    mov    -0x6c(%ebp),%eax
    mov    %eax,-0x38(%ebp)
    mov    -0x78(%ebp),%eax
    sub    %eax,-0x2c(%ebp)
    sub    %eax,-0x34(%ebp)
    mov    -0x7c(%ebp),%eax
    sub    %eax,-0x30(%ebp)
    sub    %eax,-0x38(%ebp)
    mov    0x14(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x94(%ebp)
    jle    jump_5ec08
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5ec08
    mov    0x4(%esi),%eax
    mov    %eax,-0x98(%ebp)
    cmp    $0x0,%eax
    jg     jump_5eba1
    mov    $0x0,%eax
  jump_5eba1:
    mov    %eax,-0x80(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x9c(%ebp)
    cmp    $0x0,%eax
    jg     jump_5ebb7
    mov    $0x0,%eax
  jump_5ebb7:
    mov    %eax,-0x84(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x94(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5ebcd
    mov    %edx,%eax
  jump_5ebcd:
    mov    %eax,-0x88(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5ebdf
    mov    %edx,%eax
  jump_5ebdf:
    mov    %eax,-0x8c(%ebp)
    mov    -0x88(%ebp),%eax
    cmp    -0x80(%ebp),%eax
    jl     jump_5ec13
    mov    -0x8c(%ebp),%eax
    cmp    -0x84(%ebp),%eax
    jl     jump_5ec13
    mov    (%ebx),%eax
    mov    %eax,-0x90(%ebp)
    jmp    jump_5ec1e
  jump_5ec08:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5ec13:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5ec1e:
    mov    -0x80(%ebp),%eax
    mov    %eax,-0x40(%ebp)
    mov    -0x84(%ebp),%eax
    mov    %eax,-0x44(%ebp)
    mov    -0x88(%ebp),%eax
    mov    %eax,-0x48(%ebp)
    mov    -0x8c(%ebp),%eax
    mov    %eax,-0x4c(%ebp)
    mov    -0x98(%ebp),%eax
    sub    %eax,-0x40(%ebp)
    sub    %eax,-0x48(%ebp)
    mov    -0x9c(%ebp),%eax
    sub    %eax,-0x44(%ebp)
    sub    %eax,-0x4c(%ebp)
    mov    0xc(%ebp),%eax
    sub    0x18(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    mov    0x10(%ebp),%eax
    sub    0x1c(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    mov    -0x2c(%ebp),%eax
    mov    -0x40(%ebp),%edx
    add    -0x24(%ebp),%edx
    cmp    %edx,%eax
    jg     jump_5ec78
    mov    %edx,%eax
  jump_5ec78:
    mov    %eax,-0x4(%ebp)
    mov    -0x30(%ebp),%eax
    mov    -0x44(%ebp),%edx
    add    -0x28(%ebp),%edx
    cmp    %edx,%eax
    jg     jump_5ec8a
    mov    %edx,%eax
  jump_5ec8a:
    mov    %eax,-0x8(%ebp)
    mov    -0x34(%ebp),%eax
    mov    -0x48(%ebp),%edx
    add    -0x24(%ebp),%edx
    cmp    %edx,%eax
    jl     jump_5ec9c
    mov    %edx,%eax
  jump_5ec9c:
    mov    %eax,-0xc(%ebp)
    mov    -0x38(%ebp),%eax
    mov    -0x4c(%ebp),%edx
    add    -0x28(%ebp),%edx
    cmp    %edx,%eax
    jl     jump_5ecae
    mov    %edx,%eax
  jump_5ecae:
    mov    %eax,-0x10(%ebp)
    mov    -0xc(%ebp),%eax
    cmp    -0x4(%ebp),%eax
    jl     jump_5ee40
    mov    -0x10(%ebp),%eax
    cmp    -0x8(%ebp),%eax
    jl     jump_5ee40
    mov    -0x40(%ebp),%eax
    mov    -0x2c(%ebp),%edx
    sub    -0x24(%ebp),%edx
    cmp    %edx,%eax
    jg     jump_5ecd8
    mov    %edx,%eax
  jump_5ecd8:
    mov    %eax,-0x14(%ebp)
    mov    -0x44(%ebp),%eax
    mov    -0x30(%ebp),%edx
    sub    -0x28(%ebp),%edx
    cmp    %edx,%eax
    jg     jump_5ecea
    mov    %edx,%eax
  jump_5ecea:
    mov    %eax,-0x18(%ebp)
    mov    -0x48(%ebp),%eax
    mov    -0x34(%ebp),%edx
    sub    -0x24(%ebp),%edx
    cmp    %edx,%eax
    jl     jump_5ecfc
    mov    %edx,%eax
  jump_5ecfc:
    mov    %eax,-0x1c(%ebp)
    mov    -0x4c(%ebp),%eax
    mov    -0x38(%ebp),%edx
    sub    -0x28(%ebp),%edx
    cmp    %edx,%eax
    jl     jump_5ed0e
    mov    %edx,%eax
  jump_5ed0e:
    mov    %eax,-0x20(%ebp)
    mov    -0xc(%ebp),%eax
    inc    %eax
    sub    -0x4(%ebp),%eax
    mov    %eax,-0x58(%ebp)
    mov    -0x10(%ebp),%eax
    inc    %eax
    sub    -0x8(%ebp),%eax
    mov    %eax,-0x54(%ebp)
    mov    -0x7c(%ebp),%eax
    imull  -0x70(%ebp)
    add    -0x74(%ebp),%eax
    add    -0x78(%ebp),%eax
    mov    %eax,%esi
    mov    -0x9c(%ebp),%eax
    imull  -0x94(%ebp)
    add    -0x90(%ebp),%eax
    add    -0x98(%ebp),%eax
    mov    %eax,%edi
    mov    -0x8(%ebp),%eax
    mov    -0x18(%ebp),%ebx
    cmp    %ebx,%eax
    jle    jump_5ed77
    mull   -0x70(%ebp)
    add    %eax,%esi
    mov    %ebx,%eax
    mull   -0x94(%ebp)
    add    %eax,%edi
    mov    -0x70(%ebp),%eax
    mov    %eax,-0x3c(%ebp)
    mov    -0x94(%ebp),%eax
    mov    %eax,-0x50(%ebp)
    jmp    jump_5ed9d
  jump_5ed77:
    mov    -0x10(%ebp),%eax
    mull   -0x70(%ebp)
    add    %eax,%esi
    mov    -0x20(%ebp),%eax
    mull   -0x94(%ebp)
    add    %eax,%edi
    mov    -0x70(%ebp),%eax
    neg    %eax
    mov    %eax,-0x3c(%ebp)
    mov    -0x94(%ebp),%eax
    neg    %eax
    mov    %eax,-0x50(%ebp)
  jump_5ed9d:
    mov    -0x58(%ebp),%ecx
    mov    -0x4(%ebp),%eax
    mov    -0x14(%ebp),%ebx
    cmp    %ebx,%eax
    jle    jump_5edbe
    add    %eax,%esi
    add    %ebx,%edi
    sub    %ecx,-0x3c(%ebp)
    sub    %ecx,-0x50(%ebp)
    cld
    movl   $0x0,-0x5c(%ebp)
    jmp    jump_5edd2
  jump_5edbe:
    add    -0xc(%ebp),%esi
    add    -0x1c(%ebp),%edi
    add    %ecx,-0x3c(%ebp)
    add    %ecx,-0x50(%ebp)
    std
    movl   $0x3,-0x5c(%ebp)
  jump_5edd2:
    mov    0x20(%ebp),%eax
    test   $0xffffff00,%eax
    je     jump_5ee0b
    mov    -0x54(%ebp),%edx
    mov    -0x3c(%ebp),%eax
    mov    -0x50(%ebp),%ebx
  jump_5ede5:
    mov    -0x58(%ebp),%ecx
    and    $0x3,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    mov    -0x58(%ebp),%ecx
    shr    $0x2,%ecx
    sub    -0x5c(%ebp),%esi
    sub    -0x5c(%ebp),%edi
    rep movsl %ds:(%esi),%es:(%edi)
    add    -0x5c(%ebp),%esi
    add    -0x5c(%ebp),%edi
    add    %eax,%esi
    add    %ebx,%edi
    dec    %edx
    jne    jump_5ede5
    cld
    jmp    jump_5ee38
  jump_5ee0b:
    mov    %al,%dl
    mov    %al,%ah
    shl    $0x10,%eax
    mov    %dl,%al
    mov    %al,%ah
    mov    -0x54(%ebp),%edx
    mov    -0x50(%ebp),%ebx
  jump_5ee1c:
    mov    -0x58(%ebp),%ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    -0x58(%ebp),%ecx
    shr    $0x2,%ecx
    sub    -0x5c(%ebp),%edi
    rep stos %eax,%es:(%edi)
    add    -0x5c(%ebp),%edi
    add    %ebx,%edi
    dec    %edx
    jne    jump_5ee1c
    cld
  jump_5ee38:
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5ee40:
    mov    $0xfffffffd,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5f048:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffac,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    cmpl   $0x0,0x14(%ebp)
    je     jump_5f061
    cmpl   $0x0,0x18(%ebp)
    jne    jump_5f092
  jump_5f061:
    mov    0x10(%ebp),%eax
    add    0x18(%ebp),%eax
    mov    0xc(%ebp),%ebx
    add    0x14(%ebp),%ebx
    mov    0x10(%ebp),%ecx
    sub    0x18(%ebp),%ecx
    mov    0xc(%ebp),%edx
    sub    0x14(%ebp),%edx
    push   0x1c(%ebp)
    push   $0x0
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    push   0x8(%ebp)
    call   func_5c001
    add    $0x1c,%esp
    jmp    jump_5f383
  jump_5f092:
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x4c(%ebp)
    jle    jump_5f104
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5f104
    mov    0x4(%esi),%eax
    mov    %eax,-0x50(%ebp)
    cmp    $0x0,%eax
    jg     jump_5f0b8
    mov    $0x0,%eax
  jump_5f0b8:
    mov    %eax,-0x38(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x54(%ebp)
    cmp    $0x0,%eax
    jg     jump_5f0cb
    mov    $0x0,%eax
  jump_5f0cb:
    mov    %eax,-0x3c(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x4c(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5f0db
    mov    %edx,%eax
  jump_5f0db:
    mov    %eax,-0x40(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5f0ea
    mov    %edx,%eax
  jump_5f0ea:
    mov    %eax,-0x44(%ebp)
    mov    -0x40(%ebp),%eax
    cmp    -0x38(%ebp),%eax
    jl     jump_5f10f
    mov    -0x44(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jl     jump_5f10f
    mov    (%ebx),%eax
    mov    %eax,-0x48(%ebp)
    jmp    jump_5f11a
  jump_5f104:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5f10f:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5f11a:
    mov    0x1c(%ebp),%eax
    mov    %al,%ah
    mov    %eax,0x1c(%ebp)
    mov    %ax,0x1e(%ebp)
    mov    -0x50(%ebp),%eax
    add    %eax,0xc(%ebp)
    mov    -0x54(%ebp),%eax
    add    %eax,0x10(%ebp)
    mov    0xc(%ebp),%eax
    mov    %eax,-0x4(%ebp)
    mov    0x10(%ebp),%eax
    mov    %eax,-0x8(%ebp)
    movl   $0x0,-0xc(%ebp)
    mov    0x18(%ebp),%eax
    mov    %eax,-0x10(%ebp)
    mul    %eax
    mov    %eax,-0x1c(%ebp)
    shl    %eax
    mov    %eax,-0x20(%ebp)
    mov    0x14(%ebp),%eax
    mul    %eax
    mov    %eax,-0x14(%ebp)
    shl    %eax
    mov    %eax,-0x18(%ebp)
    movl   $0x0,-0x24(%ebp)
    mov    -0x18(%ebp),%eax
    mull   0x18(%ebp)
    mov    %eax,-0x28(%ebp)
    mov    -0x14(%ebp),%eax
    shr    $0x2,%eax
    add    -0x1c(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    mov    -0x14(%ebp),%eax
    mull   0x18(%ebp)
    sub    %eax,-0x2c(%ebp)
    mov    0x18(%ebp),%ebx
  jump_5f18a:
    mov    -0x24(%ebp),%eax
    sub    -0x28(%ebp),%eax
    jns    jump_5f280
    push   %ebx
    mov    0x1c(%ebp),%ecx
    mov    -0x4(%ebp),%edi
    add    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    add    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5f1c8
    cmp    -0x40(%ebp),%edi
    jg     jump_5f1c8
    cmp    -0x3c(%ebp),%edx
    jl     jump_5f1c8
    cmp    -0x44(%ebp),%edx
    jg     jump_5f1c8
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5f1c8:
    mov    -0x4(%ebp),%edi
    add    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    sub    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5f1f6
    cmp    -0x40(%ebp),%edi
    jg     jump_5f1f6
    cmp    -0x3c(%ebp),%edx
    jl     jump_5f1f6
    cmp    -0x44(%ebp),%edx
    jg     jump_5f1f6
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5f1f6:
    mov    -0x4(%ebp),%edi
    sub    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    add    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5f224
    cmp    -0x40(%ebp),%edi
    jg     jump_5f224
    cmp    -0x3c(%ebp),%edx
    jl     jump_5f224
    cmp    -0x44(%ebp),%edx
    jg     jump_5f224
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5f224:
    mov    -0x4(%ebp),%edi
    sub    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    sub    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5f252
    cmp    -0x40(%ebp),%edi
    jg     jump_5f252
    cmp    -0x3c(%ebp),%edx
    jl     jump_5f252
    cmp    -0x44(%ebp),%edx
    jg     jump_5f252
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5f252:
    pop    %ebx
    cmpl   $0x0,-0x2c(%ebp)
    js     jump_5f269
    decl   -0x10(%ebp)
    dec    %ebx
    mov    -0x28(%ebp),%eax
    sub    -0x18(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    %eax,-0x2c(%ebp)
  jump_5f269:
    incl   -0xc(%ebp)
    mov    -0x24(%ebp),%eax
    add    -0x20(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    add    -0x1c(%ebp),%eax
    add    %eax,-0x2c(%ebp)
    jmp    jump_5f18a
  jump_5f280:
    mov    -0x14(%ebp),%eax
    sub    -0x1c(%ebp),%eax
    mov    %eax,%edx
    sar    %eax
    add    %edx,%eax
    sub    -0x24(%ebp),%eax
    sub    -0x28(%ebp),%eax
    sar    %eax
    add    %eax,-0x2c(%ebp)
  jump_5f297:
    push   %ebx
    mov    0x1c(%ebp),%ecx
    mov    -0x4(%ebp),%edi
    add    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    add    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5f2c9
    cmp    -0x40(%ebp),%edi
    jg     jump_5f2c9
    cmp    -0x3c(%ebp),%edx
    jl     jump_5f2c9
    cmp    -0x44(%ebp),%edx
    jg     jump_5f2c9
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5f2c9:
    mov    -0x4(%ebp),%edi
    add    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    sub    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5f2f7
    cmp    -0x40(%ebp),%edi
    jg     jump_5f2f7
    cmp    -0x3c(%ebp),%edx
    jl     jump_5f2f7
    cmp    -0x44(%ebp),%edx
    jg     jump_5f2f7
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5f2f7:
    mov    -0x4(%ebp),%edi
    sub    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    add    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5f325
    cmp    -0x40(%ebp),%edi
    jg     jump_5f325
    cmp    -0x3c(%ebp),%edx
    jl     jump_5f325
    cmp    -0x44(%ebp),%edx
    jg     jump_5f325
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5f325:
    mov    -0x4(%ebp),%edi
    sub    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    sub    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5f353
    cmp    -0x40(%ebp),%edi
    jg     jump_5f353
    cmp    -0x3c(%ebp),%edx
    jl     jump_5f353
    cmp    -0x44(%ebp),%edx
    jg     jump_5f353
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5f353:
    pop    %ebx
    cmpl   $0x0,-0x2c(%ebp)
    jns    jump_5f369
    incl   -0xc(%ebp)
    mov    -0x24(%ebp),%eax
    add    -0x20(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    add    %eax,-0x2c(%ebp)
  jump_5f369:
    decl   -0x10(%ebp)
    mov    -0x28(%ebp),%eax
    sub    -0x18(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    -0x14(%ebp),%eax
    sub    %eax,-0x2c(%ebp)
    dec    %ebx
    js     jump_5f383
    jmp    jump_5f297
  jump_5f383:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5f389:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffac,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    cmpl   $0x0,0x14(%ebp)
    je     jump_5f3a2
    cmpl   $0x0,0x18(%ebp)
    jne    jump_5f3d3
  jump_5f3a2:
    mov    0x10(%ebp),%eax
    add    0x18(%ebp),%eax
    mov    0xc(%ebp),%ebx
    add    0x14(%ebp),%ebx
    mov    0x10(%ebp),%ecx
    sub    0x18(%ebp),%ecx
    mov    0xc(%ebp),%edx
    sub    0x14(%ebp),%edx
    push   0x1c(%ebp)
    push   $0x0
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    push   0x8(%ebp)
    call   func_5c001
    add    $0x1c,%esp
    jmp    jump_5f681
  jump_5f3d3:
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x4c(%ebp)
    jle    jump_5f445
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5f445
    mov    0x4(%esi),%eax
    mov    %eax,-0x50(%ebp)
    cmp    $0x0,%eax
    jg     jump_5f3f9
    mov    $0x0,%eax
  jump_5f3f9:
    mov    %eax,-0x38(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x54(%ebp)
    cmp    $0x0,%eax
    jg     jump_5f40c
    mov    $0x0,%eax
  jump_5f40c:
    mov    %eax,-0x3c(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x4c(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5f41c
    mov    %edx,%eax
  jump_5f41c:
    mov    %eax,-0x40(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5f42b
    mov    %edx,%eax
  jump_5f42b:
    mov    %eax,-0x44(%ebp)
    mov    -0x40(%ebp),%eax
    cmp    -0x38(%ebp),%eax
    jl     jump_5f450
    mov    -0x44(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jl     jump_5f450
    mov    (%ebx),%eax
    mov    %eax,-0x48(%ebp)
    jmp    jump_5f45b
  jump_5f445:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5f450:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5f45b:
    mov    0x1c(%ebp),%eax
    mov    %al,%ah
    mov    %eax,0x1c(%ebp)
    mov    %ax,0x1e(%ebp)
    mov    -0x50(%ebp),%eax
    add    %eax,0xc(%ebp)
    mov    -0x54(%ebp),%eax
    add    %eax,0x10(%ebp)
    mov    0xc(%ebp),%eax
    mov    %eax,-0x4(%ebp)
    mov    0x10(%ebp),%eax
    mov    %eax,-0x8(%ebp)
    movl   $0x0,-0xc(%ebp)
    mov    0x18(%ebp),%eax
    mov    %eax,-0x10(%ebp)
    mul    %eax
    mov    %eax,-0x1c(%ebp)
    shl    %eax
    mov    %eax,-0x20(%ebp)
    mov    0x14(%ebp),%eax
    mul    %eax
    mov    %eax,-0x14(%ebp)
    shl    %eax
    mov    %eax,-0x18(%ebp)
    movl   $0x0,-0x24(%ebp)
    mov    -0x18(%ebp),%eax
    mull   0x18(%ebp)
    mov    %eax,-0x28(%ebp)
    mov    -0x14(%ebp),%eax
    shr    $0x2,%eax
    add    -0x1c(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    mov    -0x14(%ebp),%eax
    mull   0x18(%ebp)
    sub    %eax,-0x2c(%ebp)
    mov    0x18(%ebp),%ebx
  jump_5f4cb:
    mov    -0x24(%ebp),%eax
    sub    -0x28(%ebp),%eax
    js     jump_5f4d8
    jmp    jump_5f5a0
  jump_5f4d8:
    mov    -0x4(%ebp),%edi
    add    -0xc(%ebp),%edi
    cmp    -0x38(%ebp),%edi
    jl     jump_5f573
    cmp    -0x40(%ebp),%edi
    jl     jump_5f4ef
    mov    -0x40(%ebp),%edi
  jump_5f4ef:
    mov    %edi,-0x34(%ebp)
    mov    -0x4(%ebp),%edi
    sub    -0xc(%ebp),%edi
    cmp    -0x40(%ebp),%edi
    jg     jump_5f573
    cmp    -0x38(%ebp),%edi
    jg     jump_5f505
    mov    -0x38(%ebp),%edi
  jump_5f505:
    mov    %edi,-0x30(%ebp)
    mov    -0x8(%ebp),%edx
    add    -0x10(%ebp),%edx
    cmp    -0x3c(%ebp),%edx
    jl     jump_5f573
    cmp    -0x44(%ebp),%edx
    jg     jump_5f53c
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    -0x34(%ebp),%ecx
    sub    -0x30(%ebp),%ecx
    inc    %ecx
    mov    0x1c(%ebp),%eax
    mov    %ecx,%edx
    and    $0x3,%edx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    %edx,%ecx
    rep stos %al,%es:(%edi)
  jump_5f53c:
    mov    -0x30(%ebp),%edi
    mov    -0x8(%ebp),%edx
    sub    -0x10(%ebp),%edx
    cmp    -0x3c(%ebp),%edx
    jl     jump_5f573
    cmp    -0x44(%ebp),%edx
    jg     jump_5f573
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    -0x34(%ebp),%ecx
    sub    -0x30(%ebp),%ecx
    inc    %ecx
    mov    0x1c(%ebp),%eax
    mov    %ecx,%edx
    and    $0x3,%edx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    %edx,%ecx
    rep stos %al,%es:(%edi)
  jump_5f573:
    cmpl   $0x0,-0x2c(%ebp)
    js     jump_5f589
    decl   -0x10(%ebp)
    dec    %ebx
    mov    -0x28(%ebp),%eax
    sub    -0x18(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    %eax,-0x2c(%ebp)
  jump_5f589:
    incl   -0xc(%ebp)
    mov    -0x24(%ebp),%eax
    add    -0x20(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    add    -0x1c(%ebp),%eax
    add    %eax,-0x2c(%ebp)
    jmp    jump_5f4cb
  jump_5f5a0:
    mov    -0x14(%ebp),%eax
    sub    -0x1c(%ebp),%eax
    mov    %eax,%edx
    sar    %eax
    add    %edx,%eax
    sub    -0x24(%ebp),%eax
    sub    -0x28(%ebp),%eax
    sar    %eax
    add    %eax,-0x2c(%ebp)
  jump_5f5b7:
    mov    -0x4(%ebp),%edi
    add    -0xc(%ebp),%edi
    cmp    -0x38(%ebp),%edi
    jl     jump_5f652
    cmp    -0x40(%ebp),%edi
    jl     jump_5f5ce
    mov    -0x40(%ebp),%edi
  jump_5f5ce:
    mov    %edi,-0x34(%ebp)
    mov    -0x4(%ebp),%edi
    sub    -0xc(%ebp),%edi
    cmp    -0x40(%ebp),%edi
    jg     jump_5f652
    cmp    -0x38(%ebp),%edi
    jg     jump_5f5e4
    mov    -0x38(%ebp),%edi
  jump_5f5e4:
    mov    %edi,-0x30(%ebp)
    mov    -0x8(%ebp),%edx
    add    -0x10(%ebp),%edx
    cmp    -0x3c(%ebp),%edx
    jl     jump_5f652
    cmp    -0x44(%ebp),%edx
    jg     jump_5f61b
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    -0x34(%ebp),%ecx
    sub    -0x30(%ebp),%ecx
    inc    %ecx
    mov    0x1c(%ebp),%eax
    mov    %ecx,%edx
    and    $0x3,%edx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    %edx,%ecx
    rep stos %al,%es:(%edi)
  jump_5f61b:
    mov    -0x30(%ebp),%edi
    mov    -0x8(%ebp),%edx
    sub    -0x10(%ebp),%edx
    cmp    -0x3c(%ebp),%edx
    jl     jump_5f652
    cmp    -0x44(%ebp),%edx
    jg     jump_5f652
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    -0x34(%ebp),%ecx
    sub    -0x30(%ebp),%ecx
    inc    %ecx
    mov    0x1c(%ebp),%eax
    mov    %ecx,%edx
    and    $0x3,%edx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    %edx,%ecx
    rep stos %al,%es:(%edi)
  jump_5f652:
    cmpl   $0x0,-0x2c(%ebp)
    jns    jump_5f667
    incl   -0xc(%ebp)
    mov    -0x24(%ebp),%eax
    add    -0x20(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    add    %eax,-0x2c(%ebp)
  jump_5f667:
    decl   -0x10(%ebp)
    mov    -0x28(%ebp),%eax
    sub    -0x18(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    -0x14(%ebp),%eax
    sub    %eax,-0x2c(%ebp)
    dec    %ebx
    js     jump_5f681
    jmp    jump_5f5b7
  jump_5f681:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5f687:
/*----------------------------------------------------------------*/
    add    %al,(%eax)
    add    %eax,(%eax)
    add    %al,(%eax)
    add    %eax,(%eax)
    add    %al,(%eax)
    add    %eax,(%eax)
    (bad)
    incl   (%eax)
    add    %bh,%dh
    incl   (%eax)
    add    %bh,%dh
    incl   (%eax)
    add    %bh,%ah
    incl   (%eax)
    add    %bh,%bl
    incl   (%eax)
    add    %bh,%dl
    incl   (%eax)
    add    %bh,%al
    incl   (%eax)
    add    %dh,%dh
    incl   (%eax)
    add    %dh,%ah
    incl   (%eax)
    add    %dh,%dl
    incl   (%eax)
    add    %ch,%bh
    incl   (%eax)
    add    %ch,%ah
    incl   (%eax)
    add    %ch,%dl
    incl   (%eax)
    add    %ah,%dh
    incl   (%eax)
    add    %ah,%bl
    incl   (%eax)
    add    %ah,%al
    incl   (%eax)
    add    %bl,%ah
    incl   (%eax)
    add    %bl,%al
    incl   (%eax)
    add    %dl,%ah
    incl   (%eax)
    add    %dl,%al
    incl   (%eax)
    add    %cl,%bl
    incl   (%eax)
    add    %al,%bh
    incl   (%eax)
    add    %al,%dl
    incl   (%eax)
    add    %bh,-0x48ffff01(%ebp)
    incl   (%eax)
    add    %dh,-0x53ffff01(%edx)
    incl   (%eax)
    add    %ah,-0x5fffff01(%esi)
    incl   (%eax)
    add    %bl,-0x6cffff01(%edx)
    incl   (%eax)
    add    %cl,-0x79ffff01(%ebp)
    incl   (%eax)
    add    %bh,-0x1(%edi)
    add    %al,(%eax)
    ja     jump_5f71c
    add    %al,(%eax)
    jo     jump_5f720
    add    %al,(%eax)
    push   $0x600000ff
    incl   (%eax)
    add    %bl,-0x1(%eax)
    add    %al,(%eax)
    push   %eax
    incl   (%eax)
    add    %cl,-0x1(%eax)
    add    %al,(%eax)
    aas
    incl   (%eax)
    add    %dh,(%esi)
    incl   (%eax)
    add    %ch,0x240000ff
    incl   (%eax)
    add    %bl,(%edx)
    incl   (%eax)
    add    %dl,(%eax)
    incl   (%eax)
    add    %al,(%edi)
    incl   (%eax)
    add    %bh,%ch
    incb   (%eax)
    add    %dh,%dl
    incb   (%eax)
    add    %ch,%al
    incb   (%eax)
    add    %bl,%ch
    incb   (%eax)
    add    %dl,%dl
    incb   (%eax)
    add    %al,%bh
    incb   (%eax)
    add    %bh,-0x14f0000(%esi,%edi,8)
    add    %al,(%eax)
    movsl  %ds:(%esi),%es:(%edi)
    incb   (%eax)
    add    %bl,-0x72ffff02(%ecx)
    incb   (%eax)
    add    %al,0x740000fe(%ecx)
    incb   (%eax)
    add    %ch,-0x2(%eax)
    add    %al,(%eax)
    pop    %ebx
    incb   (%eax)
    add    %cl,-0x2(%esi)
    add    %al,(%eax)
    inc    %eax
    incb   (%eax)
    add    %dh,(%ebx)
    incb   (%eax)
    add    %ah,0x180000fe
    incb   (%eax)
    add    %cl,(%ecx)
    incb   (%eax)
    add    %bh,%bl
    std
    add    %al,(%eax)
    in     (%dx),%eax
    std
    add    %al,(%eax)
    fdivrp %st,%st(5)
    add    %al,(%eax)
    iret

vtable_60497:
    .long   0


/*----------------------------------------------------------------*/
func_6049b:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%ebx
    and    %ebx,%ebx
    jns    jump_604b9
  jump_604a9:
    add    $0xe10,%ebx
    js     jump_604a9
    jmp    jump_604b9
  jump_604b3:
    sub    $0xe10,%ebx
  jump_604b9:
    cmp    $0xe10,%ebx
    jg     jump_604b3
    cmp    $0x708,%ebx
    ja     jump_60501
    cmp    $0x384,%ebx
    ja     jump_604e4
    shl    $0x2,%ebx
    mov    func_5f687(%ebx),%eax
    neg    %ebx
    mov    vtable_60497(%ebx),%edx
    jmp    jump_60543
  jump_604e4:
    neg    %ebx
    add    $0x708,%ebx
    shl    $0x2,%ebx
    mov    func_5f687(%ebx),%eax
    neg    %eax
    neg    %ebx
    mov    vtable_60497(%ebx),%edx
    jmp    jump_60543
  jump_60501:
    neg    %ebx
    add    $0xe10,%ebx
    cmp    $0x384,%ebx
    ja     jump_60526
    shl    $0x2,%ebx
    mov    func_5f687(%ebx),%eax
    neg    %ebx
    mov    vtable_60497(%ebx),%edx
    neg    %edx
    jmp    jump_60543
  jump_60526:
    neg    %ebx
    add    $0x708,%ebx
    shl    $0x2,%ebx
    mov    func_5f687(%ebx),%eax
    neg    %eax
    neg    %ebx
    mov    vtable_60497(%ebx),%edx
    neg    %edx
  jump_60543:
    mov    0xc(%ebp),%ebx
    mov    %eax,(%ebx)
    mov    0x10(%ebp),%ebx
    mov    %edx,(%ebx)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_60579:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffe0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    lea    -0x8(%ebp),%eax
    push   %eax
    lea    -0x4(%ebp),%eax
    push   %eax
    push   0x14(%ebp)
    call   func_6049b
    add    $0xc,%esp
    mov    0x8(%ebp),%esi
    mov    0x10(%ebp),%edi
    mov    (%esi),%eax
    sub    (%edi),%eax
    shl    $0x10,%eax
    imull  0x18(%ebp)
    add    $0x8000,%eax
    adc    $0x0,%edx
    mov    %edx,%ebx
    mov    %ebx,%eax
    imull  -0x4(%ebp)
    add    $0x8000,%eax
    adc    $0x0,%edx
    mov    %dx,%ax
    ror    $0x10,%eax
    mov    %eax,-0xc(%ebp)
    mov    %ebx,%eax
    imull  -0x8(%ebp)
    add    $0x8000,%eax
    adc    $0x0,%edx
    mov    %dx,%ax
    ror    $0x10,%eax
    mov    %eax,-0x14(%ebp)
    mov    0x4(%esi),%eax
    sub    0x4(%edi),%eax
    shl    $0x10,%eax
    imull  0x1c(%ebp)
    add    $0x8000,%eax
    adc    $0x0,%edx
    mov    %edx,%ecx
    mov    %ecx,%eax
    imull  -0x4(%ebp)
    add    $0x8000,%eax
    adc    $0x0,%edx
    mov    %dx,%ax
    ror    $0x10,%eax
    mov    %eax,-0x18(%ebp)
    mov    %ecx,%eax
    imull  -0x8(%ebp)
    add    $0x8000,%eax
    adc    $0x0,%edx
    mov    %dx,%ax
    ror    $0x10,%eax
    mov    %eax,-0x10(%ebp)
    mov    0xc(%ebp),%esi
    mov    -0xc(%ebp),%edx
    sub    -0x10(%ebp),%edx
    add    (%edi),%edx
    mov    %edx,(%esi)
    mov    -0x18(%ebp),%edx
    add    -0x14(%ebp),%edx
    add    0x4(%edi),%edx
    mov    %edx,0x4(%esi)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_60640:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%esi
    mov    0x8(%esi),%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_60653:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0xc(%ebp),%eax
    shl    $0x2,%eax
    add    0x8(%ebp),%eax
    add    $0x10,%eax
    mov    (%eax),%esi
    add    0x8(%ebp),%esi
    mov    (%esi),%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_60673:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffd0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x28(%ebp)
    jle    jump_606f2
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_606f2
    mov    0x4(%esi),%eax
    mov    %eax,-0x2c(%ebp)
    cmp    $0x0,%eax
    jg     jump_606a6
    mov    $0x0,%eax
  jump_606a6:
    mov    %eax,-0x14(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x30(%ebp)
    cmp    $0x0,%eax
    jg     jump_606b9
    mov    $0x0,%eax
  jump_606b9:
    mov    %eax,-0x18(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x28(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_606c9
    mov    %edx,%eax
  jump_606c9:
    mov    %eax,-0x1c(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_606d8
    mov    %edx,%eax
  jump_606d8:
    mov    %eax,-0x20(%ebp)
    mov    -0x1c(%ebp),%eax
    cmp    -0x14(%ebp),%eax
    jl     jump_606fd
    mov    -0x20(%ebp),%eax
    cmp    -0x18(%ebp),%eax
    jl     jump_606fd
    mov    (%ebx),%eax
    mov    %eax,-0x24(%ebp)
    jmp    jump_60708
  jump_606f2:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_606fd:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_60708:
    mov    -0x2c(%ebp),%eax
    add    %eax,0xc(%ebp)
    mov    -0x30(%ebp),%eax
    add    %eax,0x10(%ebp)
    mov    0x14(%ebp),%esi
    mov    0x8(%esi),%edx
    mov    0x18(%ebp),%eax
    shl    $0x2,%eax
    add    0x14(%ebp),%eax
    add    $0x10,%eax
    mov    (%eax),%esi
    add    0x14(%ebp),%esi
    movl   $0x0,-0x8(%ebp)
    mov    (%esi),%ecx
    mov    %ecx,-0x4(%ebp)
    cmp    $0x0,%ecx
    je     jump_607fa
    add    $0x4,%esi
    mov    0x8(%ebp),%edi
    mov    -0x1c(%ebp),%eax
    inc    %eax
    sub    %ecx,%eax
    sub    0xc(%ebp),%eax
    jns    jump_60759
    add    %eax,%ecx
    jle    jump_607fa
  jump_60759:
    mov    0xc(%ebp),%eax
    sub    -0x14(%ebp),%eax
    jns    jump_6076e
    add    %eax,%ecx
    jle    jump_607fa
    sub    %eax,%esi
    sub    %eax,0xc(%ebp)
  jump_6076e:
    mov    -0x20(%ebp),%eax
    inc    %eax
    sub    %edx,%eax
    sub    0x10(%ebp),%eax
    jns    jump_6077d
    add    %eax,%edx
    jle    jump_607fa
  jump_6077d:
    mov    0x10(%ebp),%eax
    sub    -0x18(%ebp),%eax
    jns    jump_60792
    add    %eax,%edx
    jle    jump_607fa
    sub    %eax,0x10(%ebp)
    imul   -0x4(%ebp),%eax
    sub    %eax,%esi
  jump_60792:
    mov    %edx,-0x10(%ebp)
    mov    0x10(%ebp),%eax
    imull  -0x28(%ebp)
    add    -0x24(%ebp),%eax
    add    0xc(%ebp),%eax
    mov    %eax,%edi
    mov    %ecx,-0x8(%ebp)
    sub    %ecx,-0x4(%ebp)
    mov    -0x28(%ebp),%eax
    sub    %ecx,%eax
    mov    %eax,-0xc(%ebp)
    mov    -0x10(%ebp),%edx
    cmpl   $0x0,0x1c(%ebp)
    jne    jump_607dc
  jump_607ba:
    shr    %ecx
    rep movsw %ds:(%esi),%es:(%edi)
    adc    $0x0,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    mov    -0x8(%ebp),%ecx
    add    -0x4(%ebp),%esi
    add    -0xc(%ebp),%edi
    dec    %edx
    jne    jump_607ba
    mov    -0x4(%ebp),%eax
    add    -0x8(%ebp),%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_607dc:
    jecxz  jump_607fa
    mov    0x1c(%ebp),%ebx
  jump_607e1:
    mov    (%esi),%al
    xlat   %ds:(%ebx)
    cmp    $0xff,%al
    je     jump_607ea
    mov    %al,(%edi)
  jump_607ea:
    inc    %esi
    inc    %edi
    loop   jump_607e1
    mov    -0x8(%ebp),%ecx
    add    -0x4(%ebp),%esi
    add    -0xc(%ebp),%edi
    dec    %edx
    jne    jump_607e1
  jump_607fa:
    mov    -0x4(%ebp),%eax
    add    -0x8(%ebp),%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_60806:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x18(%ebp),%esi
    mov    0xc(%ebp),%edi
  jump_60816:
    movzbl (%esi),%eax
    push   0x1c(%ebp)
    push   %eax
    push   0x14(%ebp)
    push   0x10(%ebp)
    push   %edi
    push   0x8(%ebp)
    call   func_60673
    add    $0x18,%esp
    add    %eax,%edi
    inc    %esi
    cmpb   $0x0,(%esi)
    jne    jump_60816
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6083d:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffdc,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x1c(%ebp)
    jle    jump_608bc
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_608bc
    mov    0x4(%esi),%eax
    mov    %eax,-0x20(%ebp)
    cmp    $0x0,%eax
    jg     jump_60870
    mov    $0x0,%eax
  jump_60870:
    mov    %eax,-0x8(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x24(%ebp)
    cmp    $0x0,%eax
    jg     jump_60883
    mov    $0x0,%eax
  jump_60883:
    mov    %eax,-0xc(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x1c(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_60893
    mov    %edx,%eax
  jump_60893:
    mov    %eax,-0x10(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_608a2
    mov    %edx,%eax
  jump_608a2:
    mov    %eax,-0x14(%ebp)
    mov    -0x10(%ebp),%eax
    cmp    -0x8(%ebp),%eax
    jl     jump_608c7
    mov    -0x14(%ebp),%eax
    cmp    -0xc(%ebp),%eax
    jl     jump_608c7
    mov    (%ebx),%eax
    mov    %eax,-0x18(%ebp)
    jmp    jump_608d2
  jump_608bc:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_608c7:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_608d2:
    movl   $0x0,-0x4(%ebp)
    mov    -0x20(%ebp),%eax
    add    %eax,-0x4(%ebp)
    mov    -0x24(%ebp),%eax
    add    %eax,0xc(%ebp)
    mov    0x10(%ebp),%esi
    mov    0x8(%ebp),%edi
    mov    0x14(%ebp),%ecx
    mov    -0x10(%ebp),%eax
    sub    -0x4(%ebp),%eax
    inc    %eax
    sub    %ecx,%eax
    jns    jump_608fd
    add    %eax,%ecx
    jle    jump_6093a
  jump_608fd:
    mov    -0x4(%ebp),%eax
    sub    -0x8(%ebp),%eax
    jns    jump_6090e
    add    %eax,%ecx
    jle    jump_6093a
    sub    %eax,%esi
    sub    %eax,-0x4(%ebp)
  jump_6090e:
    mov    -0x14(%ebp),%eax
    sub    0xc(%ebp),%eax
    js     jump_6093a
    mov    0xc(%ebp),%eax
    sub    -0xc(%ebp),%eax
    js     jump_6093a
    mov    0xc(%ebp),%eax
    imull  -0x1c(%ebp)
    add    -0x18(%ebp),%eax
    add    -0x4(%ebp),%eax
    mov    %eax,%edi
    mov    %ecx,%edx
    and    $0x3,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    mov    %edx,%ecx
    shr    $0x2,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
  jump_6093a:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_60940:
/*----------------------------------------------------------------*/
    inc    %edx
    dec    %ebp
    dec    %eax
    inc    %esp
    inc    %ebx
    dec    %ebp
    inc    %ecx
    push   %eax
    inc    %edx
    dec    %edi
    inc    %esp
    pop    %ecx
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0xc(%ebp),%esi
    add    $0xc,%esi
  jump_6095c:
    cmpb   $0x0,(%esi)
    jne    jump_60964
    inc    %esi
    jmp    jump_6095c
  jump_60964:
    mov    $0x2,%ecx
    mov    0x8(%ebp),%edi
    mov    %esi,%eax
    repz cmpsw %es:(%edi),%ds:(%esi)
    je     jump_60985
    mov    %eax,%esi
    add    $0x6,%esi
    lods   %ds:(%esi),%ax
    xchg   %al,%ah
    and    $0xffff,%eax
    add    %eax,%esi
    jmp    jump_6095c
  jump_60985:
    add    $0x8,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_60c87:
/*----------------------------------------------------------------*/
    mov    $0x0,%ebx
    mov    %ecx,%eax
    add    $0x2,%eax
    mov    %eax,(%edi)
    mov    %ecx,%eax
    shl    %eax
    mov    %eax,0x4(%edi)
  jump_60c9a:
    cmp    %ecx,%ebx
    jge    jump_60cb9
    mov    %bl,0x102e(%ebx,%edi,1)
    mov    %bl,0x202e(%ebx,%edi,1)
    movw   $0xffff,0x302e(%edi,%ebx,2)
    inc    %ebx
    jmp    jump_60c9a
  jump_60cb9:
    cmp    $0x1000,%ebx
    jge    jump_60cce
    movw   $0xfffe,0x302e(%edi,%ebx,2)
    inc    %ebx
    jmp    jump_60cb9
  jump_60cce:
    ret


/*----------------------------------------------------------------*/
func_60ccf:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x10(%edi)
    jne    jump_60cde
    lods   %ds:(%esi),%al
    and    $0xff,%eax
    mov    %eax,0x10(%edi)
  jump_60cde:
    lods   %ds:(%esi),%al
    and    $0xff,%eax
    decl   0x10(%edi)
    ret


/*----------------------------------------------------------------*/
func_60ce8:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x18(%edi)
    jne    jump_60cfd
    call   func_60ccf
    mov    %eax,0x14(%edi)
    movl   $0x8,0x18(%edi)
  jump_60cfd:
    mov    %edx,%eax
    cmp    %eax,0x18(%edi)
    jge    jump_60d15
    call   func_60ccf
    mov    0x18(%edi),%ecx
    shl    %cl,%eax
    or     %eax,0x14(%edi)
    addl   $0x8,0x18(%edi)
  jump_60d15:
    mov    %edx,%ebx
    movzbl data_9844d(%ebx),%eax
    mov    0x14(%edi),%ebx
    and    %eax,%ebx
    push   %ebx
    sub    %edx,0x18(%edi)
    mov    %edx,%ecx
    shrl   %cl,0x14(%edi)
    pop    %eax
    ret


/*----------------------------------------------------------------*/
func_60d2e:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    (%edi),%ebx
    mov    %cx,0x302e(%edi,%ebx,2)
    pop    %ebx
    push   %ebx
    mov    0x102e(%ebx,%edi,1),%al
    mov    (%edi),%ebx
    mov    %al,0x202e(%ebx,%edi,1)
    mov    %ecx,%ebx
    mov    0x102e(%ebx,%edi,1),%al
    mov    (%edi),%ebx
    mov    %al,0x102e(%ebx,%edi,1)
    pop    %ebx
    incl   (%edi)
    mov    (%edi),%eax
    cmp    0x4(%edi),%eax
    jne    jump_60d73
    cmpl   $0xc,0x1c(%edi)
    jge    jump_60d73
    incl   0x1c(%edi)
    shll   0x4(%edi)
  jump_60d73:
    ret


/*----------------------------------------------------------------*/
func_60d74:
/*----------------------------------------------------------------*/
    mov    0x8(%edi),%ebx
    mov    %al,data_9714d(%ebx)
    incl   0x8(%edi)
    decl   0x20(%edi)
    cmpl   $0x0,0x20(%edi)
    jne    jump_60df0
    push   0x24(%edi)
    push   $data_9714d
    push   0xc(%edi)
    push   data_98460
    call   func_6083d
    add    $0x10,%esp
    movl   $0x0,0x8(%edi)
    mov    0x24(%edi),%eax
    mov    %eax,0x20(%edi)
    cmpb   $0x0,0x2c(%edi)
    je     jump_60dde
    movzbl 0x2d(%edi),%ebx
    movzbl data_98456(%ebx),%eax
    add    %eax,0xc(%edi)
    mov    0xc(%edi),%eax
    cmp    0x28(%edi),%eax
    jl     jump_60ddc
    incb   0x2d(%edi)
    movzbl 0x2d(%edi),%ebx
    movzbl data_9845b(%ebx),%eax
    mov    %eax,0xc(%edi)
  jump_60ddc:
    jmp    jump_60df0
  jump_60dde:
    incl   0xc(%edi)
    mov    0xc(%edi),%eax
    cmp    0x28(%edi),%eax
    jl     jump_60df0
    movl   $0x0,0xc(%edi)
  jump_60df0:
    ret


/*----------------------------------------------------------------*/
func_60df1:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffe8,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%edi
    mov    %edi,data_98460
    mov    0x10(%ebp),%edi
    mov    $0x0,%eax
    mov    $0x2e,%ecx
    mov    %ecx,%edx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %edx,%ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    0x10(%ebp),%edi
    mov    0xc(%ebp),%esi
    movzbl 0xb(%esi),%eax
    mov    %eax,-0x18(%ebp)
    mov    0xa(%esi),%al
    mov    %al,%cl
    and    $0x7,%cl
    inc    %cl
    mov    $0x1,%ebx
    shl    %cl,%ebx
    add    $0xd,%esi
    test   $0x80,%al
    je     jump_60e4c
    imul   $0x3,%ebx,%ebx
    add    %ebx,%esi
  jump_60e4c:
    movzwl 0x5(%esi),%eax
    mov    %eax,0x24(%edi)
    movzwl 0x7(%esi),%eax
    mov    %eax,0x28(%edi)
    movzbl 0x9(%esi),%eax
    mov    %al,0x2c(%edi)
    andb   $0x40,0x2c(%edi)
    add    $0xa,%esi
    test   $0x80,%al
    je     jump_60e7f
    mov    %al,%cl
    and    $0x7,%cl
    inc    %cl
    mov    $0x1,%ebx
    shl    %cl,%ebx
    imul   $0x3,%ebx,%ebx
    add    %ebx,%esi
  jump_60e7f:
    movl   $0x0,0x10(%edi)
    lods   %ds:(%esi),%al
    movzbl %al,%ecx
    mov    $0x8,%edx
    push   %ecx
    push   %edx
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    %eax,-0x4(%ebp)
    inc    %eax
    mov    %eax,-0x8(%ebp)
    inc    %ecx
    mov    %ecx,0x1c(%edi)
    mov    -0x4(%ebp),%ecx
    call   func_60c87
    movl   $0xffff,-0x10(%ebp)
    movl   $0x0,-0x14(%ebp)
    movb   $0x0,0x2d(%edi)
    mov    0x24(%edi),%eax
    mov    %eax,0x20(%edi)
    movl   $0x0,0x8(%edi)
    movl   $0x0,0xc(%edi)
    pop    %edx
    pop    %ecx
  jump_60ed3:
    push   %ecx
    push   %edx
    mov    0x1c(%edi),%edx
    cmp    $0x8,%edx
    jg     jump_60ee6
    push   %edx
    call   func_60ce8
    pop    %edx
    jmp    jump_60f03
  jump_60ee6:
    push   %edx
    mov    $0x8,%edx
    call   func_60ce8
    pop    %edx
    push   %eax
    push   %edx
    sub    $0x8,%edx
    call   func_60ce8
    pop    %edx
    shl    $0x8,%eax
    pop    %ebx
    or     %ebx,%eax
  jump_60f03:
    mov    %eax,-0xc(%ebp)
    pop    %edx
    pop    %ecx
    cmp    -0x4(%ebp),%eax
    jne    jump_60f2b
    push   %ecx
    push   %edx
    mov    -0x4(%ebp),%ecx
    call   func_60c87
    pop    %edx
    pop    %ecx
    mov    %ecx,%eax
    inc    %eax
    mov    %eax,0x1c(%edi)
    movl   $0xffff,-0x10(%ebp)
    jmp    jump_60ff6
  jump_60f2b:
    cmp    -0x8(%ebp),%eax
    jne    jump_60f57
  jump_60f30:
    cmpl   $0x0,0x10(%edi)
    je     jump_60f3c
    lods   %ds:(%esi),%al
    decl   0x10(%edi)
    jmp    jump_60f30
  jump_60f3c:
    lods   %ds:(%esi),%al
    and    $0xff,%eax
    mov    %eax,0x10(%edi)
    cmpl   $0x0,0x10(%edi)
    jne    jump_60f30
    movl   $0xffff,-0x14(%ebp)
    jmp    jump_60ff6
  jump_60f57:
    mov    -0xc(%ebp),%ebx
    cmpw   $0xfffe,0x302e(%edi,%ebx,2)
    je     jump_60f7c
    cmpl   $0xffff,-0x10(%ebp)
    je     jump_60f7a
    push   %ecx
    push   %edx
    mov    -0x10(%ebp),%ecx
    call   func_60d2e
    pop    %edx
    pop    %ecx
  jump_60f7a:
    jmp    jump_60f8b
  jump_60f7c:
    push   %ecx
    push   %edx
    mov    -0x10(%ebp),%ebx
    mov    -0x10(%ebp),%ecx
    call   func_60d2e
    pop    %edx
    pop    %ecx
  jump_60f8b:
    push   %ecx
    push   %edx
    mov    -0xc(%ebp),%ebx
    push   %esi
    mov    $0x0,%ecx
    mov    %edi,%esi
    add    $0x2e,%esi
  jump_60f9b:
    mov    0x202e(%ebx,%edi,1),%al
    mov    %al,(%esi)
    inc    %esi
    inc    %ecx
    movzwl 0x302e(%edi,%ebx,2),%ebx
    cmp    $0xffff,%ebx
    jne    jump_60f9b
    cmp    $0x1,%edx
    jne    jump_60fdc
  jump_60fbb:
    dec    %esi
    mov    (%esi),%al
    and    $0x1,%eax
    push   %ecx
    call   func_60d74
    pop    %ecx
    mov    (%esi),%al
    and    $0xff,%eax
    shr    %eax
    push   %ecx
    call   func_60d74
    pop    %ecx
    loop   jump_60fbb
    jmp    jump_60fed
  jump_60fdc:
    dec    %esi
    mov    (%esi),%al
    and    $0xff,%eax
    push   %ecx
    call   func_60d74
    pop    %ecx
    loop   jump_60fdc
  jump_60fed:
    pop    %esi
    pop    %edx
    pop    %ecx
    mov    -0xc(%ebp),%eax
    mov    %eax,-0x10(%ebp)
  jump_60ff6:
    cmpl   $0x0,-0x14(%ebp)
    jne    jump_61001
    jmp    jump_60ed3
  jump_61001:
    mov    -0x18(%ebp),%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_610e8:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%esi
    add    $0x8,%esi
    mov    0xc(%ebp),%eax
    shl    $0x3,%eax
    add    %eax,%esi
    mov    (%esi),%esi
    add    0x8(%ebp),%esi
    mov    0x10(%esi),%eax
    sub    0x8(%esi),%eax
    inc    %eax
    mov    0x14(%esi),%ebx
    sub    0xc(%esi),%ebx
    inc    %ebx
    shl    $0x10,%eax
    mov    %bx,%ax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6111c:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%esi
    add    $0x8,%esi
    mov    0xc(%ebp),%eax
    shl    $0x3,%eax
    add    %eax,%esi
    mov    (%esi),%esi
    add    0x8(%ebp),%esi
    mov    0x8(%esi),%eax
    shl    $0x10,%eax
    mov    0xc(%esi),%ax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_61223:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%esi
    mov    0x4(%esi),%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_612f2:
/*----------------------------------------------------------------*/
    mov    %ebx,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_615ed:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xfffffff0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    $data_97e4d,%edi
    mov    $0x0,%eax
    mov    $0x40,%ecx
    rep stos %eax,%es:(%edi)
    mov    0x8(%ebp),%esi
    mov    0x4(%esi),%eax
    inc    %eax
    mov    0x8(%esi),%ecx
    inc    %ecx
    imul   %eax,%ecx
    mov    (%esi),%esi
    mov    $data_9744d,%edi
    movl   $0xffffffff,-0x4(%ebp)
  jump_61627:
    mov    $0x0,%eax
    lods   %ds:(%esi),%al
    cmpb   $0x0,data_97e4d(%eax)
    jne    jump_6165a
    orb    $0x1,data_97e4d(%eax)
    stos   %al,%es:(%edi)
    incl   -0x4(%ebp)
    mov    %eax,%ebx
    shl    %ebx
    add    %eax,%ebx
    add    $data_9714d,%ebx
    push   %ecx
    push   %ebx
    push   %eax
    call   *data_96bf4
    add    $0x8,%esp
    pop    %ecx
  jump_6165a:
    dec    %ecx
    jne    jump_61627
    movl   $0x0,-0x8(%ebp)
    mov    -0x4(%ebp),%ecx
    mov    $0x0,%ebx
    mov    0xc(%ebp),%esi
  jump_6166f:
    movzbl data_9744d(%ecx),%eax
    mov    %eax,%ebx
    shl    %ebx
    add    %eax,%ebx
    mov    $0x2,%edx
  jump_61681:
    mov    $0xff,%ah
    mov    data_9714d(%ebx),%al
    sub    (%ebx,%esi,1),%al
    jge    jump_61692
    mov    $0x1,%ah
    neg    %al
  jump_61692:
    mov    %ah,data_97e4d(%ebx)
    mov    %al,data_9754d(%ebx)
    cmp    -0x8(%ebp),%al
    jle    jump_616a6
    mov    %al,-0x8(%ebp)
  jump_616a6:
    inc    %ebx
    dec    %edx
    jns    jump_61681
    dec    %ecx
    jns    jump_6166f
    mov    -0x4(%ebp),%ecx
    mov    $data_9814d,%edi
    mov    -0x8(%ebp),%al
    shr    %al
    mov    %al,%ah
    shr    %ecx
    rep stos %ax,%es:(%edi)
    adc    $0x0,%ecx
    rep stos %al,%es:(%edi)
    movzbl -0x8(%ebp),%esi
    cmp    $0x0,%esi
    je     jump_6176b
    mov    0x10(%ebp),%eax
    mov    $0x0,%edx
    shld   $0x10,%eax,%edx
    shl    $0x10,%eax
    div    %esi
    mov    %eax,-0xc(%ebp)
    movl   $0x8000,-0x10(%ebp)
  jump_616ee:
    mov    -0x4(%ebp),%ecx
  jump_616f1:
    movzbl data_9744d(%ecx),%eax
    mov    %eax,%ebx
    shl    %ebx
    add    %eax,%ebx
    mov    $0x2,%edx
  jump_61703:
    mov    data_9814d(%edx,%ebx,1),%al
    add    data_9754d(%edx,%ebx,1),%al
    cmp    -0x8(%ebp),%al
    jl     jump_61727
    sub    -0x8(%ebp),%al
    mov    data_97e4d(%edx,%ebx,1),%ah
    add    %ah,data_9714d(%edx,%ebx,1)
  jump_61727:
    mov    %al,data_9814d(%edx,%ebx,1)
    dec    %edx
    jns    jump_61703
    push   %ecx
    mov    %ebx,%eax
    add    $data_9714d,%eax
    push   %eax
    movzbl data_9744d(%ecx),%eax
    push   %eax
    call   *data_96bf8
    add    $0x8,%esp
    pop    %ecx
    dec    %ecx
    jns    jump_616f1
    mov    -0xc(%ebp),%eax
    add    %eax,-0x10(%ebp)
    cmpw   $0x1,-0xe(%ebp)
    jl     jump_61768
  jump_6175c:
    call   *data_96be8
    decw   -0xe(%ebp)
    jne    jump_6175c
  jump_61768:
    dec    %esi
    jne    jump_616ee
  jump_6176b:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_61800:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%ecx
    inc    %ecx
    mov    %ecx,data_985d0
    mov    0xc(%esi),%eax
    mov    0x4(%ebx),%ecx
    cmp    %eax,%ecx
    jl     jump_61822
    mov    %eax,%ecx
  jump_61822:
    mov    0x4(%esi),%eax
    mov    $0x0,%edi
    cmp    %eax,%edi
    jg     jump_61830
    mov    %eax,%edi
  jump_61830:
    sub    %edi,%ecx
    jl     jump_61b1d
    mov    %ecx,data_985c4
    mov    0x10(%esi),%eax
    mov    0x8(%ebx),%ecx
    cmp    %eax,%ecx
    jl     jump_6184a
    mov    %eax,%ecx
  jump_6184a:
    mov    0x8(%esi),%edx
    mov    $0x0,%eax
    cmp    %edx,%eax
    jg     jump_61858
    mov    %edx,%eax
  jump_61858:
    sub    %eax,%ecx
    jl     jump_61b1d
    mov    %ecx,data_985c8
    mull   data_985d0
    add    %edi,%eax
    add    (%ebx),%eax
    mov    %eax,data_985cc
    push   %ds
    pop    %es
    mov    0x10(%ebp),%ebx
    mov    0xc(%ebp),%eax
    shl    $0x3,%eax
    mov    %eax,%edx
    shl    %eax
    add    %edx,%eax
    add    %ebx,%eax
    mov    %ebx,data_985e8
    mov    %eax,data_985ec
    mov    0x8(%ebx),%eax
    add    $0x8000,%eax
    shr    $0x10,%eax
    mov    %al,%ah
    mov    %eax,%edx
    shl    $0x10,%eax
    or     %edx,%eax
    mov    %eax,data_9866c
    movl   $0x0,data_985e4
    mov    $0x7fff,%esi
    mov    $0xffff8000,%edi
    mov    $0xf,%ecx
  jump_618c5:
    mov    $0x0,%edx
    mov    (%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    data_985c4,%eax
    sub    (%ebx),%eax
    shld   $0x1,%eax,%edx
    or     %edx,data_985e4
    mov    0x4(%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    data_985c8,%eax
    sub    0x4(%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    0x4(%ebx),%eax
    cmp    %esi,%eax
    jg     jump_61903
    mov    %eax,%esi
    mov    %ebx,data_985f0
  jump_61903:
    cmp    %edi,%eax
    jl     jump_61909
    mov    %eax,%edi
  jump_61909:
    and    %edx,%ecx
    add    $0x18,%ebx
    cmp    data_985ec,%ebx
    jne    jump_618c5
    or     %ecx,%ecx
    jne    jump_61b1d
    mov    data_985f0,%eax
    mov    %eax,data_985fc
    mov    %eax,data_98600
    mov    %esi,data_98610
    cmp    %esi,%edi
    je     jump_61b1d
  jump_6193b:
    mov    data_985fc,%ebx
    mov    %ebx,data_985f4
    mov    %ebx,%esi
    sub    $0x18,%esi
    cmp    data_985e8,%esi
    jge    jump_6195d
    mov    data_985ec,%esi
    sub    $0x18,%esi
  jump_6195d:
    mov    %esi,data_985fc
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    cmp    $0x0,%edx
    jge    jump_61973
    cmp    $0x0,%ecx
    jle    jump_6193b
  jump_61973:
    sub    %edx,%ecx
    je     jump_6193b
    mov    %ecx,data_98604
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98634
    mov    (%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,data_98614
  jump_619a8:
    mov    data_98600,%ebx
    mov    %ebx,data_985f8
    mov    %ebx,%esi
    add    $0x18,%esi
    cmp    data_985ec,%esi
    jl     jump_619c7
    mov    data_985e8,%esi
  jump_619c7:
    mov    %esi,data_98600
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    cmp    $0x0,%edx
    jge    jump_619dd
    cmp    $0x0,%ecx
    jle    jump_619a8
  jump_619dd:
    sub    %edx,%ecx
    je     jump_619a8
    mov    %ecx,data_98608
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98638
    mov    (%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,data_98618
    mov    data_985c8,%eax
    sub    data_98610,%eax
    sub    data_985c8,%edi
    jg     jump_61a27
    add    %edi,%eax
  jump_61a27:
    mov    %eax,data_9860c
    mov    $0x0,%eax
    sub    data_98610,%eax
    jle    jump_61a95
    sub    %eax,data_9860c
    mov    $0x0,%ecx
    mov    %ecx,data_98610
    mov    data_985f4,%ebx
    sub    0x4(%ebx),%ecx
    sub    %ecx,data_98604
    shl    $0x10,%ecx
    mov    data_98634,%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,data_98614
    mov    $0x0,%ecx
    mov    data_985f8,%ebx
    sub    0x4(%ebx),%ecx
    sub    %ecx,data_98608
    shl    $0x10,%ecx
    mov    data_98638,%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,data_98618
  jump_61a95:
    mov    data_98610,%eax
    mull   data_985d0
    mov    data_985cc,%edi
    add    %eax,%edi
    mov    data_98614,%eax
    mov    data_98618,%ebx
    cmpl   $0x0,data_985e4
    jne    jump_61b34
  jump_61abc:
    push   %eax
    push   %edi
    mov    %ebx,%edx
    cmp    %eax,%edx
    jg     jump_61ac5
    xchg   %eax,%edx
  jump_61ac5:
    sar    $0x10,%eax
    sar    $0x10,%edx
    mov    %edx,%ecx
    sub    %eax,%ecx
    inc    %ecx
    add    %eax,%edi
    mov    data_9866c,%eax
    mov    %ecx,%edx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %edx,%ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    pop    %edi
    pop    %eax
    add    data_985d0,%edi
    decl   data_9860c
    js     jump_61b1d
    je     jump_61b23
    decl   data_98604
    je     jump_61bc6
    add    data_98634,%eax
  jump_61b09:
    decl   data_98608
    je     jump_61c3a
    add    data_98638,%ebx
    jmp    jump_61abc
  jump_61b1d:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_61b23:
    add    data_98634,%eax
    add    data_98638,%ebx
    jmp    jump_61abc
  jump_61b34:
    push   %eax
    push   %edi
    mov    %ebx,%edx
    cmp    %eax,%edx
    jg     jump_61b3d
    xchg   %eax,%edx
  jump_61b3d:
    sar    $0x10,%eax
    sar    $0x10,%edx
    cmp    data_985c4,%eax
    jg     jump_61b77
    cmp    $0x0,%edx
    jl     jump_61b77
    mov    %edx,%ecx
    sub    %eax,%ecx
    inc    %ecx
    add    %eax,%edi
    sub    $0x0,%eax
    jl     jump_61bbc
  jump_61b5c:
    sub    data_985c4,%edx
    jg     jump_61bc2
  jump_61b64:
    mov    data_9866c,%eax
    mov    %ecx,%edx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %edx,%ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
  jump_61b77:
    pop    %edi
    pop    %eax
    add    data_985d0,%edi
    decl   data_9860c
    js     jump_61b1d
    je     jump_61bab
    decl   data_98604
    je     jump_61bc6
    add    data_98634,%eax
  jump_61b97:
    decl   data_98608
    je     jump_61c3a
    add    data_98638,%ebx
    jmp    jump_61b34
  jump_61bab:
    add    data_98634,%eax
    add    data_98638,%ebx
    jmp    jump_61b34
  jump_61bbc:
    sub    %eax,%edi
    add    %eax,%ecx
    jmp    jump_61b5c
  jump_61bc2:
    sub    %edx,%ecx
    jmp    jump_61b64
  jump_61bc6:
    push   %ebx
    mov    data_985fc,%ebx
    mov    %ebx,data_985f4
    mov    %ebx,%esi
    sub    $0x18,%esi
    cmp    data_985e8,%esi
    jge    jump_61be9
    mov    data_985ec,%esi
    sub    $0x18,%esi
  jump_61be9:
    mov    %esi,data_985fc
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,data_98604
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98634
    mov    (%ebx),%eax
    shl    $0x10,%eax
    add    $0x8000,%eax
    pop    %ebx
    cmpl   $0x0,data_985e4
    je     jump_61b09
    jmp    jump_61b97
  jump_61c3a:
    push   %eax
    mov    data_98600,%ebx
    mov    %ebx,data_985f8
    mov    %ebx,%esi
    add    $0x18,%esi
    cmp    data_985ec,%esi
    jl     jump_61c5a
    mov    data_985e8,%esi
  jump_61c5a:
    mov    %esi,data_98600
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,data_98608
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98638
    mov    (%ebx),%ebx
    shl    $0x10,%ebx
    add    $0x8000,%ebx
    pop    %eax
    cmpl   $0x0,data_985e4
    je     jump_61abc
    jmp    jump_61b34


/*----------------------------------------------------------------*/
func_62da5:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%ecx
    inc    %ecx
    mov    %ecx,data_985d0
    mov    0xc(%esi),%eax
    mov    0x4(%ebx),%ecx
    cmp    %eax,%ecx
    jl     jump_62dc7
    mov    %eax,%ecx
  jump_62dc7:
    mov    0x4(%esi),%eax
    mov    $0x0,%edi
    cmp    %eax,%edi
    jg     jump_62dd5
    mov    %eax,%edi
  jump_62dd5:
    sub    %edi,%ecx
    jl     jump_63200
    mov    %ecx,data_985c4
    mov    0x10(%esi),%eax
    mov    0x8(%ebx),%ecx
    cmp    %eax,%ecx
    jl     jump_62def
    mov    %eax,%ecx
  jump_62def:
    mov    0x8(%esi),%edx
    mov    $0x0,%eax
    cmp    %edx,%eax
    jg     jump_62dfd
    mov    %edx,%eax
  jump_62dfd:
    sub    %eax,%ecx
    jl     jump_63200
    mov    %ecx,data_985c8
    mull   data_985d0
    add    %edi,%eax
    add    (%ebx),%eax
    mov    %eax,data_985cc
    push   %ds
    pop    %es
    mov    0x10(%ebp),%ebx
    mov    0xc(%ebp),%eax
    shl    $0x3,%eax
    mov    %eax,%edx
    shl    %eax
    add    %edx,%eax
    add    %ebx,%eax
    mov    %ebx,data_985e8
    mov    %eax,data_985ec
    mov    $0x7fff,%esi
    mov    $0xffff8000,%edi
    mov    $0xf,%ecx
  jump_62e47:
    mov    $0x0,%edx
    mov    (%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    data_985c4,%eax
    sub    (%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    0x4(%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    data_985c8,%eax
    sub    0x4(%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    0x4(%ebx),%eax
    cmp    %esi,%eax
    jg     jump_62e7f
    mov    %eax,%esi
    mov    %ebx,data_985f0
  jump_62e7f:
    cmp    %edi,%eax
    jl     jump_62e85
    mov    %eax,%edi
  jump_62e85:
    and    %edx,%ecx
    add    $0x18,%ebx
    cmp    data_985ec,%ebx
    jne    jump_62e47
    or     %ecx,%ecx
    jne    jump_63200
    mov    data_985f0,%eax
    mov    %eax,data_985fc
    mov    %eax,data_98600
    mov    %esi,data_98610
    cmp    %esi,%edi
    je     jump_63200
  jump_62eb7:
    mov    data_985fc,%ebx
    mov    %ebx,data_985f4
    mov    %ebx,%esi
    sub    $0x18,%esi
    cmp    data_985e8,%esi
    jge    jump_62ed9
    mov    data_985ec,%esi
    sub    $0x18,%esi
  jump_62ed9:
    mov    %esi,data_985fc
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    cmp    $0x0,%edx
    jge    jump_62eef
    cmp    $0x0,%ecx
    jle    jump_62eb7
  jump_62eef:
    sub    %edx,%ecx
    je     jump_62eb7
    mov    %ecx,data_98604
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98634
    mov    (%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,data_98614
  jump_62f24:
    mov    data_98600,%ebx
    mov    %ebx,data_985f8
    mov    %ebx,%esi
    add    $0x18,%esi
    cmp    data_985ec,%esi
    jl     jump_62f43
    mov    data_985e8,%esi
  jump_62f43:
    mov    %esi,data_98600
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    cmp    $0x0,%edx
    jge    jump_62f59
    cmp    $0x0,%ecx
    jle    jump_62f24
  jump_62f59:
    sub    %edx,%ecx
    je     jump_62f24
    mov    %ecx,data_98608
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98638
    mov    (%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,data_98618
    mov    data_985c8,%eax
    sub    data_98610,%eax
    sub    data_985c8,%edi
    jg     jump_62fa3
    add    %edi,%eax
  jump_62fa3:
    mov    %eax,data_9860c
    mov    $0x0,%eax
    sub    data_98610,%eax
    jle    jump_63011
    sub    %eax,data_9860c
    mov    $0x0,%ecx
    mov    %ecx,data_98610
    mov    data_985f4,%ebx
    sub    0x4(%ebx),%ecx
    sub    %ecx,data_98604
    shl    $0x10,%ecx
    mov    data_98634,%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,data_98614
    mov    $0x0,%ecx
    mov    data_985f8,%ebx
    sub    0x4(%ebx),%ecx
    sub    %ecx,data_98608
    shl    $0x10,%ecx
    mov    data_98638,%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,data_98618
  jump_63011:
    mov    data_98610,%eax
    mull   data_985d0
    add    data_985cc,%eax
    mov    %eax,data_985dc
    mov    data_98614,%eax
    mov    data_98618,%ebx
  jump_63032:
    push   %eax
    push   %ebx
    cmp    %eax,%ebx
    jg     jump_63039
    xchg   %eax,%ebx
  jump_63039:
    sar    $0x10,%eax
    cmp    data_985c4,%eax
    jg     jump_631c3
    sar    $0x10,%ebx
    cmp    $0x0,%ebx
    jl     jump_631c3
    mov    %eax,data_98654
    mov    %ebx,data_98658
    sub    %eax,%ebx
    je     jump_63085
    mov    $0x0,%ecx
    sub    data_98654,%ecx
    jg     jump_63217
  jump_63074:
    mov    data_98658,%eax
    sub    data_985c4,%eax
    jg     jump_63222
  jump_63085:
    mov    data_98654,%eax
    mov    data_985dc,%edi
    add    %eax,%edi
    mov    data_98658,%ebx
    sub    %eax,%ebx
    mov    %edi,%eax
    add    %ebx,%eax
    mov    %eax,data_985e0
    xor    %eax,%eax
    mov    0x14(%ebp),%esi
    inc    %ebx
    test   $0x1,%edi
    je     jump_630c0
    mov    (%edi),%al
    mov    (%eax,%esi,1),%dl
    mov    %dl,(%edi)
    dec    %ebx
    je     jump_631c3
    inc    %edi
  jump_630c0:
    cmp    $0x1,%ebx
    je     jump_631b6
    push   %ebx
    shr    %ebx
    dec    %ebx
    cmp    $0x5,%ebx
    jl     jump_63149
  jump_630d2:
    mov    (%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,(%edi)
    mov    0x2(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x2(%edi)
    mov    0x4(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x4(%edi)
    mov    0x6(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x6(%edi)
    mov    0x8(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x8(%edi)
    mov    0xa(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0xa(%edi)
    add    $0xc,%edi
    sub    $0x6,%ebx
    js     jump_631ad
    cmp    $0x5,%ebx
    jge    jump_630d2
  jump_63149:
    mov    (%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,(%edi)
    dec    %ebx
    js     jump_631ad
    mov    0x2(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x2(%edi)
    dec    %ebx
    js     jump_631ad
    mov    0x4(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x4(%edi)
    dec    %ebx
    js     jump_631ad
    mov    0x6(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x6(%edi)
    dec    %ebx
    js     jump_631ad
    mov    0x8(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x8(%edi)
  jump_631ad:
    pop    %ebx
    test   $0x1,%ebx
    je     jump_631c3
  jump_631b6:
    mov    data_985e0,%edi
    mov    (%edi),%al
    mov    (%eax,%esi,1),%dl
    mov    %dl,(%edi)
  jump_631c3:
    mov    data_985d0,%edi
    add    %edi,data_985dc
    pop    %ebx
    pop    %eax
    decl   data_9860c
    js     jump_63200
    je     jump_63206
    decl   data_98604
    je     jump_6322d
    add    data_98634,%eax
  jump_631e9:
    decl   data_98608
    je     jump_63294
    add    data_98638,%ebx
    jmp    jump_63032
  jump_63200:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_63206:
    add    data_98634,%eax
    add    data_98638,%ebx
    jmp    jump_63032
  jump_63217:
    add    %ecx,data_98654
    jmp    jump_63074
  jump_63222:
    sub    %eax,data_98658
    jmp    jump_63085
  jump_6322d:
    push   %ebx
    mov    data_985fc,%ebx
    mov    %ebx,data_985f4
    mov    %ebx,%esi
    sub    $0x18,%esi
    cmp    data_985e8,%esi
    jge    jump_63250
    mov    data_985ec,%esi
    sub    $0x18,%esi
  jump_63250:
    mov    %esi,data_985fc
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,data_98604
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98634
    mov    (%ebx),%eax
    shl    $0x10,%eax
    add    $0x8000,%eax
    pop    %ebx
    jmp    jump_631e9
  jump_63294:
    push   %eax
    mov    data_98600,%ebx
    mov    %ebx,data_985f8
    mov    %ebx,%edi
    add    $0x18,%edi
    cmp    data_985ec,%edi
    jl     jump_632b4
    mov    data_985e8,%edi
  jump_632b4:
    mov    %edi,data_98600
    mov    0x4(%edi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,data_98608
    mov    (%edi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98638
    mov    (%ebx),%ebx
    shl    $0x10,%ebx
    add    $0x8000,%ebx
    pop    %eax
    jmp    jump_63032
  jump_63f91:
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    cmp    %eax,%ebx
    jg     jump_63fa0
    xchg   %eax,%ebx
    xchg   %ecx,%edx
    xchg   %esi,%edi
  jump_63fa0:
    sar    $0x10,%eax
    cmp    data_985c4,%eax
    jg     jump_646b9
    sar    $0x10,%ebx
    cmp    $0x0,%ebx
    jl     jump_646b9
    mov    %eax,data_98654
    mov    %ebx,data_98658
    mov    %ecx,data_98668
    sub    %eax,%ebx
    je     jump_640a2
    push   %ebx
    sub    %ecx,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ebx
    sar    $0x10,%edx
    idiv   %ebx
    mov    %eax,data_98660
    shld   $0x10,%eax,%edx
    pop    %ebx
    and    $0xffff,%eax
    and    $0xffff,%edx
    mov    $0x1,%ecx
    test   $0x8000,%edx
    je     jump_64015
    or     $0xffff0000,%edx
    neg    %ecx
    cmp    $0x1,%eax
    sbb    $0xffffffff,%edx
  jump_64015:
    add    %edx,%ecx
    push   %ecx
    push   %edx
    sub    %esi,%edi
    mov    %edi,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ebx
    sar    $0x10,%edx
    idiv   %ebx
    mov    %eax,data_98664
    shld   $0x10,%eax,%edx
    and    $0xffff,%eax
    and    $0xffff,%edx
    mov    data_985d4,%ecx
    test   $0x8000,%edx
    je     jump_64055
    neg    %ecx
    cmp    $0x1,%eax
    sbb    $0xffffffff,%edx
  jump_64055:
    mov    data_985d4,%eax
    imul   %dx
    cwtl
    pop    %edx
    pop    %ebx
    add    %eax,%edx
    mov    %edx,data_98684
    add    %ecx,%edx
    mov    %edx,data_98688
    add    %eax,%ebx
    mov    %ebx,data_9868c
    add    %ecx,%ebx
    mov    %ebx,data_98690
    mov    $0x0,%ecx
    sub    data_98654,%ecx
    jg     jump_64745
  jump_64091:
    mov    data_98658,%eax
    sub    data_985c4,%eax
    jg     jump_64771
  jump_640a2:
    mov    %esi,%ecx
    shr    $0x10,%esi
    mov    %esi,%eax
    mull   data_985d4
    add    data_985d8,%eax
    mov    data_98668,%esi
    shr    $0x10,%esi
    add    %eax,%esi
    mov    data_98654,%eax
    mov    data_985dc,%edi
    add    %eax,%edi
    mov    data_98658,%ebx
    sub    %eax,%ebx
    push   %ebp
    mov    data_98668,%edx
    mov    data_98660,%eax
    or     %eax,%eax
    jns    jump_640e9
    neg    %eax
    not    %edx
  jump_640e9:
    shl    $0x10,%eax
    shl    $0x10,%edx
    mov    data_98664,%ebp
    or     %ebp,%ebp
    jns    jump_640fd
    neg    %ebp
    not    %ecx
  jump_640fd:
    shl    $0x10,%ebp
    shl    $0x10,%ecx
    push   %ebx
    xor    %ebx,%ebx
    jmp    *data_98670

vtable_6410c:
    .long   func_64590
    .long   func_642c3
    .long   func_6442f
    .long   func_6411c


/*----------------------------------------------------------------*/
func_6411c:
/*----------------------------------------------------------------*/
    cmpl   $0x5,(%esp)
    jl     jump_64202
  jump_64126:
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_64135
    mov    %bl,(%edi)
  jump_64135:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_64156
    mov    %bl,0x1(%edi)
  jump_64156:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_64177
    mov    %bl,0x2(%edi)
  jump_64177:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_64198
    mov    %bl,0x3(%edi)
  jump_64198:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_641b9
    mov    %bl,0x4(%edi)
  jump_641b9:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_641da
    mov    %bl,0x5(%edi)
  jump_641da:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    add    $0x6,%edi
    subl   $0x6,(%esp)
    js     jump_642be
    cmpl   $0x5,(%esp)
    jge    jump_64126
  jump_64202:
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_64211
    mov    %bl,(%edi)
  jump_64211:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_642be
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_6423b
    mov    %bl,0x1(%edi)
  jump_6423b:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_642be
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_64261
    mov    %bl,0x2(%edi)
  jump_64261:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_642be
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_64287
    mov    %bl,0x3(%edi)
  jump_64287:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_642be
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_642ad
    mov    %bl,0x4(%edi)
  jump_642ad:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
  jump_642be:
    jmp    jump_646b5


/*----------------------------------------------------------------*/
func_642c3:
/*----------------------------------------------------------------*/
    cmpl   $0x5,(%esp)
    jl     jump_6438b
  jump_642cd:
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    mov    %bl,(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    mov    %bl,0x1(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    mov    %bl,0x2(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    mov    %bl,0x3(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    mov    %bl,0x4(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    mov    %bl,0x5(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    add    $0x6,%edi
    subl   $0x6,(%esp)
    js     jump_6442a
    cmpl   $0x5,(%esp)
    jge    jump_642cd
  jump_6438b:
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    mov    %bl,(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_6442a
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    mov    %bl,0x1(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_6442a
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    mov    %bl,0x2(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_6442a
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    mov    %bl,0x3(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_6442a
    mov    (%esi),%bl
    mov    data_98694(%ebx),%bl
    mov    %bl,0x4(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
  jump_6442a:
    jmp    jump_646b5


/*----------------------------------------------------------------*/
func_6442f:
/*----------------------------------------------------------------*/
    cmpl   $0x5,(%esp)
    jl     jump_644f1
  jump_64439:
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_64442
    mov    %bl,(%edi)
  jump_64442:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_6445d
    mov    %bl,0x1(%edi)
  jump_6445d:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_64478
    mov    %bl,0x2(%edi)
  jump_64478:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_64493
    mov    %bl,0x3(%edi)
  jump_64493:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_644ae
    mov    %bl,0x4(%edi)
  jump_644ae:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_644c9
    mov    %bl,0x5(%edi)
  jump_644c9:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    add    $0x6,%edi
    subl   $0x6,(%esp)
    js     jump_6458b
    cmpl   $0x5,(%esp)
    jge    jump_64439
  jump_644f1:
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_644fa
    mov    %bl,(%edi)
  jump_644fa:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_6458b
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_6451a
    mov    %bl,0x1(%edi)
  jump_6451a:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_6458b
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_6453a
    mov    %bl,0x2(%edi)
  jump_6453a:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_6458b
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_6455a
    mov    %bl,0x3(%edi)
  jump_6455a:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_6458b
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_6457a
    mov    %bl,0x4(%edi)
  jump_6457a:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
  jump_6458b:
    jmp    jump_646b5


/*----------------------------------------------------------------*/
func_64590:
/*----------------------------------------------------------------*/
    cmpl   $0x5,(%esp)
    jl     jump_64634
  jump_6459a:
    mov    (%esi),%bl
    mov    %bl,(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    %bl,0x1(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    %bl,0x2(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    %bl,0x3(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    %bl,0x4(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    %bl,0x5(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    add    $0x6,%edi
    subl   $0x6,(%esp)
    js     jump_646b5
    cmpl   $0x5,(%esp)
    jge    jump_6459a
  jump_64634:
    mov    (%esi),%bl
    mov    %bl,(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_646b5
    mov    (%esi),%bl
    mov    %bl,0x1(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_646b5
    mov    (%esi),%bl
    mov    %bl,0x2(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_646b5
    mov    (%esi),%bl
    mov    %bl,0x3(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
    decl   (%esp)
    js     jump_646b5
    mov    (%esi),%bl
    mov    %bl,0x4(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_98684(,%ebx,4),%esi
  jump_646b5:
    add    $0x4,%esp
    pop    %ebp
  jump_646b9:
    mov    data_985d0,%edi
    add    %edi,data_985dc
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %eax
    decl   data_9860c
    js     jump_64716
    je     jump_6471c
    decl   data_98604
    je     jump_6477c
    add    data_98634,%eax
    add    data_98644,%ecx
    add    data_9864c,%esi
  jump_646f3:
    decl   data_98608
    je     jump_64835
    add    data_98638,%ebx
    add    data_98648,%edx
    add    data_98650,%edi
    jmp    jump_63f91
  jump_64716:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_6471c:
    add    data_98634,%eax
    add    data_98644,%ecx
    add    data_9864c,%esi
    add    data_98638,%ebx
    add    data_98648,%edx
    add    data_98650,%edi
    jmp    jump_63f91
  jump_64745:
    add    %ecx,data_98654
    shl    $0x10,%ecx
    mov    data_98660,%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,data_98668
    mov    data_98664,%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,%esi
    jmp    jump_64091
  jump_64771:
    sub    %eax,data_98658
    jmp    jump_640a2
  jump_6477c:
    push   %ebx
    push   %edx
    mov    data_985fc,%ebx
    mov    %ebx,data_985f4
    mov    %ebx,%esi
    sub    $0x18,%esi
    cmp    data_985e8,%esi
    jge    jump_647a0
    mov    data_985ec,%esi
    sub    $0x18,%esi
  jump_647a0:
    mov    %esi,data_985fc
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,data_98604
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98634
    mov    data_98604,%ecx
    mov    0xc(%esi),%edx
    sub    0xc(%ebx),%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98644
    mov    data_98604,%ecx
    mov    0x10(%esi),%edx
    sub    0x10(%ebx),%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_9864c
    mov    (%ebx),%eax
    shl    $0x10,%eax
    add    $0x8000,%eax
    mov    0xc(%ebx),%ecx
    add    $0x8000,%ecx
    mov    0x10(%ebx),%esi
    add    $0x8000,%esi
    pop    %edx
    pop    %ebx
    jmp    jump_646f3
  jump_64835:
    push   %eax
    push   %ecx
    mov    data_98600,%ebx
    mov    %ebx,data_985f8
    mov    %ebx,%edi
    add    $0x18,%edi
    cmp    data_985ec,%edi
    jl     jump_64856
    mov    data_985e8,%edi
  jump_64856:
    mov    %edi,data_98600
    mov    0x4(%edi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,data_98608
    mov    (%edi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98638
    mov    data_98608,%ecx
    mov    0xc(%edi),%edx
    sub    0xc(%ebx),%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98648
    mov    data_98608,%ecx
    mov    0x10(%edi),%edx
    sub    0x10(%ebx),%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_98650
    mov    0xc(%ebx),%edx
    add    $0x8000,%edx
    mov    0x10(%ebx),%edi
    add    $0x8000,%edi
    mov    (%ebx),%ebx
    shl    $0x10,%ebx
    add    $0x8000,%ebx
    pop    %ecx
    pop    %eax
    jmp    jump_63f91


/*----------------------------------------------------------------*/
func_648ec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x10,%esp
    call   func_64d91
    mov    data_132c14,%eax
    add    data_132bc4,%eax
    mov    %eax,data_132b78
    mov    data_132c18,%eax
    add    data_132bc8,%eax
    mov    %eax,data_132b7c
    mov    data_132b78,%eax
    add    data_132ba4,%eax
    dec    %eax
    mov    %eax,data_132b80
    mov    data_132b7c,%eax
    add    data_132be0,%eax
    dec    %eax
    mov    %eax,data_132b84
    mov    data_132b78,%eax
    cmp    data_132bb8,%eax
    jg     jump_6495b
    mov    data_132b7c,%eax
    cmp    data_132bbc,%eax
    jle    jump_6495d
  jump_6495b:
    jmp    jump_64966
  jump_6495d:
    cmpl   $0x0,data_132b80
    jge    jump_64968
  jump_64966:
    jmp    jump_64971
  jump_64968:
    cmpl   $0x0,data_132b84
    jge    jump_64985
  jump_64971:
    movl   $0x1,data_132bf8
    call   func_64dac
    jmp    jump_64b65
  jump_64985:
    cmpl   $0x0,data_132b78
    jge    jump_64998
    movl   $0x0,data_132b78
  jump_64998:
    cmpl   $0x0,data_132b7c
    jge    jump_649ab
    movl   $0x0,data_132b7c
  jump_649ab:
    mov    data_132b80,%eax
    cmp    data_132bb8,%eax
    jle    jump_649c2
    mov    data_132bb8,%eax
    mov    %eax,data_132b80
  jump_649c2:
    mov    data_132b84,%eax
    cmp    data_132bbc,%eax
    jle    jump_649d9
    mov    data_132bbc,%eax
    mov    %eax,data_132b84
  jump_649d9:
    cmpl   $0xffffffff,data_132b68
    je     jump_64a04
    mov    $data_132b68,%eax
    call   func_64e59
    test   %eax,%eax
    je     jump_64a04
    movl   $0x1,data_132bf8
    call   func_64dac
    jmp    jump_64b65
  jump_64a04:
    cmpl   $0x0,data_132bb0
    je     jump_64a34
    mov    $data_132b78,%eax
    push   %eax
    call   *data_132bb0
    add    $0x4,%esp
    test   %eax,%eax
    jne    jump_64a34
    movl   $0x1,data_132bf8
    call   func_64dac
    jmp    jump_64b65
  jump_64a34:
    movl   $0x0,data_132bf8
    mov    data_132b80,%eax
    sub    data_132b78,%eax
    mov    %eax,data_132bd0
    mov    data_132bd0,%eax
    mov    %eax,data_132be8
    mov    data_132be8,%eax
    mov    %eax,data_132b98
    mov    data_132b84,%eax
    sub    data_132b7c,%eax
    mov    %eax,data_132bd4
    mov    data_132bd4,%eax
    mov    %eax,data_132bec
    mov    data_132bec,%eax
    mov    %eax,data_132b9c
    push   data_132b84
    push   data_132b80
    push   data_132b7c
    push   data_132b78
    mov    $data_132bcc,%eax
    push   %eax
    call   *data_96bf0
    add    $0x14,%esp
    mov    data_132bb4,%ebx
    mov    data_132bcc,%edx
    mov    data_132be4,%eax
    call   func_78d41
    mov    data_132c14,%eax
    add    data_132bc4,%eax
    test   %eax,%eax
    jge    jump_64adc
    mov    data_132c14,%eax
    mov    %eax,-0x10(%ebp)
    jmp    jump_64ae7
  jump_64adc:
    mov    data_132bc4,%eax
    mov    %eax,-0x10(%ebp)
    negl   -0x10(%ebp)
  jump_64ae7:
    mov    -0x10(%ebp),%eax
    mov    %eax,-0x4(%ebp)
    mov    data_132c18,%eax
    add    data_132bc8,%eax
    test   %eax,%eax
    jge    jump_64b06
    mov    data_132c18,%eax
    mov    %eax,-0xc(%ebp)
    jmp    jump_64b11
  jump_64b06:
    mov    data_132bc8,%eax
    mov    %eax,-0xc(%ebp)
    negl   -0xc(%ebp)
  jump_64b11:
    mov    -0xc(%ebp),%eax
    mov    %eax,-0x8(%ebp)
    mov    -0x8(%ebp),%eax
    push   %eax
    mov    -0x4(%ebp),%eax
    push   %eax
    push   data_132b88
    push   data_132ba0
    mov    $data_132b8c,%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    push   data_132b84
    push   data_132b80
    push   data_132b7c
    push   data_132b78
    mov    $data_132be4,%eax
    push   %eax
    call   *data_96bec
    add    $0x14,%esp
    call   func_64dac
  jump_64b65:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64b6e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    call   func_64d91
    cmpl   $0x0,data_132bf8
    je     jump_64b91
    call   func_64dac
    jmp    jump_64bbd
  jump_64b91:
    push   data_132b84
    push   data_132b80
    push   data_132b7c
    push   data_132b78
    mov    $data_132bcc,%eax
    push   %eax
    call   *data_96bec
    add    $0x14,%esp
    call   func_64dac
  jump_64bbd:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64bc4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x10,%esp
    mov    %eax,-0x10(%ebp)
    mov    %edx,-0xc(%ebp)
    mov    %ebx,-0x8(%ebp)
    mov    %ecx,-0x4(%ebp)
    mov    -0x10(%ebp),%eax
    mov    %eax,data_132b68
    mov    -0xc(%ebp),%eax
    mov    %eax,data_132b6c
    mov    -0x8(%ebp),%eax
    mov    %eax,data_132b70
    mov    -0x4(%ebp),%eax
    mov    %eax,data_132b74
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_64c01:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x48,%esp
    movl   $0x100,-0x20(%ebp)
    movl   $0x2,-0x1c(%ebp)
    lea    -0x3c(%ebp),%ebx
    lea    -0x20(%ebp),%edx
    mov    $0x31,%eax
    call   func_78d8d
    cmpl   $0x0,-0x24(%ebp)
    je     jump_64c3f
    movl   $0x0,-0x4(%ebp)
    jmp    jump_64cf4
  jump_64c3f:
    mov    -0x3c(%ebp),%eax
    and    $0xffff,%eax
    mov    %eax,data_132c28
    mov    -0x30(%ebp),%eax
    and    $0xffff,%eax
    mov    %eax,data_132c2c
    mov    $0x12,%ebx
    mov    $data_98794,%edx
    mov    data_132c28,%eax
    shl    $0x4,%eax
    call   func_78d41
    mov    $0x32,%ebx
    xor    %edx,%edx
    mov    $data_132c38,%eax
    call   func_76ec0
    movl   $0xc,data_132c54
    movl   $0x7f,data_132c50
    mov    data_132c28,%ax
    mov    %ax,data_132c5a
    movl   $0x300,-0x20(%ebp)
    movl   $0x33,-0x1c(%ebp)
    movl   $0x0,-0x18(%ebp)
    mov    %ds,%eax
    mov    $data_132c38,%edx
    mov    %edx,-0xc(%ebp)
    mov    %ds,%ebx
    mov    $data_132c38,%edx
    mov    %ebx,%eax
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    %ebx,%eax
    mov    %dx,-0x42(%ebp)
    mov    -0x42(%ebp),%eax
    mov    %ax,-0x48(%ebp)
    lea    -0x48(%ebp),%ecx
    lea    -0x3c(%ebp),%ebx
    lea    -0x20(%ebp),%edx
    mov    $0x31,%eax
    call   func_78da8
    movl   $0x1,-0x4(%ebp)
  jump_64cf4:
    mov    -0x4(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64d00:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x44,%esp
    mov    $0x32,%ebx
    xor    %edx,%edx
    mov    $data_132c6a,%eax
    call   func_76ec0
    movl   $0xc,data_132c86
    movl   $0x0,data_132c82
    movw   $0x0,data_132c8c
    movl   $0x300,-0x28(%ebp)
    movl   $0x33,-0x24(%ebp)
    movl   $0x0,-0x20(%ebp)
    mov    %ds,%eax
    mov    $data_132c6a,%edx
    mov    %edx,-0x14(%ebp)
    mov    %ds,%ebx
    mov    $data_132c6a,%edx
    mov    %ebx,%eax
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    %ebx,%eax
    mov    %dx,-0x6(%ebp)
    mov    -0x6(%ebp),%eax
    mov    %ax,-0xc(%ebp)
    lea    -0xc(%ebp),%ecx
    lea    -0x44(%ebp),%ebx
    lea    -0x28(%ebp),%edx
    mov    $0x31,%eax
    call   func_78da8
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64d91:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    incl   data_132c04
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64dac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    addl   $0xffffffff,data_132c04
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64dc8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    incl   data_132c24
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64de3:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    addl   $0xffffffff,data_132c24
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64dff:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x8,%esp
    mov    %eax,-0x8(%ebp)
    call   func_64d91
    cmpl   $0x0,data_132bf8
    jne    jump_64e27
    cmpl   $0x0,data_132bc0
    jge    jump_64e35
  jump_64e27:
    call   func_64dac
    movl   $0x0,-0x4(%ebp)
    jmp    jump_64e4d
  jump_64e35:
    mov    -0x8(%ebp),%edi
    mov    $data_132b78,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_64dac
    movl   $0x1,-0x4(%ebp)
  jump_64e4d:
    mov    -0x4(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64e59:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x18,%esp
    mov    %eax,-0x8(%ebp)
    lea    -0x18(%ebp),%eax
    call   func_64dff
    test   %eax,%eax
    jne    jump_64e7f
    movl   $0x0,-0x4(%ebp)
    jmp    jump_64ebe
  jump_64e7f:
    mov    -0x18(%ebp),%eax
    mov    -0x8(%ebp),%edx
    cmp    0x8(%edx),%eax
    jg     jump_64e94
    mov    -0x10(%ebp),%eax
    mov    -0x8(%ebp),%edx
    cmp    (%edx),%eax
    jge    jump_64e96
  jump_64e94:
    jmp    jump_64ea1
  jump_64e96:
    mov    -0xc(%ebp),%eax
    mov    -0x8(%ebp),%edx
    cmp    0x4(%edx),%eax
    jge    jump_64ea3
  jump_64ea1:
    jmp    jump_64eae
  jump_64ea3:
    mov    -0x14(%ebp),%eax
    mov    -0x8(%ebp),%edx
    cmp    0xc(%edx),%eax
    jle    jump_64eb7
  jump_64eae:
    movl   $0x0,-0x4(%ebp)
    jmp    jump_64ebe
  jump_64eb7:
    movl   $0x1,-0x4(%ebp)
  jump_64ebe:
    mov    -0x4(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64eca:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    call   func_64d91
    cmpl   $0x0,data_132bc0
    je     jump_64efa
    incl   data_132bc0
    cmpl   $0x0,data_132bc0
    jne    jump_64efa
    call   func_648ec
  jump_64efa:
    call   func_64dac
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64f06:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    call   func_64d91
    cmpl   $0x0,data_132bc0
    jne    jump_64f27
    call   func_64b6e
  jump_64f27:
    decl   data_132bc0
    call   func_64dac
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64f39:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x18,%esp
    mov    %eax,-0x18(%ebp)
    mov    %edx,-0x14(%ebp)
    mov    data_132ba0,%eax
    cmp    -0x18(%ebp),%eax
    jne    jump_64f60
    mov    data_132b88,%eax
    cmp    -0x14(%ebp),%eax
    je     jump_64f62
  jump_64f60:
    jmp    jump_64f67
  jump_64f62:
    jmp    jump_64ff6
  jump_64f67:
    call   func_64d91
    call   func_64f06
    mov    -0x18(%ebp),%eax
    mov    %eax,data_132ba0
    mov    -0x14(%ebp),%eax
    mov    %eax,data_132b88
    mov    -0x14(%ebp),%eax
    push   %eax
    mov    -0x18(%ebp),%eax
    push   %eax
    call   func_610e8
    add    $0x8,%esp
    mov    %eax,-0x8(%ebp)
    mov    -0x14(%ebp),%eax
    push   %eax
    mov    -0x18(%ebp),%eax
    push   %eax
    call   func_6111c
    add    $0x8,%esp
    mov    %eax,-0x4(%ebp)
    mov    -0x8(%ebp),%eax
    sar    $0x10,%eax
    mov    %eax,-0xc(%ebp)
    mov    -0xc(%ebp),%eax
    mov    %eax,data_132ba4
    mov    -0x8(%ebp),%eax
    and    $0xffff,%eax
    mov    %eax,-0x10(%ebp)
    mov    -0x10(%ebp),%eax
    mov    %eax,data_132be0
    mov    -0x4(%ebp),%eax
    sar    $0x10,%eax
    cwtl
    mov    %eax,data_132bc4
    mov    -0x4(%ebp),%eax
    cwtl
    mov    %eax,data_132bc8
    mov    -0xc(%ebp),%eax
    imul   -0x10(%ebp),%eax
    mov    %eax,data_132bb4
    call   func_64eca
    call   func_64dac
  jump_64ff6:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_64ffe:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x10,%esp
    mov    %eax,-0x10(%ebp)
    mov    %edx,-0xc(%ebp)
    mov    %ebx,-0x8(%ebp)
    mov    %ecx,-0x4(%ebp)
    call   func_64d91
    cmpl   $0x0,-0x10(%ebp)
    je     jump_6502b
    mov    data_132c14,%edx
    mov    -0x10(%ebp),%eax
    mov    %edx,(%eax)
  jump_6502b:
    cmpl   $0x0,-0xc(%ebp)
    je     jump_6503c
    mov    data_132c18,%edx
    mov    -0xc(%ebp),%eax
    mov    %edx,(%eax)
  jump_6503c:
    cmpl   $0x0,-0x8(%ebp)
    je     jump_6504d
    mov    data_132c0c,%edx
    mov    -0x8(%ebp),%eax
    mov    %edx,(%eax)
  jump_6504d:
    cmpl   $0x0,-0x4(%ebp)
    je     jump_6505e
    mov    data_132c34,%edx
    mov    -0x4(%ebp),%eax
    mov    %edx,(%eax)
  jump_6505e:
    cmpl   $0x0,0x10(%ebp)
    je     jump_6506f
    mov    data_132c00,%edx
    mov    0x10(%ebp),%eax
    mov    %edx,(%eax)
  jump_6506f:
    call   func_64dac
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_6507c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x4c,%esp
    mov    %eax,-0x10(%ebp)
    mov    %edx,-0x14(%ebp)
    call   func_64d91
    movl   $0x4,-0x4c(%ebp)
    mov    -0x10(%ebp),%eax
    shl    $0x3,%eax
    mov    %eax,-0x44(%ebp)
    mov    -0x14(%ebp),%eax
    shl    $0x3,%eax
    mov    %eax,-0x40(%ebp)
    lea    -0x30(%ebp),%ebx
    lea    -0x4c(%ebp),%edx
    mov    $0x33,%eax
    call   func_78d8d
    movl   $0x3,-0x4c(%ebp)
    lea    -0x30(%ebp),%ebx
    lea    -0x4c(%ebp),%edx
    mov    $0x33,%eax
    call   func_78d8d
    movl   $0x4f0,-0xc(%ebp)
    mov    -0x2c(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    %ax,(%edx)
    movl   $0x4f2,-0x4(%ebp)
    mov    -0x28(%ebp),%eax
    mov    -0x4(%ebp),%edx
    mov    %ax,(%edx)
    movl   $0x4f4,-0x8(%ebp)
    mov    -0x24(%ebp),%eax
    mov    -0x8(%ebp),%edx
    mov    %ax,(%edx)
    call   func_64dac
    call   func_6517c
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6517c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x20,%esp
    cmpl   $0x0,data_132c04
    jg     jump_65325
    incl   data_132c04
    mov    data_132c0c,%eax
    mov    %eax,data_132c08
    mov    data_132c34,%eax
    mov    %eax,data_132c30
    mov    data_132c00,%eax
    mov    %eax,data_132bfc
    movl   $0x4f0,-0x4(%ebp)
    mov    -0x4(%ebp),%eax
    testb  $0x1,(%eax)
    je     jump_651d0
    movl   $0x1,-0x20(%ebp)
    jmp    jump_651d7
  jump_651d0:
    movl   $0x0,-0x20(%ebp)
  jump_651d7:
    mov    -0x20(%ebp),%eax
    mov    %eax,data_132c0c
    movl   $0x4f0,-0x8(%ebp)
    mov    -0x8(%ebp),%eax
    testb  $0x2,(%eax)
    je     jump_651f7
    movl   $0x1,-0x1c(%ebp)
    jmp    jump_651fe
  jump_651f7:
    movl   $0x0,-0x1c(%ebp)
  jump_651fe:
    mov    -0x1c(%ebp),%eax
    mov    %eax,data_132c34
    movl   $0x4f0,-0xc(%ebp)
    mov    -0xc(%ebp),%eax
    testb  $0x4,(%eax)
    je     jump_6521e
    movl   $0x1,-0x18(%ebp)
    jmp    jump_65225
  jump_6521e:
    movl   $0x0,-0x18(%ebp)
  jump_65225:
    mov    -0x18(%ebp),%eax
    mov    %eax,data_132c00
    mov    data_132c0c,%eax
    cmp    data_132c08,%eax
    jne    jump_65247
    mov    data_132c34,%eax
    cmp    data_132c30,%eax
    je     jump_65249
  jump_65247:
    jmp    jump_65256
  jump_65249:
    mov    data_132c00,%eax
    cmp    data_132bfc,%eax
    je     jump_6527a
  jump_65256:
    cmpl   $0x0,data_132ba8
    je     jump_6527a
    mov    data_132c00,%eax
    push   %eax
    mov    data_132c34,%eax
    push   %eax
    mov    data_132c0c,%eax
    push   %eax
    call   *data_132ba8
    add    $0xc,%esp
  jump_6527a:
    cmpl   $0x0,data_132c24
    jle    jump_6528f
    addl   $0xffffffff,data_132c04
    jmp    jump_65325
  jump_6528f:
    mov    data_132c14,%eax
    mov    %eax,data_132c1c
    mov    data_132c18,%eax
    mov    %eax,data_132c20
    movl   $0x4f2,-0x10(%ebp)
    mov    -0x10(%ebp),%eax
    mov    -0x2(%eax),%eax
    sar    $0x10,%eax
    sar    $0x3,%eax
    mov    %eax,data_132c14
    movl   $0x4f4,-0x14(%ebp)
    mov    -0x14(%ebp),%eax
    mov    -0x2(%eax),%eax
    sar    $0x10,%eax
    sar    $0x3,%eax
    mov    %eax,data_132c18
    mov    data_132c14,%eax
    cmp    data_132c1c,%eax
    jne    jump_652ed
    mov    data_132c18,%eax
    cmp    data_132c20,%eax
    je     jump_6531e
  jump_652ed:
    cmpl   $0x0,data_132bac
    je     jump_6530b
    mov    data_132c18,%eax
    push   %eax
    mov    data_132c14,%eax
    push   %eax
    call   *data_132bac
    add    $0x8,%esp
  jump_6530b:
    cmpl   $0x0,data_132bc0
    jl     jump_6531e
    call   func_64b6e
    call   func_648ec
  jump_6531e:
    addl   $0xffffffff,data_132c04
  jump_65325:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_65832:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xb0,%esp
    mov    %eax,-0x40(%ebp)
    mov    %edx,-0x38(%ebp)
    mov    %ebx,-0x34(%ebp)
    mov    %ecx,-0x3c(%ebp)
    cmpl   $0x0,data_132bc0
    jge    jump_65874
    mov    0x10(%ebp),%eax
    push   %eax
    mov    -0x3c(%ebp),%eax
    push   %eax
    mov    -0x34(%ebp),%eax
    push   %eax
    mov    -0x38(%ebp),%eax
    push   %eax
    mov    -0x40(%ebp),%eax
    push   %eax
    call   *data_96c00
    add    $0x14,%esp
    jmp    jump_65e23
  jump_65874:
    call   func_64dc8
    mov    data_132b78,%eax
    cmp    -0x3c(%ebp),%eax
    jg     jump_6588d
    mov    data_132b80,%eax
    cmp    -0x38(%ebp),%eax
    jge    jump_6588f
  jump_6588d:
    jmp    jump_65899
  jump_6588f:
    mov    data_132b84,%eax
    cmp    -0x34(%ebp),%eax
    jge    jump_6589b
  jump_65899:
    jmp    jump_658a5
  jump_6589b:
    mov    data_132b7c,%eax
    cmp    0x10(%ebp),%eax
    jle    jump_658fb
  jump_658a5:
    mov    0x10(%ebp),%ecx
    mov    -0x3c(%ebp),%ebx
    mov    -0x34(%ebp),%edx
    mov    -0x38(%ebp),%eax
    call   func_64bc4
    call   func_64de3
    mov    0x10(%ebp),%eax
    push   %eax
    mov    -0x3c(%ebp),%eax
    push   %eax
    mov    -0x34(%ebp),%eax
    push   %eax
    mov    -0x38(%ebp),%eax
    push   %eax
    mov    -0x40(%ebp),%eax
    push   %eax
    call   *data_96c00
    add    $0x14,%esp
    mov    $0xffffffff,%ecx
    mov    $0xffffffff,%ebx
    mov    $0xffffffff,%edx
    mov    $0xffffffff,%eax
    call   func_64bc4
    call   func_6517c
    jmp    jump_65e23
  jump_658fb:
    mov    -0x40(%ebp),%eax
    mov    (%eax),%edx
    mov    -0x40(%ebp),%eax
    mov    0xc(%eax),%eax
    cmp    0x4(%edx),%eax
    jge    jump_65916
    mov    -0x40(%ebp),%eax
    mov    0xc(%eax),%eax
    mov    %eax,-0x78(%ebp)
    jmp    jump_65921
  jump_65916:
    mov    -0x40(%ebp),%eax
    mov    (%eax),%eax
    mov    0x4(%eax),%eax
    mov    %eax,-0x78(%ebp)
  jump_65921:
    mov    -0x40(%ebp),%eax
    cmpl   $0x0,0x4(%eax)
    jle    jump_65935
    mov    -0x40(%ebp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,-0x74(%ebp)
    jmp    jump_6593c
  jump_65935:
    movl   $0x0,-0x74(%ebp)
  jump_6593c:
    mov    -0x78(%ebp),%eax
    sub    -0x74(%ebp),%eax
    mov    -0x3c(%ebp),%edx
    sub    -0x38(%ebp),%edx
    cmp    %eax,%edx
    jne    jump_6599d
    mov    -0x40(%ebp),%eax
    mov    (%eax),%edx
    mov    -0x40(%ebp),%eax
    mov    0x10(%eax),%eax
    cmp    0x8(%edx),%eax
    jge    jump_65967
    mov    -0x40(%ebp),%eax
    mov    0x10(%eax),%eax
    mov    %eax,-0x70(%ebp)
    jmp    jump_65972
  jump_65967:
    mov    -0x40(%ebp),%eax
    mov    (%eax),%eax
    mov    0x8(%eax),%eax
    mov    %eax,-0x70(%ebp)
  jump_65972:
    mov    -0x40(%ebp),%eax
    cmpl   $0x0,0x8(%eax)
    jle    jump_65986
    mov    -0x40(%ebp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,-0x6c(%ebp)
    jmp    jump_6598d
  jump_65986:
    movl   $0x0,-0x6c(%ebp)
  jump_6598d:
    mov    -0x70(%ebp),%eax
    sub    -0x6c(%ebp),%eax
    mov    0x10(%ebp),%edx
    sub    -0x34(%ebp),%edx
    cmp    %eax,%edx
    je     jump_659d9
  jump_6599d:
    call   *data_96be8
    call   func_64f06
    mov    0x10(%ebp),%eax
    push   %eax
    mov    -0x3c(%ebp),%eax
    push   %eax
    mov    -0x34(%ebp),%eax
    push   %eax
    mov    -0x38(%ebp),%eax
    push   %eax
    mov    -0x40(%ebp),%eax
    push   %eax
    call   *data_96c00
    add    $0x14,%esp
    call   func_64eca
    call   func_64de3
    call   func_6517c
    jmp    jump_65e23
  jump_659d9:
    mov    -0x40(%ebp),%eax
    mov    (%eax),%eax
    cmpl   $0x0,0xc(%eax)
    je     jump_65b77
    mov    -0x38(%ebp),%eax
    cmp    data_132b78,%eax
    jle    jump_659fe
    mov    -0x38(%ebp),%eax
    mov    %eax,-0x88(%ebp)
    jmp    jump_65a09
  jump_659fe:
    mov    data_132b78,%eax
    mov    %eax,-0x88(%ebp)
  jump_65a09:
    mov    -0x88(%ebp),%edx
    sub    -0x38(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x1c(%ebp)
    mov    -0x3c(%ebp),%eax
    cmp    data_132b80,%eax
    jge    jump_65a33
    mov    -0x3c(%ebp),%eax
    mov    %eax,-0x84(%ebp)
    jmp    jump_65a3e
  jump_65a33:
    mov    data_132b80,%eax
    mov    %eax,-0x84(%ebp)
  jump_65a3e:
    mov    -0x84(%ebp),%edx
    sub    -0x38(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x20(%ebp)
    mov    -0x34(%ebp),%eax
    cmp    data_132b7c,%eax
    jle    jump_65a65
    mov    -0x34(%ebp),%eax
    mov    %eax,-0x80(%ebp)
    jmp    jump_65a6d
  jump_65a65:
    mov    data_132b7c,%eax
    mov    %eax,-0x80(%ebp)
  jump_65a6d:
    mov    -0x80(%ebp),%edx
    sub    -0x34(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x8(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x24(%ebp)
    mov    0x10(%ebp),%eax
    cmp    data_132b84,%eax
    jge    jump_65a91
    mov    0x10(%ebp),%eax
    mov    %eax,-0x7c(%ebp)
    jmp    jump_65a99
  jump_65a91:
    mov    data_132b84,%eax
    mov    %eax,-0x7c(%ebp)
  jump_65a99:
    mov    -0x7c(%ebp),%edx
    sub    -0x34(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x8(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x28(%ebp)
    mov    -0x24(%ebp),%eax
    mov    %eax,-0x18(%ebp)
  jump_65ab0:
    mov    -0x18(%ebp),%eax
    cmp    -0x28(%ebp),%eax
    jle    jump_65ac5
    jmp    jump_65b77
  jump_65abd:
    mov    -0x18(%ebp),%eax
    incl   -0x18(%ebp)
    jmp    jump_65ab0
  jump_65ac5:
    movl   $0x0,-0x14(%ebp)
    mov    -0x40(%ebp),%eax
    mov    (%eax),%eax
    mov    -0x18(%ebp),%ebx
    shl    $0x2,%ebx
    mov    0xc(%eax),%edx
    add    %ebx,%edx
    mov    -0x40(%ebp),%eax
    mov    (%eax),%eax
    mov    0xc(%eax),%eax
    mov    (%edx),%edx
    add    %eax,%edx
    mov    %edx,-0x30(%ebp)
  jump_65aeb:
    mov    -0x14(%ebp),%eax
    cmp    -0x20(%ebp),%eax
    jg     jump_65b72
    mov    -0x30(%ebp),%eax
    mov    (%eax),%al
    and    $0x7f,%al
    and    $0xff,%eax
    add    -0x14(%ebp),%eax
    dec    %eax
    mov    %eax,-0x2c(%ebp)
    mov    -0x30(%ebp),%eax
    cmpb   $0x80,(%eax)
    jae    jump_65b60
    mov    -0x14(%ebp),%eax
    cmp    -0x20(%ebp),%eax
    jg     jump_65b22
    mov    -0x2c(%ebp),%eax
    cmp    -0x1c(%ebp),%eax
    jge    jump_65b24
  jump_65b22:
    jmp    jump_65b60
  jump_65b24:
    call   *data_96be8
    call   func_64f06
    mov    0x10(%ebp),%eax
    push   %eax
    mov    -0x3c(%ebp),%eax
    push   %eax
    mov    -0x34(%ebp),%eax
    push   %eax
    mov    -0x38(%ebp),%eax
    push   %eax
    mov    -0x40(%ebp),%eax
    push   %eax
    call   *data_96c00
    add    $0x14,%esp
    call   func_64eca
    call   func_64de3
    call   func_6517c
    jmp    jump_65e23
  jump_65b60:
    mov    -0x30(%ebp),%eax
    incl   -0x30(%ebp)
    mov    -0x2c(%ebp),%eax
    inc    %eax
    mov    %eax,-0x14(%ebp)
    jmp    jump_65aeb
  jump_65b72:
    jmp    jump_65abd
  jump_65b77:
    mov    -0x40(%ebp),%eax
    mov    (%eax),%eax
    mov    %eax,-0x54(%ebp)
    mov    -0x38(%ebp),%eax
    cmp    data_132b78,%eax
    jle    jump_65b95
    mov    -0x38(%ebp),%eax
    mov    %eax,-0x8c(%ebp)
    jmp    jump_65ba0
  jump_65b95:
    mov    data_132b78,%eax
    mov    %eax,-0x8c(%ebp)
  jump_65ba0:
    mov    -0x8c(%ebp),%edx
    sub    -0x38(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x50(%ebp)
    mov    -0x3c(%ebp),%eax
    cmp    data_132b80,%eax
    jge    jump_65bca
    mov    -0x3c(%ebp),%eax
    mov    %eax,-0x90(%ebp)
    jmp    jump_65bd5
  jump_65bca:
    mov    data_132b80,%eax
    mov    %eax,-0x90(%ebp)
  jump_65bd5:
    mov    -0x90(%ebp),%edx
    sub    -0x38(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x48(%ebp)
    mov    -0x34(%ebp),%eax
    cmp    data_132b7c,%eax
    jle    jump_65bff
    mov    -0x34(%ebp),%eax
    mov    %eax,-0x94(%ebp)
    jmp    jump_65c0a
  jump_65bff:
    mov    data_132b7c,%eax
    mov    %eax,-0x94(%ebp)
  jump_65c0a:
    mov    -0x94(%ebp),%edx
    sub    -0x34(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x8(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x4c(%ebp)
    mov    0x10(%ebp),%eax
    cmp    data_132b84,%eax
    jge    jump_65c34
    mov    0x10(%ebp),%eax
    mov    %eax,-0x98(%ebp)
    jmp    jump_65c3f
  jump_65c34:
    mov    data_132b84,%eax
    mov    %eax,-0x98(%ebp)
  jump_65c3f:
    mov    -0x98(%ebp),%edx
    sub    -0x34(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x8(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x44(%ebp)
    mov    data_132b80,%eax
    sub    data_132b78,%eax
    mov    %eax,-0xc(%ebp)
    mov    data_132b84,%eax
    sub    data_132b7c,%eax
    mov    %eax,-0x10(%ebp)
    movl   $data_132bcc,-0x68(%ebp)
    mov    data_132b78,%eax
    cmp    -0x38(%ebp),%eax
    jge    jump_65c91
    mov    -0x38(%ebp),%eax
    sub    data_132b78,%eax
    mov    %eax,-0x9c(%ebp)
    jmp    jump_65c9b
  jump_65c91:
    movl   $0x0,-0x9c(%ebp)
  jump_65c9b:
    mov    -0x9c(%ebp),%eax
    mov    %eax,-0x64(%ebp)
    mov    data_132b80,%eax
    cmp    -0x3c(%ebp),%eax
    jle    jump_65cc3
    mov    data_132b80,%eax
    sub    -0x3c(%ebp),%eax
    mov    -0xc(%ebp),%edx
    sub    %eax,%edx
    mov    %edx,-0xa0(%ebp)
    jmp    jump_65ccc
  jump_65cc3:
    mov    -0xc(%ebp),%eax
    mov    %eax,-0xa0(%ebp)
  jump_65ccc:
    mov    -0xa0(%ebp),%eax
    mov    %eax,-0x5c(%ebp)
    mov    data_132b7c,%eax
    cmp    -0x34(%ebp),%eax
    jge    jump_65cf0
    mov    -0x34(%ebp),%eax
    sub    data_132b7c,%eax
    mov    %eax,-0xa4(%ebp)
    jmp    jump_65cfa
  jump_65cf0:
    movl   $0x0,-0xa4(%ebp)
  jump_65cfa:
    mov    -0xa4(%ebp),%eax
    mov    %eax,-0x60(%ebp)
    mov    data_132b84,%eax
    cmp    0x10(%ebp),%eax
    jle    jump_65d22
    mov    data_132b84,%eax
    sub    0x10(%ebp),%eax
    mov    -0x10(%ebp),%edx
    sub    %eax,%edx
    mov    %edx,-0xa8(%ebp)
    jmp    jump_65d2b
  jump_65d22:
    mov    -0x10(%ebp),%eax
    mov    %eax,-0xa8(%ebp)
  jump_65d2b:
    mov    -0xa8(%ebp),%eax
    mov    %eax,-0x58(%ebp)
    push   $0xffffffff
    push   $0x0
    push   $0x0
    lea    -0x68(%ebp),%eax
    push   %eax
    push   $0x0
    push   $0x0
    lea    -0x54(%ebp),%eax
    push   %eax
    call   func_5eaaf
    add    $0x1c,%esp
    mov    data_132c14,%eax
    add    data_132bc4,%eax
    cmp    -0x38(%ebp),%eax
    jge    jump_65d6e
    mov    data_132c14,%eax
    sub    -0x38(%ebp),%eax
    mov    %eax,-0xac(%ebp)
    jmp    jump_65d7f
  jump_65d6e:
    mov    data_132bc4,%eax
    mov    %eax,-0xac(%ebp)
    negl   -0xac(%ebp)
  jump_65d7f:
    mov    -0xac(%ebp),%eax
    mov    %eax,-0x4(%ebp)
    mov    data_132c18,%eax
    add    data_132bc8,%eax
    cmp    -0x34(%ebp),%eax
    jge    jump_65da8
    mov    data_132c18,%eax
    sub    -0x34(%ebp),%eax
    mov    %eax,-0xb0(%ebp)
    jmp    jump_65db9
  jump_65da8:
    mov    data_132bc8,%eax
    mov    %eax,-0xb0(%ebp)
    negl   -0xb0(%ebp)
  jump_65db9:
    mov    -0xb0(%ebp),%eax
    mov    %eax,-0x8(%ebp)
    mov    -0x8(%ebp),%eax
    push   %eax
    mov    -0x4(%ebp),%eax
    push   %eax
    push   data_132b88
    push   data_132ba0
    lea    -0x54(%ebp),%eax
    push   %eax
    call   func_5cb3c
    add    $0x14,%esp
    mov    0x10(%ebp),%eax
    push   %eax
    mov    -0x3c(%ebp),%eax
    push   %eax
    mov    -0x34(%ebp),%eax
    push   %eax
    mov    -0x38(%ebp),%eax
    push   %eax
    mov    -0x40(%ebp),%eax
    push   %eax
    call   *data_96c00
    add    $0x14,%esp
    push   $0xffffffff
    push   $0x0
    push   $0x0
    lea    -0x54(%ebp),%eax
    push   %eax
    push   $0x0
    push   $0x0
    lea    -0x68(%ebp),%eax
    push   %eax
    call   func_5eaaf
    add    $0x1c,%esp
    call   func_64de3
    call   func_6517c
  jump_65e23:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_65e2b:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    mov    %eax,-0xc(%ebp)
    movl   $0x0,-0x4(%ebp)
  jump_65e43:
    mov    -0x4(%ebp),%eax
    mov    -0xc(%ebp),%edx
    cmp    0x8(%edx),%eax
    jb     jump_65e58
    jmp    jump_65e9b
  jump_65e50:
    mov    -0x4(%ebp),%eax
    incl   -0x4(%ebp)
    jmp    jump_65e43
  jump_65e58:
    mov    -0x4(%ebp),%edx
    shl    $0x2,%edx
    mov    -0xc(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    cmpl   $0x1,(%eax)
    jne    jump_65e99
    imul   $0x14,-0x4(%ebp),%edx
    mov    -0xc(%ebp),%eax
    mov    (%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x8(%ebp)
    mov    -0x8(%ebp),%eax
    push   0x10(%eax)
    mov    -0x8(%ebp),%eax
    mov    0xc(%eax),%ecx
    mov    -0x8(%ebp),%eax
    mov    0x8(%eax),%ebx
    mov    -0x8(%ebp),%eax
    mov    0x4(%eax),%edx
    mov    -0x8(%ebp),%eax
    call   func_65832
  jump_65e99:
    jmp    jump_65e50
  jump_65e9b:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_65ea4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x44,%esp
    mov    %eax,-0xc(%ebp)
    mov    %edx,-0x8(%ebp)
    movl   $0x0,data_132c04
    movl   $0x0,data_132c24
    movl   $0xffffffff,data_132bc0
    movl   $0x0,data_132ba0
    movl   $0x0,data_132bf8
    mov    $0xffffffff,%ecx
    mov    $0xffffffff,%ebx
    mov    $0xffffffff,%edx
    mov    $0xffffffff,%eax
    call   func_64bc4
    movl   $0x0,data_132bac
    movl   $0x0,data_132ba8
    movl   $0x0,data_132bb0
    movl   $0xffffffff,data_132c00
    mov    data_132c00,%eax
    mov    %eax,data_132c34
    mov    data_132c34,%eax
    mov    %eax,data_132c0c
    mov    data_132c0c,%eax
    mov    %eax,data_132c18
    mov    data_132c18,%eax
    mov    %eax,data_132c14
    mov    -0xc(%ebp),%eax
    dec    %eax
    mov    %eax,data_132bb8
    mov    -0x8(%ebp),%eax
    dec    %eax
    mov    %eax,data_132bbc
    movl   $0x0,-0x44(%ebp)
    lea    -0x28(%ebp),%ebx
    lea    -0x44(%ebp),%edx
    mov    $0x33,%eax
    call   func_78d8d
    cmpw   $0xffff,-0x28(%ebp)
    je     jump_65f8e
    movl   $0x0,-0x4(%ebp)
    jmp    jump_660f4
  jump_65f8e:
    movl   $0x7,-0x44(%ebp)
    movl   $0x0,-0x3c(%ebp)
    mov    data_132bb8,%eax
    shl    $0x3,%eax
    mov    %eax,-0x38(%ebp)
    lea    -0x28(%ebp),%ebx
    lea    -0x44(%ebp),%edx
    mov    $0x33,%eax
    call   func_78d8d
    movl   $0x8,-0x44(%ebp)
    movl   $0x0,-0x3c(%ebp)
    mov    data_132bbc,%eax
    shl    $0x3,%eax
    mov    %eax,-0x38(%ebp)
    lea    -0x28(%ebp),%ebx
    lea    -0x44(%ebp),%edx
    mov    $0x33,%eax
    call   func_78d8d
    movl   $0xf,-0x44(%ebp)
    movl   $0x1,-0x3c(%ebp)
    movl   $0x1,-0x38(%ebp)
    lea    -0x28(%ebp),%ebx
    lea    -0x44(%ebp),%edx
    mov    $0x33,%eax
    call   func_78d8d
    call   func_64c01
    test   %eax,%eax
    jne    jump_6601a
    movl   $0x0,-0x4(%ebp)
    jmp    jump_660f4
  jump_6601a:
    mov    $0x4000,%eax
    call   func_78734
    mov    %eax,data_132be4
    mov    $0x4000,%eax
    call   func_78734
    mov    %eax,data_132bcc
    movl   $0x0,data_132bf4
    mov    data_132bf4,%eax
    mov    %eax,data_132bf0
    movl   $0x0,data_132bdc
    mov    data_132bdc,%eax
    mov    %eax,data_132bd8
    movl   $0x0,data_132b90
    movl   $0x0,data_132b94
    movl   $data_132be4,data_132b8c
    mov    -0x8(%ebp),%eax
    mov    -0x8(%ebp),%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,%ebx
    mov    -0xc(%ebp),%eax
    mov    -0xc(%ebp),%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %ebx,%edx
    call   func_6507c
    mov    $func_6517c,%eax
    push   %eax
    call   func_67728
    add    $0x4,%esp
    mov    %eax,data_132c10
    cmpl   $0x190,-0x8(%ebp)
    jl     jump_660cf
    push   $0x3c
    push   data_132c10
    call   func_6797c
    add    $0x8,%esp
    jmp    jump_660df
  jump_660cf:
    push   $0x46
    push   data_132c10
    call   func_6797c
    add    $0x8,%esp
  jump_660df:
    push   data_132c10
    call   func_67b46
    add    $0x4,%esp
    movl   $0x1,-0x4(%ebp)
  jump_660f4:
    mov    -0x4(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_660ff:
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x38,%esp
    call   func_64f06
    push   data_132c10
    call   func_67c15
    add    $0x4,%esp
    push   data_132c10
    call   func_67ce4
    add    $0x4,%esp
    call   func_64d00
    mov    data_132bcc,%eax
    call   func_7882f
    mov    data_132be4,%eax
    call   func_7882f
    movl   $0x101,-0x1c(%ebp)
    mov    data_132c2c,%eax
    mov    %eax,-0x10(%ebp)
    lea    -0x38(%ebp),%ebx
    lea    -0x1c(%ebp),%edx
    mov    $0x31,%eax
    call   func_78d8d
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6616f:
/*----------------------------------------------------------------*/
    and    %ah,(%eax)
    add    %al,(%eax)
    and    %ah,(%eax)
    add    %al,(%eax)


/*----------------------------------------------------------------*/
func_66177:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%ecx
    mov    0x14(%esp),%eax
    mov    0x1c(%esp),%ebp
    mov    0x20(%esp),%edi
    lea    (%eax,%edi,1),%esi
    testb  $0x1,0x18(%esp)
    je     jump_661a2
    lea    (%ecx,%eax,1),%edx
    mov    %edi,%ebx
    mov    %ebp,%eax
    call   func_78dc1
    jmp    jump_661b8
  jump_661a2:
    xor    %ebx,%ebx
    mov    %eax,%edx
    mov    %ecx,%eax
    call   func_77a30
    mov    %edi,%ebx
    mov    %ebp,%edx
    mov    %ecx,%eax
    call   func_77a93
  jump_661b8:
    mov    %esi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_661de:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%edx
    mov    %edx,%eax
    call   *data_987ac
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_661fb
    push   %edx
    push   %eax
    call   func_6635f
    add    $0x8,%esp
  jump_661fb:
    mov    %esi,%eax
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_661ff:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%esi
    test   %esi,%esi
    je     jump_6621e
    mov    0xc(%esp),%edx
    push   %edx
    push   %esi
    call   func_66376
    add    $0x8,%esp
    mov    %esi,%eax
    call   *data_987b0
  jump_6621e:
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_66220:
/*----------------------------------------------------------------*/
    push   %esi
    sub    $0x38,%esp
    mov    0x48(%esp),%ecx
    movl   $0x100,(%esp)
    mov    0x40(%esp),%eax
    mov    %eax,0x4(%esp)
    lea    0x1c(%esp),%ebx
    mov    %esp,%edx
    mov    $0x31,%eax
    call   func_78d8d
    cmpl   $0x0,0x34(%esp)
    je     jump_66252
    xor    %esi,%esi
    jmp    jump_66281
  jump_66252:
    mov    0x1c(%esp),%eax
    shl    $0x10,%eax
    mov    %eax,(%ecx)
    mov    0x1c(%esp),%eax
    and    $0xffff,%eax
    shl    $0x4,%eax
    mov    0x44(%esp),%edx
    mov    %eax,(%edx)
    mov    0x28(%esp),%eax
    and    $0xffff,%eax
    mov    0x4c(%esp),%edx
    mov    %eax,(%edx)
    mov    $0x1,%esi
  jump_66281:
    test   %esi,%esi
    je     jump_6629e
    mov    (%ecx),%eax
    shr    $0xc,%eax
    mov    0x40(%esp),%edx
    shl    $0x4,%edx
    add    %eax,%edx
    dec    %edx
    push   %edx
    push   %eax
    call   func_662d1
    add    $0x8,%esp
  jump_6629e:
    mov    %esi,%eax
    add    $0x38,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_662a5:
/*----------------------------------------------------------------*/
    sub    $0x38,%esp
    movl   $0x101,(%esp)
    mov    0x44(%esp),%edx
    and    $0xffff,%edx
    mov    %edx,0xc(%esp)
    lea    0x1c(%esp),%ebx
    mov    %esp,%edx
    mov    $0x31,%eax
    call   func_78d8d
    add    $0x38,%esp
    ret


/*----------------------------------------------------------------*/
func_662d1:
/*----------------------------------------------------------------*/
    sub    $0x38,%esp
    mov    0x3c(%esp),%edx
    mov    0x40(%esp),%ebx
    cmp    %ebx,%edx
    jae    jump_662e4
    mov    %edx,%eax
    jmp    jump_662e6
  jump_662e4:
    mov    %ebx,%eax
  jump_662e6:
    jae    jump_662ea
    mov    %ebx,%edx
  jump_662ea:
    sub    %eax,%edx
    inc    %edx
    movl   $0x600,(%esp)
  jump_662f4:
    mov    %eax,%ebx
    shr    $0x10,%ebx
    mov    %ebx,0x4(%esp)
    and    $0xffff,%eax
    mov    %eax,0x8(%esp)
    mov    %edx,%eax
    shr    $0x10,%eax
    mov    %eax,0x10(%esp)
    and    $0xffff,%edx
    mov    %edx,0x14(%esp)
    lea    0x1c(%esp),%ebx
    mov    %esp,%edx
    mov    $0x31,%eax
    call   func_78d8d
    cmpl   $0x0,0x34(%esp)
    sete   %al
    and    $0xff,%eax
    add    $0x38,%esp
    ret


/*----------------------------------------------------------------*/
func_6633a:
/*----------------------------------------------------------------*/
    sub    $0x38,%esp
    mov    0x3c(%esp),%edx
    mov    0x40(%esp),%ebx
    cmp    %ebx,%edx
    jae    jump_6634d
    mov    %edx,%eax
    jmp    jump_6634f
  jump_6634d:
    mov    %ebx,%eax
  jump_6634f:
    jae    jump_66353
    mov    %ebx,%edx
  jump_66353:
    sub    %eax,%edx
    inc    %edx
    movl   $0x601,(%esp)
    jmp    jump_662f4


/*----------------------------------------------------------------*/
func_6635f:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    add    0x8(%esp),%eax
    push   %eax
    mov    0x8(%esp),%ebx
    push   %ebx
    call   func_662d1
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_66376:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    add    0x8(%esp),%eax
    push   %eax
    mov    0x8(%esp),%ebx
    push   %ebx
    call   func_6633a
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_6638d:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xcc,%esp
    mov    func_6616f,%eax
    mov    %eax,0xc8(%esp)
    xor    %edi,%edi
    testb  $0x1,0xe0(%esp)
    je     jump_663b7
    mov    0xdc(%esp),%ebp
    jmp    jump_663da
  jump_663b7:
    push   $0x200
    mov    0xe0(%esp),%edx
    push   %edx
    call   func_777e2
    add    $0x8,%esp
    mov    %eax,%ebp
    cmp    $0xffffffff,%eax
    jne    jump_663da
  jump_663d3:
    xor    %eax,%eax
    jmp    jump_664b2
  jump_663da:
    push   $0x4
    lea    0xc8(%esp),%eax
    push   %eax
    mov    0xe8(%esp),%ebx
    push   %ebx
    push   $0x3c
    push   %ebp
    call   func_66177
    add    $0x14,%esp
    push   $0x2
    lea    0xcc(%esp),%eax
    push   %eax
    mov    0xe8(%esp),%ecx
    push   %ecx
    mov    0xd0(%esp),%esi
    push   %esi
    push   %ebp
    call   func_66177
    add    $0x14,%esp
    mov    $data_93c7c,%edx
    lea    0xc8(%esp),%eax
    call   func_76d70
    test   %eax,%eax
    je     jump_66438
    mov    %ebp,%eax
    call   func_77a71
    jmp    jump_663d3
  jump_66438:
    push   $0xac
    lea    0x4(%esp),%eax
    push   %eax
    mov    0xe8(%esp),%eax
    push   %eax
    mov    0xd0(%esp),%edx
    push   %edx
    push   %ebp
    call   func_66177
    add    $0x14,%esp
    mov    0xc4(%esp),%eax
    add    0x40(%esp),%eax
    xor    %esi,%esi
    jmp    jump_6648e
  jump_6646a:
    push   $0x18
    lea    0xb0(%esp),%edx
    push   %edx
    mov    0xe8(%esp),%edx
    push   %edx
    push   %eax
    push   %ebp
    call   func_66177
    add    $0x14,%esp
    add    0xac(%esp),%edi
    inc    %esi
  jump_6648e:
    cmp    0x44(%esp),%esi
    jb     jump_6646a
    testb  $0x1,0xe0(%esp)
    jne    jump_664a5
    mov    %ebp,%eax
    call   func_77a71
  jump_664a5:
    mov    0x44(%esp),%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    add    %edi,%eax
  jump_664b2:
    add    $0xcc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_664bc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x2c0,%esp
    mov    0x2d0(%esp),%edx
    mov    0x66173,%eax /* Warning: address points to a valid object/reloc, but no label found */
    mov    %eax,0x290(%esp)
    xor    %ebx,%ebx
    mov    %ebx,0x2a4(%esp)
    testb  $0x1,0x2d4(%esp)
    je     jump_664ef
    mov    %edx,%esi
    jmp    jump_66508
  jump_664ef:
    push   $0x200
    push   %edx
    call   func_777e2
    add    $0x8,%esp
    mov    %eax,%esi
    cmp    $0xffffffff,%eax
    je     jump_665b8
  jump_66508:
    mov    0x2d4(%esp),%ecx
    push   %ecx
    push   %edx
    call   func_6638d
    add    $0x8,%esp
    mov    %eax,%ebx
    mov    0x2d4(%esp),%dl
    test   $0x4,%dl
    je     jump_6653d
    call   *data_987ac
    mov    %eax,0x2d8(%esp)
    test   %eax,%eax
    jne    jump_6653d
    test   $0x1,%dl
    jmp    jump_665af
  jump_6653d:
    xor    %edx,%edx
    mov    0x2d8(%esp),%eax
    call   func_76ec0
    mov    0x2d8(%esp),%eax
    mov    %eax,0x298(%esp)
    push   $0x4
    lea    0x288(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%edi
    push   %edi
    push   $0x3c
    push   %esi
    call   func_66177
    add    $0x14,%esp
    push   $0x2
    lea    0x294(%esp),%eax
    push   %eax
    push   %edi
    mov    0x290(%esp),%eax
    push   %eax
    push   %esi
    call   func_66177
    add    $0x14,%esp
    mov    $data_93c7c,%edx
    lea    0x290(%esp),%eax
    call   func_76d70
    test   %eax,%eax
    je     jump_665bf
  jump_665a7:
    testb  $0x1,0x2d4(%esp)
  jump_665af:
    jne    jump_665b8
    mov    %esi,%eax
    call   func_77a71
  jump_665b8:
    xor    %eax,%eax
    jmp    jump_6693a
  jump_665bf:
    push   $0xac
    lea    0x194(%esp),%eax
    push   %eax
    push   %edi
    mov    0x290(%esp),%ebx
    push   %ebx
    push   %esi
    call   func_66177
    add    $0x14,%esp
    mov    0x284(%esp),%ecx
    add    0x1d0(%esp),%ecx
    xor    %edi,%edi
    jmp    jump_6674e
  jump_665f3:
    push   $0x18
    lea    0x268(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%ebx
    push   %ebx
    push   %ecx
    push   %esi
    call   func_66177
    add    $0x14,%esp
    mov    %eax,0x29c(%esp)
    mov    0x284(%esp),%ecx
    add    0x1d8(%esp),%ecx
    xor    %ebp,%ebp
    jmp    jump_66739
  jump_6662b:
    push   $0x8
    lea    0x280(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%edx
    push   %edx
    push   %ecx
    push   %esi
    call   func_66177
    add    $0x14,%esp
    mov    %eax,%ecx
    test   %ebp,%ebp
    jne    jump_66692
    mov    0x26c(%esp),%bh
    test   $0x2,%bh
    je     jump_66684
    test   $0x1,%bh
    je     jump_66684
    testb  $0xf,0x298(%esp)
    je     jump_66684
    test   %edi,%edi
    je     jump_66684
    mov    0x2d8(%esp),%eax
    and    $0xf,%eax
    mov    $0x10,%edx
    sub    %eax,%edx
    add    %edx,0x298(%esp)
  jump_66684:
    mov    0x298(%esp),%edx
    mov    %edx,0x240(%esp,%edi,4)
  jump_66692:
    mov    0x2a4(%esp),%eax
    mov    0x298(%esp),%edx
    mov    %edx,(%esp,%eax,4)
    mov    %ecx,0x294(%esp)
    lea    0x1(%eax),%ecx
    mov    %ecx,0x2a4(%esp)
    mov    0x240(%esp,%edi,4),%ebx
    mov    %edx,%eax
    sub    %ebx,%eax
    mov    0x264(%esp),%edx
    sub    %eax,%edx
    mov    %edx,%eax
    xor    %ecx,%ecx
    mov    0x280(%esp),%cx
    cmp    %ecx,%edx
    jae    jump_666e1
    mov    %edx,0x2a8(%esp)
    jmp    jump_666e8
  jump_666e1:
    mov    %ecx,0x2a8(%esp)
  jump_666e8:
    mov    0x1bc(%esp),%cl
    mov    0x27c(%esp),%eax
    shl    %cl,%eax
    mov    %eax,%ecx
    add    0x210(%esp),%ecx
    mov    0x2a8(%esp),%edx
    push   %edx
    mov    0x29c(%esp),%ebx
    push   %ebx
    mov    0x2dc(%esp),%eax
    push   %eax
    push   %ecx
    push   %esi
    call   func_66177
    add    $0x14,%esp
    mov    0x2a8(%esp),%eax
    add    %eax,0x298(%esp)
    mov    0x294(%esp),%ecx
    inc    %ebp
  jump_66739:
    cmp    0x274(%esp),%ebp
    jb     jump_6662b
    mov    0x29c(%esp),%ecx
    inc    %edi
  jump_6674e:
    cmp    0x1d4(%esp),%edi
    jb     jump_665f3
    mov    0x284(%esp),%ecx
    add    0x1f8(%esp),%ecx
    push   $0x4
    lea    0x290(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%edx
    push   %edx
    push   %ecx
    push   %esi
    call   func_66177
    add    $0x14,%esp
    mov    %eax,%ecx
    xor    %edi,%edi
    jmp    jump_66915
  jump_6678e:
    push   $0x4
    lea    0x28c(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%ebp
    push   %ebp
    push   %ecx
    push   %esi
    call   func_66177
    mov    %eax,%edx
    add    $0x14,%esp
    mov    %eax,%ecx
    mov    0x28c(%esp),%eax
    cmp    0x288(%esp),%eax
    je     jump_66906
    mov    %edx,0x2a0(%esp)
    mov    0x284(%esp),%ebp
    lea    (%eax,%ebp,1),%ecx
    add    0x1fc(%esp),%ecx
  jump_667da:
    push   $0x1
    lea    0x2b8(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%edx
    push   %edx
    push   %ecx
    push   %esi
    call   func_66177
    add    $0x14,%esp
    push   $0x1
    lea    0x2c0(%esp),%edx
    push   %edx
    mov    0x2dc(%esp),%ebx
    push   %ebx
    push   %eax
    push   %esi
    call   func_66177
    add    $0x14,%esp
    mov    %eax,%ecx
    mov    0x2b4(%esp),%al
    and    $0x7,%al
    and    $0xff,%eax
    je     jump_665a7
    mov    0x2bc(%esp),%al
    and    $0x4,%al
    and    $0xff,%eax
    je     jump_6684c
    mov    0x2bc(%esp),%al
    and    $0x20,%al
    and    $0xff,%eax
    je     jump_665a7
  jump_6684c:
    mov    0x2b4(%esp),%al
    and    $0x20,%al
    and    $0xff,%eax
    jne    jump_665a7
    push   $0x2
    lea    0x2b0(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%ebp
    push   %ebp
    push   %ecx
    push   %esi
    call   func_66177
    add    $0x14,%esp
    push   $0x1
    lea    0x2bc(%esp),%ecx
    push   %ecx
    push   %ebp
    push   %eax
    push   %esi
    call   func_66177
    add    $0x14,%esp
    push   $0x2
    lea    0x2b4(%esp),%edx
    push   %edx
    push   %ebp
    push   %eax
    push   %esi
    call   func_66177
    add    $0x14,%esp
    mov    %eax,%ecx
    xor    %eax,%eax
    mov    0x2ac(%esp),%ax
    cmp    0x1b8(%esp),%eax
    ja     jump_668e2
    xor    %edx,%edx
    mov    %ax,%dx
    mov    (%esp,%edi,4),%eax
    add    %edx,%eax
    movzbl 0x2b8(%esp),%ebp
    xor    %edx,%edx
    mov    0x2b0(%esp),%dx
    mov    0x23c(%esp,%ebp,4),%ebp
    add    %edx,%ebp
    mov    %ebp,(%eax)
  jump_668e2:
    mov    0x288(%esp),%eax
    add    0x284(%esp),%eax
    add    0x1fc(%esp),%eax
    cmp    %eax,%ecx
    jb     jump_667da
    mov    0x2a0(%esp),%ecx
  jump_66906:
    mov    0x288(%esp),%eax
    mov    %eax,0x28c(%esp)
    inc    %edi
  jump_66915:
    cmp    0x1a4(%esp),%edi
    jb     jump_6678e
    testb  $0x1,0x2d4(%esp)
    jne    jump_66933
    mov    %esi,%eax
    call   func_77a71
  jump_66933:
    mov    0x2d8(%esp),%eax
  jump_6693a:
    add    $0x2c0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6694a:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    %edx,data_987a8
    push   $0x200
    mov    0x8(%esp),%ebx
    push   %ebx
    call   func_777e2
    add    $0x8,%esp
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    jne    jump_66976
    movl   $0x3,data_987a8
    ret
  jump_66976:
    call   func_777a5
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    jne    jump_6698c
    movl   $0x5,data_987a8
  jump_6698c:
    mov    %edx,%eax
    call   func_77a71
    mov    %ebx,%eax
    ret


/*----------------------------------------------------------------*/
func_66996:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    xor    %edx,%edx
    mov    %edx,data_987a8
    mov    0xc(%esp),%ebx
    push   %ebx
    call   func_6694a
    add    $0x4,%esp
    mov    %eax,%edi
    cmp    $0xffffffff,%eax
    jne    jump_669c3
  jump_669b4:
    movl   $0x3,data_987a8
  jump_669be:
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_669c3:
    mov    0x10(%esp),%ecx
    test   %ecx,%ecx
    jne    jump_669d3
    call   *data_987ac
    mov    %eax,%ecx
  jump_669d3:
    test   %ecx,%ecx
    jne    jump_669e3
    movl   $0x2,data_987a8
    jmp    jump_669be
  jump_669e3:
    push   $0x200
    mov    0x10(%esp),%esi
    push   %esi
    call   func_777e2
    mov    %eax,%esi
    add    $0x8,%esp
    cmp    $0xffffffff,%eax
    jne    jump_66a06
    mov    %ecx,%eax
    call   *data_987b0
    jmp    jump_669b4
  jump_66a06:
    mov    %edi,%ebx
    mov    %ecx,%edx
    call   func_77a93
    cmp    %edi,%eax
    je     jump_66a27
    mov    %ecx,%eax
    call   *data_987b0
    movl   $0x5,data_987a8
    jmp    jump_669be
  jump_66a27:
    mov    %esi,%eax
    call   func_77a71
    mov    %ecx,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_66b05:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_987b4
    jne    jump_66ba9
    push   $func_6b984
    push   $func_66b05
    call   func_662d1
    add    $0x8,%esp
    push   $0x4
    push   $data_132cb8
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132cbc
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132cb4
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132c9c
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132cac
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132ca8
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132cb0
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132ca0
    call   func_6635f
    add    $0x8,%esp
    movl   $0x1,data_987b4
  jump_66ba9:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_66bad:
/*----------------------------------------------------------------*/
    mov    data_132c9c,%edx
    cmp    $0x63,%edx
    jne    jump_66bd3
    mov    data_132cac,%ebx
    cmp    $0x3b,%ebx
    jne    jump_66bd3
    cmp    data_132ca8,%ebx
    jne    jump_66bd3
    cmp    data_132cb0,%edx
    je     jump_66c18
  jump_66bd3:
    incl   data_132cb0
    cmpl   $0x64,data_132cb0
    jne    jump_66c18
    xor    %eax,%eax
    mov    %eax,data_132cb0
    incl   data_132ca8
    mov    data_132ca8,%ebx
    cmp    $0x3c,%ebx
    jne    jump_66c18
    mov    %eax,data_132ca8
    incl   data_132cac
    cmp    data_132cac,%ebx
    jne    jump_66c18
    mov    %eax,data_132cac
    incl   data_132c9c
  jump_66c18:
    ret


/*----------------------------------------------------------------*/
func_66c19:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    call   func_741f4
    mov    data_132c9c,%edx
    mov    %edx,(%esp)
    mov    data_132cac,%ebp
    mov    data_132ca8,%edi
    mov    data_132cb0,%esi
    call   func_74201
    cmpl   $0x1,data_132ca4
    jne    jump_66c6e
    push   %esi
    push   %edi
    push   %ebp
    mov    0xc(%esp),%ebx
    push   %ebx
    push   $data_93c80
    mov    data_132cb4,%ecx
    push   %ecx
    call   func_786ea
    add    $0x18,%esp
    jmp    jump_66c8c
  jump_66c6e:
    xor    %edx,%edx
    jmp    jump_66c87
  jump_66c72:
    push   $data_93c9b
    mov    data_132cb4,%esi
    push   %esi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_66c87:
    cmp    $0xe,%edx
    jb     jump_66c72
  jump_66c8c:
    mov    $0x1,%edx
    jmp    jump_66ca8
  jump_66c93:
    push   $data_93c9d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_66ca8:
    cmp    data_132ca4,%edx
    jb     jump_66c93
    mov    $0x1,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_66cbf:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    call   func_66b05
    xor    %edx,%edx
    mov    %edx,data_132cb8
    mov    %edx,data_132cbc
    mov    $data_93c9f,%eax
    call   func_78de6
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_66cf2
  jump_66ce8:
    call   func_72042
    jmp    jump_66e34
  jump_66cf2:
    mov    $data_93ca9,%eax
    call   func_78de6
    test   %eax,%eax
    je     jump_66d0a
    movl   $0x1,data_132cbc
  jump_66d0a:
    mov    $data_93cb7,%edx
    mov    %ebx,%eax
    call   func_77f5e
    mov    %eax,data_132cb4
    test   %eax,%eax
    je     jump_66ce8
    mov    0x10(%eax),%eax
    call   func_78e40
    test   %eax,%eax
    je     jump_66d37
    mov    data_132cb4,%eax
    xor    %edx,%edx
    call   func_78e5e
  jump_66d37:
    mov    %esp,%eax
    call   func_782ac
    mov    %esp,%eax
    call   func_78ecc
    call   func_79013
    mov    %eax,%edx
    mov    $data_132cc0,%eax
    call   func_79020
    xor    %ah,%ah
    mov    %ah,data_132cd8
    push   $data_93cbb
    mov    data_132cb4,%esi
    push   %esi
    call   func_786ea
    add    $0x8,%esp
    push   $data_93d0c
    push   $data_93d11
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0xc,%esp
    push   $data_132cc0
    push   $data_93d58
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
    push   $data_93d68
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    call   func_72042
    xor    %edx,%edx
    mov    %edx,data_132c9c
    mov    %edx,data_132cac
    mov    %edx,data_132ca8
    mov    %edx,data_132cb0
    push   $func_66bad
    call   func_749b6
    add    $0x4,%esp
    mov    %eax,data_132ca0
    push   $0x64
    push   %eax
    call   func_74b48
    add    $0x8,%esp
    mov    data_132ca0,%edi
    push   %edi
    call   func_74a70
    add    $0x4,%esp
    mov    $0x1,%ebp
    mov    %ebp,data_132cb8
    mov    %ebp,data_132ca4
    call   func_66c19
    xor    %edx,%edx
    mov    %edx,data_132ca4
    push   $data_93dba
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
  jump_66e34:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_66e3b:
/*----------------------------------------------------------------*/
    push   %edi
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_66e79
    cmp    $0x1,%edx
    je     jump_66e60
    cmpl   $0x0,data_132cbc
    je     jump_66e79
  jump_66e60:
    call   func_749aa
    test   %eax,%eax
    jne    jump_66e79
    call   func_66c19
    test   %eax,%eax
    je     jump_66e79
    mov    $0x1,%eax
    jmp    jump_66e7b
  jump_66e79:
    xor    %eax,%eax
  jump_66e7b:
    test   %eax,%eax
    je     jump_66e93
    push   $data_93dc9
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
  jump_66e93:
    call   func_72148
    cmpl   $0x0,data_132cb8
    je     jump_66ec6
    cmpl   $0x1,data_132ca4
    je     jump_66eb3
    cmpl   $0x0,data_132cbc
    je     jump_66ec6
  jump_66eb3:
    call   func_749aa
    test   %eax,%eax
    jne    jump_66ec6
    mov    data_132cb4,%eax
    call   func_7744e
  jump_66ec6:
    decl   data_132ca4
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_66ece:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_66f0e
    cmp    $0x1,%edx
    je     jump_66ef5
    cmpl   $0x0,data_132cbc
    je     jump_66f0e
  jump_66ef5:
    call   func_749aa
    test   %eax,%eax
    jne    jump_66f0e
    call   func_66c19
    test   %eax,%eax
    je     jump_66f0e
    mov    $0x1,%eax
    jmp    jump_66f10
  jump_66f0e:
    xor    %eax,%eax
  jump_66f10:
    test   %eax,%eax
    je     jump_66f31
    mov    0x14(%esp),%edi
    push   %edi
    mov    0x14(%esp),%ebp
    push   %ebp
    push   $data_93dd9
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_66f31:
    mov    0x14(%esp),%edx
    push   %edx
    mov    0x14(%esp),%ebx
    push   %ebx
    call   func_71ce5
    mov    %eax,%esi
    add    $0x8,%esp
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_66f68
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_66f68:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_66f8d
  jump_66f79:
    push   $data_93c9b
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_66f8d:
    cmp    $0xe,%edx
    jb     jump_66f79
    mov    $0x1,%edx
    jmp    jump_66fae
  jump_66f99:
    push   $data_93c9d
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_66fae:
    cmp    data_132ca4,%edx
    jb     jump_66f99
    push   %esi
    push   $data_93df4
  jump_66fbc:
    mov    data_132cb4,%ecx
    push   %ecx
    jmp    jump_67349


/*----------------------------------------------------------------*/
func_66fc8:
/*----------------------------------------------------------------*/
    jmp    func_741f4


/*----------------------------------------------------------------*/
func_66fcd:
/*----------------------------------------------------------------*/
    jmp    func_74201


/*----------------------------------------------------------------*/
func_66fd2:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67012
    cmp    $0x1,%edx
    je     jump_66ff9
    cmpl   $0x0,data_132cbc
    je     jump_67012
  jump_66ff9:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67012
    call   func_66c19
    test   %eax,%eax
    je     jump_67012
    mov    $0x1,%eax
    jmp    jump_67014
  jump_67012:
    xor    %eax,%eax
  jump_67014:
    test   %eax,%eax
    je     jump_67031
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_93e01
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_67031:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_74525
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_67063
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_67063:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_67089
  jump_67074:
    push   $data_93c9b
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_67089:
    cmp    $0xe,%edx
    jb     jump_67074
    mov    $0x1,%edx
    jmp    jump_670aa
  jump_67095:
    push   $data_93c9d
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_670aa:
    cmp    data_132ca4,%edx
    jb     jump_67095
  jump_670b2:
    push   %esi
    push   $data_93e1a
    jmp    jump_68c49


/*----------------------------------------------------------------*/
func_670bd:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_670fc
    cmp    $0x1,%edx
    je     jump_670e3
    cmpl   $0x0,data_132cbc
    je     jump_670fc
  jump_670e3:
    call   func_749aa
    test   %eax,%eax
    jne    jump_670fc
    call   func_66c19
    test   %eax,%eax
    je     jump_670fc
    mov    $0x1,%eax
    jmp    jump_670fe
  jump_670fc:
    xor    %eax,%eax
  jump_670fe:
    test   %eax,%eax
    je     jump_6711f
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_93e29
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_6711f:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_74551
  jump_6712e:
    add    $0x8,%esp
    jmp    jump_6722b
  jump_671b3:
    add    $0xc,%esp
  jump_671b6:
    decl   data_132ca4
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_671c0:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_671ff
    cmp    $0x1,%edx
    je     jump_671e6
    cmpl   $0x0,data_132cbc
    je     jump_671ff
  jump_671e6:
    call   func_749aa
    test   %eax,%eax
    jne    jump_671ff
    call   func_66c19
    test   %eax,%eax
    je     jump_671ff
    mov    $0x1,%eax
    jmp    jump_67201
  jump_671ff:
    xor    %eax,%eax
  jump_67201:
    test   %eax,%eax
    je     jump_6721e
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_93e66
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_6721e:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_747e3
  jump_67228:
    add    $0x4,%esp
  jump_6722b:
    decl   data_132ca4
    pop    %ebp
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_67234:
/*----------------------------------------------------------------*/
    jmp    jump_74828


/*----------------------------------------------------------------*/
func_67239:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%edx
    push   %edx
    call   func_7482c
    add    $0x4,%esp
    ret


/*----------------------------------------------------------------*/
func_67247:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67287
    cmp    $0x1,%edx
    je     jump_6726e
    cmpl   $0x0,data_132cbc
    je     jump_67287
  jump_6726e:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67287
    call   func_66c19
    test   %eax,%eax
    je     jump_67287
    mov    $0x1,%eax
    jmp    jump_67289
  jump_67287:
    xor    %eax,%eax
  jump_67289:
    test   %eax,%eax
    je     jump_672b5
    mov    0x1c(%esp),%edi
    push   %edi
    mov    0x1c(%esp),%ebp
    push   %ebp
    mov    0x1c(%esp),%eax
    push   %eax
    mov    0x1c(%esp),%edx
    push   %edx
    push   $data_93e81
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x18,%esp
  jump_672b5:
    mov    0x1c(%esp),%ecx
    push   %ecx
    mov    0x1c(%esp),%esi
    push   %esi
    mov    0x1c(%esp),%edi
    push   %edi
    mov    0x1c(%esp),%ebp
    push   %ebp
    call   func_74893
    mov    %eax,%esi
    add    $0x10,%esp
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_672f2
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_672f2:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_67314
  jump_672ff:
    push   $data_93c9b
    mov    data_132cb4,%ecx
    push   %ecx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_67314:
    cmp    $0xe,%edx
    jb     jump_672ff
    mov    $0x1,%edx
    jmp    jump_67334
  jump_67320:
    push   $data_93c9d
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_67334:
    cmp    data_132ca4,%edx
    jb     jump_67320
    push   %esi
    push   $data_93df4
    mov    data_132cb4,%ebp
    push   %ebp
  jump_67349:
    call   func_786ea
    add    $0xc,%esp
  jump_67351:
    decl   data_132ca4
    mov    %esi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6735d:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_6739c
    cmp    $0x1,%edx
    je     jump_67383
    cmpl   $0x0,data_132cbc
    je     jump_6739c
  jump_67383:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6739c
    call   func_66c19
    test   %eax,%eax
    je     jump_6739c
    mov    $0x1,%eax
    jmp    jump_6739e
  jump_6739c:
    xor    %eax,%eax
  jump_6739e:
    test   %eax,%eax
    je     jump_673bb
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_93ea7
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_673bb:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_7496d
    jmp    jump_67228


/*----------------------------------------------------------------*/
func_673ca:
/*----------------------------------------------------------------*/
    jmp    func_749aa


/*----------------------------------------------------------------*/
func_673cf:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%esi
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67413
    cmp    $0x1,%edx
    je     jump_673fa
    cmpl   $0x0,data_132cbc
    je     jump_67413
  jump_673fa:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67413
    call   func_66c19
    test   %eax,%eax
    je     jump_67413
    mov    $0x1,%eax
    jmp    jump_67415
  jump_67413:
    xor    %eax,%eax
  jump_67415:
    test   %eax,%eax
    je     jump_67432
    mov    0x14(%esp),%ebp
    push   %ebp
    push   %esi
    push   $data_93eb6
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_67432:
    mov    0x14(%esp),%edx
    push   %edx
    push   %esi
    call   func_71a1d
    add    $0x8,%esp
    mov    %eax,%edi
    test   %eax,%eax
    je     jump_6769d
    cmpl   $0x0,data_132cb8
    je     jump_6771c
    cmpl   $0x1,data_132ca4
    je     jump_6746d
    cmpl   $0x0,data_132cbc
    je     jump_6771c
  jump_6746d:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6771c
    xor    %edx,%edx
    jmp    jump_67492
  jump_6747e:
    push   $data_93c9b
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_67492:
    cmp    $0xe,%edx
    jb     jump_6747e
    mov    $0x1,%edx
    jmp    jump_674b3
  jump_6749e:
    push   $data_93c9d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_674b3:
    cmp    data_132ca4,%edx
    jb     jump_6749e
    lea    0x80(%esi),%eax
    push   %eax
    push   $data_93ed1
    mov    data_132cb4,%ecx
    push   %ecx
    call   func_786ea
    add    $0xc,%esp
    xor    %edx,%edx
    jmp    jump_674ee
  jump_674da:
    push   $data_93c9b
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_674ee:
    cmp    $0xe,%edx
    jb     jump_674da
    mov    $0x1,%edx
    jmp    jump_6750f
  jump_674fa:
    push   $data_93c9d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_6750f:
    cmp    data_132ca4,%edx
    jb     jump_674fa
    push   %esi
    push   $data_93ede
    mov    data_132cb4,%ecx
    push   %ecx
    call   func_786ea
    add    $0xc,%esp
    xor    %edx,%edx
    jmp    jump_67544
  jump_67530:
    push   $data_93c9b
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_67544:
    cmp    $0xe,%edx
    jb     jump_67530
    mov    $0x1,%edx
    jmp    jump_67565
  jump_67550:
    push   $data_93c9d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_67565:
    cmp    data_132ca4,%edx
    jb     jump_67550
    movswl 0x100(%esi),%eax
    push   %eax
    push   $data_93eeb
    mov    data_132cb4,%ecx
    push   %ecx
    call   func_786ea
    add    $0xc,%esp
    xor    %edx,%edx
    jmp    jump_675a1
  jump_6758d:
    push   $data_93c9b
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_675a1:
    cmp    $0xe,%edx
    jb     jump_6758d
    mov    $0x1,%edx
    jmp    jump_675c2
  jump_675ad:
    push   $data_93c9d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_675c2:
    cmp    data_132ca4,%edx
    jb     jump_675ad
    movswl 0x102(%esi),%eax
    push   %eax
    push   $data_93ef8
    mov    data_132cb4,%ecx
    push   %ecx
    call   func_786ea
    add    $0xc,%esp
    xor    %edx,%edx
    jmp    jump_675fe
  jump_675ea:
    push   $data_93c9b
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_675fe:
    cmp    $0xe,%edx
    jb     jump_675ea
    mov    $0x1,%edx
    jmp    jump_6761f
  jump_6760a:
    push   $data_93c9d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_6761f:
    cmp    data_132ca4,%edx
    jb     jump_6760a
    movswl 0x104(%esi),%eax
    push   %eax
    push   $data_93f05
    mov    data_132cb4,%ecx
    push   %ecx
    call   func_786ea
    add    $0xc,%esp
    xor    %edx,%edx
    jmp    jump_6765b
  jump_67647:
    push   $data_93c9b
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_6765b:
    cmp    $0xe,%edx
    jb     jump_67647
    mov    $0x1,%edx
    jmp    jump_6767c
  jump_67667:
    push   $data_93c9d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_6767c:
    cmp    data_132ca4,%edx
    jb     jump_67667
    movswl 0x106(%esi),%eax
    push   %eax
    push   $data_93f12
    mov    data_132cb4,%ecx
    push   %ecx
    jmp    jump_67714
  jump_6769d:
    cmpl   $0x0,data_132cb8
    je     jump_6771c
    cmpl   $0x1,data_132ca4
    je     jump_676bc
    cmpl   $0x0,data_132cbc
    je     jump_6771c
  jump_676bc:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6771c
    xor    %edx,%edx
    jmp    jump_676de
  jump_676c9:
    push   $data_93c9b
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_676de:
    cmp    $0xe,%edx
    jb     jump_676c9
    mov    $0x1,%edx
    jmp    jump_676ff
  jump_676ea:
    push   $data_93c9d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_676ff:
    cmp    data_132ca4,%edx
    jb     jump_676ea
    push   %edi
    push   $data_93f1f
    mov    data_132cb4,%esi
    push   %esi
  jump_67714:
    call   func_786ea
    add    $0xc,%esp
  jump_6771c:
    decl   data_132ca4
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_67728:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67768
    cmp    $0x1,%edx
    je     jump_6774f
    cmpl   $0x0,data_132cbc
    je     jump_67768
  jump_6774f:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67768
    call   func_66c19
    test   %eax,%eax
    je     jump_67768
    mov    $0x1,%eax
    jmp    jump_6776a
  jump_67768:
    xor    %eax,%eax
  jump_6776a:
    test   %eax,%eax
    je     jump_67787
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_93f2c
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_67787:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_749b6
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_677b9
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_677b9:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_677df
  jump_677ca:
    push   $data_93c9b
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_677df:
    cmp    $0xe,%edx
    jb     jump_677ca
    mov    $0x1,%edx
    jmp    jump_67800
  jump_677eb:
    push   $data_93c9d
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_67800:
    cmp    data_132ca4,%edx
    jb     jump_677eb
  jump_67808:
    push   %esi
    push   $data_93f1f
    jmp    jump_68c49


/*----------------------------------------------------------------*/
func_67813:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67853
    cmp    $0x1,%edx
    je     jump_6783a
    cmpl   $0x0,data_132cbc
    je     jump_67853
  jump_6783a:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67853
    call   func_66c19
    test   %eax,%eax
    je     jump_67853
    mov    $0x1,%eax
    jmp    jump_67855
  jump_67853:
    xor    %eax,%eax
  jump_67855:
    test   %eax,%eax
    je     jump_67876
    mov    0x14(%esp),%edi
    push   %edi
    mov    0x14(%esp),%ebp
    push   %ebp
    push   $data_93f46
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_67876:
    mov    0x14(%esp),%edx
    push   %edx
    mov    0x14(%esp),%ebx
    push   %ebx
    call   func_749fd
    mov    %eax,%esi
    add    $0x8,%esp
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_678ad
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_678ad:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_678d2
  jump_678be:
    push   $data_93c9b
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_678d2:
    cmp    $0xe,%edx
    jb     jump_678be
    mov    $0x1,%edx
    jmp    jump_678f3
  jump_678de:
    push   $data_93c9d
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_678f3:
    cmp    data_132ca4,%edx
    jb     jump_678de
    push   %esi
    push   $data_93f1f
    jmp    jump_66fbc


/*----------------------------------------------------------------*/
func_67906:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67945
    cmp    $0x1,%edx
    je     jump_6792c
    cmpl   $0x0,data_132cbc
    je     jump_67945
  jump_6792c:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67945
    call   func_66c19
    test   %eax,%eax
    je     jump_67945
    mov    $0x1,%eax
    jmp    jump_67947
  jump_67945:
    xor    %eax,%eax
  jump_67947:
    test   %eax,%eax
    je     jump_67968
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_93f61
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_67968:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_74b18
    jmp    jump_6712e


/*----------------------------------------------------------------*/
func_6797c:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_679bb
    cmp    $0x1,%edx
    je     jump_679a2
    cmpl   $0x0,data_132cbc
    je     jump_679bb
  jump_679a2:
    call   func_749aa
    test   %eax,%eax
    jne    jump_679bb
    call   func_66c19
    test   %eax,%eax
    je     jump_679bb
    mov    $0x1,%eax
    jmp    jump_679bd
  jump_679bb:
    xor    %eax,%eax
  jump_679bd:
    test   %eax,%eax
    je     jump_679de
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_93f7e
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_679de:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_74b48
    jmp    jump_6712e


/*----------------------------------------------------------------*/
func_67b46:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67b85
    cmp    $0x1,%edx
    je     jump_67b6c
    cmpl   $0x0,data_132cbc
    je     jump_67b85
  jump_67b6c:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67b85
    call   func_66c19
    test   %eax,%eax
    je     jump_67b85
    mov    $0x1,%eax
    jmp    jump_67b87
  jump_67b85:
    xor    %eax,%eax
  jump_67b87:
    test   %eax,%eax
    je     jump_67ba4
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_93fd5
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_67ba4:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_74a70
    jmp    jump_67228


/*----------------------------------------------------------------*/
func_67c15:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67c54
    cmp    $0x1,%edx
    je     jump_67c3b
    cmpl   $0x0,data_132cbc
    je     jump_67c54
  jump_67c3b:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67c54
    call   func_66c19
    test   %eax,%eax
    je     jump_67c54
    mov    $0x1,%eax
    jmp    jump_67c56
  jump_67c54:
    xor    %eax,%eax
  jump_67c56:
    test   %eax,%eax
    je     jump_67c73
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_94002
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_67c73:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_74ac4
    jmp    jump_67228


/*----------------------------------------------------------------*/
func_67ce4:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67d23
    cmp    $0x1,%edx
    je     jump_67d0a
    cmpl   $0x0,data_132cbc
    je     jump_67d23
  jump_67d0a:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67d23
    call   func_66c19
    test   %eax,%eax
    je     jump_67d23
    mov    $0x1,%eax
    jmp    jump_67d25
  jump_67d23:
    xor    %eax,%eax
  jump_67d25:
    test   %eax,%eax
    je     jump_67d42
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_9402d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_67d42:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_74a25
    jmp    jump_67228


/*----------------------------------------------------------------*/
func_67d51:
/*----------------------------------------------------------------*/
    push   %edi
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67d8f
    cmp    $0x1,%edx
    je     jump_67d76
    cmpl   $0x0,data_132cbc
    je     jump_67d8f
  jump_67d76:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67d8f
    call   func_66c19
    test   %eax,%eax
    je     jump_67d8f
    mov    $0x1,%eax
    jmp    jump_67d91
  jump_67d8f:
    xor    %eax,%eax
  jump_67d91:
    test   %eax,%eax
    je     jump_67da9
    push   $data_9404b
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
  jump_67da9:
    call   func_74a4c
    jmp    jump_66ec6


/*----------------------------------------------------------------*/
func_67db3:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67df3
    cmp    $0x1,%edx
    je     jump_67dda
    cmpl   $0x0,data_132cbc
    je     jump_67df3
  jump_67dda:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67df3
    call   func_66c19
    test   %eax,%eax
    je     jump_67df3
    mov    $0x1,%eax
    jmp    jump_67df5
  jump_67df3:
    xor    %eax,%eax
  jump_67df5:
    test   %eax,%eax
    je     jump_67e12
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_94065
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_67e12:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_71fd1
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_67e44
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_67e44:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_67e6a
  jump_67e55:
    push   $data_93c9b
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_67e6a:
    cmp    $0xe,%edx
    jb     jump_67e55
    mov    $0x1,%edx
    jmp    jump_67e8b
  jump_67e76:
    push   $data_93c9d
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_67e8b:
    cmp    data_132ca4,%edx
    jb     jump_67e76
    jmp    jump_670b2


/*----------------------------------------------------------------*/
func_67e98:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67ed8
    cmp    $0x1,%edx
    je     jump_67ebf
    cmpl   $0x0,data_132cbc
    je     jump_67ed8
  jump_67ebf:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67ed8
    call   func_66c19
    test   %eax,%eax
    je     jump_67ed8
    mov    $0x1,%eax
    jmp    jump_67eda
  jump_67ed8:
    xor    %eax,%eax
  jump_67eda:
    test   %eax,%eax
    je     jump_67efb
    mov    0x14(%esp),%edi
    push   %edi
    mov    0x14(%esp),%ebp
    push   %ebp
    push   $data_94083
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_67efb:
    mov    0x14(%esp),%edx
    push   %edx
    mov    0x14(%esp),%ebx
    push   %ebx
    call   func_71cfe
    mov    %eax,%esi
    add    $0x8,%esp
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_67f32
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_67f32:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_67f57
  jump_67f43:
    push   $data_93c9b
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_67f57:
    cmp    $0xe,%edx
    jb     jump_67f43
    mov    $0x1,%edx
    jmp    jump_67f78
  jump_67f63:
    push   $data_93c9d
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_67f78:
    cmp    data_132ca4,%edx
    jb     jump_67f63
  jump_67f80:
    push   %esi
    push   $data_93e1a
    jmp    jump_66fbc


/*----------------------------------------------------------------*/
func_67f8b:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_67fca
    cmp    $0x1,%edx
    je     jump_67fb1
    cmpl   $0x0,data_132cbc
    je     jump_67fca
  jump_67fb1:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67fca
    call   func_66c19
    test   %eax,%eax
    je     jump_67fca
    mov    $0x1,%eax
    jmp    jump_67fcc
  jump_67fca:
    xor    %eax,%eax
  jump_67fcc:
    test   %eax,%eax
    je     jump_67fe9
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_940a0
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_67fe9:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_71f2e
    jmp    jump_67228


/*----------------------------------------------------------------*/
func_67ff8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_68038
    cmp    $0x1,%edx
    je     jump_6801f
    cmpl   $0x0,data_132cbc
    je     jump_68038
  jump_6801f:
    call   func_749aa
    test   %eax,%eax
    jne    jump_68038
    call   func_66c19
    test   %eax,%eax
    je     jump_68038
    mov    $0x1,%eax
    jmp    jump_6803a
  jump_68038:
    xor    %eax,%eax
  jump_6803a:
    test   %eax,%eax
    je     jump_68052
    push   $data_940bc
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
  jump_68052:
    call   func_6de40
    mov    %eax,%esi
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_6807c
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_6807c:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_680a2
  jump_6808d:
    push   $data_93c9b
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_680a2:
    cmp    $0xe,%edx
    jb     jump_6808d
    mov    $0x1,%edx
    jmp    jump_680c3
  jump_680ae:
    push   $data_93c9d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_680c3:
    cmp    data_132ca4,%edx
    jb     jump_680ae
  jump_680cb:
    push   %esi
    push   $data_93e1a
    jmp    jump_685e2


/*----------------------------------------------------------------*/
func_680d6:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_68116
    cmp    $0x1,%edx
    je     jump_680fd
    cmpl   $0x0,data_132cbc
    je     jump_68116
  jump_680fd:
    call   func_749aa
    test   %eax,%eax
    jne    jump_68116
    call   func_66c19
    test   %eax,%eax
    je     jump_68116
    mov    $0x1,%eax
    jmp    jump_68118
  jump_68116:
    xor    %eax,%eax
  jump_68118:
    test   %eax,%eax
    je     jump_68139
    mov    0x14(%esp),%edi
    push   %edi
    mov    0x14(%esp),%ebp
    push   %ebp
    push   $data_940d3
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_68139:
    mov    0x14(%esp),%edx
    push   %edx
    mov    0x14(%esp),%ebx
    push   %ebx
    call   func_6dd80
    mov    %eax,%esi
    add    $0x8,%esp
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_68170
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_68170:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_68195
  jump_68181:
    push   $data_93c9b
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_68195:
    cmp    $0xe,%edx
    jb     jump_68181
    mov    $0x1,%edx
    jmp    jump_681b6
  jump_681a1:
    push   $data_93c9d
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_681b6:
    cmp    data_132ca4,%edx
    jb     jump_681a1
    jmp    jump_67f80


/*----------------------------------------------------------------*/
func_68230:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_68270
    cmp    $0x1,%edx
    je     jump_68257
    cmpl   $0x0,data_132cbc
    je     jump_68270
  jump_68257:
    call   func_749aa
    test   %eax,%eax
    jne    jump_68270
    call   func_66c19
    test   %eax,%eax
    je     jump_68270
    mov    $0x1,%eax
    jmp    jump_68272
  jump_68270:
    xor    %eax,%eax
  jump_68272:
    test   %eax,%eax
    je     jump_6828f
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_94119
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_6828f:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_6dee0
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_682c1
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_682c1:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_682e7
  jump_682d2:
    push   $data_93c9b
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_682e7:
    cmp    $0xe,%edx
    jb     jump_682d2
    mov    $0x1,%edx
    jmp    jump_68308
  jump_682f3:
    push   $data_93c9d
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_68308:
    cmp    data_132ca4,%edx
    jb     jump_682f3
    jmp    jump_670b2


/*----------------------------------------------------------------*/
func_6840e:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_6844d
    cmp    $0x1,%edx
    je     jump_68434
    cmpl   $0x0,data_132cbc
    je     jump_6844d
  jump_68434:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6844d
    call   func_66c19
    test   %eax,%eax
    je     jump_6844d
    mov    $0x1,%eax
    jmp    jump_6844f
  jump_6844d:
    xor    %eax,%eax
  jump_6844f:
    test   %eax,%eax
    je     jump_6846c
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_94163
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_6846c:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6df50
    jmp    jump_67228


/*----------------------------------------------------------------*/
func_6847b:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_684ba
    cmp    $0x1,%edx
    je     jump_684a1
    cmpl   $0x0,data_132cbc
    je     jump_684ba
  jump_684a1:
    call   func_749aa
    test   %eax,%eax
    jne    jump_684ba
    call   func_66c19
    test   %eax,%eax
    je     jump_684ba
    mov    $0x1,%eax
    jmp    jump_684bc
  jump_684ba:
    xor    %eax,%eax
  jump_684bc:
    test   %eax,%eax
    je     jump_684d9
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_94184
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_684d9:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6df60
    jmp    jump_67228
  jump_685dc:
    push   %esi
    push   $data_93df4
  jump_685e2:
    mov    data_132cb4,%edi
    push   %edi
    jmp    jump_67349


/*----------------------------------------------------------------*/
func_685ee:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_6862e
    cmp    $0x1,%edx
    je     jump_68615
    cmpl   $0x0,data_132cbc
    je     jump_6862e
  jump_68615:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6862e
    call   func_66c19
    test   %eax,%eax
    je     jump_6862e
    mov    $0x1,%eax
    jmp    jump_68630
  jump_6862e:
    xor    %eax,%eax
  jump_68630:
    test   %eax,%eax
    je     jump_68657
    mov    0x18(%esp),%edi
    push   %edi
    mov    0x18(%esp),%ebp
    push   %ebp
    mov    0x18(%esp),%eax
    push   %eax
    push   $data_941be
    mov    data_132cb4,%edx
    push   %edx
    call   func_786ea
    add    $0x14,%esp
  jump_68657:
    mov    0x18(%esp),%ebx
    push   %ebx
    mov    0x18(%esp),%ecx
    push   %ecx
    mov    0x18(%esp),%esi
    push   %esi
    call   func_6e020
    jmp    jump_671b3


/*----------------------------------------------------------------*/
func_68670:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_686b0
    cmp    $0x1,%edx
    je     jump_68697
    cmpl   $0x0,data_132cbc
    je     jump_686b0
  jump_68697:
    call   func_749aa
    test   %eax,%eax
    jne    jump_686b0
    call   func_66c19
    test   %eax,%eax
    je     jump_686b0
    mov    $0x1,%eax
    jmp    jump_686b2
  jump_686b0:
    xor    %eax,%eax
  jump_686b2:
    test   %eax,%eax
    je     jump_686d9
    mov    0x18(%esp),%edi
    push   %edi
    mov    0x18(%esp),%ebp
    push   %ebp
    mov    0x18(%esp),%eax
    push   %eax
    push   $data_941e4
    mov    data_132cb4,%edx
    push   %edx
    call   func_786ea
    add    $0x14,%esp
  jump_686d9:
    mov    0x18(%esp),%ebx
    push   %ebx
    mov    0x18(%esp),%ecx
    push   %ecx
    mov    0x18(%esp),%esi
    push   %esi
    call   func_6e050
    jmp    jump_671b3


/*----------------------------------------------------------------*/
func_686f2:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_68731
    cmp    $0x1,%edx
    je     jump_68718
    cmpl   $0x0,data_132cbc
    je     jump_68731
  jump_68718:
    call   func_749aa
    test   %eax,%eax
    jne    jump_68731
    call   func_66c19
    test   %eax,%eax
    je     jump_68731
    mov    $0x1,%eax
    jmp    jump_68733
  jump_68731:
    xor    %eax,%eax
  jump_68733:
    test   %eax,%eax
    je     jump_68750
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_94205
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_68750:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6e170
    jmp    jump_67228


/*----------------------------------------------------------------*/
func_6875f:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_6879e
    cmp    $0x1,%edx
    je     jump_68785
    cmpl   $0x0,data_132cbc
    je     jump_6879e
  jump_68785:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6879e
    call   func_66c19
    test   %eax,%eax
    je     jump_6879e
    mov    $0x1,%eax
    jmp    jump_687a0
  jump_6879e:
    xor    %eax,%eax
  jump_687a0:
    test   %eax,%eax
    je     jump_687bd
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_9421d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_687bd:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6e1f0
    jmp    jump_67228


/*----------------------------------------------------------------*/
func_68839:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_68878
    cmp    $0x1,%edx
    je     jump_6885f
    cmpl   $0x0,data_132cbc
    je     jump_68878
  jump_6885f:
    call   func_749aa
    test   %eax,%eax
    jne    jump_68878
    call   func_66c19
    test   %eax,%eax
    je     jump_68878
    mov    $0x1,%eax
    jmp    jump_6887a
  jump_68878:
    xor    %eax,%eax
  jump_6887a:
    test   %eax,%eax
    je     jump_68897
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_9424d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_68897:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6e230
    jmp    jump_67228


/*----------------------------------------------------------------*/
func_688a6:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_688e5
    cmp    $0x1,%edx
    je     jump_688cc
    cmpl   $0x0,data_132cbc
    je     jump_688e5
  jump_688cc:
    call   func_749aa
    test   %eax,%eax
    jne    jump_688e5
    call   func_66c19
    test   %eax,%eax
    je     jump_688e5
    mov    $0x1,%eax
    jmp    jump_688e7
  jump_688e5:
    xor    %eax,%eax
  jump_688e7:
    test   %eax,%eax
    je     jump_68908
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_94263
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_68908:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_6e090
    jmp    jump_6712e


/*----------------------------------------------------------------*/
func_6891c:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_6895b
    cmp    $0x1,%edx
    je     jump_68942
    cmpl   $0x0,data_132cbc
    je     jump_6895b
  jump_68942:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6895b
    call   func_66c19
    test   %eax,%eax
    je     jump_6895b
    mov    $0x1,%eax
    jmp    jump_6895d
  jump_6895b:
    xor    %eax,%eax
  jump_6895d:
    test   %eax,%eax
    je     jump_6897e
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_9428a
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_6897e:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_6e0b0
    jmp    jump_6712e


/*----------------------------------------------------------------*/
func_68992:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_689d1
    cmp    $0x1,%edx
    je     jump_689b8
    cmpl   $0x0,data_132cbc
    je     jump_689d1
  jump_689b8:
    call   func_749aa
    test   %eax,%eax
    jne    jump_689d1
    call   func_66c19
    test   %eax,%eax
    je     jump_689d1
    mov    $0x1,%eax
    jmp    jump_689d3
  jump_689d1:
    xor    %eax,%eax
  jump_689d3:
    test   %eax,%eax
    je     jump_689f4
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_942aa
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_689f4:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_6e0e0
    jmp    jump_6712e


/*----------------------------------------------------------------*/
func_68a08:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_68a47
    cmp    $0x1,%edx
    je     jump_68a2e
    cmpl   $0x0,data_132cbc
    je     jump_68a47
  jump_68a2e:
    call   func_749aa
    test   %eax,%eax
    jne    jump_68a47
    call   func_66c19
    test   %eax,%eax
    je     jump_68a47
    mov    $0x1,%eax
    jmp    jump_68a49
  jump_68a47:
    xor    %eax,%eax
  jump_68a49:
    test   %eax,%eax
    je     jump_68a6a
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_942c7
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_68a6a:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_6e160
    jmp    jump_6712e


/*----------------------------------------------------------------*/
func_68a7e:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_68abe
    cmp    $0x1,%edx
    je     jump_68aa5
    cmpl   $0x0,data_132cbc
    je     jump_68abe
  jump_68aa5:
    call   func_749aa
    test   %eax,%eax
    jne    jump_68abe
    call   func_66c19
    test   %eax,%eax
    je     jump_68abe
    mov    $0x1,%eax
    jmp    jump_68ac0
  jump_68abe:
    xor    %eax,%eax
  jump_68ac0:
    test   %eax,%eax
    je     jump_68add
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_942eb
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_68add:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_6e010
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_68b0f
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_68b0f:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_68b35
  jump_68b20:
    push   $data_93c9b
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_68b35:
    cmp    $0xe,%edx
    jb     jump_68b20
    mov    $0x1,%edx
    jmp    jump_68b56
  jump_68b41:
    push   $data_93c9d
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_68b56:
    cmp    data_132ca4,%edx
    jb     jump_68b41
    jmp    jump_67808
  jump_68c43:
    push   %esi
    push   $data_93df4
  jump_68c49:
    mov    data_132cb4,%eax
    push   %eax
    jmp    jump_67349


/*----------------------------------------------------------------*/
func_68ffc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_6903c
    cmp    $0x1,%edx
    je     jump_69023
    cmpl   $0x0,data_132cbc
    je     jump_6903c
  jump_69023:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6903c
    call   func_66c19
    test   %eax,%eax
    je     jump_6903c
    mov    $0x1,%eax
    jmp    jump_6903e
  jump_6903c:
    xor    %eax,%eax
  jump_6903e:
    test   %eax,%eax
    je     jump_69065
    mov    0x18(%esp),%edi
    push   %edi
    mov    0x18(%esp),%ebp
    push   %ebp
    mov    0x18(%esp),%eax
    push   %eax
    push   $data_9439c
    mov    data_132cb4,%edx
    push   %edx
    call   func_786ea
    add    $0x14,%esp
  jump_69065:
    mov    0x18(%esp),%ebx
    push   %ebx
    mov    0x18(%esp),%ecx
    push   %ecx
    mov    0x18(%esp),%esi
    push   %esi
    call   func_6e330
    add    $0xc,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_690a1
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_690a1:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_690c7
  jump_690b2:
    push   $data_93c9b
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_690c7:
    cmp    $0xe,%edx
    jb     jump_690b2
    mov    $0x1,%edx
    jmp    jump_690e8
  jump_690d3:
    push   $data_93c9d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_690e8:
    cmp    data_132ca4,%edx
    jb     jump_690d3
    jmp    jump_685dc


/*----------------------------------------------------------------*/
func_690f5:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_69135
    cmp    $0x1,%edx
    je     jump_6911c
    cmpl   $0x0,data_132cbc
    je     jump_69135
  jump_6911c:
    call   func_749aa
    test   %eax,%eax
    jne    jump_69135
    call   func_66c19
    test   %eax,%eax
    je     jump_69135
    mov    $0x1,%eax
    jmp    jump_69137
  jump_69135:
    xor    %eax,%eax
  jump_69137:
    test   %eax,%eax
    je     jump_69154
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_943c8
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_69154:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_6e460
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_69186
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_69186:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_691ac
  jump_69197:
    push   $data_93c9b
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_691ac:
    cmp    $0xe,%edx
    jb     jump_69197
    mov    $0x1,%edx
    jmp    jump_691cd
  jump_691b8:
    push   $data_93c9d
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_691cd:
    cmp    data_132ca4,%edx
    jb     jump_691b8
    jmp    jump_68c43


/*----------------------------------------------------------------*/
func_691da:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_6921a
    cmp    $0x1,%edx
    je     jump_69201
    cmpl   $0x0,data_132cbc
    je     jump_6921a
  jump_69201:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6921a
    call   func_66c19
    test   %eax,%eax
    je     jump_6921a
    mov    $0x1,%eax
    jmp    jump_6921c
  jump_6921a:
    xor    %eax,%eax
  jump_6921c:
    test   %eax,%eax
    je     jump_69248
    mov    0x1c(%esp),%edi
    push   %edi
    mov    0x1c(%esp),%ebp
    push   %ebp
    mov    0x1c(%esp),%eax
    push   %eax
    mov    0x1c(%esp),%edx
    push   %edx
    push   $data_943e7
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x18,%esp
  jump_69248:
    mov    0x1c(%esp),%ecx
    push   %ecx
    mov    0x1c(%esp),%esi
    push   %esi
    mov    0x1c(%esp),%edi
    push   %edi
    mov    0x1c(%esp),%ebp
    push   %ebp
    call   func_6e3d0
    add    $0x10,%esp
    jmp    jump_671b6


/*----------------------------------------------------------------*/
func_699cc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_69a0c
    cmp    $0x1,%edx
    je     jump_699f3
    cmpl   $0x0,data_132cbc
    je     jump_69a0c
  jump_699f3:
    call   func_749aa
    test   %eax,%eax
    jne    jump_69a0c
    call   func_66c19
    test   %eax,%eax
    je     jump_69a0c
    mov    $0x1,%eax
    jmp    jump_69a0e
  jump_69a0c:
    xor    %eax,%eax
  jump_69a0e:
    test   %eax,%eax
    je     jump_69a26
    push   $data_94549
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
  jump_69a26:
    call   func_70690
    mov    %eax,%esi
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_69a50
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_69a50:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_69a76
  jump_69a61:
    push   $data_93c9b
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_69a76:
    cmp    $0xe,%edx
    jb     jump_69a61
    mov    $0x1,%edx
    jmp    jump_69a97
  jump_69a82:
    push   $data_93c9d
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_69a97:
    cmp    data_132ca4,%edx
    jb     jump_69a82
    jmp    jump_680cb


/*----------------------------------------------------------------*/
func_69aa4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_69ae4
    cmp    $0x1,%edx
    je     jump_69acb
    cmpl   $0x0,data_132cbc
    je     jump_69ae4
  jump_69acb:
    call   func_749aa
    test   %eax,%eax
    jne    jump_69ae4
    call   func_66c19
    test   %eax,%eax
    je     jump_69ae4
    mov    $0x1,%eax
    jmp    jump_69ae6
  jump_69ae4:
    xor    %eax,%eax
  jump_69ae6:
    test   %eax,%eax
    je     jump_69b07
    mov    0x14(%esp),%edi
    push   %edi
    mov    0x14(%esp),%ebp
    push   %ebp
    push   $data_94560
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_69b07:
    mov    0x14(%esp),%edx
    push   %edx
    mov    0x14(%esp),%ebx
    push   %ebx
    call   func_705d0
    mov    %eax,%esi
    add    $0x8,%esp
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_69b3e
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_69b3e:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_69b63
  jump_69b4f:
    push   $data_93c9b
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_69b63:
    cmp    $0xe,%edx
    jb     jump_69b4f
    mov    $0x1,%edx
    jmp    jump_69b84
  jump_69b6f:
    push   $data_93c9d
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_69b84:
    cmp    data_132ca4,%edx
    jb     jump_69b6f
    jmp    jump_67f80


/*----------------------------------------------------------------*/
func_69bfe:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_69c3e
    cmp    $0x1,%edx
    je     jump_69c25
    cmpl   $0x0,data_132cbc
    je     jump_69c3e
  jump_69c25:
    call   func_749aa
    test   %eax,%eax
    jne    jump_69c3e
    call   func_66c19
    test   %eax,%eax
    je     jump_69c3e
    mov    $0x1,%eax
    jmp    jump_69c40
  jump_69c3e:
    xor    %eax,%eax
  jump_69c40:
    test   %eax,%eax
    je     jump_69c5d
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_945a6
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_69c5d:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_70780
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_69c8f
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_69c8f:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_69cb5
  jump_69ca0:
    push   $data_93c9b
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_69cb5:
    cmp    $0xe,%edx
    jb     jump_69ca0
    mov    $0x1,%edx
    jmp    jump_69cd6
  jump_69cc1:
    push   $data_93c9d
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_69cd6:
    cmp    data_132ca4,%edx
    jb     jump_69cc1
    jmp    jump_670b2


/*----------------------------------------------------------------*/
func_69e49:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_69e88
    cmp    $0x1,%edx
    je     jump_69e6f
    cmpl   $0x0,data_132cbc
    je     jump_69e88
  jump_69e6f:
    call   func_749aa
    test   %eax,%eax
    jne    jump_69e88
    call   func_66c19
    test   %eax,%eax
    je     jump_69e88
    mov    $0x1,%eax
    jmp    jump_69e8a
  jump_69e88:
    xor    %eax,%eax
  jump_69e8a:
    test   %eax,%eax
    je     jump_69ea7
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_9460e
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_69ea7:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_70bd0
    jmp    jump_67228


/*----------------------------------------------------------------*/
func_69eb6:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_69ef5
    cmp    $0x1,%edx
    je     jump_69edc
    cmpl   $0x0,data_132cbc
    je     jump_69ef5
  jump_69edc:
    call   func_749aa
    test   %eax,%eax
    jne    jump_69ef5
    call   func_66c19
    test   %eax,%eax
    je     jump_69ef5
    mov    $0x1,%eax
    jmp    jump_69ef7
  jump_69ef5:
    xor    %eax,%eax
  jump_69ef7:
    test   %eax,%eax
    je     jump_69f14
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_94628
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_69f14:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_70c10
    jmp    jump_67228


/*----------------------------------------------------------------*/
func_69f90:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_69fcf
    cmp    $0x1,%edx
    je     jump_69fb6
    cmpl   $0x0,data_132cbc
    je     jump_69fcf
  jump_69fb6:
    call   func_749aa
    test   %eax,%eax
    jne    jump_69fcf
    call   func_66c19
    test   %eax,%eax
    je     jump_69fcf
    mov    $0x1,%eax
    jmp    jump_69fd1
  jump_69fcf:
    xor    %eax,%eax
  jump_69fd1:
    test   %eax,%eax
    je     jump_69fee
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_9465c
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_69fee:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_70d70
    jmp    jump_67228


/*----------------------------------------------------------------*/
func_6a177:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_6a1b7
    cmp    $0x1,%edx
    je     jump_6a19e
    cmpl   $0x0,data_132cbc
    je     jump_6a1b7
  jump_6a19e:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6a1b7
    call   func_66c19
    test   %eax,%eax
    je     jump_6a1b7
    mov    $0x1,%eax
    jmp    jump_6a1b9
  jump_6a1b7:
    xor    %eax,%eax
  jump_6a1b9:
    test   %eax,%eax
    je     jump_6a1d6
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_946e3
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_6a1d6:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_70ea0
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_6a208
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_6a208:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_6a22e
  jump_6a219:
    push   $data_93c9b
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_6a22e:
    cmp    $0xe,%edx
    jb     jump_6a219
    mov    $0x1,%edx
    jmp    jump_6a24f
  jump_6a23a:
    push   $data_93c9d
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_6a24f:
    cmp    data_132ca4,%edx
    jb     jump_6a23a
    jmp    jump_67808


/*----------------------------------------------------------------*/
func_6ad3a:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_6ad79
    cmp    $0x1,%edx
    je     jump_6ad60
    cmpl   $0x0,data_132cbc
    je     jump_6ad79
  jump_6ad60:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6ad79
    call   func_66c19
    test   %eax,%eax
    je     jump_6ad79
    mov    $0x1,%eax
    jmp    jump_6ad7b
  jump_6ad79:
    xor    %eax,%eax
  jump_6ad7b:
    test   %eax,%eax
    je     jump_6ad9c
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_948b6
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_6ad9c:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_711c0
    jmp    jump_6712e


/*----------------------------------------------------------------*/
func_6b436:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_6b476
    cmp    $0x1,%edx
    je     jump_6b45d
    cmpl   $0x0,data_132cbc
    je     jump_6b476
  jump_6b45d:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6b476
    call   func_66c19
    test   %eax,%eax
    je     jump_6b476
    mov    $0x1,%eax
    jmp    jump_6b478
  jump_6b476:
    xor    %eax,%eax
  jump_6b478:
    test   %eax,%eax
    je     jump_6b495
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_94a0c
    mov    data_132cb4,%ebp
    push   %ebp
    call   func_786ea
    add    $0xc,%esp
  jump_6b495:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_71340
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_132cb8
    je     jump_67351
    cmpl   $0x1,data_132ca4
    je     jump_6b4c7
    cmpl   $0x0,data_132cbc
    je     jump_67351
  jump_6b4c7:
    call   func_749aa
    test   %eax,%eax
    jne    jump_67351
    xor    %edx,%edx
    jmp    jump_6b4ed
  jump_6b4d8:
    push   $data_93c9b
    mov    data_132cb4,%edi
    push   %edi
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_6b4ed:
    cmp    $0xe,%edx
    jb     jump_6b4d8
    mov    $0x1,%edx
    jmp    jump_6b50e
  jump_6b4f9:
    push   $data_93c9d
    mov    data_132cb4,%ebx
    push   %ebx
    call   func_786ea
    add    $0x8,%esp
    inc    %edx
  jump_6b50e:
    cmp    data_132ca4,%edx
    jb     jump_6b4f9
    jmp    jump_68c43


/*----------------------------------------------------------------*/
func_6b51b:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_6b55a
    cmp    $0x1,%edx
    je     jump_6b541
    cmpl   $0x0,data_132cbc
    je     jump_6b55a
  jump_6b541:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6b55a
    call   func_66c19
    test   %eax,%eax
    je     jump_6b55a
    mov    $0x1,%eax
    jmp    jump_6b55c
  jump_6b55a:
    xor    %eax,%eax
  jump_6b55c:
    test   %eax,%eax
    je     jump_6b57d
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_94a24
    mov    data_132cb4,%eax
    push   %eax
    call   func_786ea
    add    $0x10,%esp
  jump_6b57d:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_714e0
    jmp    jump_6712e


/*----------------------------------------------------------------*/
func_6b591:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132ca4,%edx
    inc    %edx
    mov    %edx,data_132ca4
    cmpl   $0x0,data_132cb8
    je     jump_6b5d1
    cmp    $0x1,%edx
    je     jump_6b5b8
    cmpl   $0x0,data_132cbc
    je     jump_6b5d1
  jump_6b5b8:
    call   func_749aa
    test   %eax,%eax
    jne    jump_6b5d1
    call   func_66c19
    test   %eax,%eax
    je     jump_6b5d1
    mov    $0x1,%eax
    jmp    jump_6b5d3
  jump_6b5d1:
    xor    %eax,%eax
  jump_6b5d3:
    test   %eax,%eax
    je     jump_6b5fa
    mov    0x18(%esp),%edi
    push   %edi
    mov    0x18(%esp),%ebp
    push   %ebp
    mov    0x18(%esp),%eax
    push   %eax
    push   $data_94a42
    mov    data_132cb4,%edx
    push   %edx
    call   func_786ea
    add    $0x14,%esp
  jump_6b5fa:
    mov    0x18(%esp),%ebx
    push   %ebx
    mov    0x18(%esp),%ecx
    push   %ecx
    mov    0x18(%esp),%esi
    push   %esi
    call   func_71610
    jmp    jump_671b3


/*----------------------------------------------------------------*/
func_6b984:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_987b4
    je     jump_6b9aa
    push   $func_6b984
    push   $func_66b05
    call   func_6633a
    add    $0x8,%esp
    xor    %ebx,%ebx
    mov    %ebx,data_987b4
  jump_6b9aa:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6b9ae:
/*----------------------------------------------------------------*/
    or     %al,(%eax)
    add    %al,(%eax)
    adc    %eax,(%eax)
    add    %al,(%eax)
    adc    (%eax),%al
    add    %al,(%eax)
    adc    (%eax),%eax
    add    %al,(%eax)
    adc    $0x0,%al
    add    %al,(%eax)
    adc    $0x17000000,%eax
    add    %al,(%eax)
    add    %bl,(%eax)
    add    %al,(%eax)
    add    %bl,(%edx)
    add    %al,(%eax)
    add    %bl,(%ebx)
    add    %al,(%eax)
    add    %bl,0x1e000000
    add    %al,(%eax)
    add    %ah,(%eax)
    add    %al,(%eax)
    add    %ah,(%edx)
    add    %al,(%eax)
    add    %ah,(%eax,%eax,1)
    add    %al,(%eax)
    add    %al,%es:(%eax)
    add    %ch,(%ecx)
    add    %al,(%eax)
    add    %ch,(%ebx)
    add    %al,(%eax)
    add    %ch,(%esi)
    add    %al,(%eax)
    add    %dh,(%ecx)
    add    %al,(%eax)
    add    %dh,(%ebx)
    add    %al,(%eax)
    add    %dh,(%edi)
    add    %al,(%eax)
    add    %bh,(%edx)
    add    %al,(%eax)
    add    %bh,0x41000000
    add    %al,(%eax)
    add    %al,0x0(%ebp)
    add    %al,(%eax)
    dec    %ecx
    add    %al,(%eax)
    add    %cl,0x0(%ebp)
    add    %al,(%eax)
    push   %edx
    add    %al,(%eax)
    add    %dl,0x0(%edi)
    add    %al,(%eax)
    pop    %esp
    add    %al,(%eax)
    add    %ah,0x0(%edx)
    add    %al,(%eax)
    add    %al,(%bx,%si)
    add    %ch,0x0(%esi)
    add    %al,(%eax)
    je     jump_6ba38
  jump_6ba38:
    add    %al,(%eax)
    jnp    jump_6ba3c
  jump_6ba3c:
    add    %al,(%eax)
    addb   $0x0,(%eax)
    add    %cl,-0x6e000000(%edx)
    add    %al,(%eax)
    add    %bl,-0x5c000000(%ebx)
    add    %al,(%eax)
    add    %ch,-0x47000000(%esi)
    add    %al,(%eax)
    add    %al,%ah
    add    %al,(%eax)
    add    %cl,%bh
    add    %al,(%eax)
    add    %bl,%ah
    add    %al,(%eax)
    add    %ch,%cl
    add    %al,(%eax)
    add    %dh,%bh
    add    %al,(%eax)
    add    %al,0x15000001
    add    %eax,(%eax)
    add    %ah,0x37000001
    add    %eax,(%eax)
    add    %cl,0x1(%ecx)
    add    %al,(%eax)
    pop    %ebp
    add    %eax,(%eax)
    add    %dh,0x1(%edx)
    add    %al,(%eax)
    mov    %al,(%ecx)
    add    %al,(%eax)
    lahf
    add    %eax,(%eax)
    add    %bh,-0x2dffffff(%eax)
    add    %eax,(%eax)
    add    %ch,%ch
    add    %eax,(%eax)
    add    %cl,(%ebx)
    add    (%eax),%al
    add    %ch,(%edx)
    add    (%eax),%al
    add    %cl,0x2(%ebx)
    add    %al,(%eax)
    outsb  %ds:(%esi),(%dx)
    add    (%eax),%al
    add    %dl,-0x45fffffe(%ebx)
    add    (%eax),%al
    add    %ah,%ah
    add    (%eax),%al
    add    %dl,(%eax)
    add    (%eax),%eax
    add    %bh,(%esi)
    add    (%eax),%eax
    add    %dh,0x3(%eax)
    add    %al,(%eax)
    movsb  %ds:(%esi),%es:(%edi)
    add    (%eax),%eax
    add    %bl,%bl
    add    (%eax),%eax
    add    %dl,(%esi)
    add    $0x0,%al
    add    %dl,0x0(%esp,%eax,1)
    add    %dl,-0x23fffffc(%esi)
    add    $0x0,%al
    add    %ah,(%esi)
    add    $0x5740000,%eax
    add    %al,(%eax)
    enter  $0x5,$0x0
    and    %al,(%esi)
    add    %al,(%eax)
    jge    jump_6baf6
    add    %al,(%eax)
    loopne jump_6bafa
    add    %al,(%eax)
  jump_6baf6:
    dec    %eax
    pop    %es
    add    %al,(%eax)
  jump_6bafa:
    mov    $0x7,%bh
    add    %al,(%eax)
    sub    $0xa9000008,%eax
    or     %al,(%eax)
    add    %ch,0xb8000009
    or     %eax,(%eax)
    add    %cl,0x0(%edx,%ecx,1)
    add    %ch,%cl
    or     (%eax),%al
    add    %dl,0x4000000b(%eax)
    or     $0x0,%al
    add    %bh,%dl
    or     $0x0,%al
    add    %al,%al
    or     $0xe910000,%eax
    add    %al,(%eax)
    outsl  %ds:(%esi),(%dx)
    sldt   (%eax)
    pop    %edx
    adc    %al,(%eax)
    add    %dl,0x11(%ebx)
    add    %al,(%eax)
    pop    %ebx
    adc    (%eax),%al
    add    %dh,0x13(%ecx)
    add    %al,(%eax)
    cltd
    adc    $0x0,%al
    add    %dl,%bl
    adc    $0x17200000,%eax
    add    %al,(%eax)
    sbbb   $0x0,(%eax)
    add    %dh,%ah
    sbb    %eax,(%eax)
    add    %al,0x2300001b(%eax)
    sbb    $0x1ede0000,%eax
    add    %al,(%eax)
    mov    $0x20,%ah
    add    %al,(%eax)
    cmpsb  %es:(%edi),%ds:(%esi)
    and    (%eax),%al
    add    %dh,-0x1cffffdc(%esi)
    add    %al,%es:(%eax)
    xor    (%ecx),%ebp
    add    %al,(%eax)
    cmpsb  %es:(%edi),%ds:(%esi)
    sub    (%eax),%eax
    add    %al,0x2e(%eax)
    add    %al,(%eax)
    add    %dh,(%ecx)
    add    %al,(%eax)
    jmp    jump_6bbb6


/*----------------------------------------------------------------*/
func_6bbae:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_987b8
    jne    jump_6bbd6
    push   $func_6c513
    push   $func_6bbae
    call   func_662d1
    add    $0x8,%esp
    movl   $0x1,data_987b8
  jump_6bbd6:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6bbda:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%edi
    mov    0x14(%esp),%edx
    mov    0x18(%esp),%ebx
    mov    0x10(%esp),%esi
    and    $0xf0,%esi
    mov    0x10(%esp),%ecx
    and    $0xf,%ecx
    mov    %ecx,%eax
    shl    $0x2,%eax
    add    %edi,%eax
    cmp    $0xc0,%esi
    jb     jump_6bc15
    jbe    jump_6bc20
    cmp    $0xe0,%esi
    je     jump_6bc2b
    pop    %edi
    pop    %esi
    ret
  jump_6bc15:
    cmp    $0xb0,%esi
    je     jump_6bc41
    pop    %edi
    pop    %esi
    ret
  jump_6bc20:
    and    $0xff,%edx
    mov    %edx,(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_6bc2b:
    and    $0xff,%edx
    mov    %edx,0x40(%eax)
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x80(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_6bc41:
    cmp    $0x5b,%edx
    jb     jump_6bc8f
    jbe    jump_6bd67
    cmp    $0x70,%edx
    jb     jump_6bc7a
    jbe    jump_6bcee
    cmp    $0x73,%edx
    jb     jump_6bc6e
    jbe    jump_6bd08
    cmp    $0x77,%edx
    je     jump_6bd15
    pop    %edi
    pop    %esi
    ret
  jump_6bc6e:
    cmp    $0x72,%edx
    je     jump_6bcfb
    pop    %edi
    pop    %esi
    ret
  jump_6bc7a:
    cmp    $0x6e,%edx
    jb     jump_6bc83
    jbe    jump_6bcd4
    jmp    jump_6bce1
  jump_6bc83:
    cmp    $0x5d,%edx
    je     jump_6bd74
    pop    %edi
    pop    %esi
    ret
  jump_6bc8f:
    cmp    $0x7,%edx
    jb     jump_6bcbd
    jbe    jump_6bd30
    cmp    $0xb,%edx
    jb     jump_6bcb1
    jbe    jump_6bd4c
    cmp    $0x40,%edx
    je     jump_6bd5a
    pop    %edi
    pop    %esi
    ret
  jump_6bcb1:
    cmp    $0xa,%edx
    je     jump_6bd3e
    pop    %edi
    pop    %esi
    ret
  jump_6bcbd:
    cmp    $0x1,%edx
    jb     jump_6bd8c
    jbe    jump_6bd22
    cmp    $0x6,%edx
    je     jump_6bd81
    pop    %edi
    pop    %esi
    ret
  jump_6bcd4:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0xc0(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_6bce1:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x100(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_6bcee:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x140(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_6bcfb:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x180(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_6bd08:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x1c0(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_6bd15:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x200(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_6bd22:
    xor    %eax,%eax
    mov    %bl,%al
    mov    %eax,0x240(%edi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6bd30:
    xor    %eax,%eax
    mov    %bl,%al
    mov    %eax,0x280(%edi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6bd3e:
    xor    %eax,%eax
    mov    %bl,%al
    mov    %eax,0x2c0(%edi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6bd4c:
    xor    %eax,%eax
    mov    %bl,%al
    mov    %eax,0x300(%edi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6bd5a:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x340(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_6bd67:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x380(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_6bd74:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x3c0(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_6bd81:
    xor    %eax,%eax
    mov    %bl,%al
    mov    %eax,0x400(%edi,%ecx,4)
  jump_6bd8c:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6bd8f:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %edx,%ecx
    xor    %edx,%edx
    jmp    jump_6bdab
  jump_6bd97:
    mov    (%eax),%esi
    cmp    $0xffffffff,%esi
    je     jump_6bdb3
    cmp    %esi,%ecx
    jne    jump_6bda7
    cmp    0x4(%eax),%ebx
    je     jump_6bdb5
  jump_6bda7:
    inc    %edx
    add    $0x20,%eax
  jump_6bdab:
    cmp    $0x200,%edx
    jl     jump_6bd97
  jump_6bdb3:
    xor    %eax,%eax
  jump_6bdb5:
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_6bdb8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    shl    $0x2,%edx
    lea    (%eax,%edx,1),%esi
    mov    0x4d8(%esi),%edx
    shl    $0x2,%edx
    lea    (%eax,%edx,1),%edi
    mov    0x294(%edi),%edx
    imul   0x314(%edi),%edx
    mov    $0x7f,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x5d8(%esi),%edx
    imul   %eax,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    push   %eax
    mov    0x494(%esi),%ecx
    push   %ecx
    call   func_6891c
    add    $0x8,%esp
    mov    0x2d4(%edi),%ebp
    push   %ebp
    mov    0x494(%esi),%eax
    push   %eax
    call   func_68992
    add    $0x8,%esp
  jump_6be1e:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6be24:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %edx,%eax
    mov    0x4d8(%esi,%eax,4),%edx
    mov    %edx,0xc(%esp)
    mov    0x558(%esi,%eax,4),%edx
    mov    %edx,(%esp)
    mov    0x598(%esi,%eax,4),%ebx
    mov    0x518(%esi,%eax,4),%eax
    mov    %eax,0x8(%esp)
    mov    0xc(%esp),%eax
    mov    0x94(%esi,%eax,4),%edx
    shl    $0x7,%edx
    mov    0x54(%esi,%eax,4),%eax
    or     %edx,%eax
    cmp    $0x2000,%eax
    jle    jump_6be80
    mov    $0x1,%edx
    sub    $0x1fff,%eax
    jmp    jump_6be96
  jump_6be80:
    jge    jump_6be92
    mov    $0x2000,%edx
    sub    %eax,%edx
    mov    %edx,%eax
    mov    $0xffffffff,%edx
    jmp    jump_6be96
  jump_6be92:
    xor    %eax,%eax
    xor    %edx,%edx
  jump_6be96:
    mov    0xc(%esp),%ecx
    imul   0x414(%esi,%ecx,4),%edx
    add    0x8(%esp),%edx
    test   %edx,%edx
    jge    jump_6beac
    xor    %edx,%edx
  jump_6beac:
    cmp    $0x7f,%edx
    jle    jump_6beb6
    mov    $0x7f,%edx
  jump_6beb6:
    mov    (%esp),%ecx
    mov    func_6b9ae(,%ecx,4),%ecx
    mov    %ecx,0x4(%esp)
    mov    0x8(%esp),%ecx
    mov    func_6b9ae(,%ecx,4),%ecx
    mov    func_6b9ae(,%edx,4),%edx
    sub    %ecx,%edx
    imul   %eax,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0xd,%edx
    sbb    %edx,%eax
    sar    $0xd,%eax
    lea    (%ecx,%eax,1),%ebp
    cmpl   $0x9,0xc(%esp)
    je     jump_6bf07
    mov    %ebx,%edx
    imul   %ecx,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idivl  0x4(%esp)
    imul   %ebp,%eax
    mov    %eax,%edx
    jmp    jump_6bf0e
  jump_6bf07:
    mov    %ebx,%edx
    imul   %ebp,%edx
    mov    %edx,%eax
  jump_6bf0e:
    sar    $0x1f,%edx
    idiv   %ecx
    mov    %eax,%ebx
    push   %ebx
    mov    0x494(%esi,%edi,4),%ecx
    push   %ecx
    call   func_688a6
    add    $0x8,%esp
    add    $0x10,%esp
    jmp    jump_6be1e


/*----------------------------------------------------------------*/
func_6bf2e:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    0x1b0(%eax),%eax
    mov    0x8(%eax),%eax
    mov    0xc(%esp),%ebx
    mov    0x8(%esp),%edx
    call   func_6bd8f
    test   %eax,%eax
    setne  %al
    and    $0xff,%eax
    ret


/*----------------------------------------------------------------*/
func_6bf53:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    0x20(%esp),%eax
    mov    0x18(%esp),%edi
    mov    0x1b0(%edi),%edi
    mov    %eax,%esi
    and    $0xf0,%esi
    mov    %eax,%edx
    and    $0xf,%edx
    mov    %edx,0x4(%esp)
    cmp    $0xb0,%esi
    je     jump_6bf90
    cmp    $0xc0,%esi
    je     jump_6bf90
    cmp    $0xe0,%esi
    jne    jump_6bfa7
  jump_6bf90:
    mov    0x28(%esp),%edx
    push   %edx
    mov    0x28(%esp),%ebx
    push   %ebx
    push   %eax
    lea    0x14(%edi),%eax
    push   %eax
    call   func_6bbda
    add    $0x10,%esp
  jump_6bfa7:
    cmp    $0x90,%esi
    jne    jump_6bfbb
    cmpl   $0x0,0x28(%esp)
    jne    jump_6bfbb
    mov    $0x80,%esi
  jump_6bfbb:
    mov    0x4(%esp),%ebp
    shl    $0x2,%ebp
    add    %edi,%ebp
    cmp    $0xb0,%esi
    jb     jump_6bff1
    jbe    jump_6c014
    cmp    $0xc0,%esi
    jb     jump_6c33e
    jbe    jump_6c111
    cmp    $0xe0,%esi
    je     jump_6c12e
    jmp    jump_6c33e
  jump_6bff1:
    cmp    $0x80,%esi
    jb     jump_6c33e
    jbe    jump_6c2e9
    cmp    $0x90,%esi
    je     jump_6c170
    jmp    jump_6c33e
  jump_6c014:
    mov    0x24(%esp),%esi
    cmp    $0x7,%esi
    jb     jump_6c03b
    jbe    jump_6c045
    cmp    $0xa,%esi
    jb     jump_6c33e
    cmp    $0xb,%esi
    jbe    jump_6c045
    cmp    $0x7b,%esi
    je     jump_6c0c9
    jmp    jump_6c33e
  jump_6c03b:
    cmp    $0x6,%esi
    je     jump_6c087
    jmp    jump_6c33e
  jump_6c045:
    xor    %esi,%esi
    jmp    jump_6c07a
  jump_6c049:
    mov    %esi,%eax
    shl    $0x2,%eax
    add    %edi,%eax
    mov    0x4d8(%eax),%edx
    cmp    0x4(%esp),%edx
    jne    jump_6c079
    mov    0x494(%eax),%ecx
    push   %ecx
    call   func_68a7e
    add    $0x4,%esp
    cmp    $0x4,%eax
    jne    jump_6c079
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_6bdb8
  jump_6c079:
    inc    %esi
  jump_6c07a:
    cmp    0x4d4(%edi),%esi
    jl     jump_6c049
    jmp    jump_6c33e
  jump_6c087:
    xor    %esi,%esi
    jmp    jump_6c0bc
  jump_6c08b:
    mov    %esi,%eax
    shl    $0x2,%eax
    add    %edi,%eax
    mov    0x4d8(%eax),%edx
    cmp    0x4(%esp),%edx
    jne    jump_6c0bb
    mov    0x494(%eax),%ecx
    push   %ecx
    call   func_68a7e
    add    $0x4,%esp
    cmp    $0x4,%eax
    jne    jump_6c0bb
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_6be24
  jump_6c0bb:
    inc    %esi
  jump_6c0bc:
    cmp    0x4d4(%edi),%esi
    jl     jump_6c08b
    jmp    jump_6c33e
  jump_6c0c9:
    xor    %esi,%esi
    jmp    jump_6c104
  jump_6c0cd:
    mov    %esi,%ebp
    shl    $0x2,%ebp
    add    %edi,%ebp
    mov    0x4d8(%ebp),%eax
    cmp    0x4(%esp),%eax
    jne    jump_6c103
    mov    0x494(%ebp),%ebx
    push   %ebx
    call   func_68a7e
    add    $0x4,%esp
    cmp    $0x4,%eax
    jne    jump_6c103
    mov    0x494(%ebp),%ecx
    push   %ecx
    call   func_68839
    add    $0x4,%esp
  jump_6c103:
    inc    %esi
  jump_6c104:
    cmp    0x4d4(%edi),%esi
    jl     jump_6c0cd
    jmp    jump_6c33e
  jump_6c111:
    mov    0x194(%ebp),%edx
    mov    0x8(%edi),%eax
    mov    0x24(%esp),%ebx
    call   func_6bd8f
    mov    %eax,0x454(%ebp)
    jmp    jump_6c33e
  jump_6c12e:
    xor    %esi,%esi
    jmp    jump_6c163
  jump_6c132:
    mov    %esi,%eax
    shl    $0x2,%eax
    add    %edi,%eax
    mov    0x4d8(%eax),%edx
    cmp    0x4(%esp),%edx
    jne    jump_6c162
    mov    0x494(%eax),%ecx
    push   %ecx
    call   func_68a7e
    add    $0x4,%esp
    cmp    $0x4,%eax
    jne    jump_6c162
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_6be24
  jump_6c162:
    inc    %esi
  jump_6c163:
    cmp    0x4d4(%edi),%esi
    jl     jump_6c132
    jmp    jump_6c33e
  jump_6c170:
    cmpl   $0x9,0x4(%esp)
    jne    jump_6c18e
    mov    0x8(%edi),%eax
    mov    0x24(%esp),%ebx
    mov    $0x7f,%edx
    call   func_6bd8f
    mov    %eax,0x454(%ebp)
  jump_6c18e:
    mov    0x4(%esp),%eax
    cmpl   $0x0,0x454(%edi,%eax,4)
    je     jump_6c33e
    xor    %esi,%esi
    jmp    jump_6c1bc
  jump_6c1a4:
    mov    %esi,%eax
    mov    0x494(%edi,%eax,4),%edx
    push   %edx
    call   func_68a7e
    add    $0x4,%esp
    cmp    $0x2,%eax
    je     jump_6c1c4
    inc    %esi
  jump_6c1bc:
    cmp    0x4d4(%edi),%esi
    jl     jump_6c1a4
  jump_6c1c4:
    cmp    0x4d4(%edi),%esi
    jne    jump_6c205
    mov    $0xffffffff,%edx
    xor    %eax,%eax
    jmp    jump_6c1eb
  jump_6c1d5:
    mov    %eax,%ebp
    shl    $0x2,%ebp
    add    %edi,%ebp
    mov    0x618(%ebp),%ebx
    cmp    %ebx,%edx
    jb     jump_6c1ea
    mov    %ebx,%edx
    mov    %eax,%esi
  jump_6c1ea:
    inc    %eax
  jump_6c1eb:
    cmp    0x4d4(%edi),%eax
    jl     jump_6c1d5
    mov    %esi,%eax
    mov    0x494(%edi,%eax,4),%ebp
    push   %ebp
    call   func_68839
    add    $0x4,%esp
  jump_6c205:
    mov    %esi,%ebp
    mov    0x4(%esp),%eax
    mov    %eax,0x4d8(%edi,%ebp,4)
    mov    0x24(%esp),%eax
    mov    %eax,0x518(%edi,%ebp,4)
    mov    0x4(%esp),%eax
    shl    $0x2,%eax
    lea    (%edi,%eax,1),%edx
    mov    %edx,(%esp)
    mov    0x454(%edx),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x558(%edi,%ebp,4)
    mov    0x454(%edx),%eax
    mov    0x1c(%eax),%eax
    mov    %eax,0x598(%edi,%ebp,4)
    mov    0x28(%esp),%eax
    mov    %eax,0x5d8(%edi,%ebp,4)
    mov    0x658(%edi),%eax
    lea    0x1(%eax),%edx
    mov    %edx,0x658(%edi)
    mov    %eax,0x618(%edi,%ebp,4)
    mov    0x494(%edi,%ebp,4),%ecx
    push   %ecx
    call   func_6847b
    add    $0x4,%esp
    mov    (%esp),%eax
    mov    0x454(%eax),%eax
    mov    0x18(%eax),%edx
    push   %edx
    mov    0x14(%eax),%ebx
    push   %ebx
    mov    0x494(%edi,%ebp,4),%ecx
    push   %ecx
    call   func_68670
    add    $0xc,%esp
    mov    (%esp),%eax
    mov    0x454(%eax),%eax
    mov    0x10(%eax),%edx
    push   %edx
    mov    0x8(%edi),%edx
    add    0xc(%eax),%edx
    push   %edx
    mov    0x494(%edi,%ebp,4),%ecx
    push   %ecx
    call   func_685ee
    add    $0xc,%esp
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_6be24
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_6bdb8
    mov    0x494(%edi,%ebp,4),%esi
    push   %esi
    call   func_686f2
  jump_6c2df:
    add    $0x4,%esp
    mov    $0x1,%eax
    jmp    jump_6c340
  jump_6c2e9:
    cmpl   $0x9,0x4(%esp)
    je     jump_6c33e
    xor    %esi,%esi
    jmp    jump_6c336
  jump_6c2f4:
    mov    %esi,%ebp
    shl    $0x2,%ebp
    add    %edi,%ebp
    mov    0x4d8(%ebp),%eax
    cmp    0x4(%esp),%eax
    jne    jump_6c335
    mov    0x518(%ebp),%eax
    cmp    0x24(%esp),%eax
    jne    jump_6c335
    mov    0x494(%ebp),%ecx
    push   %ecx
    call   func_68a7e
    add    $0x4,%esp
    cmp    $0x4,%eax
    jne    jump_6c335
    mov    0x494(%ebp),%esi
    push   %esi
    call   func_68839
    jmp    jump_6c2df
  jump_6c335:
    inc    %esi
  jump_6c336:
    cmp    0x4d4(%edi),%esi
    jl     jump_6c2f4
  jump_6c33e:
    xor    %eax,%eax
  jump_6c340:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6c513:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_987b8
    je     jump_6c539
    push   $func_6c513
    push   $func_6bbae
    call   func_6633a
    add    $0x8,%esp
    xor    %ebx,%ebx
    mov    %ebx,data_987b8
  jump_6c539:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6c53d:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_987bc
    jne    jump_6c565
    push   $func_6cb57
    push   $func_6c53d
    call   func_662d1
    add    $0x8,%esp
    movl   $0x1,data_987bc
  jump_6c565:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6c569:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    (%eax),%eax
    shr    $0x8,%eax
    ret


/*----------------------------------------------------------------*/
func_6c573:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%esi
    cmpl   $0x0,0x874(%esi)
    je     jump_6c58b
    push   %esi
    call   *0x874(%esi)
    add    $0x4,%esp
  jump_6c58b:
    cmpl   $0x0,0x88c(%esi)
    jle    jump_6c59d
    push   %esi
    call   func_6840e
    add    $0x4,%esp
  jump_6c59d:
    movl   $0xffffffff,0x88c(%esi)
    pop    %esi
    ret

vtable_6c5a9:
    .long   func_6c5ff
    .long   func_6c60c
    .long   func_6c825
    .long   func_6c825
    .long   func_6c678
    .long   func_6c825
    .long   func_6c6a9
    .long   func_6c6c0
    .long   func_6c6ea
    .long   func_6c774


/*----------------------------------------------------------------*/
func_6c5d1:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%esi
    xor    %ebp,%ebp
  jump_6c5da:
    test   %ebp,%ebp
    jne    jump_6c608
    mov    0x878(%esi),%edi
    mov    (%edi),%al
    cmp    $0x9,%al
    ja     func_6c825
    and    $0xff,%eax
    jmp    *%cs:vtable_6c5a9(,%eax,4)


/*----------------------------------------------------------------*/
func_6c5ff:
/*----------------------------------------------------------------*/
    push   %esi
    call   func_6c573
    add    $0x4,%esp
  jump_6c608:
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6c60c:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x888(%esi)
    je     func_6c825
    push   %edi
    call   func_6c569
    add    $0x4,%esp
    sub    $0x2,%eax
    push   %eax
    lea    0x6(%edi),%eax
    push   %eax
    push   %esi
    call   func_685ee
    add    $0xc,%esp
    xor    %eax,%eax
    mov    0x4(%edi),%al
    mov    $0x100,%ebp
    sub    %eax,%ebp
    xor    %edx,%edx
    mov    $0xf4240,%eax
    div    %ebp
    push   %eax
    push   %esi
    call   func_688a6
    add    $0x8,%esp
    push   $0x0
    push   $0x0
    push   %esi
    call   func_68670
  jump_6c65c:
    add    $0xc,%esp
    cmpl   $0x0,0x14(%esp)
    je     jump_6c820
    push   %esi
    call   func_686f2
    add    $0x4,%esp
    jmp    jump_6c820


/*----------------------------------------------------------------*/
func_6c678:
/*----------------------------------------------------------------*/
    mov    0x884(%esi),%ecx
    cmp    $0xffffffff,%ecx
    je     func_6c825
    movswl 0x4(%edi),%eax
    cmp    %ecx,%eax
    jne    jump_6c69e
    movl   $0x1,0x888(%esi)
    jmp    func_6c825
  jump_6c69e:
    mov    %ebp,0x888(%esi)
    jmp    func_6c825


/*----------------------------------------------------------------*/
func_6c6a9:
/*----------------------------------------------------------------*/
    mov    %edi,0x87c(%esi)
    xor    %eax,%eax
    mov    0x4(%edi),%ax
    mov    %eax,0x880(%esi)
    jmp    func_6c825


/*----------------------------------------------------------------*/
func_6c6c0:
/*----------------------------------------------------------------*/
    mov    0x880(%esi),%ebx
    cmp    $0xffff,%ebx
    je     jump_6c6df
    lea    -0x1(%ebx),%edx
    mov    %edx,0x880(%esi)
    test   %ebx,%ebx
    je     func_6c825
  jump_6c6df:
    mov    0x87c(%esi),%edi
    jmp    func_6c825


/*----------------------------------------------------------------*/
func_6c6ea:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x888(%esi)
    je     func_6c825
    cmpb   $0x0,0x7(%edi)
    je     jump_6c71f
    push   %ebp
    push   $0x2
    push   %esi
    call   func_68670
    add    $0xc,%esp
    xor    %eax,%eax
    mov    0x4(%edi),%ax
    mov    $0x10000,%ebp
    sub    %eax,%ebp
    xor    %edx,%edx
    mov    $0x7a12000,%eax
    jmp    jump_6c73e
  jump_6c71f:
    push   %ebp
    push   %ebp
    push   %esi
    call   func_68670
    add    $0xc,%esp
    movzwl 0x4(%edi),%ebp
    mov    $0x10000,%eax
    sub    %ebp,%eax
    mov    %eax,%ebp
    xor    %edx,%edx
    mov    $0xf424000,%eax
  jump_6c73e:
    div    %ebp
    push   %eax
    push   %esi
    call   func_688a6
    add    $0x8,%esp
    push   %edi
    call   func_6c569
    add    $0x4,%esp
    add    %eax,%edi
    add    $0x4,%edi
    push   %edi
    call   func_6c569
    add    $0x4,%esp
    sub    $0x2,%eax
    push   %eax
    lea    0x6(%edi),%eax
    push   %eax
    push   %esi
    call   func_685ee
    jmp    jump_6c65c


/*----------------------------------------------------------------*/
func_6c774:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x888(%esi)
    je     func_6c825
    push   %edi
    call   func_6c569
    add    $0x4,%esp
    sub    $0xc,%eax
    push   %eax
    lea    0x10(%edi),%eax
    push   %eax
    push   %esi
    call   func_685ee
    add    $0xc,%esp
    mov    0x4(%edi),%ebx
    push   %ebx
    push   %esi
    call   func_688a6
    add    $0x8,%esp
    xor    %eax,%eax
    mov    0x9(%edi),%al
    cmp    $0x1,%eax
    jne    jump_6c7bd
    cmpw   $0x0,0xa(%edi)
    jne    jump_6c7bd
    push   %ebp
    push   %ebp
    jmp    jump_6c807
  jump_6c7bd:
    xor    %eax,%eax
    mov    0x9(%edi),%al
    cmp    $0x2,%eax
    jne    jump_6c7d3
    cmpw   $0x0,0xa(%edi)
    jne    jump_6c7d3
    push   $0x0
    push   %eax
    jmp    jump_6c807
  jump_6c7d3:
    xor    %eax,%eax
    mov    0x9(%edi),%al
    cmp    $0x1,%eax
    jne    jump_6c7ee
    xor    %eax,%eax
    mov    0xa(%edi),%ax
    cmp    $0x4,%eax
    jne    jump_6c7ee
    push   $0x1
    push   $0x1
    jmp    jump_6c807
  jump_6c7ee:
    xor    %eax,%eax
    mov    0x9(%edi),%al
    cmp    $0x2,%eax
    jne    jump_6c810
    xor    %eax,%eax
    mov    0xa(%edi),%ax
    cmp    $0x4,%eax
    jne    jump_6c810
    push   $0x1
    push   $0x3
  jump_6c807:
    push   %esi
    call   func_68670
    add    $0xc,%esp
  jump_6c810:
    cmpl   $0x0,0x14(%esp)
    je     jump_6c820
    push   %esi
    call   func_686f2
    add    $0x4,%esp
  jump_6c820:
    mov    $0x1,%ebp


/*----------------------------------------------------------------*/
func_6c825:
/*----------------------------------------------------------------*/
    push   %edi
    call   func_6c569
    add    $0x4,%esp
    add    %edi,%eax
    add    $0x4,%eax
    mov    %eax,0x878(%esi)
    jmp    jump_6c5da


/*----------------------------------------------------------------*/
func_6c83e:
/*----------------------------------------------------------------*/
    push   $0x1
    mov    0x8(%esp),%edx
    push   %edx
    call   func_6c5d1
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_6cb57:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_987bc
    je     jump_6cb7d
    push   $func_6cb57
    push   $func_6c53d
    call   func_6633a
    add    $0x8,%esp
    xor    %ebx,%ebx
    mov    %ebx,data_987bc
  jump_6cb7d:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6cb90:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_98844
    jne    jump_6cc4b
    push   $func_6e4c0
    push   $func_6cb90
    call   func_662d1
    add    $0x8,%esp
    push   $0x80
    push   $data_987c0
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_98840
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132cf4
    call   func_6635f
    add    $0x8,%esp
    push   $0xc
    push   $data_132ce0
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132cfc
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132d00
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132cf0
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132cf8
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132cec
    call   func_6635f
    add    $0x8,%esp
    call   func_741c3
    movl   $0x1,data_98844
  jump_6cc4b:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6ccd0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    0x2c(%esp),%ebx
    mov    0x40(%ebx),%edx
    cmp    $0x7f,%edx
    jle    jump_6cceb
    movl   $0x7f,0x40(%ebx)
    jmp    jump_6ccf6
  jump_6cceb:
    test   %edx,%edx
    jge    jump_6ccf6
    movl   $0x0,0x40(%ebx)
  jump_6ccf6:
    mov    0x44(%ebx),%esi
    cmp    $0x7f,%esi
    jle    jump_6cd07
    movl   $0x7f,0x44(%ebx)
    jmp    jump_6cd12
  jump_6cd07:
    test   %esi,%esi
    jge    jump_6cd12
    movl   $0x0,0x44(%ebx)
  jump_6cd12:
    mov    0x40(%ebx),%eax
    mov    0x44(%ebx),%ecx
    mov    %eax,0xc(%esp)
    test   %eax,%eax
    je     jump_6cd25
    inc    %eax
    mov    %eax,0xc(%esp)
  jump_6cd25:
    mov    (%ebx),%eax
    mov    0x18(%eax),%edx
    cmp    $0x2,%edx
    je     jump_6cd38
    cmp    $0x3,%edx
    jne    jump_6ce8c
  jump_6cd38:
    mov    $0x7f,%esi
    lea    0x48(%ebx),%eax
    sub    %ecx,%esi
    lea    0x448(%ebx),%edx
    movzbl data_987c0(%esi),%esi
    mov    data_987c0(%ecx),%cl
    mov    0xc(%esp),%edi
    shl    $0x8,%edi
    and    $0xff,%ecx
    mov    %edi,0x8(%esp)
    testb  $0x1,0x38(%ebx)
    je     jump_6ce28
    mov    0x8(%esp),%ebx
    mov    0xc(%esp),%ebp
    xor    %edi,%edi
    mov    %ebx,0x18(%esp)
    imul   $0x0,%ebp,%ebx
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
    lea    0x0(%eax),%eax
  jump_6cd90:
    mov    %ebx,%ebp
    sar    $0x7,%ebp
    mov    %ebp,(%esp)
    imul   %esi,%ebp
    sar    $0x7,%ebp
    mov    %ebp,(%eax)
    mov    (%esp),%ebp
    imul   %ecx,%ebp
    add    $0x4,%edx
    sar    $0x7,%ebp
    add    $0x4,%eax
    mov    %ebp,-0x4(%edx)
    mov    0x18(%esp),%ebp
    add    $0x100,%edi
    add    %ebp,%ebx
    cmp    $0x8000,%edi
    jl     jump_6cd90
    mov    0xc(%esp),%ebx
    shl    $0x8,%ebx
    mov    %ebx,0x14(%esp)
    mov    0xc(%esp),%ebx
    mov    %ebx,0x4(%esp)
    mov    0x4(%esp),%ebp
    shl    $0x11,%ebx
    sub    %ebp,%ebx
    mov    $0xffff8000,%edi
    shl    $0xf,%ebx
    lea    0x0(%eax),%eax
  jump_6cdf0:
    mov    %ebx,%ebp
    sar    $0x7,%ebp
    mov    %ebp,(%esp)
    imul   %esi,%ebp
    sar    $0x7,%ebp
    mov    %ebp,(%eax)
    mov    (%esp),%ebp
    imul   %ecx,%ebp
    add    $0x4,%edx
    sar    $0x7,%ebp
    add    $0x4,%eax
    mov    %ebp,-0x4(%edx)
    mov    0x14(%esp),%ebp
    add    $0x100,%edi
    add    %ebp,%ebx
    test   %edi,%edi
    jge    jump_6cf3b
    jmp    jump_6cdf0
  jump_6ce28:
    mov    0x8(%esp),%ebx
    mov    %ebx,0x10(%esp)
    mov    0xc(%esp),%ebx
    mov    %ebx,0x4(%esp)
    mov    0x4(%esp),%ebp
    shl    $0x11,%ebx
    sub    %ebp,%ebx
    mov    $0xffff8000,%edi
    shl    $0xf,%ebx
    lea    0x0(%eax),%eax
    nop
  jump_6ce50:
    mov    %ebx,%ebp
    sar    $0x7,%ebp
    mov    %ebp,(%esp)
    imul   %esi,%ebp
    sar    $0x7,%ebp
    mov    %ebp,(%eax)
    mov    (%esp),%ebp
    imul   %ecx,%ebp
    add    $0x4,%edx
    sar    $0x7,%ebp
    add    $0x4,%eax
    mov    %ebp,-0x4(%edx)
    mov    0x10(%esp),%ebp
    add    $0x100,%edi
    add    %ebp,%ebx
    cmp    $0x8000,%edi
    jge    jump_6cf3b
    jmp    jump_6ce50
  jump_6ce8c:
    mov    0xc(%esp),%edx
    lea    0x48(%ebx),%eax
    mov    0x38(%ebx),%cl
    shl    $0x8,%edx
    test   $0x1,%cl
    je     jump_6cf09
    mov    0xc(%esp),%ebp
    mov    %edx,%ecx
    xor    %edi,%edi
    imul   $0x0,%ebp,%ebx
    lea    0x0(%eax),%eax
  jump_6ceb0:
    mov    %ebx,%edx
    add    $0x4,%eax
    add    $0x100,%edi
    sar    $0x7,%edx
    add    %ecx,%ebx
    mov    %edx,-0x4(%eax)
    cmp    $0x8000,%edi
    jl     jump_6ceb0
    mov    0xc(%esp),%ecx
    mov    %ecx,%edx
    mov    $0xffff8000,%ebx
    shl    $0x11,%edx
    mov    0xc(%esp),%esi
    sub    %ecx,%edx
    shl    $0x8,%esi
    shl    $0xf,%edx
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
    mov    %ebx,%ebx
  jump_6cef0:
    mov    %edx,%ecx
    add    $0x4,%eax
    add    $0x100,%ebx
    sar    $0x7,%ecx
    add    %esi,%edx
    mov    %ecx,-0x4(%eax)
    test   %ebx,%ebx
    jge    jump_6cf3b
    jmp    jump_6cef0
  jump_6cf09:
    mov    0xc(%esp),%ebx
    mov    %edx,%ecx
    mov    %ebx,%edx
    shl    $0x11,%edx
    sub    %ebx,%edx
    mov    %edx,%ebx
    mov    $0xffff8000,%edi
    shl    $0xf,%ebx
  jump_6cf20:
    mov    %ebx,%edx
    add    $0x4,%eax
    add    $0x100,%edi
    sar    $0x7,%edx
    add    %ecx,%ebx
    mov    %edx,-0x4(%eax)
    cmp    $0x8000,%edi
    jl     jump_6cf20
  jump_6cf3b:
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6cf50:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_132cf0,%esi
    cmpl   $0x0,data_98840
    jne    jump_6d10a
    mov    $0x1,%ebx
    mov    0x10(%esp),%eax
    mov    %ebx,data_98840
    mov    %eax,data_132cf4
    call   func_67234
    mov    %eax,%edi
    mov    %eax,data_132cfc
    mov    data_132cf4,%eax
    cmpl   $0x0,0x54(%eax)
    jne    jump_6cfa7
    push   %edi
    call   func_67239
    xor    %ecx,%ecx
    add    $0x4,%esp
    mov    %ecx,data_98840
    jmp    jump_6d10a
  jump_6cfa7:
    mov    0x34(%eax),%edi
    movswl (%edi),%edi
    mov    %edi,data_132cf8
    cmp    $0xffffffff,%edi
    je     jump_6cfbd
    cmp    0x38(%eax),%edi
    jne    jump_6cfde
  jump_6cfbd:
    mov    data_132cfc,%edx
    push   %edx
    call   func_67239
    xor    %ebx,%ebx
    add    $0x4,%esp
    mov    %ebx,data_98840
    mov    data_132cf0,%esi
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6cfde:
    push   %eax
    mov    %edi,0x38(%eax)
    call   func_74197
    xor    %eax,%eax
    mov    %eax,data_132d00
    mov    data_132cf4,%eax
    add    $0x4,%esp
    mov    0x60(%eax),%esi
    mov    0x5c(%eax),%eax
    mov    %esi,data_132cf0
    mov    %eax,data_132cec
    test   %esi,%esi
    je     jump_6d048
  jump_6d00b:
    mov    data_132cec,%eax
    cmpl   $0x4,0x4(%eax)
    jne    jump_6d025
    push   %eax
    incl   data_132d00
    call   func_73f04
    add    $0x4,%esp
  jump_6d025:
    mov    data_132cf0,%esi
    mov    data_132cec,%edi
    dec    %esi
    add    $0x894,%edi
    mov    %esi,data_132cf0
    mov    %edi,data_132cec
    test   %esi,%esi
    jne    jump_6d00b
  jump_6d048:
    mov    data_132cf4,%eax
    mov    data_132d00,%edi
    mov    %edi,0x64(%eax)
    mov    data_132cf8,%edi
    xor    $0x1,%di
    push   %edi
    push   %eax
    call   func_74105
    mov    data_132cf4,%eax
    mov    0x1c(%eax),%dl
    add    $0x8,%esp
    test   $0x10,%dl
    je     jump_6d0a8
    push   $0x0
    push   $data_132ce0
    mov    data_132cf8,%di
    mov    (%eax),%ebp
    push   $0x405
    xor    %edx,%edx
    xor    $0x1,%edi
    push   %ebp
    mov    %dx,data_132ce4
    mov    %di,data_132ce6
    call   func_67247
    add    $0x10,%esp
  jump_6d0a8:
    mov    data_132cf4,%edi
    mov    0x64(%edi),%eax
    mov    data_132cf0,%esi
    test   %eax,%eax
    je     jump_6d0c4
    movl   $0x0,0x58(%edi)
    jmp    jump_6d0f3
  jump_6d0c4:
    mov    0x58(%edi),%eax
    lea    0x1(%eax),%edx
    mov    %edx,0x58(%edi)
    cmp    $0x2,%eax
    jne    jump_6d0f3
    cmpl   $0x0,0x54(%edi)
    je     jump_6d0f3
    push   $0x0
    push   $0x0
    push   $0x402
    mov    (%edi),%ebx
    push   %ebx
    call   func_67247
    add    $0x10,%esp
    movl   $0x0,0x54(%edi)
  jump_6d0f3:
    mov    data_132cfc,%ecx
    push   %ecx
    xor    %edi,%edi
    call   func_67239
    add    $0x4,%esp
    mov    %edi,data_98840
  jump_6d10a:
    mov    data_132cf0,%esi
    pop    %ebp
    pop    %edi
    pop    %esi
    ret

vtable_6d114:
    .long   func_6d1f1
    .long   func_6d213
    .long   func_6d235
    .long   func_6d257

vtable_6d124:
    .long   func_6d3c1
    .long   func_6d3e1
    .long   func_6d3d1
    .long   func_6d3ea


/*----------------------------------------------------------------*/
func_6d140:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x28,%esp
    mov    0x38(%esp),%esi
    mov    0x54(%esi),%eax
    mov    %eax,0x1c(%esp)
    test   %eax,%eax
    je     jump_6d1d1
    mov    0x60(%esi),%ecx
    xor    %ebx,%ebx
    test   %ecx,%ecx
    jle    jump_6d191
    xor    %eax,%eax
  jump_6d164:
    mov    0x5c(%esi),%ecx
    mov    0x4(%ecx,%eax,1),%ebp
    mov    %ebp,0x890(%ecx,%eax,1)
    mov    0x5c(%esi),%ecx
    add    %eax,%ecx
    cmpl   $0x4,0x4(%ecx)
    jne    jump_6d184
    movl   $0x8,0x4(%ecx)
  jump_6d184:
    inc    %ebx
    mov    0x60(%esi),%edx
    add    $0x894,%eax
    cmp    %edx,%ebx
    jl     jump_6d164
  jump_6d191:
    cmpl   $0x0,0x54(%esi)
    je     jump_6d1b2
    push   $0x0
    push   $0x0
    push   $0x402
    mov    (%esi),%ecx
    push   %ecx
    call   func_67247
    add    $0x10,%esp
    movl   $0x0,0x54(%esi)
  jump_6d1b2:
    push   %esi
    call   func_74197
    add    $0x4,%esp
    push   $0x0
    push   %esi
    call   func_74105
    add    $0x8,%esp
    push   $0x1
    push   %esi
    call   func_74105
    add    $0x8,%esp
  jump_6d1d1:
    mov    data_13308c,%eax
    mov    data_133090,%ebp
    add    %eax,%eax
    or     %ebp,%eax
    cmp    $0x3,%eax
    ja     jump_6d277
    jmp    *%cs:vtable_6d114(,%eax,4)


/*----------------------------------------------------------------*/
func_6d1f1:
/*----------------------------------------------------------------*/
    mov    $0x1,%ecx
    mov    $0x2,%ebp
    xor    %ebx,%ebx
    mov    $0x3,%eax
    mov    %ebx,(%esp)
    mov    %ecx,0x4(%esp)
    mov    %ebp,0x8(%esp)
    mov    %eax,0xc(%esp)
    jmp    jump_6d277


/*----------------------------------------------------------------*/
func_6d213:
/*----------------------------------------------------------------*/
    mov    $0x1,%ecx
    mov    $0x3,%eax
    mov    $0x2,%edx
    xor    %ebp,%ebp
    mov    %ecx,(%esp)
    mov    %ebp,0x4(%esp)
    mov    %eax,0x8(%esp)
    mov    %edx,0xc(%esp)
    jmp    jump_6d277


/*----------------------------------------------------------------*/
func_6d235:
/*----------------------------------------------------------------*/
    mov    $0x2,%ebp
    mov    $0x3,%eax
    mov    $0x1,%ebx
    xor    %edx,%edx
    mov    %ebp,(%esp)
    mov    %eax,0x4(%esp)
    mov    %edx,0x8(%esp)
    mov    %ebx,0xc(%esp)
    jmp    jump_6d277


/*----------------------------------------------------------------*/
func_6d257:
/*----------------------------------------------------------------*/
    mov    $0x3,%eax
    mov    $0x2,%edx
    mov    $0x1,%ebx
    xor    %ecx,%ecx
    mov    %eax,(%esp)
    mov    %edx,0x4(%esp)
    mov    %ebx,0x8(%esp)
    mov    %ecx,0xc(%esp)
  jump_6d277:
    mov    0x4(%esi),%ecx
    xor    %eax,%eax
  jump_6d27c:
    mov    (%esp,%eax,1),%ebx
    cmpb   $0x0,(%ecx,%ebx,1)
    je     jump_6d28a
    mov    %ebx,0x18(%esi)
    jmp    jump_6d292
  jump_6d28a:
    add    $0x4,%eax
    cmp    $0x10,%eax
    jl     jump_6d27c
  jump_6d292:
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    mov    0x4(%esi),%ebx
    sub    %edx,%eax
    mov    0x1a(%ebx,%eax,2),%eax
    mov    %eax,0x1c(%esi)
    mov    data_133074,%eax
    cmp    $0x1,%eax
    jb     jump_6d2bb
    jbe    jump_6d2dd
    cmp    $0x2,%eax
    je     jump_6d2fb
    jmp    jump_6d319
  jump_6d2bb:
    test   %eax,%eax
    jne    jump_6d319
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    mov    0x4(%esi),%ebx
    sub    %edx,%eax
    mov    0x10(%ebx,%eax,2),%ax
    and    $0xffff,%eax
    jmp    jump_6d3ae
  jump_6d2dd:
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    mov    0x4(%esi),%ebx
    sub    %edx,%eax
    mov    0x12(%ebx,%eax,2),%ax
    and    $0xffff,%eax
    jmp    jump_6d3ae
  jump_6d2fb:
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    mov    0x4(%esi),%ebx
    sub    %edx,%eax
    mov    0x14(%ebx,%eax,2),%ax
    and    $0xffff,%eax
    jmp    jump_6d3ae
  jump_6d319:
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    0x4(%esi),%ebx
    add    %eax,%eax
    add    %eax,%ebx
    xor    %eax,%eax
    mov    0x10(%ebx),%ax
    mov    %eax,(%esp)
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    0x4(%esi),%ebx
    add    %eax,%eax
    add    %eax,%ebx
    xor    %eax,%eax
    mov    0x12(%ebx),%ax
    mov    %eax,0x4(%esp)
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    mov    data_133074,%ebp
    sub    %edx,%eax
    mov    0x4(%esi),%ebx
    add    %eax,%eax
    xor    %ecx,%ecx
    add    %eax,%ebx
    xor    %eax,%eax
    mov    $0x7fffffff,%edx
    mov    0x14(%ebx),%ax
    mov    %edx,0x24(%esp)
    mov    %eax,0x8(%esp)
    xor    %ebx,%ebx
  jump_6d382:
    mov    %ebp,%eax
    sub    (%esp,%ebx,1),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    cmp    0x24(%esp),%eax
    jg     jump_6d3a2
    mov    %ebp,%eax
    sub    (%esp,%ebx,1),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,0x24(%esp)
    mov    %ecx,%edi
  jump_6d3a2:
    inc    %ecx
    add    $0x4,%ebx
    cmp    $0x3,%ecx
    jl     jump_6d382
    mov    (%esp,%edi,4),%eax
  jump_6d3ae:
    mov    %eax,0x14(%esi)
    mov    0x18(%esi),%eax
    cmp    $0x3,%eax
    ja     jump_6d3f8
    jmp    *%cs:vtable_6d124(,%eax,4)


/*----------------------------------------------------------------*/
func_6d3c1:
/*----------------------------------------------------------------*/
    movl   $0x1,0x3c(%esi)
    movl   $0x1,0x40(%esi)
    jmp    jump_6d3f8


/*----------------------------------------------------------------*/
func_6d3d1:
/*----------------------------------------------------------------*/
    movl   $0x2,0x3c(%esi)
    movl   $0x1,0x40(%esi)
    jmp    jump_6d3f8


/*----------------------------------------------------------------*/
func_6d3e1:
/*----------------------------------------------------------------*/
    movl   $0x1,0x3c(%esi)
    jmp    jump_6d3f1


/*----------------------------------------------------------------*/
func_6d3ea:
/*----------------------------------------------------------------*/
    movl   $0x2,0x3c(%esi)
  jump_6d3f1:
    movl   $0x2,0x40(%esi)
  jump_6d3f8:
    mov    data_13307c,%ebp
    mov    0x14(%esi),%edx
    imul   %ebp,%edx
    mov    $0x3e8,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x40(%esi),%edx
    imul   %eax,%edx
    mov    0x3c(%esi),%eax
    imul   %eax,%edx
    mov    %edx,0x10(%esi)
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    0x4(%esi),%ebp
    add    %eax,%eax
    add    %eax,%ebp
    xor    %eax,%eax
    mov    0x16(%ebp),%ax
    mov    %eax,0x20(%esp)
    mov    data_1330b4,%eax
    movzwl 0x18(%ebp),%ebp
    test   %eax,%eax
    je     jump_6d47b
    cmp    $0x800,%ebp
    jle    jump_6d456
    mov    $0x800,%ebp
  jump_6d456:
    cmpl   $0x800,0x20(%esp)
    jle    jump_6d47b
    mov    $0xa,%ecx
    mov    $data_132f70,%edi
    mov    $data_94c10,%esi
    xor    %eax,%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    jmp    jump_6d5b6
  jump_6d47b:
    mov    $0x7fffffff,%ebx
    mov    $0x8,%ecx
    jmp    jump_6d4a5
  jump_6d487:
    mov    %ecx,%eax
    sub    0x10(%esi),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    cmp    %ebx,%eax
    jg     jump_6d4a3
    mov    %ecx,%eax
    sub    0x10(%esi),%eax
    mov    %ecx,%edi
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,%ebx
  jump_6d4a3:
    add    %ecx,%ecx
  jump_6d4a5:
    mov    data_133078,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    cmp    %eax,%ecx
    jle    jump_6d487
    mov    0x20(%esp),%ebx
    mov    %edi,0x10(%esi)
    cmp    %ebx,%edi
    jge    jump_6d4c5
    mov    %ebx,0x10(%esi)
  jump_6d4c5:
    cmp    0x10(%esi),%ebp
    jge    jump_6d4cd
    mov    %ebp,0x10(%esi)
  jump_6d4cd:
    mov    data_1330b4,%edi
    mov    0x20(%esi),%eax
    test   %edi,%edi
    je     jump_6d4ea
    shr    $0xc,%eax
    add    $0xfff,%eax
    and    $0xff000,%eax
    shl    $0xc,%eax
  jump_6d4ea:
    mov    0x8(%esi),%edx
    mov    %eax,(%edx)
    mov    0x10(%esi),%ebp
    mov    0x8(%esi),%edx
    add    %ebp,%eax
    mov    %eax,0x4(%edx)
    mov    0x8(%esi),%eax
    mov    (%eax),%edx
    shr    $0x10,%edx
    mov    (%eax),%eax
    shl    $0x4,%edx
    and    $0xffff,%eax
    add    %eax,%edx
    mov    0x8(%esi),%eax
    mov    %edx,0x2c(%esi)
    mov    0x4(%eax),%edx
    shr    $0x10,%edx
    mov    0x4(%eax),%eax
    shl    $0x4,%edx
    and    $0xffff,%eax
    add    %eax,%edx
    mov    0x1c(%esp),%eax
    mov    %edx,0x30(%esi)
    test   %eax,%eax
    je     jump_6d5b1
    mov    0x60(%esi),%edx
    xor    %ecx,%ecx
    test   %edx,%edx
    jle    jump_6d55c
    xor    %eax,%eax
  jump_6d541:
    mov    0x5c(%esi),%ebx
    mov    0x890(%ebx,%eax,1),%edi
    mov    %edi,0x4(%ebx,%eax,1)
    inc    %ecx
    mov    0x60(%esi),%edi
    add    $0x894,%eax
    cmp    %edi,%ecx
    jl     jump_6d541
  jump_6d55c:
    push   %esi
    call   func_74197
    add    $0x4,%esp
    push   $0x0
    push   %esi
    call   func_74105
    add    $0x8,%esp
    push   $0x1
    push   %esi
    call   func_74105
    mov    0x54(%esi),%ebp
    add    $0x8,%esp
    test   %ebp,%ebp
    jne    jump_6d5b1
    mov    0x18(%esi),%ax
    mov    %ax,0x16(%esp)
    mov    0x14(%esi),%ax
    push   %ebp
    mov    %ax,0x18(%esp)
    lea    0x14(%esp),%eax
    push   %eax
    push   $0x401
    mov    (%esi),%eax
    push   %eax
    call   func_67247
    add    $0x10,%esp
    movl   $0x1,0x54(%esi)
  jump_6d5b1:
    mov    $0x1,%eax
  jump_6d5b6:
    add    $0x28,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6d5c0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x24,%esp
    mov    0x34(%esp),%ebp
    mov    0x38(%esp),%esi
    mov    $0x6,%ecx
    mov    %esp,%edi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x0(%ebp),%eax
    mov    0xc(%eax),%eax
    cmpw   $0x0,0x10(%eax)
    jbe    jump_6d659
    mov    0xc(%eax),%ebx
    shr    $0x10,%ebx
    mov    0xc(%eax),%eax
    shl    $0x4,%ebx
    and    $0xffff,%eax
    add    %eax,%ebx
    movswl (%esp),%eax
    test   %eax,%eax
    jge    jump_6d60a
    mov    (%ebx),%ax
    mov    %ax,(%esp)
  jump_6d60a:
    movswl 0x2(%esp),%eax
    test   %eax,%eax
    jge    jump_6d61c
    mov    0x2(%ebx),%ax
    mov    %ax,0x2(%esp)
  jump_6d61c:
    movswl 0x4(%esp),%eax
    test   %eax,%eax
    jge    jump_6d62e
    mov    0x4(%ebx),%ax
    mov    %ax,0x4(%esp)
  jump_6d62e:
    movswl 0x6(%esp),%eax
    test   %eax,%eax
    jge    jump_6d640
    mov    0x6(%ebx),%ax
    mov    %ax,0x6(%esp)
  jump_6d640:
    xor    %eax,%eax
  jump_6d642:
    cmpl   $0x0,0x8(%esp,%eax,1)
    jge    jump_6d651
    mov    0x8(%ebx,%eax,1),%edx
    mov    %edx,0x8(%esp,%eax,1)
  jump_6d651:
    add    $0x4,%eax
    cmp    $0x10,%eax
    jne    jump_6d642
  jump_6d659:
    mov    0x0(%ebp),%esi
    mov    0xc(%esi),%esi
    mov    $0x6,%ecx
    lea    0x16(%esi),%edi
    mov    %esp,%esi
    mov    data_133094,%ebx
    rep movsl %ds:(%esi),%es:(%edi)
    test   %ebx,%ebx
    jne    jump_6d690
    push   %ebx
    lea    0x1c(%esp),%eax
    mov    $0x1,%ecx
    push   %eax
    mov    %cx,0x26(%esp)
    push   $0x304
    mov    0x0(%ebp),%esi
    push   %esi
    jmp    jump_6d6aa
  jump_6d690:
    push   $0x0
    lea    0x1c(%esp),%eax
    mov    $0x3,%ebx
    push   %eax
    mov    %bx,0x26(%esp)
    push   $0x304
    mov    0x0(%ebp),%ecx
    push   %ecx
  jump_6d6aa:
    call   func_67247
    add    $0x10,%esp
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6d6c0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%esi
    mov    0x54(%esi),%edx
    test   %edx,%edx
    je     jump_6d714
    je     jump_6d6eb
    push   $0x0
    push   $0x0
    push   $0x402
    mov    (%esi),%ecx
    push   %ecx
    call   func_67247
    add    $0x10,%esp
    movl   $0x0,0x54(%esi)
  jump_6d6eb:
    push   %esi
    call   func_74197
    add    $0x4,%esp
    push   $0x0
    push   %esi
    call   func_74105
    add    $0x8,%esp
    push   $0x1
    push   %esi
    call   func_74105
    add    $0x8,%esp
    push   $0xa
    call   func_6735d
    add    $0x4,%esp
  jump_6d714:
    mov    0xc(%esi),%edi
    push   %edi
    call   func_67ce4
    add    $0x4,%esp
    mov    0x24(%esi),%ebp
    push   %ebp
    mov    0x20(%esi),%eax
    push   %eax
    mov    0x28(%esi),%edx
    push   %edx
    call   func_662a5
    imul   $0x894,0x60(%esi),%eax
    add    $0xc,%esp
    push   %eax
    mov    0x5c(%esi),%ecx
    push   %ecx
    call   func_661ff
    add    $0x8,%esp
    mov    0x4c(%esi),%edi
    push   %edi
    mov    0x50(%esi),%ebp
    push   %ebp
    call   func_661ff
    add    $0x8,%esp
    push   $0x88
    push   %esi
    call   func_661ff
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6d770:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x44,%esp
    call   func_6cb90
    push   $0x88
    call   func_661de
    mov    %eax,%ebp
    add    $0x4,%esp
    test   %eax,%eax
    jne    jump_6d7a6
    mov    $0x9,%ecx
    mov    $data_132f70,%edi
    mov    $data_94c3c,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    jmp    jump_6dd77
  jump_6d7a6:
    mov    0x54(%esp),%edx
    mov    %edx,(%eax)
    mov    0x10(%edx),%ebx
    mov    %edx,%eax
    test   %ebx,%ebx
    je     jump_6d7e1
    mov    $0x5,%ecx
    mov    $data_132f70,%edi
    mov    $data_94c64,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    push   $0x88
    mov    %ebp,%edi
    push   %edi
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6d7e1:
    lea    0x18(%esp),%edx
    push   %edx
    push   %ebx
    push   $0x301
    push   %eax
    call   func_67247
    add    $0x10,%esp
    xor    %eax,%eax
    xor    %edx,%edx
    mov    0x1e(%esp),%ax
    mov    0x18(%esp),%dx
    shl    $0x4,%eax
    add    %edx,%eax
    mov    %ebp,%edx
    mov    %eax,0x4(%edx)
    xor    %eax,%eax
    mov    0x1c(%esp),%ax
    mov    %eax,%edx
    xor    %eax,%eax
    shl    $0x4,%edx
    mov    0x1a(%esp),%ax
    add    %eax,%edx
    mov    %ebp,%eax
    mov    %edx,0x8(%eax)
    lea    0x8(%edx),%eax
    mov    %ebp,%edx
    movl   $0xffffffff,0x38(%edx)
    movl   $0x0,0x54(%edx)
    mov    $0x18,%ebx
    movl   $0x0,0x58(%edx)
    xor    %ecx,%ecx
    movl   $0x0,0x64(%edx)
    mov    0x58(%esp),%esi
    mov    %eax,0x34(%edx)
    mov    $0xffffffff,%edx
    mov    $data_1330b8,%eax
    mov    %ecx,0x3c(%esp)
    call   func_76ec0
    test   %esi,%esi
    je     jump_6d8a3
    mov    $0x6,%ecx
    mov    $data_1330b8,%edi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x58(%esp),%edi
    push   %edi
    mov    %ebp,%eax
    push   %eax
    call   func_6d5c0
    add    $0x8,%esp
    test   %eax,%eax
    je     jump_6d8a3
    mov    $0x1,%edx
    mov    $0x6,%ecx
    mov    %esp,%edi
    mov    0x58(%esp),%esi
    mov    %edx,0x3c(%esp)
    rep movsl %ds:(%esi),%es:(%edi)
  jump_6d8a3:
    cmpl   $0x0,0x3c(%esp)
    jne    jump_6d8f0
    mov    0x0(%ebp),%ecx
    push   %ecx
    call   func_67db3
    mov    %eax,0x3c(%esp)
    add    $0x4,%esp
    test   %eax,%eax
    je     jump_6d8f0
    mov    $0x6,%ecx
    push   %eax
    mov    $data_1330b8,%edi
    mov    %eax,%esi
    push   %ebp
    rep movsl %ds:(%esi),%es:(%edi)
    call   func_6d5c0
    add    $0x8,%esp
    test   %eax,%eax
    je     jump_6d8f0
    mov    $0x1,%eax
    mov    $0x6,%ecx
    mov    %esp,%edi
    mov    0x38(%esp),%esi
    mov    %eax,0x3c(%esp)
    rep movsl %ds:(%esi),%es:(%edi)
  jump_6d8f0:
    mov    0x3c(%esp),%edx
    test   %edx,%edx
    jne    jump_6d99c
    cmpl   $0x1,data_1330b0
    jne    jump_6d99c
    mov    %edx,0x40(%esp)
    mov    %edx,0x30(%esp)
    jmp    jump_6d984
  jump_6d913:
    mov    0xc(%eax),%ecx
    shr    $0x10,%ecx
    mov    0xc(%eax),%eax
    shl    $0x4,%ecx
    and    $0xffff,%eax
    mov    0x30(%esp),%edx
    add    %ecx,%eax
    add    %eax,%edx
    mov    0x40(%esp),%ebx
    mov    %edx,0x34(%esp)
    test   %ebx,%ebx
    jne    jump_6d946
    mov    $0x6,%ecx
    mov    $data_1330b8,%edi
    mov    %edx,%esi
    rep movsl %ds:(%esi),%es:(%edi)
  jump_6d946:
    mov    0x34(%esp),%ecx
    push   %ecx
    push   %ebp
    call   func_6d5c0
    add    $0x8,%esp
    test   %eax,%eax
    je     jump_6d970
    mov    $0x1,%eax
    mov    $0x6,%ecx
    mov    %esp,%edi
    mov    0x34(%esp),%esi
    mov    %eax,0x3c(%esp)
    rep movsl %ds:(%esi),%es:(%edi)
    jmp    jump_6d99c
  jump_6d970:
    mov    0x30(%esp),%esi
    mov    0x40(%esp),%edi
    add    $0x18,%esi
    inc    %edi
    mov    %esi,0x30(%esp)
    mov    %edi,0x40(%esp)
  jump_6d984:
    mov    0x0(%ebp),%eax
    mov    0xc(%eax),%eax
    xor    %ecx,%ecx
    mov    0x40(%esp),%edx
    mov    0x10(%eax),%cx
    cmp    %edx,%ecx
    jg     jump_6d913
  jump_6d99c:
    cmpl   $0x0,0x3c(%esp)
    jne    jump_6d9cd
    mov    $0x8,%ecx
    push   $0x88
    mov    $data_132f70,%edi
    mov    $data_94c7c,%esi
    push   %ebp
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6d9cd:
    mov    $0x6,%ecx
    mov    %esp,%esi
    mov    $data_1330b8,%edi
    mov    data_1330b4,%ebx
    rep movsl %ds:(%esi),%es:(%edi)
    test   %ebx,%ebx
    je     jump_6d9ec
    mov    $0x2000,%esi
    jmp    jump_6d9f2
  jump_6d9ec:
    mov    data_133078,%esi
  jump_6d9f2:
    lea    0xf(%esi),%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x4,%edx
    sbb    %edx,%eax
    sar    $0x4,%eax
    movl   $0x0,0x28(%ebp)
    mov    %eax,%edi
  jump_6da0b:
    lea    0x24(%esp),%eax
    push   %eax
    lea    0x2c(%esp),%eax
    push   %eax
    lea    0x34(%esp),%eax
    push   %eax
    push   %edi
    call   func_66220
    add    $0x10,%esp
    test   %eax,%eax
    jne    jump_6da4f
    mov    $0x8,%ecx
    push   $0x88
    mov    $data_132f70,%edi
    mov    $data_94ca0,%esi
    push   %ebp
    rep movsl %ds:(%esi),%es:(%edi)
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6da4f:
    mov    0x28(%ebp),%ecx
    test   %ecx,%ecx
    je     jump_6da67
    mov    0x24(%ebp),%eax
    push   %eax
    mov    0x20(%ebp),%edx
    push   %edx
    push   %ecx
    call   func_662a5
    add    $0xc,%esp
  jump_6da67:
    mov    0x2c(%esp),%eax
    mov    %eax,0x28(%ebp)
    mov    0x28(%esp),%eax
    mov    %eax,0x20(%ebp)
    mov    0x24(%esp),%eax
    mov    %eax,0x24(%ebp)
    mov    0x28(%esp),%eax
    shr    $0xc,%eax
    mov    %eax,%edx
    add    %esi,%eax
    dec    %eax
    and    $0xf0000,%edx
    and    $0xf0000,%eax
    cmp    %eax,%edx
    jne    jump_6da0b
    push   %ebp
    call   func_6d140
    add    $0x4,%esp
    test   %eax,%eax
    jne    jump_6dad3
    mov    0x24(%ebp),%ebx
    push   %ebx
    mov    0x20(%ebp),%ecx
    push   %ecx
    mov    0x28(%ebp),%esi
    push   %esi
    call   func_662a5
    add    $0xc,%esp
    push   $0x88
    push   %ebp
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6dad3:
    push   $0x0
    push   $0x0
    push   $0x305
    mov    0x0(%ebp),%ecx
    push   %ecx
    call   func_67247
    mov    0x0(%ebp),%eax
    movl   $0x1,0x14(%eax)
    mov    0x3c(%ebp),%ecx
    imul   0x40(%ebp),%ecx
    mov    0x10(%ebp),%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    0x40(%ebp),%edi
    mov    0x10(%ebp),%edx
    mov    %eax,0x48(%ebp)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %edi
    add    $0x10,%esp
    mov    %eax,0x44(%ebp)
    lea    0x0(,%eax,4),%eax
    push   %eax
    mov    %eax,0x4c(%ebp)
    call   func_661de
    add    $0x4,%esp
    mov    %eax,0x50(%ebp)
    test   %eax,%eax
    jne    jump_6dba1
    mov    $0x8,%ecx
    mov    $data_132f70,%edi
    mov    $data_94cc0,%esi
    mov    0x54(%esp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    mov    0x18(%eax),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6db57
    push   %ebx
    call   func_671c0
    add    $0x4,%esp
  jump_6db57:
    push   $0x0
    push   $0x0
    push   $0x306
    mov    0x0(%ebp),%esi
    push   %esi
    call   func_67247
    mov    0x0(%ebp),%eax
    movl   $0x0,0x14(%eax)
    add    $0x10,%esp
    mov    0x24(%ebp),%edi
    push   %edi
    mov    0x20(%ebp),%eax
    push   %eax
    mov    0x28(%ebp),%edx
    push   %edx
    call   func_662a5
    add    $0xc,%esp
    push   $0x88
    push   %ebp
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6dba1:
    mov    data_133080,%eax
    mov    %eax,0x60(%ebp)
    imul   $0x894,%eax,%eax
    push   %eax
    call   func_661de
    add    $0x4,%esp
    mov    %eax,0x5c(%ebp)
    test   %eax,%eax
    jne    jump_6dc45
    mov    $0x9,%ecx
    mov    $data_132f70,%edi
    mov    $data_94ce4,%esi
    mov    0x54(%esp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x18(%eax),%edi
    cmp    $0xffffffff,%edi
    je     jump_6dbeb
    push   %edi
    call   func_671c0
    add    $0x4,%esp
  jump_6dbeb:
    push   $0x0
    push   $0x0
    push   $0x306
    mov    0x0(%ebp),%ebx
    push   %ebx
    call   func_67247
    mov    0x0(%ebp),%eax
    movl   $0x0,0x14(%eax)
    add    $0x10,%esp
    mov    0x24(%ebp),%ecx
    push   %ecx
    mov    0x20(%ebp),%esi
    push   %esi
    mov    0x28(%ebp),%edi
    push   %edi
    call   func_662a5
    add    $0xc,%esp
    mov    0x4c(%ebp),%eax
    push   %eax
    mov    0x50(%ebp),%edx
    push   %edx
    call   func_661ff
    add    $0x8,%esp
    push   $0x88
    push   %ebp
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6dc45:
    mov    0x60(%ebp),%esi
    xor    %ecx,%ecx
    test   %esi,%esi
    jle    jump_6dc6e
    xor    %eax,%eax
  jump_6dc50:
    mov    0x5c(%ebp),%edx
    movl   $0x1,0x4(%edx,%eax,1)
    mov    0x5c(%ebp),%edx
    mov    %ebp,(%edx,%eax,1)
    inc    %ecx
    mov    0x60(%ebp),%edi
    add    $0x894,%eax
    cmp    %edi,%ecx
    jl     jump_6dc50
  jump_6dc6e:
    push   $func_6cf50
    call   func_67728
    add    $0x4,%esp
    mov    %eax,0xc(%ebp)
    cmp    $0xffffffff,%eax
    jne    jump_6dd1d
    mov    $0x5,%ecx
    mov    $data_132f70,%edi
    mov    $data_94d0c,%esi
    mov    0x54(%esp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x18(%eax),%edi
    cmp    $0xffffffff,%edi
    je     jump_6dcaf
    push   %edi
    call   func_671c0
    add    $0x4,%esp
  jump_6dcaf:
    push   $0x0
    push   $0x0
    push   $0x306
    mov    0x0(%ebp),%ebx
    push   %ebx
    call   func_67247
    mov    0x0(%ebp),%eax
    movl   $0x0,0x14(%eax)
    add    $0x10,%esp
    mov    0x24(%ebp),%ecx
    push   %ecx
    mov    0x20(%ebp),%esi
    push   %esi
    mov    0x28(%ebp),%edi
    push   %edi
    call   func_662a5
    imul   $0x894,0x60(%ebp),%eax
    add    $0xc,%esp
    push   %eax
    mov    0x5c(%ebp),%ebx
    push   %ebx
    call   func_661ff
    add    $0x8,%esp
    mov    0x4c(%ebp),%ecx
    push   %ecx
    mov    0x50(%ebp),%esi
    push   %esi
    call   func_661ff
    add    $0x8,%esp
    push   $0x88
    push   %ebp
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6dd1d:
    push   %ebp
    push   %eax
    call   func_67813
    add    $0x8,%esp
    mov    data_133070,%ebx
    push   %ebx
    mov    0xc(%ebp),%ecx
    push   %ecx
    call   func_6797c
    add    $0x8,%esp
    mov    0xc(%ebp),%esi
    push   %esi
    call   func_67b46
    mov    0x0(%ebp),%eax
    movl   $func_6d6c0,0x20(%eax)
    add    $0x4,%esp
    mov    0x0(%ebp),%eax
    push   %ebp
    mov    %ebp,0x24(%eax)
    call   func_74197
    add    $0x4,%esp
    push   $0x0
    push   %ebp
    call   func_74105
    add    $0x8,%esp
    push   $0x1
    push   %ebp
    call   func_74105
    add    $0x8,%esp
    mov    %ebp,%eax
  jump_6dd77:
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6dd80:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%edi
    push   $0x0
    push   %edi
    call   func_66996
    mov    %eax,%esi
    add    $0x8,%esp
    test   %eax,%eax
    jne    jump_6ddae
    mov    $0x5,%ecx
    mov    $data_132f70,%edi
    mov    $data_94d24,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %esi
    ret
  jump_6ddae:
    push   %edi
    call   func_6694a
    add    $0x4,%esp
    push   %eax
    push   %esi
    call   func_67e98
    add    $0x8,%esp
    mov    %eax,%edi
    mov    %esi,%eax
    call   *data_987b0
    test   %edi,%edi
    jne    jump_6ddd4
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_6ddd4:
    mov    0x10(%esp),%edx
    push   %edx
    push   %edi
    call   func_6d770
    add    $0x8,%esp
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_6ddf1
    push   %edi
    call   func_67f8b
    add    $0x4,%esp
  jump_6ddf1:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6de40:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x118,%esp
    push   $data_94d3c
    lea    0x4(%esp),%eax
    push   %eax
    call   func_673cf
    add    $0x8,%esp
    test   %eax,%eax
    jne    jump_6de72
    mov    $0x7,%ecx
    mov    $data_132f70,%edi
    mov    $data_94d44,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    jmp    jump_6de8a
  jump_6de72:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x84(%esp),%eax
    push   %eax
    call   func_680d6
    add    $0x8,%esp
  jump_6de8a:
    add    $0x118,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6dee0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%esi
    call   func_66fc8
    mov    0x60(%esi),%edx
    xor    %eax,%eax
    test   %edx,%edx
    jle    jump_6df0b
    mov    0x5c(%esi),%edx
  jump_6def7:
    cmpl   $0x1,0x4(%edx)
    je     jump_6df0b
    inc    %eax
    mov    0x60(%esi),%ebx
    add    $0x894,%edx
    cmp    %ebx,%eax
    jl     jump_6def7
  jump_6df0b:
    cmp    0x60(%esi),%eax
    jne    jump_6df2e
    mov    $0x5,%ecx
    mov    $data_132f70,%edi
    mov    $data_94d64,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    call   func_66fcd
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_6df2e:
    imul   $0x894,%eax,%eax
    mov    0x5c(%esi),%esi
    add    %eax,%esi
    push   %esi
    call   func_6847b
    add    $0x4,%esp
    call   func_66fcd
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6df50:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    je     jump_6df5f
    movl   $0x1,0x4(%eax)
  jump_6df5f:
    ret


/*----------------------------------------------------------------*/
func_6df60:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    je     jump_6e00c
    movl   $0x2,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,0x10(%eax)
    movl   $0x0,0x18(%eax)
    movl   $0x0,0x20(%eax)
    movl   $0x0,0xc(%eax)
    movl   $0x0,0x14(%eax)
    movl   $0x0,0x1c(%eax)
    movl   $0x1,0x24(%eax)
    movl   $0x0,0x28(%eax)
    movl   $0xfffffffe,0x2c(%eax)
    movl   $0x1,0x30(%eax)
    movl   $0x0,0x34(%eax)
    movl   $0x0,0x38(%eax)
    movl   $0x2b11,0x3c(%eax)
    movl   $0x40,0x44(%eax)
    movl   $0x0,0x848(%eax)
    movl   $0x0,0x84c(%eax)
    mov    data_133084,%edx
    movl   $0x0,0x850(%eax)
    push   %eax
    mov    %edx,0x40(%eax)
    call   func_6ccd0
    add    $0x4,%esp
  jump_6e00c:
    ret


/*----------------------------------------------------------------*/
func_6e010:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    jne    jump_6e019
    ret
  jump_6e019:
    mov    0x4(%eax),%eax
    ret


/*----------------------------------------------------------------*/
func_6e020:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    je     jump_6e044
    movl   $0x0,0xc(%eax)
    mov    0x8(%esp),%edx
    movl   $0x0,0x14(%eax)
    mov    %edx,0x8(%eax)
    mov    0xc(%esp),%edx
    mov    %edx,0x10(%eax)
  jump_6e044:
    ret


/*----------------------------------------------------------------*/
func_6e050:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    0x8(%esp),%edx
    mov    0xc(%esp),%ebx
    test   %eax,%eax
    je     jump_6e079
    cmp    0x34(%eax),%edx
    jne    jump_6e06a
    cmp    0x38(%eax),%ebx
    je     jump_6e079
  jump_6e06a:
    mov    %edx,0x34(%eax)
    push   %eax
    mov    %ebx,0x38(%eax)
    call   func_6ccd0
    add    $0x4,%esp
  jump_6e079:
    ret


/*----------------------------------------------------------------*/
func_6e090:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    je     jump_6e09f
    mov    0x8(%esp),%edx
    mov    %edx,0x3c(%eax)
  jump_6e09f:
    ret


/*----------------------------------------------------------------*/
func_6e0b0:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    0x8(%esp),%edx
    test   %eax,%eax
    je     jump_6e0cd
    cmp    0x40(%eax),%edx
    je     jump_6e0cd
    push   %eax
    mov    %edx,0x40(%eax)
    call   func_6ccd0
    add    $0x4,%esp
  jump_6e0cd:
    ret


/*----------------------------------------------------------------*/
func_6e0e0:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    0x8(%esp),%edx
    test   %eax,%eax
    je     jump_6e0fd
    cmp    0x44(%eax),%edx
    je     jump_6e0fd
    push   %eax
    mov    %edx,0x44(%eax)
    call   func_6ccd0
    add    $0x4,%esp
  jump_6e0fd:
    ret


/*----------------------------------------------------------------*/
func_6e160:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    je     jump_6e16f
    mov    0x8(%esp),%edx
    mov    %edx,0x30(%eax)
  jump_6e16f:
    ret


/*----------------------------------------------------------------*/
func_6e170:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x1c(%esp),%esi
    test   %esi,%esi
    je     jump_6e1e2
    cmpl   $0x1,0x4(%esi)
    je     jump_6e1e2
    mov    0x28(%esi),%eax
    lea    0x0(,%eax,4),%eax
    add    %esi,%eax
    cmpl   $0x0,0x10(%eax)
    je     jump_6e1e2
    cmpl   $0x0,0x8(%eax)
    je     jump_6e1e2
    movl   $0x0,0x18(%eax)
    movl   $0x4,0x4(%esi)
    mov    (%esi),%esi
    mov    0x54(%esi),%edi
    test   %edi,%edi
    jne    jump_6e1e2
    mov    0x18(%esi),%ax
    mov    %ax,0x6(%esp)
    mov    0x14(%esi),%ax
    push   %edi
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    push   $0x401
    mov    (%esi),%ebp
    push   %ebp
    call   func_67247
    add    $0x10,%esp
    movl   $0x1,0x54(%esi)
  jump_6e1e2:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6e1f0:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    je     jump_6e205
    cmpl   $0x4,0x4(%eax)
    jne    jump_6e205
    movl   $0x8,0x4(%eax)
  jump_6e205:
    ret


/*----------------------------------------------------------------*/
func_6e230:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%esi
    test   %esi,%esi
    je     jump_6e274
    mov    0x4(%esi),%edx
    cmp    $0x1,%edx
    je     jump_6e274
    cmp    $0x2,%edx
    je     jump_6e274
    mov    0x84c(%esi),%ecx
    movl   $0x2,0x4(%esi)
    test   %ecx,%ecx
    je     jump_6e261
    push   %esi
    call   *0x84c(%esi)
    add    $0x4,%esp
  jump_6e261:
    cmpl   $0x0,0x850(%esi)
    je     jump_6e274
    push   %esi
    call   *0x850(%esi)
    add    $0x4,%esp
  jump_6e274:
    pop    %esi
    ret

vtable_6e318:
    .long   func_6e34c
    .long   func_6e353
    .long   func_6e353
    .long   func_6e35a


/*----------------------------------------------------------------*/
func_6e330:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%ecx
    mov    0x14(%esp),%esi
    mov    0x18(%esp),%eax
    cmp    $0x3,%eax
    ja     jump_6e35f
    jmp    *%cs:vtable_6e318(,%eax,4)


/*----------------------------------------------------------------*/
func_6e34c:
/*----------------------------------------------------------------*/
    mov    $0x1,%edx
    jmp    jump_6e35f


/*----------------------------------------------------------------*/
func_6e353:
/*----------------------------------------------------------------*/
    mov    $0x2,%edx
    jmp    jump_6e35f


/*----------------------------------------------------------------*/
func_6e35a:
/*----------------------------------------------------------------*/
    mov    $0x4,%edx
  jump_6e35f:
    mov    0x3c(%ecx),%ebx
    imul   0x40(%ecx),%ebx
    mov    0x10(%ecx),%ebp
    imul   %ebp,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    imul   %esi,%eax
    mov    %eax,%edx
    mov    0x14(%ecx),%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    data_133088,%edx
    imul   %eax,%edx
    mov    %eax,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0xf,%edx
    sbb    %edx,%eax
    sar    $0xf,%eax
    mov    0x14(%ecx),%edi
    add    %eax,%ebx
    cmp    %edi,%esi
    je     jump_6e3ba
    lea    0x0(,%esi,2),%eax
    cmp    %edi,%eax
    je     jump_6e3ba
    lea    0x0(,%esi,4),%esi
    cmp    %edi,%esi
    je     jump_6e3ba
    add    $0x4,%ebx
  jump_6e3ba:
    add    $0xff,%ebx
    xor    %bl,%bl
    mov    %ebx,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6e3d0:
/*----------------------------------------------------------------*/
    push   %esi
    sub    $0xc,%esp
    mov    0x14(%esp),%eax
    mov    0x20(%esp),%ebx
    test   %eax,%eax
    je     jump_6e44f
    test   %ebx,%ebx
    sete   %dl
    movzbl %dl,%esi
    mov    %esi,%edx
    mov    0x18(%esp),%esi
    movl   $0x0,0x18(%eax,%esi,4)
    mov    %edx,0x20(%eax,%esi,4)
    mov    %ebx,0x10(%eax,%esi,4)
    mov    0x1c(%esp),%edx
    mov    %edx,0x8(%eax,%esi,4)
    test   %ebx,%ebx
    je     jump_6e44f
    cmpl   $0x4,0x4(%eax)
    je     jump_6e44f
    mov    (%eax),%esi
    movl   $0x4,0x4(%eax)
    mov    0x54(%esi),%ebx
    test   %ebx,%ebx
    jne    jump_6e44f
    mov    0x18(%esi),%ax
    mov    %ax,0x6(%esp)
    mov    0x14(%esi),%ax
    push   %ebx
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    push   $0x401
    mov    (%esi),%ecx
    push   %ecx
    call   func_67247
    add    $0x10,%esp
    movl   $0x1,0x54(%esi)
  jump_6e44f:
    add    $0xc,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6e460:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    jne    jump_6e46e
    mov    $0xffffffff,%eax
    ret
  jump_6e46e:
    mov    0x2c(%eax),%edx
    cmp    $0xfffffffe,%edx
    jb     jump_6e49c
    jbe    jump_6e47f
    cmp    $0xffffffff,%edx
    je     jump_6e490
    jmp    jump_6e49c
  jump_6e47f:
    movl   $0x0,0x24(%eax)
    movl   $0xffffffff,0x2c(%eax)
    xor    %eax,%eax
    ret
  jump_6e490:
    mov    0x28(%eax),%edx
    mov    %edx,0x2c(%eax)
    mov    $0x1,%eax
    ret
  jump_6e49c:
    mov    0x2c(%eax),%edx
    mov    0x28(%eax),%ebx
    cmp    %ebx,%edx
    jne    jump_6e4ac
    mov    $0xffffffff,%eax
    ret
  jump_6e4ac:
    mov    %ebx,0x2c(%eax)
    mov    %ebx,%eax
    xor    $0x1,%al
    ret


/*----------------------------------------------------------------*/
func_6e4c0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_98844
    je     jump_6e574
    push   $func_6e4c0
    push   $func_6cb90
    call   func_6633a
    add    $0x8,%esp
    push   $0x80
    push   $data_987c0
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_98840
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132cf4
    call   func_66376
    add    $0x8,%esp
    push   $0xc
    push   $data_132ce0
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132cfc
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132d00
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132cf0
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132cf8
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132cec
    call   func_66376
    xor    %ebx,%ebx
    add    $0x8,%esp
    mov    %ebx,data_98844
  jump_6e574:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6e580:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_988cc
    jne    jump_6e673
    push   $func_717b0
    push   $func_6e580
    call   func_662d1
    add    $0x8,%esp
    push   $0x80
    push   $data_98848
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_988c8
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132d0c
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132d10
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132d14
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132d24
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132d18
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132d1c
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132d08
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132d20
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132d2c
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132d28
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_132d04
    call   func_6635f
    mov    $0x1,%ebx
    add    $0x8,%esp
    mov    %ebx,data_988cc
  jump_6e673:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6e6e0:
/*----------------------------------------------------------------*/
    push   %esi
    sub    $0xc,%esp
    mov    0x14(%esp),%esi
    cmpl   $0x0,0x1a8(%esi)
    jle    jump_6e728
    mov    0x1a8(%esi),%ax
    push   $0x0
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    push   $0x502
    mov    (%esi),%ebx
    push   %ebx
    call   func_67247
    movl   $0x0,0x1a8(%esi)
    add    $0x10,%esp
    movl   $0x0,0x1ac(%esi)
  jump_6e728:
    add    $0xc,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6e730:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0xc,%esp
    mov    0x18(%esp),%esi
    mov    0x1c(%esp),%eax
    and    $0xf0,%eax
    cmp    $0xb0,%eax
    jb     jump_6e766
    jbe    jump_6e77f
    cmp    $0xd0,%eax
    jb     jump_6e75d
    jbe    jump_6e786
    cmp    $0xe0,%eax
    je     jump_6e77f
    jmp    jump_6e78d
  jump_6e75d:
    cmp    $0xc0,%eax
    je     jump_6e786
    jmp    jump_6e78d
  jump_6e766:
    cmp    $0x90,%eax
    jb     jump_6e778
    jbe    jump_6e77f
    cmp    $0xa0,%eax
    je     jump_6e77f
    jmp    jump_6e78d
  jump_6e778:
    cmp    $0x80,%eax
    jne    jump_6e78d
  jump_6e77f:
    mov    $0x3,%eax
    jmp    jump_6e78f
  jump_6e786:
    mov    $0x2,%eax
    jmp    jump_6e78f
  jump_6e78d:
    xor    %eax,%eax
  jump_6e78f:
    mov    0x1ac(%esi),%edx
    mov    %eax,%edi
    add    %edx,%eax
    cmp    $0x200,%eax
    jbe    jump_6e7e0
    cmpl   $0x0,0x1a8(%esi)
    jle    jump_6e7e0
    mov    0x1a8(%esi),%ax
    push   $0x0
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    push   $0x502
    mov    (%esi),%ecx
    push   %ecx
    call   func_67247
    movl   $0x0,0x1a8(%esi)
    add    $0x10,%esp
    movl   $0x0,0x1ac(%esi)
  jump_6e7e0:
    mov    0x1ac(%esi),%eax
    mov    0x8(%esi),%edx
    lea    0x1(%eax),%ecx
    mov    0x1c(%esp),%bl
    mov    %ecx,0x1ac(%esi)
    mov    %bl,0x100(%edx,%eax,1)
    mov    0x1ac(%esi),%eax
    mov    0x8(%esi),%edx
    lea    0x1(%eax),%ecx
    mov    0x20(%esp),%bl
    mov    %ecx,0x1ac(%esi)
    mov    %bl,0x100(%edx,%eax,1)
    cmp    $0x3,%edi
    jne    jump_6e83c
    mov    0x1ac(%esi),%eax
    mov    0x8(%esi),%edx
    lea    0x1(%eax),%ecx
    mov    0x24(%esp),%bl
    mov    %ecx,0x1ac(%esi)
    mov    %bl,0x100(%edx,%eax,1)
  jump_6e83c:
    incl   0x1a8(%esi)
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6e910:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%edi
    mov    $0x4,%eax
    xor    %ecx,%ecx
  jump_6e91d:
    mov    (%edi),%edx
    xor    %ebx,%ebx
    mov    (%edx),%bl
    shl    $0x7,%ecx
    mov    %ebx,%esi
    inc    %edx
    and    $0x7f,%esi
    mov    %edx,(%edi)
    or     %esi,%ecx
    test   $0x80,%bl
    je     jump_6e938
    dec    %eax
    jne    jump_6e91d
  jump_6e938:
    mov    %ecx,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6ec20:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%esi
    mov    0x10(%esp),%ecx
    mov    0x14(%esp),%eax
    mov    0x18(%esp),%edx
    mov    %ecx,%edi
    and    $0xf,%ecx
    lea    0x0(,%ecx,4),%ebx
    and    $0xf0,%edi
    add    %esi,%ebx
    cmp    $0xc0,%edi
    jb     jump_6ec5b
    jbe    jump_6ec66
    cmp    $0xe0,%edi
    je     jump_6ec70
    pop    %edi
    pop    %esi
    ret
  jump_6ec5b:
    cmp    $0xb0,%edi
    je     jump_6ec85
    pop    %edi
    pop    %esi
    ret
  jump_6ec66:
    and    $0xff,%eax
    mov    %eax,(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6ec70:
    and    $0xff,%eax
    mov    %eax,0x40(%ebx)
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x80(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6ec85:
    cmp    $0x5b,%eax
    jb     jump_6ecd3
    jbe    jump_6edab
    cmp    $0x70,%eax
    jb     jump_6ecbe
    jbe    jump_6ed32
    cmp    $0x73,%eax
    jb     jump_6ecb2
    jbe    jump_6ed4c
    cmp    $0x77,%eax
    je     jump_6ed59
    pop    %edi
    pop    %esi
    ret
  jump_6ecb2:
    cmp    $0x72,%eax
    je     jump_6ed3f
    pop    %edi
    pop    %esi
    ret
  jump_6ecbe:
    cmp    $0x6e,%eax
    jb     jump_6ecc7
    jbe    jump_6ed18
    jmp    jump_6ed25
  jump_6ecc7:
    cmp    $0x5d,%eax
    je     jump_6edb8
    pop    %edi
    pop    %esi
    ret
  jump_6ecd3:
    cmp    $0x7,%eax
    jb     jump_6ed01
    jbe    jump_6ed74
    cmp    $0xb,%eax
    jb     jump_6ecf5
    jbe    jump_6ed90
    cmp    $0x40,%eax
    je     jump_6ed9e
    pop    %edi
    pop    %esi
    ret
  jump_6ecf5:
    cmp    $0xa,%eax
    je     jump_6ed82
    pop    %edi
    pop    %esi
    ret
  jump_6ed01:
    cmp    $0x1,%eax
    jb     jump_6edd0
    jbe    jump_6ed66
    cmp    $0x6,%eax
    je     jump_6edc5
    pop    %edi
    pop    %esi
    ret
  jump_6ed18:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0xc0(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6ed25:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x100(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6ed32:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x140(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6ed3f:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x180(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6ed4c:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x1c0(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6ed59:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x200(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6ed66:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x240(%esi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6ed74:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x280(%esi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6ed82:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x2c0(%esi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6ed90:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x300(%esi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6ed9e:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x340(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6edab:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x380(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6edb8:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x3c0(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6edc5:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x400(%esi,%ecx,4)
  jump_6edd0:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6ede0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    0x24(%esp),%esi
    mov    0x28(%esp),%eax
    mov    0x2c(%esp),%ebp
    mov    0x30(%esp),%edi
    mov    (%esi),%edx
    mov    %edx,0xc(%esp)
    mov    %eax,%edx
    and    $0xf,%eax
    and    $0xf0,%edx
    mov    %eax,0x10(%esp)
    mov    0x90(%esi,%eax,4),%eax
    mov    %edx,0x8(%esp)
    mov    %eax,0x4(%esp)
    cmp    $0xb0,%edx
    je     jump_6ee32
    cmp    $0xc0,%edx
    je     jump_6ee32
    cmp    $0xe0,%edx
    jne    jump_6ee4e
  jump_6ee32:
    push   %edi
    mov    0xc(%esp),%eax
    mov    0x14(%esp),%edx
    push   %ebp
    or     %edx,%eax
    push   %eax
    lea    0xd0(%esi),%eax
    push   %eax
    call   func_6ec20
    add    $0x10,%esp
  jump_6ee4e:
    cmpl   $0xb0,0x8(%esp)
    jne    jump_6ef94
    cmpl   $0x0,0x34(%esp)
    je     jump_6ee87
    mov    0x10(%esp),%eax
    lea    0x0(,%eax,4),%eax
    add    %esi,%eax
    mov    0x290(%eax),%edx
    cmp    $0xffffffff,%edx
    je     jump_6ee87
    mov    %edx,%edi
    movl   $0xffffffff,0x290(%eax)
  jump_6ee87:
    mov    0x10(%esp),%edx
    lea    0x0(,%edx,4),%edx
    mov    0x4(%esp),%eax
    lea    (%esi,%edx,1),%ebx
    lea    0x0(,%eax,4),%eax
    mov    %ebx,(%esp)
    mov    0xc(%esp),%ebx
    add    %ebx,%eax
    cmp    $0x6f,%ebp
    jb     jump_6eee6
    jbe    jump_6f106
    cmp    $0x75,%ebp
    jb     jump_6eed6
    jbe    jump_6f07f
    cmp    $0x76,%ebp
    jbe    jump_6f006
    cmp    $0x77,%ebp
    je     jump_6f02d
    jmp    jump_6ef94
  jump_6eed6:
    cmp    $0x73,%ebp
    jb     jump_6ef94
    jbe    jump_6ef14
    jmp    jump_6f04b
  jump_6eee6:
    cmp    $0x6c,%ebp
    jb     jump_6eefb
    jbe    jump_6ef2d
    cmp    $0x6d,%ebp
    jbe    jump_6f0f5
    jmp    jump_6f131
  jump_6eefb:
    cmp    $0x6,%ebp
    jb     jump_6ef94
    jbe    jump_6ef52
    cmp    $0x7,%ebp
    je     jump_6efe0
    jmp    jump_6ef94
  jump_6ef14:
    mov    0x18(%esi),%eax
    mov    (%edi,%eax,1),%al
    mov    (%esp),%edx
    and    $0xff,%eax
    mov    %eax,0x290(%edx)
    jmp    jump_6ef94
  jump_6ef2d:
    cmpl   $0x0,0x1c(%esi)
    je     jump_6ef94
    push   %edi
    mov    0x14(%esp),%edx
    push   %edx
    push   %esi
    call   *0x1c(%esi)
    add    $0xc,%esp
    mov    (%esp),%edx
    mov    %eax,0x290(%edx)
    jmp    jump_6ef94
  jump_6ef52:
    push   $0x0
    push   $0x0
    mov    0x18(%esp),%eax
    push   $0x64
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
    push   $0x0
    push   $0x0
    mov    0x18(%esp),%eax
    push   $0x65
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
    push   $0x0
    push   $0x0
    mov    0x18(%esp),%eax
    push   $0x26
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6ef94:
    mov    0x4(%esp),%eax
    mov    0xc(%esp),%ebx
    lea    0x0(,%eax,4),%eax
    add    %ebx,%eax
    cmpl   $0x1,0x20(%eax)
    jne    jump_6efb4
    cmp    0x60(%eax),%esi
    jne    jump_6f21b
  jump_6efb4:
    mov    0x4(%esp),%eax
    mov    0xc(%esp),%ebx
    lea    0x0(,%eax,4),%eax
    mov    0x8(%esp),%ecx
    add    %ebx,%eax
    cmp    $0x90,%ecx
    jne    jump_6f1b5
    incl   0x160(%eax)
    jmp    jump_6f1c3
  jump_6efe0:
    mov    0x34(%esi),%edx
    imul   %edi,%edx
    mov    $0x7f,%edi
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %edi
    mov    %eax,%edi
    cmp    $0x7f,%eax
    jle    jump_6effe
    mov    $0x7f,%edi
  jump_6effe:
    test   %edi,%edi
    jge    jump_6ef94
    xor    %edi,%edi
    jmp    jump_6ef94
  jump_6f006:
    movl   $0x0,0x58(%esi)
    movl   $0x0,0x68(%esi)
    mov    0x64(%esi),%eax
    mov    0x68(%esi),%ebp
    movl   $0x0,0x5c(%esi)
    sub    %eax,%ebp
    mov    %ebp,0x68(%esi)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6f02d:
    cmpl   $0x0,0x20(%esi)
    je     jump_6f21b
    push   %edi
    mov    0x14(%esp),%edi
    push   %edi
    push   %esi
    call   *0x20(%esi)
    add    $0xc,%esp
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6f04b:
    mov    %esi,%edx
    xor    %eax,%eax
  jump_6f04f:
    cmpl   $0xffffffff,0x80(%edx)
    je     jump_6f061
    inc    %eax
    add    $0x4,%edx
    cmp    $0x4,%eax
    jl     jump_6f04f
  jump_6f061:
    cmp    $0x4,%eax
    je     jump_6f21b
    mov    %edi,0x80(%esi,%eax,4)
    mov    0x14(%esi),%edx
    mov    %edx,0x70(%esi,%eax,4)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6f07f:
    cmp    $0x40,%edi
    jl     jump_6f21b
    mov    $0x3,%eax
    lea    0xc(%esi),%edx
  jump_6f090:
    cmpl   $0xffffffff,0x80(%edx)
    jne    jump_6f0a1
    dec    %eax
    sub    $0x4,%edx
    test   %eax,%eax
    jge    jump_6f090
  jump_6f0a1:
    cmp    $0xffffffff,%eax
    je     jump_6f21b
    lea    0x0(,%eax,4),%eax
    add    %esi,%eax
    mov    0x80(%eax),%ecx
    test   %ecx,%ecx
    jne    jump_6f0ca
    mov    0x70(%eax),%eax
    mov    %eax,0x14(%esi)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6f0ca:
    lea    -0x1(%ecx),%edi
    mov    %edi,0x80(%eax)
    test   %edi,%edi
    je     jump_6f0e4
    mov    0x70(%eax),%eax
    mov    %eax,0x14(%esi)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6f0e4:
    movl   $0xffffffff,0x80(%eax)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6f0f5:
    push   %edi
    push   %esi
    call   func_6ad3a
    add    $0x8,%esp
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6f106:
    cmpl   $0x1,0x20(%eax)
    je     jump_6f21b
    cmp    $0x40,%edi
    jge    jump_6f123
    movl   $0x0,0x20(%eax)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6f123:
    movl   $0x2,0x20(%eax)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6f131:
    mov    0x10(%esp),%ebp
    inc    %ebp
    cmp    $0x40,%edi
    jl     jump_6f178
    cmpl   $0x1,0x20(%eax)
    je     jump_6f21b
    push   %ebx
    call   func_6b436
    mov    %eax,%edi
    add    $0x4,%esp
    test   %eax,%eax
    je     jump_6f21b
    push   %eax
    push   %ebp
    push   %esi
    call   func_6b591
    add    $0xc,%esp
    lea    0x0(,%edi,4),%edi
    add    0xc(%esp),%edi
    mov    %esi,0x5c(%edi)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6f178:
    cmpl   $0x1,0x20(%eax)
    jne    jump_6f21b
    mov    0x10(%esp),%ecx
    push   %ecx
    push   %esi
    call   func_6f300
    add    $0x8,%esp
    mov    0x4(%esp),%eax
    inc    %eax
    push   %eax
    mov    0x10(%esp),%edi
    push   %edi
    call   func_6b51b
    add    $0x8,%esp
    push   %ebp
    push   %ebp
    push   %esi
    call   func_6b591
    add    $0xc,%esp
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6f1b5:
    cmp    $0x80,%ecx
    jne    jump_6f1c3
    decl   0x160(%eax)
  jump_6f1c3:
    mov    0x4(%esp),%eax
    mov    0xc(%esp),%edx
    lea    0x0(,%eax,4),%eax
    add    %edx,%eax
    mov    %esi,0xe0(%eax)
    cmpl   $0x0,0x1a0(%edx)
    je     jump_6f201
    push   %edi
    mov    0xc(%esp),%eax
    mov    0x8(%esp),%ecx
    push   %ebp
    or     %ecx,%eax
    push   %eax
    push   %esi
    mov    %edx,%eax
    push   %edx
    call   *0x1a0(%eax)
    add    $0x14,%esp
    test   %eax,%eax
    jne    jump_6f21b
  jump_6f201:
    push   %edi
    mov    0xc(%esp),%eax
    mov    0x8(%esp),%edi
    push   %ebp
    or     %edi,%eax
    push   %eax
    mov    0x18(%esp),%ebp
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
  jump_6f21b:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6f230:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    0x20(%esp),%ebp
    mov    %ebp,%esi
    lea    0x80(%ebp),%eax
    xor    %edi,%edi
    mov    %eax,0xc(%esp)
    lea    0x0(%eax),%eax
    mov    %edx,%edx
  jump_6f250:
    mov    0x514(%esi),%eax
    cmp    $0xffffffff,%eax
    je     jump_6f280
    push   $0x0
    push   $0x0
    mov    0x594(%esi),%edx
    push   %edx
    or     $0x80,%al
    push   %eax
    push   %ebp
    inc    %edi
    call   func_6ede0
    add    $0x14,%esp
    movl   $0xffffffff,0x514(%esi)
    lea    0x0(%eax),%eax
  jump_6f280:
    mov    0xc(%esp),%edx
    add    $0x4,%esi
    cmp    %edx,%esi
    jne    jump_6f250
    mov    0x0(%ebp),%esi
    movl   $0x0,0x510(%ebp)
    cmpl   $0x0,0x1a8(%esi)
    jle    jump_6f2d8
    mov    0x1a8(%esi),%ax
    push   $0x0
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    push   $0x502
    mov    (%esi),%ecx
    push   %ecx
    call   func_67247
    movl   $0x0,0x1a8(%esi)
    add    $0x10,%esp
    movl   $0x0,0x1ac(%esi)
  jump_6f2d8:
    test   %edi,%edi
    je     jump_6f2ef
    call   func_673ca
    test   %eax,%eax
    jne    jump_6f2ef
    push   $0x3
    call   func_6735d
    add    $0x4,%esp
  jump_6f2ef:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6f300:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x1c(%esp),%edi
    mov    %edi,%esi
    lea    0x80(%edi),%ebp
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
    mov    %eax,%eax
  jump_6f320:
    mov    0x20(%esp),%ecx
    cmp    0x514(%esi),%ecx
    jne    jump_6f360
    push   $0x0
    push   $0x0
    mov    0x594(%esi),%eax
    push   %eax
    mov    0x514(%esi),%eax
    or     $0x80,%al
    push   %eax
    push   %edi
    call   func_6ede0
    add    $0x14,%esp
    movl   $0xffffffff,0x514(%esi)
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
    nop
  jump_6f360:
    add    $0x4,%esi
    cmp    %ebp,%esi
    jne    jump_6f320
    mov    (%edi),%esi
    cmpl   $0x0,0x1a8(%esi)
    jle    jump_6f3a9
    mov    0x1a8(%esi),%ax
    push   $0x0
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    push   $0x502
    mov    (%esi),%ebx
    push   %ebx
    call   func_67247
    movl   $0x0,0x1a8(%esi)
    add    $0x10,%esp
    movl   $0x0,0x1ac(%esi)
  jump_6f3a9:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6f3b0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%esi
    mov    0x14(%esp),%edi
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x250(%eax),%edx
    cmp    $0xffffffff,%edx
    je     jump_6f3e2
    push   $0x0
    push   %edx
    mov    %edi,%eax
    push   $0x72
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f3e2:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0xd0(%eax),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_6f409
    push   $0x0
    push   $0x0
    mov    %edi,%eax
    push   %ecx
    or     $0xc0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f409:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x150(%eax),%edx
    cmp    $0xffffffff,%edx
    je     jump_6f435
    push   $0x0
    push   %edx
    mov    0x110(%eax),%ecx
    mov    %edi,%eax
    push   %ecx
    or     $0xe0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f435:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x1d0(%eax),%ebp
    cmp    $0xffffffff,%ebp
    je     jump_6f45c
    push   $0x0
    push   %ebp
    mov    %edi,%eax
    push   $0x6f
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f45c:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x210(%eax),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6f483
    push   $0x0
    push   %ebx
    mov    %edi,%eax
    push   $0x70
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f483:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x310(%eax),%ebp
    cmp    $0xffffffff,%ebp
    je     jump_6f4aa
    push   $0x0
    push   %ebp
    mov    %edi,%eax
    push   $0x1
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f4aa:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x350(%eax),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6f4d1
    push   $0x0
    push   %ebx
    mov    %edi,%eax
    push   $0x7
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f4d1:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x390(%eax),%ebp
    cmp    $0xffffffff,%ebp
    je     jump_6f4f8
    push   $0x0
    push   %ebp
    mov    %edi,%eax
    push   $0xa
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f4f8:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x3d0(%eax),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6f51f
    push   $0x0
    push   %ebx
    mov    %edi,%eax
    push   $0xb
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f51f:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x410(%eax),%ebp
    cmp    $0xffffffff,%ebp
    je     jump_6f546
    push   $0x0
    push   %ebp
    mov    %edi,%eax
    push   $0x40
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f546:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x450(%eax),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6f56d
    push   $0x0
    push   %ebx
    mov    %edi,%eax
    push   $0x5b
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f56d:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x490(%eax),%ebp
    cmp    $0xffffffff,%ebp
    je     jump_6f594
    push   $0x0
    push   %ebp
    mov    %edi,%eax
    push   $0x5d
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f594:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x4d0(%eax),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6f5bc
    push   $0x0
    push   %ebx
    push   $0x6
    or     $0xb0,%di
    push   %edi
    push   %esi
    call   func_6ede0
    add    $0x14,%esp
  jump_6f5bc:
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6f5c0:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%ecx
    mov    %ecx,%edx
    xor    %eax,%eax
    lea    0x0(%eax),%eax
    mov    %edx,%edx
  jump_6f5d0:
    mov    %eax,0x90(%edx)
    inc    %eax
    add    $0x4,%edx
    cmp    $0x10,%eax
    jl     jump_6f5d0
    mov    $0x440,%ebx
    mov    $0xffffffff,%edx
    lea    0xd0(%ecx),%eax
    call   func_76ec0
    mov    %ecx,%eax
    lea    0x10(%ecx),%edx
  jump_6f5f9:
    add    $0x4,%eax
    movl   $0xffffffff,0x7c(%eax)
    cmp    %edx,%eax
    jne    jump_6f5f9
    mov    %ecx,%eax
    lea    0x80(%ecx),%edx
    nop
  jump_6f610:
    add    $0x4,%eax
    movl   $0xffffffff,0x510(%eax)
    cmp    %edx,%eax
    jne    jump_6f610
    movl   $0x0,0x510(%ecx)
    movl   $0x0,0x2c(%ecx)
    movl   $0x0,0x58(%ecx)
    movl   $0xffffffff,0x5c(%ecx)
    movl   $0x0,0x68(%ecx)
    movl   $0x0,0x64(%ecx)
    movl   $0x4,0x60(%ecx)
    movl   $0x7a1200,0x6c(%ecx)
    movl   $0x0,0x30(%ecx)
    movl   $0x1,0x28(%ecx)
    ret


/*----------------------------------------------------------------*/
func_6f690:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%ebp
    mov    %ebp,%esi
    xor    %edi,%edi
    lea    0x0(%eax),%eax
    mov    %ecx,%ecx
  jump_6f6a0:
    mov    0x350(%esi),%edx
    cmp    $0xffffffff,%edx
    je     jump_6f6c0
    push   $0x0
    push   %edx
    mov    %edi,%eax
    push   $0x7
    or     $0xb0,%al
    push   %eax
    push   %ebp
    call   func_6ede0
    add    $0x14,%esp
    mov    %eax,%eax
  jump_6f6c0:
    inc    %edi
    add    $0x4,%esi
    cmp    $0x10,%edi
    jl     jump_6f6a0
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6f6d0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x1c(%esp),%eax
    cmpl   $0x0,0x14(%eax)
    jne    jump_6fdf8
    cmpl   $0x0,data_988c8
    jne    jump_6fdf8
    mov    0x1c(%eax),%eax
    mov    $0x1,%ecx
    mov    %eax,data_132d14
    mov    0x1c(%esp),%eax
    mov    %ecx,data_988c8
    mov    0x18(%eax),%eax
    mov    data_132d14,%esi
    mov    %eax,data_132d0c
    test   %esi,%esi
    je     jump_6fda4
  jump_6f71e:
    mov    data_132d0c,%eax
    cmpl   $0x4,0x4(%eax)
    jne    jump_6fd7f
    mov    0x30(%eax),%edx
    mov    0x44(%eax),%ebx
    mov    0x54(%eax),%ecx
    xor    %ebp,%ebp
    inc    %edx
    add    %ebx,%ecx
    mov    %edx,0x30(%eax)
    mov    %ebp,data_132d24
    mov    %ecx,0x54(%eax)
  jump_6f747:
    mov    data_132d0c,%eax
    mov    0x54(%eax),%esi
    cmp    $0x64,%esi
    jl     jump_6fcb9
    lea    -0x64(%esi),%ebx
    mov    0x510(%eax),%ecx
    mov    %ebx,0x54(%eax)
    test   %ecx,%ecx
    jle    jump_6f7f8
    xor    %esi,%esi
    mov    %esi,data_132d10
    mov    $0xffffffff,%edi
  jump_6f779:
    mov    data_132d10,%eax
    mov    data_132d0c,%ebx
    lea    0x0(,%eax,4),%eax
    add    %ebx,%eax
    cmp    0x514(%eax),%edi
    je     jump_6f7e6
    mov    0x614(%eax),%ebp
    add    %edi,%ebp
    mov    %ebp,0x614(%eax)
    cmp    %ebp,%esi
    jl     jump_6f7e6
    push   %esi
    push   %esi
    mov    0x594(%eax),%ecx
    mov    0x514(%eax),%eax
    push   %ecx
    or     $0x80,%al
    push   %eax
    push   %ebx
    call   func_6ede0
    mov    data_132d0c,%eax
    mov    data_132d10,%ebx
    mov    %edi,0x514(%eax,%ebx,4)
    mov    0x510(%eax),%ebp
    add    %edi,%ebp
    add    $0x14,%esp
    mov    %ebp,0x510(%eax)
    cmp    %ebp,%esi
    je     jump_6f7f8
  jump_6f7e6:
    mov    data_132d10,%ebx
    inc    %ebx
    mov    %ebx,data_132d10
    cmp    $0x20,%ebx
    jl     jump_6f779
  jump_6f7f8:
    mov    data_132d0c,%eax
    mov    0x2c(%eax),%esi
    dec    %esi
    mov    %esi,0x2c(%eax)
    test   %esi,%esi
    jg     jump_6fc65
  jump_6f80c:
    mov    data_132d0c,%esi
    mov    0x14(%esi),%ebx
    xor    %eax,%eax
    mov    (%ebx),%al
    mov    %eax,data_132d20
    cmp    $0x80,%eax
    jb     jump_6fc43
    cmpl   $0x0,data_132d24
    jne    jump_6fc43
    mov    data_132d20,%eax
    cmp    $0xf7,%eax
    jb     jump_6f854
    jbe    jump_6fa1e
    cmp    $0xff,%eax
    je     jump_6f864
    jmp    jump_6fab2
  jump_6f854:
    cmp    $0xf0,%eax
    je     jump_6fa1e
    jmp    jump_6fab2
  jump_6f864:
    add    $0x2,%ebx
    xor    %eax,%eax
    add    $0x14,%esi
    mov    -0x1(%ebx),%al
    push   %esi
    mov    %eax,data_132d2c
    mov    %ebx,(%esi)
    call   func_6e910
    mov    %eax,data_132d28
    mov    data_132d2c,%eax
    add    $0x4,%esp
    cmp    $0x51,%eax
    jb     jump_6f8a2
    jbe    jump_6f93d
    cmp    $0x58,%eax
    je     jump_6f980
    jmp    jump_6fa0b
  jump_6f8a2:
    cmp    $0x2f,%eax
    jne    jump_6fa0b
    movl   $0x1,data_132d24
    mov    data_132d0c,%eax
    mov    0x28(%eax),%edx
    test   %edx,%edx
    je     jump_6f8cb
    lea    -0x1(%edx),%ebx
    mov    %ebx,0x28(%eax)
    test   %ebx,%ebx
    je     jump_6f901
  jump_6f8cb:
    mov    data_132d0c,%eax
    movl   $0x0,0x58(%eax)
    movl   $0xffffffff,0x5c(%eax)
    mov    0x10(%eax),%ebx
    movl   $0x0,0x68(%eax)
    add    $0x8,%ebx
    mov    %ebx,0x14(%eax)
    mov    data_132d0c,%eax
    mov    data_132d28,%ebx
    add    %ebx,0x14(%eax)
    jmp    jump_6f80c
  jump_6f901:
    push   %eax
    call   func_69eb6
    mov    data_132d0c,%eax
    add    $0x4,%esp
    mov    0x24(%eax),%esi
    movl   $0x2,0x4(%eax)
    test   %esi,%esi
    je     jump_6fa0b
    mov    %eax,%ebx
    push   %eax
    call   *0x24(%ebx)
    add    $0x4,%esp
    mov    data_132d0c,%eax
    mov    data_132d28,%ebx
    add    %ebx,0x14(%eax)
    jmp    jump_6f80c
  jump_6f93d:
    mov    data_132d0c,%ebx
    mov    0x14(%ebx),%eax
    movzbl 0x1(%eax),%edi
    movzbl (%eax),%esi
    shl    $0x8,%edi
    shl    $0x10,%esi
    mov    0x2(%eax),%al
    add    %edi,%esi
    and    $0xff,%eax
    add    %eax,%esi
    mov    %esi,%eax
    shl    $0x4,%eax
    mov    %esi,data_132d1c
    mov    %eax,0x6c(%ebx)
    mov    data_132d0c,%eax
    mov    data_132d28,%ebx
    add    %ebx,0x14(%eax)
    jmp    jump_6f80c
  jump_6f980:
    mov    data_132d0c,%ebx
    mov    0x14(%ebx),%eax
    mov    (%eax),%al
    and    $0xff,%eax
    mov    %eax,0x60(%ebx)
    mov    0x14(%ebx),%eax
    mov    0x1(%eax),%al
    and    $0xff,%eax
    sub    $0x2,%eax
    mov    %eax,data_132d1c
    mov    $0xf42400,%eax
    mov    %eax,%edx
    mov    data_133098,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    data_132d1c,%ecx
    mov    %eax,data_132d18
    test   %ecx,%ecx
    jge    jump_6f9db
    mov    %ecx,%esi
    neg    %esi
    mov    %esi,data_132d1c
    mov    data_132d1c,%cl
    sar    %cl,%eax
    jmp    jump_6f9e3
  jump_6f9db:
    mov    data_132d1c,%cl
    shl    %cl,%eax
  jump_6f9e3:
    mov    %eax,0x64(%ebx)
    mov    data_132d0c,%eax
    movl   $0x0,0x68(%eax)
    movl   $0x0,0x58(%eax)
    mov    0x64(%eax),%ebx
    mov    0x5c(%eax),%ebp
    mov    0x68(%eax),%edi
    inc    %ebp
    sub    %ebx,%edi
    mov    %ebp,0x5c(%eax)
    mov    %edi,0x68(%eax)
  jump_6fa0b:
    mov    data_132d0c,%eax
    mov    data_132d28,%ebx
    add    %ebx,0x14(%eax)
    jmp    jump_6f80c
  jump_6fa1e:
    mov    data_132d0c,%eax
    mov    0x14(%eax),%eax
    inc    %eax
    push   $data_132d04
    mov    %eax,data_132d04
    call   func_6e910
    mov    data_132d0c,%esi
    mov    %eax,%ebx
    add    $0x4,%esp
    mov    data_132d04,%eax
    mov    0x14(%esi),%edi
    mov    0x1c(%esp),%esi
    sub    %edi,%eax
    mov    %edi,%ebp
    add    %eax,%ebx
    push   %esi
    mov    %ebx,data_132d28
    mov    %ebx,%edi
    call   func_6e6e0
    add    $0x4,%esp
    cmp    $0x200,%edi
    jbe    jump_6fa73
    mov    $0x200,%ebx
    jmp    jump_6fa75
  jump_6fa73:
    mov    %edi,%ebx
  jump_6fa75:
    mov    0x8(%esi),%eax
    mov    %ebp,%edx
    add    $0x100,%eax
    call   func_78d41
    mov    0x1a8(%esi),%edx
    inc    %edx
    push   %esi
    mov    %edx,0x1a8(%esi)
    call   func_6e6e0
    mov    data_132d0c,%eax
    mov    data_132d28,%ebx
    mov    0x14(%eax),%ecx
    add    %ebx,%ecx
    add    $0x4,%esp
    mov    %ecx,0x14(%eax)
    jmp    jump_6f80c
  jump_6fab2:
    mov    data_132d20,%eax
    and    $0xf,%eax
    mov    data_132d0c,%ebx
    mov    %eax,data_132d08
    mov    0x14(%ebx),%eax
    push   $0x1
    mov    data_132d20,%ebp
    movzbl 0x2(%eax),%esi
    and    $0xf0,%ebp
    push   %esi
    movzbl 0x1(%eax),%esi
    mov    %ebp,data_132d20
    push   %esi
    mov    (%eax),%al
    and    $0xff,%eax
    push   %eax
    push   %ebx
    call   func_6ede0
    mov    data_132d20,%eax
    add    $0x14,%esp
    cmp    $0x90,%eax
    je     jump_6fb71
    mov    data_132d0c,%eax
    mov    0x14(%eax),%eax
    mov    (%eax),%al
    and    $0xf0,%eax
    cmp    $0xb0,%eax
    jb     jump_6fb3a
    jbe    jump_6fb53
    cmp    $0xd0,%eax
    jb     jump_6fb31
    jbe    jump_6fb5a
    cmp    $0xe0,%eax
    je     jump_6fb53
    jmp    jump_6fb61
  jump_6fb31:
    cmp    $0xc0,%eax
    je     jump_6fb5a
    jmp    jump_6fb61
  jump_6fb3a:
    cmp    $0x90,%eax
    jb     jump_6fb4c
    jbe    jump_6fb53
    cmp    $0xa0,%eax
    je     jump_6fb53
    jmp    jump_6fb61
  jump_6fb4c:
    cmp    $0x80,%eax
    jne    jump_6fb61
  jump_6fb53:
    mov    $0x3,%eax
    jmp    jump_6fb63
  jump_6fb5a:
    mov    $0x2,%eax
    jmp    jump_6fb63
  jump_6fb61:
    xor    %eax,%eax
  jump_6fb63:
    mov    data_132d0c,%ebx
    add    %eax,0x14(%ebx)
    jmp    jump_6f80c
  jump_6fb71:
    mov    data_132d0c,%ebx
    xor    %edx,%edx
    xor    %eax,%eax
    mov    %edx,data_132d10
  jump_6fb81:
    cmpl   $0xffffffff,0x514(%ebx,%eax,1)
    je     jump_6fba2
    mov    data_132d10,%edi
    inc    %edi
    add    $0x4,%eax
    mov    %edi,data_132d10
    cmp    $0x80,%eax
    jl     jump_6fb81
  jump_6fba2:
    mov    data_132d10,%ebp
    cmp    $0x20,%ebp
    jne    jump_6fbe8
    mov    $0x7,%ecx
    mov    $data_132f70,%edi
    mov    $data_94d94,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    data_132d0c,%ecx
    push   %ecx
    xor    %esi,%esi
    call   func_69eb6
    mov    data_132d0c,%eax
    add    $0x4,%esp
    mov    %esi,data_988c8
    movl   $0x2,0x4(%eax)
    jmp    jump_6fdf8
  jump_6fbe8:
    mov    data_132d0c,%eax
    mov    0x510(%eax),%edx
    mov    %ebp,%ebx
    inc    %edx
    mov    data_132d08,%esi
    mov    %edx,0x510(%eax)
    mov    %esi,0x514(%eax,%ebx,4)
    mov    0x14(%eax),%esi
    movzbl 0x1(%esi),%esi
    mov    %esi,0x594(%eax,%ebx,4)
    mov    0x14(%eax),%ebx
    add    $0x14,%eax
    add    $0x3,%ebx
    push   %eax
    mov    %ebx,(%eax)
    call   func_6e910
    mov    data_132d0c,%ebx
    mov    data_132d10,%esi
    add    $0x4,%esp
    mov    %eax,0x614(%ebx,%esi,4)
    jmp    jump_6f80c
  jump_6fc43:
    cmpl   $0x0,data_132d24
    jne    jump_6fc65
    mov    data_132d0c,%eax
    mov    0x14(%eax),%ebx
    lea    0x1(%ebx),%esi
    mov    %esi,0x14(%eax)
    mov    (%ebx),%bl
    and    $0xff,%ebx
    mov    %ebx,0x2c(%eax)
  jump_6fc65:
    cmpl   $0x0,data_132d24
    jne    jump_6f747
    mov    data_132d0c,%eax
    mov    0x64(%eax),%ebx
    mov    0x68(%eax),%ebp
    add    %ebx,%ebp
    mov    0x6c(%eax),%edx
    mov    %ebp,0x68(%eax)
    cmp    %edx,%ebp
    jl     jump_6f747
    mov    %ebp,%ecx
    sub    %edx,%ecx
    mov    0x58(%eax),%esi
    mov    %ecx,0x68(%eax)
    inc    %esi
    mov    0x60(%eax),%edi
    mov    %esi,0x58(%eax)
    cmp    %edi,%esi
    jl     jump_6f747
    mov    0x5c(%eax),%ebp
    movl   $0x0,0x58(%eax)
    inc    %ebp
    mov    %ebp,0x5c(%eax)
    jmp    jump_6f747
  jump_6fcb9:
    cmpl   $0x0,data_132d24
    jne    jump_6fd7f
    mov    0x34(%eax),%ebx
    cmp    0x38(%eax),%ebx
    je     jump_6fd2a
    mov    (%eax),%ebx
    mov    0x3c(%eax),%edx
    mov    0x10(%ebx),%ebx
    add    %ebx,%edx
    mov    %edx,0x3c(%eax)
  jump_6fcdb:
    mov    data_132d0c,%eax
    mov    0x3c(%eax),%ebx
    mov    0x40(%eax),%edi
    cmp    %edi,%ebx
    jl     jump_6fd16
    mov    %ebx,%ebp
    mov    0x34(%eax),%edx
    sub    %edi,%ebp
    mov    0x38(%eax),%ebx
    mov    %ebp,0x3c(%eax)
    cmp    %edx,%ebx
    jle    jump_6fd03
    lea    0x1(%edx),%ecx
    mov    %ecx,0x34(%eax)
    jmp    jump_6fd09
  jump_6fd03:
    lea    -0x1(%edx),%ebx
    mov    %ebx,0x34(%eax)
  jump_6fd09:
    mov    data_132d0c,%eax
    mov    0x34(%eax),%ebx
    cmp    0x38(%eax),%ebx
    jne    jump_6fcdb
  jump_6fd16:
    mov    data_132d0c,%eax
    testb  $0x7,0x30(%eax)
    jne    jump_6fd2a
    push   %eax
    call   func_6f690
    add    $0x4,%esp
  jump_6fd2a:
    mov    data_132d0c,%eax
    mov    0x44(%eax),%ebx
    cmp    0x48(%eax),%ebx
    je     jump_6fd7f
    mov    (%eax),%ebx
    mov    0x4c(%eax),%ebp
    mov    0x10(%ebx),%ebx
    add    %ebx,%ebp
    mov    %ebp,0x4c(%eax)
  jump_6fd44:
    mov    data_132d0c,%eax
    mov    0x4c(%eax),%ebx
    mov    0x50(%eax),%edx
    cmp    %edx,%ebx
    jl     jump_6fd7f
    mov    %ebx,%ecx
    mov    0x44(%eax),%esi
    sub    %edx,%ecx
    mov    0x48(%eax),%ebx
    mov    %ecx,0x4c(%eax)
    cmp    %esi,%ebx
    jle    jump_6fd6c
    lea    0x1(%esi),%ebp
    mov    %ebp,0x44(%eax)
    jmp    jump_6fd72
  jump_6fd6c:
    lea    -0x1(%esi),%edi
    mov    %edi,0x44(%eax)
  jump_6fd72:
    mov    data_132d0c,%eax
    mov    0x44(%eax),%ebx
    cmp    0x48(%eax),%ebx
    jne    jump_6fd44
  jump_6fd7f:
    mov    data_132d14,%eax
    mov    data_132d0c,%edx
    dec    %eax
    add    $0x6d4,%edx
    mov    %eax,data_132d14
    mov    %edx,data_132d0c
    test   %eax,%eax
    jne    jump_6f71e
  jump_6fda4:
    mov    0x1c(%esp),%eax
    cmpl   $0x0,0x1a8(%eax)
    jle    jump_6fdf0
    mov    0x1a8(%eax),%ax
    push   $0x0
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    mov    0x24(%esp),%eax
    push   $0x502
    mov    (%eax),%esi
    push   %esi
    call   func_67247
    add    $0x10,%esp
    mov    0x1c(%esp),%eax
    movl   $0x0,0x1a8(%eax)
    movl   $0x0,0x1ac(%eax)
  jump_6fdf0:
    xor    %edi,%edi
    mov    %edi,data_988c8
  jump_6fdf8:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6fe00:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    0x28(%esp),%ebp
    mov    0x2c(%esp),%esi
    mov    $0x6,%ecx
    mov    %esp,%edi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x0(%ebp),%eax
    mov    0xc(%eax),%eax
    cmpw   $0x0,0x10(%eax)
    jbe    jump_6fe9e
    mov    0xc(%eax),%edx
    mov    0xc(%eax),%ebx
    shr    $0x10,%edx
    and    $0xffff,%ebx
    shl    $0x4,%edx
    movswl (%esp),%eax
    add    %edx,%ebx
    cmp    $0x1,%eax
    jge    jump_6fe4c
    mov    (%ebx),%ax
    mov    %ax,(%esp)
  jump_6fe4c:
    movswl 0x2(%esp),%eax
    cmp    $0x1,%eax
    jge    jump_6fe5f
    mov    0x2(%ebx),%ax
    mov    %ax,0x2(%esp)
  jump_6fe5f:
    movswl 0x4(%esp),%eax
    cmp    $0x1,%eax
    jge    jump_6fe72
    mov    0x4(%ebx),%ax
    mov    %ax,0x4(%esp)
  jump_6fe72:
    movswl 0x6(%esp),%eax
    cmp    $0x1,%eax
    jge    jump_6fe85
    mov    0x6(%ebx),%ax
    mov    %ax,0x6(%esp)
  jump_6fe85:
    xor    %eax,%eax
  jump_6fe87:
    cmpl   $0x1,0x8(%esp,%eax,1)
    jge    jump_6fe96
    mov    0x8(%ebx,%eax,1),%edx
    mov    %edx,0x8(%esp,%eax,1)
  jump_6fe96:
    add    $0x4,%eax
    cmp    $0x10,%eax
    jne    jump_6fe87
  jump_6fe9e:
    mov    0x0(%ebp),%eax
    mov    0xc(%eax),%esi
    mov    $0x6,%ecx
    push   $0x0
    lea    0x16(%esi),%edi
    lea    0x4(%esp),%esi
    push   $0x0
    rep movsl %ds:(%esi),%es:(%edi)
    push   $0x304
    mov    0x0(%ebp),%ebx
    push   %ebx
    call   func_67247
    add    $0x10,%esp
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6fed0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%ebp
    mov    0x1c(%ebp),%edx
    xor    %edi,%edi
    test   %edx,%edx
    jle    jump_6fefe
    xor    %esi,%esi
  jump_6fee2:
    mov    0x18(%ebp),%eax
    add    %esi,%eax
    push   %eax
    inc    %edi
    call   func_69f90
    add    $0x6d4,%esi
    mov    0x1c(%ebp),%ebx
    add    $0x4,%esp
    cmp    %ebx,%edi
    jl     jump_6fee2
  jump_6fefe:
    mov    0xc(%ebp),%ecx
    push   %ecx
    call   func_67ce4
    imul   $0x6d4,0x1c(%ebp),%eax
    add    $0x4,%esp
    push   %eax
    mov    0x18(%ebp),%edi
    push   %edi
    call   func_661ff
    add    $0x8,%esp
    push   $0x1d0
    push   %ebp
    call   func_661ff
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6ff30:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x44,%esp
    call   func_6e580
    push   $0x1d0
    call   func_661de
    mov    %eax,%ebp
    add    $0x4,%esp
    test   %eax,%eax
    jne    jump_6ff66
    mov    $0x9,%ecx
    mov    $data_132f70,%edi
    mov    $data_94db4,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    jmp    jump_705bb
  jump_6ff66:
    mov    0x54(%esp),%edx
    mov    %edx,(%eax)
    mov    0x10(%edx),%ebx
    mov    %edx,%eax
    cmp    $0x1,%ebx
    je     jump_6ffa2
    mov    $0x5,%ecx
    mov    $data_132f70,%edi
    mov    $data_94ddc,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    push   $0x1d0
    mov    %ebp,%esi
    push   %esi
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6ffa2:
    lea    0x18(%esp),%edx
    push   %edx
    push   $0x0
    push   $0x301
    push   %eax
    call   func_67247
    add    $0x10,%esp
    xor    %eax,%eax
    mov    0x1e(%esp),%ax
    mov    %eax,%edx
    xor    %eax,%eax
    shl    $0x4,%edx
    mov    0x18(%esp),%ax
    add    %eax,%edx
    mov    %ebp,%eax
    mov    %edx,0x4(%eax)
    xor    %eax,%eax
    xor    %edx,%edx
    mov    0x1c(%esp),%ax
    mov    0x1a(%esp),%dx
    shl    $0x4,%eax
    add    %edx,%eax
    mov    %ebp,%edx
    mov    %eax,0x8(%edx)
    mov    0x4(%edx),%eax
    mov    (%eax),%edx
    shr    $0x10,%edx
    mov    (%eax),%eax
    shl    $0x4,%edx
    and    $0xffff,%eax
    add    %edx,%eax
    je     jump_70025
    cmpb   $0x0,(%eax)
    je     jump_70025
    call   func_78de6
    test   %eax,%eax
    je     jump_70025
    cmpb   $0x0,(%eax)
    je     jump_70025
    mov    %ebp,%esi
    mov    $0x80,%ebx
    mov    0x8(%esi),%esi
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_77780
  jump_70025:
    mov    0x4(%ebp),%eax
    mov    0x4(%eax),%esi
    mov    0x4(%eax),%edx
    shr    $0x10,%esi
    and    $0xffff,%edx
    shl    $0x4,%esi
    add    %esi,%edx
    je     jump_7009a
    cmpb   $0x0,(%edx)
    je     jump_7009a
    mov    0x8(%ebp),%edi
    mov    $data_98848,%esi
    add    $0x80,%edi
    push   %edi
  jump_70052:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_7006a
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_70052
  jump_7006a:
    pop    %edi
    mov    0x8(%ebp),%edi
    mov    %edx,%esi
    add    $0x80,%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_7007f:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_70097
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_7007f
  jump_70097:
    pop    %edi
    jmp    jump_700a4
  jump_7009a:
    mov    0x8(%ebp),%eax
    movb   $0x0,0x80(%eax)
  jump_700a4:
    mov    $0x18,%ebx
    mov    $0xffffffff,%edx
    mov    $data_1330b8,%eax
    mov    0x58(%esp),%esi
    xor    %ecx,%ecx
    call   func_76ec0
    mov    %ecx,0x38(%esp)
    test   %esi,%esi
    je     jump_700fa
    mov    $0x6,%ecx
    mov    $data_1330b8,%edi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x58(%esp),%edi
    push   %edi
    push   %ebp
    call   func_6fe00
    add    $0x8,%esp
    test   %eax,%eax
    je     jump_700fa
    mov    $0x1,%eax
    mov    $0x6,%ecx
    mov    %esp,%edi
    mov    0x58(%esp),%esi
    mov    %eax,0x38(%esp)
    rep movsl %ds:(%esi),%es:(%edi)
  jump_700fa:
    cmpl   $0x0,0x38(%esp)
    jne    jump_70147
    mov    0x0(%ebp),%ebx
    push   %ebx
    call   func_67db3
    mov    %eax,0x38(%esp)
    add    $0x4,%esp
    test   %eax,%eax
    je     jump_70147
    mov    $0x6,%ecx
    push   %eax
    mov    $data_1330b8,%edi
    mov    %eax,%esi
    push   %ebp
    rep movsl %ds:(%esi),%es:(%edi)
    call   func_6fe00
    add    $0x8,%esp
    test   %eax,%eax
    je     jump_70147
    mov    $0x1,%edi
    mov    $0x6,%ecx
    mov    0x34(%esp),%esi
    mov    %edi,0x38(%esp)
    mov    %esp,%edi
    rep movsl %ds:(%esi),%es:(%edi)
  jump_70147:
    mov    0x38(%esp),%eax
    test   %eax,%eax
    jne    jump_701ef
    cmpl   $0x1,data_1330b0
    jne    jump_701ef
    mov    %eax,0x40(%esp)
    mov    %eax,0x3c(%esp)
    jmp    jump_701d7
  jump_7016a:
    mov    0xc(%eax),%esi
    shr    $0x10,%esi
    mov    0xc(%eax),%eax
    shl    $0x4,%esi
    and    $0xffff,%eax
    mov    0x3c(%esp),%edx
    add    %esi,%eax
    add    %eax,%edx
    mov    %edx,0x30(%esp)
    test   %edi,%edi
    jne    jump_70199
    mov    $0x6,%ecx
    mov    $data_1330b8,%edi
    mov    %edx,%esi
    rep movsl %ds:(%esi),%es:(%edi)
  jump_70199:
    mov    0x30(%esp),%edx
    push   %edx
    push   %ebp
    call   func_6fe00
    add    $0x8,%esp
    test   %eax,%eax
    je     jump_701c3
    mov    $0x1,%esi
    mov    $0x6,%ecx
    mov    %esp,%edi
    mov    %esi,0x38(%esp)
    mov    0x30(%esp),%esi
    rep movsl %ds:(%esi),%es:(%edi)
    jmp    jump_701ef
  jump_701c3:
    mov    0x3c(%esp),%ebx
    mov    0x40(%esp),%ecx
    add    $0x18,%ebx
    inc    %ecx
    mov    %ebx,0x3c(%esp)
    mov    %ecx,0x40(%esp)
  jump_701d7:
    mov    0x0(%ebp),%eax
    mov    0xc(%eax),%eax
    xor    %esi,%esi
    mov    0x40(%esp),%edi
    mov    0x10(%eax),%si
    cmp    %edi,%esi
    jg     jump_7016a
  jump_701ef:
    cmpl   $0x0,0x38(%esp)
    jne    jump_7021e
    mov    $0x8,%ecx
    push   $0x1d0
    mov    $data_132f70,%edi
    mov    $data_94df4,%esi
    push   %ebp
    rep movsl %ds:(%esi),%es:(%edi)
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_7021e:
    mov    $0x6,%ecx
    push   $0x0
    lea    0x4(%esp),%esi
    mov    $data_1330b8,%edi
    push   $0x0
    rep movsl %ds:(%esi),%es:(%edi)
    push   $0x305
    mov    0x0(%ebp),%eax
    push   %eax
    call   func_67247
    mov    0x0(%ebp),%eax
    add    $0x10,%esp
    movl   $0x1,0x14(%eax)
    lea    0x18(%esp),%eax
    push   %eax
    push   $0x0
    push   $0x501
    mov    0x0(%ebp),%edx
    push   %edx
    call   func_67247
    add    $0x10,%esp
    cmpw   $0x0,0x18(%esp)
    jne    jump_702b5
    mov    $0xa,%ecx
    push   $0x0
    mov    $data_132f70,%edi
    mov    $data_94e14,%esi
    push   $0x0
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    push   $0x306
    mov    0x0(%ebp),%edx
    push   %edx
    call   func_67247
    add    $0x10,%esp
    push   $0x1d0
    mov    0x0(%ebp),%eax
    push   %ebp
    movl   $0x0,0x14(%eax)
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_702b5:
    mov    data_13309c,%eax
    mov    %eax,0x1c(%ebp)
    imul   $0x6d4,%eax,%eax
    push   %eax
    call   func_661de
    add    $0x4,%esp
    mov    %eax,0x18(%ebp)
    test   %eax,%eax
    jne    jump_70318
    mov    $0xa,%ecx
    push   %eax
    mov    $data_132f70,%edi
    mov    $data_94e40,%esi
    push   %eax
    rep movsl %ds:(%esi),%es:(%edi)
    push   $0x306
    mov    0x0(%ebp),%eax
    push   %eax
    call   func_67247
    add    $0x10,%esp
    push   $0x1d0
    mov    0x0(%ebp),%eax
    push   %ebp
    movl   $0x0,0x14(%eax)
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_70318:
    mov    0x1c(%ebp),%edi
    xor    %esi,%esi
    test   %edi,%edi
    jle    jump_70341
    xor    %eax,%eax
  jump_70323:
    mov    0x18(%ebp),%edi
    movl   $0x1,0x4(%edi,%eax,1)
    mov    0x18(%ebp),%edi
    mov    %ebp,(%edi,%eax,1)
    inc    %esi
    mov    0x1c(%ebp),%ebx
    add    $0x6d4,%eax
    cmp    %ebx,%esi
    jl     jump_70323
  jump_70341:
    mov    $0xf4240,%eax
    mov    %eax,%edx
    mov    data_133098,%esi
    sar    $0x1f,%edx
    idiv   %esi
    movl   $0x0,0x1a0(%ebp)
    movl   $0x0,0x1a4(%ebp)
    movl   $0x0,0x1a8(%ebp)
    movl   $0x0,0x1ac(%ebp)
    movl   $0x0,0x14(%ebp)
    mov    %ebp,%esi
    mov    %eax,0x10(%ebp)
    lea    0x40(%ebp),%eax
    xor    %edx,%edx
    lea    0x0(%eax,%eiz,1),%eax
  jump_70390:
    add    $0x4,%esi
    mov    %edx,0x1c(%esi)
    mov    %edx,0x5c(%esi)
    mov    %edx,0x9c(%esi)
    mov    %edx,0xdc(%esi)
    mov    %edx,0x11c(%esi)
    mov    %edx,0x15c(%esi)
    cmp    %eax,%esi
    jne    jump_70390
    push   $func_6f6d0
    call   func_67728
    add    $0x4,%esp
    mov    %eax,0xc(%ebp)
    cmp    $0xffffffff,%eax
    jne    jump_70427
    mov    $0x5,%ecx
    push   $0x0
    mov    $data_132f70,%edi
    mov    $data_94e68,%esi
    push   $0x0
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    push   $0x306
    mov    0x0(%ebp),%edi
    push   %edi
    call   func_67247
    mov    0x0(%ebp),%eax
    movl   $0x0,0x14(%eax)
    imul   $0x6d4,0x1c(%ebp),%eax
    add    $0x10,%esp
    push   %eax
    mov    0x18(%ebp),%ebx
    push   %ebx
    call   func_661ff
    add    $0x8,%esp
    push   $0x1d0
    push   %ebp
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_70427:
    push   %ebp
    push   %eax
    call   func_67813
    mov    0x0(%ebp),%eax
    movl   $func_6fed0,0x20(%eax)
    mov    0x0(%ebp),%eax
    xor    %edi,%edi
    add    $0x8,%esp
    mov    %ebp,0x24(%eax)
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
    nop
  jump_70450:
    push   $0x0
    mov    %edi,%esi
    push   $0x72
    or     $0xb0,%si
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    push   $0x0
    mov    %edi,%eax
    push   $0x0
    or     $0xc0,%al
    push   %eax
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    push   $0x40
    mov    %edi,%eax
    push   $0x0
    or     $0xe0,%al
    push   %eax
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    push   $0x0
    push   $0x70
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    push   $0x0
    push   $0x1
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    mov    data_1330a0,%eax
    push   %eax
    push   $0x7
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    push   $0x40
    push   $0xa
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    push   $0x7f
    push   $0xb
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    push   $0x0
    push   $0x40
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    push   $0x28
    push   $0x5b
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    push   $0x0
    push   $0x5d
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    push   $0x0
    push   $0x64
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    push   $0x0
    push   $0x65
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    push   $0x0
    push   $0x26
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    mov    data_1330ac,%edx
    push   %edx
    push   $0x6
    push   %esi
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
    cmpl   $0x0,0x1a8(%ebp)
    jle    jump_7057b
    mov    0x1a8(%ebp),%ax
    push   $0x0
    mov    %ax,0x2c(%esp)
    lea    0x28(%esp),%eax
    push   %eax
    push   $0x502
    mov    0x0(%ebp),%ecx
    push   %ecx
    call   func_67247
    movl   $0x0,0x1a8(%ebp)
    add    $0x10,%esp
    movl   $0x0,0x1ac(%ebp)
  jump_7057b:
    test   $0x3,%di
    jne    jump_70590
    push   $0x3
    call   func_6735d
    add    $0x4,%esp
    lea    0x0(%eax,%eiz,1),%eax
  jump_70590:
    inc    %edi
    cmp    $0x10,%edi
    jl     jump_70450
    mov    data_133098,%ecx
    push   %ecx
    mov    0xc(%ebp),%esi
    push   %esi
    call   func_6797c
    add    $0x8,%esp
    mov    0xc(%ebp),%edi
    push   %edi
    call   func_67b46
    add    $0x4,%esp
    mov    %ebp,%eax
  jump_705bb:
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_705d0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%edi
    push   $0x0
    push   %edi
    call   func_66996
    mov    %eax,%esi
    add    $0x8,%esp
    test   %eax,%eax
    jne    jump_705fe
    mov    $0x5,%ecx
    mov    $data_132f70,%edi
    mov    $data_94e80,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %esi
    ret
  jump_705fe:
    push   %edi
    call   func_6694a
    add    $0x4,%esp
    push   %eax
    push   %esi
    call   func_67e98
    add    $0x8,%esp
    mov    %eax,%edi
    mov    %esi,%eax
    call   *data_987b0
    test   %edi,%edi
    jne    jump_70624
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_70624:
    mov    0x10(%esp),%edx
    push   %edx
    push   %edi
    call   func_6ff30
    add    $0x8,%esp
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_70641
    push   %edi
    call   func_67f8b
    add    $0x4,%esp
  jump_70641:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_70690:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x118,%esp
    push   $data_94e98
    lea    0x4(%esp),%eax
    push   %eax
    call   func_673cf
    add    $0x8,%esp
    test   %eax,%eax
    jne    jump_706c2
    mov    $0x7,%ecx
    mov    $data_132f70,%edi
    mov    $data_94ea0,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    jmp    jump_706da
  jump_706c2:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x84(%esp),%eax
    push   %eax
    call   func_69aa4
    add    $0x8,%esp
  jump_706da:
    add    $0x118,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_70780:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%esi
    call   func_66fc8
    mov    0x1c(%esi),%edx
    xor    %eax,%eax
    test   %edx,%edx
    jle    jump_707ab
    mov    0x18(%esi),%edx
  jump_70797:
    cmpl   $0x1,0x4(%edx)
    je     jump_707ab
    inc    %eax
    mov    0x1c(%esi),%ebx
    add    $0x6d4,%edx
    cmp    %ebx,%eax
    jl     jump_70797
  jump_707ab:
    cmp    0x1c(%esi),%eax
    jne    jump_707cc
    mov    $0x6,%ecx
    mov    $data_132f70,%edi
    mov    $data_94ec0,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    call   func_66fcd
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_707cc:
    imul   $0x6d4,%eax,%eax
    mov    0x18(%esi),%esi
    add    %eax,%esi
    push   %esi
    movl   $0x2,0x4(%esi)
    call   func_6f5c0
    add    $0x4,%esp
    call   func_66fcd
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_70bd0:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%esi
    test   %esi,%esi
    je     jump_70c01
    cmpl   $0x1,0x4(%esi)
    je     jump_70c01
    push   %esi
    call   func_69eb6
    add    $0x4,%esp
    push   %esi
    call   func_6f5c0
    mov    0x10(%esi),%eax
    movl   $0x4,0x4(%esi)
    add    $0x8,%eax
    add    $0x4,%esp
    mov    %eax,0x14(%esi)
  jump_70c01:
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_70c10:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    0x14(%esp),%edi
    test   %edi,%edi
    je     jump_70cca
    cmpl   $0x4,0x4(%edi)
    jne    jump_70cca
    push   %edi
    mov    %edi,%esi
    movl   $0x8,0x4(%edi)
    add    $0x40,%edi
    call   func_6f230
    add    $0x4,%esp
    mov    -0x40(%edi),%ebp
    mov    %edi,(%esp)
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
  jump_70c50:
    mov    0x410(%esi),%ecx
    mov    0x90(%esi),%edi
    cmp    $0x40,%ecx
    jl     jump_70c73
    push   $0x0
    mov    %edi,%eax
    push   $0x40
    or     $0xb0,%al
    push   %eax
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
  jump_70c73:
    cmpl   $0x40,0x1d0(%esi)
    jl     jump_70c84
    movl   $0x0,0x20(%ebp,%edi,4)
  jump_70c84:
    cmpl   $0x40,0x210(%esi)
    jl     jump_70c9f
    push   $0x0
    mov    %edi,%eax
    push   $0x70
    or     $0xb0,%al
    push   %eax
    push   %ebp
    call   func_6e730
    add    $0x10,%esp
  jump_70c9f:
    cmpl   $0x40,0x190(%esi)
    jl     jump_70cc0
    inc    %edi
    push   %edi
    push   %ebp
    call   func_6b51b
    add    $0x8,%esp
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
    nop
  jump_70cc0:
    mov    (%esp),%ebx
    add    $0x4,%esi
    cmp    %ebx,%esi
    jne    jump_70c50
  jump_70cca:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_70d70:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%esi
    test   %esi,%esi
    je     jump_70d8f
    cmpl   $0x1,0x4(%esi)
    je     jump_70d8f
    push   %esi
    call   func_69eb6
    add    $0x4,%esp
    movl   $0x2,0x4(%esi)
  jump_70d8f:
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_70ea0:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    jne    jump_70ea9
    ret
  jump_70ea9:
    mov    0x4(%eax),%eax
    ret


/*----------------------------------------------------------------*/
func_711c0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%edi
    mov    0x14(%esp),%esi
    test   %edi,%edi
    je     jump_71245
    mov    0xc(%edi),%edx
    test   %edx,%edx
    je     jump_71245
    mov    %edx,%eax
    lea    0xa(%edx),%ebp
    movswl 0x8(%edx),%ecx
    xor    %edx,%eax
    test   %ecx,%ecx
    jle    jump_71200
    mov    %ebp,%edx
  jump_711ef:
    xor    %ebx,%ebx
    mov    (%edx),%bx
    cmp    %esi,%ebx
    je     jump_71200
    inc    %eax
    add    $0x6,%edx
    cmp    %ecx,%eax
    jl     jump_711ef
  jump_71200:
    cmp    %ecx,%eax
    je     jump_71245
    mov    %eax,%edx
    lea    0x0(,%eax,4),%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    %eax,%ebp
    mov    0x10(%edi),%eax
    mov    0x2(%ebp),%edx
    add    $0x8,%eax
    movl   $0x0,0x2c(%edi)
    add    %edx,%eax
    mov    data_1330a8,%ebx
    mov    %eax,0x14(%edi)
    test   %ebx,%ebx
    jne    jump_71245
    mov    %edi,%eax
    lea    0x10(%edi),%edx
  jump_71237:
    add    $0x4,%eax
    movl   $0xffffffff,0x7c(%eax)
    cmp    %edx,%eax
    jne    jump_71237
  jump_71245:
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_71340:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x1c(%esp),%eax
    mov    $0xffffffff,%ebp
    mov    $0x7fffffff,%edi
    mov    0x14(%eax),%edx
    add    $0x20,%eax
    inc    %edx
    mov    $0x8,%esi
    mov    %edx,-0xc(%eax)
    mov    $0x1,%edx
  jump_71368:
    cmp    $0x9,%esi
    je     jump_71387
    mov    0x20(%eax),%ebx
    cmp    %ebx,%edx
    je     jump_71387
    cmp    $0x2,%ebx
    je     jump_71387
    mov    0x160(%eax),%ebx
    cmp    %ebx,%edi
    jle    jump_71387
    mov    %ebx,%edi
    mov    %esi,%ebp
  jump_71387:
    dec    %esi
    sub    $0x4,%eax
    cmp    $0x1,%esi
    jge    jump_71368
    cmp    $0xffffffff,%ebp
    jne    jump_713c7
    mov    0x1c(%esp),%eax
    mov    $0x8,%esi
    add    $0x20,%eax
    mov    $0x1,%edx
  jump_713a6:
    cmp    $0x9,%esi
    je     jump_713be
    cmp    0x20(%eax),%edx
    je     jump_713be
    mov    0x160(%eax),%ebx
    cmp    %ebx,%edi
    jle    jump_713be
    mov    %ebx,%edi
    mov    %esi,%ebp
  jump_713be:
    dec    %esi
    sub    $0x4,%eax
    cmp    $0x1,%esi
    jge    jump_713a6
  jump_713c7:
    cmp    $0xffffffff,%ebp
    jne    jump_713de
    mov    0x1c(%esp),%esi
    mov    0x14(%esi),%edi
    dec    %edi
    xor    %eax,%eax
    mov    %edi,0x14(%esi)
    jmp    jump_714d8
  jump_713de:
    push   $0x0
    mov    %ebp,%eax
    push   $0x40
    or     $0xb0,%al
    push   %eax
    mov    0x28(%esp),%ecx
    push   %ecx
    call   func_6e730
    add    $0x10,%esp
    mov    0x1c(%esp),%eax
    mov    0x1c(%esp),%edi
    mov    0x1c(%eax),%eax
    mov    0x18(%edi),%edi
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    je     jump_7149e
    lea    0x80(%edi),%eax
    mov    %eax,(%esp)
  jump_71417:
    cmpl   $0x1,0x4(%edi)
    je     jump_7147b
    mov    (%esp),%eax
    mov    %edi,%esi
    mov    %eax,0x8(%esp)
    lea    0x0(%eax),%eax
    lea    0x0(%edx,%eiz,1),%edx
  jump_71430:
    mov    0x514(%esi),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_71470
    mov    %ebx,%eax
    cmp    0x90(%edi,%eax,4),%ebp
    jne    jump_71470
    push   $0x0
    push   $0x0
    mov    0x594(%esi),%eax
    push   %eax
    mov    %ebx,%eax
    or     $0x80,%al
    push   %eax
    push   %edi
    call   func_6ede0
    add    $0x14,%esp
    movl   $0xffffffff,0x514(%esi)
    lea    0x0(%eax),%eax
    nop
  jump_71470:
    mov    0x8(%esp),%edx
    add    $0x4,%esi
    cmp    %edx,%esi
    jne    jump_71430
  jump_7147b:
    mov    0x4(%esp),%eax
    mov    (%esp),%edx
    add    $0x6d4,%edi
    dec    %eax
    add    $0x6d4,%edx
    mov    %eax,0x4(%esp)
    mov    %edx,(%esp)
    test   %eax,%eax
    jne    jump_71417
  jump_7149e:
    mov    0x1c(%esp),%ecx
    lea    0x0(,%ebp,4),%eax
    add    %ecx,%eax
    movl   $0x0,0x60(%eax)
    mov    0x20(%eax),%esi
    movl   $0x1,0x20(%eax)
    mov    %esi,0x120(%eax)
    mov    0xe0(%eax),%esi
    mov    %esi,0xa0(%eax)
    mov    0x14(%ecx),%esi
    dec    %esi
    lea    0x1(%ebp),%eax
    mov    %esi,0x14(%ecx)
  jump_714d8:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_714e0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x20(%esp),%eax
    dec    %eax
    mov    0x1c(%esp),%edx
    mov    %eax,0x8(%esp)
    lea    0x0(,%eax,4),%eax
    add    %edx,%eax
    mov    0x20(%eax),%ebx
    cmp    $0x1,%ebx
    jne    jump_71600
    add    %ebx,0x14(%edx)
    mov    0x120(%eax),%esi
    mov    %esi,0x20(%eax)
    mov    0xa0(%eax),%esi
    push   $0x0
    mov    %esi,0xe0(%eax)
    mov    0xc(%esp),%eax
    push   $0x40
    or     $0xb0,%al
    push   %eax
    push   %edx
    mov    %edx,%esi
    call   func_6e730
    mov    %esi,%eax
    mov    %esi,%edi
    add    $0x10,%esp
    mov    0x1c(%eax),%eax
    mov    0x18(%edi),%edi
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    je     jump_715c6
    lea    0x80(%edi),%eax
    mov    %eax,(%esp)
  jump_71555:
    cmpl   $0x1,0x4(%edi)
    je     jump_715a7
    mov    (%esp),%ebp
    mov    %edi,%esi
  jump_71560:
    mov    0x514(%esi),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_715a0
    mov    %ecx,%eax
    mov    0x8(%esp),%edx
    cmp    0x90(%edi,%eax,4),%edx
    jne    jump_715a0
    push   $0x0
    push   $0x0
    mov    0x594(%esi),%ebx
    mov    %ecx,%eax
    push   %ebx
    or     $0x80,%al
    push   %eax
    push   %edi
    call   func_6ede0
    add    $0x14,%esp
    movl   $0xffffffff,0x514(%esi)
    lea    0x0(%eax),%eax
  jump_715a0:
    add    $0x4,%esi
    cmp    %ebp,%esi
    jne    jump_71560
  jump_715a7:
    mov    0x4(%esp),%eax
    mov    (%esp),%edx
    add    $0x6d4,%edi
    dec    %eax
    add    $0x6d4,%edx
    mov    %eax,0x4(%esp)
    mov    %edx,(%esp)
    test   %eax,%eax
    jne    jump_71555
  jump_715c6:
    mov    0x8(%esp),%eax
    mov    0x1c(%esp),%ecx
    lea    0x0(,%eax,4),%eax
    add    %ecx,%eax
    mov    0xa0(%eax),%esi
    test   %esi,%esi
    je     jump_715f9
    mov    0x4(%esi),%edi
    mov    %esi,%eax
    cmp    $0x1,%edi
    je     jump_715f9
    mov    0x8(%esp),%ebp
    push   %ebp
    push   %esi
    call   func_6f3b0
    add    $0x8,%esp
  jump_715f9:
    mov    0x1c(%esp),%eax
    decl   0x14(%eax)
  jump_71600:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_71610:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    0xc(%esp),%ebx
    test   %eax,%eax
    je     jump_71643
    mov    0x8(%esp),%edx
    lea    -0x1(%ebx),%ecx
    mov    %ecx,0x8c(%eax,%edx,4)
    lea    0x0(,%ebx,4),%edx
    mov    (%eax),%ebx
    add    %ebx,%edx
    cmpl   $0x1,0x1c(%edx)
    jne    jump_71643
    cmp    0x5c(%edx),%eax
    je     jump_71643
    mov    %eax,0x5c(%edx)
  jump_71643:
    ret


/*----------------------------------------------------------------*/
func_717b0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_988cc
    je     jump_718a0
    push   $func_717b0
    push   $func_6e580
    call   func_6633a
    add    $0x8,%esp
    push   $0x80
    push   $data_98848
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_988c8
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132d0c
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132d10
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132d14
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132d24
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132d18
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132d1c
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132d08
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132d20
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132d2c
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132d28
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_132d04
    call   func_66376
    xor    %ebx,%ebx
    add    $0x8,%esp
    mov    %ebx,data_988cc
  jump_718a0:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_718a4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_988e0
    jne    jump_71929
    push   $func_72175
    push   $func_718a4
    call   func_662d1
    add    $0x8,%esp
    push   $0x40
    push   $data_132f30
    call   func_6635f
    add    $0x8,%esp
    push   $0x48
    push   $data_133070
    call   func_6635f
    add    $0x8,%esp
    push   $0x100
    push   $data_132f70
    call   func_6635f
    add    $0x8,%esp
    push   $0x18
    push   $data_1330b8
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_988dc
    call   func_6635f
    add    $0x8,%esp
    push   $0x4
    push   $data_1330d0
    call   func_6635f
    add    $0x8,%esp
    movl   $0x1,data_988e0
  jump_71929:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7192d:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    cmpl   $0x0,data_988dc
    jne    jump_71979
    movl   $0x1,data_988dc
    call   func_67234
    mov    %eax,data_1330d0
    push   $0x0
    push   $0x0
    push   $0x302
    mov    0x18(%esp),%ecx
    push   %ecx
    call   func_67247
    add    $0x10,%esp
    mov    data_1330d0,%esi
    push   %esi
    call   func_67239
    add    $0x4,%esp
    xor    %edi,%edi
    mov    %edi,data_988dc
  jump_71979:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7197c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    0x14(%esp),%esi
    mov    0x18(%esp),%edi
    xor    %edx,%edx
    mov    %edx,(%esp)
    movl   $0x1,0x4(%esp)
    xor    %ecx,%ecx
    jmp    jump_719f8
  jump_7199a:
    lea    (%esi,%ecx,1),%eax
    xor    %edx,%edx
    mov    (%eax),%dl
    cmp    $0x2d,%edx
    jne    jump_719ac
    negl   0x4(%esp)
    jmp    jump_719f7
  jump_719ac:
    mov    %dl,%al
    inc    %al
    and    $0xff,%eax
    mov    data_96230(%eax),%al
    and    $0x2,%al
    and    $0xff,%eax
    jne    jump_719f7
    xor    %edx,%edx
    jmp    jump_719ef
  jump_719c8:
    xor    %ebx,%ebx
    mov    data_94f88(%edx),%bl
    mov    (%ecx,%esi,1),%al
    and    $0xff,%eax
    call   func_7903f
    cmp    %ebx,%eax
    jne    jump_719ee
    mov    (%esp),%eax
    imul   %edi,%eax
    add    %edx,%eax
    mov    %eax,(%esp)
    jmp    jump_719f3
  jump_719ee:
    inc    %edx
  jump_719ef:
    cmp    %edi,%edx
    jl     jump_719c8
  jump_719f3:
    cmp    %edi,%edx
    je     jump_71a03
  jump_719f7:
    inc    %ecx
  jump_719f8:
    mov    %esi,%eax
    call   func_7904d
    cmp    %eax,%ecx
    jb     jump_7199a
  jump_71a03:
    mov    0x1c(%esp),%eax
    test   %eax,%eax
    je     jump_71a0f
    add    %ecx,%esi
    mov    %esi,(%eax)
  jump_71a0f:
    mov    (%esp),%eax
    imul   0x4(%esp),%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_71a1d:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x168,%esp
    mov    $0x118,%ebx
    xor    %edx,%edx
    mov    %esp,%eax
    call   func_76ec0
    mov    $0x18,%ebx
    mov    $0xffffffff,%edx
    lea    0x100(%esp),%eax
    call   func_76ec0
    mov    $data_94f99,%edx
    mov    0x17c(%esp),%eax
    call   func_77f5e
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_71b81
    jmp    jump_71cdb
  jump_71a6a:
    mov    0x118(%esp,%ecx,1),%al
    inc    %al
    and    $0xff,%eax
    mov    data_96230(%eax),%al
    and    $0x2,%al
    and    $0xff,%eax
    je     jump_71a95
    xor    %dl,%dl
    mov    %dl,0x118(%esp,%ecx,1)
    dec    %ecx
  jump_71a91:
    test   %ecx,%ecx
    jge    jump_71a6a
  jump_71a95:
    xor    %ecx,%ecx
    jmp    jump_71ab7
  jump_71a99:
    mov    0x118(%esp,%ecx,1),%al
    inc    %al
    and    $0xff,%eax
    mov    data_96230(%eax),%al
    and    $0x2,%al
    and    $0xff,%eax
    je     jump_71ac7
    inc    %ecx
  jump_71ab7:
    lea    0x118(%esp),%eax
    call   func_7904d
    cmp    %eax,%ecx
    jb     jump_71a99
  jump_71ac7:
    lea    0x118(%esp),%esi
    add    %ecx,%esi
    jmp    jump_71af0
  jump_71ad2:
    mov    0x118(%esp,%ecx,1),%al
    inc    %al
    and    $0xff,%eax
    mov    data_96230(%eax),%al
    and    $0x2,%al
    and    $0xff,%eax
    jne    jump_71b00
    inc    %ecx
  jump_71af0:
    lea    0x118(%esp),%eax
    call   func_7904d
    cmp    %eax,%ecx
    jb     jump_71ad2
  jump_71b00:
    lea    0x118(%esp),%edx
    add    %ecx,%edx
    jmp    jump_71b29
  jump_71b0b:
    mov    0x118(%esp,%ecx,1),%al
    inc    %al
    and    $0xff,%eax
    mov    data_96230(%eax),%al
    and    $0x2,%al
    and    $0xff,%eax
    je     jump_71b39
    inc    %ecx
  jump_71b29:
    lea    0x118(%esp),%eax
    call   func_7904d
    cmp    %eax,%ecx
    jb     jump_71b0b
  jump_71b39:
    lea    0x118(%esp),%edi
    add    %ecx,%edi
    lea    0x118(%esp),%eax
    call   func_7904d
    cmp    %eax,%ecx
    jae    jump_71b81
    movb   $0x0,(%edx)
    xor    %eax,%eax
    mov    (%esi),%al
    cmp    $0x3b,%eax
    je     jump_71b81
    mov    $0x7,%ebx
    mov    $data_94f9c,%edx
    mov    %esi,%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_71bba
    mov    %edi,%edx
    lea    0x80(%esp),%eax
  jump_71b7c:
    call   func_79020
  jump_71b81:
    mov    %ebp,%ebx
    mov    $0x50,%edx
    lea    0x118(%esp),%eax
    call   func_7834e
    test   %eax,%eax
    je     jump_71c8e
    testb  $0x10,0xc(%ebp)
    jne    jump_71c8e
    lea    0x118(%esp),%eax
    call   func_7904d
    lea    -0x1(%eax),%ecx
    jmp    jump_71a91
  jump_71bba:
    mov    $0x7,%ebx
    mov    $data_94fa3,%edx
    mov    %esi,%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_71bd5
    mov    %edi,%edx
    mov    %esp,%eax
    jmp    jump_71b7c
  jump_71bd5:
    mov    $0x8,%ebx
    mov    $data_94faa,%edx
    mov    %esi,%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_71c00
    push   %eax
    push   $0x10
    push   %edi
    call   func_7197c
    add    $0xc,%esp
    mov    %ax,0x100(%esp)
    jmp    jump_71b81
  jump_71c00:
    mov    $0x4,%ebx
    mov    $data_94fb2,%edx
    mov    %esi,%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_71c2e
    push   %eax
    push   $0xa
    push   %edi
    call   func_7197c
    add    $0xc,%esp
    mov    %ax,0x102(%esp)
    jmp    jump_71b81
  jump_71c2e:
    mov    $0xa,%ebx
    mov    $data_94fb6,%edx
    mov    %esi,%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_71c5c
    push   %eax
    push   $0xa
    push   %edi
    call   func_7197c
    add    $0xc,%esp
    mov    %ax,0x104(%esp)
    jmp    jump_71b81
  jump_71c5c:
    mov    $0xb,%ebx
    mov    $data_94fc0,%edx
    mov    %esi,%eax
    call   func_7888d
    test   %eax,%eax
    jne    jump_71b81
    push   %eax
    push   $0xa
    push   %edi
    call   func_7197c
    add    $0xc,%esp
    mov    %ax,0x106(%esp)
    jmp    jump_71b81
  jump_71c8e:
    mov    %ebp,%eax
    call   func_7744e
    lea    0x80(%esp),%eax
    call   func_7904d
    test   %eax,%eax
    je     jump_71cb0
    mov    %esp,%eax
    call   func_7904d
    test   %eax,%eax
    jne    jump_71cc6
  jump_71cb0:
    mov    $0x5,%ecx
    mov    $data_132f70,%edi
    mov    $data_94fcb,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    xor    %eax,%eax
    jmp    jump_71cdb
  jump_71cc6:
    mov    $0x46,%ecx
    mov    0x178(%esp),%edi
    mov    %esp,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    $0x1,%eax
  jump_71cdb:
    add    $0x168,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_71ce5:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    data_133070(,%eax,4),%edx
    mov    0x8(%esp),%ebx
    mov    %ebx,data_133070(,%eax,4)
    mov    %edx,%eax
    ret


/*----------------------------------------------------------------*/
func_71cfe:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    push   $0x28
    call   func_661de
    add    $0x4,%esp
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_71d29
    mov    $0xa,%ecx
    mov    $data_132f70,%edi
    mov    $data_94fe0,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_71d29:
    add    $0x4,%eax
    push   %eax
    mov    %ebp,%ebx
    push   %ebx
    lea    0x8(%ebx),%eax
    push   %eax
    mov    0x20(%esp),%eax
    add    $0xf,%eax
    shr    $0x4,%eax
    push   %eax
    call   func_66220
    add    $0x10,%esp
    test   %eax,%eax
    jne    jump_71d67
    mov    $0x6,%ecx
    mov    $data_132f70,%edi
    mov    $data_9500b,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    push   $0x28
    mov    %ebp,%eax
    push   %eax
    jmp    jump_71ddb
  jump_71d67:
    mov    %ebp,%eax
    mov    0x8(%eax),%eax
    mov    0x14(%esp),%ebx
    mov    0x10(%esp),%edx
    call   func_78d41
    mov    %ebp,%eax
    mov    0x8(%eax),%eax
    mov    %ebp,%ecx
    mov    %eax,0xc(%ecx)
    mov    $0x7,%ebx
    mov    $data_95024,%edx
    call   func_7888d
    test   %eax,%eax
    jne    jump_71d9b
    mov    %eax,0x10(%ecx)
    jmp    jump_71df0
  jump_71d9b:
    mov    0xc(%ecx),%eax
    mov    $0x7,%ebx
    mov    $data_9502c,%edx
    call   func_7888d
    test   %eax,%eax
    je     jump_71de9
    mov    $0x5,%ecx
    mov    $data_132f70,%edi
    mov    $data_95034,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    mov    %ebp,%eax
    mov    0x4(%eax),%ecx
    push   %ecx
    mov    (%eax),%esi
    push   %esi
    mov    0x8(%eax),%edi
    push   %edi
  jump_71dd0:
    call   func_662a5
    add    $0xc,%esp
    push   $0x28
    push   %ebp
  jump_71ddb:
    call   func_661ff
    add    $0x8,%esp
    xor    %eax,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_71de9:
    movl   $0x1,0x10(%ecx)
  jump_71df0:
    xor    %ecx,%ecx
    jmp    jump_71e12
  jump_71df4:
    mov    %ecx,%eax
    shl    $0x2,%eax
    cmpl   $0x0,data_132f30(%eax)
    jne    jump_71e11
    mov    %ebp,data_132f30(%eax)
    mov    0xc(%ebp),%eax
    mov    %cx,0x32(%eax)
    jmp    jump_71e17
  jump_71e11:
    inc    %ecx
  jump_71e12:
    cmp    $0x10,%ecx
    jb     jump_71df4
  jump_71e17:
    cmp    $0x10,%ecx
    jne    jump_71e3e
    mov    $0x5,%ecx
    mov    $data_132f70,%edi
    mov    $data_95049,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    mov    0x4(%ebp),%edi
    push   %edi
    mov    0x0(%ebp),%eax
    push   %eax
    mov    0x8(%ebp),%edx
    push   %edx
    jmp    jump_71dd0
  jump_71e3e:
    mov    0xc(%ebp),%eax
    movw   $0x0,0x30(%eax)
    movl   $0x0,0x14(%ebp)
    movl   $0xffffffff,0x18(%ebp)
    push   $0x66
    call   func_66fd2
    mov    %eax,%ecx
    add    $0x4,%esp
    mov    0xc(%ebp),%eax
    mov    %ecx,0x36(%eax)
    mov    0xc(%ebp),%eax
    mov    0x34(%eax),%ax
    and    $0xffff,%eax
    add    0x0(%ebp),%eax
    push   %eax
    push   $0x66
    call   func_670bd
    add    $0x8,%esp
    movl   $0x0,0x20(%ebp)
    movl   $0x0,0x24(%ebp)
    push   $0x0
    push   $0x0
    push   $0x300
    push   %ebp
    call   func_67247
    add    $0x10,%esp
    mov    0xc(%ebp),%eax
    cmpw   $0x0,0x2e(%eax)
    jg     jump_71eb4
    movl   $0xffffffff,0x1c(%ebp)
    jmp    jump_71f28
  jump_71eb4:
    push   $func_7192d
    call   func_67728
    add    $0x4,%esp
    mov    %eax,0x1c(%ebp)
    cmp    $0xffffffff,%eax
    jne    jump_71efe
    mov    $0x5,%ecx
    mov    $data_132f70,%edi
    mov    $data_95060,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0xc(%ebp),%eax
    mov    0x36(%eax),%edx
    push   %edx
    push   $0x66
    call   func_670bd
    add    $0x8,%esp
    mov    0x4(%ebp),%ebx
    push   %ebx
    mov    0x0(%ebp),%ecx
    push   %ecx
    mov    0x8(%ebp),%esi
    push   %esi
    jmp    jump_71dd0
  jump_71efe:
    push   %ebp
    push   %eax
    call   func_67813
    add    $0x8,%esp
    mov    0xc(%ebp),%eax
    movswl 0x2e(%eax),%eax
    push   %eax
    mov    0x1c(%ebp),%edi
    push   %edi
    call   func_6797c
    add    $0x8,%esp
    mov    0x1c(%ebp),%eax
    push   %eax
    call   func_67b46
    add    $0x4,%esp
  jump_71f28:
    mov    %ebp,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_71f2e:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%esi
    cmpl   $0x0,0x20(%esi)
    je     jump_71f45
    mov    0x24(%esi),%ebx
    push   %ebx
    call   *0x20(%esi)
    add    $0x4,%esp
  jump_71f45:
    mov    0x1c(%esi),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_71f56
    push   %ecx
    call   func_67ce4
    add    $0x4,%esp
  jump_71f56:
    cmpl   $0x0,0x14(%esi)
    je     jump_71f7f
    mov    0x18(%esi),%eax
    cmp    $0xffffffff,%eax
    je     jump_71f6d
    push   %eax
    call   func_671c0
    add    $0x4,%esp
  jump_71f6d:
    push   $0x0
    push   $0x0
    push   $0x306
    push   %esi
    call   func_67247
    add    $0x10,%esp
  jump_71f7f:
    mov    0xc(%esi),%eax
    mov    0x36(%eax),%ebx
    push   %ebx
    push   $0x66
    call   func_670bd
    add    $0x8,%esp
    mov    0x4(%esi),%ecx
    push   %ecx
    mov    (%esi),%edi
    push   %edi
    mov    0x8(%esi),%ebp
    push   %ebp
    call   func_662a5
    add    $0xc,%esp
    push   $0x28
    push   %esi
    call   func_661ff
    add    $0x8,%esp
    xor    %edx,%edx
    jmp    jump_71fc8
  jump_71fb2:
    mov    %edx,%eax
    shl    $0x2,%eax
    cmp    data_132f30(%eax),%esi
    jne    jump_71fc7
    xor    %ecx,%ecx
    mov    %ecx,data_132f30(%eax)
  jump_71fc7:
    inc    %edx
  jump_71fc8:
    cmp    $0x10,%edx
    jl     jump_71fb2
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_71fd1:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%esi
    mov    0xc(%esi),%eax
    mov    0x12(%eax),%ecx
    shr    $0x10,%ecx
    shl    $0x4,%ecx
    mov    0x12(%eax),%eax
    and    $0xffff,%eax
    add    %ecx,%eax
    je     jump_7203f
    call   func_78de6
    test   %eax,%eax
    je     jump_7203f
    mov    0xc(%esi),%ecx
    add    $0x3a,%ecx
    mov    $0x80,%ebx
    mov    %eax,%edx
    mov    %ecx,%eax
    call   func_77780
    push   $0x0
    push   $0x0
    push   $0x303
    push   %esi
    call   func_67247
    add    $0x10,%esp
    cmp    $0xffffffff,%eax
    jne    jump_72028
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_72028:
    mov    0xc(%esi),%esi
    mov    $0x6,%ecx
    mov    $data_1330d4,%edi
    lea    0x16(%esi),%esi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    $data_1330d4,%eax
  jump_7203f:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_72042:
/*----------------------------------------------------------------*/
    call   func_718a4
    push   $0xc8
    push   $0x0
    call   func_66ece
    add    $0x8,%esp
    push   $0x1
    push   $0x1
    call   func_66ece
    add    $0x8,%esp
    push   $0x8000
    push   $0x2
    call   func_66ece
    add    $0x8,%esp
    push   $0x64
    push   $0x3
    call   func_66ece
    add    $0x8,%esp
    push   $0x10
    push   $0x4
    call   func_66ece
    add    $0x8,%esp
    push   $0x64
    push   $0x5
    call   func_66ece
    add    $0x8,%esp
    push   $0x28f
    push   $0x6
    call   func_66ece
    add    $0x8,%esp
    push   $0x0
    push   $0x7
    call   func_66ece
    add    $0x8,%esp
    push   $0x0
    push   $0x8
    call   func_66ece
    add    $0x8,%esp
    push   $0x1
    push   $0x9
    call   func_66ece
    add    $0x8,%esp
    push   $0x78
    push   $0xa
    call   func_66ece
    add    $0x8,%esp
    push   $0x8
    push   $0xb
    call   func_66ece
    add    $0x8,%esp
    push   $0x7f
    push   $0xc
    call   func_66ece
    add    $0x8,%esp
    push   $0x1
    push   $0xd
    call   func_66ece
    add    $0x8,%esp
    push   $0x0
    push   $0xe
    call   func_66ece
    add    $0x8,%esp
    push   $0x2
    push   $0xf
    call   func_66ece
    add    $0x8,%esp
    push   $0x1
    push   $0x10
    call   func_66ece
    add    $0x8,%esp
    push   $0x1
    push   $0x11
    call   func_66ece
    add    $0x8,%esp
    xor    %eax,%eax
    jmp    jump_72136
  jump_7212c:
    xor    %ebx,%ebx
    mov    %ebx,data_132f30(,%eax,4)
    inc    %eax
  jump_72136:
    cmp    $0x10,%eax
    jl     jump_7212c
    xor    %ah,%ah
    mov    %ah,data_132f70
    jmp    jump_743fc


/*----------------------------------------------------------------*/
func_72148:
/*----------------------------------------------------------------*/
    push   %esi
    mov    $0xf,%esi
    jmp    jump_72165
  jump_72150:
    mov    data_132f30(,%esi,4),%eax
    test   %eax,%eax
    je     jump_72164
    push   %eax
    call   func_67f8b
    add    $0x4,%esp
  jump_72164:
    dec    %esi
  jump_72165:
    test   %esi,%esi
    jge    jump_72150
    call   func_67d51
    call   func_744ea
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_72175:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_988e0
    je     jump_721f8
    push   $func_72175
    push   $func_718a4
    call   func_6633a
    add    $0x8,%esp
    push   $0x40
    push   $data_132f30
    call   func_66376
    add    $0x8,%esp
    push   $0x48
    push   $data_133070
    call   func_66376
    add    $0x8,%esp
    push   $0x100
    push   $data_132f70
    call   func_66376
    add    $0x8,%esp
    push   $0x18
    push   $data_1330b8
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_988dc
    call   func_66376
    add    $0x8,%esp
    push   $0x4
    push   $data_1330d0
    call   func_66376
    add    $0x8,%esp
    xor    %ebx,%ebx
    mov    %ebx,data_988e0
  jump_721f8:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_721fc:
    .long   func_725fc
    .long   func_7260d
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_72619
    .long   func_72638
    .long   func_7264c
    .long   func_7266b
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_7267f
    .long   func_7269c
    .long   func_726ae
    .long   func_726cb
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_726dd
    .long   func_726f1
    .long   0
    .long   0
    .long   func_72700
    .long   func_72716
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_72727
    .long   func_72748
    .long   func_7275e
    .long   func_7277f
    .long   func_72795
    .long   func_727ba
    .long   func_727d4
    .long   func_727f9
    .long   func_72813
    .long   func_72836
    .long   func_7284e
    .long   func_72871
    .long   func_72889
    .long   func_728b0
    .long   func_728cc
    .long   func_728f3
    .long   func_7290f
    .long   func_7293c
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_72964
    .long   func_729bd
    .long   func_72a0b
    .long   func_72a64
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_72ab2
    .long   func_72b09
    .long   func_72b55
    .long   func_72bac
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_72bf8
    .long   func_72c28
    .long   0
    .long   0
    .long   func_72c53
    .long   func_72c85
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_72cb2
    .long   func_72d0d
    .long   func_72d5d
    .long   func_72db8
    .long   func_72e08
    .long   func_72e67
    .long   func_72ebb
    .long   func_72f1a
    .long   func_72f6e
    .long   func_72fcb
    .long   func_7301d
    .long   func_7307a
    .long   func_730cc
    .long   func_7312d
    .long   func_73183
    .long   func_731e4

vtable_723fc:
    .long   func_7323a
    .long   func_7325b
    .long   func_7327f
    .long   func_732ab
    .long   0
    .long   0
    .long   func_732dd
    .long   func_73309
    .long   func_7333b
    .long   func_7335f
    .long   func_73386
    .long   func_733b4
    .long   0
    .long   0
    .long   func_733e8
    .long   func_73416
    .long   func_7344a
    .long   func_73466
    .long   func_73485
    .long   func_734a6
    .long   0
    .long   0
    .long   func_734cd
    .long   func_734ee
    .long   func_73515
    .long   func_73534
    .long   func_73556
    .long   func_73579
    .long   0
    .long   0
    .long   func_735a2
    .long   func_735c5
    .long   func_735ee
    .long   func_7361a
    .long   func_73649
    .long   func_73683
    .long   0
    .long   0
    .long   func_736c3
    .long   func_736fd
    .long   func_7373d
    .long   func_7376f
    .long   func_737a4
    .long   func_737e0
    .long   0
    .long   0
    .long   func_73822
    .long   func_7385e
    .long   func_738a0
    .long   func_738c7
    .long   func_738f1
    .long   func_73920
    .long   0
    .long   0
    .long   func_73955
    .long   func_73984
    .long   func_739b9
    .long   func_739e6
    .long   func_73a16
    .long   func_73a47
    .long   0
    .long   0
    .long   func_73a7e
    .long   func_73aaf
    .long   func_73ae6
    .long   func_73b02
    .long   func_73b28
    .long   func_73b49
    .long   0
    .long   0
    .long   func_73b74
    .long   func_73b95
    .long   func_73bc0
    .long   func_73bdf
    .long   func_73c08
    .long   func_73c2a
    .long   0
    .long   0
    .long   func_73c56
    .long   func_73c78
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_73ca4
    .long   func_73ccb
    .long   func_73cfc
    .long   func_73d2b
    .long   0
    .long   0
    .long   func_73d64
    .long   func_73d93
    .long   func_73dcc
    .long   func_73df9
    .long   func_73e30
    .long   func_73e60
    .long   0
    .long   0
    .long   func_73e9a
    .long   func_73eca
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0


/*----------------------------------------------------------------*/
func_725fc:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    xor    $0x8000,%eax
    mov    %ah,(%edi)
    inc    %edi
    dec    %ecx
    jne    func_725fc
    ret


/*----------------------------------------------------------------*/
func_7260d:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    mov    %ah,(%edi)
    inc    %edi
    dec    %ecx
    jne    func_7260d
    ret


/*----------------------------------------------------------------*/
func_72619:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ah,%dl
    mov    %dx,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_72619
    ret


/*----------------------------------------------------------------*/
func_72638:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %ah,%dl
    mov    %dx,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_72638
    ret


/*----------------------------------------------------------------*/
func_7264c:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dh,%al
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_7264c
    ret


/*----------------------------------------------------------------*/
func_7266b:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %dh,%al
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_7266b
    ret


/*----------------------------------------------------------------*/
func_7267f:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ah,(%edi)
    mov    %dh,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_7267f
    ret


/*----------------------------------------------------------------*/
func_7269c:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %ah,(%edi)
    mov    %dh,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_7269c
    ret


/*----------------------------------------------------------------*/
func_726ae:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dh,(%edi)
    mov    %ah,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_726ae
    ret


/*----------------------------------------------------------------*/
func_726cb:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %dh,(%edi)
    mov    %ah,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_726cb
    ret


/*----------------------------------------------------------------*/
func_726dd:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    xor    $0x8000,%eax
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_726dd
    ret


/*----------------------------------------------------------------*/
func_726f1:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_726f1
    ret


/*----------------------------------------------------------------*/
func_72700:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    xor    $0x8000,%eax
    xchg   %al,%ah
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_72700
    ret


/*----------------------------------------------------------------*/
func_72716:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    xchg   %al,%ah
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_72716
    ret


/*----------------------------------------------------------------*/
func_72727:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_72727
    ret


/*----------------------------------------------------------------*/
func_72748:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_72748
    ret


/*----------------------------------------------------------------*/
func_7275e:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_7275e
    ret


/*----------------------------------------------------------------*/
func_7277f:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_7277f
    ret


/*----------------------------------------------------------------*/
func_72795:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_72795
    ret


/*----------------------------------------------------------------*/
func_727ba:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_727ba
    ret


/*----------------------------------------------------------------*/
func_727d4:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_727d4
    ret


/*----------------------------------------------------------------*/
func_727f9:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_727f9
    ret


/*----------------------------------------------------------------*/
func_72813:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_72813
    ret


/*----------------------------------------------------------------*/
func_72836:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_72836
    ret


/*----------------------------------------------------------------*/
func_7284e:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_7284e
    ret


/*----------------------------------------------------------------*/
func_72871:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_72871
    ret


/*----------------------------------------------------------------*/
func_72889:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_72889
    ret


/*----------------------------------------------------------------*/
func_728b0:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_728b0
    ret


/*----------------------------------------------------------------*/
func_728cc:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_728cc
    ret


/*----------------------------------------------------------------*/
func_728f3:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_728f3
    ret


/*----------------------------------------------------------------*/
func_7290f:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    cmp    $0x7fff,%eax
    jg     jump_7292e
    cmp    $0xffff8000,%eax
    jl     jump_72935
  jump_72922:
    xor    $0x8000,%eax
    mov    %ah,(%edi)
    inc    %edi
    dec    %ecx
    jne    func_7290f
    ret
  jump_7292e:
    mov    $0x7fff,%eax
    jmp    jump_72922
  jump_72935:
    mov    $0xffff8000,%eax
    jmp    jump_72922


/*----------------------------------------------------------------*/
func_7293c:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    cmp    $0x7fff,%eax
    jg     jump_72956
    cmp    $0xffff8000,%eax
    jl     jump_7295d
  jump_7294f:
    mov    %ah,(%edi)
    inc    %edi
    dec    %ecx
    jne    func_7293c
    ret
  jump_72956:
    mov    $0x7fff,%eax
    jmp    jump_7294f
  jump_7295d:
    mov    $0xffff8000,%eax
    jmp    jump_7294f


/*----------------------------------------------------------------*/
func_72964:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_729a1
    cmp    $0xffff8000,%eax
    jl     jump_729a8
  jump_7297a:
    cmp    $0x7fff,%edx
    jg     jump_729af
    cmp    $0xffff8000,%edx
    jl     jump_729b6
  jump_7298a:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ah,%dl
    mov    %dx,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_72964
    ret
  jump_729a1:
    mov    $0x7fff,%eax
    jmp    jump_7297a
  jump_729a8:
    mov    $0xffff8000,%eax
    jmp    jump_7297a
  jump_729af:
    mov    $0x7fff,%edx
    jmp    jump_7298a
  jump_729b6:
    mov    $0xffff8000,%edx
    jmp    jump_7298a


/*----------------------------------------------------------------*/
func_729bd:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_729ef
    cmp    $0xffff8000,%eax
    jl     jump_729f6
  jump_729d3:
    cmp    $0x7fff,%edx
    jg     jump_729fd
    cmp    $0xffff8000,%edx
    jl     jump_72a04
  jump_729e3:
    mov    %ah,%dl
    mov    %dx,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_729bd
    ret
  jump_729ef:
    mov    $0x7fff,%eax
    jmp    jump_729d3
  jump_729f6:
    mov    $0xffff8000,%eax
    jmp    jump_729d3
  jump_729fd:
    mov    $0x7fff,%edx
    jmp    jump_729e3
  jump_72a04:
    mov    $0xffff8000,%edx
    jmp    jump_729e3


/*----------------------------------------------------------------*/
func_72a0b:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72a48
    cmp    $0xffff8000,%eax
    jl     jump_72a4f
  jump_72a21:
    cmp    $0x7fff,%edx
    jg     jump_72a56
    cmp    $0xffff8000,%edx
    jl     jump_72a5d
  jump_72a31:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dh,%al
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_72a0b
    ret
  jump_72a48:
    mov    $0x7fff,%eax
    jmp    jump_72a21
  jump_72a4f:
    mov    $0xffff8000,%eax
    jmp    jump_72a21
  jump_72a56:
    mov    $0x7fff,%edx
    jmp    jump_72a31
  jump_72a5d:
    mov    $0xffff8000,%edx
    jmp    jump_72a31


/*----------------------------------------------------------------*/
func_72a64:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72a96
    cmp    $0xffff8000,%eax
    jl     jump_72a9d
  jump_72a7a:
    cmp    $0x7fff,%edx
    jg     jump_72aa4
    cmp    $0xffff8000,%edx
    jl     jump_72aab
  jump_72a8a:
    mov    %dh,%al
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_72a64
    ret
  jump_72a96:
    mov    $0x7fff,%eax
    jmp    jump_72a7a
  jump_72a9d:
    mov    $0xffff8000,%eax
    jmp    jump_72a7a
  jump_72aa4:
    mov    $0x7fff,%edx
    jmp    jump_72a8a
  jump_72aab:
    mov    $0xffff8000,%edx
    jmp    jump_72a8a


/*----------------------------------------------------------------*/
func_72ab2:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72aed
    cmp    $0xffff8000,%eax
    jl     jump_72af4
  jump_72ac8:
    cmp    $0x7fff,%edx
    jg     jump_72afb
    cmp    $0xffff8000,%edx
    jl     jump_72b02
  jump_72ad8:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ah,(%edi)
    mov    %dh,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_72ab2
    ret
  jump_72aed:
    mov    $0x7fff,%eax
    jmp    jump_72ac8
  jump_72af4:
    mov    $0xffff8000,%eax
    jmp    jump_72ac8
  jump_72afb:
    mov    $0x7fff,%edx
    jmp    jump_72ad8
  jump_72b02:
    mov    $0xffff8000,%edx
    jmp    jump_72ad8


/*----------------------------------------------------------------*/
func_72b09:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72b39
    cmp    $0xffff8000,%eax
    jl     jump_72b40
  jump_72b1f:
    cmp    $0x7fff,%edx
    jg     jump_72b47
    cmp    $0xffff8000,%edx
    jl     jump_72b4e
  jump_72b2f:
    mov    %ah,(%edi)
    mov    %dh,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_72b09
    ret
  jump_72b39:
    mov    $0x7fff,%eax
    jmp    jump_72b1f
  jump_72b40:
    mov    $0xffff8000,%eax
    jmp    jump_72b1f
  jump_72b47:
    mov    $0x7fff,%edx
    jmp    jump_72b2f
  jump_72b4e:
    mov    $0xffff8000,%edx
    jmp    jump_72b2f


/*----------------------------------------------------------------*/
func_72b55:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72b90
    cmp    $0xffff8000,%eax
    jl     jump_72b97
  jump_72b6b:
    cmp    $0x7fff,%edx
    jg     jump_72b9e
    cmp    $0xffff8000,%edx
    jl     jump_72ba5
  jump_72b7b:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dh,(%edi)
    mov    %ah,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_72b55
    ret
  jump_72b90:
    mov    $0x7fff,%eax
    jmp    jump_72b6b
  jump_72b97:
    mov    $0xffff8000,%eax
    jmp    jump_72b6b
  jump_72b9e:
    mov    $0x7fff,%edx
    jmp    jump_72b7b
  jump_72ba5:
    mov    $0xffff8000,%edx
    jmp    jump_72b7b


/*----------------------------------------------------------------*/
func_72bac:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72bdc
    cmp    $0xffff8000,%eax
    jl     jump_72be3
  jump_72bc2:
    cmp    $0x7fff,%edx
    jg     jump_72bea
    cmp    $0xffff8000,%edx
    jl     jump_72bf1
  jump_72bd2:
    mov    %dh,(%edi)
    mov    %ah,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_72bac
    ret
  jump_72bdc:
    mov    $0x7fff,%eax
    jmp    jump_72bc2
  jump_72be3:
    mov    $0xffff8000,%eax
    jmp    jump_72bc2
  jump_72bea:
    mov    $0x7fff,%edx
    jmp    jump_72bd2
  jump_72bf1:
    mov    $0xffff8000,%edx
    jmp    jump_72bd2


/*----------------------------------------------------------------*/
func_72bf8:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    cmp    $0x7fff,%eax
    jg     jump_72c1a
    cmp    $0xffff8000,%eax
    jl     jump_72c21
  jump_72c0b:
    xor    $0x8000,%eax
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_72bf8
    ret
  jump_72c1a:
    mov    $0x7fff,%eax
    jmp    jump_72c0b
  jump_72c21:
    mov    $0xffff8000,%eax
    jmp    jump_72c0b


/*----------------------------------------------------------------*/
func_72c28:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    cmp    $0x7fff,%eax
    jg     jump_72c45
    cmp    $0xffff8000,%eax
    jl     jump_72c4c
  jump_72c3b:
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_72c28
    ret
  jump_72c45:
    mov    $0x7fff,%eax
    jmp    jump_72c3b
  jump_72c4c:
    mov    $0xffff8000,%eax
    jmp    jump_72c3b


/*----------------------------------------------------------------*/
func_72c53:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    cmp    $0x7fff,%eax
    jg     jump_72c77
    cmp    $0xffff8000,%eax
    jl     jump_72c7e
  jump_72c66:
    xor    $0x8000,%eax
    xchg   %al,%ah
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_72c53
    ret
  jump_72c77:
    mov    $0x7fff,%eax
    jmp    jump_72c66
  jump_72c7e:
    mov    $0xffff8000,%eax
    jmp    jump_72c66


/*----------------------------------------------------------------*/
func_72c85:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    cmp    $0x7fff,%eax
    jg     jump_72ca4
    cmp    $0xffff8000,%eax
    jl     jump_72cab
  jump_72c98:
    xchg   %al,%ah
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_72c85
    ret
  jump_72ca4:
    mov    $0x7fff,%eax
    jmp    jump_72c98
  jump_72cab:
    mov    $0xffff8000,%eax
    jmp    jump_72c98


/*----------------------------------------------------------------*/
func_72cb2:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72cf1
    cmp    $0xffff8000,%eax
    jl     jump_72cf8
  jump_72cc8:
    cmp    $0x7fff,%edx
    jg     jump_72cff
    cmp    $0xffff8000,%edx
    jl     jump_72d06
  jump_72cd8:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_72cb2
    ret
  jump_72cf1:
    mov    $0x7fff,%eax
    jmp    jump_72cc8
  jump_72cf8:
    mov    $0xffff8000,%eax
    jmp    jump_72cc8
  jump_72cff:
    mov    $0x7fff,%edx
    jmp    jump_72cd8
  jump_72d06:
    mov    $0xffff8000,%edx
    jmp    jump_72cd8


/*----------------------------------------------------------------*/
func_72d0d:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72d41
    cmp    $0xffff8000,%eax
    jl     jump_72d48
  jump_72d23:
    cmp    $0x7fff,%edx
    jg     jump_72d4f
    cmp    $0xffff8000,%edx
    jl     jump_72d56
  jump_72d33:
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_72d0d
    ret
  jump_72d41:
    mov    $0x7fff,%eax
    jmp    jump_72d23
  jump_72d48:
    mov    $0xffff8000,%eax
    jmp    jump_72d23
  jump_72d4f:
    mov    $0x7fff,%edx
    jmp    jump_72d33
  jump_72d56:
    mov    $0xffff8000,%edx
    jmp    jump_72d33


/*----------------------------------------------------------------*/
func_72d5d:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72d9c
    cmp    $0xffff8000,%eax
    jl     jump_72da3
  jump_72d73:
    cmp    $0x7fff,%edx
    jg     jump_72daa
    cmp    $0xffff8000,%edx
    jl     jump_72db1
  jump_72d83:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_72d5d
    ret
  jump_72d9c:
    mov    $0x7fff,%eax
    jmp    jump_72d73
  jump_72da3:
    mov    $0xffff8000,%eax
    jmp    jump_72d73
  jump_72daa:
    mov    $0x7fff,%edx
    jmp    jump_72d83
  jump_72db1:
    mov    $0xffff8000,%edx
    jmp    jump_72d83


/*----------------------------------------------------------------*/
func_72db8:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72dec
    cmp    $0xffff8000,%eax
    jl     jump_72df3
  jump_72dce:
    cmp    $0x7fff,%edx
    jg     jump_72dfa
    cmp    $0xffff8000,%edx
    jl     jump_72e01
  jump_72dde:
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_72db8
    ret
  jump_72dec:
    mov    $0x7fff,%eax
    jmp    jump_72dce
  jump_72df3:
    mov    $0xffff8000,%eax
    jmp    jump_72dce
  jump_72dfa:
    mov    $0x7fff,%edx
    jmp    jump_72dde
  jump_72e01:
    mov    $0xffff8000,%edx
    jmp    jump_72dde


/*----------------------------------------------------------------*/
func_72e08:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72e4b
    cmp    $0xffff8000,%eax
    jl     jump_72e52
  jump_72e1e:
    cmp    $0x7fff,%edx
    jg     jump_72e59
    cmp    $0xffff8000,%edx
    jl     jump_72e60
  jump_72e2e:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_72e08
    ret
  jump_72e4b:
    mov    $0x7fff,%eax
    jmp    jump_72e1e
  jump_72e52:
    mov    $0xffff8000,%eax
    jmp    jump_72e1e
  jump_72e59:
    mov    $0x7fff,%edx
    jmp    jump_72e2e
  jump_72e60:
    mov    $0xffff8000,%edx
    jmp    jump_72e2e


/*----------------------------------------------------------------*/
func_72e67:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72e9f
    cmp    $0xffff8000,%eax
    jl     jump_72ea6
  jump_72e7d:
    cmp    $0x7fff,%edx
    jg     jump_72ead
    cmp    $0xffff8000,%edx
    jl     jump_72eb4
  jump_72e8d:
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_72e67
    ret
  jump_72e9f:
    mov    $0x7fff,%eax
    jmp    jump_72e7d
  jump_72ea6:
    mov    $0xffff8000,%eax
    jmp    jump_72e7d
  jump_72ead:
    mov    $0x7fff,%edx
    jmp    jump_72e8d
  jump_72eb4:
    mov    $0xffff8000,%edx
    jmp    jump_72e8d


/*----------------------------------------------------------------*/
func_72ebb:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72efe
    cmp    $0xffff8000,%eax
    jl     jump_72f05
  jump_72ed1:
    cmp    $0x7fff,%edx
    jg     jump_72f0c
    cmp    $0xffff8000,%edx
    jl     jump_72f13
  jump_72ee1:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_72ebb
    ret
  jump_72efe:
    mov    $0x7fff,%eax
    jmp    jump_72ed1
  jump_72f05:
    mov    $0xffff8000,%eax
    jmp    jump_72ed1
  jump_72f0c:
    mov    $0x7fff,%edx
    jmp    jump_72ee1
  jump_72f13:
    mov    $0xffff8000,%edx
    jmp    jump_72ee1


/*----------------------------------------------------------------*/
func_72f1a:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72f52
    cmp    $0xffff8000,%eax
    jl     jump_72f59
  jump_72f30:
    cmp    $0x7fff,%edx
    jg     jump_72f60
    cmp    $0xffff8000,%edx
    jl     jump_72f67
  jump_72f40:
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_72f1a
    ret
  jump_72f52:
    mov    $0x7fff,%eax
    jmp    jump_72f30
  jump_72f59:
    mov    $0xffff8000,%eax
    jmp    jump_72f30
  jump_72f60:
    mov    $0x7fff,%edx
    jmp    jump_72f40
  jump_72f67:
    mov    $0xffff8000,%edx
    jmp    jump_72f40


/*----------------------------------------------------------------*/
func_72f6e:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_72faf
    cmp    $0xffff8000,%eax
    jl     jump_72fb6
  jump_72f84:
    cmp    $0x7fff,%edx
    jg     jump_72fbd
    cmp    $0xffff8000,%edx
    jl     jump_72fc4
  jump_72f94:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_72f6e
    ret
  jump_72faf:
    mov    $0x7fff,%eax
    jmp    jump_72f84
  jump_72fb6:
    mov    $0xffff8000,%eax
    jmp    jump_72f84
  jump_72fbd:
    mov    $0x7fff,%edx
    jmp    jump_72f94
  jump_72fc4:
    mov    $0xffff8000,%edx
    jmp    jump_72f94


/*----------------------------------------------------------------*/
func_72fcb:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_73001
    cmp    $0xffff8000,%eax
    jl     jump_73008
  jump_72fe1:
    cmp    $0x7fff,%edx
    jg     jump_7300f
    cmp    $0xffff8000,%edx
    jl     jump_73016
  jump_72ff1:
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_72fcb
    ret
  jump_73001:
    mov    $0x7fff,%eax
    jmp    jump_72fe1
  jump_73008:
    mov    $0xffff8000,%eax
    jmp    jump_72fe1
  jump_7300f:
    mov    $0x7fff,%edx
    jmp    jump_72ff1
  jump_73016:
    mov    $0xffff8000,%edx
    jmp    jump_72ff1


/*----------------------------------------------------------------*/
func_7301d:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_7305e
    cmp    $0xffff8000,%eax
    jl     jump_73065
  jump_73033:
    cmp    $0x7fff,%edx
    jg     jump_7306c
    cmp    $0xffff8000,%edx
    jl     jump_73073
  jump_73043:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_7301d
    ret
  jump_7305e:
    mov    $0x7fff,%eax
    jmp    jump_73033
  jump_73065:
    mov    $0xffff8000,%eax
    jmp    jump_73033
  jump_7306c:
    mov    $0x7fff,%edx
    jmp    jump_73043
  jump_73073:
    mov    $0xffff8000,%edx
    jmp    jump_73043


/*----------------------------------------------------------------*/
func_7307a:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_730b0
    cmp    $0xffff8000,%eax
    jl     jump_730b7
  jump_73090:
    cmp    $0x7fff,%edx
    jg     jump_730be
    cmp    $0xffff8000,%edx
    jl     jump_730c5
  jump_730a0:
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_7307a
    ret
  jump_730b0:
    mov    $0x7fff,%eax
    jmp    jump_73090
  jump_730b7:
    mov    $0xffff8000,%eax
    jmp    jump_73090
  jump_730be:
    mov    $0x7fff,%edx
    jmp    jump_730a0
  jump_730c5:
    mov    $0xffff8000,%edx
    jmp    jump_730a0


/*----------------------------------------------------------------*/
func_730cc:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_73111
    cmp    $0xffff8000,%eax
    jl     jump_73118
  jump_730e2:
    cmp    $0x7fff,%edx
    jg     jump_7311f
    cmp    $0xffff8000,%edx
    jl     jump_73126
  jump_730f2:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_730cc
    ret
  jump_73111:
    mov    $0x7fff,%eax
    jmp    jump_730e2
  jump_73118:
    mov    $0xffff8000,%eax
    jmp    jump_730e2
  jump_7311f:
    mov    $0x7fff,%edx
    jmp    jump_730f2
  jump_73126:
    mov    $0xffff8000,%edx
    jmp    jump_730f2


/*----------------------------------------------------------------*/
func_7312d:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_73167
    cmp    $0xffff8000,%eax
    jl     jump_7316e
  jump_73143:
    cmp    $0x7fff,%edx
    jg     jump_73175
    cmp    $0xffff8000,%edx
    jl     jump_7317c
  jump_73153:
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_7312d
    ret
  jump_73167:
    mov    $0x7fff,%eax
    jmp    jump_73143
  jump_7316e:
    mov    $0xffff8000,%eax
    jmp    jump_73143
  jump_73175:
    mov    $0x7fff,%edx
    jmp    jump_73153
  jump_7317c:
    mov    $0xffff8000,%edx
    jmp    jump_73153


/*----------------------------------------------------------------*/
func_73183:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_731c8
    cmp    $0xffff8000,%eax
    jl     jump_731cf
  jump_73199:
    cmp    $0x7fff,%edx
    jg     jump_731d6
    cmp    $0xffff8000,%edx
    jl     jump_731dd
  jump_731a9:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_73183
    ret
  jump_731c8:
    mov    $0x7fff,%eax
    jmp    jump_73199
  jump_731cf:
    mov    $0xffff8000,%eax
    jmp    jump_73199
  jump_731d6:
    mov    $0x7fff,%edx
    jmp    jump_731a9
  jump_731dd:
    mov    $0xffff8000,%edx
    jmp    jump_731a9


/*----------------------------------------------------------------*/
func_731e4:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_7321e
    cmp    $0xffff8000,%eax
    jl     jump_73225
  jump_731fa:
    cmp    $0x7fff,%edx
    jg     jump_7322c
    cmp    $0xffff8000,%edx
    jl     jump_73233
  jump_7320a:
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_731e4
    ret
  jump_7321e:
    mov    $0x7fff,%eax
    jmp    jump_731fa
  jump_73225:
    mov    $0xffff8000,%eax
    jmp    jump_731fa
  jump_7322c:
    mov    $0x7fff,%edx
    jmp    jump_7320a
  jump_73233:
    mov    $0xffff8000,%edx
    jmp    jump_7320a


/*----------------------------------------------------------------*/
func_7323a:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_7325a
    mov    (%esi),%ah
    xor    $0x8000,%eax
    inc    %esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_7323a
  jump_7325a:
    ret


/*----------------------------------------------------------------*/
func_7325b:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_7327e
    mov    (%esi),%ah
    xor    $0x8000,%eax
    inc    %esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_7325b
  jump_7327e:
    ret


/*----------------------------------------------------------------*/
func_7327f:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_732aa
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_7327f
  jump_732aa:
    ret


/*----------------------------------------------------------------*/
func_732ab:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_732dc
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_732ab
  jump_732dc:
    ret


/*----------------------------------------------------------------*/
func_732dd:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73308
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_732dd
  jump_73308:
    ret


/*----------------------------------------------------------------*/
func_73309:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_7333a
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73309
  jump_7333a:
    ret


/*----------------------------------------------------------------*/
func_7333b:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_7335e
    mov    (%esi),%ax
    xor    $0x8000,%eax
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_7333b
  jump_7335e:
    ret


/*----------------------------------------------------------------*/
func_7335f:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73385
    mov    (%esi),%ax
    xor    $0x8000,%eax
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_7335f
  jump_73385:
    ret


/*----------------------------------------------------------------*/
func_73386:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_733b3
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73386
  jump_733b3:
    ret


/*----------------------------------------------------------------*/
func_733b4:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_733e7
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_733b4
  jump_733e7:
    ret


/*----------------------------------------------------------------*/
func_733e8:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73415
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_733e8
  jump_73415:
    ret


/*----------------------------------------------------------------*/
func_73416:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73449
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73416
  jump_73449:
    ret


/*----------------------------------------------------------------*/
func_7344a:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73465
    mov    (%esi),%ah
    inc    %esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_7344a
  jump_73465:
    ret


/*----------------------------------------------------------------*/
func_73466:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73484
    mov    (%esi),%ah
    inc    %esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73466
  jump_73484:
    ret


/*----------------------------------------------------------------*/
func_73485:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_734a5
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73485
  jump_734a5:
    ret


/*----------------------------------------------------------------*/
func_734a6:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_734cc
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_734a6
  jump_734cc:
    ret


/*----------------------------------------------------------------*/
func_734cd:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_734ed
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_734cd
  jump_734ed:
    ret


/*----------------------------------------------------------------*/
func_734ee:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73514
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_734ee
  jump_73514:
    ret


/*----------------------------------------------------------------*/
func_73515:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73533
    mov    (%esi),%ax
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73515
  jump_73533:
    ret


/*----------------------------------------------------------------*/
func_73534:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73555
    mov    (%esi),%ax
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73534
  jump_73555:
    ret


/*----------------------------------------------------------------*/
func_73556:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73578
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73556
  jump_73578:
    ret


/*----------------------------------------------------------------*/
func_73579:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_735a1
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73579
  jump_735a1:
    ret


/*----------------------------------------------------------------*/
func_735a2:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_735c4
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_735a2
  jump_735c4:
    ret


/*----------------------------------------------------------------*/
func_735c5:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_735ed
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_735c5
  jump_735ed:
    ret


/*----------------------------------------------------------------*/
func_735ee:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73619
    mov    (%esi),%ah
    xor    $0x8000,%eax
    add    data_988f8,%ecx
    adc    data_988fc,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_735ee
  jump_73619:
    ret


/*----------------------------------------------------------------*/
func_7361a:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73648
    mov    (%esi),%ah
    xor    $0x8000,%eax
    add    data_988f8,%ecx
    adc    data_988fc,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_7361a
  jump_73648:
    ret


/*----------------------------------------------------------------*/
func_73649:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73682
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73649
  jump_73682:
    ret


/*----------------------------------------------------------------*/
func_73683:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_736c2
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73683
  jump_736c2:
    ret


/*----------------------------------------------------------------*/
func_736c3:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_736fc
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_736c3
  jump_736fc:
    ret


/*----------------------------------------------------------------*/
func_736fd:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_7373c
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_736fd
  jump_7373c:
    ret


/*----------------------------------------------------------------*/
func_7373d:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_7376e
    mov    (%esi),%ax
    xor    $0x8000,%eax
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_7373d
  jump_7376e:
    ret


/*----------------------------------------------------------------*/
func_7376f:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_737a3
    mov    (%esi),%ax
    xor    $0x8000,%eax
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_7376f
  jump_737a3:
    ret


/*----------------------------------------------------------------*/
func_737a4:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_737df
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_737a4
  jump_737df:
    ret


/*----------------------------------------------------------------*/
func_737e0:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73821
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_737e0
  jump_73821:
    ret


/*----------------------------------------------------------------*/
func_73822:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_7385d
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73822
  jump_7385d:
    ret


/*----------------------------------------------------------------*/
func_7385e:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_7389f
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_7385e
  jump_7389f:
    ret


/*----------------------------------------------------------------*/
func_738a0:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_738c6
    mov    (%esi),%ah
    add    data_988f8,%ecx
    adc    data_988fc,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_738a0
  jump_738c6:
    ret


/*----------------------------------------------------------------*/
func_738c7:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_738f0
    mov    (%esi),%ah
    add    data_988f8,%ecx
    adc    data_988fc,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_738c7
  jump_738f0:
    ret


/*----------------------------------------------------------------*/
func_738f1:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_7391f
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_738f1
  jump_7391f:
    ret


/*----------------------------------------------------------------*/
func_73920:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73954
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73920
  jump_73954:
    ret


/*----------------------------------------------------------------*/
func_73955:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73983
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73955
  jump_73983:
    ret


/*----------------------------------------------------------------*/
func_73984:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_739b8
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73984
  jump_739b8:
    ret


/*----------------------------------------------------------------*/
func_739b9:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_739e5
    mov    (%esi),%ax
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_739b9
  jump_739e5:
    ret


/*----------------------------------------------------------------*/
func_739e6:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73a15
    mov    (%esi),%ax
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_739e6
  jump_73a15:
    ret


/*----------------------------------------------------------------*/
func_73a16:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73a46
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73a16
  jump_73a46:
    ret


/*----------------------------------------------------------------*/
func_73a47:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73a7d
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73a47
  jump_73a7d:
    ret


/*----------------------------------------------------------------*/
func_73a7e:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73aae
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73a7e
  jump_73aae:
    ret


/*----------------------------------------------------------------*/
func_73aaf:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73ae5
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73aaf
  jump_73ae5:
    ret


/*----------------------------------------------------------------*/
func_73ae6:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73b01
    mov    (%esi),%al
    inc    %esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73ae6
  jump_73b01:
    ret


/*----------------------------------------------------------------*/
func_73b02:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73b27
    mov    (%esi),%al
    inc    %esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%eax,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73b02
  jump_73b27:
    ret


/*----------------------------------------------------------------*/
func_73b28:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73b48
    mov    (%esi),%al
    mov    0x1(%esi),%bl
    add    $0x2,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73b28
  jump_73b48:
    ret


/*----------------------------------------------------------------*/
func_73b49:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73b73
    mov    (%esi),%al
    mov    0x1(%esi),%bl
    add    $0x2,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73b49
  jump_73b73:
    ret


/*----------------------------------------------------------------*/
func_73b74:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73b94
    mov    (%esi),%bl
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73b74
  jump_73b94:
    ret


/*----------------------------------------------------------------*/
func_73b95:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73bbf
    mov    (%esi),%bl
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73b95
  jump_73bbf:
    ret


/*----------------------------------------------------------------*/
func_73bc0:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73bde
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73bc0
  jump_73bde:
    ret


/*----------------------------------------------------------------*/
func_73bdf:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73c07
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%eax,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73bdf
  jump_73c07:
    ret


/*----------------------------------------------------------------*/
func_73c08:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73c29
    mov    0x1(%esi),%al
    mov    0x3(%esi),%bl
    add    $0x4,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73c08
  jump_73c29:
    ret


/*----------------------------------------------------------------*/
func_73c2a:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73c55
    mov    0x1(%esi),%al
    mov    0x3(%esi),%bl
    add    $0x4,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73c2a
  jump_73c55:
    ret


/*----------------------------------------------------------------*/
func_73c56:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73c77
    mov    0x1(%esi),%bl
    mov    0x3(%esi),%al
    add    $0x4,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73c56
  jump_73c77:
    ret


/*----------------------------------------------------------------*/
func_73c78:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73ca3
    mov    0x1(%esi),%bl
    mov    0x3(%esi),%al
    add    $0x4,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73c78
  jump_73ca3:
    ret


/*----------------------------------------------------------------*/
func_73ca4:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73cca
    mov    (%esi),%al
    add    data_988f8,%ecx
    adc    data_988fc,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73ca4
  jump_73cca:
    ret


/*----------------------------------------------------------------*/
func_73ccb:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73cfb
    mov    (%esi),%al
    add    data_988f8,%ecx
    adc    data_988fc,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%eax,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73ccb
  jump_73cfb:
    ret


/*----------------------------------------------------------------*/
func_73cfc:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73d2a
    mov    (%esi),%al
    mov    0x1(%esi),%bl
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73cfc
  jump_73d2a:
    ret


/*----------------------------------------------------------------*/
func_73d2b:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73d63
    mov    (%esi),%al
    mov    0x1(%esi),%bl
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73d2b
  jump_73d63:
    ret


/*----------------------------------------------------------------*/
func_73d64:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73d92
    mov    (%esi),%bl
    mov    0x1(%esi),%al
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73d64
  jump_73d92:
    ret


/*----------------------------------------------------------------*/
func_73d93:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73dcb
    mov    (%esi),%bl
    mov    0x1(%esi),%al
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73d93
  jump_73dcb:
    ret


/*----------------------------------------------------------------*/
func_73dcc:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73df8
    mov    0x1(%esi),%al
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73dcc
  jump_73df8:
    ret


/*----------------------------------------------------------------*/
func_73df9:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73e2f
    mov    0x1(%esi),%al
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%eax,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73df9
  jump_73e2f:
    ret


/*----------------------------------------------------------------*/
func_73e30:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73e5f
    mov    0x1(%esi),%al
    mov    0x3(%esi),%bl
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73e30
  jump_73e5f:
    ret


/*----------------------------------------------------------------*/
func_73e60:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73e99
    mov    0x1(%esi),%al
    mov    0x3(%esi),%bl
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73e60
  jump_73e99:
    ret


/*----------------------------------------------------------------*/
func_73e9a:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73ec9
    mov    0x1(%esi),%bl
    mov    0x3(%esi),%al
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_988f4,%edi
    jb     func_73e9a
  jump_73ec9:
    ret


/*----------------------------------------------------------------*/
func_73eca:
/*----------------------------------------------------------------*/
    cmp    data_988ec,%esi
    jae    jump_73f03
    mov    0x1(%esi),%bl
    mov    0x3(%esi),%al
    xor    %ebp,%ebp
    add    data_988f8,%ecx
    adc    %ebp,%ebp
    add    data_988fc(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_988f4,%edi
    jb     func_73eca
  jump_73f03:
    ret


/*----------------------------------------------------------------*/
func_73f04:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %ds
    push   %es
    mov    0x8(%ebp),%ecx
    mov    (%ecx),%edi
    mov    $0x0,%eax
    cmpl   $0x2,0x18(%edi)
    je     jump_73f22
    cmpl   $0x3,0x18(%edi)
    jne    jump_73f25
  jump_73f22:
    or     $0x1,%eax
  jump_73f25:
    cmpl   $0x2,0x34(%ecx)
    je     jump_73f31
    cmpl   $0x3,0x34(%ecx)
    jne    jump_73f40
  jump_73f31:
    or     $0x2,%eax
    testl  $0x2,0x38(%ecx)
    je     jump_73f40
    or     $0x4,%eax
  jump_73f40:
    cmpl   $0x1,0x34(%ecx)
    je     jump_73f4c
    cmpl   $0x3,0x34(%ecx)
    jne    jump_73f4f
  jump_73f4c:
    or     $0x8,%eax
  jump_73f4f:
    cmpl   $0x7f,0x40(%ecx)
    jne    jump_73f5b
    cmpl   $0x40,0x44(%ecx)
    je     jump_73f60
  jump_73f5b:
    or     $0x40,%eax
    jmp    jump_73f6c
  jump_73f60:
    testl  $0x1,0x38(%ecx)
    je     jump_73f6c
    or     $0x10,%eax
  jump_73f6c:
    mov    %eax,data_988e4
    mov    $0x0,%eax
    mov    0x3c(%ecx),%edx
    cmp    $0x0,%edx
    jg     jump_73f83
    mov    $0x1,%edx
  jump_73f83:
    mov    0x14(%edi),%ebx
    shl    $0x10,%ebx
    div    %ebx
    mov    %eax,%edx
    sub    $0x10000,%edx
    jg     jump_73f97
    neg    %edx
  jump_73f97:
    cmp    data_133088,%edx
    jbe    jump_73fe1
    mov    %eax,%ebx
    shr    $0x10,%ebx
    shl    $0x10,%eax
    mov    %eax,data_988f8
    mov    %ebx,%eax
    inc    %ebx
    testl  $0x2,data_988e4
    je     jump_73fbf
    shl    %eax
    shl    %ebx
  jump_73fbf:
    testl  $0x8,data_988e4
    je     jump_73fcf
    shl    %eax
    shl    %ebx
  jump_73fcf:
    mov    %eax,data_988fc
    mov    %ebx,data_98900
    orl    $0x20,data_988e4
  jump_73fe1:
    mov    0x50(%edi),%eax
    mov    %eax,data_988f0
    add    0x4c(%edi),%eax
    mov    %eax,data_988f4
    mov    data_988f0,%edi
  jump_73ff7:
    mov    0x28(%ecx),%ebx
    mov    0x8(%ecx,%ebx,4),%eax
    add    0x18(%ecx,%ebx,4),%eax
    mov    %eax,data_988e8
    mov    0x8(%ecx,%ebx,4),%eax
    add    0x10(%ecx,%ebx,4),%eax
    mov    %eax,data_988ec
    cmpl   $0x0,0x848(%ecx)
    jne    jump_740dd
  jump_74021:
    mov    data_988e8,%esi
    lea    0x48(%ecx),%edx
    mov    $0x0,%eax
    mov    $0x0,%ebx
    mov    $0x80000000,%ecx
    push   %ebp
    mov    data_988e4,%ebp
    call   *vtable_723fc(,%ebp,4)
    pop    %ebp
    mov    0x8(%ebp),%ecx
    mov    0x28(%ecx),%ebx
    mov    %esi,%eax
    sub    0x8(%ecx,%ebx,4),%eax
    mov    %eax,0x18(%ecx,%ebx,4)
    cmp    data_988ec,%esi
    jb     jump_740c5
    cmpl   $0x0,0x84c(%ecx)
    jne    jump_740f1
  jump_7406d:
    cmpl   $0x0,0x30(%ecx)
    je     jump_7407c
    cmpl   $0x1,0x30(%ecx)
    je     jump_74095
    decl   0x30(%ecx)
  jump_7407c:
    mov    0x28(%ecx),%ebx
    movl   $0x0,0x18(%ecx,%ebx,4)
    cmp    data_988f4,%edi
    jb     jump_73ff7
    jmp    jump_740c5
  jump_74095:
    mov    0x28(%ecx),%ebx
    xor    $0x1,%ebx
    cmpl   $0x0,0x20(%ecx,%ebx,4)
    jne    jump_740b5
    cmpl   $0x0,0x10(%ecx,%ebx,4)
    je     jump_740c5
    cmpl   $0x0,0x18(%ecx,%ebx,4)
    jne    jump_740c5
    mov    %ebx,0x28(%ecx)
    jmp    jump_7407c
  jump_740b5:
    movl   $0x2,0x4(%ecx)
    cmpl   $0x0,0x850(%ecx)
    jne    jump_740cc
  jump_740c5:
    pop    %es
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_740cc:
    push   %ecx
    mov    %esp,%esi
    mov    %ecx,%eax
    push   %eax
    call   *0x850(%ecx)
    mov    %esi,%esp
    pop    %ecx
    jmp    jump_740c5
  jump_740dd:
    push   %ecx
    mov    %esp,%esi
    mov    %ecx,%eax
    push   %eax
    call   *0x848(%ecx)
    mov    %esi,%esp
    pop    %ecx
    jmp    jump_74021
  jump_740f1:
    push   %ecx
    mov    %esp,%esi
    mov    %ecx,%eax
    push   %eax
    call   *0x84c(%ecx)
    mov    %esi,%esp
    pop    %ecx
    jmp    jump_7406d


/*----------------------------------------------------------------*/
func_74105:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %ds
    push   %es
    mov    0x8(%ebp),%ebx
    mov    0x1c(%ebx),%eax
    and    $0xf,%eax
    cmpl   $0x2,0x18(%ebx)
    je     jump_74122
    cmpl   $0x3,0x18(%ebx)
    jne    jump_74125
  jump_74122:
    or     $0x10,%eax
  jump_74125:
    cmpl   $0x1,0x18(%ebx)
    je     jump_74131
    cmpl   $0x3,0x18(%ebx)
    jne    jump_74134
  jump_74131:
    or     $0x20,%eax
  jump_74134:
    cmpl   $0x0,0x64(%ebx)
    je     jump_7413d
    or     $0x40,%eax
  jump_7413d:
    mov    %eax,data_988e4
    mov    0x50(%ebx),%esi
    mov    0x48(%ebx),%ecx
    testl  $0x20,0x1c(%ebx)
    jne    jump_7416b
    mov    0xc(%ebp),%eax
    mov    0x2c(%ebx,%eax,4),%edi
    testl  $0x8,0x1c(%ebx)
    je     jump_74184
    mov    0x10(%ebx),%eax
    shr    %eax
    lea    (%eax,%edi,1),%ebx
    jmp    jump_74184
  jump_7416b:
    orl    $0x8,data_988e4
    mov    0x10(%ebx),%eax
    mov    0x2c(%ebx),%edi
    lea    (%eax,%edi,1),%ebx
    shr    %eax
    mull   0xc(%ebp)
    add    %eax,%edi
    add    %eax,%ebx
  jump_74184:
    mov    data_988e4,%eax
    call   *vtable_721fc(,%eax,4)
    pop    %es
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_74197:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %ds
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%ebx
    mov    0x50(%ebx),%edi
    mov    0x4c(%ebx),%ecx
    mov    $0x0,%eax
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    pop    %es
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_741c3:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %edi
    push   %ds
    push   %es
    push   $data_98904
    push   $data_988e4
    call   func_662d1
    add    $0x8,%esp
    push   $func_741c3
    push   $vtable_721fc
    call   func_662d1
    add    $0x8,%esp
    pop    %es
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_741f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %edi
    incl   data_98a9a
    pop    %edi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_74201:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %edi
    decl   data_98a9a
    pop    %edi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7420e:
/*----------------------------------------------------------------*/
    cmpl   $0x0,%cs:data_98a96
    ja     jump_7432d
    pusha
    push   %ds
    push   %es
    push   %fs
    push   %gs
    mov    %esp,%ebp
    cld
    data16 mov %cs:data_98a9e,%ds
    data16 mov %cs:data_98a9e,%es
    incl   data_98a96
    mov    %ss,data_994ac
    mov    %esp,data_994b0
    mov    %ds,%ax
    mov    %ax,%ss
    mov    $data_994ac,%esp
    mov    data_98a92,%edx
    mov    $0x0,%edi
  jump_7425e:
    cmpl   $0x2,data_98944(%edi)
    jne    jump_74289
    mov    data_98984(%edi),%eax
    add    %edx,%eax
    cmp    data_989c4(%edi),%eax
    jb     jump_74283
    sub    data_989c4(%edi),%eax
    incl   data_98a04(%edi)
  jump_74283:
    mov    %eax,data_98984(%edi)
  jump_74289:
    add    $0x4,%edi
    cmp    $0x40,%edi
    jb     jump_7425e
    mov    $0x20,%al
    out    %al,$0x20
    sti
    cmpl   $0x0,data_98a9a
    jg     jump_742ce
    mov    $0x0,%edi
  jump_742a4:
    cmpl   $0x0,data_98a04(%edi)
    je     jump_742c6
    decl   data_98a04(%edi)
    mov    %esp,%esi
    mov    data_98a44(%edi),%eax
    push   %eax
    call   *data_98904(%edi)
    mov    %esi,%esp
    jmp    jump_742a4
  jump_742c6:
    add    $0x4,%edi
    cmp    $0x3c,%edi
    jb     jump_742a4
  jump_742ce:
    cmpl   $0x0,data_98a40
    je     jump_74311
    decl   data_98a40
    decl   data_98a96
    mov    data_994ac,%ss
    mov    data_994b0,%esp
    mov    data_98a84,%ecx
    movzwl data_98a88,%eax
    mov    %ebp,%esp
    xchg   %ecx,0x28(%ebp)
    xchg   %eax,0x2c(%ebp)
    pop    %gs
    pop    %fs
    pop    %es
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebp
    pop    %ebx
    pop    %ebx
    pop    %edx
    lret
  jump_74311:
    decl   data_98a96
    mov    data_994ac,%ss
    mov    data_994b0,%esp
    mov    %ebp,%esp
    pop    %gs
    pop    %fs
    pop    %es
    pop    %ds
    popa
    iret
  jump_7432d:
    push   %eax
    mov    $0x20,%al
    out    %al,$0x20
    pop    %eax
    iret


/*----------------------------------------------------------------*/
func_74334:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    pushf
    cli
    mov    $0x36,%al
    out    %al,$0x43
    mov    0x8(%ebp),%eax
    mov    %eax,data_98a8e
    jmp    jump_7434a
  jump_7434a:
    out    %al,$0x40
    mov    %ah,%al
    jmp    jump_74350
  jump_74350:
    out    %al,$0x40
    push   %ebp
    mov    %esp,%ebp
    testb  $0x2,0x5(%ebp)
    cli
    je     jump_7435d
    sti
  jump_7435d:
    pop    %ebp
    popf
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_74364:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    mov    $0x0,%eax
    cmpl   $0xd68d,0x8(%ebp)
    jae    jump_74389
    mov    0x8(%ebp),%eax
    mov    $0x20bc,%ebx
    mov    $0x2710,%ecx
    mul    %ecx
    div    %ebx
  jump_74389:
    push   %eax
    call   func_74334
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_74397:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    call   func_66fc8
    push   %ds
    pop    %es
    cld
    mov    $0xffffffff,%ecx
    mov    $0x0,%edi
  jump_743ad:
    cmpl   $0x0,data_98944(%edi)
    je     jump_743c2
    mov    data_989c4(%edi),%eax
    cmp    %ecx,%eax
    jae    jump_743c2
    mov    %eax,%ecx
  jump_743c2:
    add    $0x4,%edi
    cmp    $0x40,%edi
    jb     jump_743ad
    cmp    data_98a92,%ecx
    je     jump_743f2
    mov    %ecx,data_98a92
    push   %ecx
    call   func_74364
    add    $0x4,%esp
    mov    $0x0,%eax
    mov    $data_98984,%edi
    mov    $0x10,%ecx
    rep stos %eax,%es:(%edi)
  jump_743f2:
    call   func_66fcd
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    ret
  jump_743fc:
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    pushf
    cli
    push   %ds
    pop    %es
    cld
    data16 mov %ds,data_98a9e
    data16 mov data_98a9e,%es
    call   func_74bc6
    movl   $0x0,data_98a96
    movl   $0x0,data_98a9a
    movl   $0xffffffff,data_98a92
    movl   $0xffffffff,data_98aa0
    mov    $0x0,%eax
    mov    $data_98944,%edi
    mov    $0x10,%ecx
    rep stos %eax,%es:(%edi)
    mov    $data_98984,%edi
    mov    $0x10,%ecx
    rep stos %eax,%es:(%edi)
    mov    $data_989c4,%edi
    mov    $0x10,%ecx
    rep stos %eax,%es:(%edi)
    mov    $data_98a04,%edi
    mov    $0x10,%ecx
    rep stos %eax,%es:(%edi)
    mov    $0x8,%eax
    push   %eax
    mov    %eax,%ebx
    mov    $0x200,%eax
    int    $0x31
    shl    $0x10,%ecx
    mov    %dx,%cx
    pop    %eax
    push   %ecx
    mov    $0x35,%ah
    push   %es
    int    $0x21
    mov    %es,%dx
    pop    %es
    pop    %ecx
    mov    %ebx,data_98a84
    mov    %dx,data_98a88
    mov    %ecx,data_98a8a
    mov    $0x8,%eax
    mov    $func_7420e,%edx
    mov    %cs,%bx
    mov    $0x25,%ah
    push   %ds
    mov    %bx,%ds
    int    $0x21
    pop    %ds
    movl   $0x2,data_98980
    push   $0xd68d
    push   $0x3c
    call   func_67906
    add    $0x8,%esp
    push   %ebp
    mov    %esp,%ebp
    testb  $0x2,0x5(%ebp)
    cli
    je     jump_744e3
    sti
  jump_744e3:
    pop    %ebp
    popf
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_744ea:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %edi
    pushf
    cli
    push   $0x0
    call   func_74334
    add    $0x4,%esp
    mov    $0x8,%eax
    mov    data_98a84,%edx
    movzwl data_98a88,%ebx
    mov    $0x25,%ah
    push   %ds
    mov    %bx,%ds
    int    $0x21
    pop    %ds
    push   %ebp
    mov    %esp,%ebp
    testb  $0x2,0x5(%ebp)
    cli
    je     jump_7451f
    sti
  jump_7451f:
    pop    %ebp
    popf
    pop    %edi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_74525:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    mov    0x8(%ebp),%eax
    push   %eax
    mov    %eax,%ebx
    mov    $0x200,%eax
    int    $0x31
    shl    $0x10,%ecx
    mov    %dx,%cx
    pop    %eax
    push   %ecx
    mov    $0x35,%ah
    push   %es
    int    $0x21
    mov    %es,%dx
    pop    %es
    pop    %ecx
    mov    %ecx,%eax
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_74551:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    mov    0x8(%ebp),%eax
    mov    0xc(%ebp),%ebx
    mov    %ebx,%ecx
    shr    $0x10,%ecx
    mov    %ebx,%edx
    and    $0xffff,%edx
    mov    %eax,%ebx
    mov    $0x201,%eax
    int    $0x31
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_74578:
/*----------------------------------------------------------------*/
    push   %ds
    push   %es
    push   %eax
    push   %ebx
    push   %ecx
    mov    $0x9999,%ax
    mov    %ax,%ds
    mov    %ax,%es
    mov    %ss,%bx
    mov    %esp,%ecx
    mov    $0x9999,%ax
    mov    %ax,%ss
    mov    $0x99999999,%esp
    pushfw
    pop    %ax
    mov    %ax,-0x2(%esp)
    mov    %cs,-0x4(%esp)
    movw   $0x9999,-0x6(%esp)
    sub    $0x6,%esp
    movw   $0x9999,-0x2(%esp)
    movw   $0x9999,-0x4(%esp)
    sub    $0x4,%esp
    lretw


/*----------------------------------------------------------------*/
func_747e3:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_74822
    cmp    data_98aa0,%ebx
    jne    jump_74822
    cmp    $0x8,%ebx
    jb     jump_74802
    add    $0x60,%ebx
  jump_74802:
    add    $0x8,%ebx
    mov    $0x205,%eax
    mov    data_98aa4,%ecx
    mov    data_98aa8,%edx
    int    $0x31
    movl   $0xffffffff,data_98aa0
  jump_74822:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_74828:
    pushf
    pop    %eax
    cli
    ret


/*----------------------------------------------------------------*/
func_7482c:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   0x8(%ebp)
    push   %ebp
    mov    %esp,%ebp
    testb  $0x2,0x5(%ebp)
    cli
    je     jump_7483d
    sti
  jump_7483d:
    pop    %ebp
    popf
    leave
    ret


/*----------------------------------------------------------------*/
func_74893:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffc4,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %ds
    push   %es
    call   func_66fc8
    cld
    mov    $0x32,%ecx
    push   %ds
    pop    %es
    lea    -0x3a(%ebp),%edi
    mov    $0x0,%eax
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    movw   $0x0,-0x16(%ebp)
    movw   $0x0,-0x18(%ebp)
    pushfw
    pop    %ax
    mov    %ax,-0x1a(%ebp)
    mov    0xc(%ebp),%eax
    mov    %ax,-0x1e(%ebp)
    mov    0x10(%ebp),%ebx
    cmp    $0x0,%ebx
    je     jump_74902
    mov    0x4(%ebx),%cx
    mov    0x6(%ebx),%dx
    mov    0x8(%ebx),%si
    mov    0xa(%ebx),%di
    mov    %cx,-0x22(%ebp)
    mov    %dx,-0x26(%ebp)
    mov    %si,-0x36(%ebp)
    mov    %di,-0x3a(%ebp)
  jump_74902:
    mov    0x8(%ebp),%ebx
    mov    0x8(%ebx),%ebx
    movswl 0x32(%ebx),%ebx
    mov    %bx,-0x2a(%ebp)
    mov    $0x300,%eax
    mov    $0x66,%ebx
    mov    $0x0,%ecx
    lea    -0x3a(%ebp),%edi
    int    $0x31
    mov    0x14(%ebp),%ebx
    cmp    $0x0,%ebx
    je     jump_7495b
    mov    -0x1e(%ebp),%ax
    mov    -0x22(%ebp),%cx
    mov    -0x26(%ebp),%dx
    mov    -0x36(%ebp),%si
    mov    -0x3a(%ebp),%di
    mov    %ax,(%ebx)
    mov    %cx,0x4(%ebx)
    mov    %dx,0x6(%ebx)
    mov    %si,0x8(%ebx)
    mov    %di,0xa(%ebx)
    mov    -0x2a(%ebp),%ax
    mov    %ax,0x2(%ebx)
  jump_7495b:
    movswl -0x1e(%ebp),%eax
    push   %eax
    call   func_66fcd
    pop    %eax
    pop    %es
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_7496d:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %esi
    mov    $0x63,%bx
    push   %ds
    and    $0xffff,%ebx
    mov    $0x40,%eax
    mov    %ax,%ds
    mov    (%ebx),%eax
    pop    %ds
    mov    %eax,%edx
    add    $0x6,%edx
    mov    0x8(%ebp),%ecx
    jecxz  jump_749a5
  jump_74993:
    in     (%dx),%al
    test   $0x8,%eax
    je     jump_74993
  jump_7499b:
    in     (%dx),%al
    test   $0x8,%eax
    jne    jump_7499b
    loop   jump_74993
  jump_749a5:
    pop    %esi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_749aa:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %esi
    mov    data_98a96,%eax
    pop    %esi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_749b6:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_66fc8
    mov    $0x0,%eax
  jump_749c6:
    cmpl   $0x0,data_98944(%eax)
    je     jump_749de
    add    $0x4,%eax
    cmp    $0x3c,%eax
    jb     jump_749c6
    mov    $0xffffffff,%eax
    jmp    jump_749f1
  jump_749de:
    movl   $0x1,data_98944(%eax)
    mov    0x8(%ebp),%esi
    mov    %esi,data_98904(%eax)
  jump_749f1:
    push   %eax
    call   func_66fcd
    pop    %eax
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_749fd:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_66fc8
    mov    0x8(%ebp),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_74a19
    mov    0xc(%ebp),%eax
    xchg   %eax,data_98a44(%ebx)
  jump_74a19:
    push   %eax
    call   func_66fcd
    pop    %eax
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_74a25:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_66fc8
    mov    0x8(%ebp),%eax
    cmp    $0xffffffff,%eax
    je     jump_74a42
    movl   $0x0,data_98944(%eax)
  jump_74a42:
    call   func_66fcd
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_74a4c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %edi
    call   func_66fc8
    mov    $0x38,%esi
  jump_74a59:
    push   %esi
    call   func_67ce4
    add    $0x4,%esp
    sub    $0x4,%esi
    jge    jump_74a59
    call   func_66fcd
    pop    %edi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_74a70:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_66fc8
    mov    0x8(%ebp),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_74a96
    cmpl   $0x1,data_98944(%ebx)
    jne    jump_74a96
    movl   $0x2,data_98944(%ebx)
  jump_74a96:
    call   func_66fcd
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_74ac4:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_66fc8
    mov    0x8(%ebp),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_74aea
    cmpl   $0x2,data_98944(%ebx)
    jne    jump_74aea
    movl   $0x1,data_98944(%ebx)
  jump_74aea:
    call   func_66fcd
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_74b18:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_66fc8
    mov    0x8(%ebp),%ebx
    mov    0xc(%ebp),%eax
    mov    %eax,data_989c4(%ebx)
    movl   $0x0,data_98984(%ebx)
    call   func_74397
    call   func_66fcd
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_74b48:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_66fc8
    mov    $0x0,%edx
    mov    $0xf4240,%eax
    mov    0xc(%ebp),%ebx
    div    %ebx
    push   %eax
    push   0x8(%ebp)
    call   func_67906
    add    $0x8,%esp
    call   func_66fcd
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_74bc6:
/*----------------------------------------------------------------*/
    push   $data_994b4
    push   $data_98904
    call   func_662d1
    add    $0x8,%esp
    push   $func_74bc6
    push   $func_741f4
    call   func_662d1
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_74bf0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    call   func_79066
    mov    $0x2,%ebx
    mov    %eax,%esi
    xor    %edx,%edx
    mov    %ecx,%eax
    call   func_790d8
    mov    %ecx,%eax
    call   func_79066
    mov    %esi,%edx
    xor    %ebx,%ebx
    mov    %eax,%edi
    mov    %ecx,%eax
    call   func_790d8
    mov    %edi,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_74c28:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    cmpl   $0x0,data_994c4
    jne    jump_74c5f
    push   $data_1330fc
    push   $data_994c4
    push   $data_1330f4
    push   $data_1330f8
    push   $0x200
    call   func_76a40
    add    $0x14,%esp
  jump_74c5f:
    mov    data_994c4,%ax
    mov    %ax,(%esp)
    mov    data_1330fc,%ax
    push   %ebp
    mov    %ax,0xa(%esi)
    push   %edi
    mov    data_1330f4,%ebx
    push   %ebx
    mov    data_1330f8,%ecx
    push   %ecx
    call   func_75fbe
    add    $0x10,%esp
    mov    %esp,%eax
    push   %eax
    push   %esi
    push   %esi
    push   $0x10
    call   func_76bb0
    add    $0x10,%esp
    push   %ebp
    mov    data_1330f4,%esi
    push   %esi
    mov    data_1330f8,%ebp
    push   %ebp
    push   %edi
    call   func_75f98
    add    $0x10,%esp
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_74cbc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x268,%esp
    mov    $0x4f00,%edx
    mov    $0x4,%ebx
    mov    %esp,%eax
    mov    %dx,0x250(%esp)
    mov    $data_950cc,%edx
    call   func_77780
    mov    $0x200,%ebx
    mov    %esp,%edx
    lea    0x250(%esp),%eax
    call   func_74c28
    xor    %eax,%eax
    mov    0x250(%esp),%ax
    cmp    $0x4f,%eax
    je     jump_74d0d
    xor    %eax,%eax
    jmp    jump_74e40
  jump_74d0d:
    mov    $0x4,%ebx
    mov    $data_950d4,%edx
    mov    %esp,%eax
    call   func_789ba
    test   %eax,%eax
    je     jump_74d2f
    xor    %eax,%eax
    add    $0x268,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_74d2f:
    mov    0x6(%esp),%eax
    and    $0xffff,%eax
    push   %eax
    mov    0xa(%esp),%eax
    shr    $0x10,%eax
    push   %eax
    lea    0x268(%esp),%eax
    push   %eax
    lea    0x270(%esp),%eax
    push   %eax
    call   func_76a04
    add    $0x10,%esp
    push   $0x50
    mov    0x264(%esp),%edx
    push   %edx
    mov    0x26c(%esp),%ebx
    push   %ebx
    lea    0x20c(%esp),%eax
    push   %eax
    call   func_75f98
    mov    $0x12,%ebx
    add    $0x10,%esp
    mov    $data_950dc,%edx
    lea    0x200(%esp),%eax
    call   func_789ba
    test   %eax,%eax
    je     jump_74da2
    xor    %eax,%eax
    add    $0x268,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_74da2:
    lea    0x250(%esp),%eax
    push   %eax
    push   %eax
    mov    $0x4f0f,%ebx
    mov    $0x1234,%ecx
    push   $0x10
    mov    %bx,0x25c(%esp)
    mov    %cx,0x25e(%esp)
    call   func_76ad8
    add    $0xc,%esp
    xor    %eax,%eax
    mov    0x250(%esp),%ax
    cmp    $0x4f,%eax
    je     jump_74deb
    xor    %eax,%eax
    add    $0x268,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_74deb:
    xor    %eax,%eax
    mov    0x252(%esp),%ax
    push   %eax
    xor    %eax,%eax
    mov    0x25a(%esp),%ax
    push   %eax
    lea    0x268(%esp),%eax
    push   %eax
    lea    0x270(%esp),%eax
    push   %eax
    call   func_76a04
    add    $0x10,%esp
    push   $0xf2
    mov    0x264(%esp),%ecx
    push   %ecx
    mov    0x26c(%esp),%esi
    push   %esi
    push   $data_133100
    call   func_75f98
    mov    $data_133100,%eax
    add    $0x10,%esp
  jump_74e40:
    add    $0x268,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_74e4c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x218,%esp
    mov    $0x4f00,%edx
    mov    $0x4,%ebx
    mov    %esp,%eax
    mov    %dx,0x200(%esp)
    mov    $data_950cc,%edx
    call   func_77780
    mov    $0x200,%ebx
    mov    %esp,%edx
    lea    0x200(%esp),%eax
    call   func_74c28
    xor    %eax,%eax
    mov    0x200(%esp),%ax
    cmp    $0x4f,%eax
    je     jump_74e9c
    xor    %eax,%eax
    jmp    jump_74f22
  jump_74e9c:
    mov    $0x4,%ebx
    mov    $data_950d4,%edx
    mov    %esp,%eax
    call   func_789ba
    test   %eax,%eax
    je     jump_74ebd
    xor    %eax,%eax
    add    $0x218,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_74ebd:
    mov    0x2(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x200,%eax
    jle    jump_74f1b
    mov    0x6(%esp),%eax
    and    $0xffff,%eax
    push   %eax
    mov    0xa(%esp),%eax
    shr    $0x10,%eax
    push   %eax
    lea    0x218(%esp),%eax
    push   %eax
    lea    0x220(%esp),%eax
    push   %eax
    call   func_76a04
    add    $0x10,%esp
    mov    0x210(%esp),%edx
    push   %edx
    mov    0x218(%esp),%ebx
    push   %ebx
    call   func_75f45
    add    $0x8,%esp
    cmp    $0x54524f56,%eax
    jne    jump_74f1b
    movw   $0x102,0x4(%esp)
  jump_74f1b:
    mov    0x2(%esp),%eax
    sar    $0x10,%eax
  jump_74f22:
    add    $0x218,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_74f2c:
/*----------------------------------------------------------------*/
    push   $data_950f0
    call   func_78097
    add    $0x4,%esp
    push   $data_9513c
    call   func_78097
    add    $0x4,%esp
    push   $data_95188
    call   func_78097
    add    $0x4,%esp
    push   $data_951d4
    call   func_78097
    add    $0x4,%esp
    push   $data_951fc
    call   func_78097
    add    $0x4,%esp
    push   $data_95248
    call   func_78097
    add    $0x4,%esp
    push   $data_95298
    call   func_78097
    add    $0x4,%esp
    push   $data_952e4
    call   func_78097
    add    $0x4,%esp
    push   $data_95330
    call   func_78097
    add    $0x4,%esp
    mov    $0x1,%eax
    jmp    func_7814a


/*----------------------------------------------------------------*/
func_74fac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x10,%esp
    xor    %ah,%ah
    mov    %ah,0x2(%esp)
    mov    %al,0x3(%esp)
    mov    %esp,%eax
    push   %eax
    push   %eax
    mov    $0x4f08,%edx
    push   $0x10
    mov    %dx,0xc(%esp)
    call   func_76ad8
    add    $0xc,%esp
    xor    %eax,%eax
    mov    (%esp),%ax
    cmp    $0x4f,%eax
    sete   %al
    and    $0xff,%eax
    add    $0x10,%esp
  jump_74fe8:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7501c:
/*----------------------------------------------------------------*/
    mov    data_994bc,%edx
    test   %edx,%edx
    je     jump_75031
    push   %edx
    push   $0x10
    call   func_76618
    add    $0x8,%esp
  jump_75031:
    ret


/*----------------------------------------------------------------*/
func_75034:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    lea    0x194(%eax),%edx
    mov    $0xffff,%ecx
  jump_75042:
    xor    %eax,%eax
    mov    (%edx),%ax
    cmp    $0xffff,%eax
    je     jump_74fe8
    cmp    $0x12d,%ax
    jb     jump_75066
    cmp    $0x141,%ax
    jbe    jump_75077
    cmp    $0x153,%ax
    jb     jump_75072
    cmp    $0x158,%ax
    jmp    jump_75070
  jump_75066:
    cmp    $0x10d,%ax
    jb     jump_75072
    cmp    $0x10f,%ax
  jump_75070:
    jbe    jump_75077
  jump_75072:
    add    $0x2,%edx
    jmp    jump_75042
  jump_75077:
    mov    %edx,%eax
    jmp    jump_75082
  jump_7507b:
    add    $0x2,%eax
    mov    %bx,-0x2(%eax)
  jump_75082:
    xor    %ebx,%ebx
    mov    0x2(%eax),%bx
    cmp    $0xffff,%ebx
    jne    jump_7507b
    mov    %cx,(%eax)
    jmp    jump_75042


/*----------------------------------------------------------------*/
func_75098:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x98,%esp
    mov    0xa8(%esp),%esi
    cmpl   $0x0,0xac(%esp)
    jne    jump_750c2
    call   func_74e4c
    cmp    $0x200,%eax
    jge    jump_754f1
  jump_750c2:
    mov    %esp,%edi
    push   %edi
  jump_750c5:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_750dd
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_750c5
  jump_750dd:
    pop    %edi
    mov    $data_9537c,%esi
    mov    %esp,%edi
    mov    $data_95388,%edx
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_750f3:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_7510b
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_750f3
  jump_7510b:
    pop    %edi
    mov    %esp,%eax
    call   func_77f5e
    mov    %eax,%edi
    test   %eax,%eax
    je     jump_754f3
    call   func_74bf0
    mov    %eax,0x90(%esp)
    add    $0x10,%eax
    call   func_78734
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_7514e
    push   $data_9538c
    call   func_78097
    add    $0x4,%esp
    mov    $0x1,%eax
    call   func_7814a
  jump_7514e:
    mov    0x90(%esp),%ebx
    mov    $0x1,%edx
    mov    %edi,%ecx
    mov    %ebp,%eax
    call   func_791ee
    mov    $0x12,%ebx
    mov    %edi,%eax
    mov    $data_950dc,%edx
    call   func_7744e
    mov    %ebp,%eax
    mov    %ebp,%esi
    call   func_789ba
    test   %eax,%eax
    je     jump_7519b
    mov    %esp,%eax
    push   %eax
    push   $data_953c0
    call   func_78097
    add    $0x8,%esp
    mov    $0x1,%eax
    call   func_7814a
  jump_7519b:
    call   func_75510
    push   %eax
    call   func_75508
    push   %eax
    push   $data_953f0
    lea    0xc(%esp),%eax
    push   %eax
    mov    $0x9,%ebx
    call   func_76d09
    add    $0x10,%esp
    mov    %esp,%edx
    lea    0x3f(%esi),%eax
    call   func_789ba
    test   %eax,%eax
    je     jump_751e3
    push   $data_953f8
    call   func_78097
    add    $0x4,%esp
    mov    $0x1,%eax
    call   func_7814a
  jump_751e3:
    xor    %eax,%eax
    mov    0x172(%esi),%ax
    cmp    $0xffff,%eax
    jne    jump_7520a
    push   $data_95424
    call   func_78097
    add    $0x4,%esp
    mov    $0x1,%eax
    call   func_7814a
  jump_7520a:
    xor    %eax,%eax
    mov    0x172(%esi),%ax
    cmp    $0x1c,%eax
    je     jump_754ea
    call   func_74cbc
    test   %eax,%eax
    je     jump_7524d
    mov    0xe1(%eax),%dl
    mov    0x129(%esi),%dh
    cmp    %dh,%dl
    ja     jump_754ea
    jne    jump_7524d
    mov    0xe2(%eax),%al
    cmp    0x12a(%esi),%al
    jae    jump_754ea
  jump_7524d:
    cmpw   $0x0,0x17e(%esi)
    je     jump_75265
    call   func_74e4c
    test   %eax,%eax
    jne    jump_75265
    call   func_74f2c
  jump_75265:
    push   $data_1330ec
    push   $data_1330f0
    push   $data_994b8
    push   $data_994b4
    mov    0xa0(%esp),%ebx
    push   %ebx
    call   func_76a40
    add    $0x14,%esp
    test   %eax,%eax
    jne    jump_752a4
    push   $data_95464
    call   func_78097
    add    $0x4,%esp
    mov    $0x1,%eax
    call   func_7814a
  jump_752a4:
    push   $data_994bc
    push   $0x10
    call   func_765d4
    xor    %edx,%edx
    mov    data_994bc,%eax
    mov    0x176(%esi),%dx
    mov    %eax,0x190(%esi)
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x6,%edx
    sbb    %edx,%eax
    sar    $0x6,%eax
    mov    %ax,0x162(%esi)
    mov    data_1330f0,%ax
    mov    %ax,0x18c(%esi)
    mov    %ax,0x158(%esi)
    mov    %ax,0x160(%esi)
    mov    %ax,0x864(%esi)
    mov    %ax,0x868(%esi)
    mov    %ax,0x86c(%esi)
    mov    %ax,0x870(%esi)
    mov    %ax,0x874(%esi)
    mov    %ax,0x878(%esi)
    mov    %ax,0x87c(%esi)
    mov    %ax,0x880(%esi)
    mov    %ax,0x884(%esi)
    mov    %ax,0x888(%esi)
    mov    %ax,0x88c(%esi)
    mov    %ax,0x890(%esi)
    mov    %ax,0x894(%esi)
    mov    %ax,0x8b4(%esi)
    mov    %ax,0x8b8(%esi)
    mov    %ax,0x8bc(%esi)
    add    $0x8,%esp
    mov    %ax,0x8c0(%esi)
    mov    0x90(%esp),%ecx
    mov    %ax,0x8c4(%esi)
    push   %ecx
    mov    %ax,0x8c8(%esi)
    push   %esi
    mov    data_994b8,%edi
    push   %edi
    mov    data_994b4,%eax
    push   %eax
    call   func_75fbe
    mov    data_994c0,%edx
    add    $0x10,%esp
    cmp    $0x4321,%edx
    je     jump_75456
    call   func_764c0
    push   $0x6c
    mov    %eax,0x98(%esp)
    and    $0xffff,%eax
    push   %eax
    call   func_75f45
    add    $0x8,%esp
    push   $data_95494
    mov    %eax,%edi
    call   func_78097
    add    $0x4,%esp
    call   func_75518
    push   %eax
    call   func_75510
    push   %eax
    call   func_75508
    push   %eax
    push   $data_954d8
    call   func_78097
    add    $0x10,%esp
    call   func_75500
    push   %eax
    push   $data_95504
    call   func_78097
    add    $0x8,%esp
    push   $data_95508
    call   func_78097
    add    $0x4,%esp
    lea    0x48(%esi),%eax
    push   %eax
    push   $data_9550c
    call   func_78097
    add    $0x8,%esp
    lea    0x98(%esi),%eax
    push   %eax
    push   $data_9551c
    call   func_78097
    add    $0x8,%esp
  jump_7543a:
    xor    %eax,%eax
    push   $0x6c
    mov    0x98(%esp),%ax
    push   %eax
    call   func_75f45
    sub    %edi,%eax
    add    $0x8,%esp
    cmp    $0x23,%eax
    jb     jump_7543a
  jump_75456:
    movw   $0x1,0x123(%esi)
    movw   $0x1,0x125(%esi)
    mov    %esi,%eax
    movw   $0x1,0x127(%esi)
    call   func_75034
    mov    data_1330f0,%edx
    xor    %eax,%eax
    shl    $0x10,%edx
    mov    0x18e(%esi),%ax
    or     %edx,%eax
    push   %eax
    push   $0x10
    call   func_76618
    add    $0x8,%esp
    mov    $0x6,%eax
    call   func_74fac
    test   %eax,%eax
    je     jump_754d4
    mov    0x15a(%esi),%ax
    or     $0x1,%al
    and    $0xffff,%eax
    push   %eax
    lea    0x15a(%esi),%eax
    mov    data_994b8,%ebx
    sub    %esi,%eax
    add    %ebx,%eax
    push   %eax
    mov    data_994b4,%ecx
    push   %ecx
    call   func_75f6c
    add    $0xc,%esp
  jump_754d4:
    mov    %ebp,%eax
    call   func_7882f
    mov    $0x1,%eax
    add    $0x98,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_754ea:
    mov    %ebp,%eax
    call   func_7882f
  jump_754f1:
    xor    %eax,%eax
  jump_754f3:
    add    $0x98,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_75500:
/*----------------------------------------------------------------*/
    mov    data_994c8,%eax
    ret


/*----------------------------------------------------------------*/
func_75508:
/*----------------------------------------------------------------*/
    mov    data_994cc,%eax
    ret


/*----------------------------------------------------------------*/
func_75510:
/*----------------------------------------------------------------*/
    mov    data_994d0,%eax
    ret


/*----------------------------------------------------------------*/
func_75518:
/*----------------------------------------------------------------*/
    mov    data_994d4,%eax
    ret


/*----------------------------------------------------------------*/
func_75520:
/*----------------------------------------------------------------*/
    push   %ds
    push   %es
    pusha
    cld
    mov    %cs:data_99850,%ds
    mov    %cs:data_99850,%es
    mov    %ss,%si
    mov    %si,data_995d8
    mov    %esp,data_995da
    mov    %ds,%si
    mov    %esi,%ss
    mov    $data_995d8,%esp
    movzwl %dx,%edx
    movzwl %cx,%ecx
    movzwl %bx,%ebx
    movzwl %ax,%eax
    push   %edx
    push   %ecx
    push   %ebx
    push   %eax
    call   *data_997f8
    add    $0x10,%esp
    mov    data_995d8,%si
    mov    %esi,%ss
    mov    data_995da,%esp
    popa
    pop    %es
    pop    %ds
    lret


/*----------------------------------------------------------------*/
func_75578:
/*----------------------------------------------------------------*/
    push   %ds
    push   %es
    pusha
    cld
    mov    %cs:data_99850,%ds
    mov    %cs:data_99850,%es
    mov    %ss,%si
    mov    %si,data_996e0
    mov    %esp,data_996e2
    mov    %ds,%si
    mov    %esi,%ss
    mov    $data_996e0,%esp
    call   *data_997f0
    mov    data_996e0,%si
    mov    %esi,%ss
    mov    data_996e2,%esp
    popa
    pop    %es
    pop    %ds
    iret


/*----------------------------------------------------------------*/
func_755eb:
/*----------------------------------------------------------------*/
    push   %ds
    push   %es
    pusha
    cld
    mov    %cs:data_99850,%ds
    mov    %cs:data_99850,%es
    cmpw   $0x1,data_997ee
    je     jump_7564c
    movw   $0x1,data_997ee
    mov    %ss,%si
    mov    %si,data_997e8
    mov    %esp,data_997ea
    mov    %ds,%si
    mov    %esi,%ss
    mov    $data_997e8,%esp
    call   *data_997f4
    mov    data_997e8,%si
    mov    %esi,%ss
    mov    data_997ea,%esp
    movw   $0x0,data_997ee
  jump_75648:
    popa
    pop    %es
    pop    %ds
    iret
  jump_7564c:
    pushf
    lcall  *data_99804
    jmp    jump_75648


/*----------------------------------------------------------------*/
func_7568b:
/*----------------------------------------------------------------*/
    sti
    push   %ds
    push   %es
    push   %ebx
    mov    %cs:data_99850,%ds
    mov    %cs:data_99850,%es
    mov    data_133214,%bx
    mov    %ebx,%es
    mov    data_133208,%ebx
    movl   $0x1,%es:(%ebx)
    pop    %ebx
    pop    %es
    pop    %ds
    iret


/*----------------------------------------------------------------*/
func_756e9:
/*----------------------------------------------------------------*/
    sti
    push   %ds
    push   %es
    push   %ebx
    mov    %cs:data_99850,%ds
    mov    %cs:data_99850,%es
    mov    data_133218,%bx
    mov    %ebx,%es
    mov    data_13320c,%ebx
    movl   $0x1,%es:(%ebx)
    pop    %ebx
    pop    %es
    pop    %ds
    iret


/*----------------------------------------------------------------*/
func_75748:
/*----------------------------------------------------------------*/
    sti
    push   %ds
    push   %es
    push   %ebx
    cld
    mov    %cs:data_99850,%ds
    mov    %cs:data_99850,%es
    mov    data_133204,%bx
    mov    %ebx,%es
    mov    data_133220,%ebx
    mov    %ax,%es:(%ebx)
    mov    %di,%es:0x2(%ebx)
    mov    $0x3,%ax
    pop    %ebx
    pop    %es
    pop    %ds
    iret


/*----------------------------------------------------------------*/
func_757c1:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    $0xc,%ax
    mov    0x8(%ebp),%ecx
    mov    $func_75520,%edx
    push   %cs
    pop    %es
    int    $0x33
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    cld
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_75860:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x10,%esp
    mov    data_997f8,%esi
    call   func_759d4
    cmpl   $0x0,0xc(%ebp)
    je     jump_7587c
    xor    %eax,%eax
    jmp    jump_75881
  jump_7587c:
    mov    $0x21,%eax
  jump_75881:
    mov    %ax,-0x10(%ebp)
    lea    -0x10(%ebp),%eax
    push   %eax
    push   %eax
    push   $0x33
    call   func_76ad8
    add    $0xc,%esp
    test   %esi,%esi
    je     jump_758a8
    push   %esi
    mov    data_133210,%ebx
    push   %ebx
    call   func_759a8
    add    $0x8,%esp
  jump_758a8:
    mov    %ebp,%esp
    pop    %ebp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_758f4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ebp
    mov    %esp,%ebp
    cmpl   $0x0,data_9982c
    jne    jump_759a5
    call   func_764ad
    push   $0xfff
    push   $data_997f0
    call   func_75e48
    add    $0x8,%esp
    test   %eax,%eax
    sete   %al
    and    $0xff,%eax
    push   $0xfff
    push   $data_994d8
    mov    %eax,%esi
    call   func_75e48
    add    $0x8,%esp
    test   %eax,%eax
    sete   %al
    and    $0xff,%eax
    push   $0xfff
    push   $func_75860
    or     %eax,%esi
    call   func_75ef0
    add    $0x8,%esp
    test   %eax,%eax
    sete   %al
    and    $0xff,%eax
    push   $0xfff
    push   $func_75520
    or     %eax,%esi
    call   func_75ef0
    add    $0x8,%esp
    test   %eax,%eax
    sete   %al
    and    $0xff,%eax
    or     %eax,%esi
    je     jump_7599b
    push   $data_95530
    call   func_78097
    add    $0x4,%esp
    mov    $0x1,%eax
    call   func_7814a
  jump_7599b:
    movl   $0x1,data_9982c
  jump_759a5:
    pop    %ebp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_759a8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ebp
    mov    %esp,%ebp
    mov    0xc(%ebp),%esi
    call   func_758f4
    mov    0x10(%ebp),%eax
    push   %esi
    mov    %esi,data_133210
    mov    %eax,data_997f8
    call   func_757c1
    mov    $0x1,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_759d4:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1c,%esp
    cmpl   $0x0,data_997f8
    je     jump_75a03
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x21,%edx
    push   $0x33
    mov    %dx,-0x1c(%ebp)
    call   func_765a4
    xor    %ebx,%ebx
    add    $0xc,%esp
    mov    %ebx,data_997f8
  jump_75a03:
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_75e48:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1c,%esp
    mov    0xc(%ebp),%eax
    mov    0x10(%ebp),%ebx
    mov    %eax,%edx
    shr    $0x10,%eax
    mov    %ax,-0x18(%ebp)
    mov    %ebx,%eax
    shr    $0x10,%eax
    mov    %ax,-0xc(%ebp)
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x600,%ecx
    mov    %bx,-0x8(%ebp)
    push   $0x31
    mov    %cx,-0x1c(%ebp)
    mov    %dx,-0x14(%ebp)
    call   func_765a4
    mov    -0x4(%ebp),%esi
    add    $0xc,%esp
    test   %si,%si
    sete   %al
    and    $0xff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_75ef0:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    mov    0xc(%ebp),%edx
    push   %edx
    mov    0x8(%ebp),%ebx
    push   %ebx
    call   func_75e48
    add    $0x8,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_75f45:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ds
    mov    0x8(%ebp),%ax
    mov    %eax,%ds
    mov    0xc(%ebp),%eax
    mov    (%eax),%eax
    pop    %ds
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_75f6c:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ds
    mov    0x8(%ebp),%ax
    mov    %eax,%ds
    mov    0xc(%ebp),%edx
    mov    0x10(%ebp),%ax
    mov    %ax,(%edx)
    pop    %ds
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_75f98:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %ds
    mov    0x8(%ebp),%edi
    mov    0xc(%ebp),%ax
    mov    %eax,%ds
    mov    0x10(%ebp),%esi
    mov    0x14(%ebp),%ecx
    shr    %ecx
    rep movsw %ds:(%esi),%es:(%edi)
    adc    %ecx,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebx
    cld
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_75fbe:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x10(%ebp),%esi
    mov    0x8(%ebp),%ax
    mov    %eax,%es
    mov    0xc(%ebp),%edi
    mov    0x14(%ebp),%ecx
    shr    %ecx
    rep movsw %ds:(%esi),%es:(%edi)
    adc    %ecx,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    cld
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_75fe4:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    mov    0x8(%ebp),%eax
    mov    %es,(%eax)
    mov    %cs,0x2(%eax)
    mov    %ss,0x4(%eax)
    mov    %ds,0x6(%eax)
    mov    %fs,0x8(%eax)
    mov    %gs,0xa(%eax)
    pop    %edi
    pop    %esi
    pop    %ebx
    cld
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_76004:
/*----------------------------------------------------------------*/
    int    $0x0
    ret


/*----------------------------------------------------------------*/
func_76404:
/*----------------------------------------------------------------*/
    push   %eax
    push   %ebx
    mov    0xc(%esp),%ebx
    mov    $func_76004,%eax
    shl    $0x2,%ebx
    add    %ebx,%eax
    xchg   %eax,0x4(%esp)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7641a:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    push   %fs
    push   %gs
    mov    0x14(%ebp),%eax
    mov    (%eax),%es
    mov    0x6(%eax),%bx
    movzwl %bx,%ebx
    mov    %ebx,-0x8(%ebp)
    mov    0x8(%eax),%fs
    mov    0xa(%eax),%gs
    mov    0xc(%ebp),%esi
    mov    (%esi),%eax
    mov    0x4(%esi),%ebx
    mov    0x8(%esi),%ecx
    mov    0xc(%esi),%edx
    mov    0x14(%esi),%edi
    mov    0x10(%esi),%esi
    push   %ds
    push   %ebp
    clc
    push   0x8(%ebp)
    mov    -0x8(%ebp),%ds
    call   func_76404
    pop    %ebp
    pop    %ebp
    pop    %ds
    pushf
    pop    -0x4(%ebp)
    push   %esi
    pop    -0xc(%ebp)
    push   %ds
    pop    -0x8(%ebp)
    mov    0x10(%ebp),%esi
    mov    %eax,(%esi)
    mov    %ebx,0x4(%esi)
    mov    %ecx,0x8(%esi)
    mov    %edx,0xc(%esi)
    push   -0xc(%ebp)
    pop    0x10(%esi)
    mov    %edi,0x14(%esi)
    mov    -0x4(%ebp),%ebx
    and    $0x1,%ebx
    mov    %ebx,0x18(%esi)
    mov    0x14(%ebp),%esi
    mov    %es,(%esi)
    mov    -0x8(%ebp),%ebx
    mov    %bx,0x6(%esi)
    mov    %fs,0x8(%esi)
    mov    %gs,0xa(%esi)
    pop    %gs
    pop    %fs
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    cld
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_764ad:
/*----------------------------------------------------------------*/
    mov    %ds,data_99850
    ret


/*----------------------------------------------------------------*/
func_764c0:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    cmpl   $0x0,data_99858
    jne    jump_764e3
    push   $0xffff
    push   $0x400
    call   func_76cb4
    add    $0x8,%esp
    mov    %eax,data_99858
  jump_764e3:
    mov    data_99858,%eax
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_765a4:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    lea    -0xc(%ebp),%eax
    push   %eax
    call   func_75fe4
    add    $0x4,%esp
    lea    -0xc(%ebp),%eax
    push   %eax
    mov    0x10(%ebp),%edx
    push   %edx
    mov    0xc(%ebp),%ebx
    push   %ebx
    mov    0x8(%ebp),%ecx
    push   %ecx
    call   func_7641a
    add    $0x10,%esp
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_765d4:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    sub    $0x18,%esp
    call   func_764ad
    movb   $0x35,-0x17(%ebp)
    mov    0x8(%ebp),%al
    mov    %al,-0x18(%ebp)
    lea    -0x8(%ebp),%eax
    push   %eax
    lea    -0x18(%ebp),%eax
    push   %eax
    push   %eax
    push   $0x21
    call   func_76bb0
    xor    %eax,%eax
    mov    -0x8(%ebp),%ax
    mov    %eax,%edx
    xor    %eax,%eax
    shl    $0x10,%edx
    mov    -0x16(%ebp),%ax
    or     %eax,%edx
    mov    0xc(%ebp),%eax
    add    $0x10,%esp
    mov    %edx,(%eax)
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_76618:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x18,%esp
    mov    0x10(%ebp),%esi
    call   func_764ad
    movb   $0x25,-0x17(%ebp)
    mov    0xc(%ebp),%al
    mov    %al,-0x18(%ebp)
    mov    %esi,%eax
    sar    $0x10,%eax
    mov    %ax,-0x2(%ebp)
    lea    -0x8(%ebp),%eax
    push   %eax
    lea    -0x18(%ebp),%eax
    push   %eax
    push   %eax
    push   $0x21
    mov    %si,-0x12(%ebp)
    call   func_76bb0
    add    $0x10,%esp
    mov    %ebp,%esp
    pop    %ebp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_76658:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1c,%esp
    mov    $0x800,%ebx
    mov    %ax,-0x14(%ebp)
    mov    %bx,-0x1c(%ebp)
    mov    %eax,%ebx
    mov    %edx,%eax
    sar    $0x10,%eax
    mov    %ax,-0xc(%ebp)
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %eax
    sar    $0x10,%ebx
    push   $0x31
    mov    %dx,-0x8(%ebp)
    mov    %bx,-0x18(%ebp)
    call   func_765a4
    mov    -0x4(%ebp),%ecx
    add    $0xc,%esp
    test   %cx,%cx
    je     jump_7669e
    xor    %eax,%eax
    jmp    jump_766b1
  jump_7669e:
    xor    %eax,%eax
    mov    -0x18(%ebp),%ax
    mov    %eax,%edx
    xor    %eax,%eax
    shl    $0x10,%edx
    mov    -0x14(%ebp),%ax
    add    %edx,%eax
  jump_766b1:
    mov    %ebp,%esp
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_766b8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1c,%esp
    mov    %ax,-0x18(%ebp)
    mov    %edx,%eax
    sar    $0x10,%eax
    mov    %ax,-0x14(%ebp)
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x7,%ebx
    push   $0x31
    mov    %dx,-0x10(%ebp)
    mov    %bx,-0x1c(%ebp)
    call   func_765a4
    mov    -0x4(%ebp),%ecx
    add    $0xc,%esp
    test   %cx,%cx
    sete   %al
    and    $0xff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76740:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1c,%esp
    mov    %ax,-0x18(%ebp)
    mov    %edx,%eax
    sar    $0x10,%eax
    mov    %ax,-0x14(%ebp)
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x8,%ebx
    push   $0x31
    mov    %dx,-0x10(%ebp)
    mov    %bx,-0x1c(%ebp)
    call   func_765a4
    mov    -0x4(%ebp),%ecx
    add    $0xc,%esp
    test   %cx,%cx
    sete   %al
    and    $0xff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_767d4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x20,%esp
    mov    %eax,%esi
    mov    %edx,-0x4(%ebp)
    lea    -0x20(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x1,%ebx
    xor    %edx,%edx
    push   $0x31
    mov    %dx,-0x20(%ebp)
    mov    %bx,-0x18(%ebp)
    call   func_765a4
    mov    -0x8(%ebp),%ecx
    add    $0xc,%esp
    test   %cx,%cx
    je     jump_7680d
    xor    %eax,%eax
    jmp    jump_7686a
  jump_7680d:
    xor    %edi,%edi
    mov    -0x20(%ebp),%di
    cmp    $0x100000,%esi
    jbe    jump_7684d
    movw   $0x9,-0x20(%ebp)
    lea    -0x20(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x8092,%edx
    push   $0x31
    mov    %di,-0x1c(%ebp)
    mov    %dx,-0x18(%ebp)
    call   func_765a4
    add    $0xc,%esp
    mov    -0x4(%ebp),%edx
    mov    %esi,%eax
    call   func_76658
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_7686a
  jump_7684d:
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_766b8
    test   %eax,%eax
    je     jump_7686a
    mov    -0x4(%ebp),%edx
    mov    %edi,%eax
    call   func_76740
    test   %eax,%eax
    je     jump_7686a
    mov    %edi,%eax
  jump_7686a:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76a04:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    mov    data_99878,%edx
    test   %edx,%edx
    jne    jump_76a24
    push   $0xfffff
    push   %edx
    call   func_76cb4
    add    $0x8,%esp
    mov    %eax,data_99878
  jump_76a24:
    mov    0x8(%ebp),%edx
    mov    data_99878,%eax
    mov    %eax,(%edx)
    mov    0x10(%ebp),%eax
    mov    0x14(%ebp),%edx
    shl    $0x4,%eax
    add    %eax,%edx
    mov    0xc(%ebp),%eax
    mov    %edx,(%eax)
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_76a40:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1c,%esp
    mov    0x8(%ebp),%eax
    add    $0xf,%eax
    shr    $0x4,%eax
    mov    %ax,-0x18(%ebp)
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x100,%edx
    push   $0x31
    mov    %dx,-0x1c(%ebp)
    call   func_765a4
    mov    -0x4(%ebp),%ebx
    add    $0xc,%esp
    test   %bx,%bx
    je     jump_76a79
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    ret
  jump_76a79:
    xor    %eax,%eax
    mov    0xc(%ebp),%edx
    mov    -0x10(%ebp),%ax
    mov    %eax,(%edx)
    mov    0x10(%ebp),%eax
    movl   $0x0,(%eax)
    xor    %eax,%eax
    mov    0x14(%ebp),%edx
    mov    -0x1c(%ebp),%ax
    mov    %eax,(%edx)
    mov    0x18(%ebp),%eax
    movl   $0x0,(%eax)
    mov    $0x1,%eax
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_76ad8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x5c,%esp
    mov    0x10(%ebp),%ecx
    mov    0x14(%ebp),%esi
    mov    $0x32,%ebx
    lea    -0x5c(%ebp),%eax
    xor    %edx,%edx
    call   func_76ec0
    xor    %eax,%eax
    mov    (%ecx),%ax
    mov    %eax,-0x40(%ebp)
    xor    %eax,%eax
    mov    0x2(%ecx),%ax
    mov    %eax,-0x4c(%ebp)
    xor    %eax,%eax
    mov    0x4(%ecx),%ax
    mov    %eax,-0x44(%ebp)
    xor    %eax,%eax
    mov    0x6(%ecx),%ax
    mov    %eax,-0x48(%ebp)
    xor    %eax,%eax
    mov    0x8(%ecx),%ax
    mov    %eax,-0x58(%ebp)
    xor    %eax,%eax
    mov    0xa(%ecx),%ax
    mov    %eax,-0x5c(%ebp)
    lea    -0xc(%ebp),%eax
    push   %eax
    call   func_75fe4
    mov    0xc(%ebp),%al
    mov    %al,-0x24(%ebp)
    xor    %ah,%ah
    mov    %ah,-0x23(%ebp)
    mov    -0x6(%ebp),%eax
    mov    %ax,-0xc(%ebp)
    lea    -0x5c(%ebp),%eax
    add    $0x4,%esp
    mov    %eax,-0x14(%ebp)
    lea    -0xc(%ebp),%eax
    push   %eax
    lea    -0x28(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x300,%edx
    xor    %ebx,%ebx
    push   $0x31
    mov    %dx,-0x28(%ebp)
    mov    %bx,-0x20(%ebp)
    call   func_7641a
    mov    -0x40(%ebp),%eax
    mov    %ax,(%esi)
    mov    -0x4c(%ebp),%eax
    mov    %ax,0x2(%esi)
    mov    -0x44(%ebp),%eax
    mov    %ax,0x4(%esi)
    mov    -0x48(%ebp),%eax
    mov    %ax,0x6(%esi)
    mov    -0x58(%ebp),%eax
    mov    %ax,0x8(%esi)
    mov    -0x5c(%ebp),%eax
    mov    %ax,0xa(%esi)
    mov    -0x3c(%ebp),%eax
    xor    %ah,%ah
    and    $0x1,%al
    mov    %ax,0xc(%esi)
    xor    %eax,%eax
    add    $0x10,%esp
    mov    (%esi),%ax
    mov    %ebp,%esp
    pop    %ebp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_76bb0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x5c,%esp
    mov    0x14(%ebp),%ecx
    mov    0x18(%ebp),%esi
    mov    0x1c(%ebp),%edi
    mov    $0x32,%ebx
    lea    -0x5c(%ebp),%eax
    xor    %edx,%edx
    call   func_76ec0
    xor    %eax,%eax
    mov    (%ecx),%ax
    mov    %eax,-0x40(%ebp)
    xor    %eax,%eax
    mov    0x2(%ecx),%ax
    mov    %eax,-0x4c(%ebp)
    xor    %eax,%eax
    mov    0x4(%ecx),%ax
    mov    %eax,-0x44(%ebp)
    xor    %eax,%eax
    mov    0x6(%ecx),%ax
    mov    %eax,-0x48(%ebp)
    xor    %eax,%eax
    mov    0x8(%ecx),%ax
    mov    %eax,-0x58(%ebp)
    xor    %eax,%eax
    mov    0xa(%ecx),%ax
    mov    %eax,-0x5c(%ebp)
    mov    (%edi),%ax
    mov    %ax,-0x3a(%ebp)
    mov    0x6(%edi),%ax
    mov    %ax,-0x38(%ebp)
    lea    -0xc(%ebp),%eax
    push   %eax
    call   func_75fe4
    mov    0x10(%ebp),%al
    mov    %al,-0x24(%ebp)
    xor    %ah,%ah
    mov    %ah,-0x23(%ebp)
    mov    -0x6(%ebp),%eax
    mov    %ax,-0xc(%ebp)
    lea    -0x5c(%ebp),%eax
    add    $0x4,%esp
    mov    %eax,-0x14(%ebp)
    lea    -0xc(%ebp),%eax
    push   %eax
    lea    -0x28(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x300,%edx
    xor    %ebx,%ebx
    push   $0x31
    mov    %dx,-0x28(%ebp)
    mov    %bx,-0x20(%ebp)
    call   func_7641a
    mov    -0x40(%ebp),%eax
    mov    %ax,(%esi)
    mov    -0x4c(%ebp),%eax
    mov    %ax,0x2(%esi)
    mov    -0x44(%ebp),%eax
    mov    %ax,0x4(%esi)
    mov    -0x48(%ebp),%eax
    mov    %ax,0x6(%esi)
    mov    -0x58(%ebp),%eax
    mov    %ax,0x8(%esi)
    mov    -0x5c(%ebp),%eax
    mov    %ax,0xa(%esi)
    mov    -0x3a(%ebp),%eax
    mov    %ax,(%edi)
    mov    -0x30(%ebp),%eax
    mov    %ax,0x2(%edi)
    mov    -0x2c(%ebp),%eax
    mov    %ax,0x4(%edi)
    mov    -0x38(%ebp),%eax
    mov    %ax,0x6(%edi)
    mov    -0x3c(%ebp),%eax
    xor    %ah,%ah
    and    $0x1,%al
    mov    %ax,0xc(%esi)
    xor    %eax,%eax
    add    $0x10,%esp
    mov    (%esi),%ax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_76cb4:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    mov    0x8(%ebp),%eax
    mov    0xc(%ebp),%edx
    call   func_767d4
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_76cf6:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %dl,%bl
    mov    (%eax),%edx
    lea    0x1(%edx),%ecx
    mov    %ecx,(%eax)
    mov    %bl,(%edx)
    incl   0x10(%eax)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76d09:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x4,%esp
    lea    0x1c(%esp),%eax
    mov    0x18(%esp),%edx
    mov    %esp,%ebx
    mov    $func_76cf6,%ecx
    mov    %eax,(%esp)
    mov    0x14(%esp),%eax
    call   func_793d5
    mov    0x14(%esp),%edx
    movb   $0x0,(%edx,%eax,1)
    add    $0x4,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76d3c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    test   %eax,%eax
    jne    jump_76d47
    xor    %ecx,%ecx
    jmp    jump_76d55
  jump_76d47:
    lea    -0x4(%eax),%ecx
    mov    (%ecx),%esi
    mov    %edx,%ebx
    mov    %esi,%edx
    call   func_7760c
  jump_76d55:
    mov    %ecx,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76d5c:
/*----------------------------------------------------------------*/
    jmp    func_76d64


/*----------------------------------------------------------------*/
func_76d64:
/*----------------------------------------------------------------*/
    test   %eax,%eax
    jne    func_7882f
    ret


/*----------------------------------------------------------------*/
func_76d70:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    cmp    %edx,%eax
    je     jump_76de4
  jump_76d78:
    mov    (%ebx),%eax
    mov    (%edx),%ecx
    cmp    %eax,%ecx
    jne    jump_76de9
    not    %ecx
    add    $0xfefefeff,%eax
    and    %ecx,%eax
    and    $0x80808080,%eax
    jne    jump_76de4
    mov    0x4(%ebx),%eax
    mov    0x4(%edx),%ecx
    cmp    %eax,%ecx
    jne    jump_76de9
    not    %ecx
    add    $0xfefefeff,%eax
    and    %ecx,%eax
    and    $0x80808080,%eax
    jne    jump_76de4
    mov    0x8(%ebx),%eax
    mov    0x8(%edx),%ecx
    cmp    %eax,%ecx
    jne    jump_76de9
    not    %ecx
    add    $0xfefefeff,%eax
    and    %ecx,%eax
    and    $0x80808080,%eax
    jne    jump_76de4
    mov    0xc(%ebx),%eax
    mov    0xc(%edx),%ecx
    cmp    %eax,%ecx
    jne    jump_76de9
    add    $0x10,%ebx
    add    $0x10,%edx
    not    %ecx
    add    $0xfefefeff,%eax
    and    %ecx,%eax
    and    $0x80808080,%eax
    je     jump_76d78
  jump_76de4:
    sub    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_76de9:
    cmp    %cl,%al
    jne    jump_76e0a
    cmp    $0x0,%al
    je     jump_76de4
    cmp    %ch,%ah
    jne    jump_76e0a
    cmp    $0x0,%ah
    je     jump_76de4
    shr    $0x10,%eax
    shr    $0x10,%ecx
    cmp    %cl,%al
    jne    jump_76e0a
    cmp    $0x0,%al
    je     jump_76de4
    cmp    %ch,%ah
  jump_76e0a:
    sbb    %eax,%eax
    or     $0x1,%al
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76e14:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $0x1,%edx
    mov    $data_955a4,%eax
    call   func_793b8
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_76e26:
/*----------------------------------------------------------------*/
    jmp    jump_79dea


/*----------------------------------------------------------------*/
func_76e2b:
/*----------------------------------------------------------------*/
    jmp    jump_79f6f


/*----------------------------------------------------------------*/
func_76e30:
/*----------------------------------------------------------------*/
    testb  $0x80,0xb(%esp)
    je     jump_76e57
    mov    0x8(%esp),%eax
    and    $0x7fffffff,%eax
    or     0x4(%esp),%eax
    je     jump_76e57
    push   $0x3
    push   0xc(%esp)
    push   0xc(%esp)
    call   func_7a0ca
    jmp    jump_76e5d
  jump_76e57:
    fldl   0x4(%esp)
    fsqrt
  jump_76e5d:
    ret    $0x8


/*----------------------------------------------------------------*/
func_76e62:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    ftst
    sub    $0x10,%esp
    fstsw  -0x8(%ebp)
    fwait
    xchg   %ax,-0x8(%ebp)
    sahf
    jae    jump_76e8f
    fstpl  -0x10(%ebp)
    mov    -0x8(%ebp),%eax
    cmp    $0x3,%al
    je     jump_76e83
    fstpl  -0x10(%ebp)
  jump_76e83:
    mov    %edx,-0x4(%ebp)
    call   func_7a0ca
    mov    $0x1,%al
    jmp    jump_76e93
  jump_76e8f:
    fsqrt
    mov    $0x0,%al
  jump_76e93:
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_76e98:
/*----------------------------------------------------------------*/
    push   %eax
    fstcw  (%esp)
    fwait
    push   (%esp)
    movb   $0x1f,0x1(%esp)
    fldcw  (%esp)
    frndint
    fldcw  0x4(%esp)
    fwait
    lea    0x8(%esp),%esp
    ret


/*----------------------------------------------------------------*/
func_76ec0:
/*----------------------------------------------------------------*/
    push   %eax
    push   %ecx
    mov    %dl,%dh
    shl    $0x8,%edx
    mov    %dh,%dl
    shl    $0x8,%edx
    mov    %dh,%dl
    mov    %ebx,%ecx
    call   func_7a150
    pop    %ecx
    pop    %eax
    ret


/*----------------------------------------------------------------*/
func_76ed8:
/*----------------------------------------------------------------*/
    push   %es
    push   %ds
    pop    %es
    movzbl %cl,%edx
    shr    $0x2,%ecx
    je     jump_76eee
  jump_76ee3:
    mov    (%edi),%eax
    xchg   %eax,(%esi)
    stos   %eax,%es:(%edi)
    add    $0x4,%esi
    dec    %ecx
    jne    jump_76ee3
  jump_76eee:
    and    $0x3,%dl
    je     jump_76efc
  jump_76ef3:
    mov    (%edi),%al
    xchg   %al,(%esi)
    stos   %al,%es:(%edi)
    inc    %esi
    dec    %edx
    jne    jump_76ef3
  jump_76efc:
    pop    %es
    ret


/*----------------------------------------------------------------*/
func_76efe:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %es
    push   %fs
    push   %gs
    enter  $0x4,$0x0
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ecx,-0x4(%ebp)
    call   *-0x4(%ebp)
    test   %eax,%eax
    jle    jump_76f35
    mov    %edi,%eax
    mov    %ebx,%edx
    call   *-0x4(%ebp)
    test   %eax,%eax
    jle    jump_76f31
    mov    %esi,%eax
    mov    %ebx,%edx
    call   *-0x4(%ebp)
    test   %eax,%eax
    jg     jump_76f4b
  jump_76f2d:
    mov    %ebx,%eax
    jmp    jump_76f4d
  jump_76f31:
    mov    %edi,%eax
    jmp    jump_76f4d
  jump_76f35:
    mov    %edi,%eax
    mov    %ebx,%edx
    call   *-0x4(%ebp)
    test   %eax,%eax
    jge    jump_76f31
    mov    %esi,%eax
    mov    %ebx,%edx
    call   *-0x4(%ebp)
    test   %eax,%eax
    jg     jump_76f2d
  jump_76f4b:
    mov    %esi,%eax
  jump_76f4d:
    leave
    pop    %gs
    pop    %fs
    pop    %es
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_76f56:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %es
    push   %fs
    push   %gs
    enter  $0x144,$0x0
    push   %eax
    push   %edx
    push   %ebx
    or     %ebx,%eax
    mov    %ecx,-0x14(%ebp)
    test   $0x3,%al
    je     jump_76f74
    mov    $0x2,%eax
    jmp    jump_76f7d
  jump_76f74:
    cmp    $0x4,%ebx
    seta   %al
    movzbl %al,%eax
  jump_76f7d:
    mov    %eax,-0x1c(%ebp)
    imul   $0x3,-0x150(%ebp),%eax
    mov    %eax,-0x38(%ebp)
    mov    -0x150(%ebp),%eax
    add    %eax,%eax
    movl   $0x0,-0x10(%ebp)
    mov    %eax,-0x34(%ebp)
  jump_76f9c:
    cmpl   $0x1,-0x14c(%ebp)
    jbe    jump_7703a
    cmpl   $0x10,-0x14c(%ebp)
    jae    jump_77069
    mov    -0x38(%ebp),%eax
    mov    %eax,-0x18(%ebp)
    mov    -0x14c(%ebp),%eax
    imul   -0x150(%ebp),%eax
    mov    -0x148(%ebp),%edx
    add    %eax,%edx
    mov    %edx,-0x3c(%ebp)
    jmp    jump_77034
  jump_76fd6:
    mov    -0x148(%ebp),%eax
    add    -0x18(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    jmp    jump_77026
  jump_76fe4:
    mov    %eax,%ebx
    jmp    jump_77008
  jump_76fe8:
    cmpl   $0x0,-0x1c(%ebp)
    je     jump_76ffd
    mov    -0x150(%ebp),%ecx
    mov    %ebx,%esi
    call   func_76ed8
    jmp    jump_77005
  jump_76ffd:
    mov    (%edi),%eax
    mov    (%ebx),%edx
    mov    %eax,(%ebx)
    mov    %edx,(%edi)
  jump_77005:
    sub    -0x18(%ebp),%ebx
  jump_77008:
    cmp    -0x148(%ebp),%ebx
    jbe    jump_77020
    mov    %ebx,%edi
    sub    -0x18(%ebp),%edi
    mov    %ebx,%edx
    mov    %edi,%eax
    call   *-0x14(%ebp)
    test   %eax,%eax
    jg     jump_76fe8
  jump_77020:
    mov    -0x18(%ebp),%eax
    add    %eax,-0x24(%ebp)
  jump_77026:
    mov    -0x24(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jb     jump_76fe4
    mov    -0x34(%ebp),%eax
    sub    %eax,-0x18(%ebp)
  jump_77034:
    cmpl   $0x0,-0x18(%ebp)
    jg     jump_76fd6
  jump_7703a:
    cmpl   $0x0,-0x10(%ebp)
    je     jump_76f4d
    decl   -0x10(%ebp)
    mov    -0x10(%ebp),%eax
    mov    -0x144(%ebp,%eax,4),%edx
    mov    -0xc4(%ebp,%eax,4),%eax
    mov    %edx,-0x148(%ebp)
    mov    %eax,-0x14c(%ebp)
    jmp    jump_76f9c
  jump_77069:
    mov    -0x14c(%ebp),%edi
    shr    %edi
    imul   -0x150(%ebp),%edi
    add    -0x148(%ebp),%edi
    cmpl   $0x1d,-0x14c(%ebp)
    jbe    jump_7712d
    mov    -0x148(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    mov    -0x14c(%ebp),%eax
    dec    %eax
    imul   -0x150(%ebp),%eax
    mov    -0x148(%ebp),%esi
    add    %eax,%esi
    cmpl   $0x2a,-0x14c(%ebp)
    jbe    jump_7711c
    mov    -0x14c(%ebp),%eax
    mov    -0x150(%ebp),%edx
    shr    $0x3,%eax
    imul   %eax,%edx
    mov    -0x148(%ebp),%ebx
    mov    -0x14(%ebp),%ecx
    mov    %edx,-0x20(%ebp)
    lea    (%edx,%edx,1),%eax
    mov    -0x148(%ebp),%edx
    mov    %eax,-0x40(%ebp)
    add    %eax,%ebx
    mov    -0x148(%ebp),%eax
    add    -0x20(%ebp),%edx
    call   func_76efe
    mov    -0x20(%ebp),%ebx
    mov    -0x14(%ebp),%ecx
    mov    %eax,-0x30(%ebp)
    mov    %edi,%edx
    mov    %edi,%eax
    add    %edi,%ebx
    sub    -0x20(%ebp),%eax
    call   func_76efe
    mov    -0x14(%ebp),%ecx
    mov    %eax,%edi
    mov    %esi,%edx
    mov    %esi,%ebx
    mov    %esi,%eax
    sub    -0x20(%ebp),%edx
    sub    -0x40(%ebp),%eax
    call   func_76efe
    mov    %eax,%esi
  jump_7711c:
    mov    -0x30(%ebp),%eax
    mov    -0x14(%ebp),%ecx
    mov    %edi,%edx
    mov    %esi,%ebx
    call   func_76efe
    mov    %eax,%edi
  jump_7712d:
    cmpl   $0x0,-0x1c(%ebp)
    je     jump_7715d
    mov    -0x148(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    je     jump_7714d
    mov    -0x150(%ebp),%ecx
    mov    %eax,%esi
    call   func_76ed8
    jmp    jump_77168
  jump_7714d:
    mov    -0x148(%ebp),%ebx
    mov    (%eax),%edx
    mov    (%edi),%eax
    mov    %eax,(%ebx)
    mov    %edx,(%edi)
    jmp    jump_77168
  jump_7715d:
    lea    -0x44(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    mov    (%edi),%eax
    mov    %eax,-0x44(%ebp)
  jump_77168:
    mov    -0x14c(%ebp),%eax
    dec    %eax
    imul   -0x150(%ebp),%eax
    mov    -0x148(%ebp),%ebx
    lea    (%ebx,%eax,1),%edx
    mov    %ebx,-0xc(%ebp)
    mov    %edx,-0x8(%ebp)
    mov    %edx,-0x4(%ebp)
  jump_77188:
    cmp    -0x4(%ebp),%ebx
    ja     jump_771d2
    mov    -0x2c(%ebp),%edx
    mov    %ebx,%eax
    call   *-0x14(%ebp)
    test   %eax,%eax
    jg     jump_771d2
    jne    jump_771ca
    cmpl   $0x0,-0x1c(%ebp)
    je     jump_771b3
    mov    -0xc(%ebp),%esi
    mov    -0x150(%ebp),%ecx
    mov    %ebx,%edi
    call   func_76ed8
    jmp    jump_771c1
  jump_771b3:
    mov    -0xc(%ebp),%edx
    mov    -0xc(%ebp),%ecx
    mov    (%ebx),%eax
    mov    (%edx),%edx
    mov    %eax,(%ecx)
    mov    %edx,(%ebx)
  jump_771c1:
    mov    -0x150(%ebp),%eax
    add    %eax,-0xc(%ebp)
  jump_771ca:
    add    -0x150(%ebp),%ebx
    jmp    jump_77188
  jump_771d2:
    cmp    -0x4(%ebp),%ebx
    ja     jump_77227
    mov    -0x4(%ebp),%eax
    mov    -0x2c(%ebp),%edx
    call   *-0x14(%ebp)
    test   %eax,%eax
    jl     jump_77227
    jne    jump_7721c
    cmpl   $0x0,-0x1c(%ebp)
    je     jump_771ff
    mov    -0x4(%ebp),%esi
    mov    -0x8(%ebp),%edi
    mov    -0x150(%ebp),%ecx
    call   func_76ed8
    jmp    jump_77213
  jump_771ff:
    mov    -0x8(%ebp),%edx
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%ecx
    mov    (%edx),%edx
    mov    (%eax),%eax
    mov    %edx,(%ecx)
    mov    -0x8(%ebp),%edx
    mov    %eax,(%edx)
  jump_77213:
    mov    -0x150(%ebp),%eax
    sub    %eax,-0x8(%ebp)
  jump_7721c:
    mov    -0x150(%ebp),%eax
    sub    %eax,-0x4(%ebp)
    jmp    jump_771d2
  jump_77227:
    cmp    -0x4(%ebp),%ebx
    ja     jump_77266
    cmpl   $0x0,-0x1c(%ebp)
    je     jump_77244
    mov    -0x4(%ebp),%edi
    mov    -0x150(%ebp),%ecx
    mov    %ebx,%esi
    call   func_76ed8
    jmp    jump_77252
  jump_77244:
    mov    -0x4(%ebp),%eax
    mov    (%eax),%eax
    mov    (%ebx),%edx
    mov    %eax,(%ebx)
    mov    -0x4(%ebp),%eax
    mov    %edx,(%eax)
  jump_77252:
    mov    -0x150(%ebp),%eax
    add    -0x150(%ebp),%ebx
    sub    %eax,-0x4(%ebp)
    jmp    jump_77188
  jump_77266:
    mov    -0x14c(%ebp),%eax
    imul   -0x150(%ebp),%eax
    mov    -0x148(%ebp),%edx
    mov    %ebx,%ecx
    add    %eax,%edx
    mov    -0xc(%ebp),%eax
    sub    -0xc(%ebp),%ecx
    sub    -0x148(%ebp),%eax
    mov    %edx,-0x28(%ebp)
    cmp    %ecx,%eax
    jge    jump_77292
    mov    %eax,%ecx
  jump_77292:
    test   %ecx,%ecx
    jbe    jump_772c5
    mov    %ebx,%edi
    mov    -0x148(%ebp),%esi
    sub    %ecx,%edi
    push   %es
    push   %ds
    pop    %es
    movzbl %cl,%edx
    shr    $0x2,%ecx
    je     jump_772b6
  jump_772ab:
    mov    (%edi),%eax
    xchg   %eax,(%esi)
    stos   %eax,%es:(%edi)
    add    $0x4,%esi
    dec    %ecx
    jne    jump_772ab
  jump_772b6:
    and    $0x3,%dl
    je     jump_772c4
  jump_772bb:
    mov    (%edi),%al
    xchg   %al,(%esi)
    stos   %al,%es:(%edi)
    inc    %esi
    dec    %edx
    jne    jump_772bb
  jump_772c4:
    pop    %es
  jump_772c5:
    mov    -0x28(%ebp),%eax
    mov    -0x8(%ebp),%ecx
    sub    -0x8(%ebp),%eax
    sub    -0x4(%ebp),%ecx
    sub    -0x150(%ebp),%eax
    cmp    %eax,%ecx
    jb     jump_772dd
    mov    %eax,%ecx
  jump_772dd:
    test   %ecx,%ecx
    jbe    jump_7730d
    mov    -0x28(%ebp),%edi
    mov    %ebx,%esi
    sub    %ecx,%edi
    push   %es
    push   %ds
    pop    %es
    movzbl %cl,%edx
    shr    $0x2,%ecx
    je     jump_772fe
  jump_772f3:
    mov    (%edi),%eax
    xchg   %eax,(%esi)
    stos   %eax,%es:(%edi)
    add    $0x4,%esi
    dec    %ecx
    jne    jump_772f3
  jump_772fe:
    and    $0x3,%dl
    je     jump_7730c
  jump_77303:
    mov    (%edi),%al
    xchg   %al,(%esi)
    stos   %al,%es:(%edi)
    inc    %esi
    dec    %edx
    jne    jump_77303
  jump_7730c:
    pop    %es
  jump_7730d:
    mov    -0x8(%ebp),%esi
    mov    -0x28(%ebp),%ecx
    mov    %ebx,%edi
    mov    -0x10(%ebp),%ebx
    sub    -0xc(%ebp),%edi
    sub    -0x4(%ebp),%esi
    shl    $0x2,%ebx
    sub    %esi,%ecx
    cmp    %edi,%esi
    jb     jump_7734b
    mov    %esi,%eax
    xor    %edx,%edx
    divl   -0x150(%ebp)
    xor    %edx,%edx
    mov    %eax,-0xc4(%ebx,%ebp,1)
    mov    %edi,%eax
    divl   -0x150(%ebp)
    mov    %ecx,-0x144(%ebx,%ebp,1)
    jmp    jump_77385
  jump_7734b:
    cmp    -0x150(%ebp),%edi
    jbe    jump_7703a
    mov    -0x148(%ebp),%eax
    xor    %edx,%edx
    mov    %eax,-0x144(%ebx,%ebp,1)
    mov    %edi,%eax
    divl   -0x150(%ebp)
    xor    %edx,%edx
    mov    %eax,-0xc4(%ebx,%ebp,1)
    mov    %esi,%eax
    divl   -0x150(%ebp)
    mov    %ecx,-0x148(%ebp)
  jump_77385:
    mov    %eax,-0x14c(%ebp)
    incl   -0x10(%ebp)
    jmp    jump_76f9c


/*----------------------------------------------------------------*/
func_77394:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x24,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    %esp,%edx
    call   func_7a221
    mov    %eax,%ebx
    mov    0x1(%edi),%eax
    mov    0xd(%edi),%edx
    mov    %eax,0x20(%esp)
  jump_773b3:
    cmp    0x8(%esp),%esi
    jbe    jump_773c7
    mov    %ecx,%eax
    call   *0x20(%esp)
    incl   0x8(%esp)
    add    %edx,%ecx
    jmp    jump_773b3
  jump_773c7:
    mov    %ebx,%eax
    call   func_7a27e
    mov    0xc(%esp),%eax
    add    $0x24,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_773d9:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    0x8(%eax),%ebx
    xor    %edx,%edx
    mov    (%ebx),%dl
    test   %edx,%edx
    je     jump_773ef
    inc    %ebx
    mov    %ebx,0x8(%eax)
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret
  jump_773ef:
    mov    0x10(%eax),%bl
    or     $0x2,%bl
    mov    $0xffffffff,%edx
    mov    %bl,0x10(%eax)
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77402:
/*----------------------------------------------------------------*/
    decl   0x8(%edx)
    ret


/*----------------------------------------------------------------*/
func_77406:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    sub    $0x14,%esp
    mov    $func_773d9,%ecx
    mov    $func_77402,%esi
    mov    %eax,0x8(%esp)
    mov    %esp,%eax
    mov    %ecx,(%esp)
    mov    %esi,0x4(%esp)
    call   func_7a287
    add    $0x14,%esp
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7742d:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x4,%esp
    lea    0x18(%esp),%ebx
    mov    0x10(%esp),%eax
    mov    0x14(%esp),%edx
    mov    %ebx,(%esp)
    mov    %esp,%ebx
    call   func_77406
    add    $0x4,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7744e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    data_1332fc,%eax
  jump_77457:
    test   %eax,%eax
    jne    jump_77463
    mov    $0xffffffff,%eax
    pop    %edx
    pop    %ebx
    ret
  jump_77463:
    mov    0x4(%eax),%ebx
    cmp    %ebx,%edx
    je     jump_7746e
    mov    (%eax),%eax
    jmp    jump_77457
  jump_7746e:
    mov    $0x1,%edx
    mov    %ebx,%eax
    call   func_7747d
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7747d:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    call   func_77507
    mov    %eax,%edx
    mov    %ebx,%eax
    call   func_7ae7a
    mov    %edx,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77492:
/*----------------------------------------------------------------*/
    add    $0x30,%eax
    cmp    $0x39,%eax
    jle    jump_7749d
    add    $0x27,%eax
  jump_7749d:
    ret


/*----------------------------------------------------------------*/
func_7749e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%edi
    call   func_7aed1
    mov    $0x4,%edx
    mov    %eax,%ebx
    mov    %ecx,%esi
    movb   $0x74,(%ecx)
    add    %ecx,%edx
  jump_774b9:
    mov    %ebx,%eax
    and    $0xf,%eax
    call   func_77492
    mov    %al,(%edx)
    dec    %edx
    shr    $0x4,%ebx
    cmp    %esi,%edx
    jne    jump_774b9
    mov    %edi,%eax
    sar    $0x4,%eax
    and    $0xf,%eax
    movb   $0x5f,0x5(%ecx)
    call   func_77492
    mov    %al,0x6(%ecx)
    mov    %edi,%eax
    and    $0xf,%eax
    call   func_77492
    movb   $0x2e,0x8(%ecx)
    movb   $0x74,0x9(%ecx)
    movb   $0x6d,0xa(%ecx)
    movb   $0x70,0xb(%ecx)
    movb   $0x0,0xc(%ecx)
    mov    %al,0x7(%ecx)
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77507:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x10,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    cmpl   $0x0,0xc(%eax)
    jne    jump_7751f
    mov    $0xffffffff,%esi
    jmp    jump_77586
  jump_7751f:
    mov    0xd(%eax),%ah
    xor    %esi,%esi
    test   $0x10,%ah
    je     jump_77532
    mov    %ecx,%eax
    call   func_7aed7
    mov    %eax,%esi
  jump_77532:
    mov    %ecx,%eax
    call   func_79066
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_7754a
    mov    0x10(%ecx),%eax
    xor    %ebx,%ebx
    call   func_77a30
  jump_7754a:
    test   %edi,%edi
    je     jump_77558
    mov    0x10(%ecx),%eax
    call   func_7af96
    or     %eax,%esi
  jump_77558:
    testb  $0x8,0xc(%ecx)
    je     jump_7756d
    mov    0x8(%ecx),%eax
    call   func_7882f
    movl   $0x0,0x8(%ecx)
  jump_7756d:
    testb  $0x8,0xd(%ecx)
    je     jump_77586
    xor    %edx,%edx
    mov    %esp,%eax
    mov    0x19(%ecx),%dl
    call   func_7749e
    mov    %esp,%eax
    call   func_7afc8
  jump_77586:
    mov    %esi,%eax
    add    $0x10,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77590:
/*----------------------------------------------------------------*/
    xor    $0xa22168c2,%eax
    fimull (%edi)
    leave
    add    %eax,-0x27(%eax)
    (bad)
    call   func_775ae
    jae    func_7759a
    ret


/*----------------------------------------------------------------*/
func_775a4:
/*----------------------------------------------------------------*/
    fsin
    call   func_775ae
    jae    func_775a4
    ret


/*----------------------------------------------------------------*/
func_775ae:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %eax
    fstsw  -0x2(%ebp)
    mov    -0x1(%ebp),%ah
    or     $0x1,%ah
    sahf
    jnp    jump_775d7
    fldt   %cs:func_77590
    fxch   %st(1)
  jump_775c8:
    fprem
    fstsw  -0x2(%ebp)
    mov    -0x1(%ebp),%ah
    sahf
    jp     jump_775c8
    fstp   %st(1)
    clc
  jump_775d7:
    pop    %eax
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_775da:
/*----------------------------------------------------------------*/
    fldl   0x4(%esp)
    call   func_7759a
    ret    $0x8


/*----------------------------------------------------------------*/
func_775e6:
/*----------------------------------------------------------------*/
    fldl   0x4(%esp)
    call   func_775a4
    ret    $0x8


/*----------------------------------------------------------------*/
func_775f2:
/*----------------------------------------------------------------*/
    fptan
    fstp   %st(0)
    ret


/*----------------------------------------------------------------*/
func_775f7:
/*----------------------------------------------------------------*/
    fldl   0x4(%esp)
    call   func_775f2
    ret    $0x8


/*----------------------------------------------------------------*/
func_77604:
/*----------------------------------------------------------------*/
    jmp    func_78bdc


/*----------------------------------------------------------------*/
func_7760c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    sub    $0x20,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %esp,%edx
    call   func_7a221
    mov    %esp,%edx
    mov    %eax,%ebx
    xor    %eax,%eax
    mov    %esi,0x8(%esp)
    call   func_7b194
    mov    %ebx,%eax
    call   func_7a27e
    mov    %ecx,%eax
    add    $0x20,%esp
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7763a:
/*----------------------------------------------------------------*/
    push   %ebx
  jump_7763b:
    mov    (%eax),%bl
    mov    (%edx),%bh
    cmp    $0x41,%bl
    jb     jump_7764c
    cmp    $0x5a,%bl
    ja     jump_7764c
    add    $0x20,%bl
  jump_7764c:
    cmp    $0x41,%bh
    jb     jump_77659
    cmp    $0x5a,%bh
    ja     jump_77659
    add    $0x20,%bh
  jump_77659:
    cmp    %bh,%bl
    jne    jump_77665
    test   %bh,%bh
    je     jump_77665
    inc    %eax
    inc    %edx
    jmp    jump_7763b
  jump_77665:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    %bl,%dl
    mov    %bh,%al
    sub    %eax,%edx
    mov    %edx,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77673:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    mov    %edx,%ebx
    cmp    $0xffffffff,%eax
    jne    jump_77692
    mov    $0x4,%eax
    call   func_7b1c8
  jump_7768b:
    xor    %eax,%eax
    jmp    jump_77719
  jump_77692:
    mov    %edx,%eax
    call   func_77dc7
    mov    %eax,%esi
    mov    %eax,%ebp
    test   %eax,%eax
    je     jump_77719
    mov    %ecx,%eax
    mov    %esi,%edx
    call   func_7771f
    cmp    $0xffffffff,%eax
    je     jump_7768b
    mov    %ecx,%eax
    call   func_7add2
    mov    %eax,%edx
    mov    %eax,%edi
    test   %eax,%eax
    je     jump_77717
    mov    0xc(%eax),%ah
    movl   $0x0,0x4(%edx)
    movl   $0x0,0x8(%edx)
    and    $0xfc,%ah
    movl   $0x0,0x14(%edx)
    mov    %ah,0xc(%edx)
    mov    0xc(%edx),%eax
    mov    %ecx,0x10(%edx)
    or     %esi,%eax
    mov    %eax,0xc(%edx)
    xor    %eax,%eax
    mov    (%ebx),%al
    call   func_7b1fe
    cmp    $0x61,%eax
    jne    jump_77707
    mov    $0x2,%ebx
    mov    %edx,%eax
    xor    %edx,%edx
    call   func_790d8
  jump_77707:
    mov    %edi,%eax
    call   func_7b20c
    mov    %ebp,%edx
    mov    %ecx,%eax
    call   func_7b292
  jump_77717:
    mov    %edi,%eax
  jump_77719:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7771f:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    call   func_7b23d
    mov    %eax,%ecx
    mov    %eax,%ebx
    xor    %edx,%ecx
    xor    %eax,%eax
    test   $0xc0,%cl
    je     jump_77738
    mov    $0x6,%eax
  jump_77738:
    test   $0x1,%dl
    je     jump_77747
    test   $0x1,%bl
    jne    jump_77747
    mov    $0x6,%eax
  jump_77747:
    test   $0x2,%dl
    je     jump_77756
    test   $0x2,%bl
    jne    jump_77756
    mov    $0x6,%eax
  jump_77756:
    cmp    $0x6,%eax
    jne    jump_77768
    call   func_7b1c8
    mov    $0xffffffff,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_77768:
    xor    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7776d:
/*----------------------------------------------------------------*/
    call   func_79066
    mov    %eax,(%edx)
    cmp    $0xffffffff,%eax
    sete   %al
    and    $0xff,%eax
    ret


/*----------------------------------------------------------------*/
func_77780:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%esi
    jmp    jump_77791
  jump_77786:
    mov    (%edx),%cl
    test   %cl,%cl
    je     jump_77795
    inc    %edx
    dec    %ebx
    mov    %cl,(%eax)
    inc    %eax
  jump_77791:
    test   %ebx,%ebx
    jne    jump_77786
  jump_77795:
    test   %ebx,%ebx
    je     jump_777a0
    dec    %ebx
    movb   $0x0,(%eax)
    inc    %eax
    jmp    jump_77795
  jump_777a0:
    mov    %esi,%eax
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_777a5:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    $0x1,%ebx
    xor    %edx,%edx
    call   func_77a30
    mov    %eax,%esi
    cmp    $0xffffffff,%eax
    je     jump_777dc
    mov    $0x2,%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_77a30
    mov    %eax,%edi
    mov    %esi,%edx
    xor    %ebx,%ebx
    mov    %ecx,%eax
    call   func_77a30
    mov    %edi,%eax
  jump_777dc:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_777e2:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    lea    0x14(%esp),%eax
    add    $0x4,%eax
    mov    -0x4(%eax),%eax
    push   %eax
    push   $0x0
    mov    0x18(%esp),%edx
    push   %edx
    mov    0x18(%esp),%ebx
    push   %ebx
    call   func_77806
    add    $0x10,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77806:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0xc,%esp
    mov    0x24(%esp),%esi
  jump_77812:
    cmpb   $0x20,(%esi)
    jne    jump_7781a
    inc    %esi
    jmp    jump_77812
  jump_7781a:
    mov    0x28(%esp),%eax
    and    $0x83,%eax
    mov    %eax,(%esp)
    mov    0x2c(%esp),%dl
    mov    (%esp),%al
    or     %dl,%al
    mov    %esi,%edx
    mov    $0xffffffff,%edi
    mov    $0x3d,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jl     jump_7784d
    xor    %edi,%edi
    mov    0x4(%esp),%di
  jump_7784d:
    mov    0x28(%esp),%dh
    test   $0x3,%dh
    je     jump_778c7
    cmp    $0xffffffff,%edi
    je     jump_778c7
    mov    %edi,%eax
    call   func_78e40
    test   %eax,%eax
    jne    jump_778c7
    testb  $0x4,0x29(%esp)
    je     jump_7788f
    mov    %edi,%ebx
    mov    $0x3e,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    $0x7,%eax
    call   func_7b1c8
    mov    $0xffffffff,%eax
    jmp    jump_779c2
  jump_7788f:
    test   $0x40,%dh
    je     jump_778c7
    lea    0x8(%esp),%edx
    mov    %edi,%ebx
    xor    %ecx,%ecx
    mov    $0x40,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jge    jump_778c7
    mov    %edi,%ebx
    mov    $0x3e,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
  jump_778b6:
    xor    %eax,%eax
    mov    0x4(%esp),%ax
    call   func_7b2b3
    jmp    jump_779c2
  jump_778c7:
    cmp    $0xffffffff,%edi
    jne    jump_77955
    testb  $0x20,0x28(%esp)
    je     jump_778b6
    cmpw   $0x2,0x4(%esp)
    jne    jump_778b6
    lea    0x30(%esp),%eax
    add    $0x4,%eax
    mov    -0x4(%eax),%eax
    test   %eax,%eax
    jne    jump_778f2
    mov    $0x180,%eax
  jump_778f2:
    xor    data_999dc,%eax
    xor    %ecx,%ecx
    test   $0x80,%al
    jne    jump_77903
    mov    $0x1,%ecx
  jump_77903:
    mov    %esi,%edx
    and    $0xff,%ecx
    mov    $0x3c,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jl     jump_778b6
    mov    0x4(%esp),%ebx
    mov    $0x3e,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jl     jump_778b6
    mov    (%esp),%al
    mov    0x2c(%esp),%ch
    mov    %esi,%edx
    or     %ch,%al
    mov    $0x3d,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jl     jump_778b6
    xor    %edi,%edi
    mov    0x4(%esp),%di
  jump_77955:
    mov    %edi,%eax
    call   func_7b23d
    and    $0x3c,%al
    mov    %eax,%edx
    mov    %edi,%eax
    call   func_78e40
    test   %eax,%eax
    je     jump_7796e
    or     $0x20,%dh
  jump_7796e:
    andb   $0x7f,(%esp)
    cmpl   $0x2,(%esp)
    jne    jump_7797b
    or     $0x3,%dl
  jump_7797b:
    cmpl   $0x0,(%esp)
    jne    jump_77984
    or     $0x1,%dl
  jump_77984:
    cmpl   $0x1,(%esp)
    jne    jump_7798d
    or     $0x2,%dl
  jump_7798d:
    testb  $0x10,0x28(%esp)
    je     jump_77997
    or     $0x80,%dl
  jump_77997:
    mov    %edx,%eax
    mov    0x29(%esp),%bl
    or     $0x40,%al
    test   $0x3,%bl
    je     jump_779ab
    test   $0x2,%bl
    je     jump_779b9
    jmp    jump_779b7
  jump_779ab:
    cmpl   $0x200,data_99be9
    jne    jump_779b9
  jump_779b7:
    mov    %eax,%edx
  jump_779b9:
    mov    %edi,%eax
    call   func_7b292
    mov    %edi,%eax
  jump_779c2:
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77a30:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %ebx,%eax
    mov    %esp,%edi
    mov    %ecx,%ebx
    mov    $0x42,%ah
    mov    %edx,%ecx
    shr    $0x10,%ecx
    int    $0x21
    mov    %ax,%ss:(%edi)
    mov    %dx,%ss:0x2(%edi)
    rcl    %eax
    ror    %eax
    test   %eax,%eax
    jge    jump_77a68
    and    $0xffff,%eax
    call   func_7b2b3
    mov    $0xffffffff,%eax
    jmp    jump_77a6b
  jump_77a68:
    mov    (%esp),%eax
  jump_77a6b:
    add    $0x4,%esp
    pop    %edi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_77a71:
/*----------------------------------------------------------------*/
    jmp    func_7af96


/*----------------------------------------------------------------*/
func_77a76:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    $0x1,%ebx
    xor    %edx,%edx
    call   func_77a30
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77a87:
/*----------------------------------------------------------------*/
    mov    $data_133234,%eax
    ret


/*----------------------------------------------------------------*/
func_77a8d:
/*----------------------------------------------------------------*/
    mov    $data_133230,%eax
    ret


/*----------------------------------------------------------------*/
func_77a93:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    push   %eax
    mov    %edx,%ebp
    mov    %ebx,%ecx
    call   func_7b23d
    mov    %eax,%edx
    mov    %eax,0xc(%esp)
    test   %eax,%eax
    jne    jump_77ac2
    mov    $0x4,%eax
  jump_77ab3:
    call   func_7b1c8
    mov    $0xffffffff,%eax
    jmp    jump_77b9e
  jump_77ac2:
    test   $0x1,%al
    jne    jump_77acd
    mov    $0x6,%eax
    jmp    jump_77ab3
  jump_77acd:
    test   $0x40,%al
    je     jump_77afb
    mov    (%esp),%ebx
    mov    %ebp,%edx
    mov    $0x3f,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%esi
    mov    %eax,0x8(%esp)
    test   %eax,%eax
    jge    jump_77b9a
    xor    %eax,%eax
    mov    %si,%ax
  jump_77af1:
    call   func_7b2b3
    jmp    jump_77b9e
  jump_77afb:
    xor    %eax,%edx
    mov    %ebx,0x4(%esp)
    mov    %edx,0x8(%esp)
  jump_77b05:
    mov    (%esp),%ebx
    mov    0x4(%esp),%ecx
    mov    %ebp,%edx
    mov    $0x3f,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%ebx
    mov    %eax,%esi
    mov    %eax,0x10(%esp)
    test   %eax,%eax
    jge    jump_77b29
    xor    %eax,%eax
    mov    %bx,%ax
    jmp    jump_77af1
  jump_77b29:
    je     jump_77b9a
    mov    0x8(%esp),%esi
    mov    %ebp,%eax
    xor    %edi,%edi
    lea    (%ebx,%ebp,1),%ecx
    xor    %edx,%edx
    mov    %ecx,0x14(%esp)
    jmp    jump_77b73
  jump_77b42:
    mov    (%eax),%bl
    cmp    $0x1a,%bl
    jne    jump_77b63
    mov    0x10(%esp),%ebp
    mov    %edi,%edx
    mov    (%esp),%eax
    sub    %ebp,%edx
    mov    $0x1,%ebx
    inc    %edx
    call   func_77a30
    mov    %esi,%eax
    jmp    jump_77b9e
  jump_77b63:
    cmp    $0xd,%bl
    je     jump_77b71
    mov    %edx,%ebx
    inc    %esi
    mov    (%eax),%cl
    inc    %edx
    mov    %cl,(%ebx,%ebp,1)
  jump_77b71:
    inc    %eax
    inc    %edi
  jump_77b73:
    cmp    0x14(%esp),%eax
    jb     jump_77b42
    mov    0x4(%esp),%ecx
    mov    0xd(%esp),%ah
    mov    %esi,0x8(%esp)
    sub    %edx,%ecx
    add    %edx,%ebp
    mov    %ecx,0x4(%esp)
    test   $0x20,%ah
    jne    jump_77b9a
    test   %ecx,%ecx
    jne    jump_77b05
  jump_77b9a:
    mov    0x8(%esp),%eax
  jump_77b9e:
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_77bab:
    push   %ds
    mov    %ecx,%ds
    mov    %edx,%ecx
    mov    %ebx,%edx
    mov    %eax,%ebx
    mov    0x4(%esp),%eax
    int    $0x21
    pop    %ds
    push   %ds
    jb     jump_77bc4
    mov    0xc(%esp),%ebx
    mov    %eax,(%ebx)
  jump_77bc4:
    call   func_7b31a
    pop    %ds
    add    $0x4,%esp
    ret    $0x4


/*----------------------------------------------------------------*/
func_77bd0:
/*----------------------------------------------------------------*/
    push   $0x4000
    jmp    jump_77bab


/*----------------------------------------------------------------*/
func_77bd7:
/*----------------------------------------------------------------*/
    test   %eax,%eax
    jne    jump_77bf5
    push   %ecx
    push   %ebx
    push   %edx
    push   $data_955d0
    push   $data_99a14
    call   func_786ea
    add    $0x14,%esp
    jmp    jump_7b32d
  jump_77bf5:
    ret


/*----------------------------------------------------------------*/
func_77bf6:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x18,%esp
    push   %eax
    push   %edx
    push   %ebx
    call   func_7b23d
    mov    %eax,%edx
    mov    %eax,-0x18(%ebp)
    test   %eax,%eax
    jne    jump_77c24
    mov    $0x4,%eax
  jump_77c15:
    call   func_7b1c8
    mov    $0xffffffff,%eax
    jmp    jump_77dc0
  jump_77c24:
    test   $0x2,%al
    jne    jump_77c2f
    mov    $0x6,%eax
    jmp    jump_77c15
  jump_77c2f:
    test   $0x80,%al
    je     jump_77c66
    mov    -0x1c(%ebp),%ebx
    xor    %eax,%edx
    mov    $0x2,%al
    mov    $0x42,%ah
    mov    %edx,%ecx
    shr    $0x10,%ecx
    int    $0x21
    rcl    %dx
    ror    %dx
    shl    $0x10,%edx
    mov    %ax,%dx
    mov    %edx,-0x10(%ebp)
    test   %edx,%edx
    jge    jump_77c66
  jump_77c56:
    xor    %eax,%eax
    mov    -0x10(%ebp),%ax
    call   func_7b2b3
    jmp    jump_77dc0
  jump_77c66:
    testb  $0x40,-0x18(%ebp)
    je     jump_77ca1
    mov    -0x1c(%ebp),%ebx
    mov    -0x20(%ebp),%edx
    mov    -0x24(%ebp),%ecx
    mov    $0x40,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%edx
    mov    %eax,-0x10(%ebp)
    test   %eax,%eax
    jl     jump_77c56
    cmp    -0x24(%ebp),%eax
    je     jump_77dbd
    mov    $0xc,%eax
    call   func_7b1c8
    mov    %edx,-0x24(%ebp)
    jmp    jump_77dbd
  jump_77ca1:
    call   func_7b345
    mov    %eax,%edx
    cmp    $0xb0,%eax
    jae    jump_77cb4
    call   func_78d2b
  jump_77cb4:
    mov    $0x200,%edi
    cmp    $0x230,%edx
    jae    jump_77cc6
    mov    $0x80,%edi
  jump_77cc6:
    lea    0x3(%edi),%eax
    xor    %edx,%edx
    and    $0xfc,%al
    xor    %esi,%esi
    sub    %eax,%esp
    mov    %edx,-0x4(%ebp)
    mov    %edx,-0x14(%ebp)
    mov    -0x20(%ebp),%eax
    mov    %esp,-0x8(%ebp)
    mov    %eax,-0xc(%ebp)
  jump_77ce0:
    mov    -0x4(%ebp),%eax
    cmp    -0x24(%ebp),%eax
    jae    jump_77d87
    mov    -0xc(%ebp),%eax
    cmpb   $0xa,(%eax)
    jne    jump_77d3c
    mov    -0x8(%ebp),%eax
    movb   $0xd,(%esi,%eax,1)
    inc    %esi
    cmp    %edi,%esi
    jne    jump_77d3c
    mov    -0x1c(%ebp),%ebx
    mov    %eax,%edx
    mov    %edi,%ecx
    mov    $0x40,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%esi
    mov    %eax,-0x10(%ebp)
    test   %eax,%eax
    jl     jump_77c56
    cmp    %edi,%eax
    je     jump_77d34
  jump_77d20:
    mov    $0xc,%eax
    call   func_7b1c8
    mov    -0x14(%ebp),%eax
    add    %esi,%eax
    jmp    jump_77dc0
  jump_77d34:
    mov    -0x4(%ebp),%eax
    xor    %edi,%esi
    mov    %eax,-0x14(%ebp)
  jump_77d3c:
    mov    -0x8(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    -0xc(%ebp),%ebx
    mov    -0x4(%ebp),%ecx
    inc    %ebx
    inc    %ecx
    mov    (%edx),%dl
    mov    %ebx,-0xc(%ebp)
    mov    %dl,(%esi,%eax,1)
    inc    %esi
    mov    %ecx,-0x4(%ebp)
    cmp    %edi,%esi
    jne    jump_77ce0
    mov    -0x1c(%ebp),%ebx
    mov    %eax,%edx
    mov    %edi,%ecx
    mov    $0x40,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%esi
    mov    %eax,-0x10(%ebp)
    test   %eax,%eax
    jl     jump_77c56
    cmp    %edi,%eax
    jne    jump_77d20
    mov    -0x4(%ebp),%eax
    xor    %edi,%esi
    mov    %eax,-0x14(%ebp)
    jmp    jump_77ce0
  jump_77d87:
    test   %esi,%esi
    je     jump_77dbd
    mov    -0x1c(%ebp),%ebx
    mov    -0x8(%ebp),%edx
    mov    %esi,%ecx
    mov    $0x40,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%edx
    mov    %eax,-0x10(%ebp)
    test   %eax,%eax
    jl     jump_77c56
    cmp    %esi,%eax
    je     jump_77dbd
    mov    $0xc,%eax
    call   func_7b1c8
    mov    -0x14(%ebp),%eax
    add    %edx,%eax
    jmp    jump_77dc0
  jump_77dbd:
    mov    -0x24(%ebp),%eax
  jump_77dc0:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_77dc7:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x4,%esp
    mov    %eax,%edx
    xor    %eax,%eax
    mov    (%edx),%al
    xor    %ebx,%ebx
    call   func_7b1fe
    mov    %al,(%esp)
    cmp    $0x72,%al
    je     jump_77dfa
    cmp    $0x77,%al
    je     jump_77dfa
    cmp    $0x61,%al
    je     jump_77dfa
    mov    $0x9,%eax
    call   func_7b1c8
    xor    %eax,%eax
    jmp    jump_77e74
  jump_77dfa:
    mov    %ebx,%eax
    mov    0x1(%edx),%cl
    or     $0x3,%al
    cmp    $0x2b,%cl
    jne    jump_77e27
    mov    %eax,%ebx
    mov    0x2(%edx),%cl
    or     $0x40,%al
    cmp    $0x62,%cl
    je     jump_77e23
    cmp    $0x74,%cl
    je     jump_77e5a
    cmpl   $0x200,data_99be9
  jump_77e21:
    jne    jump_77e5a
  jump_77e23:
    mov    %eax,%ebx
    jmp    jump_77e5a
  jump_77e27:
    mov    %ebx,%ecx
    or     $0x40,%cl
    cmpb   $0x62,0x1(%edx)
    jne    jump_77e40
    mov    0x2(%edx),%al
    mov    %ecx,%ebx
    cmp    $0x2b,%al
    jne    jump_77e5a
    or     $0x3,%cl
    jmp    jump_77e58
  jump_77e40:
    cmpb   $0x74,0x1(%edx)
    jne    jump_77e4c
    cmpb   $0x2b,0x2(%edx)
    jmp    jump_77e21
  jump_77e4c:
    cmpl   $0x200,data_99be9
    jne    jump_77e5a
  jump_77e58:
    mov    %ecx,%ebx
  jump_77e5a:
    mov    (%esp),%al
    cmp    $0x77,%al
    jne    jump_77e66
    or     $0x2,%bl
    jmp    jump_77e72
  jump_77e66:
    cmp    $0x61,%al
    jne    jump_77e6f
    or     $0x82,%bl
    jmp    jump_77e72
  jump_77e6f:
    or     $0x1,%bl
  jump_77e72:
    mov    %ebx,%eax
  jump_77e74:
    add    $0x4,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77e7b:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    andb   $0xfc,0xc(%ecx)
    mov    %edx,%eax
    call   func_77dc7
    mov    0xc(%ecx),%edi
    or     %eax,%edi
    xor    %eax,%eax
    mov    %edi,0xc(%ecx)
    mov    (%edx),%al
    call   func_7b1fe
    mov    %al,%dl
    cmp    $0x72,%al
    jne    jump_77ec2
    mov    0xc(%ecx),%dh
    xor    %eax,%eax
    test   $0x2,%dh
    je     jump_77eb0
    mov    $0x2,%eax
  jump_77eb0:
    testb  $0x40,0xc(%ecx)
    je     jump_77ebb
    or     $0x2,%ah
    jmp    jump_77ebe
  jump_77ebb:
    or     $0x1,%ah
  jump_77ebe:
    push   $0x0
    jmp    jump_77eef
  jump_77ec2:
    testb  $0x1,0xc(%ecx)
    setne  %al
    and    $0xff,%eax
    add    $0x21,%eax
    cmp    $0x61,%dl
    jne    jump_77eda
    or     $0x10,%al
    jmp    jump_77edc
  jump_77eda:
    or     $0x40,%al
  jump_77edc:
    testb  $0x40,0xc(%ecx)
    je     jump_77ee7
    or     $0x2,%ah
    jmp    jump_77eea
  jump_77ee7:
    or     $0x1,%ah
  jump_77eea:
    push   $0x180
  jump_77eef:
    push   %ebx
    push   %eax
    push   %esi
    call   func_77806
    add    $0x10,%esp
    mov    %eax,0x10(%ecx)
    cmpl   $0xffffffff,0x10(%ecx)
    jne    jump_77f0f
    mov    %ecx,%eax
    call   func_7ae7a
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_77f0f:
    movl   $0x0,0x4(%ecx)
    movl   $0x0,0x8(%ecx)
    movl   $0x0,0x14(%ecx)
    cmp    $0x61,%dl
    jne    jump_77f37
    mov    $0x2,%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_790d8
  jump_77f37:
    mov    %ecx,%eax
    call   func_7b20c
    mov    %ecx,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_77f43:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%esi
    xor    %eax,%eax
    call   func_7add2
    mov    %eax,%ecx
    test   %eax,%eax
    je     jump_77f5b
    mov    %esi,%eax
    call   func_77e7b
  jump_77f5b:
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_77f5e:
/*----------------------------------------------------------------*/
    push   %ebx
    xor    %ebx,%ebx
    call   func_77f43
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77ff4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    mov    0x8(%eax),%eax
    cmpl   $0x0,0x4(%eax)
    jle    jump_78016
    testb  $0x4,0xc(%eax)
    jne    jump_78016
    mov    (%eax),%ebx
    mov    (%ebx),%cl
    cmp    $0xd,%cl
    je     jump_78016
    cmp    $0x1a,%cl
    jne    jump_78020
  jump_78016:
    mov    0x8(%edx),%eax
    call   func_7b34e
    jmp    jump_78031
  jump_78020:
    decl   0x4(%eax)
    mov    0x8(%edx),%eax
    mov    (%eax),%ebx
    lea    0x1(%ebx),%ecx
    mov    %ecx,(%eax)
    xor    %eax,%eax
    mov    (%ebx),%al
  jump_78031:
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    jne    jump_7803c
    orb    $0x2,0x10(%edx)
  jump_7803c:
    mov    %ebx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78042:
/*----------------------------------------------------------------*/
    mov    0x8(%edx),%edx
    jmp    jump_7b4b1


/*----------------------------------------------------------------*/
func_7804a:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    sub    $0x14,%esp
    mov    $func_77ff4,%ecx
    mov    $func_78042,%esi
    mov    %eax,0x8(%esp)
    mov    %esp,%eax
    mov    %ecx,(%esp)
    mov    %esi,0x4(%esp)
    call   func_7a287
    add    $0x14,%esp
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78071:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x4,%esp
    lea    0x18(%esp),%ebx
    mov    0x10(%esp),%eax
    mov    0x14(%esp),%edx
    mov    %ebx,(%esp)
    mov    %esp,%ebx
    call   func_7804a
    add    $0x4,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78092:
/*----------------------------------------------------------------*/
    jmp    jump_7b599


/*----------------------------------------------------------------*/
func_78097:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x4,%esp
    lea    0x14(%esp),%ebx
    mov    $data_999fa,%eax
    mov    0x10(%esp),%edx
    mov    %ebx,(%esp)
    mov    %esp,%ebx
    call   func_7b5cb
    add    $0x4,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_780b9:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x4,%esp
    mov    $0x20,%edx
    mov    data_1332b8,%ebx
    mov    %edx,data_1332b8
    mov    %ebx,%edx
    shl    $0x2,%edx
  jump_780d4:
    test   %edx,%edx
    je     jump_780ea
    mov    data_133234(%edx),%eax
    sub    $0x4,%edx
    mov    %eax,(%esp)
    dec    %ebx
    call   *(%esp)
    jmp    jump_780d4
  jump_780ea:
    add    $0x4,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_780f0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ebx
    mov    $func_780b9,%edx
    mov    data_1332b8,%ecx
    mov    %edx,data_99880
    cmp    $0x20,%ecx
    jge    jump_78123
    mov    %ecx,%eax
    lea    0x1(%ecx),%edx
    mov    %ebx,data_133238(,%ecx,4)
    mov    %edx,data_1332b8
    xor    %ecx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_78123:
    mov    $0xffffffff,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7812c:
/*----------------------------------------------------------------*/
    push   %edx
    xor    %edx,%edx
    mov    data_99944,%eax
    mov    %edx,data_99944
    test   %eax,%eax
    jne    jump_78147
    mov    $0x8,%ah
    int    $0x21
    and    $0xff,%eax
  jump_78147:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_78149:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_7814a:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   *data_99880
    call   *data_99884
    mov    %edx,%eax
    call   func_78162
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_78162:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   *data_99884
    call   *data_99888
    mov    %edx,%eax
    jmp    jump_78643


/*----------------------------------------------------------------*/
func_78178:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    data_998ac,%esi
    xor    %ebx,%ebx
    jmp    jump_781cc
  jump_7818a:
    mov    0x28(%esi),%eax
    mov    0x4(%eax),%edx
    test   %edx,%edx
    jne    jump_7819b
  jump_78194:
    mov    $0x3,%eax
    jmp    jump_781d4
  jump_7819b:
    mov    0x8(%edx),%ecx
    cmp    %ecx,%eax
    jne    jump_78194
  jump_781a2:
    mov    0x8(%eax),%ebp
    test   %ebp,%ebp
    je     jump_78194
    mov    %ebp,%edx
    mov    0x4(%ebp),%ebp
    cmp    %ebp,%eax
    jne    jump_78194
    testb  $0x1,0x0(%ebp)
    jne    jump_78194
    mov    0x0(%ebp),%eax
    add    %ebx,%eax
    cmp    %ebx,%eax
    jb     jump_78194
    mov    %eax,%ebx
    mov    %edx,%eax
    cmp    %ecx,%edx
    jne    jump_781a2
    mov    0x8(%esi),%esi
  jump_781cc:
    test   %esi,%esi
    jne    jump_7818a
    xor    %eax,%eax
    mov    %ebx,(%edi)
  jump_781d4:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_781db:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %edi
    push   %ebp
    testb  $0x1,(%eax)
    je     jump_781ec
  jump_781e5:
    mov    $0x3,%eax
    jmp    jump_7821c
  jump_781ec:
    mov    0x8(%eax),%edx
    mov    0x4(%edx),%ecx
    mov    0x4(%eax),%ebx
    cmp    %ecx,%eax
    jne    jump_781e5
    cmp    0x8(%ebx),%ecx
    jne    jump_781e5
    mov    0x8(%edx),%ecx
    mov    0x4(%ecx),%edi
    mov    0x4(%ebx),%eax
    cmp    %edi,%edx
    jne    jump_781e5
    mov    0x8(%eax),%ebp
    cmp    %ebp,%ebx
    jne    jump_781e5
    cmp    %edi,%edi
    jne    jump_781e5
    cmp    %ebp,%ebp
    jne    jump_781e5
    xor    %eax,%eax
  jump_7821c:
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78222:
/*----------------------------------------------------------------*/
    push   %edx
    sub    $0x14,%esp
    cmpb   $0x0,data_133309
    je     jump_78236
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %edx
    ret
  jump_78236:
    lea    0x10(%esp),%eax
    call   func_78178
    test   %eax,%eax
    jne    jump_782a7
    xor    %edx,%edx
    mov    %eax,(%esp)
    mov    %dx,0x4(%esp)
  jump_78251:
    mov    %esp,%eax
    mov    data_998ac,%edx
    call   func_78c54
    test   %eax,%eax
    jne    jump_7827f
    cmpl   $0x1,0xa(%esp)
    jne    jump_78251
    mov    (%esp),%eax
    call   func_781db
    test   %eax,%eax
    jne    jump_7827f
    mov    0x6(%esp),%eax
    sub    %eax,0x10(%esp)
    jmp    jump_78251
  jump_7827f:
    cmpl   $0x0,0x10(%esp)
    je     jump_78290
  jump_78286:
    mov    $0x3,%eax
    add    $0x14,%esp
    pop    %edx
    ret
  jump_78290:
    cmp    $0x5,%eax
    je     jump_78286
    cmp    $0x4,%eax
    jne    jump_7829c
    xor    %eax,%eax
  jump_7829c:
    test   %eax,%eax
    jne    jump_782a7
    movb   $0x1,data_133309
  jump_782a7:
    add    $0x14,%esp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_782ac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x24,%esp
    mov    %eax,%edx
    mov    %esp,%eax
    call   func_7b650
    cmp    $0x1f4,%eax
    jl     jump_782c4
    incl   (%esp)
  jump_782c4:
    mov    %esp,%eax
    call   func_7b713
    mov    %eax,%ebx
    test   %edx,%edx
    je     jump_782d3
    mov    %eax,(%edx)
  jump_782d3:
    add    $0x24,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_782d9:
/*----------------------------------------------------------------*/
    mov    $data_9988c,%eax
    ret


/*----------------------------------------------------------------*/
func_782df:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_782d9
    test   %eax,%eax
    je     jump_78301
    imul   $0x41c64e6d,(%eax),%edx
    add    $0x3039,%edx
    mov    %edx,(%eax)
    mov    %edx,%eax
    shr    $0x10,%eax
    and    $0x7fff,%eax
  jump_78301:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_78303:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_782d9
    test   %eax,%eax
    je     jump_78311
    mov    %edx,(%eax)
  jump_78311:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_78313:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %edx,%ebx
    mov    %eax,%edx
    xor    %eax,%eax
    mov    $0x43,%ah
    int    $0x21
    jb     jump_78330
    test   $0x2,%bl
    je     jump_78330
    test   $0x1,%cl
    je     jump_78330
    mov    $0x0,%al
    mov    $0x6,%ah
    stc
  jump_78330:
    sbb    %ecx,%ecx
    mov    %ax,%cx
    mov    %ecx,%eax
    mov    %eax,%ebx
    mov    %eax,%edx
    and    $0xffff,%ebx
    shr    $0x10,%edx
    mov    %ebx,%eax
    call   func_7b2a7
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7834e:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%ecx
    mov    %edi,%edx
    mov    0xc(%ebx),%ah
    mov    0xc(%ebx),%ebp
    and    $0xcf,%ah
    and    $0x30,%ebp
    mov    %ah,0xc(%ebx)
  jump_7836a:
    dec    %ecx
    test   %ecx,%ecx
    jle    jump_78388
    mov    %ebx,%eax
    call   func_7b34e
    mov    %eax,(%esp)
    cmp    $0xffffffff,%eax
    je     jump_78388
    mov    (%esp),%al
    mov    %al,(%edx)
    inc    %edx
    cmp    $0xa,%al
    jne    jump_7836a
  jump_78388:
    cmpl   $0xffffffff,(%esp)
    jne    jump_7839c
    cmp    %edi,%edx
    je     jump_78398
    testb  $0x20,0xc(%ebx)
    je     jump_7839c
  jump_78398:
    xor    %edi,%edi
    jmp    jump_7839f
  jump_7839c:
    movb   $0x0,(%edx)
  jump_7839f:
    mov    0xc(%ebx),%esi
    or     %ebp,%esi
    mov    %edi,%eax
    mov    %esi,0xc(%ebx)
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
_start:  /* 0x783b4 */
/*----------------------------------------------------------------*/
    jmp    jump_7842c


/*----------------------------------------------------------------*/
func_78428:
/*----------------------------------------------------------------*/
    arpl   %bp,0x6e(%edi)
    add    %bh,%bl
    and    $0xfffffffc,%esp
    mov    %esp,%ebx
    mov    %ebx,data_99938
    mov    %ebx,data_99924
    mov    $0x24,%ax
    mov    %ax,data_99930
    mov    $0x50484152,%ebx
    sub    %eax,%eax
    mov    $0x30,%ah
    int    $0x21
    mov    %al,data_9995b
    mov    %ah,data_9995c
    mov    %eax,%ecx
    sub    %esi,%esi
    mov    $0x81,%edi
    shr    $0x10,%eax
    cmp    $0x4458,%ax
    jne    jump_784ae
    sub    $0x30,%bl
    mov    %bl,%al
    mov    $0x0,%ah
    push   %eax
    data16 mov data_99930,%es
    mov    %es:0x5c,%ebx
    add    $0xfff,%ebx
    and    $0xfffff000,%ebx
    mov    %ebx,data_99924
    shr    $0xc,%ebx
    mov    %ds,%ax
    mov    %eax,%es
    mov    $0x4a,%ah
    int    $0x21
    pop    %eax
    mov    %ds,%bx
    mov    $0x2c,%cx
    jmp    jump_784e6
  jump_784ae:
    cmp    $0x4243,%ax
    jne    jump_784e8
    mov    %edx,data_99890
    mov    %edx,%esi
    mov    0x1c(%esi),%edx
    mov    %esp,%ebx
    sub    %edx,%ebx
    mov    $0x4a,%ah
    int    $0x21
    mov    %ds,%bx
    data16 mov %ds,data_99930
    mov    0x10(%esi),%eax
    add    %eax,%edi
    sub    %esi,%esi
    mov    0x2c(%eax),%si
    shl    $0x4,%esi
    mov    %ds,%cx
    mov    $0x9,%al
    mov    $0x0,%ah
  jump_784e6:
    jmp    jump_78541
  jump_784e8:
    mov    $0x78,%dx
    mov    $0xff00,%ax
    int    $0x21
    cmp    $0x0,%al
    je     jump_7852a
    mov    %gs,%ax
    cmp    $0x0,%ax
    je     jump_78505
    mov    %ax,data_99894
  jump_78505:
    mov    $0x6,%ax
    mov    %ds,%bx
    int    $0x31
    mov    $0x1,%al
    mov    $0x0,%ah
    or     %cx,%dx
    je     jump_78519
    mov    $0x1,%ah
  jump_78519:
    data16 mov %es,data_99930
    mov    %es:0x2c,%cx
    jmp    jump_78541
  jump_7852a:
    mov    %ds,%dx
    mov    $0x24,%cx
    mov    %ecx,%ds
    mov    $0x2c,%cx
    mov    %edx,%ds
    mov    $0x17,%bx
    mov    $0x0,%al
    mov    $0x0,%ah
  jump_78541:
    mov    %al,data_99952
    mov    %ah,data_99953
    mov    %ebx,%es
    data16 mov %ds,%es:func_78689
    mov    %esi,data_99955
    mov    %cx,data_99959
    push   %esi
    data16 mov data_99930,%es
    ds mov $data_1333f8,%edx
    add    $0xf,%edx
    and    $0xf0,%dl
    sub    %ecx,%ecx
    mov    %es:-0x1(%edi),%cl
    cld
    mov    $0x20,%al
    repz scas %es:(%edi),%al
    lea    -0x1(%edi),%esi
    mov    %edx,%edi
    mov    %es,%bx
    mov    %ds,%dx
    mov    %ebx,%ds
    mov    %edx,%es
    je     jump_78596
    inc    %ecx
    rep movsb %ds:(%esi),%es:(%edi)
  jump_78596:
    sub    %al,%al
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    pop    %esi
    dec    %edi
    push   %edi
    push   %edx
    data16 mov %es:data_99959,%ds
    sub    %ebp,%ebp
  jump_785a8:
    mov    (%esi),%eax
    or     $0x20202020,%eax
    cmp    $0x37386f6e,%eax
    jne    jump_785bd
    cmpb   $0x3d,0x4(%esi)
    jne    jump_785bd
    inc    %ebp
  jump_785bd:
    cmpb   $0x0,(%esi)
    lods   %ds:(%esi),%al
    jne    jump_785bd
    cmpb   $0x0,(%esi)
    jne    jump_785a8
    lods   %ds:(%esi),%al
    inc    %esi
    inc    %esi
  jump_785cb:
    cmpb   $0x0,(%esi)
    movsb  %ds:(%esi),%es:(%edi)
    jne    jump_785cb
    pop    %ds
    pop    %esi
    mov    %esp,%ebx
    mov    %bp,data_99950
    mov    %edi,data_99934
    mov    %ebx,data_99920
    ds mov $data_1333f8,%ecx
    ds mov $data_9a230,%edi
    sub    %edi,%ecx
    cmpb   $0x1,data_99952
    jne    jump_7860c
    cmp    $0x1000,%ecx
    jbe    jump_7860c
    mov    $0x1000,%ecx
  jump_7860c:
    mov    %cl,%dl
    shr    $0x2,%ecx
    sub    %eax,%eax
    rep stos %eax,%es:(%edi)
    mov    %dl,%cl
    and    $0x3,%cl
    rep stos %al,%es:(%edi)
    ds mov $data_1333f8,%eax
    add    $0xf,%eax
    and    $0xf0,%al
    mov    %eax,data_99928
    mov    %esi,data_9992c
    mov    $0xff,%eax
    call   func_7b8b6
    sub    %ebp,%ebp
    call   func_7b867
  jump_78643:
    jmp    jump_78668


/*----------------------------------------------------------------*/
func_78645:
/*----------------------------------------------------------------*/
    push   %edx
    push   %eax
    mov    $func_78428,%edx
    mov    $0x3d01,%ax
    int    $0x21
    mov    %ax,%bx
    pop    %edx
    mov    %edx,%esi
    cld
  jump_78659:
    lods   %ds:(%esi),%al
    cmp    $0x0,%al
    jne    jump_78659
    mov    %esi,%ecx
    sub    %edx,%ecx
    dec    %ecx
    mov    $0x40,%ah
    int    $0x21
    pop    %eax
  jump_78668:
    push   %eax
    mov    $0x0,%eax
    mov    $0xff,%edx
    call   func_7b901
    pop    %eax
    mov    $0x4c,%ah
    int    $0x21
    lea    0x0(%eax),%eax


/*----------------------------------------------------------------*/
func_78680:
/*----------------------------------------------------------------*/
    data16 mov %cs:func_78689,%ds
    ret


/*----------------------------------------------------------------*/
func_78689:
/*----------------------------------------------------------------*/
    add    %al,(%eax)
    add    %dl,-0x46(%edx)
    or     $0x33,%al
    adc    (%eax),%eax
    mov    data_998d0,%eax
    movl   $0x0,data_998d0
    mov    %eax,data_13330c
  jump_786a6:
    mov    (%edx),%eax
    test   %eax,%eax
    je     jump_786bd
    call   func_7b19e
    mov    $data_13330c,%eax
    call   func_7a27e
    jmp    jump_786a6
  jump_786bd:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_786bf:
/*----------------------------------------------------------------*/
    add    $0x4,%eax
    ret


/*----------------------------------------------------------------*/
func_786c3:
/*----------------------------------------------------------------*/
    mov    0x4(%eax),%eax
    mov    (%eax,%edx,8),%eax
    ret


/*----------------------------------------------------------------*/
func_786ca:
/*----------------------------------------------------------------*/
    movb   $0x0,0x8(%eax)
    ret


/*----------------------------------------------------------------*/
func_786cf:
/*----------------------------------------------------------------*/
    movl   $data_998a0,data_13333c
    ret


/*----------------------------------------------------------------*/
func_786da:
/*----------------------------------------------------------------*/
    push   %edx
    mov    data_998d0,%edx
    mov    %edx,(%eax)
    mov    %eax,data_998d0
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_786ea:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x4,%esp
    lea    0x18(%esp),%ebx
    mov    0x10(%esp),%eax
    mov    0x14(%esp),%edx
    mov    %ebx,(%esp)
    mov    %esp,%ebx
    call   func_7b5cb
    add    $0x4,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7870c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %dl,%bl
    mov    (%eax),%edx
    lea    0x1(%edx),%ecx
    mov    %ecx,(%eax)
    mov    %bl,(%edx)
    incl   0x10(%eax)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7871f:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    $func_7870c,%ecx
    call   func_793d5
    movb   $0x0,(%esi,%eax,1)
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78734:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %es
    push   %fs
    push   %gs
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_7874d
    cmp    $0xffffffd4,%eax
    jbe    jump_78754
  jump_7874d:
    xor    %eax,%eax
    jmp    jump_78808
  jump_78754:
    mov    $data_998ac,%ebp
    lea    0x3(%esi),%edi
    xor    %ah,%ah
    xor    %ebx,%ebx
    mov    %ah,(%esp)
    and    $0xfffc,%di
  jump_78767:
    mov    %edi,%eax
    cmp    $0xc,%edi
    jae    jump_78773
    mov    $0xc,%eax
  jump_78773:
    cmp    data_998b4,%eax
    jbe    jump_78793
    mov    data_998b0,%ecx
    test   %ecx,%ecx
    jne    jump_787cb
  jump_78785:
    mov    %ecx,data_998b4
    mov    data_998ac,%ecx
    jmp    jump_787cb
  jump_78793:
    xor    %ecx,%ecx
    jmp    jump_78785
  jump_78797:
    mov    %ds,%edx
    mov    %ebp,%eax
    mov    %ecx,data_998b0
    and    $0xffff,%edx
    mov    %esi,%eax
    mov    %ecx,%ebx
    call   func_7baf6
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_787fe
    mov    data_998b4,%eax
    mov    0x14(%ecx),%edx
    cmp    %eax,%edx
    jbe    jump_787c8
    mov    %edx,data_998b4
  jump_787c8:
    mov    0x8(%ecx),%ecx
  jump_787cb:
    test   %ecx,%ecx
    jne    jump_78797
    cmpb   $0x0,(%esp)
    jne    jump_787e0
    mov    %esi,%eax
    call   func_7c08d
    test   %eax,%eax
    jne    jump_787f5
  jump_787e0:
    mov    %esi,%eax
    call   func_7c248
    test   %eax,%eax
    je     jump_787fe
    xor    %cl,%cl
    mov    %cl,(%esp)
    jmp    jump_78767
  jump_787f5:
    movb   $0x1,(%esp)
    jmp    jump_78767
  jump_787fe:
    xor    %ch,%ch
    mov    %ebx,%eax
    mov    %ch,data_133309
  jump_78808:
    add    $0x4,%esp
    pop    %ebp
    pop    %gs
    pop    %fs
    pop    %es
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78817:
/*----------------------------------------------------------------*/
    push   %ebx
    imul   %edx,%eax
    mov    %eax,%ebx
    call   func_78734
    test   %eax,%eax
    je     jump_7882d
    xor    %edx,%edx
    call   func_76ec0
  jump_7882d:
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7882f:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %ebp
    mov    %eax,%ebx
    mov    data_998ac,%ecx
    jmp    jump_78848
  jump_7883d:
    cmp    %ebx,%ecx
    ja     jump_78845
    cmp    %edx,%ebx
    jb     jump_7884f
  jump_78845:
    mov    0x8(%ecx),%ecx
  jump_78848:
    mov    0x8(%ecx),%edx
    test   %edx,%edx
    jne    jump_7883d
  jump_7884f:
    mov    $data_998ac,%eax
    mov    %ds,%edx
    and    $0xffff,%edx
    mov    %ebx,%eax
    mov    %ecx,%ebx
    call   func_7bb9e
    cmp    data_998b0,%ecx
    je     jump_78880
    mov    data_998b4,%ebp
    mov    0x14(%ecx),%edx
    cmp    %ebp,%edx
    jbe    jump_78880
    mov    %edx,data_998b4
  jump_78880:
    xor    %ah,%ah
    mov    %ah,data_133309
    pop    %ebp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7888d:
/*----------------------------------------------------------------*/
    push   %ecx
    sub    $0x4,%esp
  jump_78891:
    test   %ebx,%ebx
    jne    jump_7889c
  jump_78895:
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ecx
    ret
  jump_7889c:
    mov    (%edx),%ch
    mov    (%eax),%cl
    mov    %ch,(%esp)
    cmp    $0x41,%cl
    jb     jump_788b0
    cmp    $0x5a,%cl
    ja     jump_788b0
    add    $0x20,%cl
  jump_788b0:
    mov    (%esp),%ch
    cmp    $0x41,%ch
    jb     jump_788c3
    cmp    $0x5a,%ch
    ja     jump_788c3
    add    $0x20,%ch
    mov    %ch,(%esp)
  jump_788c3:
    mov    (%esp),%ch
    cmp    %ch,%cl
    je     jump_788db
    xor    %edx,%edx
    xor    %eax,%eax
    mov    %cl,%dl
    mov    %ch,%al
    sub    %eax,%edx
    mov    %edx,%eax
    add    $0x4,%esp
    pop    %ecx
    ret
  jump_788db:
    test   %ch,%ch
    je     jump_78895
    inc    %eax
    inc    %edx
    dec    %ebx
    jmp    jump_78891


/*----------------------------------------------------------------*/
func_788e4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
  jump_788e7:
    mov    (%eax),%dl
    inc    %dl
    and    $0xff,%edx
    testb  $0x2,data_96230(%edx)
    je     jump_788fd
    inc    %eax
    jmp    jump_788e7
  jump_788fd:
    mov    (%eax),%cl
    cmp    $0x2b,%cl
    je     jump_78909
    cmp    $0x2d,%cl
    jne    jump_7890a
  jump_78909:
    inc    %eax
  jump_7890a:
    xor    %ebx,%ebx
  jump_7890c:
    mov    (%eax),%dl
    inc    %dl
    and    $0xff,%edx
    testb  $0x20,data_96230(%edx)
    je     jump_7892e
    imul   $0xa,%ebx,%ebx
    xor    %edx,%edx
    mov    (%eax),%dl
    add    %edx,%ebx
    inc    %eax
    sub    $0x30,%ebx
    jmp    jump_7890c
  jump_7892e:
    cmp    $0x2d,%cl
    jne    jump_78935
    neg    %ebx
  jump_78935:
    mov    %ebx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7893b:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %eax,%edi
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    pop    %es
    inc    %ecx
    mov    %ecx,%eax
    call   func_78734
    mov    %eax,%edi
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_78979
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %es
  jump_78979:
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78980:
/*----------------------------------------------------------------*/
    jmp    jump_7c27d


/*----------------------------------------------------------------*/
func_78986:
/*----------------------------------------------------------------*/
    push   %edi
    push   %edx
    push   %ecx
    push   %ebx
    mov    %edx,%edi
    mov    %eax,%ebx
    mov    $0x5700,%ax
    int    $0x21
    pop    %ebx
    jb     jump_7899d
    mov    %dx,(%edi)
    mov    %cx,(%ebx)
  jump_7899d:
    call   func_7b31a
    pop    %ecx
    pop    %edx
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_789ba:
/*----------------------------------------------------------------*/
    push   %ecx
  jump_789bb:
    test   %ebx,%ebx
    jne    jump_789c3
  jump_789bf:
    xor    %eax,%eax
    pop    %ecx
    ret
  jump_789c3:
    mov    (%eax),%cl
    mov    (%edx),%ch
    cmp    %ch,%cl
    je     jump_789d9
    xor    %ebx,%ebx
    xor    %eax,%eax
    mov    %cl,%bl
    mov    %ch,%al
    sub    %eax,%ebx
    mov    %ebx,%eax
    pop    %ecx
    ret
  jump_789d9:
    cmpb   $0x0,(%eax)
    je     jump_789bf
    inc    %eax
    inc    %edx
    dec    %ebx
    jmp    jump_789bb


/*----------------------------------------------------------------*/
func_789e4:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    ftst
    sub    $0x18,%esp
    fstsw  -0x8(%ebp)
    fstl   -0x18(%ebp)
    mov    -0x7(%ebp),%ah
    sahf
    jne    jump_78a13
    mov    $0x0,%al
  jump_789fb:
    fstp   %st(0)
    fstpl  -0x10(%ebp)
    mov    %eax,-0x8(%ebp)
    mov    %edx,-0x4(%ebp)
    call   func_7c2b5
    sub    $0x8,%esp
    jmp    jump_78af2
  jump_78a13:
    fld    %st(1)
    frndint
    fcomp  %st(2)
    fstsw  -0x6(%ebp)
    fwait
    mov    -0x5(%ebp),%ah
    jae    jump_78a5e
    mov    $0x1,%al
    sahf
    jne    jump_789fb
    mov    $0x2,%ax
    mov    %ax,-0x4(%ebp)
    filds  -0x4(%ebp)
    fld    %st(2)
    fprem
    fstsw  -0x4(%ebp)
    fwait
    mov    -0x3(%ebp),%ah
    sahf
    mov    $0x0,%ah
    jp     jump_78a55
    ftst
    fstsw  -0x4(%ebp)
    fwait
    mov    -0x3(%ebp),%ah
    sahf
    mov    $0x0,%ah
    je     jump_78a55
    mov    $0x1,%ah
  jump_78a55:
    mov    %ah,-0x7(%ebp)
    fstp   %st(0)
    fstp   %st(0)
    jmp    jump_78a61
  jump_78a5e:
    sahf
    jne    jump_78ad3
  jump_78a61:
    fld    %st(1)
    fstpl  -0x10(%ebp)
    fwait
    mov    -0xa(%ebp),%ax
    and    $0x7ff0,%ax
    sub    $0x3ff0,%ax
    cmp    $0x100,%ax
    jae    jump_78ad3
    fld    %st(1)
    fistpl -0x4(%ebp)
    fwait
    mov    -0x2(%ebp),%ax
    or     %ax,%ax
    jne    jump_78a93
    mov    -0x4(%ebp),%ax
    call   func_78afd
    jmp    jump_78aa9
  jump_78a93:
    inc    %ax
    jne    jump_78ad3
    or     -0x4(%ebp),%ax
    je     jump_78ad3
    neg    %ax
    call   func_78afd
    fld1
    fdivp  %st,%st(1)
  jump_78aa9:
    fstl   -0x8(%ebp)
    fwait
    mov    -0x8(%ebp),%ax
    or     -0x6(%ebp),%ax
    or     -0x4(%ebp),%ax
    jne    jump_78acf
    mov    -0x2(%ebp),%ax
    shl    %ax
    cmp    $0xffe0,%ax
    jne    jump_78acf
  jump_78ac8:
    mov    $0x2,%al
    jmp    jump_789fb
  jump_78acf:
    fstp   %st(1)
    jmp    jump_78af2
  jump_78ad3:
    fldln2
    fmul   %st(2),%st
    fxch   %st(1)
    fabs
    fyl2x
    mov    $0x7,%al
    call   func_7c356
    cmp    $0x0,%al
    jne    jump_78ac8
    mov    -0x7(%ebp),%ah
    sahf
    jae    jump_78af0
    fchs
  jump_78af0:
    fstp   %st(1)
  jump_78af2:
    fstpl  -0x8(%ebp)
    fldl   -0x8(%ebp)
    fwait
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_78afd:
/*----------------------------------------------------------------*/
    shr    %ax
    jbe    jump_78b06
    fmul   %st(0),%st
    jmp    func_78afd
  jump_78b06:
    jae    jump_78b1b
    fld    %st(0)
  jump_78b0a:
    je     jump_78b17
    fmul   %st(0),%st
    shr    %ax
    jae    jump_78b15
    fmul   %st,%st(1)
  jump_78b15:
    jmp    jump_78b0a
  jump_78b17:
    fstp   %st(0)
    jmp    jump_78b1f
  jump_78b1b:
    fstp   %st(0)
    fld1
  jump_78b1f:
    ret


/*----------------------------------------------------------------*/
func_78b20:
/*----------------------------------------------------------------*/
    fldl   0xc(%esp)
    fldl   0x4(%esp)
    call   func_789e4
    ret    $0x10


/*----------------------------------------------------------------*/
func_78b30:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %eax,%ebp
  jump_78b39:
    test   %ebx,%ebx
    jbe    jump_78b4c
    mov    %esi,%eax
    mov    %edi,%edx
    call   *0x10(%esp)
    dec    %ebx
    add    %ecx,%esi
    add    %ecx,%edi
    jmp    jump_78b39
  jump_78b4c:
    mov    %ebp,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_78b54:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x28,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    mov    %esp,%edx
    mov    %ecx,%ebx
    call   func_7a221
    mov    %eax,0x20(%esp)
    mov    0x5(%ecx),%eax
    mov    0xd(%ecx),%ebx
    mov    %eax,0x24(%esp)
  jump_78b77:
    test   %ebp,%ebp
    jbe    jump_78b8e
    mov    %edi,%edx
    mov    %esi,%eax
    call   *0x24(%esp)
    dec    %ebp
    incl   0x8(%esp)
    add    %ebx,%esi
    add    %ebx,%edi
    jmp    jump_78b77
  jump_78b8e:
    mov    0x20(%esp),%eax
    call   func_7a27e
    mov    0xc(%esp),%eax
    add    $0x28,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_78ba2:
/*----------------------------------------------------------------*/
    add    %al,%al
    push   $0xfdaa221
    leave
    (bad)
    aas


/*----------------------------------------------------------------*/
func_78bac:
/*----------------------------------------------------------------*/
    fld    %st(0)
    fmul   %st(0),%st
    fld1
    fsubp  %st,%st(1)
    mov    $0x1,%al
    call   func_76e62
    cmp    $0x0,%al
    jne    jump_78bcf
    fxch   %st(1)
    call   func_7c3c9
    fldt   %cs:func_78ba2
    fsubp  %st,%st(1)
  jump_78bcf:
    ret


/*----------------------------------------------------------------*/
func_78bd0:
/*----------------------------------------------------------------*/
    fldl   0x4(%esp)
    call   func_78bac
    ret    $0x8


/*----------------------------------------------------------------*/
func_78bdc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x8,%esp
    mov    %eax,%edx
    test   %eax,%eax
    jne    jump_78bea
    lea    0x1(%eax),%edx
  jump_78bea:
    mov    %edx,%eax
    call   func_78734
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_78c1f
    mov    data_133328,%eax
    mov    %eax,(%esp)
    test   %eax,%eax
    je     jump_78c0c
    mov    %edx,%eax
    call   *(%esp)
    test   %eax,%eax
    jne    jump_78bea
  jump_78c0c:
    mov    data_133324,%eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    je     jump_78c1f
    call   *0x4(%esp)
    jmp    jump_78bea
  jump_78c1f:
    mov    %ebx,%eax
    add    $0x8,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78c27:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
  jump_78c2b:
    mov    (%eax),%dl
    test   %dl,%dl
    je     jump_78c41
    sub    $0x61,%dl
    cmp    $0x19,%dl
    ja     jump_78c3e
    add    $0x41,%dl
    mov    %dl,(%eax)
  jump_78c3e:
    inc    %eax
    jmp    jump_78c2b
  jump_78c41:
    mov    %ebx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78c46:
/*----------------------------------------------------------------*/
    push   %edx
    mov    data_998ac,%edx
    call   func_78c54
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_78c54:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %ebp
    mov    %eax,%ebx
    test   %edx,%edx
    jne    jump_78c66
    mov    $0x1,%eax
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret
  jump_78c66:
    mov    (%eax),%eax
    test   %eax,%eax
    jne    jump_78c71
    lea    0x2c(%edx),%eax
    jmp    jump_78ca1
  jump_78c71:
    mov    data_998ac,%edx
  jump_78c77:
    mov    0x8(%edx),%ecx
    test   %ecx,%ecx
    je     jump_78c8b
    cmp    %eax,%edx
    ja     jump_78c86
    cmp    %ecx,%eax
    jb     jump_78c8b
  jump_78c86:
    mov    0x8(%edx),%edx
    jmp    jump_78c77
  jump_78c8b:
    mov    (%eax),%ecx
    and    $0xfe,%cl
    add    %eax,%ecx
    cmp    %eax,%ecx
    ja     jump_78c9f
    mov    $0x3,%eax
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret
  jump_78c9f:
    mov    %ecx,%eax
  jump_78ca1:
    cmpl   $0xffffffff,(%eax)
    jne    jump_78ccb
    mov    0x8(%edx),%ebp
    test   %ebp,%ebp
    jne    jump_78cc4
    movw   $0x0,0x4(%ebx)
    mov    %ebp,0xa(%ebx)
    mov    %ebp,0x6(%ebx)
    mov    $0x4,%eax
    mov    %ebp,(%ebx)
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret
  jump_78cc4:
    mov    %ebp,%edx
    lea    0x2c(%ebp),%eax
    jmp    jump_78ca1
  jump_78ccb:
    movl   $0x1,0xa(%ebx)
    mov    %ds,0x4(%ebx)
    mov    %eax,(%ebx)
    mov    (%eax),%edx
    and    $0xfe,%dl
    mov    %edx,0x6(%ebx)
    testb  $0x1,(%eax)
    je     jump_78ceb
    movl   $0x0,0xa(%ebx)
  jump_78ceb:
    xor    %eax,%eax
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78cf2:
/*----------------------------------------------------------------*/
    data16 mov %ss,data_998b8
    ret


/*----------------------------------------------------------------*/
func_78cfa:
/*----------------------------------------------------------------*/
    xchg   %eax,0x4(%esp)
    call   func_78d0d
    mov    0x4(%esp),%eax
    ret    $0x4


/*----------------------------------------------------------------*/
func_78d0d:
/*----------------------------------------------------------------*/
    cmp    %esp,%eax
    jae    jump_78d1e
    sub    %esp,%eax
    neg    %eax
    cmp    data_99934,%eax
    jbe    jump_78d1e
    ret
  jump_78d1e:
    mov    %ss,%ax
    cmp    data_998b8,%ax
    je     func_78d2b
    ret


/*----------------------------------------------------------------*/
func_78d2b:
/*----------------------------------------------------------------*/
    mov    $data_998ba,%eax
    mov    $0x1,%edx
    call   func_7c3ef
    test   %eax,%eax
    jge    jump_78d40
    neg    %eax
  jump_78d40:
    ret


/*----------------------------------------------------------------*/
func_78d41:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%esi
    mov    %ebx,%ecx
    cmp    %eax,%edx
    je     jump_78d89
    jae    jump_78d75
    add    %ebx,%edx
    cmp    %eax,%edx
    jbe    jump_78d75
    lea    (%eax,%ebx,1),%edi
    lea    -0x1(%edx),%esi
    dec    %edi
    mov    %ds,%edx
    push   %es
    mov    %edx,%es
    std
    dec    %esi
    dec    %edi
    shr    %ecx
    rep movsw %ds:(%esi),%es:(%edi)
    adc    %ecx,%ecx
    inc    %esi
    inc    %edi
    data16 rep movsb %ds:(%esi),%es:(%edi)
    pop    %es
    cld
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_78d75:
    mov    %ds,%edx
    mov    %eax,%edi
    push   %es
    mov    %edx,%es
    push   %ecx
    shr    $0x2,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    pop    %ecx
    and    $0x3,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    pop    %es
  jump_78d89:
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78d8d:
/*----------------------------------------------------------------*/
    push   %ecx
    sub    $0xc,%esp
    mov    %eax,%ecx
    mov    %esp,%eax
    call   func_7c40c
    mov    %ecx,%eax
    mov    %esp,%ecx
    call   func_78da8
    add    $0xc,%esp
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78da8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %ebx,%ebp
    mov    %ecx,%ebx
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebp,%edx
    call   func_7c434
    mov    0x0(%ebp),%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_78dc1:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ebx,%ecx
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %es
    mov    %edi,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78de6:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    data_99bf8,%esi
    test   %esi,%esi
    je     jump_78e37
    test   %eax,%eax
    je     jump_78e37
    mov    %eax,%edi
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    pop    %es
    mov    %ecx,%edi
    jmp    jump_78e31
  jump_78e12:
    mov    %ecx,%eax
    mov    %ebp,%edx
    mov    %edi,%ebx
    call   func_7888d
    test   %eax,%eax
    jne    jump_78e2e
    cmpb   $0x3d,(%ecx,%edi,1)
    jne    jump_78e2e
    lea    0x1(%edi),%eax
    add    %ecx,%eax
    jmp    jump_78e39
  jump_78e2e:
    add    $0x4,%esi
  jump_78e31:
    mov    (%esi),%ecx
    test   %ecx,%ecx
    jne    jump_78e12
  jump_78e37:
    xor    %eax,%eax
  jump_78e39:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78e40:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ebx
    mov    $0x0,%al
    mov    $0x44,%ah
    int    $0x21
    rcl    %edx
    ror    %edx
    test   $0x80,%dl
    setne  %al
    and    $0xff,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78e5e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    $0x100,%ebx
    test   %edx,%edx
    jne    jump_78e6e
    mov    $0x400,%ebx
  jump_78e6e:
    mov    $0x1000,%ecx
    call   func_7c812
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78e7b:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%edi
    mov    %edx,%esi
    call   func_7c87a
    mov    $0x63df,%eax
    mov    data_99c48,%ebx
    mov    (%edi),%edi
    mov    %esi,%ecx
    mov    %edi,%edx
    call   func_7cb4a
    mov    %esi,%eax
    call   func_7cdd0
    test   %eax,%eax
    je     jump_78ec5
    mov    $0x63df,%eax
    mov    data_99c48,%ebx
    mov    data_99c4c,%edx
    mov    %esi,%ecx
    sub    %edx,%ebx
    mov    %edi,%edx
    call   func_7cb4a
  jump_78ec5:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78ecc:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_1332bc,%edx
    call   func_78e7b
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_78ed9:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %edx,%edi
    mov    $0xa,%ecx
    mov    %esp,%esi
    cltd
    idiv   %ecx
    mov    %eax,(%esi)
    mov    %edx,0x4(%esi)
    mov    (%esp),%dl
    lea    (%ebx,%edi,1),%eax
    add    $0x30,%dl
    mov    %dl,(%eax)
    mov    0x4(%esp),%bl
    add    $0x30,%bl
    mov    %bl,0x1(%eax)
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78f0c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    mov    0x18(%eax),%eax
    mov    data_96218(%eax),%dl
    mov    %dl,(%edi)
    mov    data_9621f(%eax),%dl
    mov    %dl,0x1(%edi)
    mov    data_96226(%eax),%al
    movb   $0x20,0x3(%edi)
    mov    %al,0x2(%edi)
    mov    0x10(%ecx),%eax
    mov    data_961f4(%eax),%dl
    mov    %dl,0x4(%edi)
    mov    data_96200(%eax),%dl
    mov    %dl,0x5(%edi)
    mov    data_9620c(%eax),%al
    movb   $0x20,0x7(%edi)
    mov    %edi,%ebx
    mov    %al,0x6(%edi)
    mov    $0x8,%edx
    mov    0xc(%ecx),%eax
    call   func_78ed9
    cmpb   $0x30,0x8(%edi)
    jne    jump_78f73
    movb   $0x20,0x8(%edi)
  jump_78f73:
    mov    $0xb,%edx
    movb   $0x20,0xa(%edi)
    mov    %edi,%ebx
    mov    0x8(%ecx),%eax
    call   func_78ed9
    mov    $0xe,%edx
    movb   $0x3a,0xd(%edi)
    mov    %edi,%ebx
    mov    0x4(%ecx),%eax
    call   func_78ed9
    mov    $0x11,%edx
    movb   $0x3a,0x10(%edi)
    mov    %edi,%ebx
    mov    (%ecx),%eax
    call   func_78ed9
    movb   $0x20,0x13(%edi)
    mov    %esp,%esi
    mov    0x14(%ecx),%eax
    mov    $0x64,%ecx
    mov    %edi,%ebx
    cltd
    idiv   %ecx
    mov    %eax,(%esi)
    mov    %edx,0x4(%esi)
    mov    (%esp),%eax
    mov    $0x14,%edx
    add    $0x13,%eax
    call   func_78ed9
    mov    0x4(%esp),%eax
    mov    $0x16,%edx
    mov    %edi,%ebx
    call   func_78ed9
    movb   $0xa,0x18(%edi)
    mov    %edi,%eax
    movb   $0x0,0x19(%edi)
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_79013:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_1332e0,%edx
    call   func_78f0c
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_79020:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %eax
  jump_79022:
    mov    (%edx),%cl
    mov    %cl,(%eax)
    cmp    $0x0,%cl
    je     jump_7903c
    mov    0x1(%edx),%cl
    add    $0x2,%edx
    mov    %cl,0x1(%eax)
    add    $0x2,%eax
    cmp    $0x0,%cl
    jne    jump_79022
  jump_7903c:
    pop    %eax
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7903f:
/*----------------------------------------------------------------*/
    cmp    $0x61,%eax
    jl     jump_7904c
    cmp    $0x7a,%eax
    jg     jump_7904c
    sub    $0x20,%eax
  jump_7904c:
    ret


/*----------------------------------------------------------------*/
func_7904d:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edi
    mov    %eax,%edi
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    pop    %es
    mov    %ecx,%eax
    pop    %edi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_79066:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    mov    0x10(%eax),%eax
    call   func_77a76
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_79092
    mov    0x4(%edx),%ecx
    test   %ecx,%ecx
    je     jump_79092
    testb  $0x10,0xd(%edx)
    je     jump_7908e
    lea    (%ecx,%ebx,1),%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_7908e:
    mov    %ebx,%eax
    sub    %ecx,%eax
  jump_79092:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_79096:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    andb   $0xef,0xc(%edx)
    cmp    0x4(%edx),%eax
    jg     jump_790c2
    mov    0x8(%edx),%ebx
    mov    (%edx),%ecx
    sub    %ecx,%ebx
    cmp    %ebx,%eax
    jl     jump_790c2
    mov    0x4(%edx),%edi
    lea    (%ecx,%eax,1),%esi
    sub    %eax,%edi
    mov    %esi,(%edx)
    xor    %eax,%eax
    mov    %edi,0x4(%edx)
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_790c2:
    mov    0x8(%edx),%eax
    movl   $0x0,0x4(%edx)
    mov    %eax,(%edx)
    mov    $0x1,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_790d8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%esi
    testb  $0x6,0xc(%eax)
    je     jump_79140
    testb  $0x10,0xd(%ecx)
    je     jump_79111
    mov    %ecx,%eax
    call   func_7aed7
    test   %eax,%eax
    je     jump_79125
    test   %ebx,%ebx
    jne    jump_79108
    test   %esi,%esi
    jge    jump_79108
  jump_790fe:
    mov    $0x9,%eax
    call   func_7b1c8
  jump_79108:
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_79111:
    cmp    $0x1,%ebx
    jne    jump_79119
    sub    0x4(%ecx),%esi
  jump_79119:
    mov    0x8(%ecx),%eax
    movl   $0x0,0x4(%ecx)
    mov    %eax,(%ecx)
  jump_79125:
    andb   $0xeb,0xc(%ecx)
    mov    %esi,%edx
    mov    0x10(%ecx),%eax
    call   func_77a30
    cmp    $0xffffffff,%eax
    jne    jump_791ce
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_79140:
    cmp    $0x1,%ebx
    jb     jump_7914e
    jbe    jump_79154
    cmp    $0x2,%ebx
    je     jump_791aa
    jmp    jump_790fe
  jump_7914e:
    test   %ebx,%ebx
    je     jump_79179
    jmp    jump_790fe
  jump_79154:
    mov    %edx,%eax
    mov    %ecx,%edx
    mov    0x4(%ecx),%edi
    call   func_79096
    test   %eax,%eax
    je     jump_791ce
    mov    %esi,%edx
    mov    0x10(%ecx),%eax
    sub    %edi,%edx
    call   func_77a30
    cmp    $0xffffffff,%eax
    jne    jump_791ce
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_79179:
    mov    0x10(%ecx),%eax
    call   func_77a76
    mov    0x4(%ecx),%edx
    mov    %esi,%edi
    sub    %edx,%eax
    sub    %eax,%edi
    mov    %ecx,%edx
    mov    %edi,%eax
    call   func_79096
    test   %eax,%eax
    je     jump_791ce
    mov    %esi,%edx
    mov    0x10(%ecx),%eax
    call   func_77a30
    cmp    $0xffffffff,%eax
    jne    jump_791ce
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_791aa:
    mov    0x8(%ecx),%eax
    mov    0xc(%ecx),%dl
    mov    %eax,(%ecx)
    and    $0xef,%dl
    mov    0x10(%ecx),%eax
    mov    %dl,0xc(%ecx)
    mov    %esi,%edx
    movl   $0x0,0x4(%ecx)
    call   func_77a30
    cmp    $0xffffffff,%eax
    je     jump_791d0
  jump_791ce:
    xor    %eax,%eax
  jump_791d0:
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_791ee:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    push   %eax
    push   %edx
    mov    %ecx,%ebp
    testb  $0x1,0xc(%ecx)
    jne    jump_79218
    mov    $0x4,%eax
    call   func_7b1c8
    mov    0xc(%ecx),%dh
    or     $0x20,%dh
    xor    %eax,%eax
    mov    %dh,0xc(%ecx)
    jmp    jump_793b1
  jump_79218:
    imul   %edx,%ebx
    test   %ebx,%ebx
    jne    jump_79226
    mov    %ebx,%eax
    jmp    jump_793b1
  jump_79226:
    cmpl   $0x0,0x8(%ecx)
    jne    jump_79233
    mov    %ebp,%eax
    call   func_7d0b3
  jump_79233:
    xor    %esi,%esi
    mov    0xc(%ebp),%dl
    mov    %esi,0xc(%esp)
    test   $0x40,%dl
    je     jump_79332
    mov    %ebx,0x8(%esp)
  jump_79249:
    mov    0x4(%ebp),%edx
    test   %edx,%edx
    je     jump_792a4
    mov    0x8(%esp),%ebx
    cmp    %ebx,%edx
    jbe    jump_7925a
    mov    %ebx,%edx
  jump_7925a:
    mov    0x4(%esp),%edi
    mov    %edx,%ecx
    mov    0x0(%ebp),%esi
    mov    0xc(%esp),%ebx
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %es
    mov    0x8(%esp),%eax
    mov    0x0(%ebp),%ecx
    lea    (%edi,%edx,1),%esi
    add    %edx,%ebx
    mov    %esi,0x4(%esp)
    mov    %ebx,0xc(%esp)
    mov    0x4(%ebp),%edi
    add    %edx,%ecx
    sub    %edx,%eax
    sub    %edx,%edi
    mov    %ecx,0x0(%ebp)
    mov    %eax,0x8(%esp)
    mov    %edi,0x4(%ebp)
  jump_792a4:
    mov    0x8(%esp),%ecx
    test   %ecx,%ecx
    je     jump_793a6
    cmp    0x14(%ebp),%ecx
    jae    jump_792bb
    testb  $0x4,0xd(%ebp)
    je     jump_7931e
  jump_792bb:
    mov    0xd(%ebp),%cl
    mov    0x8(%esp),%ebx
    test   $0x4,%cl
    jne    jump_792d4
    cmp    $0x200,%ebx
    jbe    jump_792d4
    and    $0xfe,%bh
    xor    %bl,%bl
  jump_792d4:
    mov    0x4(%esp),%edx
    mov    0x10(%ebp),%eax
    call   func_7d12a
    cmp    $0xffffffff,%eax
    jne    jump_792ee
    orb    $0x20,0xc(%ebp)
    jmp    jump_793a6
  jump_792ee:
    test   %eax,%eax
    jne    jump_792fb
  jump_792f2:
    orb    $0x10,0xc(%ebp)
    jmp    jump_793a6
  jump_792fb:
    mov    0x4(%esp),%edx
    mov    0x8(%esp),%ebx
    mov    0xc(%esp),%ecx
    add    %eax,%edx
    sub    %eax,%ebx
    add    %eax,%ecx
    mov    %edx,0x4(%esp)
    mov    %ebx,0x8(%esp)
    mov    %ecx,0xc(%esp)
    jmp    jump_79249
  jump_7931e:
    mov    %ebp,%eax
    call   func_7b406
    test   %eax,%eax
    je     jump_793a6
    jmp    jump_79249
  jump_79332:
    mov    0x4(%esp),%edx
    add    %edx,%ebx
  jump_79338:
    cmpl   $0x0,0x4(%ebp)
    jne    jump_79349
    mov    %ebp,%eax
    call   func_7b406
    test   %eax,%eax
    je     jump_793a6
  jump_79349:
    mov    0x4(%ebp),%ecx
    mov    0x0(%ebp),%eax
    dec    %ecx
    lea    0x1(%eax),%esi
    mov    %ecx,0x4(%ebp)
    mov    %esi,0x0(%ebp)
    mov    (%eax),%al
    and    $0xff,%eax
    cmp    $0xd,%eax
    jne    jump_7938d
    cmpl   $0x0,0x4(%ebp)
    jne    jump_79376
    mov    %ebp,%eax
    call   func_7b406
    test   %eax,%eax
    je     jump_793a6
  jump_79376:
    mov    0x4(%ebp),%edi
    mov    0x0(%ebp),%eax
    dec    %edi
    lea    0x1(%eax),%esi
    mov    %edi,0x4(%ebp)
    mov    %esi,0x0(%ebp)
    mov    (%eax),%al
    and    $0xff,%eax
  jump_7938d:
    cmp    $0x1a,%eax
    je     jump_792f2
    mov    %al,(%edx)
    mov    0xc(%esp),%eax
    inc    %eax
    inc    %edx
    mov    %eax,0xc(%esp)
    cmp    %ebx,%edx
    jne    jump_79338
  jump_793a6:
    mov    0xc(%esp),%eax
    mov    (%esp),%esi
    xor    %edx,%edx
    div    %esi
  jump_793b1:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_793b8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    mov    %ds,%edx
    call   func_7d149
    test   %eax,%eax
    jne    jump_793d2
    mov    %ecx,%edx
    mov    %ebx,%eax
    call   func_7c3ea
  jump_793d2:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_793d5:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    sub    $0x4c,%esp
    mov    %ebx,%esi
    mov    %ecx,0x44(%esp)
    xor    %bl,%bl
    mov    %eax,0x28(%esp)
    mov    %bl,0x48(%esp)
    mov    %bl,0x3c(%esp)
    xor    %ebx,%ebx
    mov    %edx,%edi
    mov    %ebx,0x38(%esp)
    mov    $0x4,%ebp
    jmp    jump_79458
  jump_793ff:
    lea    0x28(%esp),%ebx
    mov    %esi,%edx
    call   func_79656
    mov    %eax,%edi
    mov    (%eax),%al
    inc    %edi
    mov    %al,0x3d(%esp)
    test   %al,%al
    je     jump_7964a
    cmp    $0x6e,%al
    jne    jump_794fa
    mov    0x3c(%esp),%bl
    test   $0x20,%bl
    je     jump_79485
    test   $0x80,%bl
    je     jump_79444
    mov    (%esi),%ecx
    add    $0x8,%ecx
    mov    %ecx,(%esi)
    les    -0x8(%ecx),%edx
  jump_7943b:
    mov    0x38(%esp),%eax
    mov    %eax,%es:(%edx)
    jmp    jump_79458
  jump_79444:
    test   $0x40,%bl
    je     jump_7947a
    mov    (%esi),%ebx
    add    %ebp,%ebx
    mov    %ebx,(%esi)
    mov    -0x4(%ebx),%edx
  jump_79452:
    mov    0x38(%esp),%eax
    mov    %eax,(%edx)
  jump_79458:
    mov    (%edi),%cl
    test   %cl,%cl
    je     jump_7964a
    lea    0x1(%edi),%eax
    cmp    $0x25,%cl
    je     jump_793ff
    mov    %eax,%edi
    xor    %edx,%edx
    lea    0x28(%esp),%eax
    mov    %cl,%dl
    call   *0x44(%esp)
    jmp    jump_79458
  jump_7947a:
    mov    (%esi),%edx
    add    %ebp,%edx
    mov    %edx,(%esi)
    mov    -0x4(%edx),%edx
    jmp    jump_79452
  jump_79485:
    test   $0x10,%bl
    je     jump_794c5
    test   $0x80,%bl
    je     jump_794a3
    mov    (%esi),%eax
    add    $0x8,%eax
    mov    %eax,(%esi)
    les    -0x8(%eax),%edx
    mov    0x38(%esp),%eax
    mov    %ax,%es:(%edx)
    jmp    jump_79458
  jump_794a3:
    test   $0x40,%bl
    je     jump_794ba
    mov    (%esi),%ecx
    add    %ebp,%ecx
    mov    %ecx,(%esi)
    mov    -0x4(%ecx),%edx
  jump_794b1:
    mov    0x38(%esp),%eax
    mov    %ax,(%edx)
    jmp    jump_79458
  jump_794ba:
    mov    (%esi),%ebx
    add    %ebp,%ebx
    mov    %ebx,(%esi)
    mov    -0x4(%ebx),%edx
    jmp    jump_794b1
  jump_794c5:
    test   $0x80,%bl
    je     jump_794d9
    mov    (%esi),%edx
    add    $0x8,%edx
    mov    %edx,(%esi)
    les    -0x8(%edx),%edx
    jmp    jump_7943b
  jump_794d9:
    test   $0x40,%bl
    je     jump_794ec
    mov    (%esi),%eax
    add    %ebp,%eax
    mov    %eax,(%esi)
    mov    -0x4(%eax),%edx
    jmp    jump_79452
  jump_794ec:
    mov    (%esi),%ecx
    add    %ebp,%ecx
    mov    %ecx,(%esi)
    mov    -0x4(%ecx),%edx
    jmp    jump_79452
  jump_794fa:
    mov    %esp,%eax
    lea    0x28(%esp),%ebx
    lea    0x48(%esp),%ecx
    mov    %esi,%edx
    call   func_7996e
    mov    %edx,%es
    mov    0x3c(%esp),%dl
    mov    %eax,%ebx
    test   $0x8,%dl
    jne    jump_7953c
    cmpb   $0x20,0x3e(%esp)
    jne    jump_7953c
  jump_7951f:
    mov    0x2c(%esp),%eax
    dec    %eax
    mov    %eax,0x2c(%esp)
    test   %eax,%eax
    jl     jump_7953c
    xor    %edx,%edx
    lea    0x28(%esp),%eax
    mov    0x3e(%esp),%dl
    call   *0x44(%esp)
    jmp    jump_7951f
  jump_7953c:
    lea    0x3f(%esp),%ecx
  jump_79540:
    mov    (%ecx),%al
    test   %al,%al
    je     jump_79555
    xor    %edx,%edx
    mov    %al,%dl
    lea    0x28(%esp),%eax
    inc    %ecx
    call   *0x44(%esp)
    jmp    jump_79540
  jump_79555:
    mov    0x34(%esp),%eax
    lea    -0x1(%eax),%ecx
    mov    %ecx,0x34(%esp)
    test   %eax,%eax
    je     jump_79573
    lea    0x28(%esp),%eax
    mov    $0x30,%edx
    call   *0x44(%esp)
    jmp    jump_79555
  jump_79573:
    testb  $0x8,0x3c(%esp)
    jne    jump_7959e
    cmpb   $0x20,0x3e(%esp)
    je     jump_7959e
  jump_79581:
    mov    0x2c(%esp),%eax
    dec    %eax
    mov    %eax,0x2c(%esp)
    test   %eax,%eax
    jl     jump_7959e
    xor    %edx,%edx
    lea    0x28(%esp),%eax
    mov    0x3e(%esp),%dl
    call   *0x44(%esp)
    jmp    jump_79581
  jump_7959e:
    mov    0x3d(%esp),%dh
    cmp    $0x73,%dh
    je     jump_795ac
    cmp    $0x53,%dh
    jne    jump_795f3
  jump_795ac:
    testb  $0x20,0x3c(%esp)
    je     jump_795d4
  jump_795b3:
    mov    0x30(%esp),%eax
    lea    -0x1(%eax),%ecx
    mov    %ecx,0x30(%esp)
    test   %eax,%eax
    je     jump_79612
    xor    %edx,%edx
    lea    0x28(%esp),%eax
    mov    %es:(%ebx),%dl
    call   *0x44(%esp)
    add    $0x2,%ebx
    jmp    jump_795b3
  jump_795d4:
    mov    0x30(%esp),%eax
    lea    -0x1(%eax),%edx
    mov    %edx,0x30(%esp)
    test   %eax,%eax
    je     jump_79612
    xor    %edx,%edx
    lea    0x28(%esp),%eax
    mov    %es:(%ebx),%dl
    call   *0x44(%esp)
    inc    %ebx
    jmp    jump_795d4
  jump_795f3:
    mov    0x30(%esp),%eax
    lea    -0x1(%eax),%ecx
    mov    %ecx,0x30(%esp)
    test   %eax,%eax
    je     jump_79612
    xor    %edx,%edx
    lea    0x28(%esp),%eax
    mov    %es:(%ebx),%dl
    call   *0x44(%esp)
    inc    %ebx
    jmp    jump_795f3
  jump_79612:
    testb  $0x8,0x3c(%esp)
    je     jump_79458
    cmpl   $0x0,0x2c(%esp)
    jle    jump_79458
  jump_79628:
    mov    0x2c(%esp),%eax
    lea    -0x1(%eax),%edx
    mov    %edx,0x2c(%esp)
    test   %eax,%eax
    je     jump_79458
    lea    0x28(%esp),%eax
    mov    $0x20,%edx
    call   *0x44(%esp)
    jmp    jump_79628
  jump_7964a:
    mov    0x38(%esp),%eax
    add    $0x4c,%esp
    pop    %ebp
    pop    %es
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_79656:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%esi
    movb   $0x0,0x17(%ebx)
    mov    %ebx,%edx
    movb   $0x20,0x16(%ebx)
    call   func_79789
    movl   $0x0,0x4(%ebx)
    mov    (%eax),%cl
    mov    %eax,%edx
    cmp    $0x30,%cl
    jb     jump_7969e
    cmp    $0x39,%cl
    ja     jump_7969e
  jump_7967f:
    imul   $0xa,0x4(%ebx),%ecx
    xor    %edx,%edx
    mov    (%eax),%dl
    sub    $0x30,%edx
    add    %edx,%ecx
    inc    %eax
    mov    %ecx,0x4(%ebx)
    mov    (%eax),%cl
    cmp    $0x30,%cl
    jb     jump_796c5
    cmp    $0x39,%cl
    jbe    jump_7967f
    jmp    jump_796c5
  jump_7969e:
    cmpb   $0x2a,(%eax)
    jne    jump_796c5
    mov    (%esi),%edx
    add    $0x4,%edx
    mov    %edx,(%esi)
    mov    -0x4(%edx),%edx
    mov    %edx,0x4(%ebx)
    test   %edx,%edx
    jge    jump_796c4
    mov    %edx,%edi
    mov    0x14(%ebx),%dh
    neg    %edi
    or     $0x8,%dh
    mov    %edi,0x4(%ebx)
    mov    %dh,0x14(%ebx)
  jump_796c4:
    inc    %eax
  jump_796c5:
    movl   $0xffffffff,0x8(%ebx)
    cmpb   $0x2e,(%eax)
    jne    jump_79718
    inc    %eax
    movl   $0x0,0x8(%ebx)
    cmpb   $0x2a,(%eax)
    jne    jump_796f9
    mov    (%esi),%edx
    add    $0x4,%edx
    mov    %edx,(%esi)
    mov    -0x4(%edx),%edx
    mov    %edx,0x8(%ebx)
    test   %edx,%edx
    jge    jump_796f6
    movl   $0xffffffff,0x8(%ebx)
  jump_796f6:
    inc    %eax
    jmp    jump_79718
  jump_796f9:
    mov    (%eax),%cl
    cmp    $0x30,%cl
    jb     jump_79718
    cmp    $0x39,%cl
    ja     jump_79718
    imul   $0xa,0x8(%ebx),%ecx
    xor    %edx,%edx
    mov    (%eax),%dl
    sub    $0x30,%edx
    add    %edx,%ecx
    inc    %eax
    mov    %ecx,0x8(%ebx)
    jmp    jump_796f9
  jump_79718:
    mov    (%eax),%cl
    lea    0x1(%eax),%edx
    cmp    $0x4e,%cl
    jb     jump_7973d
    jbe    jump_7977a
    cmp    $0x6c,%cl
    jb     jump_79734
    jbe    jump_7974d
    cmp    $0x77,%cl
    je     jump_7974d
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_79734:
    cmp    $0x68,%cl
    je     jump_7975b
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_7973d:
    cmp    $0x46,%cl
    jb     jump_79785
    jbe    jump_79774
    cmp    $0x4c,%cl
    je     jump_7976a
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_7974d:
    mov    0x14(%ebx),%dl
    or     $0x20,%dl
    inc    %eax
    mov    %dl,0x14(%ebx)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_7975b:
    mov    0x14(%ebx),%cl
    or     $0x10,%cl
    mov    %edx,%eax
    mov    %cl,0x14(%ebx)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_7976a:
    orb    $0x40,0x14(%ebx)
  jump_7976e:
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_79774:
    orb    $0x80,0x14(%ebx)
    jmp    jump_7976e
  jump_7977a:
    mov    0x14(%ebx),%ch
    or     $0x40,%ch
    mov    %edx,%eax
    mov    %ch,0x14(%ebx)
  jump_79785:
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_79789:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    movb   $0x0,0x14(%edx)
  jump_7978f:
    mov    (%eax),%bl
    cmp    $0x2d,%bl
    jne    jump_7979c
    orb    $0x8,0x14(%edx)
    jmp    jump_797de
  jump_7979c:
    cmp    $0x23,%bl
    jne    jump_797a7
    orb    $0x1,0x14(%edx)
    jmp    jump_797de
  jump_797a7:
    cmp    $0x2b,%bl
    jne    jump_797bf
    mov    0x14(%edx),%ch
    or     $0x4,%ch
    mov    %ch,%bl
    mov    %ch,0x14(%edx)
    and    $0xfd,%bl
    mov    %bl,0x14(%edx)
    jmp    jump_797de
  jump_797bf:
    cmp    $0x20,%bl
    jne    jump_797d6
    mov    0x14(%edx),%bh
    test   $0x4,%bh
    jne    jump_797de
    mov    %bh,%cl
    or     $0x2,%cl
    mov    %cl,0x14(%edx)
    jmp    jump_797de
  jump_797d6:
    cmp    $0x30,%bl
    jne    jump_797e1
    mov    %bl,0x16(%edx)
  jump_797de:
    inc    %eax
    jmp    jump_7978f
  jump_797e1:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_797e4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    %eax,%edx
    xor    %eax,%eax
  jump_797f0:
    mov    %esi,%es
    mov    %edx,%ebx
    mov    %es:(%ebx),%cl
    inc    %edx
    test   %cl,%cl
    je     jump_79803
    cmp    %edi,%eax
    je     jump_79803
    inc    %eax
    jmp    jump_797f0
  jump_79803:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_79808:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    mov    %edx,%ecx
    mov    %ebx,%esi
    mov    %eax,%edx
    xor    %eax,%eax
  jump_79814:
    mov    %ecx,%es
    mov    %edx,%ebx
    mov    %es:(%ebx),%di
    add    $0x2,%edx
    test   %di,%di
    je     jump_79803
    cmp    %esi,%eax
    je     jump_79803
    inc    %eax
    jmp    jump_79814


/*----------------------------------------------------------------*/
func_7982b:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %edx,%ebp
    mov    %ebx,(%esp)
    mov    $0x10,%ebx
    mov    %ebp,%edi
    call   func_7d1de
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    pop    %es
    mov    (%esp),%eax
    mov    %ecx,%esi
    mov    %ebp,%edi
    dec    %eax
    lea    (%ecx,%ebp,1),%edx
    lea    (%eax,%ebp,1),%ebx
    jmp    jump_7986b
  jump_79863:
    dec    %edx
    dec    %esi
    mov    (%edx),%cl
    dec    %eax
    mov    %cl,(%ebx)
    dec    %ebx
  jump_7986b:
    cmp    %edi,%edx
    jne    jump_79863
    lea    (%eax,%ebp,1),%edx
  jump_79872:
    test   %eax,%eax
    jl     jump_7987d
    dec    %eax
    movb   $0x30,(%edx)
    dec    %edx
    jmp    jump_79872
  jump_7987d:
    add    (%esp),%ebp
    movb   $0x0,0x0(%ebp)
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7988c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %ebx,%esi
    mov    %edx,(%esp)
    test   %edx,%edx
    jge    jump_798a8
    neg    %edx
    lea    0x1(%eax),%ecx
    movb   $0x2d,(%eax)
    mov    %edx,(%esp)
  jump_798a8:
    cmpl   $0xffffffff,0x8(%esi)
    jne    jump_798b5
    movl   $0x4,0x8(%esi)
  jump_798b5:
    mov    $0xa,%ebx
    xor    %eax,%eax
    mov    %ecx,%edx
    mov    0x2(%esp),%ax
    call   func_7d1de
    mov    %ecx,%ebx
  jump_798ca:
    mov    (%ecx),%ah
    lea    0x1(%ecx),%edx
    test   %ah,%ah
    je     jump_798d7
    mov    %edx,%ecx
    jmp    jump_798ca
  jump_798d7:
    cmpl   $0x0,0x8(%esi)
    je     jump_79909
    movb   $0x2e,(%ecx)
    xor    %eax,%eax
    mov    %edx,%ecx
    jmp    jump_79901
  jump_798e6:
    xor    %edx,%edx
    mov    %dx,0x2(%esp)
    mov    (%esp),%edi
    imul   $0xa,%edi,%edx
    mov    %edx,(%esp)
    mov    0x2(%esp),%dl
    add    $0x30,%dl
    inc    %eax
    mov    %dl,(%ecx)
    inc    %ecx
  jump_79901:
    cmp    0x8(%esi),%eax
    jl     jump_798e6
    movb   $0x0,(%ecx)
  jump_79909:
    testb  $0x80,0x1(%esp)
    je     jump_79960
  jump_79910:
    cmp    %ebx,%ecx
    jne    jump_79946
    lea    0x1(%ebx),%ecx
    movb   $0x31,(%ebx)
  jump_7991a:
    mov    (%ecx),%dl
    lea    0x1(%ecx),%eax
    cmp    $0x30,%dl
    jne    jump_79928
    mov    %eax,%ecx
    jmp    jump_7991a
  jump_79928:
    cmp    $0x2e,%dl
    jne    jump_7993d
    movb   $0x30,(%ecx)
    lea    0x1(%eax),%ecx
    mov    %dl,(%eax)
  jump_79935:
    cmpb   $0x30,(%ecx)
    jne    jump_7993d
    inc    %ecx
    jmp    jump_79935
  jump_7993d:
    movb   $0x30,(%ecx)
    inc    %ecx
    movb   $0x0,(%ecx)
    jmp    jump_79960
  jump_79946:
    dec    %ecx
    cmpb   $0x2e,(%ecx)
    jne    jump_7994d
    dec    %ecx
  jump_7994d:
    mov    (%ecx),%al
    cmp    $0x39,%al
    je     jump_7995b
    mov    %al,%ah
    inc    %ah
    mov    %ah,(%ecx)
    jmp    jump_79960
  jump_7995b:
    movb   $0x30,(%ecx)
    jmp    jump_79910
  jump_79960:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_79967:
/*----------------------------------------------------------------*/
    call   *data_99ca0
    ret


/*----------------------------------------------------------------*/
func_7996e:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%edi
    mov    %ebx,%esi
    mov    %ecx,(%esp)
    mov    $0x1,%ebx
    mov    %ds,%eax
    mov    %edi,%ecx
    mov    %ebx,0x4(%esp)
    mov    %eax,%es
    mov    0x15(%esi),%al
    movl   $0x0,0xc(%esi)
    cmp    $0x69,%al
    jb     jump_799af
    jbe    jump_799ef
    cmp    $0x75,%al
    jb     jump_799ab
    jbe    jump_799bb
    cmp    $0x78,%al
  jump_799a7:
    je     jump_799bb
    jmp    jump_799f9
  jump_799ab:
    cmp    $0x6f,%al
    jmp    jump_799a7
  jump_799af:
    cmp    $0x58,%al
    jb     jump_799f9
    jbe    jump_799bb
    cmp    $0x64,%al
    je     jump_799ef
    jmp    jump_799f9
  jump_799bb:
    mov    0x14(%esi),%ah
    test   $0x20,%ah
    je     jump_799cf
    mov    (%edx),%ebx
    add    $0x4,%ebx
    mov    %ebx,(%edx)
    mov    -0x4(%ebx),%ebp
    jmp    jump_799eb
  jump_799cf:
    test   $0x10,%ah
    je     jump_799e1
    mov    (%edx),%eax
    add    $0x4,%eax
    mov    %eax,(%edx)
    movzwl -0x4(%eax),%ebp
    jmp    jump_799eb
  jump_799e1:
    mov    (%edx),%ebp
    add    $0x4,%ebp
    mov    %ebp,(%edx)
    mov    -0x4(%ebp),%ebp
  jump_799eb:
    andb   $0xf9,0x14(%esi)
  jump_799ef:
    cmpl   $0xffffffff,0x8(%esi)
    je     jump_799f9
    movb   $0x20,0x16(%esi)
  jump_799f9:
    mov    0x15(%esi),%al
    mov    $0xa,%ebx
    cmp    $0x65,%al
    jb     jump_79a5e
    jbe    jump_79acf
    cmp    $0x6f,%al
    jb     jump_79a47
    jbe    jump_79ae3
    cmp    $0x73,%al
    jb     jump_79a3a
    jbe    jump_79b5e
    cmp    $0x75,%al
    jb     jump_79cf2
    jbe    jump_79c27
    cmp    $0x78,%al
    je     jump_79c0a
    jmp    jump_79cf2
  jump_79a3a:
    cmp    $0x70,%al
    je     jump_79c46
    jmp    jump_79cf2
  jump_79a47:
    cmp    $0x67,%al
    jb     jump_79aa5
    jbe    jump_79acf
    cmp    $0x69,%al
    je     jump_79b1e
    jmp    jump_79cf2
  jump_79a5e:
    cmp    $0x50,%al
    jb     jump_79a92
    jbe    jump_79c46
    cmp    $0x58,%al
    jb     jump_79a85
    jbe    jump_79c0a
    cmp    $0x63,%al
    jb     jump_79cf2
    jbe    jump_79cc5
    jmp    jump_79b1e
  jump_79a85:
    cmp    $0x53,%al
    je     jump_79b5e
    jmp    jump_79cf2
  jump_79a92:
    cmp    $0x46,%al
    jb     jump_79aa1
    jbe    jump_79aa5
    cmp    $0x47,%al
  jump_79a9a:
    je     jump_79acf
    jmp    jump_79cf2
  jump_79aa1:
    cmp    $0x45,%al
    jmp    jump_79a9a
  jump_79aa5:
    testb  $0x10,0x14(%esi)
    je     jump_79acf
    mov    (%edx),%ebx
    add    $0x4,%ebx
    mov    %ebx,(%edx)
    mov    %edi,%eax
    mov    -0x4(%ebx),%edx
    mov    %esi,%ebx
    call   func_7988c
    mov    $0xffffffff,%ebx
    mov    %ds,%eax
    mov    %ds,%edx
    mov    %eax,%es
    mov    %edi,%eax
    mov    %edi,%ecx
    jmp    jump_79b14
  jump_79acf:
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_79967
    mov    $0xffffffff,%ebx
    mov    %edx,%es
    mov    %eax,%ecx
    jmp    jump_79b14
  jump_79ae3:
    mov    0x14(%esi),%al
    mov    $0x8,%ebx
    test   $0x1,%al
    je     jump_79af3
    movb   $0x30,(%edi)
    inc    %edi
  jump_79af3:
    mov    %ebp,%eax
    mov    %edi,%edx
    call   func_7d279
  jump_79afc:
    cmpl   $0x0,0x8(%esi)
    jne    jump_79b0b
    cmpb   $0x30,(%edi)
    jne    jump_79b0b
    movb   $0x0,%es:(%ecx)
  jump_79b0b:
    mov    $0xffffffff,%ebx
    mov    %es,%edx
    mov    %ecx,%eax
  jump_79b14:
    call   func_797e4
    jmp    jump_79d1c
  jump_79b1e:
    mov    0x14(%esi),%al
    test   $0x20,%al
    je     jump_79b38
    mov    (%edx),%ebp
    add    $0x4,%ebp
    mov    %ebp,(%edx)
    mov    %edi,%edx
    mov    -0x4(%ebp),%eax
  jump_79b31:
    call   func_7d279
    jmp    jump_79afc
  jump_79b38:
    test   $0x10,%al
    je     jump_79b4b
    mov    (%edx),%eax
    add    $0x4,%eax
    mov    %eax,(%edx)
    mov    %edi,%edx
    movswl -0x4(%eax),%eax
    jmp    jump_79b31
  jump_79b4b:
    mov    (%edx),%ebp
    add    $0x4,%ebp
    mov    %ebp,(%edx)
    mov    %edi,%edx
    mov    -0x4(%ebp),%eax
    call   func_7d1de
    jmp    jump_79afc
  jump_79b5e:
    mov    0x14(%esi),%ah
    test   $0x80,%ah
    je     jump_79b88
    mov    (%edx),%ecx
    add    $0x8,%ecx
    mov    %ecx,(%edx)
    mov    -0x4(%ecx),%dx
    mov    -0x8(%ecx),%ecx
    test   %ecx,%ecx
    jne    jump_79b7d
    test   %dx,%dx
    je     jump_79b81
  jump_79b7d:
    mov    %edx,%es
    jmp    jump_79bb4
  jump_79b81:
    mov    %ds,%eax
    mov    (%esp),%ecx
    jmp    jump_79bb2
  jump_79b88:
    test   $0x40,%ah
    je     jump_79b9f
    mov    (%edx),%ebx
    add    $0x4,%ebx
    mov    %ebx,(%edx)
    mov    -0x4(%ebx),%ecx
    test   %ecx,%ecx
    je     jump_79b81
  jump_79b9b:
    mov    %ds,%eax
    jmp    jump_79bb2
  jump_79b9f:
    mov    (%edx),%eax
    add    $0x4,%eax
    mov    %eax,(%edx)
    mov    -0x4(%eax),%ecx
    test   %ecx,%ecx
    jne    jump_79b9b
    mov    %ds,%eax
    mov    (%esp),%ecx
  jump_79bb2:
    mov    %eax,%es
  jump_79bb4:
    mov    0x14(%esi),%bh
    mov    0x15(%esi),%al
    xor    %edi,%edi
    and    $0xf9,%bh
    mov    %edi,0x4(%esp)
    mov    %bh,0x14(%esi)
    cmp    $0x53,%al
    jne    jump_79be8
    test   $0x20,%bh
    je     jump_79bdd
    xor    %eax,%eax
    mov    %es:(%ecx),%ax
    add    $0x2,%ecx
    jmp    jump_79d1c
  jump_79bdd:
    xor    %eax,%eax
    mov    %es:(%ecx),%al
    inc    %ecx
    jmp    jump_79d1c
  jump_79be8:
    test   $0x20,%bh
    je     jump_79bfe
    mov    %es,%edx
    mov    %ecx,%eax
    mov    0x8(%esi),%ebx
    call   func_79808
    jmp    jump_79d1c
  jump_79bfe:
    mov    %es,%edx
    mov    %ecx,%eax
    mov    0x8(%esi),%ebx
    jmp    jump_79b14
  jump_79c0a:
    testb  $0x1,0x14(%esi)
    je     jump_79c22
    test   %ebp,%ebp
    je     jump_79c22
    movb   $0x30,0x17(%esi)
    mov    0x15(%esi),%al
    movb   $0x0,0x19(%esi)
    mov    %al,0x18(%esi)
  jump_79c22:
    mov    $0x10,%ebx
  jump_79c27:
    mov    %ebp,%eax
    mov    %edi,%edx
    call   func_7d230
    cmpb   $0x58,0x15(%esi)
    jne    jump_79afc
    mov    %edi,%eax
    call   func_79db7
    jmp    jump_79afc
  jump_79c46:
    cmpl   $0x0,0x4(%esi)
    jne    jump_79c62
    testb  $0x80,0x14(%esi)
    je     jump_79c5b
    movl   $0xd,0x4(%esi)
    jmp    jump_79c62
  jump_79c5b:
    movl   $0x8,0x4(%esi)
  jump_79c62:
    andb   $0xf9,0x14(%esi)
    mov    (%edx),%eax
    add    $0x4,%eax
    mov    %eax,(%edx)
    mov    0x14(%esi),%bl
    mov    -0x4(%eax),%ebp
    test   $0x80,%bl
    je     jump_79ca1
    add    $0x4,%eax
    mov    %eax,(%edx)
    mov    $0x4,%ebx
    mov    -0x4(%eax),%eax
    mov    %edi,%edx
    and    $0xffff,%eax
    call   func_7982b
    mov    $0x8,%ebx
    lea    0x5(%edi),%edx
    mov    %ebp,%eax
    movb   $0x3a,0x4(%edi)
    jmp    jump_79caa
  jump_79ca1:
    mov    $0x8,%ebx
    mov    %ebp,%eax
    mov    %edi,%edx
  jump_79caa:
    call   func_7982b
    cmpb   $0x50,0x15(%esi)
    jne    jump_79b0b
    mov    %edi,%eax
    call   func_79db7
    jmp    jump_79b0b
  jump_79cc5:
    mov    (%edx),%ebx
    add    $0x4,%ebx
    mov    %ebx,(%edx)
    mov    -0x4(%ebx),%al
    movb   $0x0,0x1(%edi)
    mov    %al,(%edi)
    movl   $0x1,0x8(%esi)
    mov    $0x1,%eax
    mov    0x14(%esi),%dh
    xor    %edi,%edi
    and    $0xf9,%dh
    mov    %edi,0x4(%esp)
    mov    %dh,0x14(%esi)
    jmp    jump_79d1c
  jump_79cf2:
    movl   $0x0,0x4(%esi)
    mov    0x15(%esi),%al
    movb   $0x0,0x1(%edi)
    mov    %al,(%edi)
    movl   $0x1,0x8(%esi)
    mov    0x14(%esi),%al
    xor    %edi,%edi
    and    $0xf9,%al
    mov    %edi,0x4(%esp)
    mov    %al,0x14(%esi)
    mov    $0x1,%eax
  jump_79d1c:
    cmpl   $0x0,0x4(%esp)
    je     jump_79d62
    mov    %es:(%ecx),%dl
    cmp    $0x2d,%dl
    jne    jump_79d36
    inc    %ecx
    movb   $0x0,0x18(%esi)
    dec    %eax
    mov    %dl,0x17(%esi)
    jmp    jump_79d51
  jump_79d36:
    mov    0x14(%esi),%dh
    test   $0x2,%dh
    je     jump_79d44
    movb   $0x20,0x17(%esi)
    jmp    jump_79d4d
  jump_79d44:
    test   $0x4,%dh
    je     jump_79d51
    movb   $0x2b,0x17(%esi)
  jump_79d4d:
    movb   $0x0,0x18(%esi)
  jump_79d51:
    mov    0x8(%esi),%edx
    cmp    %edx,%eax
    jle    jump_79d5d
    mov    %eax,0x8(%esi)
    jmp    jump_79d62
  jump_79d5d:
    sub    %eax,%edx
    mov    %edx,0xc(%esi)
  jump_79d62:
    cmpb   $0x2a,0x16(%esi)
    jne    jump_79d75
    mov    0x14(%esi),%dl
    movb   $0x0,0x17(%esi)
    and    $0xf9,%dl
    mov    %dl,0x14(%esi)
  jump_79d75:
    mov    0x8(%esi),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_79d81
    cmp    %ebx,%eax
    jge    jump_79d8a
  jump_79d81:
    cmpb   $0x63,0x15(%esi)
    je     jump_79d8a
    mov    %eax,0x8(%esi)
  jump_79d8a:
    mov    $0xffffffff,%ebx
    lea    0x17(%esi),%eax
    mov    %ds,%edx
    call   func_797e4
    mov    0x8(%esi),%ebp
    mov    0xc(%esi),%edx
    add    %ebp,%eax
    mov    0x4(%esi),%ebx
    add    %edx,%eax
    mov    %es,%edx
    sub    %eax,%ebx
    mov    %ecx,%eax
    mov    %ebx,0x4(%esi)
    add    $0x8,%esp
    pop    %ebp
    pop    %es
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_79db7:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
  jump_79dba:
    cmpb   $0x0,(%edx)
    je     jump_79dcd
    xor    %eax,%eax
    mov    (%edx),%al
    call   func_7903f
    mov    %al,(%edx)
    inc    %edx
    jmp    jump_79dba
  jump_79dcd:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_79dcf:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    $func_7d294,%edx
    mov    $func_7d3b9,%ebx
    mov    %edx,data_99ca0
    mov    %ebx,data_99ca4
    pop    %edx
    pop    %ebx
    ret
  jump_79dea:
    push   %es
    push   %ecx
    push   %ebx
    push   %edx
    fninit
    push   %eax
    fnstcw (%esp)
    pop    %eax
    cmp    $0x3,%ah
    je     jump_79dfb
    inc    %ebp
  jump_79dfb:
    or     %ebp,%ebp
    je     jump_79e04
    call   func_79e1a
  jump_79e04:
    finit
    fldcw  data_99d28
    fldz
    fldz
    fldz
    fldz
    pop    %edx
    pop    %ebx
    pop    %ecx
    pop    %es
    ret


/*----------------------------------------------------------------*/
func_79e1a:
/*----------------------------------------------------------------*/
    movb   $0x3,data_9987c
    movb   $0x1,data_9991c
    data16 smsw data_9991a
    andw   $0x6,data_9991a
    sub    $0x8,%esp
    sidtl  (%esp)
    mov    0x2(%esp),%ebx
    add    $0x38,%ebx
    add    $0x8,%esp
    cmpb   $0x0,data_99954
    je     jump_79e6c
    call   func_79ee5
    data16 mov data_99896,%es
    mov    %edx,%es:(%ebx)
    mov    %ecx,%es:0x4(%ebx)
    call   func_79f4f
    jmp    jump_79ee4
  jump_79e6c:
    cmpb   $0x0,data_99952
    jne    jump_79e90
    mov    $0x2507,%ax
    push   %ds
    mov    %cs,%cx
    mov    %ecx,%ds
    lea    func_7d7b0,%edx
    int    $0x21
    pop    %ds
    mov    $0x4,%al
    mov    $0xf3,%ah
    int    $0x21
    jmp    jump_79ee4
  jump_79e90:
    cmpb   $0x9,data_99952
    jne    jump_79eb8
    call   func_79ee5
    mov    %edx,(%ebx)
    mov    %ecx,0x4(%ebx)
    mov    $0xe02,%eax
    mov    $0x4,%ebx
    mov    data_99890,%ecx
    call   *0x30(%ecx)
    jmp    jump_79ee4
  jump_79eb8:
    cmpb   $0x1,data_99952
    jne    jump_79ed1
    mov    data_99894,%dx
    sub    %eax,%eax
    call   func_805ee
    jmp    jump_79ee4
  jump_79ed1:
    sub    %dx,%dx
    sub    %eax,%eax
    call   func_805ee
    cmp    $0x1,%al
    je     jump_79ee4
    call   func_79f02
  jump_79ee4:
    ret


/*----------------------------------------------------------------*/
func_79ee5:
/*----------------------------------------------------------------*/
    lea    func_7d7b0,%ecx
    mov    %cs,%dx
    shl    $0x10,%edx
    mov    %cx,%dx
    mov    %cs,%cx
    and    $0x3,%cl
    shl    $0xd,%cx
    or     $0x8e,%ch
    ret


/*----------------------------------------------------------------*/
func_79f02:
/*----------------------------------------------------------------*/
    mov    $0x7,%cl
    mov    $0x2502,%ax
    int    $0x21
    mov    %ebx,data_99914
    data16 mov %es,data_99918
    cmpb   $0x3,data_99952
    mov    $0x7,%cl
    mov    $0x2504,%ax
    push   %ds
    push   %cs
    pop    %ds
    jl     jump_79f39
    lea    func_7d740,%edx
    int    $0x21
    pop    %ds
    call   func_79f4f
    jmp    jump_79f4e
  jump_79f39:
    lea    func_7d7b0,%edx
    int    $0x21
    pop    %ds
    mov    %cr0,%ecx
    or     $0x4,%ecx
    and    $0xfffffffd,%ecx
    mov    %ecx,%cr0
  jump_79f4e:
    ret


/*----------------------------------------------------------------*/
func_79f4f:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    lea    data_998d4,%edx
    mov    $0x2535,%ax
    int    $0x21
    orl    $0x4,data_998d4
    andl   $0xfffffffd,data_998d4
    inc    %ebx
    int    $0x21
    ret
  jump_79f6f:
    cmpb   $0x1,data_9991c
    je     jump_79f79
    ret
  jump_79f79:
    push   %ecx
    push   %ebx
    push   %edx
    mov    data_99952,%al
    cmpb   $0x0,data_99954
    je     jump_79f91
    call   func_7a024
    jmp    jump_79fde
  jump_79f91:
    cmp    $0x9,%al
    jne    jump_79faa
    mov    $0xe02,%eax
    mov    $0x0,%ebx
    mov    data_99890,%ecx
    call   *0x30(%ecx)
    jmp    jump_79fde
  jump_79faa:
    cmp    $0x0,%al
    jne    jump_79fba
    mov    data_9991a,%ax
    mov    $0xf3,%ah
    int    $0x21
    jmp    jump_79fde
  jump_79fba:
    cmp    $0x1,%al
    jne    jump_79fce
    mov    data_99894,%dx
    sub    %eax,%eax
    call   func_806b8
    jmp    jump_79fde
  jump_79fce:
    sub    %edx,%edx
    call   func_806b8
    cmp    $0x1,%al
    je     jump_79fde
    call   func_79fe9
  jump_79fde:
    movb   $0x0,data_9991c
    pop    %edx
    pop    %ebx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_79fe9:
/*----------------------------------------------------------------*/
    mov    $0x7,%cl
    mov    $0x2504,%ax
    mov    data_99914,%edx
    push   %ds
    data16 mov data_99918,%ds
    int    $0x21
    pop    %ds
    cmpb   $0x3,data_99952
    jl     jump_7a010
    call   func_7a024
    jmp    jump_7a023
  jump_7a010:
    mov    %cr0,%ecx
    and    $0xfffffff9,%ecx
    mov    data_9991a,%dx
    or     %dx,%cx
    mov    %ecx,%cr0
  jump_7a023:
    ret


/*----------------------------------------------------------------*/
func_7a024:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    lea    data_998d4,%edx
    mov    $0x2535,%ax
    int    $0x21
    xor    %ecx,%ecx
    mov    data_9991a,%cx
    mov    %ecx,data_998d4
    inc    %ebx
    int    $0x21
    ret


/*----------------------------------------------------------------*/
func_7a045:
/*----------------------------------------------------------------*/
    fsave  (%eax)
    fwait
    ret


/*----------------------------------------------------------------*/
func_7a04a:
/*----------------------------------------------------------------*/
    frstor (%eax)
    fwait
    ret


/*----------------------------------------------------------------*/
func_7a04e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    cmpb   $0x0,data_9987d
    je     jump_7a06f
    mov    $func_7a045,%edx
    mov    $func_7a04a,%ebx
    mov    %edx,data_99d2c
    mov    %ebx,data_99d30
  jump_7a06f:
    xor    %eax,%eax
    mov    data_99d28,%ax
    call   func_80712
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7a089:
/*----------------------------------------------------------------*/
    push   %edx
    mov    data_9987c,%ah
    test   %ah,%ah
    jne    jump_7a0c7
    mov    %ah,data_9987d
    sub    %eax,%eax
    push   %eax
    fninit
    fnstcw (%esp)
    pop    %eax
    mov    %ah,%al
    xor    %dl,%dl
    cmp    $0x3,%al
    jne    jump_7a0b2
    call   func_7a04e
    mov    %al,%dl
  jump_7a0b2:
    cmpb   $0x0,data_99950
    jne    jump_7a0c7
    mov    %dl,data_9987c
    mov    %dl,data_9987d
  jump_7a0c7:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7a0c9:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_7a0ca:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x8,%esp
    mov    0x10(%ebp),%cl
    cmp    $0x1,%cl
    jb     jump_7a10d
    cmp    $0x3,%cl
    jbe    jump_7a0e8
    cmp    $0x4,%cl
    je     jump_7a0f9
    jmp    jump_7a10d
  jump_7a0e8:
    mov    %cl,%al
    or     $0x40,%al
    and    $0xff,%eax
    lea    0x8(%ebp),%edx
    or     $0x20,%ah
    jmp    jump_7a12f
  jump_7a0f9:
    fldz
    fcompl 0x8(%ebp)
    fnstsw %ax
    sahf
    jbe    jump_7a10d
    xor    %edx,%edx
    mov    %edx,-0x18(%ebp)
    mov    %edx,-0x14(%ebp)
    jmp    jump_7a137
  jump_7a10d:
    xor    %ebx,%ebx
    mov    %cl,%bl
    mov    %ebx,%edx
    or     $0x81,%dh
    cmp    $0x6,%cl
    jne    jump_7a12a
    fldz
    fcompl 0x8(%ebp)
    fnstsw %ax
    sahf
    jbe    jump_7a12a
    or     $0x11,%bh
    mov    %ebx,%edx
  jump_7a12a:
    mov    %edx,%eax
    lea    0x8(%ebp),%edx
  jump_7a12f:
    call   func_80739
    fstpl  -0x18(%ebp)
  jump_7a137:
    fldl   -0x18(%ebp)
    lea    -0x10(%ebp),%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %eax
    pop    %ebp
    ret    $0xc


/*----------------------------------------------------------------*/
func_7a150:
/*----------------------------------------------------------------*/
    or     %ecx,%ecx
    je     jump_7a180
    cmp    %dl,(%eax)
  jump_7a156:
    test   $0x3,%al
    je     jump_7a163
    mov    %dl,(%eax)
    inc    %eax
    ror    $0x8,%edx
    dec    %ecx
    jne    jump_7a156
  jump_7a163:
    push   %ecx
    shr    $0x2,%ecx
    call   func_7a187
    pop    %ecx
    and    $0x3,%ecx
    je     jump_7a180
    mov    %dl,(%eax)
    dec    %ecx
    je     jump_7a180
    mov    %dh,0x1(%eax)
    dec    %ecx
    je     jump_7a180
    mov    %dl,0x2(%eax)
  jump_7a180:
    ret


/*----------------------------------------------------------------*/
func_7a187:
/*----------------------------------------------------------------*/
    or     %ecx,%ecx
    je     jump_7a1f2
  jump_7a18b:
    test   $0x1f,%al
    je     jump_7a197
    mov    %edx,(%eax)
    lea    0x4(%eax),%eax
    dec    %ecx
    jne    jump_7a18b
  jump_7a197:
    push   %ecx
    shr    $0x2,%ecx
    je     jump_7a1d7
    dec    %ecx
    je     jump_7a1c9
  jump_7a1a0:
    mov    %edx,(%eax)
    mov    %edx,0x4(%eax)
    dec    %ecx
    mov    %edx,0x8(%eax)
    mov    %edx,0xc(%eax)
    je     jump_7a1c6
    cmp    %dl,0x20(%eax)
    mov    %edx,0x10(%eax)
    mov    %edx,0x14(%eax)
    dec    %ecx
    mov    %edx,0x18(%eax)
    mov    %edx,0x1c(%eax)
    lea    0x20(%eax),%eax
    jne    jump_7a1a0
    lea    -0x10(%eax),%eax
  jump_7a1c6:
    lea    0x10(%eax),%eax
  jump_7a1c9:
    mov    %edx,(%eax)
    mov    %edx,0x4(%eax)
    mov    %edx,0x8(%eax)
    mov    %edx,0xc(%eax)
    lea    0x10(%eax),%eax
  jump_7a1d7:
    pop    %ecx
    and    $0x3,%ecx
    je     jump_7a1f2
    mov    %edx,(%eax)
    lea    0x4(%eax),%eax
    dec    %ecx
    je     jump_7a1f2
    mov    %edx,(%eax)
    lea    0x4(%eax),%eax
    dec    %ecx
    je     jump_7a1f2
    mov    %edx,(%eax)
    lea    0x4(%eax),%eax
  jump_7a1f2:
    ret


/*----------------------------------------------------------------*/
func_7a1f4:
/*----------------------------------------------------------------*/
    add    $0x8,%eax
    ret


/*----------------------------------------------------------------*/
func_7a1f8:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    mov    0x4(%eax),%eax
    mov    0x4(%eax),%eax
    dec    %edx
    call   func_80840
    imul   %eax,%edx
    mov    0xc(%ebx),%eax
    add    %edx,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7a211:
/*----------------------------------------------------------------*/
    movb   $0x0,0x8(%eax)
    ret


/*----------------------------------------------------------------*/
func_7a216:
/*----------------------------------------------------------------*/
    movl   $data_99964,data_133338
    ret


/*----------------------------------------------------------------*/
func_7a221:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    mov    %edx,%eax
    movl   $0x2,0x10(%edx)
    mov    %ebx,0x14(%edx)
    mov    0x9(%ebx),%edx
    movl   $0x0,0x1c(%eax)
    mov    %edx,0x18(%eax)
    mov    %eax,%edx
    mov    %ecx,0xc(%eax)
    add    $0x10,%edx
    xor    %ebx,%ebx
    mov    %edx,0x4(%eax)
    call   func_7a254
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7a254:
/*----------------------------------------------------------------*/
    mov    %edx,0x4(%eax)
    mov    %ebx,0x8(%eax)
    mov    data_13330c,%edx
    mov    %edx,(%eax)
    mov    %eax,data_13330c
    mov    $data_13330c,%eax
    ret


/*----------------------------------------------------------------*/
func_7a27e:
/*----------------------------------------------------------------*/
    push   %edx
    mov    (%eax),%edx
    mov    (%edx),%edx
    mov    %edx,(%eax)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7a287:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %edx,(%esp)
    mov    %ebx,%edi
    mov    0x10(%eax),%ah
    xor    %edx,%edx
    xor    %ebp,%ebp
    and    $0xfd,%ah
    mov    %edx,0x4(%esp)
    mov    %ah,0x10(%esi)
  jump_7a2a6:
    mov    (%esp),%ebx
    lea    0x1(%ebx),%ecx
    mov    %ecx,(%esp)
    mov    (%ebx),%bl
    and    $0xff,%ebx
    je     jump_7a488
    mov    %bl,%al
    inc    %al
    and    $0xff,%eax
    testb  $0x2,data_96230(%eax)
    je     jump_7a2dd
    mov    %esi,%eax
    call   func_7a581
    add    %eax,%ebp
    jmp    jump_7a454
  jump_7a2dd:
    cmp    $0x25,%ebx
    je     jump_7a302
    mov    %esi,%eax
    call   *(%esi)
    cmp    %ebx,%eax
    je     jump_7a453
  jump_7a2ee:
    testb  $0x2,0x10(%esi)
    jne    jump_7a488
    mov    %esi,%edx
    call   *0x4(%esi)
    jmp    jump_7a488
  jump_7a302:
    mov    %ecx,%eax
    mov    %esi,%edx
    call   func_7a4a8
    xor    %ebx,%ebx
    mov    %eax,(%esp)
    mov    (%eax),%bl
    mov    %eax,%edx
    test   %ebx,%ebx
    je     jump_7a31e
    lea    0x1(%eax),%edx
    mov    %edx,(%esp)
  jump_7a31e:
    cmp    $0x65,%ebx
    jb     jump_7a378
    cmp    $0x67,%ebx
    jbe    jump_7a3fa
    cmp    $0x70,%ebx
    jb     jump_7a35e
    jbe    jump_7a3f3
    cmp    $0x75,%ebx
    jb     jump_7a350
    jbe    jump_7a3e6
    cmp    $0x78,%ebx
    je     jump_7a3f3
    jmp    jump_7a454
  jump_7a350:
    cmp    $0x73,%ebx
    je     jump_7a405
    jmp    jump_7a454
  jump_7a35e:
    cmp    $0x6e,%ebx
    jb     jump_7a36e
    jbe    jump_7a43a
    jmp    jump_7a3df
  jump_7a36e:
    cmp    $0x69,%ebx
    je     jump_7a3d2
    jmp    jump_7a454
  jump_7a378:
    cmp    $0x58,%ebx
    jb     jump_7a39e
    jbe    jump_7a3f3
    cmp    $0x63,%ebx
    jb     jump_7a390
    jbe    jump_7a41d
    jmp    jump_7a3bd
  jump_7a390:
    cmp    $0x5b,%ebx
    je     jump_7a410
    jmp    jump_7a454
  jump_7a39e:
    cmp    $0x45,%ebx
    jb     jump_7a3af
    jbe    jump_7a3fa
    cmp    $0x47,%ebx
    je     jump_7a3fa
    jmp    jump_7a454
  jump_7a3af:
    cmp    $0x25,%ebx
    je     jump_7a447
    jmp    jump_7a454
  jump_7a3bd:
    mov    $0xa,%ebx
  jump_7a3c2:
    mov    $0x1,%ecx
    mov    %esi,%eax
    mov    %edi,%edx
  jump_7a3cb:
    call   func_7ab8f
    jmp    jump_7a426
  jump_7a3d2:
    mov    $0x1,%ecx
    mov    %esi,%eax
    mov    %edi,%edx
    xor    %ebx,%ebx
    jmp    jump_7a3cb
  jump_7a3df:
    mov    $0x8,%ebx
    jmp    jump_7a3c2
  jump_7a3e6:
    mov    $0xa,%ebx
    mov    %esi,%eax
    mov    %edi,%edx
    xor    %ecx,%ecx
    jmp    jump_7a3cb
  jump_7a3f3:
    mov    $0x10,%ebx
    jmp    jump_7a3c2
  jump_7a3fa:
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_7a8b1
    jmp    jump_7a426
  jump_7a405:
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_7a63c
    jmp    jump_7a426
  jump_7a410:
    mov    %esp,%ebx
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_7a7cb
    jmp    jump_7a426
  jump_7a41d:
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_7a5b6
  jump_7a426:
    test   %eax,%eax
    jle    jump_7a488
    mov    0x10(%esi),%dh
    add    %eax,%ebp
    test   $0x1,%dh
    je     jump_7a454
    incl   0x4(%esp)
    jmp    jump_7a454
  jump_7a43a:
    mov    %esi,%eax
    mov    %edi,%edx
    mov    %ebp,%ebx
    call   func_7a72a
    jmp    jump_7a454
  jump_7a447:
    mov    %esi,%eax
    call   *(%esi)
    cmp    %ebx,%eax
    jne    jump_7a2ee
  jump_7a453:
    inc    %ebp
  jump_7a454:
    testb  $0x2,0x10(%esi)
    je     jump_7a2a6
    mov    (%esp),%eax
    cmpb   $0x25,(%eax)
    jne    jump_7a488
    lea    0x1(%eax),%edx
    mov    %edx,(%esp)
    mov    %edx,%eax
    mov    %esi,%edx
    call   func_7a4a8
    mov    %eax,(%esp)
    cmpb   $0x6e,(%eax)
    jne    jump_7a488
    mov    %esi,%eax
    mov    %edi,%edx
    mov    %ebp,%ebx
    call   func_7a72a
  jump_7a488:
    cmpl   $0x0,0x4(%esp)
    jne    jump_7a49c
    testb  $0x2,0x10(%esi)
    je     jump_7a49c
    mov    $0xffffffff,%eax
    jmp    jump_7a4a0
  jump_7a49c:
    mov    0x4(%esp),%eax
  jump_7a4a0:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7a4a8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    sub    $0x4,%esp
    mov    %edx,%ebx
    mov    0x10(%edx),%dl
    or     $0x1,%dl
    movl   $0xffffffff,0xc(%ebx)
    mov    %dl,%dh
    mov    %dl,0x10(%ebx)
    and    $0x3,%dh
    mov    %dh,0x10(%ebx)
    cmpb   $0x2a,(%eax)
    jne    jump_7a4d7
    mov    0x10(%ebx),%ch
    and    $0xfe,%ch
    inc    %eax
    mov    %ch,0x10(%ebx)
  jump_7a4d7:
    xor    %edx,%edx
    mov    (%eax),%dl
    mov    %edx,(%esp)
    mov    (%esp),%dl
    inc    %dl
    and    $0xff,%edx
    testb  $0x20,data_96230(%edx)
    je     jump_7a51a
    xor    %edx,%edx
  jump_7a4f4:
    imul   $0xa,%edx,%edx
    mov    (%esp),%esi
    sub    $0x30,%esi
    inc    %eax
    add    %esi,%edx
    movzbl (%eax),%esi
    mov    %esi,(%esp)
    mov    (%esp),%cl
    inc    %cl
    movzbl %cl,%esi
    testb  $0x20,data_96230(%esi)
    jne    jump_7a4f4
    mov    %edx,0xc(%ebx)
  jump_7a51a:
    mov    (%eax),%cl
    lea    0x1(%eax),%edx
    cmp    $0x4e,%cl
    jne    jump_7a52a
    orb    $0x8,0x10(%ebx)
    jmp    jump_7a533
  jump_7a52a:
    cmp    $0x46,%cl
    jne    jump_7a535
    orb    $0x4,0x10(%ebx)
  jump_7a533:
    mov    %edx,%eax
  jump_7a535:
    mov    (%eax),%cl
    lea    0x1(%eax),%edx
    cmp    $0x68,%cl
    jb     jump_7a54f
    jbe    jump_7a556
    cmp    $0x6c,%cl
    jb     jump_7a57a
    jbe    jump_7a563
    cmp    $0x77,%cl
    je     jump_7a563
    jmp    jump_7a57a
  jump_7a54f:
    cmp    $0x4c,%cl
    je     jump_7a56f
    jmp    jump_7a57a
  jump_7a556:
    mov    0x10(%ebx),%cl
    or     $0x10,%cl
    mov    %edx,%eax
    mov    %cl,0x10(%ebx)
    jmp    jump_7a57a
  jump_7a563:
    mov    0x10(%ebx),%dl
    or     $0x20,%dl
    inc    %eax
    mov    %dl,0x10(%ebx)
    jmp    jump_7a57a
  jump_7a56f:
    mov    0x10(%ebx),%ch
    or     $0x40,%ch
    mov    %edx,%eax
    mov    %ch,0x10(%ebx)
  jump_7a57a:
    add    $0x4,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7a581:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ebx
    xor    %ecx,%ecx
  jump_7a589:
    mov    %ebx,%eax
    call   *(%ebx)
    mov    %eax,%esi
    inc    %al
    and    $0xff,%eax
    testb  $0x2,data_96230(%eax)
    je     jump_7a5a2
    inc    %ecx
    jmp    jump_7a589
  jump_7a5a2:
    testb  $0x2,0x10(%ebx)
    jne    jump_7a5af
    mov    %esi,%eax
    mov    %ebx,%edx
    call   *0x4(%ebx)
  jump_7a5af:
    mov    %ecx,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7a5b6:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    mov    %eax,%ebx
    testb  $0x1,0x10(%eax)
    je     jump_7a5fa
    mov    0x10(%ebx),%cl
    test   $0x4,%cl
    je     jump_7a5d7
    mov    (%edx),%edi
    add    $0x8,%edi
    mov    %edi,(%edx)
    les    -0x8(%edi),%ecx
    jmp    jump_7a5fa
  jump_7a5d7:
    test   $0x8,%cl
    je     jump_7a5ec
    mov    (%edx),%esi
    add    $0x4,%esi
    mov    %ds,%eax
    mov    %esi,(%edx)
    mov    %eax,%es
    mov    -0x4(%esi),%ecx
    jmp    jump_7a5fa
  jump_7a5ec:
    mov    (%edx),%ecx
    add    $0x4,%ecx
    mov    %ds,%eax
    mov    %ecx,(%edx)
    mov    %eax,%es
    mov    -0x4(%ecx),%ecx
  jump_7a5fa:
    mov    0xc(%ebx),%edx
    xor    %esi,%esi
    cmp    $0xffffffff,%edx
    jne    jump_7a609
    mov    $0x1,%edx
  jump_7a609:
    test   %edx,%edx
    jle    jump_7a634
    mov    %ebx,%eax
    call   *(%ebx)
    testb  $0x2,0x10(%ebx)
    jne    jump_7a634
    inc    %esi
    dec    %edx
    testb  $0x1,0x10(%ebx)
    je     jump_7a609
    testb  $0x20,0x10(%ebx)
    je     jump_7a62e
    mov    %ax,%es:(%ecx)
    add    $0x2,%ecx
    jmp    jump_7a609
  jump_7a62e:
    mov    %al,%es:(%ecx)
    inc    %ecx
    jmp    jump_7a609
  jump_7a634:
    mov    %esi,%eax
  jump_7a636:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7a63c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    sub    $0x4,%esp
    mov    %eax,%ebx
    testb  $0x20,0x10(%eax)
    je     jump_7a652
    movb   $0x2,(%esp)
    jmp    jump_7a65a
  jump_7a652:
    testb  $0x10,0x10(%ebx)
    movb   $0x1,(%esp)
  jump_7a65a:
    mov    0x10(%ebx),%al
    test   $0x1,%al
    je     jump_7a693
    test   $0x4,%al
    je     jump_7a671
    mov    (%edx),%edi
    add    $0x8,%edi
    mov    %edi,(%edx)
    les    -0x8(%edi),%ecx
    jmp    jump_7a693
  jump_7a671:
    test   $0x8,%al
    je     jump_7a685
    mov    (%edx),%esi
    add    $0x4,%esi
    mov    %esi,(%edx)
    mov    %ds,%edx
    mov    %edx,%es
    mov    -0x4(%esi),%ecx
    jmp    jump_7a693
  jump_7a685:
    mov    (%edx),%ecx
    add    $0x4,%ecx
    mov    %ecx,(%edx)
    mov    %ds,%edx
    mov    %edx,%es
    mov    -0x4(%ecx),%ecx
  jump_7a693:
    xor    %esi,%esi
  jump_7a695:
    mov    %ebx,%eax
    call   *(%ebx)
    mov    %eax,%edx
    inc    %al
    movzbl %al,%edi
    testb  $0x2,data_96230(%edi)
    je     jump_7a6ac
    inc    %esi
    jmp    jump_7a695
  jump_7a6ac:
    testb  $0x2,0x10(%ebx)
    je     jump_7a6b6
    xor    %esi,%esi
    jmp    jump_7a704
  jump_7a6b6:
    mov    0xc(%ebx),%edi
    lea    -0x1(%edi),%eax
    mov    %eax,0xc(%ebx)
    test   %edi,%edi
    je     jump_7a6fd
  jump_7a6c3:
    mov    0x10(%ebx),%al
    inc    %esi
    test   $0x1,%al
    je     jump_7a6e1
    cmpb   $0x1,(%esp)
    jne    jump_7a6d6
    mov    %dl,%es:(%ecx)
    jmp    jump_7a6da
  jump_7a6d6:
    mov    %dx,%es:(%ecx)
  jump_7a6da:
    xor    %edx,%edx
    mov    (%esp),%dl
    add    %edx,%ecx
  jump_7a6e1:
    mov    %ebx,%eax
    call   func_7adae
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_7a704
    inc    %al
    movzbl %al,%edi
    testb  $0x2,data_96230(%edi)
    je     jump_7a6c3
  jump_7a6fd:
    mov    %edx,%eax
    mov    %ebx,%edx
    call   *0x4(%ebx)
  jump_7a704:
    testb  $0x1,0x10(%ebx)
    je     jump_7a720
    test   %esi,%esi
    jle    jump_7a720
    cmpb   $0x1,(%esp)
    jne    jump_7a71a
    movb   $0x0,%es:(%ecx)
    jmp    jump_7a720
  jump_7a71a:
    movw   $0x0,%es:(%ecx)
  jump_7a720:
    mov    %esi,%eax
    add    $0x4,%esp
    jmp    jump_7a636


/*----------------------------------------------------------------*/
func_7a72a:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    mov    0x10(%eax),%cl
    test   $0x1,%cl
    je     jump_7a783
    test   $0x4,%cl
    je     jump_7a747
    mov    (%edx),%edi
    add    $0x8,%edi
    mov    %edi,(%edx)
    les    -0x8(%edi),%edx
    jmp    jump_7a76c
  jump_7a747:
    test   $0x8,%cl
    je     jump_7a75c
    mov    (%edx),%esi
    add    $0x4,%esi
    mov    %ds,%ecx
    mov    %esi,(%edx)
    mov    %ecx,%es
    mov    -0x4(%esi),%edx
    jmp    jump_7a76c
  jump_7a75c:
    mov    (%edx),%ecx
    add    $0x4,%ecx
    mov    %ecx,(%edx)
    mov    %ecx,%edx
    mov    %ds,%ecx
    mov    %ecx,%es
    mov    -0x4(%edx),%edx
  jump_7a76c:
    mov    0x10(%eax),%ch
    test   $0x10,%ch
    je     jump_7a77d
    mov    %bx,%es:(%edx)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_7a77d:
    test   $0x20,%ch
    mov    %ebx,%es:(%edx)
  jump_7a783:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7a788:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    $0x20,%ebx
    mov    %edx,%eax
    xor    %edx,%edx
    call   func_76ec0
    xor    %eax,%eax
    mov    (%ecx),%al
    inc    %ecx
    test   %eax,%eax
    je     jump_7a7c5
  jump_7a7a6:
    mov    %eax,%edx
    and    $0x7,%eax
    sar    $0x3,%edx
    mov    data_96334(%eax),%al
    or     %al,(%edx,%esi,1)
    xor    %eax,%eax
    mov    (%ecx),%al
    test   %eax,%eax
    je     jump_7a7c5
    inc    %ecx
    cmp    $0x5d,%eax
    jne    jump_7a7a6
  jump_7a7c5:
    mov    %ecx,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7a7cb:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    sub    $0x28,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    mov    (%ebx),%eax
    cmpb   $0x5e,(%eax)
    sete   %dl
    and    $0xff,%edx
    mov    %edx,0x20(%esp)
    je     jump_7a7ee
    inc    %eax
    mov    %eax,(%ebx)
  jump_7a7ee:
    mov    %esp,%edx
    mov    (%ebx),%eax
    call   func_7a788
    mov    %eax,(%ebx)
    mov    0x10(%ecx),%bl
    test   $0x1,%bl
    je     jump_7a835
    test   $0x4,%bl
    je     jump_7a812
    mov    (%edi),%esi
    add    $0x8,%esi
    mov    %esi,(%edi)
    les    -0x8(%esi),%esi
    jmp    jump_7a835
  jump_7a812:
    test   $0x8,%bl
    je     jump_7a827
    mov    (%edi),%ebx
    add    $0x4,%ebx
    mov    %ds,%eax
    mov    %ebx,(%edi)
    mov    %eax,%es
    mov    -0x4(%ebx),%esi
    jmp    jump_7a835
  jump_7a827:
    mov    (%edi),%edx
    add    $0x4,%edx
    mov    %ds,%eax
    mov    %edx,(%edi)
    mov    %eax,%es
    mov    -0x4(%edx),%esi
  jump_7a835:
    mov    0x20(%esp),%ebp
    xor    %edi,%edi
    mov    0xc(%ecx),%ebx
    mov    %edi,0x24(%esp)
  jump_7a842:
    test   %ebx,%ebx
    jbe    jump_7a893
    mov    %ecx,%eax
    call   *(%ecx)
    mov    %eax,%edx
    testb  $0x2,0x10(%ecx)
    jne    jump_7a893
    mov    %eax,%edi
    and    $0x7,%edx
    sar    $0x3,%edi
    mov    data_96334(%edx),%dl
    movzbl (%esp,%edi,1),%edi
    and    $0xff,%edx
    test   %edx,%edi
    sete   %dl
    and    $0xff,%edx
    cmp    %ebp,%edx
    je     jump_7a880
    mov    %ecx,%edx
    call   *0x4(%ecx)
    jmp    jump_7a893
  jump_7a880:
    incl   0x24(%esp)
    mov    0x10(%ecx),%dl
    dec    %ebx
    test   $0x1,%dl
    je     jump_7a842
    mov    %al,%es:(%esi)
    inc    %esi
    jmp    jump_7a842
  jump_7a893:
    testb  $0x1,0x10(%ecx)
    je     jump_7a8a4
    cmpl   $0x0,0x24(%esp)
    jle    jump_7a8a4
    movb   $0x0,%es:(%esi)
  jump_7a8a4:
    mov    0x24(%esp),%eax
    add    $0x28,%esp
    pop    %ebp
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7a8b1:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    sub    $0x70,%esp
    mov    %eax,%ecx
    mov    %edx,0x58(%esp)
    xor    %edi,%edi
    mov    %esp,%esi
    mov    %edi,0x6c(%esp)
  jump_7a8c8:
    mov    %ecx,%eax
    call   *(%ecx)
    mov    %eax,%ebp
    mov    %eax,%ebx
    inc    %al
    and    $0xff,%eax
    testb  $0x2,data_96230(%eax)
    je     jump_7a8e6
    incl   0x6c(%esp)
    jmp    jump_7a8c8
  jump_7a8e6:
    testb  $0x2,0x10(%ecx)
    jne    jump_7aad1
    mov    0xc(%ecx),%eax
    lea    -0x1(%eax),%edx
    mov    %edx,0xc(%ecx)
    test   %eax,%eax
    je     jump_7aaca
    cmp    $0x2b,%ebp
    je     jump_7a90b
    cmp    $0x2d,%ebp
    jne    jump_7a929
  jump_7a90b:
    mov    0x6c(%esp),%ebp
    mov    %ecx,%eax
    mov    %bl,(%esi)
    call   func_7adae
    inc    %esi
    inc    %ebp
    mov    %eax,%ebx
    mov    %ebp,0x6c(%esp)
    cmp    $0xffffffff,%eax
    je     jump_7aad1
  jump_7a929:
    mov    %bl,%al
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_96230(%eax)
    jne    jump_7a944
    cmp    $0x2e,%ebx
    jne    jump_7aaca
  jump_7a944:
    xor    %eax,%eax
    mov    %eax,0x68(%esp)
    mov    %eax,0x5c(%esp)
    mov    %bl,%al
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_96230(%eax)
    je     jump_7a9a4
    movl   $0x1,0x5c(%esp)
  jump_7a968:
    mov    %bl,(%esi)
    mov    0x10(%ecx),%al
    inc    %esi
    test   $0x10,%al
    je     jump_7a981
    imul   $0xa,0x6a(%esp),%eax
    add    %eax,%ebx
    sub    $0x30,%ebx
    mov    %bx,0x6a(%esp)
  jump_7a981:
    mov    %ecx,%eax
    inc    %edi
    call   func_7adae
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_7aad1
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_96230(%eax)
    jne    jump_7a968
  jump_7a9a4:
    cmp    $0x2e,%ebx
    jne    jump_7aa4a
    mov    %ecx,%eax
    mov    %bl,(%esi)
    call   func_7adae
    inc    %esi
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_7aad1
    cmpl   $0x0,0x5c(%esp)
    jne    jump_7a9df
    mov    %bl,%al
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_96230(%eax)
    je     jump_7aaca
  jump_7a9df:
    inc    %edi
  jump_7a9e0:
    mov    %bl,%al
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_96230(%eax)
    je     jump_7aa04
    inc    %edi
    mov    %ecx,%eax
    mov    %bl,(%esi)
    call   func_7adae
    inc    %esi
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    jne    jump_7a9e0
  jump_7aa04:
    testb  $0x10,0x10(%ecx)
    je     jump_7aa41
    xor    %edx,%edx
    mov    %esi,%ebp
    mov    %edx,0x64(%esp)
  jump_7aa12:
    dec    %ebp
    mov    0x0(%ebp),%al
    cmp    $0x2e,%al
    je     jump_7aa38
    sub    $0x30,%al
    movl   $0xa,0x60(%esp)
    mov    %al,0x66(%esp)
    xor    %edx,%edx
    mov    0x64(%esp),%eax
    divl   0x60(%esp)
    mov    %eax,0x64(%esp)
    jmp    jump_7aa12
  jump_7aa38:
    mov    0x64(%esp),%eax
    mov    %ax,0x68(%esp)
  jump_7aa41:
    cmp    $0xffffffff,%ebx
    je     jump_7aad1
  jump_7aa4a:
    testb  $0x10,0x10(%ecx)
    jne    jump_7aaca
    cmp    $0x65,%ebx
    je     jump_7aa62
    cmp    $0x45,%ebx
    jne    jump_7aaca
  jump_7aa62:
    inc    %edi
    mov    %ecx,%eax
    mov    %bl,(%esi)
    call   func_7adae
    inc    %esi
    mov    %eax,%ebp
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_7aad1
    cmp    $0x2b,%eax
    je     jump_7aa80
    cmp    $0x2d,%eax
    jne    jump_7aa92
  jump_7aa80:
    inc    %edi
    mov    %ecx,%eax
    mov    %bl,(%esi)
    call   func_7adae
    inc    %esi
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_7aad1
  jump_7aa92:
    mov    %bl,%al
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_96230(%eax)
    jne    jump_7aaa8
    xor    %edi,%edi
    jmp    jump_7aaca
  jump_7aaa8:
    inc    %edi
    mov    %ecx,%eax
    mov    %bl,(%esi)
    call   func_7adae
    inc    %esi
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_7aad1
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_96230(%eax)
    jne    jump_7aaa8
  jump_7aaca:
    mov    %ebx,%eax
    mov    %ecx,%edx
    call   *0x4(%ecx)
  jump_7aad1:
    test   %edi,%edi
    jle    jump_7ab84
    add    0x6c(%esp),%edi
    testb  $0x1,0x10(%ecx)
    je     jump_7ab84
    movb   $0x0,(%esi)
    testb  $0x10,0x10(%ecx)
    je     jump_7aafc
    cmpb   $0x2d,(%esp)
    jne    jump_7ab08
    negl   0x68(%esp)
    jmp    jump_7ab08
  jump_7aafc:
    mov    %esp,%eax
    lea    0x50(%esp),%edx
    call   *data_99ca4
  jump_7ab08:
    mov    0x10(%ecx),%ah
    test   $0x4,%ah
    je     jump_7ab20
    mov    0x58(%esp),%eax
    mov    (%eax),%ebx
    add    $0x8,%ebx
    mov    %ebx,(%eax)
    les    -0x8(%ebx),%ebx
    jmp    jump_7ab4b
  jump_7ab20:
    test   $0x8,%ah
    je     jump_7ab39
    mov    0x58(%esp),%eax
    mov    (%eax),%edx
    add    $0x4,%edx
    mov    %edx,(%eax)
    mov    %ds,%eax
    mov    %eax,%es
    mov    -0x4(%edx),%ebx
    jmp    jump_7ab4b
  jump_7ab39:
    mov    0x58(%esp),%eax
    mov    (%eax),%ebp
    add    $0x4,%ebp
    mov    %ebp,(%eax)
    mov    %ds,%eax
    mov    %eax,%es
    mov    -0x4(%ebp),%ebx
  jump_7ab4b:
    mov    0x10(%ecx),%dh
    test   $0x10,%dh
    je     jump_7ab59
    mov    0x68(%esp),%eax
    jmp    jump_7ab81
  jump_7ab59:
    test   $0x20,%dh
    jne    jump_7ab63
    test   $0x40,%dh
    je     jump_7ab74
  jump_7ab63:
    mov    0x50(%esp),%eax
    mov    %eax,%es:(%ebx)
    mov    0x54(%esp),%eax
    mov    %eax,%es:0x4(%ebx)
    jmp    jump_7ab84
  jump_7ab74:
    mov    0x50(%esp),%eax
    mov    0x54(%esp),%edx
    call   func_80882
  jump_7ab81:
    mov    %eax,%es:(%ebx)
  jump_7ab84:
    mov    %edi,%eax
    add    $0x70,%esp
    pop    %ebp
    jmp    jump_7a636


/*----------------------------------------------------------------*/
func_7ab8f:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%esi
    mov    %edx,0xc(%esp)
    mov    %ebx,%edi
    mov    %ecx,0x4(%esp)
    xor    %edx,%edx
    xor    %ebx,%ebx
    xor    %ebp,%ebp
    mov    %edx,0x8(%esp)
  jump_7abac:
    mov    %esi,%eax
    call   *(%esi)
    mov    %eax,%edx
    inc    %al
    and    $0xff,%eax
    testb  $0x2,data_96230(%eax)
    je     jump_7abc5
    inc    %ebp
    jmp    jump_7abac
  jump_7abc5:
    testb  $0x2,0x10(%esi)
    jne    jump_7ad05
    mov    0xc(%esi),%eax
    lea    -0x1(%eax),%ecx
    mov    %ecx,0xc(%esi)
    test   %eax,%eax
    je     jump_7acfe
    mov    $0x2b,%ecx
    mov    0x4(%esp),%eax
    mov    %ecx,(%esp)
    test   %eax,%eax
    je     jump_7ac10
    cmp    $0x2b,%edx
    je     jump_7abfa
    cmp    $0x2d,%edx
    jne    jump_7ac10
  jump_7abfa:
    mov    %edx,(%esp)
    mov    %esi,%eax
    inc    %ebp
    call   func_7adae
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_7ad05
  jump_7ac10:
    test   %edi,%edi
    jne    jump_7ac68
    cmp    $0x30,%edx
    jne    jump_7ac61
    mov    %esi,%eax
    mov    $0x1,%ebx
    call   func_7adae
    mov    %eax,%ecx
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_7ad05
    cmp    $0x78,%eax
    je     jump_7ac3c
    cmp    $0x58,%eax
    jne    jump_7ac5a
  jump_7ac3c:
    mov    %esi,%eax
    add    $0x2,%ebp
    call   func_7adae
    xor    %ebx,%ebx
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_7ad05
    mov    $0x10,%edi
    jmp    jump_7aca8
  jump_7ac5a:
    mov    $0x8,%edi
    jmp    jump_7aca8
  jump_7ac61:
    mov    $0xa,%edi
    jmp    jump_7aca8
  jump_7ac68:
    cmp    $0x10,%edi
    jne    jump_7aca8
    cmp    $0x30,%edx
    jne    jump_7aca8
    mov    %esi,%eax
    mov    $0x1,%ebx
    call   func_7adae
    mov    %eax,%ecx
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_7ad05
    cmp    $0x78,%eax
    je     jump_7ac95
    cmp    $0x58,%eax
    jne    jump_7aca8
  jump_7ac95:
    mov    %esi,%eax
    add    $0x2,%ebp
    call   func_7adae
    xor    %ebx,%ebx
  jump_7aca1:
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_7ad05
  jump_7aca8:
    mov    %edx,%eax
    call   func_7ad87
    cmp    %edi,%eax
    jge    jump_7acca
    mov    0x8(%esp),%edx
    imul   %edi,%edx
    inc    %ebx
    add    %eax,%edx
    mov    %esi,%eax
    mov    %edx,0x8(%esp)
    call   func_7adae
    jmp    jump_7aca1
  jump_7acca:
    cmp    $0x3a,%edx
    jne    jump_7acfe
    testb  $0x80,0x10(%esi)
    je     jump_7acfe
  jump_7acd5:
    mov    %esi,%eax
    inc    %ebx
    call   func_7adae
    mov    %eax,%ecx
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_7ad05
    call   func_7ad87
    cmp    %edi,%eax
    jge    jump_7acfe
    mov    0x8(%esp),%edx
    imul   %edi,%edx
    add    %eax,%edx
    mov    %edx,0x8(%esp)
    jmp    jump_7acd5
  jump_7acfe:
    mov    %edx,%eax
    mov    %esi,%edx
    call   *0x4(%esi)
  jump_7ad05:
    cmpl   $0x2d,(%esp)
    jne    jump_7ad0f
    negl   0x8(%esp)
  jump_7ad0f:
    test   %ebx,%ebx
    jle    jump_7ad7d
    mov    0x10(%esi),%ah
    add    %ebp,%ebx
    test   $0x1,%ah
    je     jump_7ad7d
    test   $0x4,%ah
    je     jump_7ad36
    mov    0xc(%esp),%eax
    mov    (%eax),%edx
    add    $0x8,%edx
    mov    %edx,(%eax)
    les    -0x8(%edx),%eax
    jmp    jump_7ad61
  jump_7ad36:
    test   $0x8,%ah
    je     jump_7ad4f
    mov    0xc(%esp),%eax
    mov    (%eax),%ebp
    add    $0x4,%ebp
    mov    %ds,%edx
    mov    %ebp,(%eax)
    mov    %edx,%es
    mov    -0x4(%ebp),%eax
    jmp    jump_7ad61
  jump_7ad4f:
    mov    0xc(%esp),%eax
    mov    (%eax),%edi
    add    $0x4,%edi
    mov    %ds,%edx
    mov    %edi,(%eax)
    mov    %edx,%es
    mov    -0x4(%edi),%eax
  jump_7ad61:
    mov    0x10(%esi),%cl
    test   $0x10,%cl
    je     jump_7ad73
    mov    0x8(%esp),%edx
    mov    %dx,%es:(%eax)
    jmp    jump_7ad7d
  jump_7ad73:
    test   $0x20,%cl
    mov    0x8(%esp),%edx
    mov    %edx,%es:(%eax)
  jump_7ad7d:
    mov    %ebx,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %es
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7ad87:
/*----------------------------------------------------------------*/
    cmp    $0x30,%eax
    jl     jump_7ad95
    cmp    $0x39,%eax
    jg     jump_7ad95
    sub    $0x30,%eax
    ret
  jump_7ad95:
    call   func_7b1fe
    cmp    $0x61,%eax
    jl     jump_7ada8
    cmp    $0x66,%eax
    jg     jump_7ada8
    sub    $0x57,%eax
    ret
  jump_7ada8:
    mov    $0x10,%eax
    ret


/*----------------------------------------------------------------*/
func_7adae:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    0xc(%eax),%eax
    lea    -0x1(%eax),%ebx
    mov    %ebx,0xc(%edx)
    test   %eax,%eax
    je     jump_7adc9
    mov    %edx,%eax
    call   *(%edx)
    testb  $0x2,0x10(%edx)
    je     jump_7adce
  jump_7adc9:
    mov    $0xffffffff,%eax
  jump_7adce:
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7add2:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    data_133300,%esi
    test   %esi,%esi
    je     jump_7adfa
    mov    0x4(%esi),%ecx
    mov    0xc(%ecx),%edi
    mov    (%esi),%eax
    and    $0x4003,%edi
    mov    %eax,data_133300
    or     $0x3,%di
    jmp    jump_7ae43
  jump_7adfa:
    mov    $data_999e0,%ecx
    jmp    jump_7ae21
  jump_7ae01:
    testb  $0x3,0xc(%ecx)
    jne    jump_7ae1e
    mov    $0x8,%eax
    call   func_78734
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_7ae68
    mov    $0x3,%edi
    jmp    jump_7ae43
  jump_7ae1e:
    add    $0x1a,%ecx
  jump_7ae21:
    cmp    $data_99be8,%ecx
    jb     jump_7ae01
    mov    $0x22,%eax
    mov    $0x4003,%edi
    call   func_78734
    mov    %eax,%ecx
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_7ae68
    lea    0x8(%eax),%ecx
  jump_7ae43:
    mov    $0x1a,%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_76ec0
    mov    %edi,0xc(%ecx)
    mov    data_1332fc,%eax
    mov    %ecx,0x4(%esi)
    mov    %esi,data_1332fc
    mov    %eax,(%esi)
    mov    %ecx,%eax
    jmp    jump_7ae74
  jump_7ae68:
    mov    $0x5,%eax
    call   func_7b1c8
    xor    %eax,%eax
  jump_7ae74:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7ae7a:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ebx
    mov    $data_1332fc,%edx
  jump_7ae84:
    mov    (%edx),%eax
    test   %eax,%eax
    je     jump_7aeaf
    mov    0x4(%eax),%ecx
    cmp    %ecx,%ebx
    je     jump_7ae95
    mov    %eax,%edx
    jmp    jump_7ae84
  jump_7ae95:
    mov    0xc(%ecx),%cl
    or     $0x3,%cl
    mov    %cl,0xc(%ebx)
    mov    (%eax),%ebx
    mov    %ebx,(%edx)
    mov    data_133300,%edx
    mov    %eax,data_133300
    mov    %edx,(%eax)
  jump_7aeaf:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_7aeb3:
    push   %edx
  jump_7aeb4:
    mov    data_133300,%edx
    test   %edx,%edx
    je     jump_7aecf
    mov    %edx,%eax
    mov    (%edx),%edx
    call   func_7882f
    mov    %edx,data_133300
    jmp    jump_7aeb4
  jump_7aecf:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7aed1:
/*----------------------------------------------------------------*/
    mov    data_99930,%eax
    ret


/*----------------------------------------------------------------*/
func_7aed7:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    mov    0xd(%eax),%ah
    xor    %esi,%esi
    test   $0x10,%ah
    je     jump_7af44
    mov    0xd(%ecx),%bh
    and    $0xef,%bh
    mov    0xc(%ecx),%al
    mov    %bh,0xd(%ecx)
    test   $0x2,%al
    je     jump_7af83
    cmpl   $0x0,0x8(%ecx)
    je     jump_7af83
    mov    0x4(%ecx),%ebx
    mov    0x8(%ecx),%edx
    mov    0x10(%ecx),%eax
    call   func_809a9
    cmp    $0xffffffff,%eax
    jne    jump_7af25
    mov    0xc(%ecx),%dl
    or     $0x20,%dl
    mov    %eax,%esi
    mov    %dl,0xc(%ecx)
    jmp    jump_7af83
  jump_7af25:
    cmp    0x4(%ecx),%eax
    je     jump_7af83
    mov    $0xc,%eax
    call   func_7b1c8
    mov    0xc(%ecx),%ah
    or     $0x20,%ah
    mov    $0xffffffff,%esi
    mov    %ah,0xc(%ecx)
    jmp    jump_7af83
  jump_7af44:
    cmpl   $0x0,0x8(%ecx)
    je     jump_7af83
    mov    0xc(%ecx),%dl
    and    $0xef,%dl
    mov    0xd(%ecx),%dh
    mov    %dl,0xc(%ecx)
    test   $0x20,%dh
    jne    jump_7af83
    mov    0x4(%ecx),%eax
    test   %eax,%eax
    je     jump_7af73
    mov    %eax,%edx
    mov    $0x1,%ebx
    neg    %edx
    mov    0x10(%ecx),%eax
    call   func_77a30
  jump_7af73:
    cmp    $0xffffffff,%eax
    jne    jump_7af83
    mov    0xc(%ecx),%bl
    or     $0x20,%bl
    mov    %eax,%esi
    mov    %bl,0xc(%ecx)
  jump_7af83:
    mov    0x8(%ecx),%eax
    movl   $0x0,0x4(%ecx)
    mov    %eax,(%ecx)
    mov    %esi,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7af96:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    %eax,%ebx
    mov    $0x3e,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    test   %eax,%eax
    jl     jump_7afb6
    mov    %edx,%eax
    xor    %edx,%edx
    call   func_7b292
    xor    %eax,%eax
    pop    %edx
    pop    %ebx
    ret
  jump_7afb6:
    mov    $0x4,%eax
    call   func_7b1c8
    mov    $0xffffffff,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7afc8:
/*----------------------------------------------------------------*/
    jmp    jump_80a25


/*----------------------------------------------------------------*/
func_7afd0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    call   func_80b1d
    mov    %eax,%ebx
    test   %eax,%eax
    je     jump_7b014
    cmpl   $0x0,(%eax)
    jne    jump_7b014
    mov    0x4(%edx),%ecx
    cmp    0x9(%edx),%ecx
    jne    jump_7aff6
    jmp    jump_7b014
  jump_7afef:
    call   func_80bc7
    jmp    jump_7b014
  jump_7aff6:
    mov    0x4(%eax),%eax
    mov    (%eax),%ax
    cmp    $0x2,%ax
    jb     jump_7afef
    cmp    $0x4,%ax
    jbe    jump_7b014
    cmp    $0x5,%ax
    jbe    jump_7afef
    cmp    $0xb,%ax
    ja     jump_7afef
  jump_7b014:
    mov    %ebx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b01a:
/*----------------------------------------------------------------*/
    push   %esi
    mov    %eax,%esi
    mov    0x2(%eax),%eax
    add    %ebx,%eax
    movzbl 0x4(%eax),%ebx
    test   %ecx,%ebx
    jne    jump_7b032
    mov    (%eax),%eax
    add    0x6(%esi),%eax
    call   *0xa(%esi)
  jump_7b032:
    pop    %esi
    ret

vtable_7b034:
    .long   func_7b0a2
    .long   func_7b09d
    .long   func_7b105
    .long   func_7b105
    .long   func_7b105
    .long   func_7b09d
    .long   func_7b0c3
    .long   func_7b0d8
    .long   func_7b0df
    .long   func_7b0ec
    .long   func_7b0fc
    .long   func_7b14a


/*----------------------------------------------------------------*/
func_7b064:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    push   %eax
    mov    %edx,%edi
    lea    0x4(%esp),%eax
    call   func_80a72
    mov    (%esp),%eax
    mov    %eax,0xd(%esp)
    test   %ebx,%ebx
    je     jump_7b08b
    lea    0x4(%esp),%eax
    call   func_80a93
  jump_7b08b:
    lea    0x4(%esp),%eax
    mov    0x4(%edi),%ebp
    call   func_7afd0
    mov    %eax,0x14(%esp)
    jmp    func_7b105


/*----------------------------------------------------------------*/
func_7b09d:
/*----------------------------------------------------------------*/
    call   func_80bc7


/*----------------------------------------------------------------*/
func_7b0a2:
/*----------------------------------------------------------------*/
    mov    0x0(%ebp),%eax
    mov    data_133330(,%eax,4),%ecx
    mov    %ebx,%edx
    mov    %edi,%eax
    call   *0x4(%ecx)
    mov    0xa(%esi),%ebx
    mov    0x6(%esi),%edx
    add    0x2(%esi),%eax
  jump_7b0bc:
    call   func_7760c
    jmp    func_7b105


/*----------------------------------------------------------------*/
func_7b0c3:
/*----------------------------------------------------------------*/
    mov    $0x11,%ecx
  jump_7b0c8:
    mov    $0x1,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
  jump_7b0d1:
    call   func_7b01a
    jmp    func_7b105


/*----------------------------------------------------------------*/
func_7b0d8:
/*----------------------------------------------------------------*/
    mov    $0x10,%ecx
    jmp    jump_7b0c8


/*----------------------------------------------------------------*/
func_7b0df:
/*----------------------------------------------------------------*/
    mov    $0x10,%ecx
    mov    %edi,%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    jmp    jump_7b0d1


/*----------------------------------------------------------------*/
func_7b0ec:
/*----------------------------------------------------------------*/
    mov    0x2(%esi),%eax
    mov    0x4(%edi,%eax,1),%ebx
    mov    0x8(%edi,%eax,1),%edx
    mov    (%edi,%eax,1),%eax
    jmp    jump_7b0bc


/*----------------------------------------------------------------*/
func_7b0fc:
/*----------------------------------------------------------------*/
    mov    0x2(%esi),%eax
  jump_7b0ff:
    mov    (%edi,%eax,1),%eax
    call   *0x6(%esi)


/*----------------------------------------------------------------*/
func_7b105:
/*----------------------------------------------------------------*/
    mov    0x8(%esp),%eax
    cmp    (%esp),%eax
    je     jump_7b189
    jae    jump_7b119
    call   func_80bc7
  jump_7b119:
    lea    0x4(%esp),%eax
    mov    0x8(%esp),%ebx
    call   func_80a98
    lea    0x4(%esp),%eax
    mov    0x14(%esp),%edx
    call   func_7afd0
    mov    %eax,0x14(%esp)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%edi)
    mov    (%edx),%eax
    mov    %eax,0x18(%esp)
    test   %eax,%eax
    je     jump_7b152
    jmp    jump_7b16d


/*----------------------------------------------------------------*/
func_7b14a:
/*----------------------------------------------------------------*/
    mov    0x2(%esi),%eax
    mov    0xa(%esi),%edx
    jmp    jump_7b0ff
  jump_7b152:
    mov    0x4(%edx),%esi
    mov    (%esi),%ax
    cmp    $0xb,%ax
    ja     func_7b09d
    movzwl %ax,%eax
    jmp    *%cs:vtable_7b034(,%eax,4)
  jump_7b16d:
    mov    0x0(%ebp),%esi
    mov    data_133330(,%esi,4),%esi
    mov    %ebx,%edx
    mov    %edi,%eax
    call   *0x4(%esi)
    xor    %edx,%edx
    call   *0x18(%esp)
    jmp    func_7b105
  jump_7b189:
    mov    %eax,0x8(%edi)
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7b194:
/*----------------------------------------------------------------*/
    push   %ebx
    xor    %ebx,%ebx
    call   func_7b064
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b19e:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    push   %ebx
    push   %edx
    mov    data_13330c,%edx
    xor    %ebx,%ebx
    call   func_7b064
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b1c3:
/*----------------------------------------------------------------*/
    mov    $0xd,%eax


/*----------------------------------------------------------------*/
func_7b1c8:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_77a87
    mov    %edx,(%eax)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7b1d4:
/*----------------------------------------------------------------*/
    mov    $0xe,%eax
    jmp    func_7b1c8


/*----------------------------------------------------------------*/
func_7b1eb:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_77a8d
    mov    %edx,(%eax)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7b1fe:
/*----------------------------------------------------------------*/
    cmp    $0x41,%eax
    jl     jump_7b20b
    cmp    $0x5a,%eax
    jg     jump_7b20b
    add    $0x20,%eax
  jump_7b20b:
    ret


/*----------------------------------------------------------------*/
func_7b20c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    testb  $0x20,0xd(%eax)
    jne    jump_7b239
    mov    0x10(%edx),%eax
    call   func_78e40
    test   %eax,%eax
    je     jump_7b239
    mov    0xd(%edx),%bl
    or     $0x20,%bl
    mov    %bl,0xd(%edx)
    test   $0x7,%bl
    jne    jump_7b239
    mov    %bl,%cl
    or     $0x2,%cl
    mov    %cl,0xd(%edx)
  jump_7b239:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b23d:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    cmp    data_99970,%eax
    jb     jump_7b250
    xor    %eax,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_7b250:
    cmp    $0x5,%eax
    jg     jump_7b286
    mov    %eax,%ebx
    mov    data_999c4,%eax
    shl    $0x2,%ebx
    add    %ebx,%eax
    mov    0x1(%eax),%cl
    test   $0x40,%cl
    jne    jump_7b286
    mov    %cl,%ch
    or     $0x40,%ch
    mov    %ch,0x1(%eax)
    mov    %edx,%eax
    call   func_78e40
    test   %eax,%eax
    je     jump_7b286
    mov    data_999c4,%eax
    orb    $0x20,0x1(%ebx,%eax,1)
  jump_7b286:
    mov    data_999c4,%eax
    mov    (%eax,%edx,4),%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b292:
/*----------------------------------------------------------------*/
    push   %ebx
    or     $0x40,%dh
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    data_999c4,%eax
    shl    $0x2,%edx
    mov    %ebx,(%edx,%eax,1)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b2a7:
/*----------------------------------------------------------------*/
    test   %edx,%edx
    jne    func_7b2ae
    xor    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_7b2ae:
/*----------------------------------------------------------------*/
    test   %edx,%edx
    jne    func_7b2b3
    ret


/*----------------------------------------------------------------*/
func_7b2b3:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    %al,%bl
    xor    %eax,%eax
    mov    %dl,%al
    call   func_7b1eb
    cmp    $0x100,%edx
    jae    jump_7b302
    cmpb   $0x3,data_9995b
    jb     jump_7b2ec
    cmp    $0x50,%dl
    jne    jump_7b2dc
    mov    $0xe,%bl
    jmp    jump_7b2ec
  jump_7b2dc:
    cmp    $0x22,%dl
    jb     jump_7b2e5
    mov    $0x13,%bl
    jmp    jump_7b2ec
  jump_7b2e5:
    cmp    $0x20,%dl
    jb     jump_7b2ec
    mov    $0x5,%bl
  jump_7b2ec:
    cmp    $0x13,%bl
    jbe    jump_7b2f3
    mov    $0x13,%bl
  jump_7b2f3:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    data_999c5(%edx),%eax
    sar    $0x18,%eax
    jmp    jump_7b30c
  jump_7b302:
    mov    %edx,%eax
    shr    $0x8,%eax
    and    $0xff,%eax
  jump_7b30c:
    call   func_7b1c8
    mov    $0xffffffff,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b31a:
/*----------------------------------------------------------------*/
    jae    jump_7b32a
    and    $0xffff,%eax
    push   %eax
    call   func_7b2b3
    pop    %eax
    jmp    jump_7b32c
  jump_7b32a:
    sub    %eax,%eax
  jump_7b32c:
    ret
  jump_7b32d:
    call   *data_99bf4
    push   %edx
    mov    $data_955fc,%eax
    mov    $0xff,%edx
    call   func_7c3ef
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7b345:
/*----------------------------------------------------------------*/
    mov    %esp,%eax
    sub    data_99934,%eax
    ret


/*----------------------------------------------------------------*/
func_7b34e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%edx
    testb  $0x1,0xc(%eax)
    jne    jump_7b374
    mov    $0x4,%eax
    call   func_7b1c8
    mov    0xc(%edx),%bl
    or     $0x20,%bl
    mov    $0xffffffff,%eax
    mov    %bl,0xc(%edx)
    jmp    jump_7b394
  jump_7b374:
    mov    0x4(%edx),%ebx
    dec    %ebx
    mov    %ebx,0x4(%edx)
    test   %ebx,%ebx
    jge    jump_7b388
    mov    %edx,%eax
    call   func_7b3d7
    jmp    jump_7b394
  jump_7b388:
    mov    (%edx),%ebx
    mov    (%ebx),%al
    inc    %ebx
    and    $0xff,%eax
    mov    %ebx,(%edx)
  jump_7b394:
    testb  $0x40,0xc(%edx)
    jne    jump_7b3d2
    cmp    $0xd,%eax
    jne    jump_7b3bf
    mov    0x4(%edx),%esi
    dec    %esi
    mov    %esi,0x4(%edx)
    test   %esi,%esi
    jge    jump_7b3b3
    mov    %edx,%eax
    call   func_7b3d7
    jmp    jump_7b3bf
  jump_7b3b3:
    mov    (%edx),%ebx
    mov    (%ebx),%al
    inc    %ebx
    and    $0xff,%eax
    mov    %ebx,(%edx)
  jump_7b3bf:
    cmp    $0x1a,%eax
    jne    jump_7b3d2
    mov    0xc(%edx),%cl
    or     $0x10,%cl
    mov    $0xffffffff,%eax
    mov    %cl,0xc(%edx)
  jump_7b3d2:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b3d7:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    call   func_7b406
    test   %eax,%eax
    jne    jump_7b3ee
    mov    $0xffffffff,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_7b3ee:
    mov    0x4(%edx),%ebx
    mov    (%edx),%ecx
    dec    %ebx
    inc    %ecx
    mov    %ebx,0x4(%edx)
    mov    %ecx,(%edx)
    mov    -0x1(%ecx),%al
    and    $0xff,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b406:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    cmpl   $0x0,0x8(%eax)
    jne    jump_7b417
    call   func_7d0b3
  jump_7b417:
    mov    0xd(%ecx),%ah
    test   $0x20,%ah
    je     jump_7b42e
    test   $0x6,%ah
    je     jump_7b42e
    mov    $0x2000,%eax
    call   func_8128a
  jump_7b42e:
    mov    0xc(%ecx),%edx
    mov    0xc(%ecx),%bl
    mov    0x8(%ecx),%eax
    and    $0xfb,%bl
    mov    %eax,(%ecx)
    and    $0x2400,%edx
    mov    %bl,0xc(%ecx)
    cmp    $0x2400,%edx
    jne    jump_7b46e
    mov    0x10(%ecx),%ebx
    test   %ebx,%ebx
    jne    jump_7b46e
    mov    %ebx,0x4(%ecx)
    call   func_812b9
    cmp    $0xffffffff,%eax
    je     jump_7b48b
    mov    (%ecx),%ebx
    mov    %al,(%ebx)
    movl   $0x1,0x4(%ecx)
    jmp    jump_7b48b
  jump_7b46e:
    testb  $0x4,0xd(%ecx)
    je     jump_7b47b
    mov    $0x1,%ebx
    jmp    jump_7b47e
  jump_7b47b:
    mov    0x14(%ecx),%ebx
  jump_7b47e:
    mov    (%ecx),%edx
    mov    0x10(%ecx),%eax
    call   func_7d12a
    mov    %eax,0x4(%ecx)
  jump_7b48b:
    mov    0x4(%ecx),%esi
    test   %esi,%esi
    jg     jump_7b4a9
    jne    jump_7b49a
    orb    $0x10,0xc(%ecx)
    jmp    jump_7b4a9
  jump_7b49a:
    mov    0xc(%ecx),%al
    movl   $0x0,0x4(%ecx)
    or     $0x20,%al
    mov    %al,0xc(%ecx)
  jump_7b4a9:
    mov    0x4(%ecx),%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_7b4b1:
    push   %ebx
    push   %esi
    push   %ebp
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_7b52d
    testb  $0x10,0xd(%edx)
    je     jump_7b4cc
  jump_7b4c5:
    mov    $0xffffffff,%ebx
    jmp    jump_7b52d
  jump_7b4cc:
    testb  $0x1,0xc(%edx)
    je     jump_7b4c5
    cmpl   $0x0,0x8(%edx)
    jne    jump_7b4df
    mov    %edx,%eax
    call   func_7d0b3
  jump_7b4df:
    mov    0x4(%edx),%esi
    test   %esi,%esi
    jne    jump_7b4fe
    mov    0x8(%edx),%eax
    add    0x14(%edx),%eax
    dec    %eax
    mov    %eax,(%edx)
    orb    $0x4,0xc(%edx)
    mov    (%edx),%eax
    movl   $0x1,0x4(%edx)
    jmp    jump_7b521
  jump_7b4fe:
    mov    (%edx),%eax
    cmp    0x8(%edx),%eax
    je     jump_7b4c5
    mov    (%edx),%eax
    lea    0x1(%esi),%ebp
    dec    %eax
    mov    %ebp,0x4(%edx)
    mov    %eax,(%edx)
    mov    (%eax),%al
    and    $0xff,%eax
    cmp    %ebx,%eax
    je     jump_7b51f
    orb    $0x4,0xc(%edx)
  jump_7b51f:
    mov    (%edx),%eax
  jump_7b521:
    mov    %bl,(%eax)
    andb   $0xef,0xc(%edx)
    and    $0xff,%ebx
  jump_7b52d:
    mov    %ebx,%eax
    pop    %ebp
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b533:
/*----------------------------------------------------------------*/
    push   %edx
    sub    $0x1c,%esp
    mov    $0x2c,%ah
    mov    %esp,%edx
    mov    %ah,0x1(%esp)
    mov    %esp,%eax
    call   func_812d6
    xor    %edx,%edx
    mov    0x9(%esp),%dl
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    shl    $0x2,%eax
    mov    0x8(%esp),%dl
    add    %eax,%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    xor    %eax,%eax
    shl    $0x2,%edx
    mov    0xd(%esp),%al
    add    %eax,%edx
    mov    %edx,%eax
    shl    $0x2,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %eax,%edx
    xor    %eax,%eax
    shl    $0x2,%edx
    mov    0xc(%esp),%al
    add    %edx,%eax
    add    $0x1c,%esp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7b58e:
/*----------------------------------------------------------------*/
    call   func_7b533
    mov    %eax,data_133304
    ret
  jump_7b599:
    push   %ebx
    push   %edx
    call   func_7b533
    mov    data_133304,%ebx
    mov    %eax,%edx
    cmp    %ebx,%eax
    jae    jump_7b5b1
    add    $0x83d600,%eax
  jump_7b5b1:
    sub    data_133304,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b5ba:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    mov    %edx,%eax
    mov    (%ebx),%edx
    call   func_81322
    incl   0x10(%ebx)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b5cb:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    0xc(%eax),%ebp
    mov    0xc(%eax),%ah
    mov    0x8(%esi),%ecx
    and    $0xcf,%ah
    and    $0x30,%ebp
    mov    %ah,0xc(%esi)
    test   %ecx,%ecx
    jne    jump_7b5ee
    mov    %esi,%eax
    call   func_7d0b3
  jump_7b5ee:
    mov    0xd(%esi),%cl
    xor    %edi,%edi
    test   $0x4,%cl
    je     jump_7b60c
    mov    %cl,%ch
    and    $0xfa,%ch
    mov    %ch,%al
    mov    %ch,0xd(%esi)
    or     $0x1,%al
    mov    $0x1,%edi
    mov    %al,0xd(%esi)
  jump_7b60c:
    mov    $func_7b5ba,%ecx
    mov    %esi,%eax
    call   func_793d5
    mov    %eax,%edx
    test   %edi,%edi
    je     jump_7b636
    mov    0xd(%esi),%ah
    and    $0xfa,%ah
    mov    %ah,%bl
    mov    %ah,0xd(%esi)
    or     $0x4,%bl
    mov    %esi,%eax
    mov    %bl,0xd(%esi)
    call   func_7aed7
  jump_7b636:
    testb  $0x20,0xc(%esi)
    je     jump_7b641
    mov    $0xffffffff,%edx
  jump_7b641:
    mov    0xc(%esi),%edi
    or     %ebp,%edi
    mov    %edx,%eax
    mov    %edi,0xc(%esi)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7b650:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0xc,%esp
    mov    %eax,%ebx
    mov    $0x2a,%ah
    int    $0x21
    sub    $0x76c,%cx
    mov    %al,%ch
    shl    $0x10,%ecx
    mov    %dx,%cx
    mov    %ecx,0x4(%esp)
    xor    %eax,%eax
    mov    0x6(%esp),%al
    mov    %eax,0x14(%ebx)
    xor    %eax,%eax
    mov    0x5(%esp),%al
    dec    %eax
    mov    %eax,0x10(%ebx)
    xor    %eax,%eax
    mov    0x4(%esp),%al
    mov    %eax,0xc(%ebx)
    mov    $0x2c,%ah
    int    $0x21
    shl    $0x10,%ecx
    mov    %dx,%cx
    mov    %ecx,(%esp)
    xor    %eax,%eax
    mov    0x3(%esp),%al
    xor    %edx,%edx
    mov    %eax,0x8(%ebx)
    xor    %eax,%eax
    mov    (%esp),%dl
    mov    0x2(%esp),%al
    mov    %edx,%esi
    mov    %eax,0x4(%ebx)
    xor    %eax,%eax
    shl    $0x2,%esi
    mov    0x1(%esp),%al
    add    %edx,%esi
    mov    %eax,(%ebx)
    mov    $0x2a,%ah
    int    $0x21
    sub    $0x76c,%cx
    mov    %al,%ch
    shl    $0x10,%ecx
    mov    %dx,%cx
    mov    %ecx,0x8(%esp)
    mov    0x4(%esp),%ah
    mov    0x8(%esp),%al
    add    %esi,%esi
    cmp    %ah,%al
    je     jump_7b702
    cmpl   $0x17,0x8(%ebx)
    je     jump_7b702
    xor    %eax,%eax
    mov    0xa(%esp),%al
    mov    %eax,0x14(%ebx)
    xor    %eax,%eax
    mov    0x9(%esp),%al
    dec    %eax
    mov    %eax,0x10(%ebx)
    xor    %eax,%eax
    mov    0x8(%esp),%al
    mov    %eax,0xc(%ebx)
  jump_7b702:
    mov    %esi,%eax
    movl   $0xffffffff,0x20(%ebx)
    add    $0xc,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b713:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    $0xc,%esi
    mov    0x10(%ebp),%edx
    mov    0x10(%eax),%eax
    sar    $0x1f,%edx
    idiv   %esi
    mov    $data_9633c,%ebx
    mov    0x14(%ebp),%esi
    mov    %edx,%edi
    cmp    $0xf4fb7ea1,%esi
    jge    jump_7b747
  jump_7b73d:
    mov    $0xffffffff,%eax
    jmp    jump_7b860
  jump_7b747:
    mov    0x10(%ebp),%eax
    mov    %eax,%edx
    mov    $0xc,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    add    %eax,%esi
  jump_7b758:
    test   %edi,%edi
    jge    jump_7b762
    dec    %esi
    add    $0xc,%edi
    jmp    jump_7b758
  jump_7b762:
    test   %esi,%esi
    jl     jump_7b73d
    lea    0x76c(%esi),%eax
    call   func_7cc88
    test   %eax,%eax
    je     jump_7b77a
    mov    $data_96356,%ebx
  jump_7b77a:
    mov    %esi,%eax
    shl    $0x3,%eax
    add    %esi,%eax
    shl    $0x3,%eax
    add    %esi,%eax
    lea    0x3(%esi),%ecx
    mov    %eax,%edx
    shl    $0x2,%eax
    sar    $0x2,%ecx
    add    %edx,%eax
    lea    (%eax,%ecx,1),%edx
    movswl (%ebx,%edi,2),%eax
    mov    0xc(%ebp),%edi
    add    %edx,%eax
    add    %eax,%edi
    dec    %edi
    test   %esi,%esi
    je     jump_7b7a7
    dec    %edi
  jump_7b7a7:
    mov    0x8(%ebp),%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    mov    0x4(%ebp),%edx
    add    %eax,%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    0x0(%ebp),%esi
    shl    $0x2,%eax
    add    %eax,%esi
  jump_7b7c8:
    test   %esi,%esi
    jge    jump_7b7d5
    dec    %edi
    add    $0x15180,%esi
    jmp    jump_7b7c8
  jump_7b7d5:
    mov    %edi,%eax
    mov    %esi,%edx
    mov    %ebp,%ecx
    xor    %ebx,%ebx
    call   func_7cb4a
    call   func_7c87a
    mov    data_99c48,%edx
    mov    0x20(%ebp),%ebx
    add    %edx,%esi
    test   %ebx,%ebx
    jge    jump_7b7fd
    mov    %ebp,%eax
    call   func_7cdd0
  jump_7b7fd:
    cmpl   $0x0,0x20(%ebp)
    jle    jump_7b809
    sub    data_99c4c,%esi
  jump_7b809:
    test   %esi,%esi
    jge    jump_7b816
    dec    %edi
    add    $0x15180,%esi
    jmp    jump_7b809
  jump_7b816:
    cmp    $0x63de,%edi
    jl     jump_7b73d
    jne    jump_7b840
    mov    data_99c48,%eax
    sub    $0x15180,%esi
    test   %eax,%eax
    jle    jump_7b73d
    test   %esi,%esi
    jge    jump_7b85e
    jmp    jump_7b73d
  jump_7b840:
    lea    -0x63df(%edi),%eax
    mov    %eax,%edi
    shl    $0x3,%edi
    sub    %eax,%edi
    shl    $0x5,%edi
    add    %eax,%edi
    shl    $0x7,%edi
    mov    %edi,%eax
    shl    $0x2,%edi
    sub    %eax,%edi
    add    %edi,%esi
  jump_7b85e:
    mov    %esi,%eax
  jump_7b860:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b867:
/*----------------------------------------------------------------*/
    push   %edx
    push   %ebp
    mov    %esp,%ebp
    mov    data_9993c,%edx
    add    $0x3,%edx
    and    $0xfc,%dl
    call   func_7b345
    cmp    %eax,%edx
    jae    jump_7b888
    mov    %edx,%eax
    sub    %eax,%esp
    mov    %esp,%eax
    jmp    jump_7b88a
  jump_7b888:
    xor    %eax,%eax
  jump_7b88a:
    mov    data_9993c,%edx
    add    %edx,%eax
    mov    %eax,data_99940
    call   func_813c6
    mov    data_1333f0,%edx
    mov    data_1333ec,%eax
    call   func_1c424
    call   func_7814a
    mov    %ebp,%esp
    pop    %ebp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7b8b6:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebx
    push   %edx
    push   %es
    mov    %eax,%edx
  jump_7b8bd:
    ds mov $data_9a1ac,%esi
    ds mov $data_9a21e,%edi
    mov    %edi,%ebx
    mov    %dl,%al
  jump_7b8cd:
    cmp    %edi,%esi
    jae    jump_7b8e5
    cmpb   $0x2,(%esi)
    je     jump_7b8e0
    cmp    %al,0x1(%esi)
    ja     jump_7b8e0
    mov    %esi,%ebx
    mov    0x1(%esi),%al
  jump_7b8e0:
    add    $0x6,%esi
    jmp    jump_7b8cd
  jump_7b8e5:
    cmp    %edi,%ebx
    je     jump_7b8fb
    mov    0x2(%ebx),%eax
    or     %eax,%eax
    je     jump_7b8f6
    push   %ds
    pop    %es
    push   %edx
    call   *%eax
    pop    %edx
  jump_7b8f6:
    movb   $0x2,(%ebx)
    jmp    jump_7b8bd
  jump_7b8fb:
    pop    %es
    pop    %edx
    pop    %ebx
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7b901:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebx
    push   %es
    mov    %dl,%dh
    mov    %al,%dl
  jump_7b909:
    ds mov $data_9a21e,%esi
    ds mov $data_9a230,%edi
    mov    %edi,%ebx
    mov    %dl,%al
  jump_7b919:
    cmp    %edi,%esi
    jae    jump_7b931
    cmpb   $0x2,(%esi)
    je     jump_7b92c
    cmp    0x1(%esi),%al
    ja     jump_7b92c
    mov    %esi,%ebx
    mov    0x1(%esi),%al
  jump_7b92c:
    add    $0x6,%esi
    jmp    jump_7b919
  jump_7b931:
    cmp    %edi,%ebx
    je     jump_7b94b
    cmp    %dh,%al
    ja     jump_7b946
    mov    0x2(%ebx),%eax
    or     %eax,%eax
    je     jump_7b946
    push   %ds
    pop    %es
    push   %edx
    call   *%eax
    pop    %edx
  jump_7b946:
    movb   $0x2,(%ebx)
    jmp    jump_7b909
  jump_7b94b:
    pop    %es
    pop    %ebx
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7b950:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %esp,%ebx
    mov    data_99928,%eax
    xor    %edx,%edx
    call   func_7ba0d
    mov    (%esp),%ecx
    lea    0x1(%eax),%ebp
    mov    data_99928,%edx
    mov    %ebp,%eax
    sub    %edx,%ecx
    shl    $0x2,%eax
    inc    %ecx
    mov    %eax,0x4(%esp)
    add    $0x4,%eax
    add    %ecx,%eax
    call   func_78734
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_7b9e9
    mov    data_99928,%esi
    add    %ecx,%eax
    mov    %edx,%edi
    mov    %eax,data_9989c
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %es
    mov    data_9989c,%ecx
    mov    data_9992c,%eax
    mov    %esp,%ebx
    mov    %eax,(%ecx)
    add    $0x4,%ecx
    mov    %edx,%eax
    mov    %ecx,%edx
    mov    0x4(%esp),%esi
    call   func_7ba0d
    mov    data_9989c,%edx
    add    %esi,%edx
    mov    %ebp,data_99898
    movl   $0x0,(%edx)
    jmp    jump_7b9f3
  jump_7b9e9:
    mov    %eax,data_9989c
    mov    %eax,data_99898
  jump_7b9f3:
    mov    data_9989c,%eax
    mov    %ebp,data_1333ec
    mov    %eax,data_1333f0
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7ba0d:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %edx,%esi
    mov    %ebx,0x4(%esp)
    xor    %ecx,%ecx
  jump_7ba1c:
    mov    (%eax),%dl
    cmp    $0x20,%dl
    je     jump_7ba28
    cmp    $0x9,%dl
    jne    jump_7ba2b
  jump_7ba28:
    inc    %eax
    jmp    jump_7ba1c
  jump_7ba2b:
    test   %dl,%dl
    je     jump_7bae6
    cmp    $0x22,%dl
    jne    jump_7ba77
    inc    %eax
    mov    %eax,(%esp)
    mov    %eax,%edx
  jump_7ba3e:
    mov    (%eax),%bh
    cmp    $0x22,%bh
    je     jump_7baac
    test   %bh,%bh
    je     jump_7baac
    cmp    $0x5c,%bh
    jne    jump_7ba63
    mov    0x1(%eax),%bl
    cmp    $0x22,%bl
    je     jump_7ba62
    cmp    %bh,%bl
    jne    jump_7ba63
  jump_7ba62:
    inc    %eax
  jump_7ba63:
    lea    0x1(%eax),%ebx
    test   %esi,%esi
    je     jump_7ba73
    mov    (%eax),%al
    mov    %al,(%edx)
    mov    %ebx,%eax
    inc    %edx
    jmp    jump_7ba3e
  jump_7ba73:
    mov    %ebx,%eax
    jmp    jump_7ba3e
  jump_7ba77:
    mov    %eax,(%esp)
    mov    %eax,%edx
  jump_7ba7c:
    mov    (%eax),%bl
    test   %bl,%bl
    je     jump_7baac
    cmp    $0x20,%bl
    je     jump_7baac
    cmp    $0x9,%bl
    je     jump_7baac
    cmp    $0x5c,%bl
    jne    jump_7ba98
    cmpb   $0x22,0x1(%eax)
    jne    jump_7ba98
    inc    %eax
  jump_7ba98:
    lea    0x1(%eax),%ebx
    test   %esi,%esi
    je     jump_7baa8
    mov    (%eax),%al
    mov    %al,(%edx)
    mov    %ebx,%eax
    inc    %edx
    jmp    jump_7ba7c
  jump_7baa8:
    mov    %ebx,%eax
    jmp    jump_7ba7c
  jump_7baac:
    lea    0x1(%eax),%ebp
    lea    0x1(%ecx),%edi
    test   %esi,%esi
    je     jump_7bad7
    shl    $0x2,%ecx
    lea    (%esi,%ecx,1),%ebx
    mov    (%esp),%ecx
    mov    %ecx,(%ebx)
    mov    (%eax),%bl
    mov    %edi,%ecx
    test   %bl,%bl
    jne    jump_7bacd
    mov    %bl,(%edx)
    jmp    jump_7bae6
  jump_7bacd:
    mov    %ebp,%eax
    movb   $0x0,(%edx)
    jmp    jump_7ba1c
  jump_7bad7:
    mov    (%eax),%dl
    mov    %edi,%ecx
    test   %dl,%dl
    je     jump_7bae6
    mov    %ebp,%eax
    jmp    jump_7ba1c
  jump_7bae6:
    mov    0x4(%esp),%edx
    mov    %eax,(%edx)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7baf6:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ecx
    push   %ds
    mov    %edx,%ds
    or     %eax,%eax
    je     jump_7bb45
    add    $0x7,%eax
    jb     jump_7bb45
    and    $0xfc,%al
    mov    $0xc,%edx
    sub    %edx,%eax
    cmc
    sbb    %ecx,%ecx
    and    %ecx,%eax
    add    %edx,%eax
    cmp    0x14(%ebx),%eax
    ja     jump_7bb45
    mov    0xc(%ebx),%esi
    mov    0x10(%ebx),%edi
    cmp    %edi,%eax
    ja     jump_7bb29
    mov    0x28(%ebx),%esi
    sub    %edi,%edi
  jump_7bb29:
    mov    (%esi),%edx
    cmp    %edx,%eax
    jbe    jump_7bb49
    sub    %edx,%edi
    cmc
    sbb    %ecx,%ecx
    and    %ecx,%edi
    add    %edx,%edi
    lea    0x20(%ebx),%edx
    mov    0x8(%esi),%esi
    cmp    %edx,%esi
    jne    jump_7bb29
    mov    %edi,0x14(%ebx)
  jump_7bb45:
    sub    %eax,%eax
    jmp    jump_7bb94
  jump_7bb49:
    sub    %eax,%edx
    mov    %edi,0x10(%ebx)
    incl   0x18(%ebx)
    mov    0x8(%esi),%ecx
    cmp    $0xc,%edx
    jb     jump_7bb77
    mov    %esi,%edi
    add    %eax,%edi
    mov    %edi,0xc(%ebx)
    mov    %edx,(%edi)
    mov    %eax,(%esi)
    mov    0x4(%esi),%ebx
    mov    %ebx,0x4(%edi)
    mov    %ecx,0x8(%edi)
    mov    %edi,0x8(%ebx)
    mov    %ecx,%ebx
    mov    %edi,0x4(%ebx)
    jmp    jump_7bb8c
  jump_7bb77:
    decl   0x1c(%ebx)
    mov    %esi,%eax
    mov    %ecx,%edi
    mov    0x4(%esi),%esi
    mov    %edi,0x8(%esi)
    mov    %esi,0x4(%edi)
    mov    %esi,0xc(%ebx)
    mov    %eax,%esi
  jump_7bb8c:
    orl    $0x1,(%esi)
    mov    %esi,%eax
    add    $0x4,%eax
  jump_7bb94:
    pop    %ds
    pop    %ecx
    pop    %edi
    pop    %esi
    ret
  jump_7bb99:
    jmp    jump_7bca4


/*----------------------------------------------------------------*/
func_7bb9e:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ecx
    push   %ds
    mov    %edx,%ds
    or     %eax,%eax
    je     jump_7bb99
    mov    %eax,%esi
    sub    $0x4,%esi
    mov    (%esi),%eax
    test   $0x1,%al
    je     jump_7bb99
    and    $0xfe,%al
    mov    %esi,%edi
    add    %eax,%edi
    testl  $0x1,(%edi)
    jne    jump_7bbe0
    cmp    0xc(%ebx),%edi
    jne    jump_7bbc9
    mov    %esi,0xc(%ebx)
  jump_7bbc9:
    add    (%edi),%eax
    mov    %eax,(%esi)
    push   %ebx
    mov    0x4(%edi),%ebx
    mov    0x8(%edi),%edi
    mov    %edi,0x8(%ebx)
    mov    %ebx,0x4(%edi)
    pop    %ebx
    decl   0x1c(%ebx)
    jmp    jump_7bc5c
  jump_7bbe0:
    mov    %eax,(%esi)
    mov    0xc(%ebx),%edi
    cmp    %edi,%esi
    jae    jump_7bbf7
    cmp    0x4(%edi),%esi
    ja     jump_7bc5c
    mov    0x28(%ebx),%edi
    cmp    %edi,%esi
    jb     jump_7bc5c
    jmp    jump_7bc06
  jump_7bbf7:
    mov    0x8(%edi),%edi
    cmp    %edi,%esi
    jb     jump_7bc5c
    lea    0x20(%ebx),%edi
    cmp    0x24(%ebx),%esi
    ja     jump_7bc5c
  jump_7bc06:
    sub    %edx,%edx
    mov    0x18(%ebx),%eax
    mov    0x1c(%ebx),%ecx
    inc    %ecx
    div    %ecx
    dec    %ecx
    cmp    %ecx,%eax
    jae    jump_7bc3b
    mov    0x18(%ebx),%edx
    sub    %ecx,%edx
    add    %eax,%eax
    cmp    %ecx,%edx
    ja     jump_7bc23
    sub    %eax,%eax
  jump_7bc23:
    mov    %esi,%edi
    add    (%esi),%edi
  jump_7bc27:
    mov    (%edi),%edx
    test   $0x1,%dl
    je     jump_7bc5c
    cmp    $0xffffffff,%edx
    je     jump_7bc3b
    and    $0xfe,%dl
    add    %edx,%edi
    dec    %eax
    jne    jump_7bc27
  jump_7bc3b:
    mov    0xc(%ebx),%edi
    cmp    %edi,%esi
    jae    jump_7bc45
    mov    0x28(%ebx),%edi
  jump_7bc45:
    cmp    %edi,%esi
    jb     jump_7bc5c
    mov    0x8(%edi),%edi
    cmp    %edi,%esi
    jb     jump_7bc5c
    mov    0x8(%edi),%edi
    cmp    %edi,%esi
    jb     jump_7bc5c
    mov    0x8(%edi),%edi
    jmp    jump_7bc45
  jump_7bc5c:
    mov    0x4(%edi),%edx
    mov    (%esi),%ecx
    xchg   %edi,%edx
    mov    %edi,%eax
    add    (%edi),%eax
    cmp    %esi,%eax
    jne    jump_7bc7b
    add    (%edi),%ecx
    mov    %ecx,(%edi)
    cmp    0xc(%ebx),%esi
    jne    jump_7bc77
    mov    %edi,0xc(%ebx)
  jump_7bc77:
    mov    %edi,%esi
    jmp    jump_7bc8c
  jump_7bc7b:
    incl   0x1c(%ebx)
    mov    %edx,0x8(%esi)
    mov    %edi,0x4(%esi)
    mov    %esi,0x8(%edi)
    mov    %edx,%edi
    mov    %esi,0x4(%edi)
  jump_7bc8c:
    decl   0x18(%ebx)
    cmp    0xc(%ebx),%esi
    jae    jump_7bc9c
    cmp    0x10(%ebx),%ecx
    jbe    jump_7bc9c
    mov    %ecx,0x10(%ebx)
  jump_7bc9c:
    cmp    0x14(%ebx),%ecx
    jbe    jump_7bca4
    mov    %ecx,0x14(%ebx)
  jump_7bca4:
    pop    %ds
    pop    %ecx
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7bca9:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    data_998b0,%edx
    cmp    %edx,%eax
    jne    jump_7bcbe
    mov    0x8(%edx),%edx
    mov    %edx,data_998b0
  jump_7bcbe:
    mov    data_998ac,%ebx
    cmp    %ebx,%eax
    jne    jump_7bcd1
    mov    0x8(%ebx),%edx
    mov    %edx,data_998ac
  jump_7bcd1:
    mov    0x4(%eax),%edx
    mov    0x8(%eax),%eax
    test   %edx,%edx
    je     jump_7bcde
    mov    %eax,0x8(%edx)
  jump_7bcde:
    test   %eax,%eax
    je     jump_7bce5
    mov    %edx,0x4(%eax)
  jump_7bce5:
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bce8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    data_998ac,%edx
  jump_7bcf3:
    test   %edx,%edx
    je     jump_7bfd8
    mov    0x24(%edx),%eax
    mov    (%eax),%eax
    mov    (%edx),%ebx
    add    $0x2c,%eax
    cmp    %ebx,%eax
    jne    jump_7bd41
    lea    -0x8(%edx),%ebx
    mov    %edx,%eax
    mov    0x8(%edx),%ecx
    call   func_7bca9
    mov    %ecx,%edx
    mov    0x4(%ebx),%ecx
    test   %ecx,%ecx
    jne    jump_7bd31
    mov    (%ebx),%eax
    shr    $0x10,%eax
    mov    (%ebx),%di
    mov    %eax,%esi
    mov    $0x5,%ah
    mov    $0x2,%al
    int    $0x31
    jmp    jump_7bcf3
  jump_7bd31:
    mov    %ecx,%eax
    push   %es
    mov    %eax,%es
    mov    $0x49,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    pop    %es
    jmp    jump_7bcf3
  jump_7bd41:
    mov    0x8(%edx),%edx
    jmp    jump_7bcf3


/*----------------------------------------------------------------*/
func_7be49:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    data_998ac,%eax
    xor    %ebx,%ebx
    jmp    jump_7be5f
  jump_7be56:
    cmp    %eax,%edx
    jb     jump_7be63
    mov    %eax,%ebx
    mov    0x8(%eax),%eax
  jump_7be5f:
    test   %eax,%eax
    jne    jump_7be56
  jump_7be63:
    mov    %ebx,0x4(%edx)
    mov    %eax,0x8(%edx)
    test   %ebx,%ebx
    je     jump_7be72
    mov    %edx,0x8(%ebx)
    jmp    jump_7be78
  jump_7be72:
    mov    %edx,data_998ac
  jump_7be78:
    test   %eax,%eax
    je     jump_7be7f
    mov    %edx,0x4(%eax)
  jump_7be7f:
    lea    0x20(%edx),%ebx
    mov    (%edx),%eax
    add    $0x2c,%edx
    movl   $0x0,-0xc(%edx)
    movl   $0x0,-0x1c(%edx)
    movl   $0x0,-0x14(%edx)
    movl   $0x0,-0x10(%edx)
    mov    %ebx,-0x8(%edx)
    mov    %ebx,-0x4(%edx)
    sub    $0x2c,%eax
    mov    %ebx,-0x20(%edx)
    mov    %eax,(%edx)
    movl   $0xffffffff,(%edx,%eax,1)
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bebd:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    data_998ac,%edx
    test   %edx,%edx
    je     jump_7bf06
    mov    0x24(%edx),%edx
    mov    (%edx),%ebx
    add    %edx,%ebx
    mov    data_99952,%ah
    add    $0x4,%ebx
    cmp    $0x2,%ah
    jb     jump_7bef9
    cmp    $0x8,%ah
    ja     jump_7bef9
    cmpb   $0x0,data_99954
    jne    jump_7bef9
    xor    %eax,%eax
    mov    %ds,%eax
    lsl    %eax,%eax
    inc    %eax
    mov    %eax,data_99924
  jump_7bef9:
    cmp    data_99924,%ebx
    jne    jump_7bf06
    mov    (%edx),%eax
    pop    %edx
    pop    %ebx
    ret
  jump_7bf06:
    xor    %eax,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bf0b:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %eax
    call   func_7bce8
    mov    (%esp),%eax
    shr    $0x10,%eax
    mov    (%esp),%ecx
    mov    %eax,%ebx
    mov    $0x5,%ah
    mov    $0x1,%al
    int    $0x31
    sbb    %eax,%eax
    inc    %eax
    je     jump_7bf3c
    mov    %bx,%ax
    shl    $0x10,%eax
    mov    %cx,%ax
    mov    %di,(%eax)
    mov    %si,0x2(%eax)
  jump_7bf3c:
    test   %eax,%eax
    je     jump_7bf59
    mov    (%esp),%ebx
    lea    0x8(%eax),%edx
    sub    $0x8,%ebx
    mov    %ebx,(%edx)
    movl   $0x0,0x4(%eax)
    mov    %edx,%eax
    jmp    jump_7bfd5
  jump_7bf59:
    testw  $0xfff0,data_1333f6
    je     jump_7bf6e
    movl   $0xfffff,data_1333f4
  jump_7bf6e:
    cmpl   $0x10000,(%esp)
    ja     jump_7bfd3
    mov    data_1333f4,%ebx
    shr    $0x4,%ebx
    or     $0x1,%bl
    mov    $0x48,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%edx
    test   %eax,%eax
    jl     jump_7bfd3
    mov    (%esp),%ebx
    shr    $0x4,%ebx
    mov    $0x48,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%esi
    mov    %eax,%ebx
    mov    %edx,%eax
    push   %es
    mov    %eax,%es
    mov    $0x49,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    pop    %es
    test   %esi,%esi
    jl     jump_7bfd3
    mov    $0x0,%ah
    mov    $0x6,%al
    int    $0x31
    mov    %ecx,%eax
    shl    $0x10,%eax
    mov    %dx,%ax
    add    $0x8,%eax
    mov    (%esp),%edx
    mov    %esi,-0x4(%eax)
    sub    $0x8,%edx
    mov    %edx,(%eax)
    jmp    jump_7bfd5
  jump_7bfd3:
    xor    %eax,%eax
  jump_7bfd5:
    add    $0x4,%esp
  jump_7bfd8:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bfde:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %eax
    cmpl   $0x0,data_99d90
    jne    jump_7bff1
  jump_7bfed:
    xor    %eax,%eax
    jmp    jump_7bfd5
  jump_7bff1:
    cmpl   $0xfffffffe,data_99924
    je     jump_7bfed
    mov    %esp,%eax
    call   func_7c1d1
    test   %eax,%eax
    je     jump_7bfd5
    cmpb   $0x1,data_99952
    jne    jump_7c025
    mov    (%esp),%eax
    call   func_7bf0b
    mov    %eax,%ebx
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_7c040
    mov    (%eax),%eax
    mov    %eax,(%esp)
    jmp    jump_7c040
  jump_7c025:
    mov    (%esp),%ebx
    mov    $0x80004800,%eax
    int    $0x21
    sbb    %ebx,%ebx
    not    %ebx
    and    %ebx,%eax
    mov    (%esp),%ecx
    sub    $0x4,%ecx
    mov    %eax,%edx
    mov    %ecx,(%esp)
  jump_7c040:
    test   %edx,%edx
    je     jump_7bfed
    mov    (%esp),%eax
    mov    (%esp),%esi
    sub    $0x4,%eax
    cmp    %esi,%eax
    ja     jump_7bfed
    mov    %eax,(%esp)
    cmp    $0x38,%eax
    jb     jump_7bfed
    mov    %eax,(%edx)
    mov    %edx,%eax
    call   func_7be49
    mov    %eax,%ebx
    mov    (%eax),%eax
    mov    %eax,(%esp)
    or     $0x1,%al
    mov    %eax,(%ebx)
    mov    0x18(%edx),%edi
    movl   $0xffffffff,0x14(%edx)
    inc    %edi
    lea    0x4(%ebx),%eax
    mov    %edi,0x18(%edx)
    call   func_7882f
    mov    $0x1,%eax
    jmp    jump_7bfd5


/*----------------------------------------------------------------*/
func_7c08d:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %ebp
    push   %eax
    cmpb   $0x1,data_99952
    jne    jump_7c0a5
    cmpb   $0x0,data_99953
    je     jump_7c0ae
  jump_7c0a5:
    cmpb   $0x9,data_99952
    jne    jump_7c0bb
  jump_7c0ae:
    mov    (%esp),%eax
    call   func_7bfde
    jmp    jump_7c1c8
  jump_7c0bb:
    cmpl   $0x0,data_99d90
    jne    jump_7c0cb
  jump_7c0c4:
    xor    %eax,%eax
    jmp    jump_7c1c8
  jump_7c0cb:
    cmpl   $0xfffffffe,data_99924
    je     jump_7c0c4
    mov    %esp,%eax
    call   func_7c1d1
    test   %eax,%eax
    je     jump_7c1c8
    mov    data_99952,%bl
    cmp    $0x2,%bl
    jb     jump_7c109
    cmp    $0x8,%bl
    ja     jump_7c109
    cmpb   $0x0,data_99954
    jne    jump_7c109
    xor    %eax,%eax
    mov    %ds,%eax
    lsl    %eax,%eax
    inc    %eax
    mov    %eax,data_99924
  jump_7c109:
    mov    (%esp),%edx
    mov    data_99924,%ecx
    add    %ecx,%edx
    cmp    %ecx,%edx
    jae    jump_7c11d
    mov    $0xfffffffe,%edx
  jump_7c11d:
    mov    %edx,%eax
    call   func_814a0
    cmp    $0xffffffff,%eax
    je     jump_7c0c4
    mov    %eax,%ebx
    cmp    $0xfffffff8,%eax
    ja     jump_7c0c4
    cmp    %eax,%edx
    jbe    jump_7c0c4
    sub    %eax,%edx
    lea    -0x4(%edx),%eax
    mov    %edx,(%esp)
    cmp    %edx,%eax
    ja     jump_7c0c4
    mov    data_998ac,%edx
    mov    %eax,(%esp)
    jmp    jump_7c15d
  jump_7c14b:
    mov    0x8(%edx),%ebp
    test   %ebp,%ebp
    je     jump_7c161
    cmp    %ebx,%edx
    ja     jump_7c15a
    cmp    %ebp,%ebx
    jb     jump_7c161
  jump_7c15a:
    mov    0x8(%edx),%edx
  jump_7c15d:
    test   %edx,%edx
    jne    jump_7c14b
  jump_7c161:
    test   %edx,%edx
    je     jump_7c18b
    mov    (%edx),%eax
    lea    -0x4(%ebx),%ecx
    add    %edx,%eax
    cmp    %eax,%ecx
    jne    jump_7c18b
    mov    (%esp),%esi
    add    $0x4,%esi
    mov    %esi,(%esp)
    add    %esi,(%edx)
    mov    (%esp),%ebp
    lea    (%eax,%ebp,1),%ecx
    mov    %eax,%ebx
    movl   $0xffffffff,(%ecx)
    jmp    jump_7c1aa
  jump_7c18b:
    cmpl   $0x38,(%esp)
    jb     jump_7c0c4
    mov    (%esp),%eax
    mov    %eax,(%ebx)
    mov    %ebx,%eax
    mov    %ebx,%edx
    call   func_7be49
    mov    %eax,%ebx
    mov    (%eax),%eax
    mov    %eax,(%esp)
  jump_7c1aa:
    mov    (%esp),%eax
    or     $0x1,%al
    mov    %eax,(%ebx)
    incl   0x18(%edx)
    lea    0x4(%ebx),%eax
    movl   $0xffffffff,0x14(%edx)
    call   func_7882f
    mov    $0x1,%eax
  jump_7c1c8:
    add    $0x4,%esp
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c1d1:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    push   %esi
    mov    %eax,%ebx
    mov    (%eax),%edx
    add    $0x3,%edx
    and    $0xfc,%dl
    test   %edx,%edx
    jne    jump_7c1e8
  jump_7c1e2:
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ebx
    ret
  jump_7c1e8:
    cmpb   $0x1,data_99952
    jne    jump_7c1fa
    cmpb   $0x0,data_99953
    je     jump_7c203
  jump_7c1fa:
    cmpb   $0x9,data_99952
    jne    jump_7c208
  jump_7c203:
    add    $0x8,%edx
    jmp    jump_7c20f
  jump_7c208:
    call   func_7bebd
    sub    %eax,%edx
  jump_7c20f:
    mov    %edx,(%ebx)
    add    $0x3c,%edx
    cmp    (%ebx),%edx
    jb     jump_7c1e2
    mov    data_99d94,%esi
    cmp    %esi,%edx
    jae    jump_7c227
    mov    %esi,%edx
    and    $0xfe,%dl
  jump_7c227:
    mov    %edx,(%ebx)
    add    $0xfff,%edx
    cmp    (%ebx),%edx
    jb     jump_7c1e2
    and    $0xf0,%dh
    xor    %dl,%dl
    mov    %edx,(%ebx)
    test   %edx,%edx
    setne  %al
    and    $0xff,%eax
    pop    %esi
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c248:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_7c24b:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    $0x2c,%ah
    int    $0x21
    xor    %eax,%eax
    mov    %dh,%al
    mov    %eax,%ebx
  jump_7c259:
    mov    $0x2c,%ah
    int    $0x21
    xor    %eax,%eax
    mov    %dh,%al
    cmp    %eax,%ebx
    je     jump_7c259
    xor    %esi,%esi
    mov    %al,%bl
  jump_7c269:
    mov    $0x2c,%ah
    int    $0x21
    inc    %esi
    cmp    %dh,%bl
    je     jump_7c269
    mov    %esi,data_133344
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_7c27d:
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    test   %eax,%eax
    je     jump_7c2b0
    imul   data_133344,%eax
    mov    $0x3e8,%esi
    add    $0x1f4,%eax
    xor    %edx,%edx
    div    %esi
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_7c2a3
    lea    0x1(%eax),%esi
  jump_7c2a3:
    xor    %eax,%eax
    mov    %al,%bl
  jump_7c2a7:
    mov    $0x2c,%ah
    int    $0x21
    cmp    %dh,%bl
    dec    %esi
    jne    jump_7c2a7
  jump_7c2b0:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c2b5:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x8,%esp
    mov    0x18(%ebp),%ah
    cmp    $0x1,%ah
    ja     jump_7c2f6
    test   %ah,%ah
    jne    jump_7c2ef
    fldz
    fcompl 0x10(%ebp)
    fnstsw %ax
    sahf
    jae    jump_7c2df
    xor    %ecx,%ecx
    mov    %ecx,-0x18(%ebp)
    mov    %ecx,-0x14(%ebp)
    jmp    jump_7c32e
  jump_7c2df:
    jbe    jump_7c2e8
    mov    $0x8047,%eax
    jmp    jump_7c320
  jump_7c2e8:
    mov    $0x4047,%eax
    jmp    jump_7c320
  jump_7c2ef:
    mov    $0x2047,%eax
    jmp    jump_7c320
  jump_7c2f6:
    fldz
    fcompl 0x10(%ebp)
    fnstsw %ax
    sahf
    jb     jump_7c30a
    xor    %edx,%edx
    mov    %edx,-0x18(%ebp)
    mov    %edx,-0x14(%ebp)
    jmp    jump_7c32e
  jump_7c30a:
    fldz
    fcompl 0x8(%ebp)
    fnstsw %ax
    sahf
    jae    jump_7c31b
    mov    $0x8107,%eax
    jmp    jump_7c320
  jump_7c31b:
    mov    $0x1107,%eax
  jump_7c320:
    lea    0x8(%ebp),%edx
    lea    0x10(%ebp),%ebx
    call   func_80743
    fstpl  -0x18(%ebp)
  jump_7c32e:
    fldl   -0x18(%ebp)
    lea    -0x10(%ebp),%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %eax
    pop    %ebp
    ret    $0x14


/*----------------------------------------------------------------*/
func_7c33c:
/*----------------------------------------------------------------*/
    out    %al,(%dx)
    cmp    %edi,%edx
    incb   0x2e(%edx)
    xchg   %al,-0x12(%eax)
    cmp    %edi,%edx
    incb   0x2e(%edx)
    xchg   %al,%al
    push   %ebp
    mov    %esp,%ebp
    sub    $0x10,%esp
    jmp    jump_7c386


/*----------------------------------------------------------------*/
func_7c356:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    sub    $0x10,%esp
    fcoml  %cs:func_7c33c
    fstsw  -0x10(%ebp)
    fwait
    mov    -0xf(%ebp),%ah
    sahf
    jbe    jump_7c386
    cmp    $0x7,%al
    je     jump_7c380
    fstpl  -0x10(%ebp)
    mov    %eax,-0x8(%ebp)
    mov    %edx,-0x4(%ebp)
    call   func_7a0ca
  jump_7c380:
    mov    $0x1,%al
    mov    %ebp,%esp
    pop    %ebp
    ret
  jump_7c386:
    fcoml  %cs:0x7c344 /* Warning: address points to a valid object/reloc, but no label found */
    fstsw  -0x10(%ebp)
    fwait
    mov    -0xf(%ebp),%ah
    sahf
    ja     jump_7c39c
    fldz
    jmp    jump_7c3b0
  jump_7c39c:
    fldl2e
    fmulp  %st,%st(1)
    fld    %st(0)
    frndint
    fxch   %st(1)
    fsub   %st(1),%st
    f2xm1
    fld1
    faddp  %st,%st(1)
    fscale
  jump_7c3b0:
    fstp   %st(1)
    mov    $0x0,%al
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7c3c9:
/*----------------------------------------------------------------*/
    fxch   %st(1)
    fpatan
    ret


/*----------------------------------------------------------------*/
func_7c3ea:
/*----------------------------------------------------------------*/
    jmp    func_78645


/*----------------------------------------------------------------*/
func_7c3ef:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    mov    %ds,%edx
    call   func_7d149
    test   %eax,%eax
    jne    jump_7c409
    mov    %ebx,%eax
    mov    %ecx,%edx
    call   func_78645
  jump_7c409:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c40c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    mov    %cs,%eax
    mov    %ax,0x2(%edx)
    mov    %ds,%eax
    mov    %ax,0x6(%edx)
    mov    %es,%eax
    mov    %ax,(%edx)
    mov    %ss,%eax
    mov    %ax,0x4(%edx)
    mov    %fs,%eax
    mov    %ax,0x8(%edx)
    mov    %gs,%eax
    mov    %ax,0xa(%edx)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7c434:
/*----------------------------------------------------------------*/
    push   %ebp
    push   %es
    push   %ebx
    push   %ds
    push   %edx
    call   func_7c46c
    push   %ds
    push   %edi
    mov    %esp,%ebp
    mov    0x8(%ebp),%edi
    mov    0xc(%ebp),%ds
    mov    %eax,(%edi)
    mov    %ebx,0x4(%edi)
    mov    %ecx,0x8(%edi)
    mov    %edx,0xc(%edi)
    mov    %esi,0x10(%edi)
    pop    0x14(%edi)
    sbb    %eax,%eax
    mov    %eax,0x18(%edi)
    pop    %eax
    pop    %ebx
    pop    %ebx
    pop    %ebx
    mov    %ax,0x6(%ebx)
    data16 mov %es,(%ebx)
    pop    %es
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7c46c:
/*----------------------------------------------------------------*/
    lea    (%esi,%esi,2),%esi
    lea    %cs:func_7c512(%esi),%eax
    push   %eax
    mov    (%ebx),%es
    mov    0x6(%ebx),%bp
    mov    (%edi),%eax
    mov    0x4(%edi),%ebx
    mov    0x8(%edi),%ecx
    mov    0xc(%edi),%edx
    mov    0x10(%edi),%esi
    mov    0x14(%edi),%edi
    mov    %ebp,%ds
    ret


/*----------------------------------------------------------------*/
func_7c512:
/*----------------------------------------------------------------*/
    int    $0x0
    ret


/*----------------------------------------------------------------*/
func_7c812:
/*----------------------------------------------------------------*/
    push   %esi
    mov    %eax,%esi
    cmp    $0x7fffffff,%ecx
    jbe    jump_7c824
  jump_7c81d:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_7c824:
    cmp    $0x200,%ebx
    jb     jump_7c836
    jbe    jump_7c83e
    cmp    $0x400,%ebx
    jmp    jump_7c83c
  jump_7c836:
    cmp    $0x100,%ebx
  jump_7c83c:
    jne    jump_7c81d
  jump_7c83e:
    test   %edx,%edx
    je     jump_7c846
    test   %ecx,%ecx
    je     jump_7c81d
  jump_7c846:
    mov    %esi,%eax
    call   func_7b20c
    test   %ecx,%ecx
    je     jump_7c854
    mov    %ecx,0x14(%esi)
  jump_7c854:
    mov    0xd(%esi),%ah
    mov    %edx,0x8(%esi)
    and    $0xf8,%ah
    mov    %ah,0xd(%esi)
    mov    0xc(%esi),%ecx
    mov    %edx,(%esi)
    or     %ebx,%ecx
    mov    %ecx,0xc(%esi)
    test   %edx,%edx
    jne    jump_7c875
    mov    %esi,%eax
    call   func_7d0b3
  jump_7c875:
    xor    %eax,%eax
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7c87a:
/*----------------------------------------------------------------*/
    mov    $data_95614,%eax
    call   func_78de6
    test   %eax,%eax
    jne    jump_7cabb
    ret


/*----------------------------------------------------------------*/
func_7c88d:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %edx,%ecx
    xor    %edx,%edx
  jump_7c893:
    mov    (%eax),%bl
    cmp    $0x30,%bl
    jb     jump_7c8ae
    cmp    $0x39,%bl
    ja     jump_7c8ae
    imul   $0xa,%edx,%edx
    xor    %ebx,%ebx
    mov    (%eax),%bl
    add    %ebx,%edx
    inc    %eax
    sub    $0x30,%edx
    jmp    jump_7c893
  jump_7c8ae:
    mov    %edx,(%ecx)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c8b3:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%ebp
    mov    %edx,0x10(%esp)
    cmpb   $0x3a,(%eax)
    jne    jump_7c8c6
    inc    %ebp
  jump_7c8c6:
    mov    %ebp,%esi
  jump_7c8c8:
    mov    0x0(%ebp),%dl
    test   %dl,%dl
    je     jump_7c8eb
    cmp    $0x2c,%dl
    je     jump_7c8eb
    cmp    $0x2d,%dl
    je     jump_7c8eb
    cmp    $0x2b,%dl
    je     jump_7c8eb
    cmp    $0x30,%dl
    jb     jump_7c8e8
    cmp    $0x39,%dl
    jbe    jump_7c8eb
  jump_7c8e8:
    inc    %ebp
    jmp    jump_7c8c8
  jump_7c8eb:
    mov    %ebp,%eax
    sub    %esi,%eax
    mov    %eax,0xc(%esp)
    cmp    $0x1e,%eax
    jle    jump_7c900
    movl   $0x1e,0xc(%esp)
  jump_7c900:
    mov    0x10(%esp),%edi
    mov    0xc(%esp),%ecx
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %es
    mov    0xc(%esp),%ecx
    lea    (%edi,%ecx,1),%eax
    xor    %esi,%esi
    movb   $0x0,(%eax)
    lea    0x1(%ebp),%eax
    cmp    $0x2d,%dl
    jne    jump_7c939
    mov    $0x1,%esi
    jmp    jump_7c93e
  jump_7c939:
    cmp    $0x2b,%dl
    jne    jump_7c940
  jump_7c93e:
    mov    %eax,%ebp
  jump_7c940:
    mov    0x0(%ebp),%al
    cmp    $0x30,%al
    jb     jump_7c9bf
    cmp    $0x39,%al
    ja     jump_7c9bf
    lea    0x8(%esp),%edx
    xor    %edi,%edi
    mov    %ebp,%eax
    mov    %edi,(%esp)
    mov    %edi,0x4(%esp)
    mov    %edi,0x8(%esp)
    call   func_7c88d
    mov    %eax,%edx
    mov    (%eax),%cl
    mov    %eax,%ebp
    cmp    $0x3a,%cl
    jne    jump_7c990
    lea    0x4(%esp),%edx
    inc    %eax
    call   func_7c88d
    mov    %eax,%edx
    mov    (%eax),%ch
    mov    %eax,%ebp
    cmp    %cl,%ch
    jne    jump_7c990
    mov    %esp,%edx
    inc    %eax
    call   func_7c88d
    mov    %eax,%ebp
  jump_7c990:
    mov    0x8(%esp),%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    0x4(%esp),%edx
    shl    $0x2,%eax
    add    %eax,%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    (%esp),%edx
    shl    $0x2,%eax
    add    %eax,%edx
    mov    %edx,(%ebx)
    test   %esi,%esi
    je     jump_7c9bf
    mov    %edx,%ecx
    neg    %ecx
    mov    %ecx,(%ebx)
  jump_7c9bf:
    mov    %ebp,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7c9c9:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    sub    $0x10,%esp
    mov    %eax,%ebx
    mov    %edx,%ecx
    mov    (%eax),%ah
    mov    $0xffffffff,%esi
    cmp    $0x4a,%ah
    jne    jump_7c9e6
    mov    $0x1,%esi
    add    %esi,%ebx
  jump_7c9e6:
    cmpb   $0x4d,(%ebx)
    jne    jump_7c9ee
    inc    %ebx
    xor    %esi,%esi
  jump_7c9ee:
    lea    0xc(%esp),%edx
    mov    %ebx,%eax
    mov    %esi,0x20(%ecx)
    call   func_7c88d
    mov    %eax,%edx
    mov    %eax,%ebx
    test   %esi,%esi
    je     jump_7ca0d
    mov    0xc(%esp),%eax
    mov    %eax,0x1c(%ecx)
    jmp    jump_7ca52
  jump_7ca0d:
    mov    0xc(%esp),%eax
    dec    %eax
    mov    %eax,0x10(%ecx)
    cmpb   $0x2e,(%edx)
    jne    jump_7ca4b
    lea    0x1(%edx),%eax
    lea    0xc(%esp),%edx
    call   func_7c88d
    mov    %eax,%edx
    mov    %eax,%ebx
    mov    0xc(%esp),%eax
    mov    %eax,0xc(%ecx)
    cmpb   $0x2e,(%edx)
    jne    jump_7ca4b
    lea    0x1(%edx),%eax
    lea    0xc(%esp),%edx
    call   func_7c88d
    mov    %eax,%ebx
    mov    0xc(%esp),%eax
    mov    %eax,0x18(%ecx)
  jump_7ca4b:
    movl   $0x0,0x1c(%ecx)
  jump_7ca52:
    mov    $0x2,%edx
    xor    %esi,%esi
    mov    %edx,0x8(%esp)
    mov    %esi,(%esp)
    mov    %esi,0x4(%esp)
    cmpb   $0x2f,(%ebx)
    jne    jump_7ca9f
    lea    0x8(%esp),%edx
    lea    0x1(%ebx),%eax
    call   func_7c88d
    mov    %eax,%edx
    mov    %eax,%ebx
    cmpb   $0x3a,(%eax)
    jne    jump_7ca9f
    lea    0x1(%edx),%eax
    lea    0x4(%esp),%edx
    call   func_7c88d
    mov    %eax,%edx
    mov    %eax,%ebx
    cmpb   $0x3a,(%eax)
    jne    jump_7ca9f
    lea    0x1(%edx),%eax
    mov    %esp,%edx
    call   func_7c88d
    mov    %eax,%ebx
  jump_7ca9f:
    mov    (%esp),%eax
    mov    %eax,(%ecx)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    %ebx,%eax
    add    $0x10,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_7cabb:
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x4,%esp
    xor    %edx,%edx
    mov    $data_99c48,%ebx
    mov    %edx,data_99c50
    mov    $data_99c54,%edx
    call   func_7c8b3
    mov    %eax,%edx
    mov    (%eax),%ah
    test   %ah,%ah
    jne    jump_7cae8
    mov    %ah,data_99c73
    jmp    jump_7cb43
  jump_7cae8:
    mov    $0x1,%ebx
    mov    data_99c48,%eax
    mov    %ebx,data_99c50
    sub    $0xe10,%eax
    mov    %esp,%ebx
    mov    %eax,(%esp)
    mov    %edx,%eax
    mov    $data_99c73,%edx
    call   func_7c8b3
    mov    (%esp),%ecx
    mov    data_99c48,%ebx
    sub    %ecx,%ebx
    mov    %ebx,data_99c4c
    mov    (%eax),%bl
    mov    %eax,%edx
    cmp    $0x2c,%bl
    jne    jump_7cb33
    mov    $data_99c00,%edx
    inc    %eax
    call   func_7c9c9
  jump_7cb33:
    cmpb   $0x2c,(%eax)
    jne    jump_7cb43
    mov    $data_99c24,%edx
    inc    %eax
    call   func_7c9c9
  jump_7cb43:
    add    $0x4,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7cb4a:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ebx,%eax
    cmp    $0xa8c0,%edx
    jae    jump_7cb77
    test   %ebx,%ebx
    jle    jump_7cb77
    lea    0x15180(%edx),%esi
    sub    %ebx,%esi
    xor    %edx,%edx
    mov    $0x15180,%ebx
    mov    %esi,%eax
    div    %ebx
    add    %eax,%edi
    dec    %edi
    jmp    jump_7cb86
  jump_7cb77:
    mov    $0x15180,%ebx
    sub    %eax,%esi
    xor    %edx,%edx
    mov    %esi,%eax
    div    %ebx
    add    %eax,%edi
  jump_7cb86:
    mov    $0x15180,%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    div    %ebx
    mov    %edx,%ebx
    mov    $0xe10,%esi
    mov    %ebx,%eax
    xor    %edx,%edx
    div    %esi
    xor    %edx,%edx
    mov    %eax,0x8(%ecx)
    mov    %ebx,%eax
    div    %esi
    mov    %edx,%ebx
    mov    $0x3c,%esi
    mov    %ebx,%eax
    xor    %edx,%edx
    div    %esi
    xor    %edx,%edx
    mov    %eax,0x4(%ecx)
    mov    %ebx,%eax
    div    %esi
    mov    $0x16e,%ebx
    mov    %edi,%eax
    mov    %edx,(%ecx)
    xor    %edx,%edx
    div    %ebx
    mov    %eax,%edx
    shl    $0x3,%eax
    add    %edx,%eax
    shl    $0x3,%eax
    add    %edx,%eax
    mov    %eax,%ebx
    shl    $0x2,%eax
    add    %ebx,%eax
    mov    %edi,%ebx
    sub    %eax,%ebx
    test   %edx,%edx
    jbe    jump_7cbed
    lea    -0x1(%edx),%eax
    shr    $0x2,%eax
    sub    %eax,%ebx
  jump_7cbed:
    lea    0x76c(%edx),%eax
    call   func_7cc88
    add    $0x16d,%eax
  jump_7cbfd:
    cmp    %eax,%ebx
    jb     jump_7cc06
    inc    %edx
    sub    %eax,%ebx
    jmp    jump_7cbfd
  jump_7cc06:
    mov    $data_9633c,%esi
    mov    %ebx,0x1c(%ecx)
    lea    0x76c(%edx),%eax
    mov    %edx,0x14(%ecx)
    call   func_7cc88
    test   %eax,%eax
    je     jump_7cc25
    mov    $data_96356,%esi
  jump_7cc25:
    mov    $0x1f,%ebp
    mov    %ebx,%eax
    xor    %edx,%edx
    div    %ebp
    mov    %eax,%edx
    mov    (%esi,%edx,2),%edx
    sar    $0x10,%edx
    cmp    %edx,%ebx
    jb     jump_7cc3d
    inc    %eax
  jump_7cc3d:
    mov    %eax,0x10(%ecx)
    movswl (%esi,%eax,2),%eax
    sub    %eax,%ebx
    xor    %edx,%edx
    inc    %ebx
    lea    0x1(%edi),%eax
    mov    %ebx,0xc(%ecx)
    mov    $0x7,%ebx
    div    %ebx
    mov    %ecx,%eax
    mov    %edx,0x18(%ecx)
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7cc88:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ebx
    test   $0x3,%bl
    jne    jump_7ccbd
    mov    %eax,%edx
    mov    $0x64,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    test   %edx,%edx
    je     jump_7ccab
  jump_7cca2:
    mov    $0x1,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_7ccab:
    mov    $0x190,%ecx
    mov    %ebx,%edx
    mov    %ebx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    test   %edx,%edx
    je     jump_7cca2
  jump_7ccbd:
    xor    %eax,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7ccc3:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x24,%esp
    mov    %eax,%ebx
    mov    0x20(%eax),%ecx
    test   %ecx,%ecx
    jne    jump_7cd90
    lea    0x76c(%edx),%eax
    call   func_7cc88
    test   %eax,%eax
    je     jump_7ccfa
    mov    0x10(%ebx),%eax
    mov    data_96356(,%eax,2),%esi
    mov    data_96354(,%eax,2),%eax
    jmp    jump_7cd0b
  jump_7ccfa:
    mov    0x10(%ebx),%eax
    mov    data_9633c(,%eax,2),%esi
    mov    data_9633a(,%eax,2),%eax
  jump_7cd0b:
    sar    $0x10,%esi
    sar    $0x10,%eax
    sub    %eax,%esi
    xor    %edi,%edi
    mov    $0x1,%ecx
    mov    %edi,(%esp)
    mov    %edi,0x4(%esp)
    mov    %edi,0x8(%esp)
    mov    %ecx,0xc(%esp)
    mov    0x10(%ebx),%eax
    mov    %eax,0x10(%esp)
    mov    %edx,0x14(%esp)
    mov    %esp,%eax
    mov    %edi,0x20(%esp)
    call   func_7b713
    mov    0x18(%esp),%ebp
    mov    0x18(%ebx),%edx
    sub    %ebp,%edx
    add    $0x7,%edx
    mov    $0x7,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    0xc(%ebx),%eax
    cmp    $0x5,%eax
    jne    jump_7cd7e
    lea    -0x1(%eax),%ecx
    mov    %ecx,%edi
    shl    $0x3,%edi
    lea    0x1(%edx),%eax
    sub    %ecx,%edi
    add    %edi,%eax
    cmp    %esi,%eax
    jle    jump_7cd7a
    mov    0xc(%ebx),%eax
    sub    $0x2,%eax
    jmp    jump_7cd7f
  jump_7cd7a:
    mov    %ecx,%eax
    jmp    jump_7cd7f
  jump_7cd7e:
    dec    %eax
  jump_7cd7f:
    mov    0x1c(%esp),%ebx
    add    %edx,%ebx
    mov    %eax,%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %ebx,%eax
    jmp    jump_7cd9f
  jump_7cd90:
    cmp    $0x1,%ecx
    jne    jump_7cd9c
    mov    0x1c(%eax),%eax
    sub    %ecx,%eax
    jmp    jump_7cd9f
  jump_7cd9c:
    mov    0x1c(%eax),%eax
  jump_7cd9f:
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7cda8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%esi
    mov    %ebx,%edx
    call   func_7ccc3
    mov    %eax,%edi
    mov    %ebx,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_7ccc3
    cmp    %eax,%edi
    jle    jump_7cdca
    mov    $0x1,%ecx
  jump_7cdca:
    mov    %ecx,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7cdd0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%ecx
    mov    data_99c96,%eax
    mov    (%eax),%dl
    xor    %edi,%edi
    test   %dl,%dl
    je     jump_7d074
    mov    $data_99c00,%eax
    mov    $data_99c24,%edx
    mov    0x14(%ecx),%ebx
    call   func_7cda8
    mov    %eax,0x10(%esp)
    test   %eax,%eax
    je     jump_7ce12
    mov    $data_99c24,%ebx
    mov    $data_99c00,%esi
    jmp    jump_7ce1c
  jump_7ce12:
    mov    $data_99c00,%ebx
    mov    $data_99c24,%esi
  jump_7ce1c:
    mov    0x14(%ecx),%eax
    add    $0x76c,%eax
    mov    0x10(%ecx),%ebp
    call   func_7cc88
    mov    %eax,%edx
    lea    0x0(%ebp,%ebp,1),%eax
    test   %edx,%edx
    je     jump_7ce44
    mov    data_96356(%eax),%edx
    mov    data_96354(%eax),%eax
    jmp    jump_7ce50
  jump_7ce44:
    mov    data_9633c(%eax),%edx
    mov    data_9633a(%eax),%eax
  jump_7ce50:
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %eax,%edx
    mov    %edx,0xc(%esp)
    xor    %edx,%edx
    mov    0x20(%ebx),%eax
    mov    %edx,0x14(%esp)
    test   %eax,%eax
    jne    jump_7cf20
    mov    0x10(%ebx),%eax
    cmp    %eax,%ebp
    jle    jump_7ce7e
    mov    $0x1,%edi
    jmp    jump_7cf59
  jump_7ce7e:
    jne    jump_7cf59
    mov    0x18(%ecx),%edx
    mov    0x18(%ebx),%eax
    add    $0x7,%edx
    sub    %eax,%edx
    movl   $0x7,0x18(%esp)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idivl  0x18(%esp)
    mov    0xc(%ecx),%eax
    sub    %edx,%eax
    mov    0x18(%ecx),%edx
    mov    %eax,(%esp)
    add    $0x6,%edx
    sub    0x18(%ebx),%edx
    movl   $0x7,0x18(%esp)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idivl  0x18(%esp)
    mov    0xc(%ecx),%eax
    dec    %eax
    sub    %edx,%eax
    mov    0xc(%ebx),%edx
    mov    %eax,0x8(%esp)
    cmp    $0x5,%edx
    jne    jump_7cef9
    mov    0xc(%esp),%eax
    mov    (%esp),%edx
    sub    $0x7,%eax
    cmp    %edx,%eax
    jge    jump_7cf59
    mov    0x8(%esp),%edx
    mov    $0x1,%edi
    cmp    %edx,%eax
    jl     jump_7cf59
    jmp    jump_7cf55
  jump_7cef9:
    lea    -0x1(%edx),%eax
    mov    %eax,0x18(%esp)
    mov    0x18(%esp),%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    (%esp),%edx
    inc    %eax
    cmp    %edx,%eax
    jg     jump_7cf59
    mov    0x8(%esp),%edx
    mov    $0x1,%edi
    cmp    %edx,%eax
    jle    jump_7cf59
    jmp    jump_7cf55
  jump_7cf20:
    mov    0x1c(%ebx),%edx
    cmp    $0x1,%eax
    jne    jump_7cf47
    mov    0x14(%ecx),%eax
    add    $0x76c,%eax
    call   func_7cc88
    test   %eax,%eax
    je     jump_7cf46
    mov    data_9633e,%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jle    jump_7cf46
    inc    %edx
  jump_7cf46:
    dec    %edx
  jump_7cf47:
    mov    0x1c(%ecx),%eax
    cmp    %eax,%edx
    jg     jump_7cf59
    mov    $0x1,%edi
    jne    jump_7cf59
  jump_7cf55:
    mov    %edi,0x14(%esp)
  jump_7cf59:
    cmpl   $0x0,0x14(%esp)
    je     jump_7cf71
    mov    %ecx,%eax
    mov    %ebx,%edx
    call   func_7d083
    test   %eax,%eax
    sete   %al
    movzbl %al,%edi
  jump_7cf71:
    test   %edi,%edi
    jne    jump_7cf88
    mov    0x10(%esp),%esi
    test   %esi,%esi
    je     jump_7d074
    mov    %esi,%edi
    jmp    jump_7d074
  jump_7cf88:
    mov    0x20(%esi),%eax
    xor    %ebx,%ebx
    test   %eax,%eax
    jne    jump_7d01e
    mov    0x10(%esi),%eax
    cmp    %eax,%ebp
    jle    jump_7cfa3
    xor    %edi,%edi
    jmp    jump_7d057
  jump_7cfa3:
    jne    jump_7d057
    mov    0x18(%ecx),%edx
    mov    0x18(%esi),%ebp
    add    $0x7,%edx
    sub    %ebp,%edx
    mov    $0x7,%ebp
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebp
    mov    0xc(%ecx),%eax
    sub    %edx,%eax
    mov    0x18(%ecx),%edx
    mov    %eax,0x4(%esp)
    add    $0x6,%edx
    mov    0x18(%esi),%eax
    sub    %eax,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebp
    mov    0xc(%ecx),%ebp
    dec    %ebp
    sub    %edx,%ebp
    mov    0xc(%esi),%edx
    xor    %edi,%edi
    cmp    $0x5,%edx
    jne    jump_7d007
    mov    0xc(%esp),%eax
    mov    0x4(%esp),%edx
    sub    $0x7,%eax
    cmp    %edx,%eax
    jl     jump_7d001
  jump_7cffa:
    mov    $0x1,%edi
    jmp    jump_7d057
  jump_7d001:
    cmp    %eax,%ebp
    jg     jump_7d057
    jmp    jump_7d052
  jump_7d007:
    dec    %edx
    mov    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    0x4(%esp),%edx
    inc    %eax
    cmp    %edx,%eax
    jg     jump_7cffa
    cmp    %eax,%ebp
    jge    jump_7d057
    jmp    jump_7d052
  jump_7d01e:
    mov    0x1c(%esi),%edx
    cmp    $0x1,%eax
    jne    jump_7d045
    mov    0x14(%ecx),%eax
    add    $0x76c,%eax
    call   func_7cc88
    test   %eax,%eax
    je     jump_7d044
    mov    data_9633e,%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jle    jump_7d044
    inc    %edx
  jump_7d044:
    dec    %edx
  jump_7d045:
    mov    0x1c(%ecx),%eax
    cmp    %eax,%edx
    jg     jump_7d057
    xor    %edi,%edi
    cmp    %eax,%edx
    jne    jump_7d057
  jump_7d052:
    mov    $0x1,%ebx
  jump_7d057:
    test   %ebx,%ebx
    je     jump_7d066
    mov    %ecx,%eax
    mov    %esi,%edx
    call   func_7d083
    mov    %eax,%edi
  jump_7d066:
    mov    0x10(%esp),%ebx
    test   %ebx,%ebx
    je     jump_7d074
    mov    %ebx,%eax
    sub    %edi,%eax
    mov    %eax,%edi
  jump_7d074:
    mov    %edi,%eax
    mov    %edi,0x20(%ecx)
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7d083:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %ebp
    mov    0x8(%eax),%ecx
    mov    0x8(%edx),%esi
    xor    %ebx,%ebx
    cmp    %esi,%ecx
    jl     jump_7d0a7
    jne    jump_7d0ac
    mov    0x4(%eax),%ecx
    mov    0x4(%edx),%ebp
    cmp    %ebp,%ecx
    jl     jump_7d0a7
    jne    jump_7d0ac
    mov    (%eax),%eax
    cmp    (%edx),%eax
    jge    jump_7d0ac
  jump_7d0a7:
    mov    $0x1,%ebx
  jump_7d0ac:
    mov    %ebx,%eax
    pop    %ebp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7d0b3:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    mov    %eax,%edx
    call   func_7b20c
    cmpl   $0x0,0x14(%edx)
    jne    jump_7d0e8
    mov    0xd(%edx),%ah
    test   $0x2,%ah
    je     jump_7d0d3
    movl   $0x86,0x14(%edx)
    jmp    jump_7d0e8
  jump_7d0d3:
    test   $0x4,%ah
    je     jump_7d0e1
    movl   $0x1,0x14(%edx)
    jmp    jump_7d0e8
  jump_7d0e1:
    movl   $0x1000,0x14(%edx)
  jump_7d0e8:
    mov    0x14(%edx),%eax
    call   func_78734
    mov    %eax,0x8(%edx)
    test   %eax,%eax
    jne    jump_7d117
    lea    0x18(%edx),%eax
    mov    0xd(%edx),%cl
    movl   $0x1,0x14(%edx)
    and    $0xf8,%cl
    mov    %eax,0x8(%edx)
    mov    %cl,%ch
    mov    %cl,0xd(%edx)
    or     $0x4,%ch
    mov    %ch,0xd(%edx)
    jmp    jump_7d11b
  jump_7d117:
    orb    $0x8,0xc(%edx)
  jump_7d11b:
    mov    0x8(%edx),%eax
    movl   $0x0,0x4(%edx)
    mov    %eax,(%edx)
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7d12a:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %ebx,%ecx
    mov    %eax,%ebx
    mov    $0x3f,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%edx
    test   %eax,%eax
    jge    jump_7d147
    and    $0xffff,%eax
    call   func_7b2b3
  jump_7d147:
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7d149:
/*----------------------------------------------------------------*/
    cmpb   $0x0,data_99c9c
    je     jump_7d16c
    and    $0xffff,%edx
    push   %edx
    push   %eax
    int3
    jmp    jump_7d163
  jump_7d163:
    mov    $0x1,%eax
    add    $0x8,%esp
    ret
  jump_7d16c:
    xor    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_7d16f:
/*----------------------------------------------------------------*/
    xor    %dh,(%ecx)
    xor    (%ebx),%dh
    xor    $0x35,%al
    ss aaa
    cmp    %bh,(%ecx)
    popa
    bound  %esp,0x64(%ebx)
    gs addr16 pushw $0x6a69
    imul   $0x6f,0x6e(%ebp,%ebp,2),%ebp
    jo     jump_7d1fb
    jb     jump_7d1ff
    je     jump_7d203
    jbe    jump_7d207
    js     jump_7d20b
    jp     func_7d194


/*----------------------------------------------------------------*/
func_7d194:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x28,%esp
    mov    %edx,%ebp
    mov    %ebx,%edi
    mov    %edx,%esi
    xor    %dl,%dl
    lea    0x1(%esp),%ecx
    mov    %dl,(%esp)
  jump_7d1aa:
    lea    0x24(%esp),%ebx
    mov    %edi,0x24(%esp)
    xor    %edx,%edx
    divl   (%ebx)
    mov    %eax,(%ebx)
    mov    %cs:func_7d16f(%edx),%al
    mov    %al,(%ecx)
    mov    0x24(%esp),%eax
    inc    %ecx
    test   %eax,%eax
    jne    jump_7d1aa
  jump_7d1ca:
    dec    %ecx
    mov    (%ecx),%al
    mov    %al,(%esi)
    inc    %esi
    test   %al,%al
    jne    jump_7d1ca
    mov    %ebp,%eax
    add    $0x28,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7d1de:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %edx,%ecx
    cmp    $0xa,%ebx
    jne    jump_7d1f0
    test   %eax,%eax
    jge    jump_7d1f0
    neg    %eax
    movb   $0x2d,(%edx)
    inc    %edx
  jump_7d1f0:
    call   func_7d194
    mov    %ecx,%eax
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7d1f9:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_95618,%eax
  jump_7d1ff:
    mov    $0x1,%edx
    call   func_7c3ef
    pop    %edx
    ret
  jump_7d20b:
    xor    %dh,(%ecx)
    xor    (%ebx),%dh
    xor    $0x35,%al
    ss aaa
    cmp    %bh,(%ecx)
    popa
    bound  %esp,0x64(%ebx)
    gs addr16 pushw $0x6a69
    imul   $0x6f,0x6e(%ebp,%ebp,2),%ebp
    jo     jump_7d297
    jb     jump_7d29b
    je     jump_7d29f
    jbe    jump_7d2a3
    js     jump_7d2a7
    jp     func_7d230


/*----------------------------------------------------------------*/
func_7d230:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %ebp
    sub    $0x28,%esp
    push   %edx
    mov    %ebx,%ebp
    mov    %edx,%esi
    xor    %dl,%dl
    lea    0x5(%esp),%ecx
    mov    %dl,0x4(%esp)
  jump_7d245:
    lea    0x28(%esp),%ebx
    mov    %ebp,0x28(%esp)
    xor    %edx,%edx
    divl   (%ebx)
    mov    %edx,(%ebx)
    mov    0x28(%esp),%edx
    mov    %cs:jump_7d20b(%edx),%dl
    mov    %dl,(%ecx)
    inc    %ecx
    test   %eax,%eax
    jne    jump_7d245
  jump_7d265:
    dec    %ecx
    mov    (%ecx),%al
    mov    %al,(%esi)
    inc    %esi
    test   %al,%al
    jne    jump_7d265
    mov    (%esp),%eax
    add    $0x2c,%esp
    pop    %ebp
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7d279:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %edx,%ecx
    cmp    $0xa,%ebx
    jne    jump_7d28b
    test   %eax,%eax
    jge    jump_7d28b
    neg    %eax
    movb   $0x2d,(%edx)
    inc    %edx
  jump_7d28b:
    call   func_7d230
    mov    %ecx,%eax
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7d294:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
  jump_7d297:
    push   %ebp
    sub    $0xc,%esp
  jump_7d29b:
    mov    %eax,%esi
    mov    %ebx,%edi
  jump_7d29f:
    movl   $0x0,0xc(%ebx)
    mov    %ds,0x8(%esp)
    mov    0x15(%edi),%cl
    xor    %ebx,%ebx
    cmp    $0x47,%cl
    jb     jump_7d2d1
    jbe    jump_7d2de
    cmp    $0x66,%cl
    jb     jump_7d2c7
    jbe    jump_7d2f3
    cmp    $0x67,%cl
    je     jump_7d2de
    jmp    jump_7d365
  jump_7d2c7:
    cmp    $0x65,%cl
    je     jump_7d2ee
    jmp    jump_7d365
  jump_7d2d1:
    cmp    $0x45,%cl
    jb     jump_7d365
    jbe    jump_7d2ee
    jmp    jump_7d2f3
  jump_7d2de:
    cmpl   $0x0,0x8(%edi)
    jne    jump_7d2eb
    movl   $0x1,0x8(%edi)
  jump_7d2eb:
    sub    $0x2,%cl
  jump_7d2ee:
    mov    $0x1,%ebx
  jump_7d2f3:
    mov    (%edx),%ebp
    add    $0x8,%ebp
    mov    %ebp,(%edx)
    mov    -0x8(%ebp),%eax
    mov    %eax,(%esp)
    mov    -0x4(%ebp),%eax
    mov    %eax,0x4(%esp)
    cmpl   $0xffffffff,0x8(%edi)
    jne    jump_7d314
    movl   $0x6,0x8(%edi)
  jump_7d314:
    mov    0x15(%edi),%al
    and    $0x5f,%al
    and    $0xff,%eax
    push   %eax
    xor    %eax,%eax
    mov    %cl,%al
    push   %eax
    push   $0x3
    push   %ebx
    lea    0x10(%esp),%edx
    xor    %ecx,%ecx
    push   $0x27
    mov    %esi,%eax
    mov    0x8(%edi),%ebx
    call   func_817b1
    mov    (%esi),%ah
    cmp    $0x2a,%ah
    jne    jump_7d343
    mov    %ah,0x16(%edi)
  jump_7d343:
    movb   $0x0,0x27(%esi)
  jump_7d347:
    cmpb   $0x20,(%esi)
    jne    jump_7d34f
    inc    %esi
    jmp    jump_7d347
  jump_7d34f:
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_7d371
    mov    %ds,0x8(%esp)
    mov    %esi,%eax
    movl   $0xffffffff,0x8(%edi)
  jump_7d365:
    mov    0x8(%esp),%edx
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7d371:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %edx,%ebx
    testb  $0x1,0x14(%edx)
    jne    jump_7d3b6
  jump_7d37b:
    mov    (%eax),%dh
    test   %dh,%dh
    je     jump_7d38e
    cmp    $0x65,%dh
    je     jump_7d38e
    cmp    $0x45,%dh
    je     jump_7d38e
    inc    %eax
    jmp    jump_7d37b
  jump_7d38e:
    mov    %eax,%edx
    mov    0x15(%ebx),%cl
    dec    %eax
    cmp    $0x47,%cl
    je     jump_7d39e
    cmp    $0x67,%cl
    jne    jump_7d3a6
  jump_7d39e:
    cmpb   $0x30,(%eax)
    jne    jump_7d3a6
    dec    %eax
    jmp    jump_7d39e
  jump_7d3a6:
    cmpb   $0x2e,(%eax)
    je     jump_7d3ac
    inc    %eax
  jump_7d3ac:
    mov    (%edx),%bl
    inc    %edx
    mov    %bl,(%eax)
    inc    %eax
    test   %bl,%bl
    jne    jump_7d3ac
  jump_7d3b6:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7d3b9:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,%ebx
    xor    %edx,%edx
    call   func_819d5
    fstpl  (%ebx)
    pop    %ebx
    ret

vtable_7d3c8:
    .long   0

vtable_7d3cc:
    .long   0


/*----------------------------------------------------------------*/
func_7d3d0:
/*----------------------------------------------------------------*/
    add    %al,(%eax)


/*----------------------------------------------------------------*/
func_7d3d2:
/*----------------------------------------------------------------*/
    or     (%eax),%al
    inc    %esi
    .byte 0x0

vtable_7d3d6:
    .long   0


/*----------------------------------------------------------------*/
func_7d422:
/*----------------------------------------------------------------*/
    cld
    incl   (%ecx)
    add    %al,(%eax)
    add    %al,(%edx)
    add    %al,(%ebx)
    add    %dh,%bl
    incl   (%eax,%eax,1)
    add    %al,(%eax)
    or     %al,(%eax)
    or     $0x0,%al
    iret


/*----------------------------------------------------------------*/
func_7d472:
/*----------------------------------------------------------------*/
    add    %eax,0x0(%eax)
    inc    %ebp
    add    %al,(%edx)
    inc    %eax
    inc    %edx
    add    %eax,(%ebx)
    inc    %ecx
    inc    %ebx
    xchg   %ebx,%ebx

vtable_7d480:
    .long   func_7da32
    .long   func_7da38
    .long   func_7da3e
    .long   func_7da44
    .long   func_7daf4
    .long   func_7da52
    .long   func_7da58
    .long   func_7da5e
    .long   func_7da64
    .long   func_7da6c
    .long   func_7da74
    .long   func_7da7c
    .long   func_7daf4
    .long   func_7da8e
    .long   func_7da98
    .long   func_7daa0
    .long   func_7daa8
    .long   func_7dab1
    .long   func_7daba
    .long   func_7dac3
    .long   func_7daf4
    .long   func_7dad7
    .long   func_7dae2
    .long   func_7daeb

vtable_7d4e0:
    .long   func_7da32
    .long   func_7da38
    .long   func_7da3e
    .long   func_7da44
    .long   func_7da4a
    .long   func_7da52
    .long   func_7da58
    .long   func_7da5e
    .long   func_7da64
    .long   func_7da6c
    .long   func_7da74
    .long   func_7da7c
    .long   func_7da84
    .long   func_7da8e
    .long   func_7da98
    .long   func_7daa0
    .long   func_7daa8
    .long   func_7dab1
    .long   func_7daba
    .long   func_7dac3
    .long   func_7dacc
    .long   func_7dad7
    .long   func_7dae2
    .long   func_7daeb

vtable_7d540:
    .long   func_7db31
    .long   func_7dc23
    .long   func_7dcff
    .long   func_7ddf1
    .long   func_7de8b
    .long   func_7dfe4
    .long   func_7e0ea
    .long   func_7e1ec
    .long   func_7db50
    .long   func_7db2c
    .long   func_7dd1e
    .long   func_7db2c
    .long   func_7deae
    .long   func_7db2c
    .long   func_7e10b
    .long   func_7db2c
    .long   func_7db6f
    .long   func_7dc5d
    .long   func_7dd3d
    .long   func_7de2b
    .long   func_7ded1
    .long   func_7e022
    .long   func_7e12c
    .long   func_7e228
    .long   func_7db8b
    .long   func_7dc6e
    .long   func_7dd59
    .long   func_7de67
    .long   func_7def1
    .long   func_7e055
    .long   func_7e14a
    .long   func_7e270
    .long   func_7dba7
    .long   func_7dc7f
    .long   func_7dd75
    .long   func_7db2c
    .long   func_7df11
    .long   func_7e06a
    .long   func_7e168
    .long   func_7e2a0
    .long   func_7dbc6
    .long   func_7dc9d
    .long   func_7dd94
    .long   func_7df9d
    .long   func_7df34
    .long   func_7db2c
    .long   func_7e189
    .long   func_7e2a5
    .long   func_7dbe5
    .long   func_7dcdd
    .long   func_7ddb3
    .long   func_7db2c
    .long   func_7df57
    .long   func_7e0b1
    .long   func_7e1aa
    .long   func_7e2df
    .long   func_7dc04
    .long   func_7dcf1
    .long   func_7ddd2
    .long   func_7e037
    .long   func_7df7a
    .long   func_7e0dc
    .long   func_7e1cb
    .long   func_7e2e4

vtable_7d640:
    .long   func_7e33a
    .long   func_7e3dc
    .long   func_7e308
    .long   func_7e308
    .long   func_7e9ed
    .long   func_7ea6b
    .long   func_7eb06
    .long   func_7ea6b
    .long   func_7e34f
    .long   func_7e424
    .long   func_7e308
    .long   func_7e308
    .long   func_7ea02
    .long   func_7e424
    .long   func_7eb51
    .long   func_7e424
    .long   func_7e364
    .long   func_7e30d
    .long   func_7e308
    .long   func_7e308
    .long   func_7e364
    .long   func_7ea8a
    .long   func_7e308
    .long   func_7ea8a
    .long   func_7e376
    .long   func_7eada
    .long   func_7e308
    .long   func_7e308
    .long   func_7e376
    .long   func_7eada
    .long   func_7eb9c
    .long   func_7eada
    .long   func_7e388
    .long   func_7e44c
    .long   func_7e308
    .long   func_7e993
    .long   func_7ea17
    .long   func_7eab6
    .long   func_7ec25
    .long   func_7ed51
    .long   func_7e39d
    .long   func_7e4cd
    .long   func_7e90a
    .long   func_7e308
    .long   func_7ea2c
    .long   func_7eac8
    .long   func_7ec70
    .long   func_7e308
    .long   func_7e3b2
    .long   func_7e6e8
    .long   func_7e308
    .long   func_7e308
    .long   func_7ea41
    .long   func_7e308
    .long   func_7ecbb
    .long   func_7e308
    .long   func_7e3c7
    .long   func_7e7f2
    .long   func_7e308
    .long   func_7e308
    .long   func_7ea56
    .long   func_7e308
    .long   func_7ed06
    .long   func_7e308


/*----------------------------------------------------------------*/
func_7d740:
/*----------------------------------------------------------------*/
    sti
    pusha
    mov    %esp,%ebp
    push   0x40(%ebp)
    push   0x44(%ebp)
    mov    0x3c(%ebp),%cx
    mov    %cx,-0x6(%ebp)
    mov    0x38(%ebp),%ecx
    mov    %ecx,0xc(%ebp)
    call   func_7d7d4
    pop    %ds
    pop    %es
    popa
    iret


/*----------------------------------------------------------------*/
func_7d7b0:
/*----------------------------------------------------------------*/
    sti
    sub    $0xc,%esp
    push   %eax
    mov    %esp,%eax
    add    $0x1c,%eax
    push   %ecx
    push   %edx
    push   %ebx
    push   %eax
    push   %ebp
    push   %esi
    push   %edi
    push   %es
    push   %ds
    mov    %ss,0x2(%esp)
    call   func_7d7d4
    pop    %ds
    pop    %es
    popa
    add    $0xc,%esp
    iret


/*----------------------------------------------------------------*/
func_7d7d4:
/*----------------------------------------------------------------*/
    mov    %esp,%ebp
    mov    0x38(%ebp),%esi
    mov    0x3c(%ebp),%ds
    mov    0x4(%ebp),%cx
    mov    0x6(%ebp),%dx
    mov    (%esi),%al
    cmp    $0x9b,%al
    jbe    jump_7d860
  jump_7d7ee:
    mov    %al,%bl
    and    $0xf8,%bl
    cmp    $0xd8,%bl
    jne    jump_7d907
    mov    0x1(%esi),%ah
    add    $0x2,%esi
    and    $0x7,%al
    cmp    $0xc0,%ah
    jae    jump_7d8bd
    mov    %ah,%bl
    mov    %ah,%bh
    shr    $0x3,%bh
    and    $0x1807,%ebx
    or     %bh,%bl
    mov    $0x0,%bh
    call   *%cs:vtable_7d480(,%ebx,4)
    mov    %cx,%es
    mov    %esi,0x38(%ebp)
    mov    %ebx,%esi
    mov    %ah,%bl
    and    $0x38,%ebx
    or     %al,%bl
    call   func_78680
    lea    data_99ca8,%ebp
    mov    %ds:0x4(%ebp),%edi
    and    $0x3800,%edi
    shr    $0xb,%edi
    lea    (%edi,%edi,4),%edi
    add    %edi,%edi
    jmp    *%cs:vtable_7d540(,%ebx,4)
  jump_7d85a:
    mov    (%esi),%al
    cmp    $0x9b,%al
    ja     jump_7d7ee
  jump_7d860:
    je     jump_7d886
    cmp    $0x26,%al
    je     jump_7d8a4
    cmp    $0x2e,%al
    je     jump_7d889
    cmp    $0x36,%al
    je     jump_7d89b
    cmp    $0x3e,%al
    je     jump_7d892
    cmp    $0x64,%al
    je     jump_7d8ad
    cmp    $0x65,%al
    je     jump_7d8b5
    cmp    $0x66,%al
    je     jump_7d886
    cmp    $0x67,%al
    jne    jump_7d7ee
  jump_7d886:
    inc    %esi
    jmp    jump_7d85a
  jump_7d889:
    mov    0x3c(%ebp),%cx
    mov    %ecx,%edx
    inc    %esi
    jmp    jump_7d85a
  jump_7d892:
    mov    0x4(%ebp),%cx
    mov    %ecx,%edx
    inc    %esi
    jmp    jump_7d85a
  jump_7d89b:
    mov    0x6(%ebp),%cx
    mov    %ecx,%edx
    inc    %esi
    jmp    jump_7d85a
  jump_7d8a4:
    mov    0x8(%ebp),%cx
    mov    %ecx,%edx
    inc    %esi
    jmp    jump_7d85a
  jump_7d8ad:
    mov    %fs,%cx
    mov    %ecx,%edx
    inc    %esi
    jmp    jump_7d85a
  jump_7d8b5:
    mov    %gs,%cx
    mov    %ecx,%edx
    inc    %esi
    jmp    jump_7d85a
  jump_7d8bd:
    mov    %esi,0x38(%ebp)
    call   func_78680
    lea    data_99ca8,%ebp
    mov    %ah,%dl
    and    $0x38,%edx
    or     %al,%dl
    mov    %ds:0x4(%ebp),%edi
    and    $0x3800,%edi
    shr    $0xb,%edi
    mov    %ah,%bl
    and    $0x7,%ebx
    mov    %ebx,%esi
    cmp    $0xf801,%ax
    jne    jump_7d8f0
    mov    $0x1,%si
  jump_7d8f0:
    add    %edi,%esi
    and    $0x7,%esi
    lea    (%edi,%edi,4),%edi
    add    %edi,%edi
    lea    (%esi,%esi,4),%esi
    add    %esi,%esi
    jmp    *%cs:vtable_7d640(,%edx,4)
  jump_7d907:
    ret


/*----------------------------------------------------------------*/
func_7d908:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%ebx
    mov    $0xffffff00,%edx
    mov    0x4(%ebx),%eax
    shl    $0x19,%eax
    jae    jump_7d936
    jne    jump_7d922
    cmpl   $0x0,(%ebx)
    jne    jump_7d922
    add    %edx,%edx
  jump_7d922:
    addl   $0x100,0x4(%ebx)
    jae    jump_7d936
    movl   $0x80000000,0x4(%ebx)
    incw   0x8(%ebx)
  jump_7d936:
    and    %edx,0x4(%ebx)
    movl   $0x0,(%ebx)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7d944:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%ebx
    mov    $0xfffff800,%edx
    mov    (%ebx),%eax
    shl    $0x16,%eax
    jae    jump_7d96f
    jne    jump_7d958
    add    %edx,%edx
  jump_7d958:
    addl   $0x800,(%ebx)
    adcl   $0x0,0x4(%ebx)
    jae    jump_7d96f
    movl   $0x80000000,0x4(%ebx)
    incw   0x8(%ebx)
  jump_7d96f:
    and    %edx,(%ebx)
    jmp    func_7d7d4
  jump_7d976:
    inc    %eax
    mov    %ds:0x4(%ebp),%dx
    and    $0xb8ff,%dx
    or     %cs:func_7d472(%eax),%dh
    mov    %dx,%ds:0x4(%ebp)
  jump_7d98d:
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    jmp    func_7d7d4
  jump_7d9c8:
    inc    %eax
    mov    %ds:0x4(%ebp),%dx
    and    $0xb8ff,%dx
    or     %cs:func_7d472(%eax),%dh
    mov    %dx,%ds:0x4(%ebp)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7d9e4:
/*----------------------------------------------------------------*/
    or     %al,%ds:0x4(%ebp)
    test   %al,%ds:0x0(%ebp)
    jne    jump_7da31
    push   %esi
    push   %edi
    push   %ecx
    push   %es
    push   %ds
    sub    $0x6c,%esp
    mov    %ss,%cx
    mov    %cx,%es
    mov    %ebp,%esi
    mov    %esp,%edi
    mov    $0x1b,%ecx
    cld
    rep movsl %ds:(%esi),%es:(%edi)
    movzbl %ah,%eax
    call   *data_9995d
    mov    %ds,%cx
    mov    %cx,%es
    mov    %ss,%cx
    mov    %cx,%ds
    mov    %ebp,%edi
    mov    %esp,%esi
    mov    $0x1b,%ecx
    cld
    rep movsl %ds:(%esi),%es:(%edi)
    add    $0x6c,%esp
    pop    %ds
    pop    %es
    pop    %ecx
    pop    %edi
    pop    %esi
  jump_7da31:
    ret


/*----------------------------------------------------------------*/
func_7da32:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0x28(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7da38:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0x24(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7da3e:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0x20(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7da44:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0x1c(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7da4a:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0x18(%ebp),%ebx
    mov    %edx,%ecx
    ret


/*----------------------------------------------------------------*/
func_7da52:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    ret


/*----------------------------------------------------------------*/
func_7da58:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0x10(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7da5e:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0xc(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7da64:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x28(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7da6c:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x24(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7da74:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x20(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7da7c:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x1c(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7da84:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x18(%ebp),%ebx
    mov    %edx,%ecx
    ret


/*----------------------------------------------------------------*/
func_7da8e:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x14(%ebp),%ebx
    mov    %edx,%ecx
    ret


/*----------------------------------------------------------------*/
func_7da98:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x10(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7daa0:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0xc(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7daa8:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x28(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7dab1:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x24(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7daba:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x20(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7dac3:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x1c(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7dacc:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x18(%ebp),%ebx
    mov    %edx,%ecx
    ret


/*----------------------------------------------------------------*/
func_7dad7:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x14(%ebp),%ebx
    mov    %edx,%ecx
    ret


/*----------------------------------------------------------------*/
func_7dae2:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x10(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7daeb:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0xc(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_7daf4:
/*----------------------------------------------------------------*/
    mov    (%esi),%bl
    inc    %esi
    push   %ebx
    and    $0x7,%bl
    mov    %ah,%bh
    shr    $0x3,%bh
    and    $0x18,%bh
    or     %bh,%bl
    mov    $0x0,%bh
    call   *%cs:vtable_7d4e0(,%ebx,4)
    pop    %edx
    push   %ecx
    mov    %edx,%ecx
    and    $0x38,%dl
    cmp    $0x20,%dl
    je     jump_7db2a
    shr    %edx
    neg    %edx
    mov    0x28(%ebp,%edx,1),%edx
    shr    $0x6,%cl
    shl    %cl,%edx
    add    %edx,%ebx
  jump_7db2a:
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7db2c:
/*----------------------------------------------------------------*/
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7db31:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f722
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eef8
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7db50:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f722
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f32c
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7db6f:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f722
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f0be
    jmp    jump_7d9c8


/*----------------------------------------------------------------*/
func_7db8b:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f722
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f0be
    jmp    jump_7d976


/*----------------------------------------------------------------*/
func_7dba7:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f722
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eeea
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7dbc6:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f722
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eeea
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7dbe5:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f722
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f157
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7dc04:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f722
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f157
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7dc23:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %es:(%esi),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7f722
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7dc5d:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7f5dc
    mov    %eax,%es:(%esi)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7dc6e:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7f5dc
    mov    %eax,%es:(%esi)
    jmp    jump_7d98d


/*----------------------------------------------------------------*/
func_7dc7f:
/*----------------------------------------------------------------*/
    mov    $0x7,%ecx
    push   %ds
    push   %es
    mov    %es,%ax
    mov    %ds,%dx
    mov    %dx,%es
    mov    %ax,%ds
    mov    %ebp,%edi
    rep movsl %ds:(%esi),%es:(%edi)
    pop    %es
    pop    %ds
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7dc9d:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    mov    %ax,%ds:0x0(%ebp)
    and    $0x300,%ax
    cmp    $0x300,%ax
    jne    jump_7dcbc
    lea    func_7d7d4,%edx
    mov    %edx,%ds:0x76(%ebp)
    jmp    jump_7dcd8
  jump_7dcbc:
    cmp    $0x200,%ax
    jne    jump_7dcce
    lea    func_7d944,%edx
    mov    %edx,%ds:0x76(%ebp)
    jmp    jump_7dcd8
  jump_7dcce:
    lea    func_7d908,%edx
    mov    %edx,%ds:0x76(%ebp)
  jump_7dcd8:
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7dcdd:
/*----------------------------------------------------------------*/
    mov    $0x7,%ecx
    mov    %edi,%ebx
    mov    %esi,%edi
    mov    %ebp,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    %ebx,%edi
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7dcf1:
/*----------------------------------------------------------------*/
    mov    %ds:0x0(%ebp),%ax
    mov    %ax,%es:(%esi)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7dcff:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eef8
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7dd1e:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f32c
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7dd3d:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f0be
    jmp    jump_7d9c8


/*----------------------------------------------------------------*/
func_7dd59:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f0be
    jmp    jump_7d976


/*----------------------------------------------------------------*/
func_7dd75:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eeea
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7dd94:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eeea
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ddb3:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f157
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ddd2:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f157
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ddf1:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %es:(%esi),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7f516
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7de2b:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%ebx
    push   (%ebx)
    push   0x4(%ebx)
    push   0x6(%ebx)
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %ds:0x0(%ebp),%dx
    and    $0xc00,%dx
    call   func_7f7e7
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7f4a7
    mov    %eax,%es:(%esi)
    lea    0x1c(%edi,%ebp,1),%ebx
    pop    0x6(%ebx)
    pop    0x4(%ebx)
    pop    (%ebx)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7de67:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %ds:0x0(%ebp),%dx
    and    $0xc00,%dx
    call   func_7f7e7
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7f4a7
    mov    %eax,%es:(%esi)
    jmp    jump_7d98d


/*----------------------------------------------------------------*/
func_7de8b:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7f55c
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eef8
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7deae:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7f55c
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f32c
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ded1:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7f55c
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f0be
    jmp    jump_7d9c8


/*----------------------------------------------------------------*/
func_7def1:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7f55c
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f0be
    jmp    jump_7d976


/*----------------------------------------------------------------*/
func_7df11:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7f55c
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eeea
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7df34:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7f55c
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eeea
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7df57:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7f55c
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f157
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7df7a:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7f55c
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f157
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7df9d:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %es:(%esi),%eax
    mov    %eax,0x1c(%edi,%ebp,1)
    mov    %es:0x4(%esi),%eax
    mov    %eax,0x20(%edi,%ebp,1)
    mov    %es:0x8(%esi),%ax
    mov    %ax,0x24(%edi,%ebp,1)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7dfe4:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f55c
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e022:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7f65b
    mov    %eax,%es:(%esi)
    mov    %edx,%es:0x4(%esi)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e037:
/*----------------------------------------------------------------*/
    mov    0x1c(%edi,%ebp,1),%eax
    mov    %eax,%es:(%esi)
    mov    0x20(%edi,%ebp,1),%eax
    mov    %eax,%es:0x4(%esi)
    mov    0x24(%edi,%ebp,1),%ax
    mov    %ax,%es:0x8(%esi)
    jmp    jump_7d98d


/*----------------------------------------------------------------*/
func_7e055:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7f65b
    mov    %eax,%es:(%esi)
    mov    %edx,%es:0x4(%esi)
    jmp    jump_7d98d


/*----------------------------------------------------------------*/
func_7e06a:
/*----------------------------------------------------------------*/
    mov    $0x7,%ecx
    push   %ds
    push   %es
    mov    %es,%ax
    mov    %ds,%dx
    mov    %dx,%es
    mov    %ax,%ds
    mov    %ebp,%edi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    %es:0x4(%ebp),%ebx
    and    $0x3800,%ebx
    shr    $0xb,%ebx
    lea    (%ebx,%ebx,4),%ebx
    add    %ebx,%ebx
    mov    $0x8,%ecx
  jump_7e098:
    lea    0x1c(%ebp,%ebx,1),%edi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movzwl %cs:func_7d3d2(%ebx),%ebx
    loop   jump_7e098
    pop    %es
    pop    %ds
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e0b1:
/*----------------------------------------------------------------*/
    mov    $0x7,%ecx
    mov    %edi,%ebx
    mov    %esi,%edi
    mov    %ebp,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    $0x8,%ecx
  jump_7e0c3:
    lea    0x1c(%ebx,%ebp,1),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movzwl %cs:func_7d3d2(%ebx),%ebx
    loop   jump_7e0c3
    mov    %ebx,%edi
    jmp    func_7e9c7


/*----------------------------------------------------------------*/
func_7e0dc:
/*----------------------------------------------------------------*/
    mov    %ds:0x4(%ebp),%ax
    mov    %ax,%es:(%esi)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e0ea:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eef8
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e10b:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f32c
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e12c:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f0be
    jmp    jump_7d9c8


/*----------------------------------------------------------------*/
func_7e14a:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f0be
    jmp    jump_7d976


/*----------------------------------------------------------------*/
func_7e168:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eeea
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e189:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eeea
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e1aa:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f157
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e1cb:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7f516
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f157
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e1ec:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %es:(%esi),%ax
    cwtl
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7f516
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e228:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%ebx
    push   (%ebx)
    push   0x4(%ebx)
    push   0x6(%ebx)
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %ds:0x0(%ebp),%dx
    and    $0xc00,%dx
    call   func_7f7e7
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7f4a7
    mov    %eax,%edx
    cwtl
    cmp    %edx,%eax
    je     jump_7e25b
    mov    $0x8000,%ax
  jump_7e25b:
    mov    %ax,%es:(%esi)
    lea    0x1c(%edi,%ebp,1),%ebx
    pop    0x6(%ebx)
    pop    0x4(%ebx)
    pop    (%ebx)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e270:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %ds:0x0(%ebp),%dx
    and    $0xc00,%dx
    call   func_7f7e7
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7f4a7
    mov    %eax,%edx
    cwtl
    cmp    %edx,%eax
    je     jump_7e297
    mov    $0x8000,%ax
  jump_7e297:
    mov    %ax,%es:(%esi)
    jmp    jump_7d98d


/*----------------------------------------------------------------*/
func_7e2a0:
/*----------------------------------------------------------------*/
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e2a5:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %es:(%esi),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7f527
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e2df:
/*----------------------------------------------------------------*/
    jmp    jump_7d98d


/*----------------------------------------------------------------*/
func_7e2e4:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %ds:0x0(%ebp),%dx
    and    $0xc00,%dx
    call   func_7f7e7
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7f4ac
    mov    %eax,%es:(%esi)
    jmp    jump_7d98d


/*----------------------------------------------------------------*/
func_7e308:
/*----------------------------------------------------------------*/
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e30d:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_7e315(,%ebx,4)

vtable_7e315:
    .long   func_7e335
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308


/*----------------------------------------------------------------*/
func_7e335:
/*----------------------------------------------------------------*/
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e33a:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eef8
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e34f:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f32c
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e364:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    call   func_7f0be
    jmp    jump_7d9c8


/*----------------------------------------------------------------*/
func_7e376:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    call   func_7f0be
    jmp    jump_7d976


/*----------------------------------------------------------------*/
func_7e388:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eeea
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e39d:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7eeea
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e3b2:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f157
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e3c7:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7f157
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e3dc:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    0x1c(%esi,%ebp,1),%eax
    mov    %eax,0x1c(%edi,%ebp,1)
    mov    0x20(%esi,%ebp,1),%eax
    mov    %eax,0x20(%edi,%ebp,1)
    mov    0x24(%esi,%ebp,1),%ax
    mov    %ax,0x24(%edi,%ebp,1)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e424:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%ebx
    lea    0x1c(%esi,%ebp,1),%esi
    mov    (%esi),%eax
    xchg   %eax,(%ebx)
    mov    %eax,(%esi)
    mov    0x4(%esi),%eax
    xchg   %eax,0x4(%ebx)
    mov    %eax,0x4(%esi)
    mov    0x8(%esi),%ax
    xchg   %ax,0x8(%ebx)
    mov    %ax,0x8(%esi)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e44c:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_7e454(,%ebx,4)

vtable_7e454:
    .long   func_7e474
    .long   func_7e481
    .long   func_7e308
    .long   func_7e308
    .long   func_7e48e
    .long   func_7e4bf
    .long   func_7e308
    .long   func_7e308


/*----------------------------------------------------------------*/
func_7e474:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    xorb   $0x80,0x9(%eax)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e481:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    andb   $0x7f,0x9(%eax)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e48e:
/*----------------------------------------------------------------*/
    mov    %cs:vtable_7d3c8,%eax
    mov    %eax,%ds:0x6c(%ebp)
    mov    %cs:vtable_7d3cc,%eax
    mov    %eax,%ds:0x70(%ebp)
    mov    %cs:func_7d3d0,%ax
    mov    %ax,%ds:0x74(%ebp)
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7f0be
    jmp    jump_7d9c8


/*----------------------------------------------------------------*/
func_7e4bf:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7fc6e
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e4cd:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_7e4d5(,%ebx,4)

vtable_7e4d5:
    .long   func_7e4f5
    .long   func_7e538
    .long   func_7e57d
    .long   func_7e5c2
    .long   func_7e607
    .long   func_7e64c
    .long   func_7e691
    .long   func_7e308


/*----------------------------------------------------------------*/
func_7e4f5:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    sub    %eax,%eax
    mov    %eax,(%esi)
    movl   $0x80000000,0x4(%esi)
    movw   $0x3fff,0x8(%esi)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e538:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    movl   $0xcd1b8afe,(%esi)
    movl   $0xd49a784b,0x4(%esi)
    movw   $0x4000,0x8(%esi)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e57d:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    movl   $0x5c17f0bc,(%esi)
    movl   $0xb8aa3b29,0x4(%esi)
    movw   $0x3fff,0x8(%esi)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e5c2:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    movl   $0x2168c235,(%esi)
    movl   $0xc900daa2,0x4(%esi)
    movw   $0x4000,0x8(%esi)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e607:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    movl   $0xfbcff799,(%esi)
    movl   $0x9a209a84,0x4(%esi)
    movw   $0x3ffd,0x8(%esi)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e64c:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    movl   $0xd1cf79ac,(%esi)
    movl   $0xb17217f7,0x4(%esi)
    movw   $0x3ffe,0x8(%esi)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e691:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    sub    %eax,%eax
    mov    %eax,(%esi)
    mov    %eax,0x4(%esi)
    mov    %ax,0x8(%esi)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d424(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e6e8:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_7e6f0(,%ebx,4)

vtable_7e6f0:
    .long   func_7e710
    .long   func_7e71d
    .long   func_7e764
    .long   func_7ed79
    .long   func_7edc2
    .long   func_7ee27
    .long   func_7e7b0
    .long   func_7e7d1


/*----------------------------------------------------------------*/
func_7e710:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_80294
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e71d:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7fd75
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e764:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_8025e
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    sub    %eax,%eax
    mov    %eax,(%esi)
    movl   $0x80000000,0x4(%esi)
    movw   $0x3fff,0x8(%esi)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e7b0:
/*----------------------------------------------------------------*/
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e7d1:
/*----------------------------------------------------------------*/
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e7f2:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_7e7fa(,%ebx,4)

vtable_7e7fa:
    .long   func_7e81a
    .long   func_7e844
    .long   func_7e88b
    .long   func_7e898
    .long   func_7ee51
    .long   func_7ee69
    .long   func_7e8f0
    .long   func_7e8fd


/*----------------------------------------------------------------*/
func_7e81a:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    call   func_7fb8d
    and    $0x7,%eax
    mov    %ds:0x4(%ebp),%dx
    and    $0xb8ff,%dx
    or     %cs:0x7d476(%eax),%dh /* Warning: address points to a valid object/reloc, but no label found */
    mov    %dx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e844:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7fd5c
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e88b:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_80468
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e898:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%ebx
    push   (%ebx)
    push   0x4(%ebx)
    push   0x6(%ebx)
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_80247
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%ebx
    pop    0x6(%ebx)
    pop    0x4(%ebx)
    pop    (%ebx)
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_80251
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e8f0:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_80247
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e8fd:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_80251
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7e90a:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_7e912(,%ebx,4)

vtable_7e912:
    .long   func_7e308
    .long   func_7e932
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308


/*----------------------------------------------------------------*/
func_7e932:
/*----------------------------------------------------------------*/
    mov    0x1c(%edi,%ebp,1),%eax
    mov    %eax,%ds:0x6c(%ebp)
    mov    0x20(%edi,%ebp,1),%eax
    mov    %eax,%ds:0x70(%ebp)
    mov    0x24(%edi,%ebp,1),%ax
    mov    %ax,%ds:0x74(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7f0be
    jmp    jump_7d976


/*----------------------------------------------------------------*/
func_7e993:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_7e99b(,%ebx,4)

vtable_7e99b:
    .long   func_7e308
    .long   func_7e308
    .long   func_7e9bb
    .long   func_7e9c7
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308


/*----------------------------------------------------------------*/
func_7e9bb:
/*----------------------------------------------------------------*/
    andw   $0x7f00,%ds:0x4(%ebp)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e9c7:
/*----------------------------------------------------------------*/
    movw   $0x33f,%ds:0x0(%ebp)
    movw   $0x0,%ds:0x4(%ebp)
    movw   $0xffff,%ds:0x8(%ebp)
    lea    func_7d7d4,%edx
    mov    %edx,%ds:0x76(%ebp)
    sub    %edi,%edi
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7e9ed:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7eef8
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ea02:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7f32c
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ea17:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7eeea
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ea2c:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7eeea
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ea41:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7f157
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ea56:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7f157
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ea6b:
/*----------------------------------------------------------------*/
    mov    %cs:func_7d422(%esi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%esi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7ea8a:
/*----------------------------------------------------------------*/
    mov    0x1c(%edi,%ebp,1),%eax
    mov    %eax,0x1c(%esi,%ebp,1)
    mov    0x20(%edi,%ebp,1),%eax
    mov    %eax,0x20(%esi,%ebp,1)
    mov    0x24(%edi,%ebp,1),%ax
    mov    %ax,0x24(%esi,%ebp,1)
    mov    %cs:func_7d422(%esi),%bx
    and    %bx,%ds:0x8(%ebp)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7eab6:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    call   func_7f0be
    jmp    jump_7d9c8


/*----------------------------------------------------------------*/
func_7eac8:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    call   func_7f0be
    jmp    jump_7d976


/*----------------------------------------------------------------*/
func_7eada:
/*----------------------------------------------------------------*/
    mov    0x1c(%edi,%ebp,1),%eax
    mov    %eax,0x1c(%esi,%ebp,1)
    mov    0x20(%edi,%ebp,1),%eax
    mov    %eax,0x20(%esi,%ebp,1)
    mov    0x24(%edi,%ebp,1),%ax
    mov    %ax,0x24(%esi,%ebp,1)
    mov    %cs:func_7d422(%esi),%bx
    and    %bx,%ds:0x8(%ebp)
    jmp    jump_7d98d


/*----------------------------------------------------------------*/
func_7eb06:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7eef8
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7eb51:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7f32c
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7eb9c:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_7eba4(,%ebx,4)

vtable_7eba4:
    .long   func_7e308
    .long   func_7ebc4
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308


/*----------------------------------------------------------------*/
func_7ebc4:
/*----------------------------------------------------------------*/
    mov    0x1c(%edi,%ebp,1),%eax
    mov    %eax,%ds:0x6c(%ebp)
    mov    0x20(%edi,%ebp,1),%eax
    mov    %eax,%ds:0x70(%ebp)
    mov    0x24(%edi,%ebp,1),%ax
    mov    %ax,%ds:0x74(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7f0be
    jmp    jump_7d976


/*----------------------------------------------------------------*/
func_7ec25:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7eeea
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ec70:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7eeea
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ecbb:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7f157
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ed06:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7f157
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ed51:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_7ed59(,%ebx,4)

vtable_7ed59:
    .long   func_7eeda
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308
    .long   func_7e308


/*----------------------------------------------------------------*/
func_7ed79:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%edx
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x7d42a(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_7d3d2(%edi),%edi
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %eax,%ebx
    call   func_7f974
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7edc2:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%esi
    movzwl %cs:0x7d3d4(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_7d3d6(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_7d422(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%ebx
    mov    (%esi),%eax
    mov    %eax,(%ebx)
    mov    0x4(%esi),%eax
    mov    %eax,0x4(%ebx)
    mov    0x8(%esi),%ax
    mov    %ax,%dx
    and    $0x8000,%dx
    or     $0x3fff,%dx
    mov    %dx,0x8(%ebx)
    and    $0x7fff,%ax
    sub    $0x3fff,%ax
    cwtl
    mov    %esi,%edx
    call   func_7f4a7
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7ee27:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    call   func_7fb8d
    and    $0x7,%eax
    mov    %ds:0x4(%ebp),%dx
    and    $0xb8ff,%dx
    or     %cs:0x7d476(%eax),%dh /* Warning: address points to a valid object/reloc, but no label found */
    mov    %dx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7ee51:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %ds:0x0(%ebp),%dx
    and    $0xc00,%dx
    call   func_7f7e7
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7ee69:
/*----------------------------------------------------------------*/
    mov    %edi,%esi
    movzwl %cs:func_7d3d2(%edi),%edi
    lea    0x1c(%edi,%ebp,1),%eax
    mov    0x8(%eax),%cx
    call   func_7f4a7
    mov    %esi,%edi
    lea    0x1c(%edi,%ebp,1),%ebx
    mov    %eax,%edx
    cwtl
    cmp    %edx,%eax
    je     jump_7eea8
    or     %ch,%ch
    jns    jump_7ee99
    sub    %dx,%dx
    sub    %cx,%cx
    jmp    jump_7eea6
  jump_7ee99:
    mov    $0x7fff,%dx
    mov    0x8(%ebx),%cx
    and    $0x8000,%cx
  jump_7eea6:
    jmp    jump_7eece
  jump_7eea8:
    mov    0x8(%ebx),%dx
    mov    %dx,%cx
    and    $0x8000,%cx
    and    $0x7fff,%dx
    add    %ax,%dx
    jns    jump_7eece
    or     %ah,%ah
    jns    jump_7eeca
    sub    %dx,%dx
    sub    %cx,%cx
    jmp    jump_7eece
  jump_7eeca:
    mov    $0x7fff,%dx
  jump_7eece:
    or     %cx,%dx
    mov    %dx,0x8(%ebx)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7eeda:
/*----------------------------------------------------------------*/
    mov    %ds:0x4(%ebp),%ax
    mov    %esp,%ebp
    mov    %ax,0x28(%ebp)
    jmp    func_7d7d4


/*----------------------------------------------------------------*/
func_7eeea:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ecx
    push   %ebx
    mov    0x8(%edx),%si
    xor    $0x8000,%si
    jmp    jump_7eeff


/*----------------------------------------------------------------*/
func_7eef8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ecx
    push   %ebx
    mov    0x8(%edx),%si
  jump_7eeff:
    mov    0x4(%edx),%ecx
    mov    (%edx),%ebx
    shl    $0x10,%esi
    mov    0x8(%eax),%si
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    call   func_7ef52
    pop    %ebx
    mov    %eax,(%ebx)
    mov    %edx,0x4(%ebx)
    mov    %si,0x8(%ebx)
    pop    %ecx
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7ef22:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ecx
    push   %ebx
    mov    0x18(%esp),%si
    mov    0x14(%esp),%ecx
    mov    0x10(%esp),%ebx
    shl    $0x10,%esi
    mov    0x8(%eax),%si
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    call   func_7ef52
    pop    %ebx
    mov    %eax,(%ebx)
    mov    %edx,0x4(%ebx)
    mov    %si,0x8(%ebx)
    pop    %ecx
    pop    %esi
    ret    $0xc


/*----------------------------------------------------------------*/
func_7ef52:
/*----------------------------------------------------------------*/
    or     %eax,%eax
    jne    jump_7ef75
    or     %edx,%edx
    jne    jump_7ef75
    add    %si,%si
    jne    jump_7ef72
    shr    $0x10,%esi
    mov    %ebx,%eax
    mov    %ecx,%edx
    add    %esi,%esi
    or     %si,%bx
    or     %edx,%ebx
    je     jump_7ef71
    shr    %esi
  jump_7ef71:
    ret
  jump_7ef72:
    rcr    %si
  jump_7ef75:
    or     %ecx,%ecx
    jne    jump_7ef86
    or     %ebx,%ebx
    jne    jump_7ef86
    test   $0x7fff0000,%esi
    jne    jump_7ef86
    ret
  jump_7ef86:
    push   %ebp
    push   %edi
    xchg   %ecx,%esi
    mov    %ecx,%edi
    rol    $0x10,%edi
    sar    $0x10,%edi
    sar    $0x10,%ecx
    and    $0x80007fff,%edi
    and    $0x80007fff,%ecx
    mov    %ecx,%ebp
    rol    $0x10,%edi
    rol    $0x10,%ecx
    add    %di,%cx
    rol    $0x10,%edi
    rol    $0x10,%ecx
    sub    %di,%cx
    je     jump_7efd5
    jae    jump_7efc1
    mov    %edi,%ebp
    neg    %cx
    xchg   %eax,%ebx
    xchg   %edx,%esi
  jump_7efc1:
    cmp    $0x40,%cx
    jbe    jump_7efd5
    add    %ebp,%ebp
    rcr    %bp
    mov    %ebx,%eax
    mov    %esi,%edx
    mov    %ebp,%esi
    pop    %edi
    pop    %ebp
    ret
  jump_7efd5:
    mov    $0x0,%ch
    or     %ecx,%ecx
    jns    jump_7efea
    mov    $0xff,%ch
    neg    %esi
    neg    %ebx
    sbb    $0x0,%esi
    xor    $0x80000000,%ebp
  jump_7efea:
    sub    %edi,%edi
    cmp    $0x0,%cl
    je     jump_7f01d
    push   %ebx
    sub    %ebx,%ebx
    cmp    $0x20,%cl
    jb     jump_7f00f
    or     %eax,%eax
    setne  %bl
    mov    %ebx,%edi
    sub    %ebx,%ebx
    cmp    $0x40,%cl
    jne    jump_7f00b
    or     %edx,%edi
    sub    %edx,%edx
  jump_7f00b:
    mov    %edx,%eax
    sub    %edx,%edx
  jump_7f00f:
    shrd   %cl,%eax,%ebx
    or     %ebx,%edi
    sub    %ebx,%ebx
    shrd   %cl,%edx,%eax
    shrd   %cl,%ebx,%edx
    pop    %ebx
  jump_7f01d:
    add    %ebx,%eax
    adc    %esi,%edx
    adc    $0x0,%ch
    jns    jump_7f04e
    cmp    $0x40,%cl
    jne    jump_7f03f
    test   $0x7fffffff,%edi
    setne  %bl
    shr    %ebx
    adc    $0x0,%eax
    adc    $0x0,%edx
    adc    $0x0,%ch
  jump_7f03f:
    neg    %edx
    neg    %eax
    sbb    $0x0,%edx
    mov    $0x0,%ch
    xor    $0x80000000,%ebp
  jump_7f04e:
    mov    %eax,%ebx
    or     %ch,%bl
    or     %edx,%ebx
    je     jump_7f0a5
    or     %bp,%bp
    je     jump_7f0a7
    cmp    $0x0,%ch
    jne    jump_7f06e
    rol    %edi
    ror    %edi
  jump_7f064:
    dec    %bp
    je     jump_7f0a7
    adc    %eax,%eax
    adc    %edx,%edx
    jae    jump_7f064
  jump_7f06e:
    inc    %bp
    cmp    $0x7fff,%bp
    je     jump_7f0b1
    stc
    rcr    %edx
    rcr    %eax
    jae    jump_7f0a3
    add    %edi,%edi
    jne    jump_7f08a
    ror    %eax
    rol    %eax
  jump_7f08a:
    adc    $0x0,%eax
    adc    $0x0,%edx
    jae    jump_7f0a3
    rcr    %edx
    rcr    %eax
    inc    %bp
    cmp    $0x7fff,%bp
    je     jump_7f0b1
  jump_7f0a3:
    jmp    jump_7f0a7
  jump_7f0a5:
    mov    %ebx,%ebp
  jump_7f0a7:
    add    %ebp,%ebp
    rcr    %bp
    mov    %ebp,%esi
    pop    %edi
    pop    %ebp
    ret
  jump_7f0b1:
    mov    $0x7fff,%bp
    sub    %eax,%eax
    mov    $0x80000000,%edx
    jmp    jump_7f0a7


/*----------------------------------------------------------------*/
func_7f0be:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    mov    0x8(%eax),%si
    or     $0x8000,%si
    inc    %si
    jne    jump_7f0d6
    mov    0x4(%eax),%esi
    add    %esi,%esi
    or     (%eax),%esi
    jne    jump_7f129
  jump_7f0d6:
    mov    0x8(%edx),%si
    or     $0x8000,%si
    inc    %si
    jne    jump_7f0ec
    mov    0x4(%edx),%esi
    add    %esi,%esi
    or     (%edx),%esi
    jne    jump_7f129
  jump_7f0ec:
    mov    0x6(%eax),%esi
    mov    0x6(%edx),%edi
    xor    %esi,%edi
    mov    $0x0,%edi
    js     jump_7f131
    mov    0x8(%eax),%si
    cmp    0x8(%edx),%si
    jne    jump_7f111
    mov    0x4(%eax),%edi
    cmp    0x4(%edx),%edi
    jne    jump_7f111
    mov    (%eax),%edi
    cmp    (%edx),%edi
  jump_7f111:
    mov    $0x0,%edi
    je     jump_7f124
    rcr    %eax
    xor    %eax,%esi
  jump_7f11c:
    add    %esi,%esi
    sbb    $0x0,%edi
    add    %edi,%edi
    inc    %edi
  jump_7f124:
    mov    %edi,%eax
    pop    %esi
    pop    %edi
    ret
  jump_7f129:
    mov    $0x2,%eax
    pop    %esi
    pop    %edi
    ret
  jump_7f131:
    or     (%eax),%edi
    or     (%edx),%edi
    or     0x4(%eax),%edi
    or     0x4(%edx),%edi
    mov    0x8(%eax),%ax
    shl    $0x10,%eax
    mov    0x8(%edx),%ax
    and    $0x7fff7fff,%eax
    or     %edi,%eax
    mov    $0x0,%edi
    jne    jump_7f11c
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7f157:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ecx
    push   %ebx
    mov    0x8(%edx),%si
    mov    0x4(%edx),%ecx
    mov    (%edx),%ebx
    shl    $0x10,%esi
    mov    0x8(%eax),%si
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    call   func_7f181
    pop    %ebx
    mov    %eax,(%ebx)
    mov    %edx,0x4(%ebx)
    mov    %si,0x8(%ebx)
    pop    %ecx
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7f181:
/*----------------------------------------------------------------*/
    or     %ecx,%ecx
    jne    jump_7f1cc
    or     %ebx,%ebx
    jne    jump_7f1cc
    test   $0x7fff0000,%esi
    jne    jump_7f1cc
    or     %eax,%eax
    jne    jump_7f1b6
    or     %edx,%edx
    jne    jump_7f1b6
    mov    %esi,%eax
    add    %ax,%ax
    jne    jump_7f1b6
    mov    $0x1,%al
    mov    $0x81,%ah
    call   func_7d9e4
    mov    $0xc0000000,%edx
    sub    %eax,%eax
    mov    $0xffff,%si
    jmp    jump_7f1cb
  jump_7f1b6:
    mov    $0x4,%al
    mov    $0x83,%ah
    call   func_7d9e4
    mov    $0x80000000,%edx
    sub    %eax,%eax
    or     $0x7fff,%si
  jump_7f1cb:
    ret
  jump_7f1cc:
    or     %eax,%eax
    jne    jump_7f1dd
    or     %edx,%edx
    jne    jump_7f1dd
    add    %si,%si
    jne    jump_7f1da
    ret
  jump_7f1da:
    rcr    %si
  jump_7f1dd:
    push   %ebp
    mov    %esp,%ebp
    push   %edi
    xchg   %ecx,%esi
    mov    %ecx,%edi
    rol    $0x10,%edi
    sar    $0x10,%edi
    sar    $0x10,%ecx
    and    $0x80007fff,%edi
    and    $0x80007fff,%ecx
    rol    $0x10,%edi
    rol    $0x10,%ecx
    add    %cx,%di
    rol    $0x10,%edi
    rol    $0x10,%ecx
    or     %di,%di
    jne    jump_7f218
  jump_7f20e:
    add    %eax,%eax
    adc    %edx,%edx
    dec    %di
    or     %edx,%edx
    jns    jump_7f20e
  jump_7f218:
    or     %cx,%cx
    jne    jump_7f227
  jump_7f21d:
    add    %ebx,%ebx
    adc    %esi,%esi
    dec    %cx
    or     %esi,%esi
    jns    jump_7f21d
  jump_7f227:
    sub    %cx,%di
    add    $0x3fff,%di
    js     jump_7f24a
    cmp    $0x7fff,%di
    jb     jump_7f24a
    mov    %ecx,%edi
    mov    $0x7fff,%di
    mov    $0x80000000,%edx
    sub    %eax,%eax
    jmp    jump_7f322
  jump_7f24a:
    cmp    $0xffc0,%di
    jge    jump_7f25b
    sub    %eax,%eax
    sub    %edx,%edx
    sub    %edi,%edi
    jmp    jump_7f322
  jump_7f25b:
    push   %edi
    push   %esi
    push   %ebx
    mov    %esi,%ecx
    mov    %edx,%edi
    mov    %eax,%esi
    sub    %eax,%eax
    cmp    %edi,%ecx
    ja     jump_7f26d
    sub    %ecx,%edx
    inc    %eax
  jump_7f26d:
    push   %eax
    mov    %esi,%eax
    div    %ecx
    push   %eax
    xchg   %eax,%ebx
    mul    %ebx
    xchg   %eax,%ecx
    xchg   %ebx,%edx
    mul    %edx
    add    %ebx,%eax
    adc    $0x0,%edx
    mov    -0x10(%ebp),%ebx
    testb  $0x1,-0x14(%ebp)
    je     jump_7f28e
    add    %ebx,%eax
    adc    -0xc(%ebp),%edx
  jump_7f28e:
    neg    %ecx
    sbb    %eax,%esi
    sbb    %edx,%edi
    je     jump_7f2a8
  jump_7f296:
    subl   $0x1,-0x18(%ebp)
    sbbl   $0x0,-0x14(%ebp)
    add    %ebx,%ecx
    adc    -0xc(%ebp),%esi
    adc    $0x0,%edi
    jne    jump_7f296
  jump_7f2a8:
    mov    %esi,%edi
    mov    %ecx,%esi
    mov    -0xc(%ebp),%ecx
    cmp    %edi,%ecx
    ja     jump_7f2bd
    sub    %ecx,%edi
    addl   $0x1,-0x18(%ebp)
    adcl   $0x0,-0x14(%ebp)
  jump_7f2bd:
    mov    %edi,%edx
    mov    %esi,%eax
    div    %ecx
    push   %eax
    or     %eax,%eax
    je     jump_7f2f4
    xchg   %eax,%ebx
    mul    %ebx
    xchg   %eax,%ecx
    xchg   %ebx,%edx
    mul    %edx
    add    %ebx,%eax
    adc    $0x0,%edx
    neg    %ecx
    sbb    %eax,%esi
    sbb    %edx,%edi
    je     jump_7f2f4
  jump_7f2dd:
    subl   $0x1,-0x1c(%ebp)
    sbbl   $0x0,-0x18(%ebp)
    sbbl   $0x0,-0x14(%ebp)
    add    -0x10(%ebp),%ecx
    adc    -0xc(%ebp),%esi
    adc    $0x0,%edi
    jne    jump_7f2dd
  jump_7f2f4:
    pop    %eax
    pop    %edx
    pop    %ebx
    add    $0x8,%esp
    pop    %edi
    dec    %di
    shr    %ebx
    jae    jump_7f306
    rcr    %edx
    rcr    %eax
    inc    %edi
  jump_7f306:
    or     %di,%di
    jg     jump_7f322
    jne    jump_7f311
    mov    $0x1,%cl
    jmp    jump_7f317
  jump_7f311:
    neg    %di
    mov    %di,%cx
  jump_7f317:
    sub    %ebx,%ebx
    shrd   %cl,%edx,%eax
    shrd   %cl,%ebx,%edx
    sub    %di,%di
  jump_7f322:
    add    %edi,%edi
    rcr    %di
    mov    %edi,%esi
    pop    %edi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7f32c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ecx
    push   %ebx
    mov    0x8(%edx),%si
    mov    0x4(%edx),%ecx
    mov    (%edx),%ebx
    shl    $0x10,%esi
    mov    0x8(%eax),%si
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    call   func_7f356
    pop    %ebx
    mov    %eax,(%ebx)
    mov    %edx,0x4(%ebx)
    mov    %si,0x8(%ebx)
    pop    %ecx
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7f356:
/*----------------------------------------------------------------*/
    or     %eax,%eax
    jne    jump_7f367
    or     %edx,%edx
    jne    jump_7f367
    add    %si,%si
    jne    jump_7f364
    ret
  jump_7f364:
    rcr    %si
  jump_7f367:
    or     %ecx,%ecx
    jne    jump_7f37e
    or     %ebx,%ebx
    jne    jump_7f37e
    test   $0x7fff0000,%esi
    jne    jump_7f37e
    sub    %eax,%eax
    sub    %edx,%edx
    sub    %esi,%esi
    ret
  jump_7f37e:
    push   %ebp
    push   %edi
    xchg   %ecx,%esi
    mov    %ecx,%edi
    rol    $0x10,%edi
    sar    $0x10,%edi
    sar    $0x10,%ecx
    and    $0x80007fff,%edi
    and    $0x80007fff,%ecx
    add    %edi,%ecx
    sub    $0x3ffe,%cx
    jb     jump_7f3ae
    cmp    $0x7fff,%cx
    jb     jump_7f3ae
    jmp    jump_7f445
  jump_7f3ae:
    cmp    $0xffc0,%cx
    jge    jump_7f3bf
    sub    %eax,%eax
    sub    %edx,%edx
    sub    %ecx,%ecx
    jmp    jump_7f43b
  jump_7f3bf:
    push   %ecx
    sub    %ebp,%ebp
    push   %esi
    push   %edx
    push   %eax
    mul    %ebx
    xchg   %eax,%esi
    mov    %edx,%ecx
    pop    %edx
    mul    %edx
    mov    %edx,%edi
    add    %eax,%ecx
    adc    %ebp,%edi
    adc    %ebp,%ebp
    pop    %eax
    xchg   %eax,%ebx
    mul    %ebx
    add    %eax,%ecx
    adc    %edx,%edi
    adc    $0x0,%ebp
    mov    %ebx,%eax
    pop    %edx
    mul    %edx
    add    %edi,%eax
    adc    %ebp,%edx
    mov    %ecx,%ebx
    pop    %ecx
    js     jump_7f3f6
    add    %ebx,%ebx
    adc    %eax,%eax
    adc    %edx,%edx
    dec    %cx
  jump_7f3f6:
    add    %ebx,%ebx
    jae    jump_7f422
    jne    jump_7f409
    or     %esi,%esi
    setne  %bl
    shr    %ebx
    jb     jump_7f409
    mov    %eax,%esi
    shr    %esi
  jump_7f409:
    adc    $0x0,%eax
    adc    $0x0,%edx
    jae    jump_7f422
    rcr    %edx
    rcr    %eax
    inc    %cx
    cmp    $0x7fff,%cx
    je     jump_7f445
  jump_7f422:
    or     %cx,%cx
    jg     jump_7f43b
    jne    jump_7f42d
    mov    $0x1,%cl
    jmp    jump_7f430
  jump_7f42d:
    neg    %cx
  jump_7f430:
    sub    %ebx,%ebx
    shrd   %cl,%edx,%eax
    shrd   %cl,%ebx,%edx
    sub    %cx,%cx
  jump_7f43b:
    add    %ecx,%ecx
    rcr    %cx
    mov    %ecx,%esi
    pop    %edi
    pop    %ebp
    ret
  jump_7f445:
    mov    $0x7fff,%cx
    mov    $0x80000000,%edx
    sub    %eax,%eax
    jmp    jump_7f43b


/*----------------------------------------------------------------*/
func_7f4a7:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x1f,%bl
    jmp    jump_7f4af


/*----------------------------------------------------------------*/
func_7f4ac:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x20,%bl
  jump_7f4af:
    mov    0x9(%eax),%bh
    shr    %bh
    or     %bl,%bh
    push   %ecx
    mov    0x8(%eax),%cx
    and    $0x7fff,%cx
    sub    $0x3ffe,%cx
    jl     jump_7f511
    cmp    $0x20,%cx
    jg     jump_7f509
    and    $0x3f,%bl
    cmp    %bl,%cl
    jg     jump_7f509
    mov    %bh,%ch
    mov    (%eax),%ebx
    mov    0x4(%eax),%eax
    add    %ebx,%ebx
    rcr    %ch
    cmp    $0x20,%cl
    jne    jump_7f4e8
    add    %ch,%ch
    jmp    jump_7f4f5
  jump_7f4e8:
    sub    %ebx,%ebx
    shld   %cl,%eax,%ebx
    shl    %cl,%eax
    add    %ch,%ch
    add    %eax,%eax
    mov    %ebx,%eax
  jump_7f4f5:
    mov    $0xff,%cl
    rcr    %cl
    and    %cl,%ch
    add    %ch,%ch
    adc    $0x0,%eax
    add    %ch,%ch
    jae    jump_7f506
    neg    %eax
  jump_7f506:
    pop    %ecx
    pop    %ebx
    ret
  jump_7f509:
    mov    $0x80000000,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_7f511:
    sub    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7f516:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,%ebx
    or     %eax,%eax
    jns    jump_7f526
    neg    %eax
    mov    $0xbfff,%edx
    jmp    jump_7f52f
  jump_7f526:
    pop    %ebx


/*----------------------------------------------------------------*/
func_7f527:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,%ebx
    mov    $0x3fff,%edx
  jump_7f52f:
    push   %ecx
    or     %eax,%eax
    je     jump_7f54a
    bsr    %eax,%ecx
    mov    %cl,%ch
    mov    $0x1f,%cl
    sub    %ch,%cl
    shl    %cl,%eax
    mov    %ch,%cl
    movzbl %ch,%ecx
    add    %edx,%ecx
    mov    %eax,%edx
    jmp    jump_7f54e
  jump_7f54a:
    sub    %edx,%edx
    sub    %ecx,%ecx
  jump_7f54e:
    sub    %eax,%eax
    mov    %eax,(%ebx)
    mov    %edx,0x4(%ebx)
    mov    %cx,0x8(%ebx)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7f55c:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %edx,%ecx
    shld   $0xb,%eax,%edx
    shl    $0xb,%eax
    sar    $0x14,%ecx
    and    $0x7ff,%cx
    je     jump_7f5a7
    cmp    $0x7ff,%cx
    je     jump_7f57e
    add    $0x3c00,%cx
    jmp    jump_7f59f
  jump_7f57e:
    mov    $0x7fff,%cx
    test   $0x7fffffff,%edx
    jne    jump_7f58c
    or     %eax,%eax
  jump_7f58c:
    je     jump_7f59f
    push   %eax
    mov    $0x1,%al
    mov    $0x81,%ah
    call   func_7d9e4
    pop    %eax
    or     $0x40000000,%edx
  jump_7f59f:
    or     $0x80000000,%edx
    jmp    jump_7f5cc
  jump_7f5a7:
    or     %edx,%edx
    jne    jump_7f5b3
    or     %eax,%eax
    jne    jump_7f5b3
    sub    %ecx,%ecx
    jmp    jump_7f5cc
  jump_7f5b3:
    mov    $0x3c01,%cx
    or     %edx,%edx
    jne    jump_7f5c0
    xchg   %eax,%edx
    sub    $0x20,%cx
  jump_7f5c0:
    or     %edx,%edx
    js     jump_7f5cc
    add    %eax,%eax
    adc    %edx,%edx
    dec    %cx
    jmp    jump_7f5c0
  jump_7f5cc:
    mov    %eax,(%ebx)
    mov    %edx,0x4(%ebx)
    add    %ecx,%ecx
    rcr    %cx
    mov    %cx,0x8(%ebx)
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7f5dc:
/*----------------------------------------------------------------*/
    push   %edx
    push   %ecx
    push   %ebx
    mov    %eax,%ebx
    mov    $0xffffff00,%edx
    mov    0x4(%ebx),%eax
    mov    %eax,%ecx
    shl    $0x19,%ecx
    mov    0x8(%ebx),%cx
    jae    jump_7f60b
    jne    jump_7f5fd
    cmpl   $0x0,(%ebx)
    jne    jump_7f5fd
    add    %edx,%edx
  jump_7f5fd:
    add    $0x100,%eax
    jae    jump_7f60b
    mov    $0x80000000,%eax
    inc    %cx
  jump_7f60b:
    and    %edx,%eax
    mov    %ecx,%ebx
    and    $0x7fff,%cx
    je     jump_7f657
    cmp    $0x7fff,%cx
    jne    jump_7f62e
    add    %eax,%eax
    shr    $0x8,%eax
    or     $0xff000000,%eax
    add    %bx,%bx
    rcr    %eax
    jmp    jump_7f657
  jump_7f62e:
    add    $0xc080,%cx
    jns    jump_7f639
    sub    %eax,%eax
    jmp    jump_7f657
  jump_7f639:
    cmp    $0xff,%cx
    jl     jump_7f64c
    mov    $0xff000000,%eax
    add    %bx,%bx
    rcr    %eax
    jmp    jump_7f657
  jump_7f64c:
    add    %eax,%eax
    shrd   $0x8,%ecx,%eax
    add    %bx,%bx
    rcr    %eax
  jump_7f657:
    pop    %ebx
    pop    %ecx
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7f65b:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %ebx
    push   %esi
    mov    0x8(%eax),%cx
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    mov    $0xfffff800,%esi
    mov    %eax,%ebx
    shl    $0x16,%ebx
    jae    jump_7f688
    jne    jump_7f677
    add    %esi,%esi
  jump_7f677:
    add    $0x800,%eax
    adc    $0x0,%edx
    jae    jump_7f688
    mov    $0x80000000,%edx
    inc    %cx
  jump_7f688:
    and    %esi,%eax
    mov    %ecx,%ebx
    and    $0x7fff,%cx
    add    $0xc400,%cx
    cmp    $0x7ff,%cx
    jae    jump_7f6be
    or     %cx,%cx
    jne    jump_7f6ad
    shrd   $0xc,%edx,%eax
    add    %edx,%edx
    shr    $0xc,%edx
    jmp    jump_7f6b7
  jump_7f6ad:
    shrd   $0xb,%edx,%eax
    add    %edx,%edx
    shrd   $0xb,%ecx,%edx
  jump_7f6b7:
    add    %bx,%bx
    rcr    %edx
    jmp    jump_7f71e
  jump_7f6be:
    cmp    $0xc400,%cx
    jb     jump_7f6f8
    cmp    $0xffcc,%cx
    jl     jump_7f6f2
    sub    $0xc,%cx
    neg    %cx
    cmp    $0x20,%cl
    jb     jump_7f6e0
    sub    $0x20,%cl
    mov    %eax,%esi
    mov    %edx,%eax
    sub    %edx,%edx
  jump_7f6e0:
    shrd   %cl,%eax,%esi
    shrd   %cl,%edx,%eax
    shr    %cl,%edx
    add    %esi,%esi
    adc    $0x0,%eax
    adc    $0x0,%edx
    jmp    jump_7f6f6
  jump_7f6f2:
    sub    %eax,%eax
    sub    %edx,%edx
  jump_7f6f6:
    jmp    jump_7f71e
  jump_7f6f8:
    shrd   $0xb,%edx,%eax
    add    %edx,%edx
    shr    $0xb,%edx
    add    %bx,%bx
    rcr    %edx
    or     $0x7ff00000,%edx
    cmp    $0x43ff,%cx
    je     jump_7f71e
    push   %eax
    mov    $0x8,%al
    mov    $0x84,%ah
    call   func_7d9e4
    pop    %eax
  jump_7f71e:
    pop    %esi
    pop    %ebx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7f722:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %ebx
    mov    %edx,%ebx
    sub    %edx,%edx
    mov    %eax,%ecx
    sar    $0x17,%ecx
    and    $0xff,%cx
    je     jump_7f75b
    shl    $0x8,%eax
    cmp    $0xff,%cl
    je     jump_7f743
    add    $0x3f80,%cx
    jmp    jump_7f751
  jump_7f743:
    mov    $0xff,%ch
    and    $0x7fffffff,%eax
    je     jump_7f751
    or     $0x40000000,%eax
  jump_7f751:
    add    %ecx,%ecx
    rcr    %cx
    or     $0x80000000,%eax
  jump_7f75b:
    mov    %edx,(%ebx)
    mov    %eax,0x4(%ebx)
    mov    %cx,0x8(%ebx)
    pop    %ebx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7f767:
/*----------------------------------------------------------------*/
    (bad)
    (bad)
    (bad)
    jg     jump_7f76b
    (bad)
    (bad)
    aas
    (bad)
    (bad)
    lcall  *(%edi)
    (bad)
    (bad)
    decl   (%edi)
    (bad)
    (bad)
    incl   (%edi)
    (bad)
    (bad)
    incl   (%ebx)
    (bad)
    (bad)
    incl   (%ecx)
    (bad)
    (bad)
    incl   (%eax)
    (bad)
    (bad)
    jg     jump_7f78b
  jump_7f78b:
    (bad)
    (bad)
    aas
    add    %bh,%bh
    lcall  *(%edi)
    add    %bh,%bh
    decl   (%edi)
    add    %bh,%bh
    incl   (%edi)
    add    %bh,%bh
    incl   (%ebx)
    add    %bh,%bh
    incl   (%ecx)
    add    %bh,%bh
    incl   (%eax)
    add    %bh,%bh
    jg     jump_7f7aa
  jump_7f7aa:
    add    %bh,%bh
    aas
    add    %al,(%eax)
    lcall  *(%edi)
    add    %al,(%eax)
    decl   (%edi)
    add    %al,(%eax)
    incl   (%edi)
    add    %al,(%eax)
    incl   (%ebx)
    add    %al,(%eax)
    incl   (%ecx)
    add    %al,(%eax)
    incl   (%eax)
    add    %al,(%eax)
    jg     jump_7f7c9
  jump_7f7c9:
    add    %al,(%eax)
    aas
    add    %al,(%eax)
    add    %bl,(%edi)
    add    %al,(%eax)
    add    %cl,(%edi)
    add    %al,(%eax)
    add    %al,(%edi)
    add    %al,(%eax)
    add    %al,(%ebx)
    add    %al,(%eax)
    add    %al,(%ecx)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %dl,-0x75(%edi)
    clc
    sub    %ebx,%ebx
    mov    0x8(%edi),%bx
    cmp    $0x400,%dx
    je     jump_7f7fc
    cmp    $0x800,%dx
  jump_7f7fc:
    jne    jump_7f807
    or     %bh,%bh
    jns    jump_7f807
    xor    $0xc00,%dx
  jump_7f807:
    cmp    $0xc00,%dx
    jne    jump_7f812
    mov    $0x400,%dx
  jump_7f812:
    and    $0x7fff,%bx
    sub    $0x403f,%bx
    jl     jump_7f820
    pop    %edi
    ret
  jump_7f820:
    mov    (%edi),%ecx
    add    $0x20,%bx
    jl     jump_7f876
    mov    %cs:func_7f767(,%ebx,4),%eax
    and    %eax,%ecx
    xor    %ecx,(%edi)
    inc    %eax
    cmp    $0x400,%dx
    je     jump_7f874
    cmp    $0x0,%dx
    jne    jump_7f861
    add    %ecx,%ecx
    cmp    %ecx,%eax
    ja     jump_7f874
    jne    jump_7f861
    rol    %eax
    jae    jump_7f857
    test   %eax,0x4(%edi)
    jmp    jump_7f859
  jump_7f857:
    test   %eax,(%edi)
  jump_7f859:
    je     jump_7f874
    ror    %eax
  jump_7f861:
    or     %ecx,%ecx
    je     jump_7f874
    add    %eax,(%edi)
    adcl   $0x0,0x4(%edi)
    jae    jump_7f874
    rcrl   0x4(%edi)
    incw   0x8(%edi)
  jump_7f874:
    pop    %edi
    ret
  jump_7f876:
    push   %esi
    movl   $0x0,(%edi)
    mov    0x4(%edi),%esi
    add    $0x20,%bx
    jl     jump_7f8d9
    mov    %cs:func_7f767(,%ebx,4),%eax
    and    %eax,%esi
    xor    %esi,0x4(%edi)
    inc    %eax
    cmp    $0x400,%dx
    je     jump_7f8d6
    cmp    $0x0,%dx
    jne    jump_7f8c6
    rol    %ecx
    adc    %esi,%esi
    cmp    %esi,%eax
    ja     jump_7f8d6
    jne    jump_7f8c6
    or     %ecx,%ecx
    jne    jump_7f8ca
    add    %eax,%eax
    jb     jump_7f8be
    test   %eax,0x4(%edi)
  jump_7f8be:
    je     jump_7f8d6
    shr    %eax
  jump_7f8c6:
    or     %esi,%ecx
    je     jump_7f8d6
  jump_7f8ca:
    add    %eax,0x4(%edi)
    jae    jump_7f8d6
    rcrl   0x4(%edi)
    incw   0x8(%edi)
  jump_7f8d6:
    pop    %esi
    pop    %edi
    ret
  jump_7f8d9:
    cmp    $0x400,%dx
    je     jump_7f90e
    cmp    $0x0,%dx
    jne    jump_7f8fe
    inc    %bx
    jne    jump_7f90e
    cmp    $0x80000000,%esi
    jne    jump_7f8fe
    or     %ecx,%ecx
    je     jump_7f90e
  jump_7f8fe:
    movl   $0x80000000,0x4(%edi)
    orw    $0x3fff,0x8(%edi)
    pop    %esi
    pop    %edi
    ret
  jump_7f90e:
    sub    %eax,%eax
    mov    %eax,0x4(%edi)
    mov    %ax,0x8(%edi)
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7f91a:
/*----------------------------------------------------------------*/
    dec    %esi
    sbb    %ah,%dh
    shl    $0xc7,%ah
    shll   0xb293ffa(%ebp)
    add    %ecx,(%eax)
    or     %bl,-0x40047b3a(%ebx)
    sbb    (%esi),%ah
    lds    0x2(%esi,%ebp,1),%ebp
    inc    %esi
    popf
    sti
    aas
    sub    -0x4662f595(%eax),%bl
    sub    0x171bffb(%edx),%edi
    sub    -0x1c71d8d9(%ebp),%edx
    sti
    aas
    cld
    push   $0x2472dd9c
    dec    %ecx
    xchg   %eax,%edx
    cld
    mov    $0x94ebadc1,%edi
    int3
    int3
    int3
    int3
    cld
    aas
    repnz adcl $0xbffdaa,-0x55555556(%edi)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    cmp    $0x3f,%bh


/*----------------------------------------------------------------*/
func_7f974:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    push   %ecx
    mov    %eax,%edi
    mov    0x8(%edi),%cx
    shl    %cx
    jne    jump_7f9b2
    testb  $0x80,0x9(%edx)
    je     jump_7f99d
    movw   $0x4000,0x8(%ebx)
    movl   $0xc90fdaa2,0x4(%ebx)
    movl   $0x2168c235,(%ebx)
    jmp    jump_7f9b0
  jump_7f99d:
    movw   $0x0,0x8(%ebx)
    movl   $0x0,0x4(%ebx)
    movl   $0x0,(%ebx)
  jump_7f9b0:
    jmp    jump_7fa26
  jump_7f9b2:
    mov    0x8(%edx),%cx
    shl    %cx
    jne    jump_7f9da
    mov    0x8(%edi),%ax
    and    $0x8000,%ax
    or     $0x3fff,%ax
    mov    %ax,0x8(%ebx)
    movl   $0xc90fdaa2,0x4(%ebx)
    movl   $0x2168c235,(%ebx)
    jmp    jump_7fa26
  jump_7f9da:
    mov    0x9(%edi),%ch
    call   func_7f157
    mov    %ebx,%eax
    call   func_7fa2a
    mov    0x9(%ebx),%dl
    or     %ch,%ch
    js     jump_7fa0c
    or     %dl,%dl
    jns    jump_7fa0a
    mov    %ebx,%eax
    push   $0x4000
    push   $0xc90fdaa2
    push   $0x2168c235
    call   func_7ef22
  jump_7fa0a:
    jmp    jump_7fa26
  jump_7fa0c:
    or     %dl,%dl
    jle    jump_7fa26
    mov    %ebx,%eax
    push   $0xc000
    push   $0xc90fdaa2
    push   $0x2168c235
    call   func_7ef22
  jump_7fa26:
    pop    %ecx
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7fa2a:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    push   %ecx
    mov    %eax,%edi
    mov    $0x0,%ch
    mov    0x9(%edi),%cl
    andb   $0x7f,0x9(%edi)
    cmpw   $0x3fff,0x8(%edi)
    jne    jump_7fa6c
    cmpl   $0x80000000,0x4(%edi)
    jne    jump_7fa6c
    cmpl   $0x0,(%edi)
    jne    jump_7fa6c
    movl   $0x2168c235,(%edi)
    movl   $0xc90fdaa2,0x4(%edi)
    mov    $0x3ffe,%ax
    and    $0x80,%cl
    or     %cl,%ah
    mov    %ax,0x8(%edi)
    pop    %ecx
    pop    %esi
    pop    %edi
    ret
  jump_7fa6c:
    push   %edx
    push   %ebx
    cmpw   $0x3fff,0x8(%edi)
    jl     jump_7faa2
    push   %ecx
    mov    0x8(%edi),%si
    mov    0x4(%edi),%ecx
    mov    (%edi),%ebx
    shl    $0x10,%esi
    mov    $0x3fff,%si
    mov    $0x80000000,%edx
    mov    $0x0,%eax
    call   func_7f181
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    pop    %ecx
    mov    $0x2,%ch
  jump_7faa2:
    mov    0x8(%edi),%ax
    cmp    $0x3ffd,%ax
    jne    jump_7fabd
    mov    0x4(%edi),%eax
    cmp    $0x8930a2f4,%eax
    jne    jump_7fabd
    mov    (%edi),%eax
    cmp    $0xf66ab09b,%eax
  jump_7fabd:
    jbe    jump_7fb30
    push   %ecx
    mov    $0xc265539e,%ebx
    mov    $0xddb3d742,%ecx
    mov    $0x3fff0000,%esi
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    call   func_7ef52
    push   %eax
    push   %edx
    push   %esi
    mov    $0xc265539e,%ebx
    mov    $0xddb3d742,%ecx
    mov    $0x3fff0000,%esi
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    call   func_7f356
    sub    %ebx,%ebx
    mov    $0x80000000,%ecx
    rol    $0x10,%esi
    mov    $0xbfff,%si
    rol    $0x10,%esi
    call   func_7ef52
    pop    %ebx
    shl    $0x10,%ebx
    mov    %si,%bx
    mov    %ebx,%esi
    pop    %ecx
    pop    %ebx
    call   func_7f181
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    pop    %ecx
    or     $0x1,%ch
  jump_7fb30:
    mov    %edi,%eax
    lea    func_7f91a,%edx
    mov    $0x8,%ebx
    call   func_805a6
    shr    %ch
    jae    jump_7fb5e
    mov    %edi,%eax
    push   $0x3ffe
    push   $0x860a91c1
    push   $0x6b9b2c23
    mov    %edi,%ebx
    call   func_7ef22
  jump_7fb5e:
    shr    %ch
    jae    jump_7fb7e
    push   $0xbfff
    push   $0xc90fdaa2
    push   $0x2168c235
    mov    %edi,%eax
    mov    %edi,%ebx
    call   func_7ef22
    xorb   $0x80,0x9(%ebx)
  jump_7fb7e:
    cmp    $0x0,%cl
    jns    jump_7fb87
    xorb   $0x80,0x9(%edi)
  jump_7fb87:
    pop    %ebx
    pop    %edx
    pop    %ecx
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7fb8d:
/*----------------------------------------------------------------*/
    cmpw   $0x0,0x8(%eax)
    jne    jump_7fba2
    cmpl   $0x0,0x4(%eax)
    jne    jump_7fba2
    cmpl   $0x0,(%eax)
    jne    jump_7fba2
    sub    %eax,%eax
    ret
  jump_7fba2:
    cmpw   $0x0,0x8(%edx)
    jne    jump_7fbc2
    cmpl   $0x0,0x4(%edx)
    jne    jump_7fbc2
    cmpl   $0x0,(%edx)
    jne    jump_7fbc2
    sub    %edx,%edx
    mov    %edx,(%eax)
    mov    %edx,0x4(%eax)
    mov    %dx,0x8(%eax)
    sub    %eax,%eax
    ret
  jump_7fbc2:
    push   %ebp
    push   %esi
    push   %edi
    push   %edx
    push   %ecx
    push   %ebx
    push   %eax
    mov    0x8(%eax),%si
    mov    0x8(%edx),%di
    mov    0x4(%edx),%ecx
    mov    (%edx),%ebx
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    call   func_7fbf3
    pop    %ecx
    mov    %eax,(%ecx)
    mov    %edx,0x4(%ecx)
    mov    %si,0x8(%ecx)
    mov    %edi,%eax
    pop    %ebx
    pop    %ecx
    pop    %edx
    pop    %edi
    pop    %esi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7fbf3:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    and    $0x7fff,%esi
    and    $0x7fff,%edi
    sub    %edi,%esi
    jl     jump_7fc52
    sub    %edi,%edi
  jump_7fc07:
    cmp    %edx,%ecx
    jne    jump_7fc13
    cmp    %eax,%ebx
    je     jump_7fc15
  jump_7fc13:
    jae    jump_7fc1a
  jump_7fc15:
    sub    %ebx,%eax
    sbb    %ecx,%edx
    stc
  jump_7fc1a:
    adc    %edi,%edi
    dec    %esi
    jl     jump_7fc2f
    add    %eax,%eax
    adc    %edx,%edx
    jb     jump_7fc15
    or     %edx,%edx
    js     jump_7fc07
    jmp    jump_7fc1a
  jump_7fc2f:
    sub    %esi,%esi
    or     %eax,%eax
    jne    jump_7fc3b
    or     %edx,%edx
    jne    jump_7fc3b
    jmp    jump_7fc50
  jump_7fc3b:
    or     %edx,%edx
    js     jump_7fc46
    adc    %eax,%eax
    adc    %edx,%edx
    dec    %esi
    jmp    jump_7fc3b
  jump_7fc46:
    pop    %ecx
    push   %ecx
    and    $0x7fff,%ecx
    add    %ecx,%esi
  jump_7fc50:
    jmp    jump_7fc56
  jump_7fc52:
    add    %edi,%esi
    sub    %edi,%edi
  jump_7fc56:
    pop    %ecx
    pop    %ebx
    and    $0x8000,%ebx
    or     %ebx,%esi
    or     %edx,%edx
    jne    jump_7fc66
    sub    %esi,%esi
  jump_7fc66:
    xor    %cx,%bx
    jns    jump_7fc6d
    neg    %edi
  jump_7fc6d:
    ret


/*----------------------------------------------------------------*/
func_7fc6e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    mov    %cs:0x7d42a(%edi),%ax /* Warning: address points to a valid object/reloc, but no label found */
    mov    %eax,%edx
    and    %ds:0x8(%ebp),%ax
    cmp    %dx,%ax
    jne    jump_7fc8c
    mov    $0x41,%al
    mov    $0x0,%dh
    jmp    jump_7fcff
  jump_7fc8c:
    not    %edx
    and    %dx,%ds:0x8(%ebp)
    mov    0x8(%ebx),%ax
    mov    %eax,%edx
    and    $0x80,%dh
    rol    %dh
    shl    %dh
    and    $0x7fff,%ax
    jne    jump_7fcc0
    mov    0x4(%ebx),%eax
    or     (%ebx),%eax
    mov    $0x44,%al
    jne    jump_7fcbe
    mov    %cs:0x7d424(%edi),%ax /* Warning: address points to a valid object/reloc, but no label found */
    or     %ax,%ds:0x8(%ebp)
    mov    $0x40,%al
  jump_7fcbe:
    jmp    jump_7fcff
  jump_7fcc0:
    cmp    $0x7fff,%ax
    jne    jump_7fce8
    mov    %cs:0x7d428(%edi),%ax /* Warning: address points to a valid object/reloc, but no label found */
    or     %ax,%ds:0x8(%ebp)
    cmpl   $0x0,(%ebx)
    jne    jump_7fce0
    mov    0x4(%ebx),%eax
    cmp    $0x80000000,%eax
  jump_7fce0:
    mov    $0x1,%al
    jne    jump_7fce6
    mov    $0x5,%al
  jump_7fce6:
    jmp    jump_7fcff
  jump_7fce8:
    testb  $0x80,0x7(%ebx)
    mov    $0x4,%al
    jne    jump_7fcff
    mov    %cs:0x7d428(%edi),%ax /* Warning: address points to a valid object/reloc, but no label found */
    or     %ax,%ds:0x8(%ebp)
    mov    $0x44,%al
  jump_7fcff:
    or     %dh,%al
    mov    %ds:0x4(%ebp),%dx
    and    $0xb8ff,%dx
    or     %al,%dh
    mov    %dx,%ds:0x4(%ebp)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7fd16:
/*----------------------------------------------------------------*/
    jmp    jump_9abde661

vtable_7fd34:
    .long   0


/*----------------------------------------------------------------*/
func_7fd5c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    push   %eax
    push   $0x3fff
    push   $0x80000000
    push   $0x0
    mov    %eax,%ebx
    call   func_7ef22
    pop    %eax
    pop    %edx
    pop    %ebx


/*----------------------------------------------------------------*/
func_7fd75:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    push   %edx
    push   %ecx
    push   %ebx
    push   %eax
    call   func_7fdb8
    pop    %eax
    mov    %edx,%ebx
    push   %edx
    call   func_7f32c
    pop    %edi
    mov    0x8(%edi),%si
    mov    0x4(%edi),%ecx
    mov    (%edi),%ebx
    shl    $0x10,%esi
    mov    $0x3fff,%si
    mov    $0xb8aa3b29,%edx
    mov    $0x5c17f0bd,%eax
    call   func_7f356
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    pop    %ebx
    pop    %ecx
    pop    %edx
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7fdb8:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    push   %edx
    push   %ecx
    push   %ebx
    sub    %ecx,%ecx
    mov    0x8(%eax),%cx
    or     %cx,%cx
    js     jump_7fdca
    jmp    jump_7fdca
  jump_7fdca:
    mov    %eax,%edi
    mov    $0x3ffe,%edx
    sub    $0x3ffe,%ecx
    push   %ecx
    mov    %dx,0x8(%edi)
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    $0xbffe3ffe,%esi
    mov    $0x80000000,%ecx
    sub    %ebx,%ebx
    call   func_7ef52
    cmpw   $0x3ffe,0x8(%edi)
    jne    jump_7fe09
    cmpl   $0xb504f333,0x4(%edi)
    jne    jump_7fe09
    cmpl   $0xf9de6484,(%edi)
  jump_7fe09:
    jbe    jump_7fe25
    and    $0xffff,%esi
    or     $0xbffe0000,%esi
    mov    $0x80000000,%ecx
    sub    %ebx,%ebx
    call   func_7ef52
    jmp    jump_7fe31
  jump_7fe25:
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    decl   (%esp)
  jump_7fe31:
    push   %eax
    push   %edx
    push   %esi
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    dec    %si
    and    $0xffff,%esi
    or     $0x3ffe0000,%esi
    mov    $0x80000000,%ecx
    sub    %ebx,%ebx
    call   func_7ef52
    shl    $0x10,%esi
    mov    %edx,%ecx
    mov    %eax,%ebx
    pop    %eax
    mov    %ax,%si
    pop    %edx
    pop    %eax
    call   func_7f181
    push   %eax
    push   %edx
    push   %esi
    mov    %esi,%ecx
    shl    $0x10,%esi
    mov    %cx,%si
    mov    %edx,%ecx
    mov    %eax,%ebx
    call   func_7f356
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    mov    $0x3,%ebx
    lea    vtable_7fd34,%ecx
    call   func_80554
    push   %eax
    push   %edx
    push   %esi
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    lea    func_7fd16,%ecx
    mov    $0x2,%ebx
    call   func_80554
    pop    %ecx
    rol    $0x10,%esi
    mov    %cx,%si
    rol    $0x10,%esi
    pop    %ecx
    pop    %ebx
    call   func_7f181
    mov    (%edi),%ebx
    mov    0x4(%edi),%ecx
    rol    $0x10,%esi
    mov    0x8(%edi),%si
    rol    $0x10,%esi
    call   func_7f356
    rol    $0x10,%esi
    mov    (%esp),%si
    rol    $0x10,%esi
    mov    0x4(%esp),%ecx
    mov    0x8(%esp),%ebx
    call   func_7f356
    rol    $0x10,%esi
    pop    %ecx
    mov    %cx,%si
    rol    $0x10,%esi
    pop    %ecx
    pop    %ebx
    call   func_7ef52
    pop    %ecx
    or     %ecx,%ecx
    je     jump_7ff7a
    push   %eax
    push   %edx
    push   %esi
    mov    %edi,%edx
    mov    %ecx,%eax
    call   func_7f516
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    and    $0xffff,%esi
    or     $0xbff20000,%esi
    mov    $0xde8082e3,%ecx
    mov    $0x865435c,%ebx
    call   func_7f356
    pop    %ecx
    rol    $0x10,%esi
    mov    %cx,%si
    rol    $0x10,%esi
    pop    %ecx
    pop    %ebx
    call   func_7ef52
    push   %eax
    push   %edx
    push   %esi
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    and    $0xffff,%esi
    or     $0x3ffe0000,%esi
    mov    $0xb1800000,%ecx
    sub    %ebx,%ebx
    call   func_7f356
    pop    %ecx
    rol    $0x10,%esi
    mov    %cx,%si
    rol    $0x10,%esi
    pop    %ecx
    pop    %ebx
    call   func_7ef52
  jump_7ff7a:
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    pop    %ebx
    pop    %ecx
    pop    %edx
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7ff8a:
/*----------------------------------------------------------------*/
    pop    %ecx
    push   %ebx
    push   $0xffffff85
    cmpl   $0x3fceca96,(%ebx)
    (bad)
    clc
    rcrb   $0xd6,-0x28c060c7(%ebp)
    mov    $0x43684be5,%edi
    popf
    xor    %dl,0x7f3fdeb0(%edx)
    sbb    $0x27,%al
    stos   %al,%es:(%edi)
    aas
    sub    (%edx),%esi
    xlat   %ds:(%ebx)
    in     $0xbf,%eax
    jge    jump_7ff50
    cmp    %esi,-0x4710e2d6(%esi)
    in     (%dx),%al
    aas
    or     $0xd0,%al
    add    %cl,0xd00d00d0
    repnz mov $0x88888888,%edi
    mov    %cl,0x3ff88888(%eax)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    cld
    mov    $0x0,%edi
    add    %al,(%eax)
    add    %al,-0x770c001(%eax)
    rcrb   $0xd2,-0x28c060c7(%ebp)
    aas
    add    $0x4603e4e9,%eax
    movsl  %ds:(%esi),%es:(%edi)
    lret


/*----------------------------------------------------------------*/
func_8003e:
/*----------------------------------------------------------------*/
    add    %al,(%eax)
    add    %eax,(%eax)
    add    (%eax),%al
    add    (%eax),%eax
    add    $0x0,%al
    add    $0x0,%al
    add    $0x6000500,%eax
    add    %dl,0x57(%ebp)
    push   %edx
    push   %ecx
    push   %ebx
    mov    %esp,%ebp
    sub    $0xc,%esp
    mov    %eax,%edi
    sub    %ecx,%ecx
    mov    0x8(%eax),%cx
    and    $0x7fff,%cx
    sub    $0x3ffe,%cx
    cmp    $0x20,%cx
    jl     jump_80072
  jump_80072:
    push   %ecx
    push   %esi
    push   %edi
    mov    0x8(%eax),%si
    mov    $0x3ffe,%di
    mov    $0xc90fdaa2,%ecx
    mov    $0x2168c235,%ebx
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    call   func_7fbf3
    pop    %ecx
    mov    %eax,(%ecx)
    mov    %edx,0x4(%ecx)
    mov    %si,0x8(%ecx)
    mov    %edi,%eax
    mov    %ecx,%edi
    pop    %esi
    testb  $0x80,0x9(%edi)
    je     jump_800c1
    push   %eax
    mov    %edi,%ebx
    mov    %edi,%eax
    push   $0x3ffe
    push   $0xc90fdaa2
    push   $0x2168c235
    call   func_7ef22
    pop    %eax
    dec    %eax
  jump_800c1:
    mov    %esi,%ebx
    mov    %bl,%ah
    and    $0x2,%bl
    add    %bl,%al
    and    $0x7,%al
    push   %eax
    test   $0x1,%al
    je     jump_800ed
    push   $0xbffe
    push   $0xc90fdaa2
    push   $0x2168c235
    mov    %edi,%eax
    mov    %edi,%ebx
    call   func_7ef22
    xorb   $0x80,0x9(%ebx)
  jump_800ed:
    sub    %ecx,%ecx
    mov    0x8(%edi),%cx
    sub    $0x3ffe,%cx
    cmp    $0xffe0,%cx
    jge    jump_80117
    movl   $0x0,-0xc(%ebp)
    movl   $0x80000000,-0x8(%ebp)
    movw   $0x3fff,-0x4(%ebp)
    jmp    jump_801ae
  jump_80117:
    or     %cx,%cx
    js     jump_80120
    mov    $0x0,%cx
  jump_80120:
    neg    %cx
    cmp    $0x8,%cx
    jle    jump_8012d
    mov    $0x8,%cx
  jump_8012d:
    mov    %cs:func_8003e(,%ecx,2),%cx
    push   %ecx
    mov    -0x14(%ebp),%eax
    inc    %al
    and    $0x2,%al
    jne    jump_80147
    cmp    $0x1,%ah
    je     jump_80147
    jmp    jump_80185
  jump_80147:
    push   %eax
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    shl    $0x10,%esi
    mov    0x8(%edi),%si
    mov    %eax,%ebx
    mov    %edx,%ecx
    call   func_7f356
    mov    -0x18(%ebp),%ecx
    mov    $0x8,%ebx
    sub    %ecx,%ebx
    lea    (%ecx,%ecx,4),%ecx
    lea    func_7ffe4(,%ecx,2),%ecx
    call   func_80554
    mov    %eax,-0xc(%ebp)
    mov    %edx,-0x8(%ebp)
    mov    %si,-0x4(%ebp)
    pop    %eax
  jump_80185:
    cmp    $0x0,%al
    je     jump_80190
    cmp    $0x1,%ah
    je     jump_80190
    jmp    jump_801ae
  jump_80190:
    mov    %edi,%eax
    mov    -0x18(%ebp),%ecx
    mov    $0x8,%ebx
    sub    %ecx,%ebx
    lea    (%ecx,%ecx,4),%ecx
    add    %ecx,%ecx
    lea    func_7ff8a,%edx
    add    %ecx,%edx
    call   func_805a6
  jump_801ae:
    mov    -0x14(%ebp),%eax
    inc    %al
    and    $0x2,%al
    je     jump_801c3
    mov    -0xc(%ebp),%eax
    mov    -0x8(%ebp),%edx
    mov    -0x4(%ebp),%si
    jmp    jump_801cc
  jump_801c3:
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
  jump_801cc:
    mov    -0x14(%ebp),%ecx
    test   $0x4,%cl
    je     jump_801d9
    xor    $0x8000,%si
  jump_801d9:
    cmp    $0x1,%ch
    jne    jump_80236
    rol    $0x10,%esi
    add    $0x2,%cl
    mov    %cl,%bl
    inc    %bl
    and    $0x2,%bl
    je     jump_801fc
    and    $0x4,%cl
    mov    -0xc(%ebp),%ebx
    mov    -0x8(%ebp),%ecx
    mov    -0x4(%ebp),%si
    jmp    jump_80208
  jump_801fc:
    and    $0x4,%cl
    mov    (%edi),%ebx
    mov    0x4(%edi),%ecx
    mov    0x8(%edi),%si
  jump_80208:
    je     jump_80210
    xor    $0x8000,%esi
  jump_80210:
    rol    $0x10,%esi
    or     %ebx,%ebx
    jne    jump_80231
    or     %ecx,%ecx
    jne    jump_80231
    test   $0x7fff0000,%esi
    jne    jump_80231
    sub    %eax,%eax
    mov    $0x80000000,%edx
    or     $0x7fff,%si
    jmp    jump_80236
  jump_80231:
    call   func_7f181
  jump_80236:
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    mov    %ebp,%esp
    pop    %ebx
    pop    %ecx
    pop    %edx
    pop    %edi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_80247:
/*----------------------------------------------------------------*/
    push   %esi
    sub    %esi,%esi
    call   func_80050
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_80251:
/*----------------------------------------------------------------*/
    push   %esi
    mov    $0x2,%esi
    call   func_80050
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_8025e:
/*----------------------------------------------------------------*/
    push   %esi
    mov    $0x1,%esi
    call   func_80050
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_8026c:
/*----------------------------------------------------------------*/
    adc    $0x67cc487b,%eax
    ret


/*----------------------------------------------------------------*/
func_80294:
/*----------------------------------------------------------------*/
    push   %ebp
    push   %edi
    push   %esi
    push   %edx
    push   %ecx
    push   %ebx
    mov    %eax,%edi
    sub    %esi,%esi
    mov    0x8(%edi),%cx
    andb   $0x7f,0x9(%edi)
    cmpw   $0x0,0x8(%edi)
    jne    jump_802b6
    cmpl   $0x0,0x4(%edi)
    jne    jump_802b6
    cmpl   $0x0,(%edi)
  jump_802b6:
    je     jump_8031e
    or     %cx,%cx
    jns    jump_802d7
    dec    %esi
    push   $0xbfff
    push   $0x80000000
    push   $0x0
    mov    %edi,%eax
    mov    %edi,%ebx
    call   func_7ef22
    xorb   $0x80,0x9(%ebx)
  jump_802d7:
    mov    0x8(%edi),%bx
    add    $0x4,%bx
    sub    %ecx,%ecx
    mov    0x4(%edi),%edx
    mov    (%edi),%eax
  jump_802e6:
    cmp    $0x3fff,%bx
    jb     jump_802f7
    add    %eax,%eax
    adc    %edx,%edx
    adc    %ecx,%ecx
    dec    %bx
    jmp    jump_802e6
  jump_802f7:
    or     %edx,%edx
    jne    jump_802fd
    or     %eax,%eax
  jump_802fd:
    jne    jump_80303
    sub    %ebx,%ebx
    jmp    jump_80313
  jump_80303:
    or     %edx,%edx
    js     jump_8030f
    add    %eax,%eax
    adc    %edx,%edx
    dec    %bx
    jmp    jump_80303
  jump_8030f:
    sub    $0x4,%bx
  jump_80313:
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %bx,0x8(%edi)
    jmp    jump_80320
  jump_8031e:
    sub    %ecx,%ecx
  jump_80320:
    push   %esi
    push   %ecx
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    shl    $0x10,%esi
    mov    0x8(%edi),%si
    mov    %eax,%ebx
    mov    %edx,%ecx
    call   func_7f356
    push   %eax
    push   %edx
    push   %esi
    mov    $0xa6829a79,%ecx
    mov    $0x1bf21f8c,%ebx
    and    $0xffff,%esi
    or     $0x40030000,%esi
    call   func_7ef52
    mov    %esp,%ebp
    xchg   %eax,0x8(%ebp)
    xchg   %edx,0x4(%ebp)
    xchg   %esi,0x0(%ebp)
    mov    $0xec96f0d6,%ecx
    mov    $0x9d7bfdb,%ebx
    and    $0xffff,%esi
    or     $0x3ffa0000,%esi
    call   func_7f356
    mov    $0xe6d5051a,%ecx
    mov    $0xe536e187,%ebx
    and    $0xffff,%esi
    or     $0x40010000,%esi
    call   func_7ef52
    mov    (%edi),%ebx
    mov    0x4(%edi),%ecx
    rol    $0x10,%esi
    mov    0x8(%edi),%si
    rol    $0x10,%esi
    call   func_7f356
    push   %eax
    push   %edx
    push   %esi
    xor    $0x8000,%esi
    rol    $0x10,%esi
    mov    0x0(%ebp),%si
    rol    $0x10,%esi
    mov    0x8(%ebp),%ebx
    mov    0x4(%ebp),%ecx
    call   func_7ef52
    xchg   %eax,-0x4(%ebp)
    xchg   %edx,-0x8(%ebp)
    xchg   %esi,-0xc(%ebp)
    rol    $0x10,%esi
    mov    0x0(%ebp),%si
    rol    $0x10,%esi
    mov    0x8(%ebp),%ebx
    mov    0x4(%ebp),%ecx
    call   func_7ef52
    rol    $0x10,%esi
    mov    -0xc(%ebp),%si
    rol    $0x10,%esi
    pop    %ecx
    pop    %ecx
    pop    %ebx
    call   func_7f181
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    add    $0xc,%esp
    pop    %ecx
    lea    func_8026c,%esi
  jump_8040f:
    or     %ecx,%ecx
    je     jump_80447
    shr    %ecx
    jae    jump_80442
    push   %ecx
    push   %esi
    mov    0x8(%edi),%ax
    mov    0x4(%edi),%ecx
    mov    (%edi),%ebx
    shl    $0x10,%eax
    mov    %cs:0x8(%esi),%ax
    mov    %cs:0x4(%esi),%edx
    mov    %cs:(%esi),%esi
    xchg   %eax,%esi
    call   func_7f356
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    pop    %esi
    pop    %ecx
  jump_80442:
    lea    0xa(%esi),%esi
    jmp    jump_8040f
  jump_80447:
    pop    %esi
    add    %si,0x8(%edi)
    mov    %edi,%eax
    push   $0xbfff
    push   $0x80000000
    push   $0x0
    mov    %edi,%ebx
    call   func_7ef22
    pop    %ebx
    pop    %ecx
    pop    %edx
    pop    %esi
    pop    %edi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_80468:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    push   %edx
    push   %ecx
    push   %ebx
    mov    0x8(%eax),%cx
    mov    0x4(%eax),%edx
    mov    (%eax),%ebx
    or     %ebx,%ebx
    jne    jump_804ae
    or     %edx,%edx
    jne    jump_804a3
    add    %cx,%cx
    je     jump_8052e
  jump_80487:
    movw   $0xffff,0x8(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,(%eax)
  jump_8049a:
    orb    $0xc0,0x7(%eax)
    jmp    jump_8052e
  jump_804a3:
    cmp    $0x7fff,%cx
    je     jump_8052e
  jump_804ae:
    mov    %ecx,%edx
    and    $0x7f,%dh
    cmp    $0x7fff,%dx
    je     jump_8049a
    add    %cx,%cx
    jb     jump_8049a
    shr    %cx
    je     jump_804cb
    mov    0x4(%eax),%edx
    add    %edx,%edx
    jae    jump_80487
  jump_804cb:
    mov    0x4(%eax),%edx
    sub    %edi,%edi
    push   %eax
    sub    $0x3fff,%cx
    sar    %cx
    jb     jump_804e1
    shr    %edx
    rcr    %ebx
    rcr    %edi
  jump_804e1:
    add    $0x3fff,%cx
    mov    %cx,0x8(%eax)
    mov    %edx,%ecx
    mov    %ebx,%eax
    mov    %edx,%esi
    stc
    rcr    %esi
    inc    %edx
    je     jump_80514
    dec    %edx
  jump_804f7:
    div    %esi
    dec    %esi
    cmp    %eax,%esi
    jbe    jump_80509
    inc    %esi
    add    %eax,%esi
    rcr    %esi
    mov    %ecx,%edx
    mov    %ebx,%eax
    jmp    jump_804f7
  jump_80509:
    inc    %esi
    mov    %eax,%ecx
    mov    %edi,%eax
    div    %esi
    add    %ecx,%esi
    jmp    jump_8051d
  jump_80514:
    cmp    %esi,%eax
    je     jump_80526
    xchg   %eax,%edx
    mov    %edi,%eax
    div    %esi
  jump_8051d:
    sub    %edx,%edx
    stc
    rcr    %esi
    rcr    %eax
    adc    %edx,%eax
  jump_80526:
    adc    %esi,%edx
    pop    %esi
    mov    %eax,(%esi)
    mov    %edx,0x4(%esi)
  jump_8052e:
    pop    %ebx
    pop    %ecx
    pop    %edx
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_80554:
/*----------------------------------------------------------------*/
    push   %ebp
    push   %edi
    push   %ecx
    push   %ebx
    push   %esi
    push   %edx
    push   %eax
    mov    %esp,%ebp
    mov    %ecx,%edi
    mov    %cs:(%edi),%eax
    mov    %cs:0x4(%edi),%edx
    mov    %cs:0x8(%edi),%si
  jump_8056b:
    rol    $0x10,%esi
    mov    0x8(%ebp),%si
    rol    $0x10,%esi
    mov    0x0(%ebp),%ebx
    mov    0x4(%ebp),%ecx
    call   func_7f356
    lea    0xa(%edi),%edi
    mov    %cs:(%edi),%ebx
    mov    %cs:0x4(%edi),%ecx
    rol    $0x10,%esi
    mov    %cs:0x8(%edi),%si
    rol    $0x10,%esi
    call   func_7ef52
    decl   0xc(%ebp)
    jne    jump_8056b
    add    $0x10,%esp
    pop    %ecx
    pop    %edi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_805a6:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    push   %ecx
    push   %ebx
    push   %edx
    mov    %eax,%edi
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    shl    $0x10,%esi
    mov    0x8(%edi),%si
    mov    %eax,%ebx
    mov    %edx,%ecx
    call   func_7f356
    pop    %ecx
    pop    %ebx
    call   func_80554
    rol    $0x10,%esi
    mov    (%edi),%ebx
    mov    0x4(%edi),%ecx
    mov    0x8(%edi),%si
    rol    $0x10,%esi
    call   func_7f356
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    pop    %ecx
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_805ee:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    push   %edx
    mov    %eax,%ebp
    mov    $0x1600,%ax
    int    $0x2f
    test   %al,%al
    je     jump_80654
    cmp    $0x80,%al
    je     jump_80654
    xor    %al,%al
    xor    %edx,%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    $0xfa,%ah
    int    $0x2f
    cmp    $0x666,%ax
    jne    jump_80654
    mov    $0x22,%al
    xor    %edx,%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    $0xfa,%ah
    int    $0x2f
    test   %ax,%ax
    jne    jump_80654
    mov    $0x1,%dh
    mov    $0x1e,%al
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    %dh,data_99d25
    xor    %edx,%edx
    mov    $0xfa,%ah
    int    $0x2f
    mov    %cs,%eax
    mov    $data_13336c,%ebx
    mov    %eax,%edx
    mov    %ebx,%ecx
    mov    $0x20,%al
    shr    $0x10,%ecx
    mov    $0xfa,%ah
    int    $0x2f
    mov    $0x1,%al
    jmp    jump_806ae
  jump_80654:
    mov    (%esp),%edx
    test   %ebp,%ebp
    jne    jump_80660
    test   %dx,%dx
    je     jump_806ac
  jump_80660:
    mov    $data_9563c,%esi
    mov    $0xa00,%eax
    push   %es
    int    $0x31
    sbb    %eax,%eax
    pop    %es
    test   %eax,%eax
    jne    jump_806ac
    mov    $0x7,%eax
    mov    $func_7d7b0,%ebx
    mov    %cs,%ecx
    call   func_81b7e
    mov    (%esp),%es
    mov    %es:0x40(%ebp),%ah
    movb   $0x1,%es:0x3e(%ebp)
    or     $0x4,%ah
    mov    %ah,%es:0x40(%ebp)
    mov    %cr0,%eax
    or     $0x4,%al
    mov    $0x1,%dl
    mov    %eax,%cr0
    mov    $0x30,%ah
    int    $0x21
    mov    %dl,data_99d24
  jump_806ac:
    xor    %al,%al
  jump_806ae:
    add    $0x4,%esp
    pop    %ebp
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_806b8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %es
    mov    %edx,%es
    mov    data_99d25,%dl
    test   %dl,%dl
    je     jump_806e7
    mov    %cs,%eax
    mov    %eax,%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    $0x21,%al
    mov    $0xfa,%ah
    int    $0x2f
    mov    $0x1f,%al
    xor    %edx,%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    $0xfa,%ah
    int    $0x2f
    mov    $0x1,%al
    pop    %es
    pop    %ecx
    pop    %ebx
    ret
  jump_806e7:
    cmpb   $0x0,data_99d24
    je     jump_8070b
    mov    %es:0x40(%eax),%bl
    mov    %dl,%es:0x3e(%eax)
    and    $0xfb,%bl
    mov    %bl,%es:0x40(%eax)
    mov    %cr0,%eax
    and    $0xfb,%al
    mov    %eax,%cr0
    mov    $0x30,%ah
    int    $0x21
  jump_8070b:
    xor    %al,%al
    pop    %es
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_80711:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_80712:
/*----------------------------------------------------------------*/
    push   %ax
    finit
    fld1
    fldz
    fdivrp %st,%st(1)
    fld    %st(0)
    fchs
    fcompp
    fnstsw %ax
    mov    $0x2,%al
    sahf
    je     jump_8072c
    mov    $0x3,%al
  jump_8072c:
    finit
    fldcw  (%esp)
    xchg   %ax,(%esp)
    pop    %ax
    ret


/*----------------------------------------------------------------*/
func_80739:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,%ebx
    call   func_80743
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_80743:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ecx
    push   %esi
    sub    $0x20,%esp
    mov    %eax,%ecx
    mov    (%edx),%eax
    mov    %eax,-0x20(%ebp)
    mov    0x4(%edx),%eax
    mov    %eax,-0x1c(%ebp)
    mov    (%ebx),%eax
    mov    %eax,-0x18(%ebp)
    mov    0x4(%ebx),%eax
    mov    %eax,-0x14(%ebp)
    test   $0x40,%cl
    je     jump_8076f
    mov    $0x1,%esi
    jmp    jump_807a9
  jump_8076f:
    test   $0x80,%cl
    je     jump_8077b
    mov    $0x2,%esi
    jmp    jump_807a9
  jump_8077b:
    test   $0x1,%ch
    je     jump_80787
    mov    $0x3,%esi
    jmp    jump_807a9
  jump_80787:
    test   $0x8,%ch
    je     jump_80793
    mov    $0x4,%esi
    jmp    jump_807a9
  jump_80793:
    test   $0x2,%ch
    je     jump_8079f
    mov    $0x6,%esi
    jmp    jump_807a9
  jump_8079f:
    test   $0x4,%ch
    je     jump_807a9
    mov    $0x5,%esi
  jump_807a9:
    mov    %ecx,%eax
    and    $0x1f,%eax
    mov    data_99d30(,%eax,4),%eax
    mov    %esi,-0x28(%ebp)
    mov    %eax,-0x24(%ebp)
    test   $0x10,%ch
    je     jump_807cd
    fldl   data_96370
    fchs
    fstpl  -0x10(%ebp)
    jmp    jump_8080f
  jump_807cd:
    test   $0x20,%ch
    je     jump_807dc
    xor    %ecx,%ecx
    mov    %ecx,-0x10(%ebp)
    mov    %ecx,-0xc(%ebp)
    jmp    jump_8080f
  jump_807dc:
    test   $0x40,%ch
    je     jump_807f0
    xor    %edx,%edx
    mov    $0x3ff00000,%ebx
    mov    %edx,-0x10(%ebp)
    mov    %ebx,-0xc(%ebp)
    jmp    jump_8080f
  jump_807f0:
    test   $0x80,%ch
    je     jump_80804
    mov    data_96370,%eax
    mov    %eax,-0x10(%ebp)
    mov    data_96374,%eax
    jmp    jump_8080c
  jump_80804:
    mov    (%ebx),%eax
    mov    %eax,-0x10(%ebp)
    mov    0x4(%ebx),%eax
  jump_8080c:
    mov    %eax,-0xc(%ebp)
  jump_8080f:
    lea    -0x28(%ebp),%eax
    call   func_81bf7
    lea    -0x8(%ebp),%esp
    pop    %esi
    pop    %ecx
    pop    %ebp
    ret

vtable_80820:
    .long   func_80865
    .long   func_8086d
    .long   func_80877
    .long   func_8085c
    .long   func_80865
    .long   func_80877
    .long   func_8086d
    .long   func_8086d


/*----------------------------------------------------------------*/
func_80840:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    cmpb   $0x2,(%eax)
    jne    jump_8084a
    mov    0x1(%eax),%eax
  jump_8084a:
    mov    (%eax),%bl
    cmp    $0x7,%bl
    ja     func_80877
    movzbl %bl,%ebx
    jmp    *%cs:vtable_80820(,%ebx,4)


/*----------------------------------------------------------------*/
func_8085c:
/*----------------------------------------------------------------*/
    movzbl 0x1(%eax),%edx
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_80865:
/*----------------------------------------------------------------*/
    mov    0xd(%eax),%edx
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_8086d:
/*----------------------------------------------------------------*/
    mov    $0x4,%edx
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_80877:
/*----------------------------------------------------------------*/
    call   func_80bc7
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_80882:
/*----------------------------------------------------------------*/
    push   %ebx
    test   $0x7ff00000,%edx
    je     jump_808ca
    sub    %ebx,%ebx
    add    %eax,%eax
    adc    %edx,%edx
    rcr    %ebx
    add    $0x20000000,%eax
    adc    $0x0,%edx
    je     jump_808c1
    cmp    $0x8fe00000,%edx
    jae    jump_808c1
    cmp    $0x70200000,%edx
    jb     jump_808ca
    sub    $0x70000000,%edx
    add    %eax,%eax
    adc    %edx,%edx
    add    %eax,%eax
    adc    %edx,%edx
    or     %ebx,%edx
    mov    %edx,%eax
    pop    %ebx
    ret
  jump_808c1:
    mov    $0x7f800000,%eax
    or     %ebx,%eax
    pop    %ebx
    ret
  jump_808ca:
    sub    %eax,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_808ce:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    data_99a21,%ah
    and    $0xf8,%ah
    mov    %ah,%dl
    mov    %ah,data_99a21
    or     $0x4,%dl
    mov    $data_999e0,%ecx
    mov    %dl,data_99a21
    jmp    jump_80935
  jump_808f2:
    mov    $0x8,%eax
    call   func_78734
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_80921
    mov    $0x8,%eax
    call   func_78734
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_80921
    mov    $data_956b8,%eax
    mov    $0x1,%edx
    call   func_7c3ef
  jump_80921:
    mov    data_1332fc,%edx
    mov    %ecx,0x4(%ebx)
    mov    %ebx,data_1332fc
    add    $0x1a,%ecx
    mov    %edx,(%ebx)
  jump_80935:
    mov    0xc(%ecx),%edx
    test   %edx,%edx
    jne    jump_808f2
    mov    %edx,data_133300
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_80946:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    call   func_80957
    jmp    jump_7aeb3


/*----------------------------------------------------------------*/
func_80957:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%edx
    shl    $0x2,%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    add    %edx,%eax
    mov    $data_999e0,%esi
    add    %eax,%eax
    xor    %ebx,%ebx
    add    %eax,%esi
    mov    data_1332fc,%eax
    jmp    jump_8099e
  jump_80979:
    mov    (%eax),%ecx
    mov    0x4(%eax),%eax
    mov    $0x1,%edx
    testb  $0x40,0xd(%eax)
    jne    jump_80996
    cmp    %esi,%eax
    jb     jump_8099c
    cmp    $data_99a62,%eax
    jae    jump_80996
    xor    %edx,%edx
  jump_80996:
    call   func_7747d
    inc    %ebx
  jump_8099c:
    mov    %ecx,%eax
  jump_8099e:
    test   %eax,%eax
    jne    jump_80979
    mov    %ebx,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_809a9:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,(%esp)
    mov    %ebx,%ebp
    call   func_7b23d
    test   $0x80,%al
    je     jump_809ed
    mov    $0x2,%al
    mov    %esi,%ebx
    xor    %edx,%edx
    mov    $0x42,%ah
    mov    %edx,%ecx
    shr    $0x10,%ecx
    int    $0x21
    rcl    %dx
    ror    %dx
    shl    $0x10,%edx
    mov    %ax,%dx
    mov    %edx,%edi
    test   %edx,%edx
    jge    jump_809ed
    xor    %eax,%eax
    mov    %dx,%ax
  jump_809e6:
    call   func_7b2b3
    jmp    jump_80a1d
  jump_809ed:
    mov    (%esp),%edx
    mov    %esi,%ebx
    mov    %ebp,%ecx
    mov    $0x40,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%esi
    mov    %eax,%edi
    mov    %eax,%edx
    test   %eax,%eax
    jge    jump_80a0d
    xor    %eax,%eax
    mov    %si,%ax
    jmp    jump_809e6
  jump_80a0d:
    cmp    %ebp,%eax
    je     jump_80a1b
    mov    $0xc,%eax
    call   func_7b1c8
  jump_80a1b:
    mov    %edx,%eax
  jump_80a1d:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_80a25:
    push   %edx
    mov    %eax,%edx
    mov    $0x41,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    test   %eax,%eax
    jge    jump_80a40
    and    $0xffff,%eax
    call   func_7b2b3
    pop    %edx
    ret
  jump_80a40:
    xor    %eax,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_80a44:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   %edx,%edx
    jne    jump_80a53
    xor    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_80a53:
    mov    (%eax),%edx
    mov    data_133330(,%edx,4),%edx
    call   *(%edx)
    mov    %eax,%edx
    cmpl   $0x2,(%ebx)
    je     jump_80a6f
    mov    %ecx,%eax
    shl    $0x3,%eax
    sub    $0x8,%eax
    add    %edx,%eax
  jump_80a6f:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_80a72:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,(%eax)
    mov    0x8(%edx),%ebx
    movl   $0x0,0x9(%eax)
    mov    %ebx,0x4(%eax)
    mov    0x4(%edx),%ebx
    mov    (%ebx),%ebx
    mov    data_133330(,%ebx,4),%ebx
    call   *0x8(%ebx)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_80a93:
/*----------------------------------------------------------------*/
    subl   $0x2,0x4(%eax)
    ret


/*----------------------------------------------------------------*/
func_80a98:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    (%eax),%edi
    test   %edi,%edi
    jne    jump_80ab1
    mov    %edi,(%esp)
    jmp    jump_80af3
  jump_80ab1:
    mov    0x4(%eax),%ecx
    test   %ecx,%ecx
    jbe    jump_80ab9
    dec    %ecx
  jump_80ab9:
    lea    0xc(%edi),%ebp
  jump_80abc:
    test   %ecx,%ecx
    jne    jump_80ac5
    mov    %ecx,(%esp)
    jmp    jump_80af0
  jump_80ac5:
    cmp    0x9(%esi),%ecx
    je     jump_80af0
    mov    %ecx,%edx
    mov    0x4(%edi),%eax
    call   func_80a44
    mov    %eax,(%esp)
    cmpl   $0x0,(%eax)
    jne    jump_80af0
    mov    0x4(%eax),%ebx
    mov    (%ebx),%ax
    cmp    $0x1,%ax
    jb     jump_80af0
    jbe    jump_80b00
    cmp    $0x5,%ax
    je     jump_80b05
  jump_80af0:
    mov    %ecx,0x4(%esi)
  jump_80af3:
    mov    (%esp),%eax
  jump_80af6:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_80b00:
    mov    0x2(%ebx),%ecx
    jmp    jump_80abc
  jump_80b05:
    mov    %ebp,%eax
    mov    0x2(%ebx),%edx
    call   func_81c28
    test   %al,%al
    je     jump_80b18
    mov    0x6(%ebx),%ecx
    jmp    jump_80abc
  jump_80b18:
    mov    0xa(%ebx),%ecx
    jmp    jump_80abc


/*----------------------------------------------------------------*/
func_80b1d:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    (%eax),%edi
    add    $0xc,%edi
    mov    0x4(%eax),%esi
    mov    -0x8(%edi),%ebp
  jump_80b33:
    mov    %esi,%edx
    mov    %ebp,%eax
    call   func_80a44
    mov    %eax,(%esp)
    test   %eax,%eax
    je     jump_80ba4
    mov    0x4(%ecx),%edx
    cmp    0x9(%ecx),%edx
    je     jump_80ba4
    cmpl   $0x0,(%eax)
    jne    jump_80ba4
    mov    0x4(%eax),%ebx
    mov    (%ebx),%ax
    cmp    $0x2,%ax
    jb     jump_80b9c
    cmp    $0x4,%ax
    jbe    jump_80ba4
    cmp    $0x5,%ax
    jbe    jump_80b78
    cmp    $0xb,%ax
    jbe    jump_80ba4
    jmp    jump_80b95
  jump_80b78:
    mov    %edi,%eax
    mov    0x2(%ebx),%edx
    call   func_81c28
    test   %al,%al
    je     jump_80b8b
    mov    0x6(%ebx),%esi
    jmp    jump_80b33
  jump_80b8b:
    mov    0xa(%ebx),%esi
    jmp    jump_80b33
  jump_80b90:
    mov    0x2(%ebx),%esi
    jmp    jump_80b33
  jump_80b95:
    call   func_80bc7
    jmp    jump_80ba4
  jump_80b9c:
    cmp    $0x1,%ax
    je     jump_80b90
    jmp    jump_80b95
  jump_80ba4:
    mov    (%esp),%eax
    mov    %esi,0x4(%ecx)
    jmp    jump_80af6


/*----------------------------------------------------------------*/
func_80bb0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    0x8(%eax),%edx
    test   %edx,%edx
    je     jump_80bbc
    movb   $0x3,0xc(%edx)
  jump_80bbc:
    orb    $0x1,0x4(%eax)
    call   func_81c48
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_80bc7:
/*----------------------------------------------------------------*/
    mov    $data_13330c,%eax
    movl   $data_956e8,data_133318
    jmp    func_80bb0

vtable_80cd8:
    .long   func_80dd7
    .long   func_80dab
    .long   func_80d4c
    .long   func_80dd7
    .long   func_80dd7
    .long   func_80d4c
    .long   func_80dc7
    .long   func_80dc7

vtable_80cf8:
    .long   func_80d9c
    .long   func_80d58
    .long   func_80dde
    .long   func_80d84
    .long   func_80da5
    .long   func_80df7
    .long   func_80d6f
    .long   func_80d6f


/*----------------------------------------------------------------*/
func_80d4c:
/*----------------------------------------------------------------*/
    mov    0x1c(%ebp),%edx
    mov    (%esp),%eax
    inc    %edx
    jmp    jump_81ccb


/*----------------------------------------------------------------*/
func_80d58:
/*----------------------------------------------------------------*/
    testb  $0x1,0x20(%ebp)
    je     jump_80d66
    movl   $0x0,(%edi)
    jmp    func_80d4c
  jump_80d66:
    mov    0x12(%eax),%eax
    add    %esi,%eax
  jump_80d6b:
    mov    %eax,(%edi)
    jmp    func_80d4c


/*----------------------------------------------------------------*/
func_80d6f:
/*----------------------------------------------------------------*/
    testb  $0x1,0x20(%ebp)
    je     func_80d84
    mov    %edi,%eax
    movzbl 0x1(%ecx),%ebx
    xor    %edx,%edx
    call   func_76ec0
    jmp    func_80d4c


/*----------------------------------------------------------------*/
func_80d84:
/*----------------------------------------------------------------*/
    mov    %ebx,%esi
    movzbl 0x1(%ecx),%ecx
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    jmp    func_80d4c


/*----------------------------------------------------------------*/
func_80d9c:
/*----------------------------------------------------------------*/
    mov    %ebx,%edx
    mov    %edi,%eax
  jump_80da0:
    call   *0x5(%ecx)
    jmp    func_80d4c


/*----------------------------------------------------------------*/
func_80da5:
/*----------------------------------------------------------------*/
    mov    %edi,%eax
    xor    %edx,%edx
    jmp    jump_80da0


/*----------------------------------------------------------------*/
func_80dab:
/*----------------------------------------------------------------*/
    testb  $0x1,0x20(%ebp)
    je     jump_80dba
    movl   $0x0,0xe(%eax)
    jmp    jump_80dc2
  jump_80dba:
    mov    0x12(%eax),%edx
    add    %esi,%edx
    mov    %edx,0xe(%eax)
  jump_80dc2:
    add    $0xe,%eax
    jmp    jump_80d6b


/*----------------------------------------------------------------*/
func_80dc7:
/*----------------------------------------------------------------*/
    testb  $0x1,0x20(%ebp)
    je     func_80dd7
    lea    0xe(%eax),%ebx
    movl   $0x0,0xe(%eax)


/*----------------------------------------------------------------*/
func_80dd7:
/*----------------------------------------------------------------*/
    mov    %ebx,(%edi)
    jmp    func_80d4c


/*----------------------------------------------------------------*/
func_80dde:
/*----------------------------------------------------------------*/
    mov    0x1(%ecx),%ecx
    mov    (%ecx),%cl
    cmp    $0x7,%cl
    ja     func_80d4c
    movzbl %cl,%ecx
    jmp    *%cs:vtable_80cd8(,%ecx,4)


/*----------------------------------------------------------------*/
func_80df7:
/*----------------------------------------------------------------*/
    call   func_80bc7
    jmp    func_80d4c


/*----------------------------------------------------------------*/
func_80e29:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    0x8(%eax),%edx
    mov    0xc(%eax),%ebx
    mov    0x8(%edx),%edx
  jump_80e34:
    cmp    %ebx,%edx
    je     jump_80e41
    mov    (%edx),%edx
    call   func_81156
    jmp    jump_80e34
  jump_80e41:
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_80e44:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    mov    0x8(%eax),%ebx
    mov    0x8(%ebx),%edx
    mov    (%eax),%esi
    test   %edx,%edx
    je     jump_80e5a
    movb   $0x0,0xc(%edx)
  jump_80e5a:
    cmp    (%ebx),%esi
    je     jump_80e70
    mov    (%ebx),%edx
    xor    %eax,%eax
    call   func_7b194
    mov    %ebx,%eax
    call   func_7a27e
    jmp    jump_80e5a
  jump_80e70:
    mov    %esi,%edx
    mov    0x18(%ecx),%eax
    call   func_7b194
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_80f64:
    .long   func_80fa3
    .long   func_80ff7
    .long   func_80ff7
    .long   func_80fb1
    .long   func_80fde
    .long   func_80fc0
    .long   func_80fcf


/*----------------------------------------------------------------*/
func_80f80:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ebx
    mov    0x8(%eax),%ecx
    test   %ecx,%ecx
    jne    jump_80fe5
    testb  $0x1,0x4(%eax)
    je     func_80ff7
    mov    $0x1,%edx
    mov    $data_95736,%eax
    call   func_793b8
    jmp    func_80ff7


/*----------------------------------------------------------------*/
func_80fa3:
/*----------------------------------------------------------------*/
    mov    %ebx,%eax
    movl   $data_9575f,0xc(%ebx)
    call   func_80bb0


/*----------------------------------------------------------------*/
func_80fb1:
/*----------------------------------------------------------------*/
    mov    $0x1,%edx
    mov    $data_957a1,%eax
    call   func_793b8


/*----------------------------------------------------------------*/
func_80fc0:
/*----------------------------------------------------------------*/
    mov    $0x1,%edx
    mov    $data_957ca,%eax
    call   func_793b8


/*----------------------------------------------------------------*/
func_80fcf:
/*----------------------------------------------------------------*/
    mov    $0x1,%edx
    mov    $data_957f2,%eax
    call   func_793b8


/*----------------------------------------------------------------*/
func_80fde:
/*----------------------------------------------------------------*/
    call   func_80bc7
    jmp    func_80ff7
  jump_80fe5:
    mov    0xc(%ecx),%al
    cmp    $0x6,%al
    ja     func_80fde
    movzbl %al,%eax
    jmp    *%cs:vtable_80f64(,%eax,4)


/*----------------------------------------------------------------*/
func_80ff7:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    movl   $0x0,0xc(%ebx)
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_81139:
/*----------------------------------------------------------------*/
    sub    $0x4,%esp
    mov    0x9(%eax),%eax
    mov    %eax,(%esp)
    test   %eax,%eax
    je     jump_81152
    lea    0x12(%edx),%eax
    movb   $0x6,0xc(%edx)
    xor    %edx,%edx
    call   *(%esp)
  jump_81152:
    add    $0x4,%esp
    ret


/*----------------------------------------------------------------*/
func_81156:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    data_133314,%edx
    mov    0x8(%edx),%eax
    mov    $data_13330c,%ebx
    cmpb   $0x2,(%eax)
    jne    jump_8116e
    mov    0x1(%eax),%eax
  jump_8116e:
    cmpb   $0x0,(%eax)
    je     jump_81178
    cmpb   $0x4,(%eax)
    jne    jump_8117d
  jump_81178:
    call   func_81139
  jump_8117d:
    mov    %ebx,%eax
    call   func_81e78
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_811a3:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x10,%esp
    mov    %eax,%ebx
    mov    %esp,%eax
    call   func_80a72
    mov    0xc(%ebx),%edx
    jmp    jump_811bc
  jump_811b5:
    mov    %esp,%eax
    call   func_80a98
  jump_811bc:
    mov    %esp,%eax
    call   func_80b1d
    test   %eax,%eax
    je     jump_811e6
    cmpl   $0x0,(%eax)
    jne    jump_811b5
    mov    0x4(%eax),%eax
    movzwl (%eax),%eax
    cmp    $0x3,%eax
    jne    jump_811b5
    test   %edx,%edx
    jne    jump_811e0
    call   func_80bc7
  jump_811e0:
    mov    (%edx),%edx
    test   %edx,%edx
    jne    jump_811b5
  jump_811e6:
    mov    %edx,0xc(%ebx)
    add    $0x10,%esp
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_811ee:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x24,%esp
    movl   $data_13330c,0x8(%esp)
    mov    data_13330c,%ebx
    jmp    jump_81204
  jump_81202:
    mov    (%ebx),%ebx
  jump_81204:
    test   %ebx,%ebx
    je     jump_8120c
    cmp    %eax,%ebx
    jbe    jump_81202
  jump_8120c:
    mov    0x8(%esp),%eax
    cmp    (%eax),%ebx
    je     jump_81275
    andb   $0xfe,0x20(%esp)
    movl   $0x0,0x4(%esp)
    movl   $0x0,0x14(%esp)
    mov    %ebx,(%esp)
    call   func_80f80
    mov    0x8(%esp),%ebx
    mov    %eax,0xc(%esp)
  jump_81239:
    mov    (%ebx),%ebx
    cmp    (%esp),%ebx
    je     jump_81267
    cmpl   $0x0,0xc(%esp)
    jne    jump_81249
    jmp    jump_81267
  jump_81249:
    mov    0x4(%ebx),%eax
    mov    (%eax),%eax
    test   %eax,%eax
    jbe    jump_8125c
    cmp    $0x4,%eax
    jbe    jump_81239
    call   func_80bc7
  jump_8125c:
    mov    %esp,%eax
    mov    %ebx,%edx
    call   func_811a3
    jmp    jump_81239
  jump_81267:
    mov    %esp,%eax
    call   func_80e29
    mov    %esp,%eax
    call   func_80e44
  jump_81275:
    add    $0x24,%esp
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_8127a:
/*----------------------------------------------------------------*/
    movl   $func_811ee,data_99da8
    ret


/*----------------------------------------------------------------*/
func_8128a:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    mov    data_1332fc,%edx
    xor    %ebx,%ebx
    jmp    jump_812af
  jump_81299:
    mov    0x4(%edx),%eax
    test   %ecx,0xc(%eax)
    je     jump_812ad
    inc    %ebx
    testb  $0x10,0xd(%eax)
    je     jump_812ad
    call   func_7aed7
  jump_812ad:
    mov    (%edx),%edx
  jump_812af:
    test   %edx,%edx
    jne    jump_81299
    mov    %ebx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_812b9:
/*----------------------------------------------------------------*/
    push   %edx
    xor    %edx,%edx
    mov    data_99944,%eax
    mov    %edx,data_99944
    test   %eax,%eax
    jne    jump_812d4
    mov    $0x1,%ah
    int    $0x21
    and    $0xff,%eax
  jump_812d4:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_812d6:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %edx,%ebp
    mov    %eax,%edi
    push   %ebp
    push   %edx
    mov    (%edi),%eax
    mov    0x4(%edi),%ebx
    mov    0x8(%edi),%ecx
    mov    0xc(%edi),%edx
    mov    0x10(%edi),%esi
    mov    0x14(%edi),%edi
    clc
    int    $0x21
    mov    %edi,%ebp
    pop    %edi
    mov    %eax,(%edi)
    mov    %ebx,0x4(%edi)
    mov    %ecx,0x8(%edi)
    mov    %edx,0xc(%edi)
    mov    %esi,0x10(%edi)
    mov    %ebp,0x14(%edi)
    sbb    %eax,%eax
    pop    %ebp
    mov    %eax,0x18(%ebp)
    mov    %eax,%edx
    mov    0x0(%ebp),%eax
    call   func_7b2ae
    mov    0x0(%ebp),%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_81322:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebx
    testb  $0x2,0xc(%edx)
    jne    jump_81347
    mov    $0x4,%eax
    call   func_7b1c8
    orb    $0x20,0xc(%edx)
  jump_8133d:
    mov    $0xffffffff,%eax
    jmp    jump_813c0
  jump_81347:
    cmpl   $0x0,0x8(%edx)
    jne    jump_81354
    mov    %edx,%eax
    call   func_7d0b3
  jump_81354:
    mov    $0x400,%ecx
    cmp    $0xa,%ebx
    jne    jump_81391
    mov    0xc(%edx),%al
    mov    $0x600,%ecx
    test   $0x40,%al
    jne    jump_81391
    orb    $0x10,0xd(%edx)
    mov    (%edx),%eax
    movb   $0xd,(%eax)
    mov    (%edx),%esi
    inc    %esi
    mov    0x4(%edx),%edi
    mov    %esi,(%edx)
    inc    %edi
    mov    0x14(%edx),%ebp
    mov    %edi,0x4(%edx)
    cmp    %ebp,%edi
    jne    jump_81391
    mov    %edx,%eax
    call   func_7aed7
    test   %eax,%eax
    jne    jump_8133d
  jump_81391:
    orb    $0x10,0xd(%edx)
    mov    (%edx),%eax
    mov    %bl,(%eax)
    mov    (%edx),%eax
    inc    %eax
    mov    0x4(%edx),%esi
    mov    %eax,(%edx)
    inc    %esi
    mov    0xc(%edx),%edi
    mov    %esi,0x4(%edx)
    test   %edi,%ecx
    jne    jump_813b1
    cmp    0x14(%edx),%esi
    jne    jump_813bc
  jump_813b1:
    mov    %edx,%eax
    call   func_7aed7
    test   %eax,%eax
    jne    jump_8133d
  jump_813bc:
    xor    %eax,%eax
    mov    %bl,%al
  jump_813c0:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_813c6:
/*----------------------------------------------------------------*/
    movl   $0x8000,data_99d94
    ret
  jump_8149a:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_814a0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    push   %eax
    cmp    data_99938,%eax
    jb     jump_81507
    cmpb   $0x0,data_99952
    jne    jump_81519
    mov    (%esp),%ebp
    add    $0xf,%ebp
    shr    $0x4,%ebp
    test   %ebp,%ebp
    jne    jump_814cb
    mov    $0xfffffff,%ebp
  jump_814cb:
    xor    %ebx,%ebx
    mov    %ds,%eax
    mov    %ax,%bx
    mov    $0xed,%ah
    int    $0x21
    shl    $0x1f,%eax
    and    $0xffff,%edi
    or     %eax,%edi
    test   %edi,%edi
    jge    jump_814f5
    mov    %edi,%es
    mov    %ebp,%ebx
    mov    $0x4a,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    test   %eax,%eax
    jl     jump_81507
  jump_814f5:
    mov    %ds,%eax
    mov    %eax,%es
    mov    %ebp,%ebx
  jump_814fb:
    mov    $0x4a,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    test   %eax,%eax
    jge    jump_8154a
  jump_81507:
    call   func_77a87
    movl   $0x5,(%eax)
    mov    $0xffffffff,%eax
    jmp    jump_81558
  jump_81519:
    mov    (%esp),%ebx
    add    $0xfff,%ebx
    shr    $0xc,%ebx
    test   %ebx,%ebx
    jne    jump_8152e
    mov    $0xfffff,%ebx
  jump_8152e:
    mov    data_99952,%dl
    cmp    $0x1,%dl
    jne    jump_81544
    cmp    data_99953,%dl
    jne    jump_81544
    shl    $0x8,%ebx
  jump_81544:
    mov    %ds,%eax
    mov    %eax,%es
    jmp    jump_814fb
  jump_8154a:
    mov    (%esp),%ebx
    mov    data_99924,%eax
    mov    %ebx,data_99924
  jump_81558:
    add    $0x4,%esp
    pop    %ebp
    pop    %es
    jmp    jump_8149a


/*----------------------------------------------------------------*/
func_81562:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %es
    push   %fs
    cmpl   $0x0,data_99bf8
    jne    jump_8162d
    mov    data_99959,%fs
    xor    %ecx,%ecx
    xor    %dl,%dl
    mov    %fs,%eax
    mov    data_99955,%edi
    mov    %eax,%es
    mov    %edi,%eax
  jump_8158d:
    cmp    %es:(%eax),%dl
    je     jump_815a5
  jump_81592:
    mov    %es:(%eax),%dh
    lea    0x1(%eax),%ebx
    cmp    %dh,%dl
    je     jump_815a0
    mov    %ebx,%eax
    jmp    jump_81592
  jump_815a0:
    inc    %ecx
    mov    %ebx,%eax
    jmp    jump_8158d
  jump_815a5:
    sub    %edi,%eax
    jne    jump_815ae
    mov    $0x1,%eax
  jump_815ae:
    call   func_78734
    mov    %eax,%edx
    mov    %eax,%ebx
    test   %eax,%eax
    je     jump_8162d
    mov    %ecx,%eax
    shl    $0x2,%eax
    add    $0x4,%eax
    add    %ecx,%eax
    call   func_78734
    test   %eax,%eax
    je     jump_81626
    mov    %eax,data_99bf8
    xor    %esi,%esi
    mov    %fs,%eax
    xor    %ecx,%ecx
    mov    %eax,%es
    mov    %edi,%eax
  jump_815e1:
    cmpb   $0x0,%es:(%eax)
    je     jump_81601
    mov    data_99bf8,%edx
    mov    %ebx,(%ecx,%edx,1)
  jump_815f0:
    mov    %es:(%eax),%dl
    inc    %eax
    mov    %dl,(%ebx)
    inc    %ebx
    test   %dl,%dl
    jne    jump_815f0
    add    $0x4,%ecx
    inc    %esi
    jmp    jump_815e1
  jump_81601:
    mov    data_99bf8,%edx
    movl   $0x0,(%ecx,%edx,1)
    add    $0x4,%ecx
    add    %ecx,%edx
    mov    %esi,%ebx
    mov    %edx,data_99bfc
    mov    %edx,%eax
    xor    %edx,%edx
    call   func_76ec0
    jmp    jump_8162d
  jump_81626:
    mov    %edx,%eax
    call   func_7882f
  jump_8162d:
    pop    %fs
    pop    %es
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_8163c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ebx,%eax
    test   %edx,%edx
    jge    jump_81655
    mov    $0x2d,%dh
    neg    %esi
    mov    %dh,(%esp)
    jmp    jump_81659
  jump_81655:
    movb   $0x2b,(%esp)
  jump_81659:
    mov    $0x64,%ebx
    mov    $0x3,%edx
    cmp    %ebx,%esi
    jge    jump_8167c
    mov    $0xa,%ebx
    mov    $0x2,%edx
    cmp    %ebx,%esi
    jge    jump_8167c
    mov    $0x1,%edx
    mov    %edx,%ebx
  jump_8167c:
    test   %eax,%eax
    jne    jump_8168c
    mov    $0x2,%eax
    cmp    $0x3,%edx
    jne    jump_8168c
    mov    %edx,%eax
  jump_8168c:
    lea    0x1(%eax),%ebp
    cmp    %ecx,%ebp
    jg     jump_816da
    cmp    %eax,%edx
    jg     jump_816d7
    mov    (%esp),%cl
    mov    %cl,(%edi)
  jump_8169c:
    inc    %edi
    cmp    %edx,%eax
    jle    jump_816a7
    dec    %eax
    movb   $0x30,(%edi)
    jmp    jump_8169c
  jump_816a7:
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %esi,%edx
    add    $0x30,%eax
    sar    $0x1f,%edx
    mov    %al,(%edi)
    mov    %esi,%eax
    idiv   %ebx
    mov    %edx,%esi
    mov    %ebx,%eax
    mov    %ebx,%edx
    mov    $0xa,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    inc    %edi
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_816a7
    jmp    jump_816da
  jump_816d7:
    lea    0x1(%edx),%ebp
  jump_816da:
    mov    %ebp,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
  jump_816e1:
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_816e3:
/*----------------------------------------------------------------*/
    push   %esi
    mov    %ebx,%esi
    test   %ecx,%ecx
    jne    jump_816f8
    test   %ebx,%ebx
    jg     jump_816f8
    movb   $0x30,(%eax)
    inc    %eax
    movb   $0x2e,(%eax)
    inc    %eax
    pop    %esi
    ret
  jump_816f8:
    test   %esi,%esi
    jle    jump_81709
    mov    (%edx),%bl
    test   %bl,%bl
    je     jump_81709
    inc    %edx
    dec    %esi
    mov    %bl,(%eax)
    inc    %eax
    jmp    jump_816f8
  jump_81709:
    test   %esi,%esi
    jle    jump_81716
  jump_8170d:
    dec    %esi
    movb   $0x30,(%eax)
    inc    %eax
    test   %esi,%esi
    jg     jump_8170d
  jump_81716:
    movb   $0x2e,(%eax)
    inc    %eax
    test   %ecx,%ecx
    jle    jump_8172a
  jump_8171e:
    test   %esi,%esi
    je     jump_8172a
    inc    %esi
    movb   $0x30,(%eax)
    inc    %eax
    dec    %ecx
    jne    jump_8171e
  jump_8172a:
    test   %ecx,%ecx
    jle    jump_816e1
  jump_8172e:
    mov    (%edx),%bh
    test   %bh,%bh
    je     jump_8173b
    inc    %edx
    mov    %bh,(%eax)
    inc    %eax
    dec    %ecx
    jne    jump_8172e
  jump_8173b:
    test   %ecx,%ecx
    je     jump_816e1
    dec    %ecx
    movb   $0x30,(%eax)
    inc    %eax
    jmp    jump_8173b


/*----------------------------------------------------------------*/
func_81746:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    cmp    %ebx,%edx
    je     jump_817a9
    mov    %edi,-0x14(%ebp)
    mov    0x1(%eax),%al
    lea    (%ebx,%edi,1),%edx
    mov    %al,-0x10(%ebp)
    lea    (%esi,%edi,1),%eax
  jump_81766:
    dec    %eax
    dec    %edx
    mov    (%eax),%cl
    dec    %esi
    mov    %cl,(%edx)
    mov    -0x14(%ebp),%ecx
    dec    %ebx
    cmp    %ecx,%eax
    jne    jump_81766
    mov    (%edi),%ah
    cmp    $0x2e,%ah
    jne    jump_81783
    dec    %ebx
    movb   $0x30,(%edi,%ebx,1)
    jmp    jump_8179d
  jump_81783:
    cmp    $0x2b,%ah
    je     jump_8178d
    cmp    $0x2d,%ah
    jne    jump_8179d
  jump_8178d:
    cmpb   $0x2e,-0x10(%ebp)
    jne    jump_8179d
    movb   $0x30,(%edi,%ebx,1)
    dec    %ebx
    mov    (%edi),%dl
    mov    %dl,(%edi,%ebx,1)
  jump_8179d:
    mov    $0x20,%edx
    mov    %edi,%eax
    call   func_76ec0
  jump_817a9:
    lea    -0xc(%ebp),%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_817b1:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %esi
    push   %edi
    sub    $0x3c,%esp
    mov    0x8(%ebp),%edi
    mov    %eax,-0x14(%ebp)
    mov    %cl,-0x10(%ebp)
    lea    -0x44(%ebp),%eax
    push   %eax
    mov    0x4(%edx),%ecx
    push   %ecx
    mov    (%edx),%esi
    push   %esi
    call   func_81ec1
    test   %eax,%eax
    je     jump_817f2
    mov    -0x14(%ebp),%eax
    xor    %esi,%esi
    jmp    jump_817e5
  jump_817dd:
    cmp    %edi,%esi
    jge    jump_817e3
    mov    %ch,(%eax)
  jump_817e3:
    inc    %eax
    inc    %esi
  jump_817e5:
    mov    -0x44(%esi,%ebp,1),%ch
    test   %ch,%ch
    jne    jump_817dd
    jmp    jump_819b8
  jump_817f2:
    mov    0x18(%ebp),%al
    mov    %al,-0xc(%ebp)
    cmp    $0x47,%al
    jne    jump_81876
    fldl   (%edx)
    fabs
    fstpl  -0x30(%ebp)
    mov    -0x2c(%ebp),%eax
    mov    -0x30(%ebp),%ecx
    test   $0x7fffffff,%eax
    jne    jump_81818
    test   %ecx,%ecx
    je     jump_8186c
  jump_81818:
    fldl   -0x30(%ebp)
    fldlg2
    fxch   %st(1)
    fyl2x
    fstpl  -0x30(%ebp)
    mov    -0x2c(%ebp),%eax
    push   %eax
    mov    -0x30(%ebp),%ecx
    push   %ecx
    call   func_81f45
    call   func_76e98
    fistpl -0x18(%ebp)
    mov    -0x18(%ebp),%esi
    cmp    $0xfffffffc,%esi
    jl     jump_81845
    cmp    %esi,%ebx
    jg     jump_8184b
  jump_81845:
    movb   $0x45,-0xc(%ebp)
    jmp    jump_81876
  jump_8184b:
    fldz
    fcompl -0x30(%ebp)
    fnstsw %ax
    sahf
    ja     jump_8185b
    lea    0x1(%esi),%ecx
    mov    %ecx,-0x18(%ebp)
  jump_8185b:
    mov    -0x18(%ebp),%esi
    xor    %eax,%eax
    mov    $0x46,%ch
    mov    %eax,0xc(%ebp)
    mov    %ch,-0xc(%ebp)
    sub    %esi,%ebx
    jmp    jump_81876
  jump_8186c:
    xor    %esi,%esi
    mov    $0x46,%cl
    mov    %esi,0xc(%ebp)
    mov    %cl,-0xc(%ebp)
  jump_81876:
    cmpb   $0x45,-0xc(%ebp)
    jne    jump_818a2
    mov    %ebx,%eax
    mov    0xc(%ebp),%ecx
    neg    %eax
    cmp    %ecx,%eax
    jge    jump_8188e
    lea    0x2(%ebx),%eax
    cmp    %ecx,%eax
    jg     jump_818a2
  jump_8188e:
    mov    -0x14(%ebp),%eax
    mov    $0x2a,%edx
    mov    %edi,%ebx
    call   func_76ec0
    jmp    jump_819cc
  jump_818a2:
    mov    0x18(%ebp),%al
    mov    %ebx,%ecx
    cmp    $0x45,%al
    jne    jump_818bc
    mov    0xc(%ebp),%eax
    test   %eax,%eax
    jle    jump_818b7
    lea    0x1(%ebx),%ecx
    jmp    jump_818bc
  jump_818b7:
    jge    jump_818bc
    lea    (%eax,%ebx,1),%ecx
  jump_818bc:
    mov    (%edx),%eax
    mov    %eax,-0x28(%ebp)
    mov    0x4(%edx),%eax
    mov    -0x28(%ebp),%edx
    mov    %eax,-0x24(%ebp)
    test   $0x7fffffff,%eax
    jne    jump_818d5
    test   %edx,%edx
    je     jump_818f3
  jump_818d5:
    cmpb   $0x45,-0xc(%ebp)
    je     jump_818f3
    mov    0xc(%ebp),%ebx
    test   %ebx,%ebx
    je     jump_818f3
    push   %ebx
    mov    -0x24(%ebp),%eax
    push   %eax
    mov    -0x28(%ebp),%edx
    push   %edx
    call   func_81fc2
    fstpl  -0x28(%ebp)
  jump_818f3:
    lea    -0x44(%ebp),%eax
    push   %eax
    xor    %eax,%eax
    mov    -0xc(%ebp),%al
    push   %eax
    lea    -0x20(%ebp),%eax
    push   %eax
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %ecx
    mov    -0x24(%ebp),%ebx
    push   %ebx
    mov    -0x28(%ebp),%esi
    push   %esi
    mov    -0x14(%ebp),%edx
    call   func_820a9
    mov    -0x20(%ebp),%ebx
    lea    0x1(%edx),%eax
    test   %ebx,%ebx
    je     jump_81925
    movb   $0x2d,(%edx)
    jmp    jump_8192e
  jump_81925:
    cmpb   $0x0,-0x10(%ebp)
    je     jump_81930
    movb   $0x2b,(%edx)
  jump_8192e:
    mov    %eax,%edx
  jump_81930:
    cmpb   $0x45,-0xc(%ebp)
    jne    jump_8198d
    mov    0xc(%ebp),%ebx
    mov    %edx,%eax
    lea    -0x44(%ebp),%edx
    sub    %ebx,%ecx
    call   func_816e3
    mov    -0x14(%ebp),%ecx
    mov    %eax,%esi
    mov    %eax,%ebx
    sub    %ecx,%esi
    mov    0x14(%ebp),%cl
    mov    %eax,%edx
    test   %cl,%cl
    je     jump_81961
    cmp    %edi,%esi
    jge    jump_81961
    lea    0x1(%eax),%edx
    inc    %esi
    mov    %cl,(%eax)
  jump_81961:
    mov    -0x24(%ebp),%eax
    mov    -0x28(%ebp),%ebx
    test   $0x7fffffff,%eax
    jne    jump_81972
    test   %ebx,%ebx
    je     jump_81978
  jump_81972:
    mov    0xc(%ebp),%eax
    sub    %eax,-0x1c(%ebp)
  jump_81978:
    mov    0x10(%ebp),%ebx
    mov    %edi,%ecx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    sub    %esi,%ecx
    call   func_8163c
    add    %eax,%esi
    jmp    jump_819b8
  jump_8198d:
    mov    -0x14(%ebp),%esi
    mov    -0x1c(%ebp),%eax
    mov    %edx,%ebx
    inc    %eax
    sub    %esi,%ebx
    add    %ecx,%eax
    add    %ebx,%eax
    cmp    %eax,%edi
    jge    jump_819a5
    lea    0x1(%edi),%esi
    jmp    jump_819b8
  jump_819a5:
    mov    -0x1c(%ebp),%ebx
    mov    %edx,%eax
    lea    -0x44(%ebp),%edx
    call   func_816e3
    mov    %esi,%edx
    mov    %eax,%esi
    sub    %edx,%esi
  jump_819b8:
    cmp    %edi,%esi
    jg     jump_8188e
    mov    -0x14(%ebp),%eax
    mov    %esi,%edx
    mov    %edi,%ebx
    call   func_81746
  jump_819cc:
    lea    -0x8(%ebp),%esp
    pop    %edi
    pop    %esi
    pop    %ebp
    ret    $0x14


/*----------------------------------------------------------------*/
func_819d5:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x24,%esp
    push   %edx
    mov    %eax,-0x14(%ebp)
  jump_819e3:
    mov    (%eax),%dl
    cmp    $0x20,%dl
    je     jump_819f4
    cmp    $0x9,%dl
    jb     jump_819f7
    cmp    $0xd,%dl
    ja     jump_819f7
  jump_819f4:
    inc    %eax
    jmp    jump_819e3
  jump_819f7:
    lea    0x1(%eax),%ebx
    xor    %cl,%cl
    cmp    $0x2b,%dl
    je     jump_81a08
    cmp    $0x2d,%dl
    jne    jump_81a0a
    mov    $0x1,%cl
  jump_81a08:
    mov    %ebx,%eax
  jump_81a0a:
    mov    $0x30,%bl
    xor    %edx,%edx
    xor    %esi,%esi
  jump_81a10:
    mov    (%eax),%ch
    inc    %eax
    cmp    $0x2e,%ch
    jne    jump_81a22
    test   $0x8,%cl
    jne    jump_81a48
    or     $0x8,%cl
    jmp    jump_81a10
  jump_81a22:
    cmp    $0x30,%ch
    jb     jump_81a48
    cmp    $0x39,%ch
    ja     jump_81a48
    test   $0x8,%cl
    je     jump_81a32
    inc    %esi
  jump_81a32:
    or     %ch,%bl
    cmp    $0x30,%bl
    je     jump_81a43
    cmp    $0x11,%edx
    jge    jump_81a42
    mov    %ch,-0x34(%edx,%ebp,1)
  jump_81a42:
    inc    %edx
  jump_81a43:
    or     $0x4,%cl
    jmp    jump_81a10
  jump_81a48:
    xor    %ebx,%ebx
    test   $0x4,%cl
    je     jump_81abe
    cmp    $0x65,%ch
    je     jump_81a67
    cmp    $0x45,%ch
    je     jump_81a67
    cmp    $0x64,%ch
    je     jump_81a67
    cmp    $0x44,%ch
    jne    jump_81aba
  jump_81a67:
    lea    -0x1(%eax),%edi
    mov    %edi,-0x18(%ebp)
    lea    0x1(%eax),%edi
    mov    (%eax),%ch
    cmp    $0x2b,%ch
    je     jump_81a7f
    cmp    $0x2d,%ch
    jne    jump_81a81
    or     $0x2,%cl
  jump_81a7f:
    mov    %edi,%eax
  jump_81a81:
    and    $0xfb,%cl
  jump_81a84:
    mov    (%eax),%ch
    cmp    $0x30,%ch
    jb     jump_81aa9
    cmp    $0x39,%ch
    ja     jump_81aa9
    cmp    $0x3e8,%ebx
    jge    jump_81aa3
    imul   $0xa,%ebx,%ebx
    movzbl %ch,%edi
    add    %edi,%ebx
    sub    $0x30,%ebx
  jump_81aa3:
    or     $0x4,%cl
    inc    %eax
    jmp    jump_81a84
  jump_81aa9:
    test   $0x2,%cl
    je     jump_81ab0
    neg    %ebx
  jump_81ab0:
    test   $0x4,%cl
    jne    jump_81abb
    mov    -0x18(%ebp),%eax
    jmp    jump_81abb
  jump_81aba:
    dec    %eax
  jump_81abb:
    mov    %eax,-0x14(%ebp)
  jump_81abe:
    sub    %esi,%ebx
    cmp    $0x11,%edx
    jle    jump_81acf
    sub    $0x11,%edx
    add    %edx,%ebx
    mov    $0x11,%edx
  jump_81acf:
    test   %edx,%edx
    jle    jump_81ade
    cmpb   $0x30,-0x35(%edx,%ebp,1)
    jne    jump_81ade
    inc    %ebx
    dec    %edx
    jmp    jump_81acf
  jump_81ade:
    test   %edx,%edx
    jne    jump_81aed
    mov    %edx,-0x20(%ebp)
    mov    %edx,-0x1c(%ebp)
    jmp    jump_81b64
  jump_81aed:
    xor    %ah,%ah
    mov    %ah,-0x34(%edx,%ebp,1)
    lea    -0x34(%ebp),%eax
    lea    -0x20(%ebp),%edx
    call   func_82320
    cmp    $0x134,%ebx
    jle    jump_81b2f
    call   func_7b1d4
    test   $0x1,%cl
    je     jump_81b1d
    fldl   data_96370
    fchs
    fstpl  -0x20(%ebp)
    jmp    jump_81b64
  jump_81b1d:
    mov    data_96370,%eax
    mov    %eax,-0x20(%ebp)
    mov    data_96374,%eax
    mov    %eax,-0x1c(%ebp)
    jmp    jump_81b64
  jump_81b2f:
    cmp    $0xfffffebb,%ebx
    jge    jump_81b46
    xor    %ebx,%ebx
    call   func_7b1d4
    mov    %ebx,-0x20(%ebp)
    mov    %ebx,-0x1c(%ebp)
    jmp    jump_81b64
  jump_81b46:
    test   %ebx,%ebx
    je     jump_81b5b
    push   %ebx
    mov    -0x1c(%ebp),%eax
    push   %eax
    mov    -0x20(%ebp),%edx
    push   %edx
    call   func_81fc2
    fstpl  -0x20(%ebp)
  jump_81b5b:
    test   $0x1,%cl
    je     jump_81b64
    xorb   $0x80,-0x19(%ebp)
  jump_81b64:
    cmpl   $0x0,-0x38(%ebp)
    je     jump_81b72
    mov    -0x38(%ebp),%edx
    mov    -0x14(%ebp),%eax
    mov    %eax,(%edx)
  jump_81b72:
    fldl   -0x20(%ebp)
    lea    -0x10(%ebp),%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_81b7e:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %ebx,%edx
    mov    data_99952,%bl
    cmp    $0x2,%bl
    jb     jump_81b9f
    cmp    $0x8,%bl
    ja     jump_81b9f
    push   %ds
    mov    %ecx,%ds
    mov    %al,%cl
    mov    $0x4,%al
    mov    $0x25,%ah
    int    $0x21
    pop    %ds
    pop    %edx
    ret
  jump_81b9f:
    push   %ds
    mov    %ecx,%ds
    mov    $0x25,%ah
    int    $0x21
    pop    %ds
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_81baf:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    $0x2,%eax
    call   func_823c1
    mov    %eax,%ebx
    mov    %esi,%eax
    mov    %ebx,%edx
    mov    data_96378(,%eax,4),%eax
    call   func_823e0
    mov    $data_958fd,%eax
    mov    %ebx,%edx
    call   func_823e0
    mov    %ecx,%eax
    mov    %ebx,%edx
    call   func_823e0
    mov    $0xa,%eax
    mov    %ebx,%edx
    call   func_81322
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_81bf7:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    call   *data_99d9c
    test   %eax,%eax
    jne    jump_81c20
    mov    0x4(%ebx),%edx
    mov    (%ebx),%eax
    call   func_81baf
    cmpl   $0x1,(%ebx)
    jne    jump_81c1b
    call   func_7b1c3
    jmp    jump_81c20
  jump_81c1b:
    call   func_7b1d4
  jump_81c20:
    fldl   0x18(%ebx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_81c28:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%eax
    shr    $0x3,%eax
    mov    %eax,%ecx
    shl    $0x3,%ecx
    sub    %ecx,%edx
    mov    data_99da0(%edx),%dl
    and    (%ebx,%eax,1),%dl
    mov    %dl,%al
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_81c48:
/*----------------------------------------------------------------*/
    jmp    jump_82464
  jump_81ccb:
    push   %eax
    push   %edx
    mov    0x2a(%eax),%dx
    mov    0x1c(%eax),%eax
    call   *data_99da8
    pop    %edx
    pop    %eax
    mov    0x2a(%eax),%ss
    mov    0x1c(%eax),%esp
    push   0x18(%eax)
    or     %edx,%edx
    jne    jump_81cea
    inc    %edx
  jump_81cea:
    push   %edx
    mov    (%eax),%ebx
    mov    0x4(%eax),%ecx
    mov    0xc(%eax),%esi
    mov    0x10(%eax),%edi
    mov    0x14(%eax),%ebp
    mov    0x20(%eax),%dx
    verr   %dx
    je     jump_81d04
    sub    %edx,%edx
  jump_81d04:
    mov    %edx,%es
    mov    0x26(%eax),%dx
    verr   %dx
    je     jump_81d11
    sub    %edx,%edx
  jump_81d11:
    mov    %edx,%fs
    mov    0x28(%eax),%dx
    verr   %dx
    je     jump_81d1e
    sub    %edx,%edx
  jump_81d1e:
    mov    %edx,%gs
    mov    0x8(%eax),%edx
    mov    0x22(%eax),%ds
    pop    %eax
    ret

vtable_81d28:
    .long   func_81e59
    .long   func_81e6a
    .long   func_81e4f
    .long   func_81e35
    .long   func_81e62
    .long   func_81e4f
    .long   func_81e6a
    .long   func_81e6a


/*----------------------------------------------------------------*/
func_81e35:
/*----------------------------------------------------------------*/
    mov    %eax,%edi
    movzbl 0x1(%esi),%ecx
    mov    0x8(%esp),%esi
  jump_81e3f:
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi


/*----------------------------------------------------------------*/
func_81e4f:
/*----------------------------------------------------------------*/
    mov    %ebp,%eax
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_81e59:
/*----------------------------------------------------------------*/
    mov    0x8(%esp),%edx
  jump_81e5d:
    call   *0x5(%esi)
    jmp    func_81e4f


/*----------------------------------------------------------------*/
func_81e62:
/*----------------------------------------------------------------*/
    mov    0x8(%esp),%ebx
    xor    %edx,%edx
    jmp    jump_81e5d


/*----------------------------------------------------------------*/
func_81e6a:
/*----------------------------------------------------------------*/
    mov    $0x4,%ecx
    mov    0x8(%esp),%esi
    lea    0x12(%ebp),%edi
    jmp    jump_81e3f


/*----------------------------------------------------------------*/
func_81e78:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    0x8(%eax),%ebx
    mov    (%ebx),%edx
    sub    $0x4,%ebx
    mov    %edx,0x8(%eax)
    mov    (%ebx),%eax
    mov    %eax,0x4(%ebx)
    mov    $data_99db0,%eax
    jmp    jump_81e93
  jump_81e91:
    mov    %edx,%eax
  jump_81e93:
    mov    (%eax),%edx
    test   %edx,%edx
    je     jump_81e9d
    cmp    %ebx,%edx
    jbe    jump_81e91
  jump_81e9d:
    mov    %ebx,(%eax)
    mov    %edx,(%ebx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_81ec0:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_81ec1:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x8,%esp
    mov    0x1c(%esp),%edx
    mov    0x14(%esp),%eax
    mov    %eax,(%esp)
    mov    0x18(%esp),%eax
    mov    %eax,0x4(%esp)
    mov    0x6(%esp),%eax
    and    $0x7ff0,%eax
    cmp    $0x7ff0,%ax
    jne    jump_81f3b
    mov    0x7(%esp),%bl
    mov    %edx,%eax
    test   $0x80,%bl
    je     jump_81ef9
    lea    0x1(%edx),%eax
    movb   $0x2d,(%edx)
  jump_81ef9:
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x2(%esp),%bx
    mov    (%esp),%dx
    or     %ebx,%edx
    xor    %ebx,%ebx
    mov    0x4(%esp),%bx
    or     %ebx,%edx
    mov    0x6(%esp),%ebx
    and    $0xf,%bl
    xor    %bh,%bh
    and    $0xffff,%ebx
    or     %ebx,%edx
    jne    jump_81f2c
    mov    data_95930,%edx
    jmp    jump_81f32
  jump_81f2c:
    mov    data_95934,%edx
  jump_81f32:
    mov    %edx,(%eax)
    mov    $0x1,%eax
    jmp    jump_81f3d
  jump_81f3b:
    xor    %eax,%eax
  jump_81f3d:
    add    $0x8,%esp
    pop    %edx
    pop    %ebx
    ret    $0xc


/*----------------------------------------------------------------*/
func_81f45:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %eax
    push   %ebx
    push   %edx
    sub    $0x8,%esp
    lea    -0x14(%ebp),%eax
    push   %eax
    mov    0xc(%ebp),%edx
    push   %edx
    mov    0x8(%ebp),%ebx
    push   %ebx
    call   func_824e4
    fldz
    fcompp
    fnstsw %ax
    sahf
    jbe    jump_81f74
    fldl   -0x14(%ebp)
    faddl  data_95938
    fstpl  -0x14(%ebp)
  jump_81f74:
    fldl   -0x14(%ebp)
    lea    -0xc(%ebp),%esp
    pop    %edx
    pop    %ebx
    pop    %eax
    pop    %ebp
    ret    $0x8


/*----------------------------------------------------------------*/
func_81f81:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    0x10(%ebp),%ecx
    mov    0x14(%ebp),%ebx
    cmp    %ecx,%eax
    je     jump_81fa7
    mov    %ecx,%edx
    sub    %eax,%edx
    push   %edx
    mov    0xc(%ebp),%edx
    push   %edx
    mov    0x8(%ebp),%esi
    push   %esi
    call   func_81fc2
    fstpl  0x8(%ebp)
  jump_81fa7:
    lea    0x8(%ebp),%eax
    mov    %ebx,%edx
    call   func_82538
    mov    %ecx,%eax
    mov    %ebx,%edx
    call   func_824fe
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %ebp
    ret    $0x10


/*----------------------------------------------------------------*/
func_81fc2:
/*----------------------------------------------------------------*/
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x8,%esp
    mov    0x28(%esp),%ecx
    fldl   0x20(%esp)
    fcompl data_96394
    fnstsw %ax
    sahf
    jne    jump_81fed
    mov    data_963a4,%eax
    mov    %eax,0x20(%esp)
    mov    data_963a8,%eax
    jmp    jump_8200a
  jump_81fed:
    fldl   0x20(%esp)
    fcompl data_9639c
    fnstsw %ax
    sahf
    jne    jump_8200e
    mov    data_963ac,%eax
    mov    %eax,0x20(%esp)
    mov    data_963b0,%eax
  jump_8200a:
    mov    %eax,0x24(%esp)
  jump_8200e:
    mov    $data_963b4,%eax
    test   %ecx,%ecx
    jge    jump_82035
    mov    %ecx,%edx
    neg    %edx
    cmp    $0x134,%edx
    jle    jump_82053
    fldl   0x20(%esp)
    fdivl  data_963b6
    sub    $0xd8,%edx
    jmp    jump_8204f
  jump_82035:
    mov    %ecx,%edx
    cmp    $0x134,%ecx
    jle    jump_82053
    fldl   0x20(%esp)
    fmull  data_963b6
    lea    -0xd8(%ecx),%edx
  jump_8204f:
    fstpl  0x20(%esp)
  jump_82053:
    xor    %ebx,%ebx
    mov    $0x3ff00000,%esi
    mov    %ebx,(%esp)
    mov    %esi,0x4(%esp)
  jump_82061:
    movswl (%eax),%ebx
    cmp    %ebx,%edx
    jl     jump_82073
    fldl   (%esp)
    fmull  0x2(%eax)
    sub    %ebx,%edx
    fstpl  (%esp)
  jump_82073:
    test   %edx,%edx
    je     jump_82082
    cmpw   $0x1,(%eax)
    je     jump_82061
    add    $0xa,%eax
    jmp    jump_82061
  jump_82082:
    test   %ecx,%ecx
    jge    jump_8208f
    fldl   0x20(%esp)
    fdivl  (%esp)
    jmp    jump_82096
  jump_8208f:
    fldl   0x20(%esp)
    fmull  (%esp)
  jump_82096:
    fstpl  0x20(%esp)
    fldl   0x20(%esp)
    add    $0x8,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %eax
    ret    $0xc


/*----------------------------------------------------------------*/
func_820a9:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x2c,%esp
    mov    0x10(%ebp),%ebx
    mov    0x14(%ebp),%ecx
    mov    0x18(%ebp),%edi
    mov    0x20(%ebp),%edx
    push   %edx
    mov    0xc(%ebp),%esi
    push   %esi
    mov    0x8(%ebp),%eax
    movl   $0x0,(%edi)
    push   %eax
    movl   $0x0,(%ecx)
    call   func_81ec1
    test   %eax,%eax
    je     jump_820e5
    mov    %edx,%eax
    jmp    jump_82283
  jump_820e5:
    xor    %edx,%edx
    xor    %esi,%esi
    mov    %dx,-0x2c(%ebp)
    mov    %si,-0x2a(%ebp)
    mov    %dx,-0x28(%ebp)
    mov    %dx,-0x26(%ebp)
    mov    0xc(%ebp),%edx
    mov    0x8(%ebp),%esi
    test   $0x7fffffff,%edx
    jne    jump_8210f
    test   %esi,%esi
    je     jump_8223c
  jump_8210f:
    fldz
    fcompl 0x8(%ebp)
    fnstsw %ax
    sahf
    jbe    jump_82128
    mov    0xf(%ebp),%ah
    xor    $0x80,%ah
    movl   $0xffffffff,(%edi)
    mov    %ah,0xf(%ebp)
  jump_82128:
    push   %ecx
    mov    0xc(%ebp),%eax
    push   %eax
    mov    0x8(%ebp),%edx
    push   %edx
    call   func_826c4
    mov    (%ecx),%edx
    fstp   %st(0)
    test   %edx,%edx
    jge    jump_82140
    neg    %edx
  jump_82140:
    mov    %edx,%eax
    shl    $0x2,%edx
    sub    %eax,%edx
    add    $0x5,%edx
    mov    $0xa,%esi
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %esi
    mov    (%ecx),%esi
    mov    %eax,%edx
    test   %esi,%esi
    jge    jump_82160
    neg    %edx
  jump_82160:
    mov    0x1c(%ebp),%eax
    mov    %edx,(%ecx)
    cmp    $0x46,%eax
    jne    jump_8216c
    add    %edx,%ebx
  jump_8216c:
    test   %ebx,%ebx
    jl     jump_82208
    cmp    $0x10,%ebx
    jle    jump_8217e
    mov    $0x10,%ebx
  jump_8217e:
    xor    %al,%al
    mov    %al,-0x18(%ebp)
    lea    -0x24(%ebp),%eax
    push   %eax
    mov    0xc(%ebp),%esi
    push   %esi
    mov    0x8(%ebp),%eax
    push   %eax
    call   func_824e4
    fldz
    fcompp
    fnstsw %ax
    sahf
    jne    jump_821a8
    cmp    %edx,%ebx
    jle    jump_821a8
    mov    $0x1,%ah
    mov    %edx,%ebx
    mov    %ah,-0x18(%ebp)
  jump_821a8:
    lea    -0x2c(%ebp),%eax
    push   %eax
    push   %ebx
    mov    0xc(%ebp),%esi
    push   %esi
    mov    0x8(%ebp),%eax
    push   %eax
    mov    (%ecx),%eax
    call   func_81f81
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_82208
    mov    0x1c(%ebp),%esi
    add    %eax,(%ecx)
    cmp    $0x46,%esi
    je     jump_821d2
    cmpb   $0x0,-0x18(%ebp)
    je     jump_821d4
  jump_821d2:
    add    %eax,%ebx
  jump_821d4:
    cmp    $0x1,%ebx
    jge    jump_821e0
    mov    $0x1,%ebx
    jmp    jump_821ea
  jump_821e0:
    cmp    $0x10,%ebx
    jle    jump_821ea
    mov    $0x10,%ebx
  jump_821ea:
    lea    -0x2c(%ebp),%eax
    push   %eax
    push   %ebx
    mov    0xc(%ebp),%eax
    push   %eax
    mov    0x8(%ebp),%esi
    push   %esi
    mov    (%ecx),%eax
    call   func_81f81
    test   %eax,%eax
    jle    jump_82208
    mov    (%ecx),%eax
    inc    %eax
    inc    %ebx
    mov    %eax,(%ecx)
  jump_82208:
    mov    -0x2c(%ebp),%eax
    sar    $0x10,%eax
    mov    %eax,-0x1c(%ebp)
    mov    -0x2e(%ebp),%eax
    mov    -0x1c(%ebp),%esi
    sar    $0x10,%eax
    or     %esi,%eax
    mov    -0x2a(%ebp),%esi
    sar    $0x10,%esi
    or     %esi,%eax
    mov    -0x28(%ebp),%esi
    sar    $0x10,%esi
    or     %esi,%eax
    jne    jump_8223c
    mov    %eax,(%edi)
    mov    0x1c(%ebp),%edi
    mov    %eax,(%ecx)
    cmp    $0x46,%edi
    jne    jump_8223c
    sub    %edx,%ebx
  jump_8223c:
    cmp    $0x1,%ebx
    jge    jump_82248
    mov    $0x1,%ebx
    jmp    jump_82252
  jump_82248:
    cmp    $0x11,%ebx
    jle    jump_82252
    mov    $0x11,%ebx
  jump_82252:
    lea    -0x2c(%ebp),%eax
    lea    -0x40(%ebp),%edx
    mov    0x20(%ebp),%edi
    lea    -0x40(%ebp),%esi
    call   func_825a3
    push   %edi
  jump_82264:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_82280
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_82264
  jump_82280:
    pop    %edi
    mov    %edi,%eax
  jump_82283:
    lea    -0x14(%ebp),%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %ebp
    ret    $0x1c


/*----------------------------------------------------------------*/
func_82320:
/*----------------------------------------------------------------*/
    push   %ebp
    push   %esi
    push   %edi
    push   %ecx
    push   %ebx
    push   %edx
    mov    %eax,%esi
    sub    %edx,%edx
    sub    %ecx,%ecx
    sub    %eax,%eax
  jump_8232e:
    mov    (%esi),%al
    cmp    $0x0,%al
    je     jump_82352
    mov    %edx,%edi
    mov    %ecx,%ebx
    add    %ecx,%ecx
    adc    %edx,%edx
    add    %ecx,%ecx
    adc    %edx,%edx
    add    %ebx,%ecx
    adc    %edi,%edx
    add    %ecx,%ecx
    adc    %edx,%edx
    and    $0xf,%al
    add    %eax,%ecx
    adc    $0x0,%edx
    inc    %esi
    jmp    jump_8232e
  jump_82352:
    mov    %ecx,%eax
    mov    $0x43300000,%edi
    call   func_8236b
    pop    %ebp
    mov    %edx,0x4(%ebp)
    mov    %eax,0x0(%ebp)
    pop    %ebx
    pop    %ecx
    pop    %edi
    pop    %esi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_8236b:
/*----------------------------------------------------------------*/
    sub    %esi,%esi
    or     %eax,%esi
    or     %edx,%esi
    je     jump_823bb
    test   $0xfff00000,%edx
    jne    jump_8238f
  jump_8237b:
    sub    $0x100000,%edi
    add    %eax,%eax
    adc    %edx,%edx
    test   $0xfff00000,%edx
    je     jump_8237b
    jmp    jump_823b3
  jump_8238f:
    test   $0xffe00000,%edx
    je     jump_823b3
  jump_82397:
    add    $0x100000,%edi
    shr    %edx
    rcr    %eax
    rcr    %esi
    test   $0xffe00000,%edx
    jne    jump_82397
    adc    %esi,%esi
    adc    $0x0,%eax
    adc    $0x0,%edx
  jump_823b3:
    and    $0xfffff,%edx
    or     %edi,%edx
  jump_823bb:
    ret


/*----------------------------------------------------------------*/
func_823bc:
/*----------------------------------------------------------------*/
    jmp    jump_82733


/*----------------------------------------------------------------*/
func_823c1:
/*----------------------------------------------------------------*/
    push   %edx
    cmp    $0x5,%eax
    jbe    jump_823cb
    xor    %eax,%eax
    pop    %edx
    ret
  jump_823cb:
    mov    %eax,%edx
    shl    $0x2,%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    add    %edx,%eax
    add    %eax,%eax
    add    $data_999e0,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_823e0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    mov    %edx,%ebx
    cmpl   $0x0,0x8(%edx)
    jne    jump_823f6
    mov    %ebx,%eax
    call   func_7d0b3
  jump_823f6:
    mov    0xd(%ebx),%ah
    xor    %edi,%edi
    test   $0x4,%ah
    je     jump_82415
    mov    %ah,%dl
    and    $0xf9,%dl
    mov    %dl,%dh
    mov    %dl,0xd(%ebx)
    or     $0x2,%dh
    mov    $0x1,%edi
    mov    %dh,0xd(%ebx)
  jump_82415:
    mov    %ecx,%ebp
    xor    %esi,%esi
  jump_82419:
    xor    %eax,%eax
    mov    (%ecx),%al
    test   %eax,%eax
    je     jump_82430
    mov    %ebx,%edx
    inc    %ecx
    call   func_81322
    cmp    $0xffffffff,%eax
    jne    jump_82419
    mov    %eax,%esi
  jump_82430:
    test   %edi,%edi
    je     jump_82451
    mov    0xd(%ebx),%al
    and    $0xf9,%al
    mov    %al,%ah
    mov    %al,0xd(%ebx)
    or     $0x4,%ah
    mov    %ah,0xd(%ebx)
    test   %esi,%esi
    jne    jump_82451
    mov    %ebx,%eax
    call   func_7aed7
    mov    %eax,%esi
  jump_82451:
    test   %esi,%esi
    jne    jump_82459
    mov    %ecx,%esi
    sub    %ebp,%esi
  jump_82459:
    mov    %esi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_82464:
    push   %edx
    sub    $0x4,%esp
    mov    data_133320,%eax
    mov    $data_13330c,%edx
    mov    %eax,(%esp)
    test   %eax,%eax
    jne    jump_82496
    cmpl   $0x0,data_133318
    jne    jump_8248c
    mov    $0x1,%eax
    jmp    jump_78643
  jump_8248c:
    mov    0xc(%edx),%eax
    mov    $0x1,%edx
    jmp    jump_824a3
  jump_82496:
    call   *(%esp)
    mov    $0x1,%edx
    mov    $data_95940,%eax
  jump_824a3:
    call   func_793b8
    add    $0x4,%esp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_824e4:
/*----------------------------------------------------------------*/
    push   %eax
    fldl   0x8(%esp)
    fld    %st(0)
    call   func_76e98
    fsubr  %st,%st(1)
    mov    0x10(%esp),%eax
    fstpl  (%eax)
    pop    %eax
    fwait
    ret    $0xc


/*----------------------------------------------------------------*/
func_824fe:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ecx
    call   func_8260d
    inc    %eax
    lea    (%edi,%eax,8),%edi
    mov    (%edx),%ecx
    mov    0x4(%edx),%edx
    sub    %eax,%eax
  jump_82510:
    cmp    %cs:(%edi),%edx
    jne    jump_82519
    cmp    %cs:0x4(%edi),%ecx
  jump_82519:
    jb     jump_82521
    add    $0x8,%edi
    inc    %eax
    jmp    jump_82510
  jump_82521:
    sub    $0x8,%edi
  jump_82524:
    cmp    %cs:(%edi),%edx
    jne    jump_8252d
    cmp    %cs:0x4(%edi),%ecx
  jump_8252d:
    jae    jump_82535
    sub    $0x8,%edi
    dec    %eax
    jmp    jump_82524
  jump_82535:
    pop    %ecx
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_82538:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %ebp
    push   %esi
    push   %edx
    mov    %eax,%ebp
    mov    0x0(%ebp),%ecx
    mov    0x4(%ebp),%ebx
    mov    %ebx,%ebp
    and    $0xfff00000,%ebp
    xor    %ebp,%ebx
    xor    $0x100000,%ebx
    shr    $0x14,%ebp
    sub    $0x433,%ebp
    je     jump_82596
    jbe    jump_8256c
  jump_82563:
    shl    %ecx
    rcl    %ebx
    dec    %ebp
    jne    jump_82563
    jmp    jump_82596
  jump_8256c:
    sub    %eax,%eax
    sub    %esi,%esi
  jump_82570:
    shr    %ebx
    rcr    %ecx
    rcr    %eax
    adc    %esi,%esi
    inc    %ebp
    jne    jump_82570
    cmp    $0x80000000,%eax
    jb     jump_82596
    jne    jump_82590
    or     %esi,%esi
    jne    jump_82590
    test   $0x1,%ecx
    je     jump_82596
  jump_82590:
    add    $0x1,%ecx
    adc    $0x0,%ebx
  jump_82596:
    pop    %ebp
    mov    %ecx,0x0(%ebp)
    mov    %ebx,0x4(%ebp)
    pop    %esi
    pop    %ebp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_825a3:
/*----------------------------------------------------------------*/
    push   %ebp
    push   %edi
    push   %ecx
    push   %ebx
    mov    %eax,%ebp
    mov    0x0(%ebp),%ecx
    mov    0x4(%ebp),%eax
    mov    %edx,%ebp
    add    %ebx,%ebp
    movb   $0x0,0x0(%ebp)
    push   %eax
  jump_825b8:
    pop    %eax
    mov    $0x2710,%edi
    sub    %edx,%edx
    or     %eax,%eax
    jne    jump_825cb
    or     %ecx,%ecx
    jne    jump_825cd
    push   %eax
    jmp    jump_825e3
  jump_825cb:
    div    %edi
  jump_825cd:
    xchg   %eax,%ecx
    div    %edi
    xchg   %eax,%ecx
    push   %eax
    mov    %edx,%eax
    mov    $0x64,%dl
    div    %dl
    mov    %ah,%dl
    mov    $0x0,%ah
    aam    $0xa
    xchg   %eax,%edx
    mov    $0x0,%ah
    aam    $0xa
  jump_825e3:
    add    $0x3030,%ax
    add    $0x3030,%dx
    sub    $0x4,%ebp
    mov    %al,0x3(%ebp)
    dec    %ebx
    je     jump_82607
    mov    %ah,0x2(%ebp)
    dec    %ebx
    je     jump_82607
    mov    %dl,0x1(%ebp)
    dec    %ebx
    je     jump_82607
    mov    %dh,0x0(%ebp)
    dec    %ebx
    jne    jump_825b8
  jump_82607:
    pop    %eax
    pop    %ebx
    pop    %ecx
    pop    %edi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_8260d:
/*----------------------------------------------------------------*/
    call   func_826c2
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %eax,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    or     (%eax),%al
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,%fs:(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %ch,%al
    add    (%eax),%eax
    add    %al,(%eax)
    add    %al,(%eax)
    add    %dl,(%eax)
    daa
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    mov    0x186,%al
    add    %al,(%eax)
    add    %al,0x42(%eax)
    sldt   (%eax)
    add    %al,(%eax)
    add    %al,0x9896(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    loope  jump_82656
    add    $0x0,%eax
    add    %cl,%dl
    lcall  $0x0,$0x23b
    in     $0xb,%al
    push   %esp
    pop    %ss
    add    %al,(%eax)
    add    %al,(%eax)
    call   func_f06ef2
    add    %al,(%eax)
    add    %dl,(%eax)
    movsl  %ds:(%esi),%es:(%edi)
    aam    $0x18
    or     %eax,(%eax)
    add    %al,(%eax)
    mov    0x5af34e72,%al
    add    %al,(%eax)
    add    %al,0x7a(%eax)
    adc    %bh,-0x73(%esi)
    add    (%eax),%eax
    add    %al,-0x790d5b3a(%eax)
    and    (%eax),%eax
    add    %al,(%eax)
    shrl   $0x45,0x78(%edi)
    arpl   %ax,(%ecx)
    add    %al,(%eax)
    mov    -0x4d(%ebp),%bl
    mov    $0xe0,%dh
    or     $0xa7640000,%eax
    add    $0x23,%al
    (bad)
    mov    (%eax),%al
    add    %ch,%al
    mov    %edi,%edi
    (bad)
    (bad)
    (bad)
    (bad)
    (bad)
    (bad)
    lcall  *-0x3d(%edi)


/*----------------------------------------------------------------*/
func_826c4:
/*----------------------------------------------------------------*/
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x8,%esp
    mov    0x1c(%esp),%eax
    mov    0x1c(%esp),%ecx
    mov    %eax,(%esp)
    mov    0x20(%esp),%eax
    xor    %edx,%edx
    mov    %eax,0x4(%esp)
    test   $0x7fffffff,%eax
    jne    jump_826eb
    test   %ecx,%ecx
    je     jump_82720
  jump_826eb:
    mov    0x6(%esp),%edx
    and    $0x7ff0,%edx
    mov    0x6(%esp),%ebx
    and    $0xffff,%edx
    and    $0x800f,%ebx
    sar    $0x4,%edx
    mov    %ebx,%ecx
    mov    %bx,0x6(%esp)
    or     $0x3fe0,%ecx
    sub    $0x3fe,%edx
    mov    %cx,0x6(%esp)
  jump_82720:
    mov    0x24(%esp),%eax
    fldl   (%esp)
    mov    %edx,(%eax)
    add    $0x8,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %eax
    ret    $0xc
  jump_82733:
    xor    %eax,%eax
    ret
.data
data_90000:
    .ascii  "\x01\x01\x01\x00"
data_90004:
    .string "..\\batcon.cpp"
data_90012:
    .string "..\\batcon.cpp"
data_90020:
    .string "..\\batcon.cpp"
data_9002e:
    .string "..\\batcon.cpp"
data_9003c:
    .string "..\\batcon.cpp"
data_9004a:
    .ascii  "\x25\x73\x00"
data_9004d:
    .string "..\\batcon.cpp"
data_9005b:
    .ascii  "\x25\x73\x00"
data_9005e:
    .string "BatModeWnd"
data_90069:
    .string "..\\batcon.cpp"
data_90077:
    .string "BatListWnd"
data_90082:
    .string "..\\batcon.cpp"
data_90090:
    .string "..\\batcon.cpp"
data_9009e:
    .string "..\\batcon.cpp"
data_900ac:
    .string "..\\batcon.cpp"
data_900ba:
    .string "..\\batcon.cpp"
data_900c8:
    .string "..\\batcon.cpp"
data_900d6:
    .string "..\\batcon.cpp"
data_900e4:
    .string "..\\batcon.cpp"
data_900f2:
    .ascii  "\x25\x73\x00"
data_900f5:
    .ascii  "\x25\x73\x00"
data_900f8:
    .string "..\\batcon.cpp"
data_90106:
    .string "..\\batcon.cpp"
data_90114:
    .string "..\\batcon.cpp"
data_90122:
    .string "..\\batcon.cpp"
data_90130:
    .string "..\\batcon.cpp"
data_9013e:
    .string "My^Items"
data_90147:
    .string "..\\batcon.cpp"
    .ascii  "\x00\x00\x00"
data_90158:
    .string "..\\batfx.cpp"
data_90165:
    .string "..\\batfx.cpp"
data_90172:
    .string "..\\batfx.cpp"
data_9017f:
    .fill   0x6
    .ascii  "\xf0\x3e"
data_90187:
    .string "..\\batfx.cpp"
data_90194:
    .string "..\\batfx.cpp"
data_901a1:
    .string "..\\batfx.cpp"
data_901ae:
    .string "..\\batfx.cpp"
data_901bb:
    .ascii   "UUUUUU"
    .ascii  "\xd5\x3f"
data_901c3:
    .ascii  "\x00\x00\x80\x3c"
data_901c7:
    .ascii  "\x00\x00\xa0\x41"
data_901cb:
    .string "..\\batfx.cpp"
data_901d8:
    .string "..\\batfx.cpp"
data_901e5:
    .ascii  "\x00\x00\xa0\x44"
data_901e9:
    .string "..\\batfx.cpp"
data_901f6:
    .string "..\\batfx.cpp"
data_90203:
    .string "..\\batfx.cpp"
data_90210:
    .string "..\\batfx.cpp"
data_9021d:
    .string "..\\batfx.cpp"
data_9022a:
    .fill   0x6
    .ascii  "\x34\xc0"
data_90232:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xa9\x3f"
data_9023a:
    .fill   0x6
    .ascii  "\x34\x40"
data_90242:
    .fill   0x6
    .ascii  "\xf0\x3e"
data_9024a:
    .ascii  "\xcd\xcc\x4c\x3d\x00\x00"
data_90250:
    .string "..\\batfxa.cpp"
data_9025e:
    .string "..\\batfxa.cpp"
data_9026c:
    .ascii  "\x0a\xd7\x23\xbd"
data_90270:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xc9\x3f"
data_90278:
    .ascii  "\x0a\xd7\x23\x3d"
data_9027c:
    .ascii  "\x00\x00\x00\x40"
data_90280:
    .ascii  "\x00\x00\x00\x42"
data_90284:
    .string "..\\batfxa.cpp"
data_90292:
    .string "..\\batfxa.cpp"
data_902a0:
    .ascii  "\x00\x00\xc0\x42"
data_902a4:
    .ascii  "\x9a\x99\x99\x99\x99\x99\x09\x40"
data_902ac:
    .string "..\\batfxa.cpp"
data_902ba:
    .string "..\\batfxa.cpp"
data_902c8:
    .ascii  "\x9a\x99\x99\x99\x99\x99\x09\x40"
data_902d0:
    .string "..\\batfxa.cpp"
data_902de:
    .string "..\\batfxa.cpp"
data_902ec:
    .string "..\\batfxa.cpp"
data_902fa:
    .string "..\\batfxa.cpp"
data_90308:
    .ascii  "\xcd\xcc\x4c\x3d"
data_9030c:
    .ascii  "\x9a\x99\x99\x99\x99\x99\x09\x40"
data_90314:
    .ascii  "\x00\x00\x48\x42"
data_90318:
    .string "..\\batfxa.cpp"
data_90326:
    .string "..\\batfxa.cpp"
data_90334:
    .ascii  "\xcd\xcc\x4c\x3e"
data_90338:
    .ascii  "\x00\x00\x00\x3d"
data_9033c:
    .ascii  "\x00\x00\x00\x42"
data_90340:
    .string "..\\batfxa.cpp"
data_9034e:
    .ascii  "\x0a\xd7\x23\xbd"
data_90352:
    .ascii  "\x7b\x14\xae\x47\xe1\x7a\xa4\x3f"
data_9035a:
    .string "..\\batfxa.cpp"
data_90368:
    .string "..\\batfxa.cpp"
    .ascii  "\x00\x00"
data_90378:
    .string "..\\batmode.cpp"
data_90387:
    .string "..\\batmode.cpp"
data_90396:
    .string "..\\batmode.cpp"
data_903a5:
    .ascii  "\x00\x00\x80\x37"
data_903a9:
    .ascii  "\x00\x00\x80\x37"
data_903ad:
    .ascii  "\x00\x00\x20\x40"
data_903b1:
    .fill   0x6
    .ascii  "\xe0\x3f"
data_903b9:
    .ascii  "\x00\x00\x00\x40"
data_903bd:
    .string "batfx.txt"
data_903c7:
    .string "..\\batmode.cpp"
data_903d6:
    .ascii  "\x25\x64\x00"
data_903d9:
    .string "..\\batmode.cpp"
data_903e8:
    .ascii  "\x25\x73\x00"
data_903eb:
    .string "%d %d %d %d"
data_903f7:
    .string "BatControlWnd"
data_90405:
    .string "..\\batmode.cpp"
data_90414:
    .string "..\\batmode.cpp"
data_90423:
    .string "..\\batmode.cpp"
data_90432:
    .ascii  "\x00\x00\x20\x41"
data_90436:
    .fill   0x6
    .ascii  "\xf4\x3f"
data_9043e:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xb9\x3f"
data_90446:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xe9\x3f"
data_9044e:
    .string "..\\batmode.cpp"
data_9045d:
    .ascii  "\x0a\xd7\xa3\x3a"
data_90461:
    .ascii  "\x6f\x12\x03\x3b"
data_90465:
    .ascii  "\x0a\xd7\xa3\x3a"
data_90469:
    .string "abanship"
data_90472:
    .string "abanplan"
data_9047b:
    .string "HELPWINDOW"
data_90486:
    .string "help.txt"
data_9048f:
    .string "..\\batmode.cpp"
data_9049e:
    .ascii  "\x00\x00\x00\x3f"
data_904a2:
    .ascii  "\x00\x00\x80\x46"
data_904a6:
    .ascii  "\x00\x00\x00\x3e"
data_904aa:
    .ascii  "\x00\x00\x80\xbf"
data_904ae:
    .ascii  "\x00\x00\x00\x48"
data_904b2:
    .string "..\\batmode.cpp"
data_904c1:
    .ascii  "\x00\x00\x00\x3f"
data_904c5:
    .ascii  "\xab\xaa\xaa\x3e"
data_904c9:
    .ascii  "\x00\x00\x00\x3f"
data_904cd:
    .ascii  "\x00\x00\x00\x40"
data_904d1:
    .string "..\\batmode.cpp"
data_904e0:
    .ascii  "\x00\x00\x48\x42"
data_904e4:
    .ascii  "\x00\x00\x48\xc2"
data_904e8:
    .ascii  "\x0a\xd7\x23\x3c"
data_904ec:
    .string "..\\batmode.cpp"
data_904fb:
    .string "..\\batmode.cpp"
data_9050a:
    .string "BATDISPLAYITEMS"
data_9051a:
    .string "..\\batmode.cpp"
data_90529:
    .string "BATHAZE"
data_90531:
    .string "..\\batmode.cpp"
data_90540:
    .string "DATA\\BLACK%.2d.HAZ"
data_90553:
    .string "..\\batmode.cpp"
data_90562:
    .string "DATA\\SLANE03.HAZ"
data_90573:
    .string "..\\batmode.cpp"
data_90582:
    .string "..\\batmode.cpp"
data_90591:
    .string "..\\batmode.cpp"
data_905a0:
    .string "..\\batmode.cpp"
data_905af:
    .string "..\\batmode.cpp"
data_905be:
    .string "..\\batmode.cpp"
data_905cd:
    .string "..\\batmode.cpp"
data_905dc:
    .string "..\\batmode.cpp"
data_905eb:
    .string "..\\batmode.cpp"
data_905fa:
    .ascii  "\x00\x00\x00\x42"
data_905fe:
    .string "..\\batmode.cpp"
data_9060d:
    .string "%s %s"
data_90613:
    .string "%s %s"
data_90619:
    .string "POWER %d MOVES %d INTEGRITY %d"
data_90638:
    .string "INVALID ORDER"
data_90646:
    .ascii  "\x00\x00\x00\x3f"
data_9064a:
    .ascii  "\x00\x00\x00\x3d"
data_9064e:
    .ascii  "\xcd\xcc\xcc\x3b"
data_90652:
    .ascii  "\x00\x00\x70\x44"
data_90656:
    .ascii  "\x00\x00\x00\x3e"
data_9065a:
    .ascii  "\x00\x00\x00\xc2"
data_9065e:
    .string "..\\batmode.cpp"
data_9066d:
    .ascii  "\x00\x00\xdc\xc3\x00\x00\x00"
data_90674:
    .string "SHAPE CACHE"
data_90680:
    .string "..\\cache.cpp"
data_9068d:
    .string "..\\cache.cpp"
data_9069a:
    .string "..\\cache.cpp"
data_906a7:
    .string "Cache filename too long: %s"
data_906c3:
    .string "..\\cache.cpp"
data_906d0:
    .string "..\\cache.cpp"
data_906dd:
    .string "..\\cache.cpp"
data_906ea:
    .string "..\\cache.cpp"
data_906f7:
    .string "Cache filename too long: %s"
data_90713:
    .string "..\\cache.cpp"
data_90720:
    .string "..\\cache.cpp"
data_9072d:
    .string "..\\cache.cpp"
data_9073a:
    .string "..\\cache.cpp"
data_90747:
    .string "..\\cache.cpp"
data_90754:
    .string "..\\cache.cpp"
data_90761:
    .string "..\\cache.cpp"
data_9076e:
    .string "..\\cache.cpp"
data_9077b:
    .string "Single item too big for cache: %s, %d"
data_907a1:
    .string "..\\cache.cpp"
data_907ae:
    .string "Cache unable to load file: %s"
data_907cc:
    .string "..\\cache.cpp"
data_907d9:
    .string "..\\cache.cpp"
data_907e6:
    .string "..\\cache.cpp"
    .ascii  "\x00"
data_907f4:
    .ascii  "\x00\x00\x00\x3f"
data_907f8:
    .ascii  "\x72\x00"
data_907fa:
    .string "CFILE PRELOAD"
data_90808:
    .string "..\\cfile.cpp"
data_90815:
    .string "CFILE LOAD"
data_90820:
    .string "..\\cfile.cpp"
data_9082d:
    .string "chunksize==byteswritten"
data_90845:
    .string "..\\cfile.cpp"
data_90852:
    .string "..\\cfile.cpp"
data_9085f:
    .string "..\\cfile.cpp"
data_9086c:
    .string "..\\cfile.cpp"
data_90879:
    .string "..\\cfile.cpp"
data_90886:
    .ascii  "\x72\x00"
data_90888:
    .string "cob.cfg"
data_90890:
    .ascii  "\x25\x73\x00\x00"
data_90894:
    .string "\nAscendancy\nCopyright (c) 1995 The Logic Factory, Inc.\nAll rights reserved\n"
data_908e0:
    .string "data\\theme00.raw"
data_908f1:
    .ascii  "\x2e\x5c\x00"
data_908f4:
    .string "VESA480.DLL"
data_90900:
    .string "DATA"
data_90905:
    .string "..\\corn.cpp"
data_90911:
    .string "data\\logo.pal"
data_9091f:
    .string "data\\logo.gif"
data_9092d:
    .string "music.txt"
data_90937:
    .string "..\\corn.cpp"
data_90943:
    .ascii  "\x72\x00"
data_90945:
    .string "nougat.lf"
data_9094f:
    .ascii  "\x72\x00"
data_90951:
    .string "flash.pop"
data_9095b:
    .string "..\\corn.cpp"
data_90967:
    .string "..\\corn.cpp"
data_90973:
    .string "..\\corn.cpp"
data_9097f:
    .string "..\\corn.cpp"
data_9098b:
    .ascii  "\x72\x00"
data_9098d:
    .string "cosmos.txt"
data_90998:
    .string "%s %d %s %d %s %d"
data_909aa:
    .ascii  "\x25\x64\x00"
data_909ad:
    .string "resume.gam"
data_909b8:
    .string "..\\corn.cpp"
data_909c4:
    .string "DATA\\game.pal"
data_909d2:
    .string "..\\corn.cpp"
data_909de:
    .string "..\\corn.cpp"
data_909ea:
    .string "resume.gam"
data_909f5:
    .string "GIF SCRATCH"
data_90a01:
    .string "DATA\\0OPENING.GIF"
data_90a13:
    .string "..\\corn.cpp"
data_90a1f:
    .string "static.txt"
data_90a2a:
    .string "..\\corn.cpp"
data_90a36:
    .string "..\\corn.cpp"
data_90a42:
    .string "end\n"
data_90a47:
    .string "..\\corn.cpp"
data_90a53:
    .string "..\\corn.cpp"
data_90a5f:
    .string "1.6.10"
    .ascii  "\x00\x00"
data_90a68:
    .string "..\\cosmos.cpp"
data_90a76:
    .string "..\\cosmos.cpp"
data_90a84:
    .ascii  "\x09\xf2\x94\x3a"
data_90a88:
    .ascii  "\x00\x00\x7a\x44"
data_90a8c:
    .ascii  "\x00\x00\xfa\x44"
data_90a90:
    .string "..\\cosmos.cpp"
data_90a9e:
    .string "..\\cosmos.cpp"
data_90aac:
    .string "..\\cosmos.cpp"
data_90aba:
    .string "..\\cosmos.cpp"
data_90ac8:
    .string "..\\cosmos.cpp"
data_90ad6:
    .string "..\\cosmos.cpp"
data_90ae4:
    .string "..\\cosmos.cpp"
data_90af2:
    .ascii  "\x00\x00\x48\xc3"
data_90af6:
    .string "..\\cosmos.cpp"
data_90b04:
    .string "..\\cosmos.cpp"
data_90b12:
    .string "..\\cosmos.cpp"
data_90b20:
    .string "..\\cosmos.cpp"
data_90b2e:
    .string "..\\cosmos.cpp"
data_90b3c:
    .string "..\\cosmos.cpp"
data_90b4a:
    .string "..\\cosmos.cpp"
data_90b58:
    .string "..\\cosmos.cpp"
data_90b66:
    .string "..\\cosmos.cpp"
data_90b74:
    .string "..\\cosmos.cpp"
data_90b82:
    .string "..\\cosmos.cpp"
data_90b90:
    .ascii  "\x00\x00\x80\x40"
data_90b94:
    .ascii  "\x0a\xd7\x23\x3c"
data_90b98:
    .string "..\\cosmos.cpp"
data_90ba6:
    .string "..\\cosmos.cpp"
data_90bb4:
    .string "names.txt"
data_90bbe:
    .string "XM%02d"
data_90bc5:
    .ascii  "\x25\x73\x00"
data_90bc8:
    .ascii  "\x00\x00\x96\xc2"
data_90bcc:
    .ascii  "\x00\x00\x48\x42"
data_90bd0:
    .string "DATA\\SMRACE%02d.SHP"
data_90be4:
    .string "DATA\\LGRACE%02d.SHP"
data_90bf8:
    .string "DATA\\SMSHIP%02d.SHP"
data_90c0c:
    .string "DATA\\DKSHIP%02d.SHP"
data_90c20:
    .string "..\\cosmos.cpp"
data_90c2e:
    .string "..\\cosmos.cpp"
data_90c3c:
    .string "..\\cosmos.cpp"
data_90c4a:
    .string "..\\cosmos.cpp"
data_90c58:
    .string "..\\cosmos.cpp"
data_90c66:
    .string "..\\cosmos.cpp"
data_90c74:
    .ascii  "\x25\x73\x20\x00"
data_90c78:
    .string "..\\cosmos.cpp"
data_90c86:
    .ascii  "\x00\x00\xfa\x44"
data_90c8a:
    .ascii  "\x61\x0b\x36\x3c"
data_90c8e:
    .string "..\\cosmos.cpp"
data_90c9c:
    .string "..\\cosmos.cpp"
data_90caa:
    .string "..\\cosmos.cpp"
data_90cb8:
    .string "..\\cosmos.cpp"
data_90cc6:
    .string "..\\cosmos.cpp"
data_90cd4:
    .string "..\\cosmos.cpp"
data_90ce2:
    .string "..\\cosmos.cpp"
data_90cf0:
    .string "..\\cosmos.cpp"
data_90cfe:
    .string "..\\cosmos.cpp"
data_90d0c:
    .string "..\\cosmos.cpp"
data_90d1a:
    .string "..\\cosmos.cpp"
data_90d28:
    .string "..\\cosmos.cpp"
data_90d36:
    .string "..\\cosmos.cpp"
data_90d44:
    .string "..\\cosmos.cpp"
data_90d52:
    .string "..\\cosmos.cpp"
data_90d60:
    .string "..\\cosmos.cpp"
data_90d6e:
    .fill   0x6
    .ascii  "\xf8\x3f"
data_90d76:
    .fill   0x6
    .ascii  "\xf4\x3f"
data_90d7e:
    .string "RACECONTROLS"
data_90d8b:
    .string "..\\cosmos.cpp"
data_90d99:
    .ascii  "\x61\x74\x00"
data_90d9c:
    .string "numships.dbg"
data_90da9:
    .string "T%04d: %s flags (%d) show R%d ship, but none found.\n"
data_90dde:
    .string "T%04d: R%d ship exists at %s, flags (%d) indicate otherwise.\n"
data_90e1c:
    .string "..\\cosmos.cpp"
data_90e2a:
    .string "..\\cosmos.cpp"
data_90e38:
    .string "..\\cosmos.cpp"
data_90e46:
    .string "..\\cosmos.cpp"
data_90e54:
    .string "..\\cosmos.cpp"
data_90e62:
    .string "..\\cosmos.cpp"
data_90e70:
    .string "..\\cosmos.cpp"
data_90e7e:
    .string "..\\cosmos.cpp"
data_90e8c:
    .string "..\\cosmos.cpp"
data_90e9a:
    .string "..\\cosmos.cpp"
data_90ea8:
    .string "..\\cosmos.cpp"
    .ascii  "\x00\x00"
data_90eb8:
    .string "NEXTTURNCONT"
data_90ec5:
    .string "..\\coswnd.cpp"
data_90ed3:
    .string "..\\coswnd.cpp"
data_90ee1:
    .string "..\\coswnd.cpp"
data_90eef:
    .string "..\\coswnd.cpp"
data_90efd:
    .string "..\\coswnd.cpp"
data_90f0b:
    .string "..\\coswnd.cpp"
data_90f19:
    .string "..\\coswnd.cpp"
data_90f27:
    .string "CW DISPLAYITEMS"
data_90f37:
    .string "..\\coswnd.cpp"
data_90f45:
    .string "SHIPDESIGN"
data_90f50:
    .string "TURNCOUNT"
data_90f5a:
    .string "..\\coswnd.cpp"
data_90f68:
    .string "RACES"
data_90f6e:
    .string "..\\coswnd.cpp"
data_90f7c:
    .string "..\\coswnd.cpp"
data_90f8a:
    .string "SHIPDESSCREEN"
data_90f98:
    .string "HELPWINDOW"
data_90fa3:
    .string "shipdesx"
data_90fac:
    .string "help.txt"
data_90fb5:
    .ascii  "\x00\x00\x20\x41"
data_90fb9:
    .fill   0x6
    .ascii  "\xf4\x3f"
data_90fc1:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xb9\x3f"
data_90fc9:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xe9\x3f"
data_90fd1:
    .fill   0x5
    .ascii  "\x40\x65\x40"
data_90fd9:
    .string "NEWGAMEWND"
data_90fe4:
    .string "..\\coswnd.cpp"
data_90ff2:
    .string "STARS CONTROLLED %d"
data_91006:
    .string "PERCENT CONTROLLED %d"
data_9101c:
    .string "%d Biorythym (%s)\n"
data_9102f:
    .string "R%d %10s %d\n"
data_9103c:
    .ascii  "\x00\x00\xa0\x41"
data_91040:
    .ascii  "\x00\x00\x70\x42"
data_91044:
    .string "..\\coswnd.cpp"
data_91052:
    .string "..\\coswnd.cpp"
data_91060:
    .ascii  "\x00\x00\x00\x3f"
data_91064:
    .string "NEGSCREEN"
data_9106e:
    .string "..\\coswnd.cpp"
data_9107c:
    .string "..\\coswnd.cpp"
data_9108a:
    .string "..\\coswnd.cpp"
data_91098:
    .string "cos%05d.bug"
data_910a4:
    .string "..\\coswnd.cpp"
data_910b2:
    .string "..\\coswnd.cpp"
data_910c0:
    .string "..\\coswnd.cpp"
data_910ce:
    .string "..\\coswnd.cpp"
data_910dc:
    .string "..\\coswnd.cpp"
data_910ea:
    .ascii  "\x00\x80\xbb\xc4\x00\x00"
data_910f0:
    .string "\n%s\n\n"
data_910f6:
    .string "Assert Failed: <%s> Line %d\n\n"
data_91114:
    .string "Assert Failed: <%s> Line %d\n\n"
data_91132:
    .string "Assert Failed: <%s> Line %d\n\n%s\n"
data_91153:
    .string "EXIT: <%s> Line %d\n\n"
data_91168:
    .string "..\\eventwnd.cpp"
data_91178:
    .string "event%02d"
data_91182:
    .string "help.txt"
data_9118b:
    .string "..\\eventwnd.cpp"
data_9119b:
    .string "..\\eventwnd.cpp"
data_911ab:
    .string "..\\eventwnd.cpp"
data_911bb:
    .string "..\\eventwnd.cpp"
data_911cb:
    .string "..\\eventwnd.cpp"
data_911db:
    .string "..\\eventwnd.cpp"
data_911eb:
    .string "..\\eventwnd.cpp"
data_911fb:
    .string "data\\planets.shp"
data_9120c:
    .string "..\\eventwnd.cpp"
data_9121c:
    .string "history.txt"
data_91228:
    .string "..\\eventwnd.cpp"
data_91238:
    .ascii  "\x25\x73\x00"
data_9123b:
    .string "SPECNUM"
data_91243:
    .string "%s %d"
data_91249:
    .ascii  "\x45\x4e\x44\x00"
data_9124d:
    .string "Species %d not found in history file.\n"
data_91274:
    .string "..\\eventwnd.cpp"
data_91284:
    .ascii  "\x25\x73\x00"
data_91287:
    .string "SPECNUM"
data_9128f:
    .ascii  "\x45\x4e\x44\x00"
data_91293:
    .string "POWER"
data_91299:
    .string "%s: "
data_9129e:
    .string "ENDPOWER"
data_912a7:
    .string "..\\eventwnd.cpp"
data_912b7:
    .string "INTRO"
data_912bd:
    .string "ENDINTRO"
data_912c6:
    .string "..\\eventwnd.cpp"
data_912d6:
    .string "PEACE"
data_912dc:
    .string "ENDPEACE"
data_912e5:
    .string "..\\eventwnd.cpp"
data_912f5:
    .string "NEUTRAL"
data_912fd:
    .string "ENDNEUTRAL"
data_91308:
    .string "..\\eventwnd.cpp"
data_91318:
    .string "HOSTILE"
data_91320:
    .string "ENDHOSTILE"
data_9132b:
    .string "..\\eventwnd.cpp"
data_9133b:
    .string "TEXT"
data_91340:
    .string "ENDTEXT"
data_91348:
    .string "..\\eventwnd.cpp"
data_91358:
    .string "..\\eventwnd.cpp"
data_91368:
    .string "..\\eventwnd.cpp"
data_91378:
    .string "..\\eventwnd.cpp"
data_91388:
    .string "..\\eventwnd.cpp"
data_91398:
    .string "end-xtnc.txt"
data_913a5:
    .string "end-dest.txt"
data_913b2:
    .string "end-capt.txt"
data_913bf:
    .string "end-unit.txt"
data_913cc:
    .string "end-ctrl.txt"
data_913d9:
    .string "Couldn't open %s"
data_913ea:
    .string "..\\eventwnd.cpp"
data_913fa:
    .ascii  "\x25\x73\x00"
data_913fd:
    .ascii  "\x45\x4e\x44\x00"
data_91401:
    .string "ENDDESC"
data_91409:
    .string "ENDTEXT"
data_91411:
    .string "..\\eventwnd.cpp"
data_91421:
    .string "CONGRAT"
data_91429:
    .string "ENDTEXT"
data_91431:
    .string "..\\eventwnd.cpp"
data_91441:
    .string "RANKS"
data_91447:
    .string "..\\eventwnd.cpp"
data_91457:
    .string "..\\eventwnd.cpp"
data_91467:
    .string "..\\eventwnd.cpp"
data_91477:
    .string "..\\eventwnd.cpp"
data_91487:
    .ascii  "\x25\x73\x00\x00\x00"
data_9148c:
    .string "SUBTITLE.TXT"
data_91499:
    .string "..\\flic.cpp"
data_914a5:
    .string "..\\flic.cpp"
data_914b1:
    .string "..\\flic.cpp"
data_914bd:
    .string "..\\flic.cpp"
data_914c9:
    .string "FLIC BUFFER"
data_914d5:
    .string "..\\flic.cpp"
data_914e1:
    .string "..\\flic.cpp"
data_914ed:
    .string "..\\flic.cpp"
data_914f9:
    .string "..\\flic.cpp"
data_91505:
    .string "..\\flic.cpp"
data_91511:
    .string "..\\flic.cpp"
data_9151d:
    .string "..\\flic.cpp"
data_91529:
    .string "..\\flic.cpp"
data_91535:
    .string "..\\flic.cpp"
data_91541:
    .string "..\\flic.cpp"
data_9154d:
    .string "..\\flic.cpp"
data_91559:
    .string "Bombing on Frame #%d.\n"
data_91570:
    .string "..\\flic.cpp"
data_9157c:
    .string "%s %d"
data_91582:
    .string "%s %d"
data_91588:
    .string "%s %d"
data_9158e:
    .string "%s %d"
data_91594:
    .string "%s %d"
data_9159a:
    .string "%s %s"
data_915a0:
    .string "..\\flic.cpp"
data_915ac:
    .string "%s %s"
data_915b2:
    .string "..\\flic.cpp"
data_915be:
    .string "..\\flic.cpp"
data_915ca:
    .string "%s %d"
data_915d0:
    .string "%s %d"
data_915d6:
    .string "%s %d"
data_915dc:
    .string "..\\flic.cpp"
data_915e8:
    .string "%s %s"
data_915ee:
    .string "..\\flic.cpp"
data_915fa:
    .string "SUBTITLE"
data_91603:
    .string "..\\flic.cpp"
data_9160f:
    .string "%s %d"
data_91615:
    .string "..\\flic.cpp"
data_91621:
    .string "%s %d"
data_91627:
    .string "..\\flic.cpp"
data_91633:
    .string "%s %d"
data_91639:
    .string "%s %d"
data_9163f:
    .string "..\\flic.cpp"
data_9164b:
    .string "%s %d"
data_91651:
    .string "%s %d"
data_91657:
    .string "%s %d"
data_9165d:
    .string "..\\flic.cpp"
data_91669:
    .string "%s %d"
data_9166f:
    .string "%s %d"
data_91675:
    .string "%s %d"
data_9167b:
    .string "\n  ** Bad Subtitle Data: %s, %d (line %d)\n\n"
data_916a7:
    .string "..\\flic.cpp"
data_916b3:
    .string "..\\flic.cpp"
    .ascii  "\x00"
data_916c0:
    .string "..\\flicwin.cpp"
data_916cf:
    .string "..\\flicwin.cpp"
data_916de:
    .string "DATA\\game.pal"
data_916ec:
    .string "FONT TRANSLATE"
data_916fb:
    .string "..\\font.cpp"
data_91707:
    .string "..\\font.cpp"
data_91713:
    .string "..\\font.cpp"
data_9171f:
    .string "..\\font.cpp"
data_9172b:
    .string "..\\font.cpp"
data_91737:
    .string "..\\font.cpp"
    .ascii  "\x00"
data_91744:
    .string "..\\gsystem.cpp"
data_91753:
    .string "..\\gsystem.cpp"
data_91762:
    .ascii  "\x5c\x00"
data_91764:
    .string "\\VFXSCAN.DLL"
data_91771:
    .string "..\\gsystem.cpp"
data_91780:
    .string "OFFSCREEN BUFFER"
data_91791:
    .string "..\\gsystem.cpp"
data_917a0:
    .string "..\\gsystem.cpp"
data_917af:
    .string "GSYSTEM HAZE TABLES"
data_917c3:
    .string "..\\gsystem.cpp"
data_917d2:
    .string "..\\gsystem.cpp"
data_917e1:
    .string "..\\gsystem.cpp"
data_917f0:
    .string "DATA\\MOUSE.SHP"
data_917ff:
    .string "..\\gsystem.cpp"
data_9180e:
    .string "..\\gsystem.cpp"
data_9181d:
    .string "..\\gsystem.cpp"
data_9182c:
    .string "CHILD WINDOWS"
data_9183a:
    .string "..\\gwindow.cpp"
data_91849:
    .string "..\\gwindow.cpp"
data_91858:
    .string "..\\gwindow.cpp"
data_91867:
    .string "gwshare.txt"
data_91873:
    .string "..\\gwindow.cpp"
data_91882:
    .ascii  "\x25\x73\x00"
data_91885:
    .string "..\\gwindow.cpp"
data_91894:
    .string "..\\gwindow.cpp"
data_918a3:
    .string "..\\gwindow.cpp"
data_918b2:
    .string "..\\gwindow.cpp"
data_918c1:
    .string "CONTROLS"
data_918ca:
    .string "..\\gwindow.cpp"
data_918d9:
    .string "..\\gwindow.cpp"
data_918e8:
    .string "..\\gwindow.cpp"
data_918f7:
    .string "..\\gwindow.cpp"
data_91906:
    .ascii  "\x41\x00"
data_91908:
    .string "..\\gwindow.cpp"
data_91917:
    .string "LISTBOX STRING"
data_91926:
    .string "..\\gwindow.cpp"
data_91935:
    .string "..\\gwindow.cpp"
data_91944:
    .string "..\\gwindow.cpp"
data_91953:
    .string "..\\gwindow.cpp"
data_91962:
    .string "..\\gwindow.cpp"
data_91971:
    .string "..\\gwindow.cpp"
data_91980:
    .string "LISTBOX MEMPOOL"
data_91990:
    .string "%05d"
data_91995:
    .string "..\\gwindow.cpp"
data_919a4:
    .string "..\\gwindow.cpp"
data_919b3:
    .string "..\\gwindow.cpp"
data_919c2:
    .string "..\\gwindow.cpp"
data_919d1:
    .string "..\\gwindow.cpp"
data_919e0:
    .string "..\\gwindow.cpp"
    .ascii  "\x00"
data_919f0:
    .string "..\\helpwin.cpp"
data_919ff:
    .ascii  "\x25\x73\x00"
data_91a02:
    .string "HELP"
data_91a07:
    .string "%s %s"
data_91a0d:
    .ascii  "\x45\x4e\x44\x00"
data_91a11:
    .string "Topic '%s' not found in help file.\n"
data_91a35:
    .string "..\\helpwin.cpp"
data_91a44:
    .ascii  "\x25\x73\x00"
data_91a47:
    .string "HELP"
data_91a4c:
    .ascii  "\x50\x4f\x53\x00"
data_91a50:
    .string "%s %d %d"
data_91a59:
    .string "SHAPE"
data_91a5f:
    .string "..\\helpwin.cpp"
data_91a6e:
    .string "%s %d %d %d %d"
data_91a7d:
    .string "BUTTON"
data_91a84:
    .string "..\\helpwin.cpp"
data_91a93:
    .string "TITLE"
data_91a99:
    .string "%s %s"
data_91a9f:
    .ascii  "\x4d\x53\x47\x00"
data_91aa3:
    .string "%s %d"
data_91aa9:
    .string "PANE"
data_91aae:
    .string "%s %d %d %d %d"
data_91abd:
    .string "BPOS"
data_91ac2:
    .string "%s %s"
data_91ac8:
    .ascii  "\x42\x4c\x00"
data_91acb:
    .ascii  "\x42\x52\x00"
data_91ace:
    .string "TEXT"
data_91ad3:
    .string "..\\helpwin.cpp"
data_91ae2:
    .string "..\\helpwin.cpp"
data_91af1:
    .string "%s %d %d %d"
data_91afd:
    .string "ENDTEXT"
data_91b05:
    .string "..\\helpwin.cpp"
data_91b14:
    .string "..\\helpwin.cpp"
data_91b23:
    .string "..\\helpwin.cpp"
data_91b32:
    .string "CENTERPOS"
data_91b3c:
    .string "FONT"
data_91b41:
    .string "%s %s"
data_91b47:
    .string "LARGE"
data_91b4d:
    .string "SMALL"
data_91b53:
    .string "FLAGS"
data_91b59:
    .string "%s %s %s %s %s %s"
data_91b6b:
    .string "TJ_HC"
data_91b71:
    .string "TJ_VC"
data_91b77:
    .string "TJ_R"
data_91b7c:
    .string "TJ_B"
data_91b81:
    .string "NEWPAGE"
data_91b89:
    .string "..\\helpwin.cpp"
data_91b98:
    .ascii  "\x25\x64\x2e\x00"
data_91b9c:
    .string "%d/%d/%d"
data_91ba5:
    .string "%d : %.2d %s"
data_91bb2:
    .ascii  "\x25\x64\x2e\x00"
data_91bb6:
    .string "savescr"
data_91bbe:
    .string "loadscr"
data_91bc6:
    .string "tutscr"
data_91bcd:
    .string "LOADLIST"
data_91bd6:
    .string "%02d.sav"
data_91bdf:
    .string ".tsv"
data_91be4:
    .string ".bin"
data_91be9:
    .string "%02d.sav"
data_91bf2:
    .string "tutindex.txt"
data_91bff:
    .ascii  "\x25\x64\x00"
data_91c02:
    .string "..\\loadwin.cpp"
data_91c11:
    .ascii  "\x25\x73\x00"
data_91c14:
    .string "GIF87a"
data_91c1b:
    .string "scr%03d.gif"
    .ascii  "\x00"
data_91c28:
    .string "..\\name.cpp"
data_91c34:
    .ascii  "\x4d\x00\x00\x00"
data_91c38:
    .string "PLAYERDIP"
data_91c42:
    .string "..\\negwnd.cpp"
data_91c50:
    .string "ALIENDIP"
data_91c59:
    .string "..\\negwnd.cpp"
data_91c67:
    .string "COSMOSWnd"
data_91c71:
    .string "..\\negwnd.cpp"
data_91c7f:
    .string "INTELSCREEN"
data_91c8b:
    .string "..\\negwnd.cpp"
data_91c99:
    .string "..\\negwnd.cpp"
data_91ca7:
    .string "..\\negwnd.cpp"
data_91cb5:
    .string "RACE%02d.DIP"
data_91cc2:
    .string "PLAYER.DIP"
data_91ccd:
    .string "..\\negwnd.cpp"
data_91cdb:
    .string "..\\negwnd.cpp"
data_91ce9:
    .string "ACTIONS"
data_91cf1:
    .string "RESPONSES"
data_91cfb:
    .string "END DIPLO"
data_91d05:
    .string "INTELSCREEN"
data_91d11:
    .string "INTELLIST"
data_91d1b:
    .string "abil%02d"
data_91d24:
    .string "help.txt"
data_91d2d:
    .string "abres%02d"
data_91d37:
    .string "help.txt"
data_91d40:
    .string "..\\planet.cpp"
data_91d4e:
    .string "..\\planet.cpp"
data_91d5c:
    .string "planitem.txt"
data_91d69:
    .ascii  "\x25\x64\x00"
data_91d6c:
    .ascii  "\x25\x64\x00"
data_91d6f:
    .ascii  "\x25\x64\x00"
data_91d72:
    .ascii  "\x25\x64\x00"
data_91d75:
    .string "%d %d %d"
data_91d7e:
    .string "..\\planet.cpp"
data_91d8c:
    .string "..\\planet.cpp"
data_91d9a:
    .string "%s %d %d %d %d %d %d %d"
data_91db2:
    .ascii  "\x25\x64\x00"
data_91db5:
    .ascii  "\xcd\xcc\xcc\xcc\xcc\xcc\xf4\x3f"
data_91dbd:
    .string "..\\planet.cpp"
data_91dcb:
    .string "..\\planet.cpp"
data_91dd9:
    .fill   0x4
    .ascii  "\x80\x84\x4e\x41"
data_91de1:
    .string "..\\planet.cpp"
data_91def:
    .string "..\\planet.cpp"
data_91dfd:
    .string "..\\planet.cpp"
data_91e0b:
    .string "..\\planet.cpp"
data_91e19:
    .string "..\\planet.cpp"
data_91e27:
    .string "..\\planet.cpp"
data_91e35:
    .string "..\\planet.cpp"
data_91e43:
    .ascii   "ffffff"
    .ascii  "\xee\x3f"
data_91e4b:
    .string "..\\planet.cpp"
data_91e59:
    .string "..\\planet.cpp"
data_91e67:
    .string "..\\planet.cpp"
data_91e75:
    .string "..\\planet.cpp"
data_91e83:
    .string "..\\planet.cpp"
data_91e91:
    .ascii  "\x00\x00\x48\xc5"
data_91e95:
    .ascii  "\x00\x00\xa0\x44"
data_91e99:
    .string "..\\planet.cpp"
data_91ea7:
    .string "..\\planet.cpp"
data_91eb5:
    .string "..\\planet.cpp"
data_91ec3:
    .string "..\\planet.cpp"
data_91ed1:
    .string "..\\planet.cpp"
data_91edf:
    .string "..\\planet.cpp"
data_91eed:
    .string "..\\planet.cpp"
data_91efb:
    .string "..\\planet.cpp"
data_91f09:
    .string "..\\planet.cpp"
data_91f17:
    .string "..\\planet.cpp"
    .ascii  "\x00\x00\x00"
data_91f28:
    .string "data\\planal%02d.shp"
data_91f3c:
    .string "PLANETALLOC"
data_91f48:
    .string "PLANLIST"
data_91f51:
    .string "PLSQUARE"
data_91f5a:
    .string "..\\planwin.cpp"
data_91f69:
    .string "..\\planwin.cpp"
data_91f78:
    .string "HELPWINDOW"
data_91f83:
    .string "colonize"
data_91f8c:
    .string "maxcolonize"
data_91f98:
    .string "help.txt"
data_91fa1:
    .string "..\\planwin.cpp"
data_91fb0:
    .string "SHIPDESSCREEN"
data_91fbe:
    .string "PLANLIST"
data_91fc7:
    .string "..\\planwin.cpp"
data_91fd6:
    .string "..\\planwin.cpp"
    .string "..\\planwin.cpp"
data_91ff4:
    .string "..\\planwin.cpp"
data_92003:
    .string "SHIPDESSCREEN"
data_92011:
    .string "PLANLIST"
data_9201a:
    .string "PLSQUARE"
data_92023:
    .string "PLANLIST"
data_9202c:
    .string "PLSQUARE"
data_92035:
    .string "PLANETALLOC"
data_92041:
    .string "PLRES"
data_92047:
    .string "PLIND"
data_9204d:
    .string "PLPRO"
data_92053:
    .string "PLPOP"
data_92059:
    .string "PLBUILD"
    .ascii  "\x00\x00\x00"
data_92064:
    .string "..\\psqwin.cpp"
data_92072:
    .string "HELPWINDOW"
data_9207d:
    .string "invadefailure"
data_9208b:
    .string "invadesuccess"
data_92099:
    .string "help.txt"
data_920a2:
    .string "%s \"%s\""
data_920aa:
    .ascii  "\x00"
data_920ab:
    .string "%s%s%s"
    .ascii  "\x00\x00"
data_920b4:
    .string "..\\race.cpp"
data_920c0:
    .string "..\\race.cpp"
data_920cc:
    .string "..\\race.cpp"
data_920d8:
    .string "..\\race.cpp"
data_920e4:
    .string "..\\race.cpp"
data_920f0:
    .ascii  "\xcd\xcc\x4c\x3d"
data_920f4:
    .ascii   "UUUUUU"
    .ascii  "\xe5\x3f"
data_920fc:
    .string "..\\race.cpp"
data_92108:
    .string "..\\race.cpp"
data_92114:
    .string "..\\race.cpp"
data_92120:
    .string "..\\race.cpp"
data_9212c:
    .string "..\\race.cpp"
data_92138:
    .string "..\\race.cpp"
data_92144:
    .string "..\\race.cpp"
data_92150:
    .ascii  "\xf4\xd6\x43\x54\xfb\x21\x19\x40"
data_92158:
    .ascii  "\x00\x00\x00\x3f"
data_9215c:
    .ascii  "\x00\x00\x00\x40"
data_92160:
    .ascii  "\x00\x00\x00\xbf"
data_92164:
    .ascii  "\x00\x00\x00\xc0"
data_92168:
    .ascii  "\x00\x00\x80\xc0"
data_9216c:
    .ascii  "\x00\x00\xc0\xc0"
data_92170:
    .string "..\\race.cpp"
data_9217c:
    .string "..\\race.cpp"
data_92188:
    .string "..\\race.cpp"
data_92194:
    .string "..\\race.cpp"
data_921a0:
    .string "..\\race.cpp"
data_921ac:
    .string "..\\race.cpp"
data_921b8:
    .string "..\\race.cpp"
data_921c4:
    .string "..\\race.cpp"
data_921d0:
    .string "..\\race.cpp"
data_921dc:
    .string "..\\race.cpp"
data_921e8:
    .string "..\\race.cpp"
data_921f4:
    .string "..\\race.cpp"
data_92200:
    .string "..\\race.cpp"
data_9220c:
    .string "..\\race.cpp"
data_92218:
    .string "..\\race.cpp"
data_92224:
    .string "..\\race.cpp"
data_92230:
    .string "..\\race.cpp"
data_9223c:
    .string "..\\race.cpp"
data_92248:
    .string "..\\race.cpp"
data_92254:
    .string "..\\race.cpp"
data_92260:
    .string "..\\race.cpp"
data_9226c:
    .string "..\\race.cpp"
data_92278:
    .string "..\\race.cpp"
data_92284:
    .string "..\\race.cpp"
data_92290:
    .string "..\\race.cpp"
data_9229c:
    .string "..\\race.cpp"
data_922a8:
    .string "..\\race.cpp"
data_922b4:
    .string "..\\race.cpp"
data_922c0:
    .string "..\\race.cpp"
data_922cc:
    .string "..\\race.cpp"
data_922d8:
    .string "..\\race.cpp"
data_922e4:
    .string "..\\race.cpp"
data_922f0:
    .string "..\\race.cpp"
data_922fc:
    .string "..\\race.cpp"
data_92308:
    .string "..\\race.cpp"
data_92314:
    .string "..\\race.cpp"
data_92320:
    .string "..\\race.cpp"
data_9232c:
    .ascii   "333333"
    .ascii  "\xf3\x3f"
data_92334:
    .ascii  "\x00\x00\xb4\x44"
data_92338:
    .ascii  "\x00\x40\x1c\x46"
data_9233c:
    .ascii  "\x00\x00\x16\x44"
data_92340:
    .string "..\\race.cpp"
data_9234c:
    .string "..\\race.cpp"
data_92358:
    .string "RACE%02d.DIP"
data_92365:
    .string "..\\raceneg.cpp"
data_92374:
    .string "DIPVALUES"
data_9237e:
    .string "%s %d"
data_92384:
    .string "%s %d"
data_9238a:
    .string "..\\raceneg.cpp"
data_92399:
    .string "%s %d"
data_9239f:
    .string "..\\raceneg.cpp"
data_923ae:
    .string "%s %d"
data_923b4:
    .string "..\\raceneg.cpp"
data_923c3:
    .string "%s %d"
data_923c9:
    .string "..\\raceneg.cpp"
data_923d8:
    .string "%s %d"
data_923de:
    .string "..\\raceneg.cpp"
data_923ed:
    .string "%s %d"
data_923f3:
    .string "%s %d"
data_923f9:
    .string "%s %d"
data_923ff:
    .string "%s %d"
data_92405:
    .string "%s %d"
data_9240b:
    .string "%s %d"
data_92411:
    .string "%s %d"
data_92417:
    .string "%s %d"
data_9241d:
    .string "%s %d"
data_92423:
    .string "..\\raceneg.cpp"
data_92432:
    .string "..\\raceneg.cpp"
data_92441:
    .string "..\\raceneg.cpp"
data_92450:
    .string "..\\raceneg.cpp"
data_9245f:
    .string "..\\raceneg.cpp"
data_9246e:
    .string "..\\raceneg.cpp"
data_9247d:
    .string "..\\raceneg.cpp"
data_9248c:
    .string "..\\raceneg.cpp"
data_9249b:
    .string "..\\raceneg.cpp"
data_924aa:
    .string "..\\raceneg.cpp"
data_924b9:
    .string "..\\raceneg.cpp"
data_924c8:
    .string "..\\raceneg.cpp"
data_924d7:
    .string "..\\raceneg.cpp"
data_924e6:
    .string "..\\raceneg.cpp"
data_924f5:
    .string "..\\raceneg.cpp"
data_92504:
    .string "..\\raceneg.cpp"
data_92513:
    .string "..\\raceneg.cpp"
data_92522:
    .string "..\\raceneg.cpp"
data_92531:
    .string "..\\raceneg.cpp"
data_92540:
    .string "..\\raceneg.cpp"
data_9254f:
    .string "..\\raceneg.cpp"
data_9255e:
    .string "..\\raceneg.cpp"
data_9256d:
    .string "..\\raceneg.cpp"
data_9257c:
    .string "..\\raceneg.cpp"
data_9258b:
    .string "..\\raceneg.cpp"
data_9259a:
    .ascii  "\xcd\xcc\xcc\xcc\xcc\xcc\xec\x3f"
data_925a2:
    .fill   0x7
    .ascii  "\x40"
data_925aa:
    .ascii  "\xcd\xcc\xcc\xcc\xcc\xcc\xec\x3f"
data_925b2:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xf9\x3f"
data_925ba:
    .ascii   "333333"
    .ascii  "\xeb\x3f"
data_925c2:
    .ascii   "333333"
    .ascii  "\xfb\x3f\x00\x00"
data_925cc:
    .string "restree.txt"
data_925d8:
    .ascii  "\x25\x64\x00"
data_925db:
    .ascii  "\x25\x73\x00"
data_925de:
    .string "%d %d"
data_925e4:
    .ascii  "\x25\x64\x00"
data_925e7:
    .string "..\\research.cpp"
data_925f7:
    .string "..\\research.cpp"
data_92607:
    .string "..\\research.cpp"
    .ascii  "\x00"
data_92618:
    .string "reswin.txt"
data_92623:
    .ascii  "\x25\x64\x00"
data_92626:
    .string "%d %d %d"
data_9262f:
    .string "..\\reswin.cpp"
data_9263d:
    .ascii  "\x77\x00"
data_9263f:
    .string "reswin.txt"
data_9264a:
    .ascii  "\x25\x64\x0a\x00"
data_9264e:
    .string "%d %d %d\n"
data_92658:
    .ascii  "\x00\x00\x20\x41"
data_9265c:
    .fill   0x6
    .ascii  "\xf4\x3f"
data_92664:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xb9\x3f"
data_9266c:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xe9\x3f"
data_92674:
    .string "data\\resring.shp"
data_92685:
    .string "data\\resring.shp"
data_92696:
    .ascii  "\x00"
data_92697:
    .ascii  "\x00\x00\x80\x3e"
data_9269b:
    .ascii  "\x00\x00\x00\x3f\x00"
data_926a0:
    .string "gizmos.txt"
data_926ab:
    .ascii  "\x25\x73\x00"
data_926ae:
    .string "%d %d %d %d %d %d %d %d %d"
data_926c9:
    .ascii  "\x25\x64\x00"
data_926cc:
    .ascii  "\x25\x64\x00"
data_926cf:
    .string "..\\ship.cpp"
data_926db:
    .ascii  "\x00\x00\x80\xbf"
data_926df:
    .string "..\\ship.cpp"
data_926eb:
    .fill   0x6
    .ascii  "\x24\x40"
data_926f3:
    .fill   0x6
    .ascii  "\x34\x40"
data_926fb:
    .string "..\\ship.cpp"
data_92707:
    .string "..\\ship.cpp"
data_92713:
    .string "..\\ship.cpp"
data_9271f:
    .string "..\\ship.cpp"
data_9272b:
    .string "..\\ship.cpp"
data_92737:
    .string "..\\ship.cpp"
data_92743:
    .string "..\\ship.cpp"
data_9274f:
    .string "..\\ship.cpp"
data_9275b:
    .ascii   "ffffff"
    .ascii  "\xee\x3f"
data_92763:
    .ascii   "ffffff"
    .ascii  "\xea\x3f"
data_9276b:
    .string "..\\ship.cpp"
data_92777:
    .ascii  "\xcd\xcc\xcc\x3b"
data_9277b:
    .ascii  "\x00\x00\x00\x42"
data_9277f:
    .ascii  "\x00\x00\xa0\x40"
data_92783:
    .string "..\\ship.cpp"
data_9278f:
    .string "..\\ship.cpp"
data_9279b:
    .string "..\\ship.cpp"
data_927a7:
    .string "..\\ship.cpp"
data_927b3:
    .string "..\\ship.cpp"
data_927bf:
    .ascii  "\xab\xaa\xaa\x3e"
data_927c3:
    .ascii  "\x00\x00\x00\x40"
data_927c7:
    .ascii  "\xcd\xcc\xcc\x3d"
data_927cb:
    .ascii  "\x00\x00\x00\x40"
data_927cf:
    .string "..\\ship.cpp"
data_927db:
    .string "..\\ship.cpp"
data_927e7:
    .ascii  "\x00\x00\xc8\x44"
data_927eb:
    .string "..\\ship.cpp"
data_927f7:
    .string "..\\ship.cpp"
data_92803:
    .string "Bad m_LocationType: %s"
data_9281a:
    .string "..\\ship.cpp"
data_92826:
    .string "..\\ship.cpp"
data_92832:
    .string "..\\ship.cpp"
data_9283e:
    .string "..\\ship.cpp"
data_9284a:
    .string "..\\ship.cpp"
data_92856:
    .string "Bad m_LocationType: %s"
data_9286d:
    .string "..\\ship.cpp"
    .ascii  "\x00\x00\x00"
data_9287c:
    .string "..\\shipgiz.cpp"
data_9288b:
    .string "..\\shipgiz.cpp"
data_9289a:
    .string "..\\shipgiz.cpp"
data_928a9:
    .string "..\\shipgiz.cpp"
data_928b8:
    .string "..\\shipgiz.cpp"
data_928c7:
    .ascii  "\x00\x00\x00\x40"
data_928cb:
    .fill   0x6
    .ascii  "\xe8\x3f"
data_928d3:
    .ascii  "\x00\x00\x80\x42"
data_928d7:
    .string "..\\shipgiz.cpp"
data_928e6:
    .ascii  "\x00\x00\x00\x40"
data_928ea:
    .fill   0x6
    .ascii  "\xe8\x3f"
data_928f2:
    .string "..\\shipgiz.cpp"
data_92901:
    .string "..\\shipgiz.cpp"
data_92910:
    .string "..\\shipwin.cpp"
data_9291f:
    .string "..\\shipwin.cpp"
data_9292e:
    .string "GIZLIST"
data_92936:
    .string "..\\shipwin.cpp"
data_92945:
    .string "..\\shipwin.cpp"
data_92954:
    .string "..\\shipwin.cpp"
data_92963:
    .string "..\\shipwin.cpp"
data_92972:
    .string "..\\shipwin.cpp"
data_92981:
    .string "..\\shipwin.cpp"
data_92990:
    .ascii  "\x25\x73\x00"
data_92993:
    .string "..\\shipwin.cpp"
data_929a2:
    .string "%s \"%s\"%s"
data_929ac:
    .ascii  "\x5c\x00"
data_929ae:
    .string "..\\ssystem.cpp"
data_929bd:
    .string "..\\ssystem.cpp"
data_929cc:
    .string "..\\ssystem.cpp"
data_929db:
    .string "..\\ssystem.cpp"
data_929ea:
    .string "Attempt play Sequence Track %d with NULL data.\n\n"
data_92a1b:
    .string "..\\ssystem.cpp"
data_92a2a:
    .string "..\\ssystem.cpp"
data_92a39:
    .string "..\\ssystem.cpp"
data_92a48:
    .string "..\\ssystem.cpp"
data_92a57:
    .ascii  "\x5c\x00"
data_92a59:
    .string "..\\ssystem.cpp"
data_92a68:
    .string "..\\ssystem.cpp"
data_92a77:
    .string "..\\ssystem.cpp"
data_92a86:
    .string "..\\ssystem.cpp"
data_92a95:
    .string "DigitalMusicBuf"
data_92aa5:
    .string "..\\ssystem.cpp"
data_92ab4:
    .string "..\\ssystem.cpp"
data_92ac3:
    .ascii  "\x25\x64\x00"
data_92ac6:
    .string "..\\ssystem.cpp"
data_92ad5:
    .ascii  "\x25\x73\x00"
data_92ad8:
    .string "..\\ssystem.cpp"
data_92ae7:
    .string "..\\ssystem.cpp"
data_92af6:
    .string "..\\ssystem.cpp"
data_92b05:
    .string "..\\ssystem.cpp"
data_92b14:
    .string "..\\ssystem.cpp"
data_92b23:
    .string "..\\ssystem.cpp"
data_92b32:
    .string "..\\ssystem.cpp"
data_92b41:
    .string "..\\ssystem.cpp"
data_92b50:
    .string "..\\ssystem.cpp"
data_92b5f:
    .string "..\\ssystem.cpp"
data_92b6e:
    .string "..\\ssystem.cpp"
data_92b7d:
    .string "..\\ssystem.cpp"
data_92b8c:
    .string "soundfx.txt"
data_92b98:
    .string "%d %d"
data_92b9e:
    .string "..\\ssystem.cpp"
data_92bad:
    .string "..\\ssystem.cpp"
data_92bbc:
    .string "SFX CACHE"
data_92bc6:
    .ascii  "\x25\x64\x00"
data_92bc9:
    .string "..\\ssystem.cpp"
data_92bd8:
    .ascii  "\x25\x73\x00"
data_92bdb:
    .string "..\\ssystem.cpp"
data_92bea:
    .string "data\\%s.voc"
data_92bf6:
    .string "..\\ssystem.cpp"
    .ascii  "\x00\x00\x00"
data_92c08:
    .string "..\\status.cpp"
data_92c16:
    .string "..\\status.cpp"
data_92c24:
    .string "Bad m_LocationType"
data_92c37:
    .ascii  "\x25\x73\x00"
data_92c3a:
    .ascii  "\xab\xaa\xaa\x3e"
data_92c3e:
    .ascii  "\x00\x00\x00\x40"
data_92c42:
    .string "STATPLANLST"
data_92c4e:
    .string "..\\status.cpp"
data_92c5c:
    .string "DATA\\planets.shp"
data_92c6d:
    .string "..\\status.cpp"
data_92c7b:
    .string "DATA\\suns.shp"
data_92c89:
    .string "..\\status.cpp"
data_92c97:
    .ascii  "\x00"
data_92c98:
    .ascii  "\x73\x00"
data_92c9a:
    .string "STATSHIPLST"
data_92ca6:
    .string "..\\status.cpp"
data_92cb4:
    .string "DATA\\planets.shp"
data_92cc5:
    .string "..\\status.cpp"
data_92cd3:
    .string "DATA\\suns.shp"
data_92ce1:
    .string "..\\status.cpp"
data_92cef:
    .string "SHIPDESSCREEN"
data_92cfd:
    .string "newgame.txt"
data_92d09:
    .string "..\\status.cpp"
data_92d17:
    .string "..\\status.cpp"
data_92d25:
    .string "DATA\\smhome.shp"
data_92d35:
    .string "..\\status.cpp"
data_92d43:
    .string "..\\status.cpp"
data_92d51:
    .string "..\\status.cpp"
data_92d5f:
    .string "COSMOSWnd"
data_92d69:
    .string "..\\status.cpp"
data_92d77:
    .ascii  "\x00\x80\xbb\xc4"
data_92d7b:
    .string "BatModeWnd"
data_92d86:
    .string "COSMOSWnd"
data_92d90:
    .string "RESWIN"
data_92d97:
    .string "RACECONTROLS"
data_92da4:
    .string "..\\status.cpp"
data_92db2:
    .string "resume.gam"
data_92dbd:
    .string "RACELIST"
data_92dc6:
    .string "..\\status.cpp"
data_92dd4:
    .fill   0x6
    .ascii  "\xe0\x3f"
data_92ddc:
    .string "..\\winmgr.cpp"
data_92dea:
    .string "..\\winmgr.cpp"
data_92df8:
    .string "..\\winmgr.cpp"
data_92e06:
    .string "..\\winmgr.cpp"
data_92e14:
    .string "..\\winmgr.cpp"
data_92e22:
    .string "..\\winmgr.cpp"
data_92e30:
    .string "info%02d"
data_92e39:
    .string "HELPWINDOW"
data_92e44:
    .string "WINEVENT.BIN"
data_92e51:
    .string "FPS %lu  %lu"
data_92e5e:
    .string "(%d,%d)"
data_92e66:
    .string "..\\winmgr.cpp"
data_92e74:
    .string "NEXTTURNCONT"
data_92e81:
    .string "..\\winmgr.cpp"
data_92e8f:
    .string "..\\winmgr.cpp"
data_92e9d:
    .string "..\\winmgr.cpp"
data_92eab:
    .string "MSGBOX"
data_92eb2:
    .string "MSGBOXBUTTON"
data_92ebf:
    .ascii  "\x41\x00"
data_92ec1:
    .string "INPUTBOX"
data_92eca:
    .string "MSGBOXBUTTON"
data_92ed7:
    .string "EDITWND"
data_92edf:
    .string "..\\winmgr.cpp"
    .string "..\\winmgr.cpp"
data_92efb:
    .string "EVENTWIN"
data_92f04:
    .string "..\\winmgr.cpp"
data_92f12:
    .string "..\\winmgr.cpp"
data_92f20:
    .string "WINEVENT.BIN"
data_92f2d:
    .string "ABILITYWIN"
data_92f38:
    .string "HELPWINDOW"
data_92f43:
    .string "STATE%02d"
data_92f4d:
    .string "help.txt"
data_92f56:
    .string "HELPWINDOW"
data_92f61:
    .string "NOINTRO"
data_92f69:
    .string "help.txt"
data_92f72:
    .string "gizmo%02d"
data_92f7c:
    .string "HELPWINDOW"
data_92f87:
    .string "gizhelp.txt"
data_92f93:
    .string "..\\winmgr.cpp"
data_92fa1:
    .string "..\\winmgr.cpp"
data_92faf:
    .string "plitem%02d"
data_92fba:
    .string "HELPWINDOW"
data_92fc5:
    .string "planhelp.txt"
data_92fd2:
    .string "..\\winmgr.cpp"
data_92fe0:
    .string "..\\winmgr.cpp"
data_92fee:
    .string "HELPWINDOW"
data_92ff9:
    .string "help.txt"
data_93002:
    .string "COSMOSWnd"
data_9300c:
    .string "..\\winmgr.cpp"
data_9301a:
    .string "..\\winmgr.cpp"
data_93028:
    .string "..\\winmgr.cpp"
data_93036:
    .string "..\\winmgr.cpp"
data_93044:
    .string "..\\winmgr.cpp"
data_93052:
    .string "..\\winmgr.cpp"
data_93060:
    .string "..\\winmgr.cpp"
data_9306e:
    .string "..\\winmgr.cpp"
data_9307c:
    .string "resume.gam"
data_93087:
    .string "resume.gam"
data_93092:
    .string "..\\winmgr.cpp"
data_930a0:
    .string "..\\winmgr.cpp"
data_930ae:
    .string "..\\winmgr.cpp"
data_930bc:
    .string "..\\winmgr.cpp"
data_930ca:
    .string "..\\winmgr.cpp"
data_930d8:
    .string "..\\winmgr.cpp"
data_930e6:
    .string "..\\winmgr.cpp"
data_930f4:
    .string "..\\winmgr.cpp"
data_93102:
    .string "..\\winmgr.cpp"
data_93110:
    .string "..\\winmgr.cpp"
data_9311e:
    .string "..\\winmgr.cpp"
data_9312c:
    .string "WMGR MAPFOCUS"
data_9313a:
    .string "..\\winmgr.cpp"
data_93148:
    .string "WMGR MAPRACES"
data_93156:
    .string "..\\winmgr.cpp"
data_93164:
    .string "windows.txt"
data_93170:
    .string "%s %d"
data_93176:
    .string "..\\winmgr.cpp"
data_93184:
    .string "%s %d"
data_9318a:
    .ascii  "\x47\x57\x00"
data_9318d:
    .ascii  "\x52\x57\x00"
data_93190:
    .ascii  "\x52\x53\x57\x00"
data_93194:
    .ascii  "\x50\x57\x00"
data_93197:
    .ascii  "\x4c\x57\x00"
data_9319a:
    .ascii  "\x49\x57\x00"
data_9319d:
    .ascii  "\x52\x57\x00"
data_931a0:
    .ascii  "\x50\x53\x57\x00"
data_931a4:
    .ascii  "\x4e\x54\x00"
data_931a7:
    .ascii  "\x53\x57\x00"
data_931aa:
    .ascii  "\x46\x57\x00"
data_931ad:
    .ascii  "\x4e\x47\x00"
data_931b0:
    .ascii  "\x42\x43\x00"
data_931b3:
    .ascii  "\x48\x57\x00"
data_931b6:
    .ascii  "\x4e\x57\x00"
data_931b9:
    .ascii  "\x41\x57\x00"
data_931bc:
    .ascii  "\x45\x57\x00"
data_931bf:
    .ascii  "\x45\x57\x00"
data_931c2:
    .ascii  "\x54\x57\x00"
data_931c5:
    .ascii  "\x4d\x57\x00"
data_931c8:
    .ascii  "\x47\x53\x57\x00"
data_931cc:
    .ascii  "\x45\x57\x00"
data_931cf:
    .ascii  "\x70\x63\x77\x00"
data_931d3:
    .ascii  "\x6d\x69\x77\x00"
data_931d7:
    .string "%s %s"
data_931dd:
    .ascii  "\x25\x73\x00"
data_931e0:
    .ascii  "\x25\x73\x00"
data_931e3:
    .string "NONE"
data_931e8:
    .string "%s bad parent"
data_931f6:
    .string "..\\winmgr.cpp"
data_93204:
    .string "%s %d"
data_9320a:
    .ascii  "\x25\x64\x00"
data_9320d:
    .string "..\\winmgr.cpp"
data_9321b:
    .string "%s %d"
data_93221:
    .string "%s %d"
data_93227:
    .string "%s %d"
data_9322d:
    .string "%s %d"
data_93233:
    .string "%s %d"
data_93239:
    .string "%s %d"
data_9323f:
    .string "%s %d"
data_93245:
    .string "%s %d"
data_9324b:
    .string "%s %d"
data_93251:
    .string "%s %d"
data_93257:
    .string "%s %d"
data_9325d:
    .string "%s %d"
data_93263:
    .string "%s %s"
data_93269:
    .string "%s %d"
data_9326f:
    .string "%s %d"
data_93275:
    .string "%s %d %d %d"
data_93281:
    .string "%s %d %d %d"
data_9328d:
    .string "..\\winmgr.cpp"
data_9329b:
    .string "FLIC"
data_932a0:
    .string "%s %s"
data_932a6:
    .ascii  "\x25\x73\x00"
data_932a9:
    .ascii  "\x25\x73\x00"
data_932ac:
    .string "NONE"
data_932b1:
    .string "..\\winmgr.cpp"
data_932bf:
    .string "%s %d"
data_932c5:
    .ascii  "\x25\x64\x00"
data_932c8:
    .string "..\\winmgr.cpp"
data_932d6:
    .string "%s %d"
data_932dc:
    .string "%s %d"
data_932e2:
    .string "%s %d"
data_932e8:
    .string "%s %d"
data_932ee:
    .string "%s %s"
data_932f4:
    .string "%s %d"
data_932fa:
    .string "%s %d"
data_93300:
    .string "%s %d"
data_93306:
    .string "%s %d"
data_9330c:
    .string "%s %d"
data_93312:
    .string "%s %d"
data_93318:
    .string "%s %d"
data_9331e:
    .string "%s %d"
data_93324:
    .string "%s %s"
data_9332a:
    .string "%s %d"
data_93330:
    .string "%s %d"
data_93336:
    .string "COSW"
data_9333b:
    .string "%s %s"
data_93341:
    .ascii  "\x25\x73\x00"
data_93344:
    .ascii  "\x25\x73\x00"
data_93347:
    .string "NONE"
data_9334c:
    .string "..\\winmgr.cpp"
data_9335a:
    .string "%s %d"
data_93360:
    .ascii  "\x25\x64\x00"
data_93363:
    .string "..\\winmgr.cpp"
data_93371:
    .string "%s %d"
data_93377:
    .string "%s %d"
data_9337d:
    .string "%s %d"
data_93383:
    .string "%s %d"
data_93389:
    .string "%s %d"
data_9338f:
    .string "%s %s"
data_93395:
    .string "%s %s"
data_9339b:
    .string "%s %d"
data_933a1:
    .string "%s %d"
data_933a7:
    .string "%s %d"
data_933ad:
    .string "%s %d"
data_933b3:
    .string "%s %d"
data_933b9:
    .string "%s %d"
data_933bf:
    .string "%s %d"
data_933c5:
    .string "%s %d"
data_933cb:
    .string "%s %d"
data_933d1:
    .string "%s %d"
data_933d7:
    .string "%s %s"
data_933dd:
    .ascii  "\x43\x54\x57\x00"
data_933e1:
    .string "%s %s"
data_933e7:
    .ascii  "\x25\x73\x00"
data_933ea:
    .ascii  "\x25\x73\x00"
data_933ed:
    .string "NONE"
data_933f2:
    .string "..\\winmgr.cpp"
data_93400:
    .string "%s %d"
data_93406:
    .ascii  "\x25\x64\x00"
data_93409:
    .string "..\\winmgr.cpp"
data_93417:
    .string "%s %d"
data_9341d:
    .string "%s %d"
data_93423:
    .string "%s %d"
data_93429:
    .string "%s %d"
data_9342f:
    .string "%s %d"
data_93435:
    .string "%s %d"
data_9343b:
    .string "%s %d"
data_93441:
    .string "%s %d"
data_93447:
    .string "%s %s"
data_9344d:
    .string "%s %d"
data_93453:
    .string "..\\winmgr.cpp"
data_93461:
    .string "%s %d"
data_93467:
    .ascii  "\x25\x64\x00"
data_9346a:
    .ascii  "\x25\x64\x00"
data_9346d:
    .ascii  "\x25\x64\x00"
data_93470:
    .ascii  "\x25\x64\x00"
data_93473:
    .ascii  "\x25\x64\x00"
data_93476:
    .ascii  "\x25\x64\x00"
data_93479:
    .string "..\\winmgr.cpp"
data_93487:
    .ascii  "\x42\x4d\x00"
data_9348a:
    .string "%s %s"
data_93490:
    .ascii  "\x25\x73\x00"
data_93493:
    .ascii  "\x25\x73\x00"
data_93496:
    .string "NONE"
data_9349b:
    .string "..\\winmgr.cpp"
data_934a9:
    .string "%s %d"
data_934af:
    .ascii  "\x25\x64\x00"
data_934b2:
    .string "..\\winmgr.cpp"
data_934c0:
    .string "%s %d"
data_934c6:
    .string "%s %d"
data_934cc:
    .string "%s %d"
data_934d2:
    .string "%s %d"
data_934d8:
    .string "%s %d"
data_934de:
    .string "%s %d"
data_934e4:
    .string "%s %d"
data_934ea:
    .string "%s %d"
data_934f0:
    .string "%s %d"
data_934f6:
    .string "%s %s"
data_934fc:
    .ascii  "\x53\x57\x00"
data_934ff:
    .string "%s %s"
data_93505:
    .ascii  "\x25\x73\x00"
data_93508:
    .ascii  "\x25\x73\x00"
data_9350b:
    .string "NONE"
data_93510:
    .string "..\\winmgr.cpp"
data_9351e:
    .string "%s %d"
data_93524:
    .ascii  "\x25\x64\x00"
data_93527:
    .string "..\\winmgr.cpp"
data_93535:
    .string "%s %d"
data_9353b:
    .string "%s %d"
data_93541:
    .string "%s %d"
data_93547:
    .string "%s %d"
data_9354d:
    .string "%s %d"
data_93553:
    .string "%s %d"
data_93559:
    .string "%s %d"
data_9355f:
    .string "%s %d"
data_93565:
    .string "%s %d"
data_9356b:
    .string "%s %s"
data_93571:
    .ascii  "\x4c\x42\x00"
data_93574:
    .string "%s %s"
data_9357a:
    .ascii  "\x25\x73\x00"
data_9357d:
    .ascii  "\x25\x73\x00"
data_93580:
    .string "NONE"
data_93585:
    .string "..\\winmgr.cpp"
data_93593:
    .string "%s %d"
data_93599:
    .ascii  "\x25\x64\x00"
data_9359c:
    .string "..\\winmgr.cpp"
data_935aa:
    .string "%s %d"
data_935b0:
    .string "%s %d"
data_935b6:
    .string "%s %d"
data_935bc:
    .string "%s %d"
data_935c2:
    .string "%s %d"
data_935c8:
    .string "%s %d"
data_935ce:
    .string "%s %d"
data_935d4:
    .string "%s %d"
data_935da:
    .string "%s %d"
data_935e0:
    .string "%s %d"
data_935e6:
    .string "%s %s"
data_935ec:
    .string "DBGWND"
data_935f3:
    .string "..\\winmgr.cpp"
data_93601:
    .string "%s %s"
data_93607:
    .string "%s %d"
data_9360d:
    .string "%s %d"
data_93613:
    .string "%s %d"
data_93619:
    .string "%s %d"
data_9361f:
    .string "%s %d"
data_93625:
    .string "%s %d"
data_9362b:
    .string "%s %d"
data_93631:
    .string "%s %d"
data_93637:
    .string "%s %s"
data_9363d:
    .string "%s %d"
data_93643:
    .string "%s %s"
data_93649:
    .string "..\\winmgr.cpp"
data_93657:
    .string "%s %d"
data_9365d:
    .string "%s %s"
data_93663:
    .string "%s %s"
data_93669:
    .string "..\\winmgr.cpp"
data_93677:
    .string "%s %s"
data_9367d:
    .string "..\\winmgr.cpp"
data_9368b:
    .string "..\\winmgr.cpp"
data_93699:
    .string "ascend.cfg"
data_936a4:
    .string "ascend.cfg"
data_936af:
    .string "WINEVENT.TXT"
data_936bc:
    .string "WINEVENT.BIN"
data_936c9:
    .string ".txt"
data_936ce:
    .string "HELPWINDOW"
data_936d9:
    .string "endtut"
data_936e0:
    .string "help.txt"
data_936e9:
    .string "\nBad Trace Event: %d of %d\n\nEVENT[%d] HWND[%0d] MSG[%d] P1[%d] P2[%d]\n"
data_93730:
    .string "..\\winmgr.cpp"
data_9373e:
    .string "..\\winmgr.cpp"
data_9374c:
    .string "..\\winmgr.cpp"
data_9375a:
    .string "..\\winmgr.cpp"
data_93768:
    .string "WINEVENT.BIN"
data_93775:
    .string "..\\winmgr.cpp"
data_93783:
    .ascii  "\x77\x00"
data_93785:
    .string "..\\winmgr.cpp"
data_93793:
    .string "..\\winmgr.cpp"
data_937a1:
    .string " TIME[%05lu]  EVT_MOUSE_POS    : "
data_937c3:
    .string " Moved to (%03d,%03d)\n"
data_937da:
    .string " TIME[%05lu]  EVT_MOUSE_BUTTON :  "
data_937fd:
    .string "DOWN"
data_93802:
    .ascii  "\x55\x50\x00"
data_93805:
    .string "Right"
data_9380b:
    .string "Left"
data_93810:
    .string "%s Button %s\n"
data_9381e:
    .string " TIME[%05lu]  EVT_KEYBOARD     : "
data_93840:
    .string " '%c'  (%04d)\n"
data_9384f:
    .string "EVT_REQ_CONT"
data_9385c:
    .string "EVT_CAN_CONT"
data_93869:
    .string " TIME[%05lu]  %-15s: "
data_9387f:
    .string " HWND[%04d] MSG[%04d] P1[%04d] P2[%04d]\n"
data_938a8:
    .string "EVT_REQ_CHANGE"
data_938b7:
    .string "EVT_CAN_CHANGE"
data_938c6:
    .string " TIME[%05lu]  %-15s: "
data_938dc:
    .string " HWND[%04d] MSG[%04d] P1[%04d] P2[%04d] F[%04d]\n"
data_9390d:
    .string " *** Unrecognized event type : %d\n"
data_93930:
    .string "..\\winmgr.cpp"
data_9393e:
    .string "..\\winmgr.cpp"
data_9394c:
    .string "..\\winmgr.cpp"
data_9395a:
    .string "DATA\\1starmap.tmp"
data_9396c:
    .string "DATA\\3cfgnew.tmp"
data_9397d:
    .string "DATA\\7racesel.tmp"
data_9398f:
    .string "DATA\\8shipdes.tmp"
data_939a1:
    .string "DATA\\9ENDGAME.tmp"
data_939b3:
    .string "DATA\\12start.tmp"
data_939c4:
    .string "DATA\\13negot.tmp"
data_939d5:
    .string "DATA\\16battle.tmp"
data_939e7:
    .string "DATA\\20res.tmp"
data_939f6:
    .string "DATA\\10status.tmp"
data_93a08:
    .string "..\\winmgr.cpp"
data_93a16:
    .string "%03d"
data_93a1b:
    .string "DBGWNDLIST"
data_93a26:
    .string "..\\winmgr.cpp"
data_93a34:
    .string "..\\winmgr.cpp"
data_93a42:
    .string "DBGWNDLIST"
data_93a4d:
    .string "..\\winmgr.cpp"
data_93a5b:
    .string "DBGWNDLIST"
data_93a66:
    .string "..\\winmgr.cpp"
data_93a74:
    .string "DBGWNDLIST"
data_93a7f:
    .string "..\\winmgr.cpp"
data_93a8d:
    .string "DBGWNDLIST"
data_93a98:
    .string "..\\winmgr.cpp"
data_93aa6:
    .string "DBGWNDLIST"
data_93ab1:
    .string "..\\winmgr.cpp"
data_93abf:
    .string "DBGWNDLIST"
data_93aca:
    .string "..\\winmgr.cpp"
data_93ad8:
    .string "WINDOWS   "
data_93ae3:
    .string "MEMORY    "
data_93aee:
    .string "CACHE     "
data_93af9:
    .string "PALETTE   "
data_93b04:
    .string "..\\winmgr.cpp"
data_93b12:
    .string "%06lu S%07lu WND[%s]"
data_93b27:
    .string "%06lu S%07lu %s"
data_93b37:
    .string "%06lu S%07lu %s"
data_93b47:
    .string "..\\winmgr.cpp"
data_93b55:
    .string "** %d WNDS USING %lu BYTES"
data_93b70:
    .string "** %d SHAPES USING %lu BYTES"
data_93b8d:
    .string "** %d ITEMS IN HEAP USE %lu BYTES"
data_93baf:
    .string "** %d ITEMS ARE UNIDENTIFIED"
data_93bcc:
    .string "** TOTAL FREE IN HEAP %lu BYTES"
data_93bec:
    .string "..\\winmgr.cpp"
data_93bfa:
    .string "%c HWND%03d %s"
data_93c09:
    .string "%07d %s"
data_93c11:
    .ascii  "\x20\x00"
data_93c13:
    .ascii  "\x25\x73\x00"
data_93c16:
    .ascii  "\x20\x00"
data_93c18:
    .string "%03d ITEMS IN CACHE"
data_93c2c:
    .string "%03d ITEMS LOADED"
data_93c3e:
    .ascii  "\x20\x00"
data_93c40:
    .string "%07d TOTAL CACHE SIZE"
data_93c56:
    .string "%07d USED"
data_93c60:
    .string "%07d FREE"
data_93c6a:
    .string "%02d. %-24s (%d)"
    .ascii  "\x00"
data_93c7c:
    .ascii  "\x4c\x58\x00\x00"
data_93c80:
    .string "[%.02u:%.02u:%.02u.%.02u] "
data_93c9b:
    .ascii  "\x20\x00"
data_93c9d:
    .ascii  "\xfa\x00"
data_93c9f:
    .string "AIL_DEBUG"
data_93ca9:
    .string "AIL_SYS_DEBUG"
data_93cb7:
    .ascii  "\x77\x2b\x74\x00"
data_93cbb:
    .string "-------------------------------------------------------------------------------\n"
data_93d0c:
    .string "3.02"
data_93d11:
    .string "Audio Interface Library application usage script generated by AIL V%s\n"
data_93d58:
    .string "Start time: %s\n"
data_93d68:
    .string "-------------------------------------------------------------------------------\n\n"
data_93dba:
    .string "AIL_startup()\n"
data_93dc9:
    .string "AIL_shutdown()\n"
data_93dd9:
    .string "AIL_set_preference(%d,%d)\n"
data_93df4:
    .string "Result = %d\n"
data_93e01:
    .string "AIL_get_real_vect(0x%X)\n"
data_93e1a:
    .string "Result = 0x%X\n"
data_93e29:
    .string "AIL_set_real_vect(0x%X,0x%X)\n"
data_93e47:
    .string "AIL_set_USE16_ISR(%d,0x%X,%u)\n"
data_93e66:
    .string "AIL_restore_USE16_ISR(%d)\n"
data_93e81:
    .string "AIL_call_driver(0x%X,0x%X,0x%X,0x%X)\n"
data_93ea7:
    .string "AIL_delay(%d)\n"
data_93eb6:
    .string "AIL_API_read_INI(0x%X,%s)\n"
data_93ed1:
    .string "Driver = %s\n"
data_93ede:
    .string "Device = %s\n"
data_93eeb:
    .string "IO     = %X\n"
data_93ef8:
    .string "IRQ    = %d\n"
data_93f05:
    .string "DMA_8  = %d\n"
data_93f12:
    .string "DMA_16 = %d\n"
data_93f1f:
    .string "Result = %u\n"
data_93f2c:
    .string "AIL_register_timer(0x%X)\n"
data_93f46:
    .string "AIL_set_timer_user(%u,%u)\n"
data_93f61:
    .string "AIL_set_timer_period(%u,%u)\n"
data_93f7e:
    .string "AIL_set_timer_frequency(%u,%u)\n"
data_93f9e:
    .string "AIL_set_timer_divisor(%u,%u)\n"
data_93fbc:
    .string "AIL_interrupt_divisor()\n"
data_93fd5:
    .string "AIL_start_timer(%u)\n"
data_93fea:
    .string "AIL_start_all_timers()\n"
data_94002:
    .string "AIL_stop_timer(%u)\n"
data_94016:
    .string "AIL_stop_all_timers()\n"
data_9402d:
    .string "AIL_release_timer_handle(%u)\n"
data_9404b:
    .string "AIL_release_all_timers()\n"
data_94065:
    .string "AIL_get_IO_environment(0x%X)\n"
data_94083:
    .string "AIL_install_driver(0x%X,%u)\n"
data_940a0:
    .string "AIL_uninstall_driver(0x%X)\n"
data_940bc:
    .string "AIL_install_DIG_INI()\n"
data_940d3:
    .string "AIL_install_DIG_driver_file(%s,0x%X)\n"
data_940f9:
    .string "AIL_uninstall_DIG_driver(0x%X)\n"
data_94119:
    .string "AIL_allocate_sample_handle(0x%X)\n"
data_9413b:
    .string "AIL_allocate_file_sample(0x%X,0x%X,%d)\n"
data_94163:
    .string "AIL_release_sample_handle(0x%X)\n"
data_94184:
    .string "AIL_init_sample(0x%X)\n"
data_9419b:
    .string "AIL_set_sample_file(0x%X,0x%X,%d)\n"
data_941be:
    .string "AIL_set_sample_address(0x%X,0x%X,%u)\n"
data_941e4:
    .string "AIL_set_sample_type(0x%X,%d,%u)\n"
data_94205:
    .string "AIL_start_sample(0x%X)\n"
data_9421d:
    .string "AIL_stop_sample(0x%X)\n"
data_94234:
    .string "AIL_resume_sample(0x%X)\n"
data_9424d:
    .string "AIL_end_sample(0x%X)\n"
data_94263:
    .string "AIL_set_sample_playback_rate(0x%X,%d)\n"
data_9428a:
    .string "AIL_set_sample_volume(0x%X,%d)\n"
data_942aa:
    .string "AIL_set_sample_pan(0x%X,%d)\n"
data_942c7:
    .string "AIL_set_sample_loop_count(0x%X,%d)\n"
data_942eb:
    .string "AIL_sample_status(0x%X)\n"
data_94304:
    .string "AIL_sample_playback_rate(0x%X)\n"
data_94324:
    .string "AIL_sample_volume(0x%X)\n"
data_9433d:
    .string "AIL_sample_pan(0x%X)\n"
data_94353:
    .string "AIL_sample_loop_count(0x%X)\n"
data_94370:
    .string "AIL_install_DIG_driver_image(0x%X,%u,0x%X)\n"
data_9439c:
    .string "AIL_minimum_sample_buffer_size(0x%X,%d,%d)\n"
data_943c8:
    .string "AIL_sample_buffer_ready(0x%X)\n"
data_943e7:
    .string "AIL_load_sample_buffer(0x%X,%u,0x%X,%u)\n"
data_94410:
    .string "AIL_set_sample_position(0x%X,%u)\n"
data_94432:
    .string "AIL_sample_position(0x%X)\n"
data_9444d:
    .string "AIL_register_SOB_callback(0x%X,0x%X)\n"
data_94473:
    .string "AIL_register_EOB_callback(0x%X,0x%X)\n"
data_94499:
    .string "AIL_register_EOS_callback(0x%X,0x%X)\n"
data_944bf:
    .string "AIL_register_EOF_callback(0x%X,0x%X)\n"
data_944e5:
    .string "AIL_set_sample_user_data(0x%X,%u,%d)\n"
data_9450b:
    .string "AIL_sample_user_data(0x%X,%u)\n"
data_9452a:
    .string "AIL_active_sample_count(0x%X)\n"
data_94549:
    .string "AIL_install_MDI_INI()\n"
data_94560:
    .string "AIL_install_MDI_driver_file(%s,0x%X)\n"
data_94586:
    .string "AIL_uninstall_MDI_driver(0x%X)\n"
data_945a6:
    .string "AIL_allocate_sequence_handle(0x%X)\n"
data_945ca:
    .string "AIL_release_sequence_handle(0x%X)\n"
data_945ed:
    .string "AIL_init_sequence(0x%X,0x%X,%d)\n"
data_9460e:
    .string "AIL_start_sequence(0x%X)\n"
data_94628:
    .string "AIL_stop_sequence(0x%X)\n"
data_94641:
    .string "AIL_resume_sequence(0x%X)\n"
data_9465c:
    .string "AIL_end_sequence(0x%X)\n"
data_94674:
    .string "AIL_set_sequence_tempo(0x%X,%d,%d)\n"
data_94698:
    .string "AIL_set_sequence_volume(0x%X,%d,%d)\n"
data_946bd:
    .string "AIL_set_sequence_loop_count(0x%X,%d)\n"
data_946e3:
    .string "AIL_sequence_status(0x%X)\n"
data_946fe:
    .string "AIL_sequence_tempo(0x%X)\n"
data_94718:
    .string "AIL_sequence_volume(0x%X)\n"
data_94733:
    .string "AIL_sequence_loop_count(0x%X)\n"
data_94752:
    .string "AIL_install_MDI_driver_image(0x%X,%u,0x%X)\n"
data_9477e:
    .string "AIL_set_GTL_filename_prefix(%s)\n"
data_9479f:
    .string "AIL_timbre_status(0x%X,%d,%d)\n"
data_947be:
    .string "AIL_install_timbre(0x%X,%d,%d)\n"
data_947de:
    .string "AIL_protect_timbre(0x%X,%d,%d)\n"
data_947fe:
    .string "AIL_unprotect_timbre(0x%X,%d,%d)\n"
data_94820:
    .string "AIL_active_sequence_count(0x%X)\n"
data_94841:
    .string "AIL_controller_value(0x%X,%d,%d)\n"
data_94863:
    .string "AIL_channel_notes(0x%X,%d)\n"
data_9487f:
    .string "AIL_sequence_position(0x%X,0x%X,0x%X)\n"
data_948a6:
    .string "Result = %d:%d\n"
data_948b6:
    .string "AIL_branch_index(0x%X,%u)\n"
data_948d1:
    .string "AIL_register_prefix_callback(0x%X,0x%X)\n"
data_948fa:
    .string "AIL_register_trigger_callback(0x%X,0x%X)\n"
data_94924:
    .string "AIL_register_sequence_callback(0x%X,0x%X)\n"
data_9494f:
    .string "AIL_register_event_callback(0x%X,0x%X)\n"
data_94977:
    .string "AIL_register_timbre_callback(0x%X,0x%X)\n"
data_949a0:
    .string "AIL_set_sequence_user_data(0x%X,%u,%d)\n"
data_949c8:
    .string "AIL_sequence_user_data(0x%X,%u)\n"
data_949e9:
    .string "AIL_register_ICA_array(0x%X,0x%X)\n"
data_94a0c:
    .string "AIL_lock_channel(0x%X)\n"
data_94a24:
    .string "AIL_release_channel(0x%X,%d)\n"
data_94a42:
    .string "AIL_map_sequence_channel(0x%X,%d,%d)\n"
data_94a68:
    .string "AIL_true_sequence_channel(0x%X,%d)\n"
data_94a8c:
    .string "AIL_send_channel_voice_message(0x%X,0x%X,0x%X,0x%X,0x%X)\n"
data_94ac6:
    .string "AIL_send_sysex_message(0x%X,0x%X)\n"
data_94ae9:
    .string "AIL_create_wave_synthesizer(0x%X,0x%X,0x%X,%d)\n"
data_94b19:
    .string "AIL_destroy_wave_synthesizer(0x%X)\n"
    .ascii  "\x00\x00\x00"
data_94b40:
    .string "Insufficient memory for HWAVE descriptor\n"
    .ascii  "\x00\x00"
data_94b6c:
    .string "fmt "
data_94b71:
    .string "data"
data_94b76:
    .string "Creative"
data_94b7f:
    .string "WAVE"
data_94b84:
    .string "Unrecognized digital audio file type\n"
data_94baa:
    .string "Invalid or missing data block\n"
data_94bc9:
    .string "Unrecognized digital audio file type\n"
data_94bef:
    .string "Invalid or missing data block\n"
    .ascii  "\x00\x00"
data_94c10:
    .string "Minimum DMA buffer size too large for VDM\n"
    .ascii  "\x4e"
data_94c3c:
    .string "Could not allocate memory for driver\n"
    .ascii  "\x4e\x47"
data_94c64:
    .string ".DIG driver required\n"
    .ascii  "\x20\x44"
data_94c7c:
    .string "Digital sound hardware not found\n"
    .ascii  "\x67\x73"
data_94ca0:
    .string "Could not allocate DMA buffers\n"
data_94cc0:
    .string "Could not allocate build buffer\n"
    .ascii  "\x72\x20\x56"
data_94ce4:
    .string "Could not allocate SAMPLE structures\n"
    .ascii  "\x76\x65"
data_94d0c:
    .string "Out of timer handles\n"
    .ascii  "\x72\x65"
data_94d24:
    .string "Driver file not found\n"
    .ascii  "\x77"
data_94d3c:
    .string "DIG.INI"
data_94d44:
    .string "Unable to open file DIG.INI\n"
    .ascii  "\x4d\x41\x20"
data_94d64:
    .string "Out of sample handles\n"
    .ascii  "\x00"
data_94d7c:
    .string "FORM"
    .ascii  "\x65\x3b\x20"
data_94d84:
    .string "CAT "
    .ascii  "\x61\x74\x65"
data_94d8c:
    .string "XMID"
    .ascii  "\x74\x75\x72"
data_94d94:
    .string "Internal note queue overflow\n"
    .ascii  "\x4c\x4c"
data_94db4:
    .string "Could not allocate memory for driver\n"
    .ascii  "\x76\x6f"
data_94ddc:
    .string ".MDI driver required\n"
    .ascii  "\x28\x76"
data_94df4:
    .string "XMIDI sound hardware not found\n"
data_94e14:
    .string "Could not initialize instrument manager\n"
    .ascii  "\x00\x61\x74"
data_94e40:
    .string "Could not allocate SEQUENCE structures\n"
data_94e68:
    .string "Out of timer handles\n"
    .ascii  "\x6d\x6f"
data_94e80:
    .string "Driver file not found\n"
    .ascii  "\x72"
data_94e98:
    .string "MDI.INI"
data_94ea0:
    .string "Unable to open file MDI.INI\n"
    .ascii  "\x20\x6e\x6f"
data_94ec0:
    .string "Out of sequence handles\n"
    .ascii  "\x6c\x69\x7a"
data_94edc:
    .string "Invalid XMIDI sequence\n"
data_94ef4:
    .string "TIMB"
    .ascii  "\x61\x74\x43"
data_94efc:
    .string "RBRN"
    .ascii  "\x6e\x6f\x74"
data_94f04:
    .string "EVNT"
    .ascii  "\x63\x61\x74"
data_94f0c:
    .string "No timbres loaded\n"
    .ascii  "\x65"
data_94f20:
    .string "Driver could not install timbre bank %u, patch %u\n"
    .ascii  "\x4d"
data_94f54:
    .string "Driver could not install timbre bank %u, patch %u\n"
    .ascii  "\x00"
data_94f88:
    .string "0123456789ABCDEF"
data_94f99:
    .ascii  "\x72\x74\x00"
data_94f9c:
    .string "DRIVER"
data_94fa3:
    .string "DEVICE"
data_94faa:
    .string "IO_ADDR"
data_94fb2:
    .ascii  "\x49\x52\x51\x00"
data_94fb6:
    .string "DMA_8_bit"
data_94fc0:
    .string "DMA_16_bit"
data_94fcb:
    .string "Corrupted .INI file\n"
data_94fe0:
    .string "Insufficient memory for driver descriptor\n"
data_9500b:
    .string "Insufficient low memory\n"
data_95024:
    .string "AIL3DIG"
data_9502c:
    .string "AIL3MDI"
data_95034:
    .string "Invalid driver type\n"
data_95049:
    .string "Out of driver handles\n"
data_95060:
    .string "Out of timer handles\n"
    .ascii  "\x00\x00"
data_95078:
    .string "Copyright (C) 1993-95 SciTech Software, All Rights Reserved."
    .ascii  "\x00\x00\x13"
data_950b8:
    .ascii  "\x35\x00\x00\x61"
data_950bc:
    .ascii  "\x31\x61\x00\xcc"
data_950c0:
    .string "May 02 1995"
data_950cc:
    .string "VBE2"
    .ascii  "\x4c\x45\x00"
data_950d4:
    .string "VESA"
    .ascii  "\x6f\x00\x00"
data_950dc:
    .string "Universal VESA VBE"
    .ascii  "\x00"
data_950f0:
    .string "In order for this program to be able to function correctly with your video\n"
data_9513c:
    .string "card, it requires a VESA VBE SuperVGA BIOS implemenation to be installed.\n"
    .ascii  "\x56"
data_95188:
    .string "Please install the VESA VBE driver that came with your video card *BEFORE*\n"
data_951d4:
    .string "attempting to run this program again.\n\n"
data_951fc:
    .string "Your VESA driver will be a program called VESA.EXE, VVESA.EXE or something\n"
data_95248:
    .string "similar and will be located in your video cards driver utilities directories.\n"
    .ascii  "\x6e"
data_95298:
    .string "If you dont have a proper VESA VBE driver, please contact SciTech Software\n"
data_952e4:
    .string "as we may have a suitable TSR for your video card (this TSR is required in\n"
data_95330:
    .string "*ADDITION* to UniVBE, so that UniVBE can correctly set the video modes).\n"
    .ascii  "\x65\x72"
data_9537c:
    .string "univbe.drv"
    .ascii  "\x6e"
data_95388:
    .ascii  "\x72\x62\x00\x74"
data_9538c:
    .string "UVBLib: Not enough memory to update configuration!\n"
data_953c0:
    .string "UVBLib: %s is not a valid UniVBE driver file!\n"
    .ascii  "\x49"
data_953f0:
    .string "%s.%s"
    .ascii  "\x74\x6f"
data_953f8:
    .string "UVBLib: Driver file version is different!\n"
    .ascii  "\x6f"
data_95424:
    .string "Please run UVCONFIG.EXE to configure the UNIVBE.DRV driver.\n"
    .ascii  "\x63\x6f\x6e"
data_95464:
    .string "UVBLib: Unable to allocate real mode memory!\n"
    .ascii  "\x64\x72"
data_95494:
    .string "UVBELib(tm)/Lite  - Universal VESA BIOS Extension Linkable Library\n"
data_954d8:
    .string "                    Release %s.%s (%s)\n\n"
    .ascii  "\x72\x65\x20"
data_95504:
    .ascii  "\x25\x73\x0a\x00"
data_95508:
    .ascii  "\x0a\x00\x49\x56"
data_9550c:
    .string "Video Card: %s\n"
data_9551c:
    .string "RAM DAC:    %s\n\n"
    .ascii  "\x00\x00\x00"
data_95530:
    .string "Page locking services failed - interrupt handling not safe!\n"
    .ascii  "\x00\x00\x00"
data_95570:
    .string "compiler error: eliminated virtual function call!"
    .ascii  "\x00\x00"
data_955a4:
    .string "undefined constructor or destructor called!"
data_955d0:
    .string "Assertion failed: %hs, file %hs, line %d\n"
    .ascii  "\x00\x00"
data_955fc:
    .string "ABNORMAL TERMINATION\r\n"
    .ascii  "\x00"
data_95614:
    .ascii  "\x54\x5a\x00\x00"
data_95618:
    .string "Floating-point support not loaded\r\n"
data_9563c:
    .string "RATIONAL DOS/4G"
data_9564c:
    .string "acos"
data_95651:
    .string "asin"
data_95656:
    .string "sqrt"
data_9565b:
    .ascii  "\x65\x78\x70\x00"
data_9565f:
    .string "cosh"
data_95664:
    .string "sinh"
data_95669:
    .ascii  "\x70\x6f\x77\x00"
data_9566d:
    .string "acosh"
data_95673:
    .string "log2"
data_95678:
    .ascii  "\x6c\x6f\x67\x00"
data_9567c:
    .string "log10"
data_95682:
    .string "atanh"
data_95688:
    .string "atan2"
data_9568e:
    .string "ipow"
data_95693:
    .string "dpowi"
data_95699:
    .ascii  "\x63\x6f\x73\x00"
d