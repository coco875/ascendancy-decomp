.text


/*----------------------------------------------------------------*/
func_10003:
/*----------------------------------------------------------------*/
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop


/*----------------------------------------------------------------*/
func_10010:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x80,%esp
    mov    %eax,0x78(%esp)
    mov    %edx,%esi
    mov    %ebx,%edi
    xor    %edx,%edx
    mov    %edx,0x58(%esp)
    test   %ecx,%ecx
    je     jump_10042
    push   $0x96
    push   %eax
    call   func_59d90
    mov    $0x96,%ecx
    add    $0x8,%esp
    mov    %ecx,0x58(%esp)
  jump_10042:
    test   $0x80000000,%edi
    je     jump_10157
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd7e,%dx
    call   func_1b084
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_10076
    mov    $0x46,%ebx
    mov    $data_80004,%edx
    call   func_25878
  jump_10076:
    xor    %edx,%edx
    mov    0x16(%esi),%dx
    xor    %edi,%edi
    lea    0x0(,%edx,4),%eax
    mov    0x14(%esi),%di
    add    %edx,%eax
    lea    0x40(%esp),%ecx
    add    %eax,%edi
    lea    0x44(%esp),%eax
    mov    %ebp,%edx
    push   %eax
    mov    %edi,%ebx
    mov    0x7c(%esp),%eax
    call   func_2b320
    mov    0x44(%esp),%edx
    push   %edx
    mov    0x44(%esp),%ebx
    push   %ebx
    push   %edi
    push   %ebp
    mov    0x88(%esp),%ecx
    push   %ecx
    mov    %esi,0x5c(%esp)
    mov    $0xf3,%edi
    call   func_57efc
    xor    %ecx,%ecx
    add    $0x14,%esp
    mov    0x57(%esi),%cl
    mov    %edi,0x4c(%esp)
    cmp    $0xff,%ecx
    je     jump_10113
    mov    $0x4,%ebx
    mov    $0x2,%edx
    mov    0x78(%esp),%eax
    call   func_4f228
    xor    %edx,%edx
    mov    0x57(%esi),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e18(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0x4c(%esp)
  jump_10113:
    mov    0x48(%esp),%ecx
    mov    0x78(%esp),%esi
    push   $0x0
    mov    0x4e(%esp),%eax
    mov    $0x7,%ebx
    push   $0xff
    sar    $0x10,%eax
    mov    $0x12,%edx
    push   %eax
    mov    $data_fd38a,%edi
    add    $0x24,%ecx
    push   $0x0
    mov    $data_fd382,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_1014d:
    add    $0x80,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10157:
    mov    0x54(%esi),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    mov    data_efd60(,%eax,2),%dx
    mov    $data_11f10c,%eax
    mov    %esi,0x5c(%esp)
    call   func_1b084
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_1018a
    mov    $0x5c,%ebx
    mov    $data_80012,%edx
    call   func_25878
  jump_1018a:
    mov    0x5c(%esp),%eax
    xor    %edi,%edi
    xor    %edx,%edx
    mov    0x54(%eax),%eax
    mov    data_f458e,%dl
    sar    $0x10,%eax
    mov    %edi,0x50(%esp)
    cmp    %edx,%eax
    je     jump_101b3
    mov    0x5c(%esp),%eax
    call   func_45ed4
    test   %eax,%eax
    jle    jump_101bb
  jump_101b3:
    movl   $0xffffffff,0x50(%esp)
  jump_101bb:
    lea    0x44(%esp),%eax
    mov    0x5c(%esp),%ebx
    lea    0x40(%esp),%ecx
    mov    %esi,%edx
    push   %eax
    mov    0xa7(%ebx),%ebx
    mov    0x7c(%esp),%eax
    sar    $0x18,%ebx
    call   func_2b320
    mov    0x5c(%esp),%edx
    mov    0x54(%edx),%edx
    sar    $0x10,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e17(,%eax,2),%al
    mov    0x50(%esp),%edx
    and    $0xff,%eax
    cmp    $0xffffffff,%edx
    jne    jump_10357
    mov    0x5c(%esp),%edx
    cmpl   $0x0,0x88(%edx)
    jg     jump_10256
    mov    data_c8c33,%eax
    add    $0x1600,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    mov    0x44(%esp),%ecx
    mov    0x5c(%esp),%eax
    push   %ecx
    mov    0x44(%esp),%edi
    mov    0xa7(%eax),%eax
    push   %edi
    sar    $0x18,%eax
    push   %eax
    push   %esi
    mov    0x88(%esp),%ebp
    push   %ebp
    call   func_583e6
    jmp    jump_1037d
  jump_10256:
    mov    0x8c(%edx),%edx
    mov    0x5c(%esp),%ebx
    shl    $0x2,%edx
    cmp    0x98(%ebx),%edx
    jl     jump_10274
    cmpl   $0x5,0x8c(%ebx)
    jge    jump_102b2
  jump_10274:
    mov    data_c8c33,%eax
    add    $0x800,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    mov    0x44(%esp),%eax
    push   %eax
    mov    0x60(%esp),%eax
    mov    0x44(%esp),%edx
    mov    0xa7(%eax),%eax
    push   %edx
    sar    $0x18,%eax
    push   %eax
    push   %esi
    mov    0x88(%esp),%ebx
    push   %ebx
    call   func_583e6
    jmp    jump_1037d
  jump_102b2:
    test   %eax,%eax
    jne    jump_102f4
    mov    data_c8c33,%eax
    add    $0x300,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    mov    0x44(%esp),%ecx
    mov    0x5c(%esp),%eax
    push   %ecx
    mov    0x44(%esp),%edi
    mov    0xa7(%eax),%eax
    push   %edi
    sar    $0x18,%eax
    push   %eax
    push   %esi
    mov    0x88(%esp),%ebp
    push   %ebp
    call   func_583e6
    jmp    jump_1037d
  jump_102f4:
    cmp    $0xd,%eax
    jne    jump_1031c
    mov    0x44(%esp),%eax
    push   %eax
    mov    0x60(%esp),%eax
    mov    0x44(%esp),%edx
    mov    0xa7(%eax),%eax
    push   %edx
    sar    $0x18,%eax
    push   %eax
    push   %esi
    mov    0x88(%esp),%ebx
    push   %ebx
    jmp    jump_10378
  jump_1031c:
    mov    data_c8c33,%eax
    add    $0x600,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    mov    0x44(%esp),%ecx
    mov    0x5c(%esp),%eax
    push   %ecx
    mov    0x44(%esp),%edi
    mov    0xa7(%eax),%eax
    push   %edi
    sar    $0x18,%eax
    push   %eax
    push   %esi
    mov    0x88(%esp),%ebp
    push   %ebp
    call   func_583e6
    jmp    jump_1037d
  jump_10357:
    mov    0x44(%esp),%ebx
    mov    0x5c(%esp),%eax
    push   %ebx
    mov    0x44(%esp),%ecx
    mov    0xa7(%eax),%eax
    push   %ecx
    sar    $0x18,%eax
    push   %eax
    push   %esi
    mov    0x88(%esp),%esi
    push   %esi
  jump_10378:
    call   func_57efc
  jump_1037d:
    add    $0x14,%esp
    mov    0x5c(%esp),%ecx
    mov    $0x4,%ebx
    mov    $0x2,%edx
    mov    0x54(%ecx),%ecx
    mov    0x78(%esp),%eax
    sar    $0x10,%ecx
    mov    0x78(%esp),%esi
    call   func_4f228
    push   $0x0
    mov    $data_fd38a,%edi
    mov    0x60(%esp),%ecx
    push   $0xff
    mov    $0x7,%ebx
    mov    $0x12,%edx
    push   $0xf
    mov    $data_fd382,%eax
    add    $0x34,%ecx
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd8a,%dx
    call   func_1b084
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_103f9
    mov    $0xa4,%ebx
    mov    $data_80020,%edx
    call   func_25878
  jump_103f9:
    cmpl   $0xffffffff,0x50(%esp)
    je     jump_10434
    add    $0x80,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_1040a:
    mov    0x5c(%esp),%eax
    mov    0x54(%eax),%eax
    mov    %edi,%ecx
    sar    $0x10,%eax
    mov    %ebp,%edx
    push   %eax
    inc    %esi
    xor    %ebx,%ebx
    push   $0x11
    mov    0x80(%esp),%eax
    add    $0x5,%edi
    call   func_4f2a8
    cmp    $0xa,%esi
    jl     jump_10448
    jmp    jump_1044e
  jump_10434:
    mov    0x5c(%esp),%eax
    mov    $0x12,%edi
    call   func_45dbc
    xor    %esi,%esi
    mov    %eax,0x54(%esp)
  jump_10448:
    cmp    0x54(%esp),%esi
    jl     jump_1040a
  jump_1044e:
    mov    0x5c(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x14(%esp)
    mov    0x5c(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x18(%esp)
    mov    0x5c(%esp),%eax
    mov    0x10(%eax),%eax
    mov    %eax,0x1c(%esp)
    mov    0x5c(%esp),%eax
    mov    $0x1f,%edx
    mov    %esp,%edi
    mov    0x20(%eax),%eax
    mov    0x78(%esp),%esi
    mov    %eax,0x20(%esp)
    mov    0x5c(%esp),%eax
    xor    %ebx,%ebx
    mov    %edx,0x74(%esp)
    mov    0x18(%eax),%eax
    mov    %ebx,0x68(%esp)
    mov    %eax,0x24(%esp)
    mov    %ebx,0x64(%esp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    jmp    jump_104c8
  jump_104a4:
    mov    0x74(%esp),%esi
    mov    0x64(%esp),%edi
    mov    0x68(%esp),%eax
    add    $0x9,%esi
    add    $0x4,%edi
    inc    %eax
    mov    %esi,0x74(%esp)
    mov    %edi,0x64(%esp)
    mov    %eax,0x68(%esp)
    cmp    $0x5,%eax
    jge    jump_1052d
  jump_104c8:
    mov    0x4(%esp),%eax
    inc    %eax
    mov    %eax,0xc(%esp)
    mov    0x64(%esp),%eax
    mov    0x14(%esp,%eax,1),%esi
    mov    $0x2,%edi
    test   %esi,%esi
    jle    jump_104fa
    lea    0x0(,%esi,8),%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x2,%edx
    sbb    %edx,%eax
    sar    $0x2,%eax
    add    %eax,0xc(%esp)
  jump_104fa:
    mov    0x68(%esp),%eax
    inc    %eax
    xor    %esi,%esi
    mov    %eax,0x70(%esp)
  jump_10505:
    mov    0x74(%esp),%ebx
    push   %ebx
    push   %edi
    mov    0x78(%esp),%ecx
    push   %ecx
    push   %ebp
    lea    0x10(%esp),%eax
    push   %eax
    inc    %esi
    add    $0x8,%edi
    call   func_57efc
    add    $0x14,%esp
    cmp    $0xf,%esi
    jge    jump_104a4
    jmp    jump_10505
  jump_1052d:
    mov    0x5c(%esp),%eax
    mov    0x8c(%eax),%eax
    mov    %eax,0x28(%esp)
    mov    0x5c(%esp),%eax
    mov    0x88(%eax),%eax
    mov    $0x2,%ebx
    mov    %eax,0x2c(%esp)
    mov    0x5c(%esp),%eax
    mov    $0x5,%ecx
    mov    $0x7c,%edi
    mov    0x98(%eax),%eax
    xor    %esi,%esi
    mov    %eax,0x38(%esp)
    mov    0x5c(%esp),%eax
    mov    %esi,0x6c(%esp)
    call   func_45dec
    mov    %eax,0x3c(%esp)
    mov    %ebx,0x30(%esp)
    mov    $0x82,%eax
    mov    %ecx,0x34(%esp)
    mov    %eax,0x60(%esp)
    jmp    jump_10639
  jump_1058f:
    cmp    %edx,%ebx
    jle    jump_1059d
    mov    %edx,%eax
    mov    0x6c(%esp),%edx
    mov    %eax,0x28(%esp,%edx,1)
  jump_1059d:
    mov    0x6c(%esp),%eax
    xor    %esi,%esi
    mov    %eax,0x7c(%esp)
    jmp    jump_105cf
  jump_105a9:
    shl    $0x3,%eax
    add    $0x9,%eax
    push   %eax
    mov    0x80(%esp),%eax
    push   %edi
    mov    0x38(%esp,%eax,1),%edx
    push   %edx
    push   %ebp
    mov    0x88(%esp),%ebx
    push   %ebx
    inc    %esi
    call   func_57efc
    add    $0x14,%esp
  jump_105cf:
    movswl %si,%eax
    cmp    $0x9,%eax
    jl     jump_105a9
    mov    0x7c(%esp),%eax
    imul   $0x48,0x28(%esp,%eax,1),%edx
    mov    0x7c(%esp),%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idivl  0x38(%esp,%ebx,1)
    mov    $0x50,%edx
    sub    %eax,%edx
    mov    %edx,%eax
    xor    %edx,%edx
    push   $0xffffffff
    mov    0x5c(%esp),%dl
    push   %edx
    mov    $0x8,%ebx
    mov    0x68(%esp),%ecx
    push   %eax
    mov    %edi,%edx
    mov    0x84(%esp),%eax
    call   func_2b254
  jump_10617:
    mov    0x60(%esp),%ecx
    mov    0x6c(%esp),%esi
    add    $0x8,%edi
    add    $0x8,%ecx
    add    $0x4,%esi
    mov    %ecx,0x60(%esp)
    mov    %esi,0x6c(%esp)
    cmp    $0x8,%esi
    je     jump_1014d
  jump_10639:
    mov    0x6c(%esp),%eax
    mov    0x38(%esp,%eax,1),%edx
    test   %edx,%edx
    jle    jump_10617
    mov    0x28(%esp,%eax,1),%ebx
    test   %ebx,%ebx
    jge    jump_1058f
    xor    %esi,%esi
    mov    %esi,0x28(%esp,%eax,1)
    mov    0x6c(%esp),%eax
    xor    %esi,%esi
    mov    %eax,0x7c(%esp)
    jmp    jump_105cf


/*----------------------------------------------------------------*/
func_10668:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x60,%esp
    mov    %eax,%ebp
    mov    %edx,0x5c(%esp)
    mov    %ebx,0x58(%esp)
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd7c,%dx
    call   func_1b084
    mov    %eax,%edi
    test   %eax,%eax
    jne    jump_106a0
    mov    $0xea,%ebx
    mov    $data_8002e,%edx
    call   func_25878
  jump_106a0:
    mov    0x5c(%esp),%esi
    test   %ecx,%ecx
    je     jump_106d3
    cmpl   $0x0,0x58(%esp)
    jne    jump_106d3
    movsbl (%esi),%eax
    imul   $0x6a,%eax,%eax
    mov    data_f653f(%eax),%ax
    xor    %ah,%ah
    and    $0x80,%al
    cwtl
    test   %eax,%eax
    jne    jump_106d3
    push   $0x96
    push   %ebp
    call   func_59d90
    add    $0x8,%esp
  jump_106d3:
    cmpb   $0xff,(%esi)
    jne    jump_106e9
    mov    $0xfb,%ebx
    mov    $data_8003c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_106e9:
    lea    0x50(%esp),%eax
    lea    0x54(%esp),%ecx
    mov    %edi,%edx
    push   %eax
    movsbl (%esi),%ebx
    mov    %ebp,%eax
    call   func_2b320
    mov    0x58(%esp),%ebx
    cmp    $0x2,%ebx
    je     jump_1070c
    cmp    $0x3,%ebx
    jne    jump_10736
  jump_1070c:
    mov    data_c8c33,%eax
    add    $0x700,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    mov    0x50(%esp),%ebx
    push   %ebx
    mov    0x58(%esp),%ecx
    push   %ecx
    movsbl (%esi),%eax
    push   %eax
    push   %edi
    push   %ebp
    call   func_583e6
    jmp    jump_1074b
  jump_10736:
    mov    0x50(%esp),%eax
    push   %eax
    mov    0x58(%esp),%edx
    push   %edx
    movsbl (%esi),%eax
    push   %eax
    push   %edi
    push   %ebp
    call   func_57efc
  jump_1074b:
    add    $0x14,%esp
    cmpl   $0x0,0x3(%esi)
    je     jump_107b4
    movsbl (%esi),%eax
    imul   $0x6a,%eax,%eax
    mov    data_f653f(%eax),%ax
    xor    %ah,%ah
    and    $0x20,%al
    cwtl
    test   %eax,%eax
    je     jump_107b4
    movzbl data_f458e,%edi
    mov    %edi,%eax
    shl    $0x5,%eax
    sub    %edi,%eax
    shl    $0x3,%eax
    sub    %edi,%eax
    mov    data_92e18(,%eax,2),%al
    shl    $0x2,%al
    push   $0x0
    add    $0x13,%al
    and    $0xff,%eax
    mov    0x8(%ebp),%edx
    push   %eax
    mov    0x10(%ebp),%eax
    sub    %edx,%eax
    dec    %eax
    mov    0x4(%ebp),%ebx
    push   %eax
    mov    0xc(%ebp),%eax
    sub    %ebx,%eax
    mov    $0x1,%ebx
    lea    -0x1(%eax),%ecx
    mov    %ebx,%edx
    mov    %ebp,%eax
    call   func_2b254
  jump_107b4:
    movsbl (%esi),%eax
    imul   $0x6a,%eax,%eax
    add    $data_f650c,%eax
    push   %eax
    push   $data_8004a
    lea    0x8(%esp),%eax
    push   %eax
    call   func_720c9
    movzbl data_f458e,%esi
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    add    $0xc,%esp
    mov    data_92e18(,%eax,2),%al
    push   $0x0
    xor    %ah,%ah
    lea    0x4(%esp),%ecx
    shl    $0x2,%eax
    mov    $0x2,%ebx
    add    $0x13,%eax
    push   $0xff
    cwtl
    mov    $0x5,%edx
    push   %eax
    mov    $data_fd38a,%edi
    mov    %ebp,%esi
    push   $0x0
    mov    $data_fd382,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    0x58(%esp),%ecx
    cmp    $0x2,%ecx
    jne    jump_10832
    xor    %eax,%eax
    jmp    jump_1083c
  jump_10832:
    cmp    $0x3,%ecx
    jne    jump_1086e
    mov    $0x1,%eax
  jump_1083c:
    call   func_1ce70
    push   $0x0
    mov    $0xc,%ebx
    mov    $0x5,%edx
    push   $0xff
    mov    $data_fd38a,%edi
    mov    %ebp,%esi
    push   $0xf
    mov    %eax,%ecx
    mov    $data_fd382,%eax
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_1086e:
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_10878:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x5c,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,0x58(%esp)
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd80,%dx
    call   func_1b084
    mov    %eax,%edi
    test   %eax,%eax
    jne    jump_108ae
    mov    $0x122,%ebx
    mov    $data_8004d,%edx
    call   func_25878
  jump_108ae:
    test   %ecx,%ecx
    je     jump_108c7
    cmpl   $0x0,0x58(%esp)
    jne    jump_108c7
    push   $0x96
    push   %ebp
    call   func_59d90
    add    $0x8,%esp
  jump_108c7:
    lea    0x54(%esp),%eax
    lea    0x50(%esp),%ecx
    mov    %edi,%edx
    xor    %ebx,%ebx
    push   %eax
    mov    0x1(%esi),%bl
    mov    %ebp,%eax
    call   func_2b320
    cmpl   $0x1,0x58(%esp)
    jne    jump_10911
    mov    data_c8c33,%eax
    add    $0x700,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    mov    0x54(%esp),%edx
    push   %edx
    mov    0x54(%esp),%ebx
    xor    %eax,%eax
    push   %ebx
    mov    0x1(%esi),%al
    push   %eax
    push   %edi
    push   %ebp
    call   func_583e6
    jmp    jump_10928
  jump_10911:
    mov    0x54(%esp),%ecx
    push   %ecx
    mov    0x54(%esp),%eax
    push   %eax
    xor    %eax,%eax
    mov    0x1(%esi),%al
    push   %eax
    push   %edi
    push   %ebp
    call   func_57efc
  jump_10928:
    add    $0x14,%esp
    movzbl 0x1(%esi),%esi
    lea    0x0(,%esi,4),%eax
    add    %esi,%eax
    shl    $0x3,%eax
    add    $data_f3e40,%eax
    add    $0xa,%eax
    push   %eax
    push   $data_8005b
    lea    0x8(%esp),%eax
    push   %eax
    call   func_720c9
    movzbl data_f458e,%esi
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    add    $0xc,%esp
    mov    data_92e18(,%eax,2),%al
    push   $0x0
    xor    %ah,%ah
    lea    0x4(%esp),%ecx
    shl    $0x2,%eax
    mov    $0x2,%ebx
    add    $0x13,%eax
    push   $0xff
    cwtl
    mov    $0x5,%edx
    push   %eax
    mov    $data_fd38a,%edi
    mov    %ebp,%esi
    push   $0x0
    mov    $data_fd382,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    cmpl   $0x1,0x58(%esp)
    jne    jump_10a0a
    movzbl data_f458e,%esi
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    mov    data_92e18(,%eax,2),%al
    xor    %ah,%ah
    mov    $0xc,%ebx
    mov    %eax,%edx
    xor    %eax,%eax
    shl    $0x2,%edx
    call   func_1ce70
    push   $0x0
    mov    $data_fd38a,%edi
    add    $0x13,%edx
    push   $0xff
    movswl %dx,%edx
    mov    %ebp,%esi
    push   %edx
    mov    %eax,%ecx
    mov    $data_fd382,%eax
    push   $0x0
    mov    $0x5,%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_10a0a:
    add    $0x5c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_10a14:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ebx
    mov    0x4(%ebx),%ecx
    mov    0x4(%edx),%esi
    mov    $0xffffffff,%eax
    cmp    %esi,%ecx
    jle    jump_10a31
    mov    $0x1,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_10a31:
    jne    jump_10a35
    xor    %eax,%eax
  jump_10a35:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_10a3c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_2bf10
    lea    0xc8(%eax),%edx
    movl   $0x0,(%edx)
    sub    $0xc8,%edx
    movl   $0x0,0xcc(%edx)
    movl   $0x0,0xd0(%edx)
    mov    %edx,%eax
    movl   $data_85850,0xa7(%edx)
    call   func_10ac4
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_10a80:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_10a9f
    mov    $data_8583c,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_10a9f:
    mov    $0x1,%edx
    movl   $data_85850,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_10abf
    call   func_72124
  jump_10abf:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_10ac4:
/*----------------------------------------------------------------*/
    movb   $0x0,0xab(%eax)
    movl   $0x0,0xac(%eax)
    movb   $0x0,0xb0(%eax)
    movl   $0x0,0xb1(%eax)
    movl   $0x0,0xb5(%eax)
    movb   $0x0,0xb9(%eax)
    movl   $0x0,0xbf(%eax)
    ret

vtable_10b04:
    .long   func_11349
    .long   func_1143d
    .long   func_115d1
    .long   func_11349

vtable_10b14:
    .long   func_1169d
    .long   func_11635
    .long   func_11672
    .long   func_1169d


/*----------------------------------------------------------------*/
func_10b24:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8c,%esp
    mov    %eax,%ebp
    mov    %edx,%edi
    mov    %ebx,0x84(%esp)
    mov    %ecx,%esi
    mov    %edx,%eax
    cmp    $0x327,%dx
    jb     jump_116fc
    jbe    jump_10de8
    cmp    $0x32b,%dx
    jb     jump_116c5
    jbe    jump_10d76
    cmp    $0x32d,%dx
    jb     jump_10d9c
    jbe    jump_10dc2
    cmp    $0x1c01,%dx
    jb     jump_10b8b
    jbe    jump_1130f
    cmp    $0x1c02,%dx
    je     jump_116ac
  jump_10b8b:
    mov    0x84(%esp),%ebx
    movswl %di,%edx
    mov    %esi,%ecx
    mov    %ebp,%eax
    call   func_2eb04
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10ba8:
    mov    $data_8005e,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,0xbb(%ebp)
    test   %eax,%eax
    jne    jump_10bd2
    mov    $0x184,%ebx
    mov    $data_80069,%edx
    call   func_25878
  jump_10bd2:
    mov    $data_80077,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,0xb5(%ebp)
    test   %eax,%eax
    jne    jump_10bfc
    mov    $0x187,%ebx
    mov    $data_80082,%edx
    call   func_25878
  jump_10bfc:
    mov    0xb5(%ebp),%eax
    movl   $0x0,0xab(%eax)
    xor    %edx,%edx
    mov    0xb5(%ebp),%eax
    call   func_2e0ac
    mov    0xb5(%ebp),%eax
    movb   $0x0,0xc5(%eax)
    mov    0xb5(%ebp),%eax
    lea    0xda(%ebp),%edx
    call   func_2e42c
    movl   $0xffffffff,0x39(%ebp)
    mov    data_c3504,%ebx
    movl   $0xffffffff,0x35(%ebp)
    mov    %ebx,%eax
    movl   $0x0,0xbf(%ebp)
    call   func_1d6f4
    movw   $0x0,0xd4(%ebp)
    movl   $0x0,0x104(%ebp)
    xor    %edx,%edx
    mov    %eax,0xd6(%ebp)
    xor    %eax,%eax
    mov    0x15(%ebx),%dl
    mov    0x14(%ebx),%al
    mov    data_f458e,%cl
    or     %edx,%eax
    mov    $0x1,%edx
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_10c9b
    movb   $0x1,0xb9(%ebp)
    jmp    jump_10ca2
  jump_10c9b:
    movb   $0x4,0xb9(%ebp)
  jump_10ca2:
    movb   $0x0,0xba(%ebp)
    xor    %eax,%eax
    jmp    jump_10cb9
  jump_10cad:
    inc    %eax
    movl   $0xffffffff,0xe8(%ebp,%edx,4)
  jump_10cb9:
    movswl %ax,%edx
    cmp    0xd6(%ebp),%edx
    jl     jump_10cad
    mov    0x84(%esp),%ebx
    movswl %di,%edx
    mov    %esi,%ecx
    mov    %ebp,%eax
    call   func_2c938
    mov    %ebp,%eax
    call   func_12140
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
  jump_10ceb:
    xor    %eax,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10cf7:
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10d10:
    cmpb   $0x1,0xb9(%ebp)
    je     jump_10d34
    mov    %ebp,%eax
    movb   $0x1,0xb9(%ebp)
    call   func_12140
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
  jump_10d34:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10d43:
    cmpb   $0x4,0xb9(%ebp)
    je     jump_10d67
    mov    %ebp,%eax
    movb   $0x4,0xb9(%ebp)
    call   func_12140
    mov    %ebp,%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_10d67:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10d76:
    cmpb   $0x1,0xba(%ebp)
    je     jump_10d8d
    mov    %ebp,%eax
    movb   $0x1,0xba(%ebp)
    call   func_11ba4
  jump_10d8d:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10d9c:
    cmpb   $0x4,0xba(%ebp)
    je     jump_10db3
    mov    %ebp,%eax
    movb   $0x4,0xba(%ebp)
    call   func_11ba4
  jump_10db3:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10dc2:
    cmpb   $0x5,0xba(%ebp)
    je     jump_10dd9
    mov    %ebp,%eax
    movb   $0x5,0xba(%ebp)
    call   func_11ba4
  jump_10dd9:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10de8:
    mov    0xbb(%ebp),%eax
    cmpb   $0x4,0xb7(%eax)
    je     jump_10ceb
    mov    data_c3504,%eax
    xor    %edx,%edx
    mov    0x15(%eax),%dl
    mov    0x14(%eax),%al
    and    $0xff,%eax
    mov    data_f458e,%cl
    or     %eax,%edx
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_10ceb
    cmpl   $0x0,0x104(%ebp)
    jne    jump_10ceb
    mov    0xd2(%ebp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_10ceb
    mov    $0xffffffff,%edx
    mov    %ebp,%eax
    call   func_1229c
    xor    %eax,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10e5a:
    mov    0xbb(%ebp),%eax
    cmpb   $0x4,0xb7(%eax)
    je     jump_10ceb
    mov    data_c3504,%eax
    xor    %edx,%edx
    mov    0x15(%eax),%dl
    mov    0x14(%eax),%al
    and    $0xff,%eax
    mov    data_f458e,%cl
    or     %edx,%eax
    mov    $0x1,%edx
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_10ceb
    cmpl   $0x0,0x104(%ebp)
    jne    jump_10ceb
    mov    0xd2(%ebp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_10ceb
    mov    $0xffffffff,%edx
    movw   $0xffff,0xd4(%ebp)
    mov    %ebp,%eax
    movl   $0xffffffff,0x104(%ebp)
    call   func_1229c
    xor    %eax,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10edf:
    mov    0xbb(%ebp),%eax
    cmpb   $0x4,0xb7(%eax)
    je     jump_10ceb
    mov    0xbf(%ebp),%edx
    test   %edx,%edx
    je     jump_10ceb
    cmpb   $0x4,0x58(%edx)
    jne    jump_10ceb
    mov    0xbf(%ebp),%eax
    mov    data_c3504,%ebx
    cmp    0x59(%eax),%ebx
    jne    jump_10ceb
    movb   $0x3,0xab(%ebp)
    movb   $0x0,0xb0(%ebp)
    mov    0xbf(%ebp),%eax
    movl   $0x0,0xb1(%ebp)
    mov    $0x326,%edx
    mov    %eax,0xac(%ebp)
    mov    %ebp,%eax
    mov    0xc4(%ebp),%ecx
    mov    0xc0(%ebp),%ebx
    mov    0xa7(%eax),%esi
    sar    $0x18,%ebx
    call   *0x8(%esi)
    xor    %eax,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10f6e:
    movb   $0x2,0xb9(%ebp)
  jump_10f75:
    mov    %ebp,%eax
    call   func_12140
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
  jump_10f89:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_10f98:
    movb   $0x3,0xb9(%ebp)
    jmp    jump_10f75
  jump_10fa1:
    movb   $0x1,0xb9(%ebp)
    jmp    jump_10f75
  jump_10faa:
    movb   $0x0,0xb0(%ebp)
    mov    0x84(%esp),%al
    movl   $0x0,0xb1(%ebp)
    mov    %al,0xab(%ebp)
    mov    0xab(%ebp),%al
    mov    %ecx,0xac(%ebp)
    cmp    $0x2,%al
    jb     jump_10fe0
    jbe    jump_10f98
    cmp    $0x3,%al
    je     jump_10f6e
    jmp    jump_10fe4
  jump_10fe0:
    test   %al,%al
    je     jump_10fa1
  jump_10fe4:
    mov    $0x263,%ebx
    mov    $data_80090,%edx
    xor    %eax,%eax
    call   func_25888
    jmp    jump_10f75
  jump_10ffa:
    xor    %ecx,%ecx
    mov    0xab(%ebp),%bh
    mov    %ecx,0xbf(%ebp)
    cmp    $0x3,%bh
    jne    jump_1112b
    cmpb   $0x0,0x84(%esp)
    jne    jump_11064
    jmp    jump_1112b
  jump_11020:
    mov    %bl,0x55(%esp)
    mov    %esi,0x56(%esp)
    jmp    jump_110b3
  jump_1102d:
    cmp    0xb0(%ebp),%bl
    jne    jump_11044
    xor    %bl,%bl
    mov    %esi,0x56(%esp)
    mov    %bl,0x55(%esp)
    jmp    jump_110b3
  jump_11044:
    xor    %dh,%dh
    mov    %esi,0x56(%esp)
    mov    %dh,0x55(%esp)
    jmp    jump_110b3
  jump_11050:
    cmp    0xb0(%ebp),%bl
    jne    jump_110b3
    mov    $0x2,%ah
    mov    %esi,0x56(%esp)
    mov    %ah,0x55(%esp)
    jmp    jump_110b3
  jump_11064:
    lea    0x50(%esp),%eax
    lea    0xa(%eax),%edx
    mov    %ecx,(%edx)
    mov    %ecx,0x4(%edx)
    lea    -0xa(%edx),%eax
    mov    %ecx,0x8(%edx)
    mov    %ecx,0x16(%eax)
    mov    %ecx,0x1a(%eax)
    mov    $0x1,%bl
    mov    %ecx,0x1e(%eax)
    add    $0x16,%eax
    mov    %bl,0x50(%esp)
    mov    0xb1(%ebp),%eax
    mov    $0x5,%bh
    mov    %eax,0x51(%esp)
    mov    0x84(%esp),%al
    mov    %bh,0x55(%esp)
    cmp    $0x3,%al
    jb     jump_110ab
    jbe    jump_1102d
    cmp    $0x4,%al
    je     jump_11050
    jmp    jump_110b3
  jump_110ab:
    cmp    $0x2,%al
    je     jump_11020
  jump_110b3:
    mov    0xac(%ebp),%edx
    mov    0x50(%esp),%al
    mov    %al,0x62(%edx)
    mov    0x51(%esp),%eax
    mov    %eax,0x63(%edx)
    mov    0x55(%esp),%al
    mov    %al,0x67(%edx)
    add    $0x62,%edx
    mov    0x56(%esp),%eax
    mov    %eax,0x6(%edx)
    lea    0xa(%edx),%ebx
    mov    0x5a(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x5e(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x62(%esp),%eax
    mov    %eax,0x8(%ebx)
    lea    0x16(%edx),%ebx
    mov    0x66(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x6a(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x6e(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    0x72(%esp),%eax
    mov    %eax,0x22(%edx)
    mov    0xac(%ebp),%eax
    xor    %edx,%edx
    call   func_45378
    mov    0xac(%ebp),%eax
    testb  $0x1,0x84(%eax)
    je     jump_1117a
    jmp    jump_11175
  jump_1112b:
    cmpb   $0x2,0xab(%ebp)
    jne    jump_1117a
    cmpb   $0x3,0x84(%esp)
    jne    jump_1117a
    mov    %esi,0x7c(%esp)
    mov    0xac(%ebp),%esi
    mov    0xb1(%ebp),%eax
    lea    0x6b(%esi),%edi
    lea    0x78(%esp),%esi
    mov    %eax,0x78(%esp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    xor    %edx,%edx
    mov    0xac(%ebp),%eax
    call   func_35060
    mov    0xac(%ebp),%eax
    testb  $0x1,0x73(%eax)
    je     jump_1117a
  jump_11175:
    mov    $0xffffffff,%ecx
  jump_1117a:
    mov    %ecx,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_11186:
    cmp    %dl,%al
    jne    jump_111a9
    mov    $0x1,%bh
    mov    %esi,0x6(%esp)
    mov    %bh,0x5(%esp)
    mov    0xac(%ebp),%eax
    movb   $0x3,0x5d(%eax)
    mov    0xac(%ebp),%eax
    mov    %esi,0x5e(%eax)
    jmp    jump_111df
  jump_111a9:
    cmp    $0x4,%al
    jne    jump_111df
    mov    %dl,0x5(%esp)
    mov    %esi,0x6(%esp)
    mov    0xac(%ebp),%eax
    movb   $0x1,0x5d(%eax)
    mov    data_c3504,%edx
    mov    (%esi),%eax
    cmp    %edx,%eax
    jne    jump_111d6
    mov    0xac(%ebp),%edx
    mov    0x4(%esi),%eax
    jmp    jump_111dc
  jump_111d6:
    mov    0xac(%ebp),%edx
  jump_111dc:
    mov    %eax,0x5e(%edx)
  jump_111df:
    mov    0xac(%ebp),%edx
    mov    (%esp),%al
    mov    %al,0x62(%edx)
    mov    0x1(%esp),%eax
    mov    %eax,0x63(%edx)
    mov    0x5(%esp),%al
    mov    %al,0x67(%edx)
    add    $0x62,%edx
    mov    0x6(%esp),%eax
    mov    %eax,0x6(%edx)
    lea    0xa(%edx),%ebx
    mov    0xa(%esp),%eax
    mov    %eax,(%ebx)
    mov    0xe(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x12(%esp),%eax
    mov    %eax,0x8(%ebx)
    lea    0x16(%edx),%ebx
    mov    0x16(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x1a(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x1e(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    0x22(%esp),%eax
    mov    %eax,0x22(%edx)
    mov    0xac(%ebp),%eax
    xor    %edx,%edx
    call   func_45378
    mov    0xac(%ebp),%eax
    testb  $0x8,0x84(%eax)
    jne    jump_112cc
    mov    %eax,0xbf(%ebp)
    mov    %ecx,0xc4(%ebp)
    mov    0x88(%esp),%al
    mov    %al,0xc3(%ebp)
    jmp    jump_112cc
  jump_11273:
    movb   $0x1,(%esp)
    mov    0xb1(%ebp),%eax
    xor    %bh,%bh
    mov    %eax,0x1(%esp)
    mov    %bh,0x5(%esp)
    mov    0xac(%ebp),%eax
    mov    %eax,0x6(%esp)
    jmp    jump_112cc
  jump_11293:
    cmp    $0x2,%cl
    jne    jump_112cc
    cmp    0xb0(%ebp),%cl
    je     jump_112b1
    mov    $0x33b,%ebx
    mov    $data_800c8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_112b1:
    cmpb   $0x3,0x84(%esp)
    je     jump_112cc
    mov    $0x33c,%ebx
    mov    $data_800d6,%edx
    xor    %eax,%eax
    call   func_25878
  jump_112cc:
    mov    %ebp,%eax
    movb   $0x1,0xb9(%ebp)
    call   func_12140
    movb   $0x0,0xb0(%ebp)
    xor    %edx,%edx
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    movl   $0x0,0xb1(%ebp)
    call   *0xc(%ebx)
    mov    0xbb(%ebp),%eax
    call   func_12674
    xor    %eax,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_1130f:
    mov    0xbb(%ebp),%eax
    cmpb   $0x4,0xb7(%eax)
    je     jump_10ceb
    mov    0xb9(%ebp),%al
    dec    %al
    movl   $0x0,0xbf(%ebp)
    cmp    $0x3,%al
    ja     jump_10f89
    and    $0xff,%eax
    jmp    *%cs:vtable_10b04(,%eax,4)


/*----------------------------------------------------------------*/
func_11349:
/*----------------------------------------------------------------*/
    cmp    $0x4,%esi
    jne    jump_113e6
    xor    %edx,%edx
    mov    0xb5(%ebp),%eax
    mov    0x84(%esp),%dx
    call   func_2e384
    test   $0x80000000,%eax
    je     jump_1137e
    movb   $0x2,0xab(%ebp)
    movb   $0x3,0xb9(%ebp)
    jmp    jump_1138c
  jump_1137e:
    movb   $0x3,0xab(%ebp)
    movb   $0x2,0xb9(%ebp)
  jump_1138c:
    mov    $0x53,%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_12140
    mov    0x84(%esp),%dx
    mov    0xb5(%ebp),%eax
    xor    %ecx,%ecx
    call   func_2e3f4
    push   $0x0
    mov    0xbb(%ebp),%edx
    mov    %eax,0xac(%ebp)
    mov    $data_fa35c,%eax
    mov    0x41(%edx),%edx
    call   func_520f4
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_113e6:
    xor    %edx,%edx
    mov    0xb5(%ebp),%eax
    mov    0x84(%esp),%dx
    call   func_2e3f4
    mov    0xbb(%ebp),%ebx
    mov    %eax,%edx
    mov    %ebx,%eax
    call   func_12ae4
    test   %eax,%eax
    je     jump_10f89
    mov    0xbb(%ebp),%ebx
    mov    %eax,%edx
    mov    %ebx,%eax
    call   func_17e88
    mov    0xbb(%ebp),%eax
    xor    %edx,%edx
    call   func_18c2c
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_1143d:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    mov    0x84(%esp),%bx
    mov    0xb5(%ebp),%eax
    mov    %ebx,%edx
    call   func_2e384
    test   %eax,%eax
    jne    jump_10f89
    mov    %ebx,%edx
    mov    0xb5(%ebp),%eax
    call   func_2e3f4
    mov    (%eax),%cl
    mov    %eax,%esi
    cmp    $0xff,%cl
    jne    jump_11483
    mov    $0x39c,%ebx
    mov    $data_800e4,%edx
    xor    %eax,%eax
    call   func_25878
  jump_11483:
    movsbl %cl,%eax
    imul   $0x6a,%eax,%eax
    add    $data_f650c,%eax
    mov    0x33(%eax),%dx
    xor    %dh,%dh
    and    $0x80,%dl
    movswl %dx,%edx
    mov    0xac(%ebp),%ebx
    test   %edx,%edx
    jne    jump_10f89
    mov    0x33(%eax),%dx
    xor    %dh,%dh
    and    $0x20,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_114c6
    mov    %esi,%edx
    mov    %ebx,%eax
    call   func_452c8
    jmp    jump_115b2
  jump_114c6:
    movb   $0x1,0xb0(%ebp)
    mov    %esi,0xb1(%ebp)
    mov    0x33(%eax),%ax
    xor    %ah,%ah
    and    $0x40,%al
    cwtl
    test   %eax,%eax
    je     jump_11597
    lea    0x28(%esp),%eax
    add    $0xa,%eax
    mov    %edx,(%eax)
    mov    %edx,0x4(%eax)
    mov    %edx,0x8(%eax)
    mov    %edx,0xc(%eax)
    mov    %edx,0x10(%eax)
    mov    %edx,0x14(%eax)
    mov    $0x1,%dh
    add    $0xc,%eax
    mov    %dh,0x28(%esp)
    mov    0xb1(%ebp),%eax
    mov    $0x5,%bl
    mov    %eax,0x29(%esp)
    mov    %bl,0x2d(%esp)
    mov    0xac(%ebp),%edx
    add    $0x62,%edx
    movb   $0x1,(%edx)
    mov    0x29(%esp),%eax
    mov    %eax,0x1(%edx)
    mov    0x2d(%esp),%al
    mov    %al,0x5(%edx)
    mov    0x2e(%esp),%eax
    mov    %eax,0x6(%edx)
    lea    0xa(%edx),%ebx
    mov    0x32(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x36(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x3a(%esp),%eax
    mov    %eax,0x8(%ebx)
    lea    0x16(%edx),%ebx
    mov    0x3e(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x42(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x46(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    0x4a(%esp),%eax
    mov    %eax,0x22(%edx)
    movb   $0x0,0xb0(%ebp)
    movl   $0x0,0xb1(%ebp)
    mov    %ebp,%eax
    movb   $0x1,0xb9(%ebp)
    call   func_12140
    mov    0xbb(%ebp),%eax
    call   func_12674
    jmp    jump_115b2
  jump_11597:
    mov    $0x51,%ebx
    push   %edx
    mov    0xbb(%ebp),%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_520f4
  jump_115b2:
    mov    0xa7(%ebp),%ebx
    mov    $0x1c01,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_115d1:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    mov    0x84(%esp),%bx
    mov    0xb5(%ebp),%eax
    mov    %ebx,%edx
    call   func_2e384
    test   %eax,%eax
    jne    jump_10f89
    mov    %ebx,%edx
    mov    0xb5(%ebp),%eax
    call   func_2e3f4
    xor    %ecx,%ecx
    push   $0x0
    movb   $0x2,0xb0(%ebp)
    mov    $0x51,%ebx
    mov    0xbb(%ebp),%edx
    mov    %eax,0xb1(%ebp)
    mov    $data_fa35c,%eax
    mov    0x41(%edx),%edx
    call   func_520f4
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_11635:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    0xb5(%ebp),%eax
    mov    0x84(%esp),%dx
    mov    $0x4,%ecx
    call   func_2e3f4
    mov    (%eax),%al
    mov    $0x5,%edx
    movsbl %al,%ebx
    mov    $data_fa35c,%eax
    call   func_51f24
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_11672:
/*----------------------------------------------------------------*/
    mov    $0x5,%ecx
    xor    %edx,%edx
    mov    0xb5(%ebp),%eax
    mov    0x84(%esp),%dx
    xor    %ebx,%ebx
    call   func_2e3f4
    mov    %ecx,%edx
    mov    0x1(%eax),%bl
    mov    $data_fa35c,%eax
    call   func_51f24


/*----------------------------------------------------------------*/
func_1169d:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_116ac:
    mov    0xb9(%ebp),%al
    dec    %al
    cmp    $0x3,%al
    ja     func_1169d
    and    $0xff,%eax
    jmp    *%cs:vtable_10b14(,%eax,4)
  jump_116c5:
    cmp    $0x329,%dx
    jb     jump_10e5a
    jbe    jump_10edf
    cmpb   $0x0,0xba(%ebp)
    je     jump_116ed
    mov    %ebp,%eax
    movb   $0x0,0xba(%ebp)
    call   func_11ba4
  jump_116ed:
    mov    $0xffffffff,%eax
    add    $0x8c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_116fc:
    cmp    $0x322,%dx
    jb     jump_11844
    jbe    jump_10ffa
    cmp    $0x325,%dx
    jb     jump_11834
    jbe    jump_10d43
    movl   $0x0,0xbf(%ebp)
    test   %ebx,%ebx
    jne    jump_1173d
    mov    $0x2e1,%ebx
    mov    $data_8009e,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1173d:
    test   %esi,%esi
    jne    jump_11752
    mov    $0x2e2,%ebx
    mov    $data_800ac,%edx
    xor    %eax,%eax
    call   func_25878
  jump_11752:
    mov    0xd2(%ebp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_11770
    mov    $0x2e4,%ebx
    mov    $data_800ba,%edx
    xor    %eax,%eax
    call   func_25878
  jump_11770:
    mov    0xab(%ebp),%cl
    cmp    $0x3,%cl
    jne    jump_11293
    mov    %esp,%eax
    add    $0xa,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    mov    $0x2,%dl
    movl   $0x0,(%eax)
    mov    %dl,(%esp)
    mov    0xac(%ebp),%eax
    movb   $0x0,0x5d(%eax)
    mov    0xb0(%ebp),%dh
    mov    %esi,%ecx
    test   %dh,%dh
    jne    jump_11273
    mov    0x84(%esp),%al
    mov    %dh,(%esp)
    mov    %al,0x88(%esp)
    cmp    $0x5,%al
    jne    jump_11186
    movb   $0x3,0x5(%esp)
    mov    (%esi),%eax
    mov    %eax,0xa(%esp)
    mov    0x4(%esi),%eax
    mov    %eax,0xe(%esp)
    mov    0x8(%esi),%eax
    mov    %eax,0x12(%esp)
    lea    0xc8(%ebp),%eax
    mov    (%esi),%edx
    mov    %edx,(%eax)
    mov    %eax,%ecx
    mov    0x4(%esi),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%esi),%edx
    mov    %edx,0x8(%eax)
    mov    0xac(%ebp),%eax
    movb   $0x7,0x5d(%eax)
    mov    0xac(%ebp),%eax
    movl   $0x0,0x5e(%eax)
    jmp    jump_111df
  jump_11834:
    cmp    $0x324,%dx
    je     jump_10d10
    jmp    jump_10b8b
  jump_11844:
    cmp    $0xd,%dx
    jb     jump_11860
    jbe    jump_10cf7
    cmp    $0x320,%dx
    je     jump_10faa
    jmp    jump_10b8b
  jump_11860:
    cmp    $0x1,%dx
    je     jump_10ba8
    jmp    jump_10b8b


/*----------------------------------------------------------------*/
func_11870:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x6c,%esp
    mov    %eax,%ebp
    cmp    $0x1c01,%edx
    je     jump_11887
    call   func_11ba4
  jump_11887:
    lea    0x50(%esp),%edi
    mov    $0x1d2,%edx
    mov    $0x27f,%ecx
    lea    0x4(%ebp),%esi
    lea    0x50(%esp),%eax
    xor    %ebx,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %ebx
    mov    $0x8d,%esi
    mov    %edx,0x58(%esp)
    mov    %ebx,0x5c(%esp)
    push   %eax
    mov    %ecx,0x64(%esp)
    mov    %esi,0x68(%esp)
    call   func_59d90
    mov    $0xa,%esi
    mov    0xb9(%ebp),%ah
    add    $0x8,%esp
    cmp    $0x2,%ah
    je     jump_118d7
    cmp    $0x3,%ah
    jne    jump_11943
  jump_118d7:
    mov    0xb5(%ebp),%esi
    lea    0x28(%esp),%edi
    lea    0x4(%esi),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movl   $0x7,0x30(%esp)
    mov    0xb5(%ebp),%eax
    mov    0x8c9(%eax),%ax
    and    $0xffff,%eax
    add    $0x8,%eax
    mov    %eax,0x38(%esp)
    cmpb   $0x2,0xb9(%ebp)
    jne    jump_11928
    lea    0x28(%esp),%eax
    mov    0xac(%ebp),%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    $0xb,%esi
    jmp    jump_1193e
  jump_11928:
    mov    $0xffffffff,%ebx
    lea    0x28(%esp),%eax
    mov    0xac(%ebp),%edx
    xor    %ecx,%ecx
    mov    $0x13,%esi
  jump_1193e:
    call   func_10010
  jump_11943:
    push   $0x0
    push   $0x0
    xor    %edx,%edx
    push   %esi
    mov    $data_11f10c,%eax
    mov    0x18(%ebp),%dx
    call   func_1b084
    push   %eax
    lea    0x60(%esp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_2c8f8
    lea    0x50(%esp),%edx
    mov    $data_fa35c,%eax
    call   func_50690
    mov    0xb9(%ebp),%bl
    cmp    $0x1,%bl
    je     jump_11991
    cmp    $0x4,%bl
    jne    jump_11b88
  jump_11991:
    lea    0x3c(%esp),%edi
    mov    $0x1da,%eax
    push   $0x0
    mov    $0x7,%edx
    mov    $0x278,%ebx
    push   $0x3333
    lea    0x4(%ebp),%esi
    mov    $0x25,%ecx
    push   $0x3333
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    mov    %eax,0x50(%esp)
    mov    %edx,0x54(%esp)
    push   $data_c8c44
    mov    %ebx,0x5c(%esp)
    mov    %ecx,0x60(%esp)
    push   $0xf
    mov    data_c3504,%eax
    mov    0xbb(%ebp),%edx
    push   $0xf
    mov    (%eax),%esi
    mov    0x19c8(%edx),%dx
    push   %esi
    mov    $data_11f10c,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    lea    0x60(%esp),%eax
    push   %eax
    call   func_589f1
    mov    $0xf3,%edx
    mov    $0xffffffff,%ebx
    mov    data_93b98,%cx
    add    $0x28,%esp
    xor    %eax,%eax
    mov    %dx,0x68(%esp)
    mov    %bx,0x64(%esp)
    test   %cx,%cx
    jg     jump_11a3e
    jmp    jump_11a83
  jump_11a2f:
    mov    data_93b98,%si
    inc    %eax
    cmp    %si,%ax
    jl     jump_11a44
    jmp    jump_11a83
  jump_11a3e:
    mov    data_c3504,%ebx
  jump_11a44:
    movswl %ax,%esi
    imul   $0x1ee,%esi,%esi
    cmpl   $0xffffffff,data_92e19(%esi)
    je     jump_11a2f
    mov    0x14(%ebx),%cl
    test   %cl,%cl
    je     jump_11a2f
    mov    $0x1,%edx
    movzbl %cl,%edi
    movswl %ax,%ecx
    shl    %cl,%edx
    mov    %edi,%ecx
    or     %edx,%ecx
    cmp    %edx,%ecx
    je     jump_11a7e
    cmp    data_92e1d(%esi),%ebx
    jne    jump_11a2f
    test   %edx,%edi
    je     jump_11a2f
  jump_11a7e:
    mov    %ax,0x64(%esp)
  jump_11a83:
    mov    0x62(%esp),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_11ac7
    movswl %ax,%ecx
    mov    %ecx,%edx
    shl    $0x5,%edx
    sub    %ecx,%edx
    shl    $0x3,%edx
    sub    %ecx,%edx
    xor    %eax,%eax
    mov    data_92e18(,%edx,2),%al
    shl    $0x2,%eax
    mov    $0x3,%ebx
    add    $0x13,%eax
    mov    $0x8d,%edx
    mov    %ax,0x68(%esp)
    lea    0x3c(%esp),%eax
    call   func_4f228
  jump_11ac7:
    mov    data_c3504,%eax
    add    $0x1c,%eax
    push   %eax
    push   $data_800f2
    lea    0x8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    lea    0x3c(%esp),%esi
    push   $0x6c
    lea    0x4(%esp),%ecx
    mov    0x6a(%esp),%eax
    push   $0xff
    sar    $0x10,%eax
    mov    $0x5,%ebx
    push   %eax
    mov    $0x28,%edx
    mov    $data_fd3aa,%edi
    push   $0x0
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    data_c3504,%eax
    mov    (%eax),%eax
    lea    0x0(,%eax,4),%edx
    add    %eax,%edx
    mov    $data_c8368,%eax
    shl    $0x2,%edx
    add    %edx,%eax
    push   %eax
    push   $data_800f5
    lea    0x8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    push   $0x6c
    lea    0x40(%esp),%esi
    mov    $data_fd38a,%edi
    push   $0xff
    lea    0x8(%esp),%ecx
    mov    $0x12,%ebx
    push   $0xf3
    mov    $0x28,%edx
    mov    $data_fd382,%eax
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    lea    0x3c(%esp),%edx
    mov    $data_fa35c,%eax
    call   func_50690
  jump_11b88:
    add    $0x6c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret

vtable_11b94:
    .long   func_11bda
    .long   func_11d16
    .long   func_11f0a
    .long   func_12067


/*----------------------------------------------------------------*/
func_11ba4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x384,%esp
    mov    %eax,%esi
    mov    0xb5(%eax),%eax
    call   func_2e42c
    mov    0xb9(%esi),%al
    dec    %al
    cmp    $0x3,%al
    ja     jump_11cf8
    and    $0xff,%eax
    jmp    *%cs:vtable_11b94(,%eax,4)


/*----------------------------------------------------------------*/
func_11bda:
/*----------------------------------------------------------------*/
    mov    0xb5(%esi),%eax
    movw   $0x54,0x8c9(%eax)
    mov    $func_10010,%edx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2e8a8
    mov    %esp,%edx
    mov    data_c3504,%eax
    mov    %cx,0x37c(%esp)
    call   func_1d754
    mov    %eax,%ebp
    jmp    jump_11c1b
  jump_11c13:
    incw   0x37c(%esp)
  jump_11c1b:
    mov    0x37a(%esp),%edi
    sar    $0x10,%edi
    cmp    %ebp,%edi
    jge    jump_11c8f
    mov    (%esp,%edi,4),%edi
    cmpb   $0x4,0x58(%edi)
    jne    jump_11c13
    mov    0x54(%edi),%eax
    sar    $0x10,%eax
    cmp    $0x7,%eax
    jl     jump_11c4e
    mov    $0x4ac,%ebx
    mov    $data_800f8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_11c4e:
    xor    %eax,%eax
    mov    0x54(%edi),%edx
    mov    data_f458e,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    jne    jump_11c13
    mov    $0xffffffff,%ebx
    mov    %edi,%edx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2e16c
    mov    0x37a(%esp),%ebx
    xor    %edx,%edx
    sar    $0x10,%ebx
    mov    %ax,%dx
    mov    0xb5(%esi),%eax
    call   func_2e330
    jmp    jump_11c13
  jump_11c8f:
    xor    %edi,%edi
    jmp    jump_11c94
  jump_11c93:
    inc    %edi
  jump_11c94:
    mov    data_c3504,%eax
    cmp    0x5a(%eax),%di
    jge    jump_11cdd
    movswl %di,%ebp
    mov    0x46(%eax,%ebp,4),%edx
    mov    0x57(%edx),%al
    cmp    data_f458e,%al
    jne    jump_11c93
    mov    $0xffffffff,%ebx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2e16c
    mov    %ebp,%ebx
    xor    %edx,%edx
    or     $0x80000000,%ebx
    mov    %ax,%dx
    mov    0xb5(%esi),%eax
    call   func_2e330
    jmp    jump_11c93
  jump_11cdd:
    mov    $func_10a14,%edx
    mov    0xb5(%esi),%eax
    call   func_2e8b8
    mov    0xb5(%esi),%eax
    call   func_2e8c0
  jump_11cf8:
    mov    0xb5(%esi),%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    add    $0x384,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_11d16:
/*----------------------------------------------------------------*/
    cmpb   $0x3,0xab(%esi)
    je     jump_11d30
    mov    $0x4d8,%ebx
    mov    $data_80106,%edx
    xor    %eax,%eax
    call   func_25878
  jump_11d30:
    cmpl   $0x0,0xac(%esi)
    jne    jump_11d4a
    mov    $0x4d9,%ebx
    mov    $data_80114,%edx
    xor    %eax,%eax
    call   func_25878
  jump_11d4a:
    mov    0xb5(%esi),%eax
    movw   $0x54,0x8c9(%eax)
    mov    $func_10668,%edx
    mov    0xb5(%esi),%eax
    call   func_2e8a8
    mov    0xac(%esi),%eax
    mov    %eax,0x36c(%esp)
    mov    0x88(%eax),%eax
    mov    %eax,0x35c(%esp)
    mov    0x36c(%esp),%eax
    xor    %edx,%edx
    mov    0x54(%eax),%eax
    mov    data_f458e,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    je     jump_11db1
    mov    0x36c(%esp),%eax
    call   func_45ed4
    cmp    $0x2,%eax
    jne    jump_11cdd
  jump_11db1:
    mov    0x36c(%esp),%edi
    xor    %ebx,%ebx
    add    $0xab,%edi
    mov    %bx,0x378(%esp)
    jmp    jump_11e5b
  jump_11dcd:
    mov    0x33(%ebp),%ax
    xor    %ah,%ah
    and    $0x20,%al
    cwtl
    test   %eax,%eax
    jne    jump_11e00
    cmpl   $0x0,0x42(%ebp)
    je     jump_11def
    movswl 0x1(%edi),%eax
    test   %eax,%eax
    jne    jump_11def
    mov    $0x2,%ebx
    jmp    jump_11e00
  jump_11def:
    mov    0x35c(%esp),%ecx
    cmp    0x36(%ebp),%ecx
    jge    jump_11e00
    mov    $0x3,%ebx
  jump_11e00:
    mov    0x33(%ebp),%ax
    xor    %ah,%ah
    and    $0x80,%al
    cwtl
    test   %eax,%eax
    je     jump_11e16
    movsbl (%edi),%ebx
    add    $0x1f4,%ebx
  jump_11e16:
    mov    0x32(%ebp),%ah
    cmp    $0x2,%ah
    jne    jump_11e29
    movsbl (%edi),%ebx
    add    $0x258,%ebx
    jmp    jump_11e37
  jump_11e29:
    cmp    $0x4,%ah
    jne    jump_11e37
    movsbl (%edi),%ebx
    add    $0x2bc,%ebx
  jump_11e37:
    and    $0xffff,%edx
    mov    0xb5(%esi),%eax
    call   func_2e330
  jump_11e48:
    mov    0x378(%esp),%ecx
    inc    %ecx
    add    $0x7,%edi
    mov    %cx,0x378(%esp)
  jump_11e5b:
    mov    0x376(%esp),%eax
    mov    0x36c(%esp),%edx
    sar    $0x10,%eax
    cmp    0x15a(%edx),%eax
    jge    jump_11cdd
    mov    (%edi),%cl
    cmp    $0xff,%cl
    je     jump_11e48
    movsbl %cl,%ebp
    imul   $0x6a,%ebp,%ebp
    mov    0xba(%esi),%ch
    mov    data_f653e(%ebp),%al
    add    $data_f650c,%ebp
    cmp    %ch,%al
    jne    jump_11ea8
    mov    0x33(%ebp),%ax
    xor    %ah,%ah
    and    $0x80,%al
    cwtl
    test   %eax,%eax
    je     jump_11ebe
  jump_11ea8:
    cmpb   $0x4,0xba(%esi)
    jne    jump_11e48
    mov    0x33(%ebp),%ax
    xor    %ah,%ah
    and    $0x80,%al
    cwtl
    test   %eax,%eax
    je     jump_11e48
  jump_11ebe:
    mov    $0xffffffff,%ebx
    mov    %edi,%edx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2e16c
    mov    %eax,%edx
    mov    0x36c(%esp),%eax
    mov    0x54(%eax),%eax
    sar    $0x10,%eax
    mov    %eax,0x358(%esp)
    xor    %eax,%eax
    mov    0x358(%esp),%ecx
    mov    data_f458e,%al
    xor    %ebx,%ebx
    cmp    %ecx,%eax
    je     jump_11dcd
    mov    $0x1,%ebx
    jmp    jump_11e00


/*----------------------------------------------------------------*/
func_11f0a:
/*----------------------------------------------------------------*/
    mov    0xb5(%esi),%eax
    movw   $0x54,0x8c9(%eax)
    mov    $func_10878,%edx
    mov    0xb5(%esi),%eax
    call   func_2e8a8
    mov    0xab(%esi),%ah
    mov    0xac(%esi),%edi
    cmp    $0x2,%ah
    je     jump_11f4b
    mov    $0x51f,%ebx
    mov    $data_80122,%edx
    xor    %eax,%eax
    call   func_25878
  jump_11f4b:
    test   %edi,%edi
    jne    jump_11f60
    mov    $0x520,%ebx
    mov    $data_80130,%edx
    xor    %eax,%eax
    call   func_25878
  jump_11f60:
    mov    data_f458e,%dl
    cmp    0x57(%edi),%dl
    jne    jump_11cdd
    xor    %edx,%edx
    mov    %dx,0x380(%esp)
    jmp    jump_11f83
  jump_11f7b:
    incw   0x380(%esp)
  jump_11f83:
    mov    0x37e(%esp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    0x1a(%edi),%dx
    cmp    %edx,%eax
    jge    jump_11cdd
    shl    $0x2,%eax
    mov    0x10(%edi),%edx
    add    %eax,%edx
    mov    %eax,0x370(%esp)
    mov    0x2(%edx),%ax
    xor    %ah,%ah
    xor    %ebp,%ebp
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_11f7b
    xor    %eax,%eax
    mov    0x1(%edx),%al
    imul   $0x28,%eax,%eax
    mov    data_f3e46(%eax),%ax
    xor    %ah,%ah
    and    $0x4,%al
    and    $0xffff,%eax
    je     jump_11f7b
    mov    $0xffffffff,%ebx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2e16c
    mov    0x370(%esp),%ecx
    mov    %eax,0x374(%esp)
    mov    0x10(%edi),%edx
    lea    0x368(%esp),%eax
    add    %ecx,%edx
    push   %eax
    mov    0x1(%edx),%dl
    lea    0x368(%esp),%ecx
    lea    0x364(%esp),%ebx
    and    $0xff,%edx
    mov    %edi,%eax
    call   func_34fbc
    cmpl   $0x0,0x368(%esp)
    je     jump_1204b
    mov    0x370(%esp),%edx
    mov    0x10(%edi),%eax
    add    %edx,%eax
    mov    0x2(%eax),%ax
    and    $0xffff,%eax
    sar    $0x8,%eax
    test   %eax,%eax
    jne    jump_1204b
    mov    $0x1,%ebp
  jump_1204b:
    mov    %ebp,%ebx
    xor    %edx,%edx
    mov    0xb5(%esi),%eax
    mov    0x374(%esp),%dx
    call   func_2e330
    jmp    jump_11f7b


/*----------------------------------------------------------------*/
func_12067:
/*----------------------------------------------------------------*/
    mov    0xb5(%esi),%eax
    movw   $0x54,0x8c9(%eax)
    mov    $func_10010,%edx
    mov    0xb5(%esi),%eax
    call   func_2e8a8
    lea    0x1ac(%esp),%edx
    mov    data_c3504,%eax
    xor    %edi,%edi
    call   func_1d754
    mov    %eax,%ebp
    jmp    jump_1209e
  jump_1209d:
    inc    %edi
  jump_1209e:
    movswl %di,%eax
    cmp    %ebp,%eax
    jge    jump_120eb
    mov    0x1ac(%esp,%eax,4),%edx
    cmpb   $0x4,0x58(%edx)
    jne    jump_1209d
    xor    %ebx,%ebx
    mov    0x54(%edx),%eax
    mov    data_f458e,%bl
    sar    $0x10,%eax
    cmp    %ebx,%eax
    je     jump_1209d
    mov    $0xffffffff,%ebx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2e16c
    xor    %edx,%edx
    movswl %di,%ebx
    mov    %ax,%dx
    mov    0xb5(%esi),%eax
    call   func_2e330
    jmp    jump_1209d
  jump_120eb:
    xor    %edi,%edi
    jmp    jump_120f0
  jump_120ef:
    inc    %edi
  jump_120f0:
    mov    data_c3504,%eax
    cmp    0x5a(%eax),%di
    jge    jump_11cdd
    movswl %di,%ebp
    mov    0x46(%eax,%ebp,4),%edx
    mov    data_f458e,%bh
    cmp    0x57(%edx),%bh
    je     jump_120ef
    mov    $0xffffffff,%ebx
    mov    0xb5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2e16c
    mov    %ebp,%ebx
    xor    %edx,%edx
    or     $0x80000000,%ebx
    mov    %ax,%dx
    mov    0xb5(%esi),%eax
    call   func_2e330
    jmp    jump_120ef


/*----------------------------------------------------------------*/
func_12140:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    0x6b(%eax),%dx
    xor    %esi,%esi
    test   %dx,%dx
    jg     jump_1215f
    jmp    jump_12179
  jump_12158:
    inc    %esi
    cmp    0x6b(%ecx),%si
    jge    jump_12179
  jump_1215f:
    movswl %si,%eax
    mov    0x67(%ecx),%edx
    mov    (%edx,%eax,4),%eax
    mov    $data_8013e,%edx
    add    $0x20,%eax
    call   func_72130
    test   %eax,%eax
    jne    jump_12158
  jump_12179:
    cmp    0x6b(%ecx),%si
    jl     jump_12190
    mov    $0x58c,%ebx
    mov    $data_80147,%edx
    xor    %eax,%eax
    call   func_25878
  jump_12190:
    mov    $0xffffffff,%edx
    xor    %ebx,%ebx
    mov    0xb9(%ecx),%ah
    mov    %ebx,0x4(%esp)
    cmp    $0x2,%ah
    jne    jump_121aa
    xor    %edx,%edx
    jmp    jump_121b3
  jump_121aa:
    cmp    $0x3,%ah
    jne    jump_121b3
    mov    %edx,0x4(%esp)
  jump_121b3:
    xor    %ebx,%ebx
    jmp    jump_121fd
  jump_121b7:
    mov    %edx,%edi
    mov    %edx,(%esp)
    not    %edi
    mov    %edi,(%esp)
    movswl %si,%edi
    add    %edi,%eax
    mov    0x67(%ecx),%edi
    mov    (%edi,%eax,4),%edi
    mov    (%esp),%ebp
    mov    %ebp,0x35(%edi)
    mov    0x67(%ecx),%edi
    mov    (%edi,%eax,4),%eax
    mov    %ebp,0x39(%eax)
    jmp    jump_121fc
  jump_121dd:
    movswl %si,%edi
    add    %edi,%eax
    mov    0x67(%ecx),%edi
    mov    (%edi,%eax,4),%edi
    movl   $0x0,0x35(%edi)
    mov    0x67(%ecx),%edi
    mov    (%edi,%eax,4),%eax
    movl   $0x0,0x39(%eax)
  jump_121fc:
    inc    %ebx
  jump_121fd:
    movswl %bx,%eax
    cmp    $0x9,%eax
    jge    jump_1222a
    cmpl   $0x0,0x4(%esp)
    jne    jump_121dd
    cmp    $0x5,%eax
    jge    jump_121b7
    movswl %si,%edi
    add    %edi,%eax
    mov    0x67(%ecx),%edi
    mov    (%edi,%eax,4),%edi
    mov    %edx,0x35(%edi)
    mov    0x67(%ecx),%edi
    mov    (%edi,%eax,4),%eax
    mov    %edx,0x39(%eax)
    jmp    jump_121fc
  jump_1222a:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_12238:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    cmpb   $0x3,0xab(%eax)
    jne    jump_12259
    mov    $0x1,%edx
    mov    0xac(%ebx),%eax
    call   func_45378
    jmp    jump_12272
  jump_12259:
    cmpb   $0x2,0xab(%ebx)
    jne    jump_12272
    mov    $0x1,%edx
    mov    0xac(%ebx),%eax
    call   func_35060
  jump_12272:
    movb   $0x0,0xab(%ebx)
    movl   $0x0,0xac(%ebx)
    cmp    $0xffffffff,%ecx
    jne    jump_1228f
    mov    %ebx,%eax
    call   func_11ba4
  jump_1228f:
    mov    %ecx,%edx
    mov    %ebx,%eax
    call   func_1229c
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1229c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    %edx,%ebp
    mov    data_c3504,%esi
  jump_122ae:
    incw   0xd4(%ecx)
    mov    0xd2(%ecx),%eax
    mov    0xd6(%ecx),%edx
    sar    $0x10,%eax
    cmp    %edx,%eax
    jl     jump_122d9
    mov    %ebp,%edx
    mov    %ecx,%eax
    call   func_12368
    test   %eax,%eax
    je     jump_1235e
  jump_122d9:
    xor    %ah,%ah
    mov    %ah,(%esp)
    mov    0xd2(%ecx),%eax
    sar    $0x10,%eax
    mov    0xd8(%ecx,%eax,2),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    mov    %esp,%ebx
    mov    %esi,%edx
    add    $data_92e16,%eax
    call   func_3c6b0
    mov    0xd2(%ecx),%ebx
    sar    $0x10,%ebx
    mov    %eax,0xe8(%ecx,%ebx,4)
    cmpb   $0x0,(%esp)
    je     jump_122ae
    mov    %esp,%esi
    lea    0xab(%ecx),%edi
    movsl  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    cmpb   $0x3,(%esp)
    jne    jump_12338
    mov    0x1(%esp),%eax
    xor    %edx,%edx
    call   func_45378
    jmp    jump_12343
  jump_12338:
    mov    0x1(%esp),%eax
    xor    %edx,%edx
    call   func_35060
  jump_12343:
    cmp    $0xffffffff,%ebp
    jne    jump_12355
    mov    0xbb(%ecx),%eax
    call   func_12674
    jmp    jump_1235e
  jump_12355:
    mov    %ebp,%edx
    mov    %ecx,%eax
    call   func_12238
  jump_1235e:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12368:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebx
    mov    %edx,%ebp
    mov    data_c3504,%esi
    mov    0x104(%eax),%edx
    xor    %edi,%edi
    cmp    $0xffffffff,%edx
    jne    jump_123a2
    xor    %eax,%eax
    jmp    jump_12389
  jump_12388:
    inc    %eax
  jump_12389:
    movswl %ax,%edx
    cmp    0xd6(%ebx),%edx
    jge    jump_123a2
    mov    0xe8(%ebx,%edx,4),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_12388
    mov    %ecx,%edi
  jump_123a2:
    lea    0xda(%ebx),%edx
    mov    %esi,%eax
    mov    %edi,0x104(%ebx)
    call   func_1d6f4
    movw   $0x0,0xd4(%ebx)
    xor    %ecx,%ecx
    mov    %eax,0xd6(%ebx)
    jmp    jump_123e5
  jump_123c8:
    mov    0xd8(%ebx,%eax,2),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    mov    %esi,%edx
    add    $data_92e16,%eax
    inc    %ecx
    call   func_39e58
  jump_123e5:
    movswl %cx,%eax
    cmp    0xd6(%ebx),%eax
    jl     jump_123c8
    cmp    $0xffffffff,%ebp
    jne    jump_12402
    mov    0xa7(%ebx),%esi
    mov    %ebx,%eax
    xor    %edx,%edx
    call   *0xc(%esi)
  jump_12402:
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1240c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    call   func_2f284
    lea    0x4(%ebx),%eax
    xor    %ecx,%ecx
    mov    $0x3,%ebx
    mov    data_f458e,%cl
    mov    %ebx,%edx
    call   func_4f228
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12430:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_12440:
/*----------------------------------------------------------------*/
    add    $0xa,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    sub    $0x16,%eax
    ret


/*----------------------------------------------------------------*/
func_12480:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    sub    $0x78,%esp
    mov    %eax,%ebx
    lea    0xc(%esp),%eax
    xor    %ecx,%ecx
    mov    %eax,0x64(%esp)
    mov    %ecx,0x48(%esp)
    mov    %ecx,0x4c(%esp)
    mov    %ecx,0x50(%esp)
    flds   (%edx)
    fsubs  (%ebx)
    fstps  0x48(%esp)
    flds   0x4(%edx)
    fsubs  0x4(%ebx)
    fstps  0x4c(%esp)
    flds   0x8(%edx)
    fsubs  0x8(%ebx)
    mov    0x48(%esp),%eax
    fstps  0x50(%esp)
    flds   0x4c(%esp)
    fmul   %st(0),%st
    mov    %eax,0xc(%esp)
    mov    0x4c(%esp),%eax
    flds   0x48(%esp)
    fmul   %st(0),%st
    mov    %eax,0x10(%esp)
    faddp  %st,%st(1)
    mov    0x50(%esp),%eax
    flds   0x50(%esp)
    fmul   %st(0),%st
    mov    %eax,0x14(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fstps  0x74(%esp)
    flds   0x84(%esp)
    fcomps 0x74(%esp)
    fnstsw %ax
    sahf
    jae    jump_125f6
    flds   0x84(%esp)
    flds   0xc(%esp)
    fmul   %st(1),%st
    fstps  0x54(%esp)
    flds   0x10(%esp)
    fmul   %st(1),%st
    fstps  0x58(%esp)
    fmuls  0x14(%esp)
    fstps  0x5c(%esp)
    fld1
    fdivs  0x74(%esp)
    lea    0x3c(%esp),%eax
    mov    %eax,0x60(%esp)
    mov    0x54(%esp),%eax
    mov    %eax,0x3c(%esp)
    mov    0x58(%esp),%eax
    mov    %eax,0x40(%esp)
    mov    0x5c(%esp),%eax
    flds   0x54(%esp)
    fmul   %st(1),%st
    mov    %eax,0x44(%esp)
    lea    0x18(%esp),%eax
    fstps  0x24(%esp)
    flds   0x58(%esp)
    fmul   %st(1),%st
    mov    %eax,0x68(%esp)
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    fmuls  0x5c(%esp)
    mov    %eax,0x18(%esp)
    mov    0x28(%esp),%eax
    mov    %ecx,0x30(%esp)
    mov    %eax,0x1c(%esp)
    fstps  0x2c(%esp)
    mov    0x2c(%esp),%eax
    mov    %ecx,0x34(%esp)
    mov    %eax,0x20(%esp)
    mov    %esp,%eax
    mov    %ecx,0x38(%esp)
    mov    %eax,0x6c(%esp)
    flds   (%ebx)
    fadds  0x24(%esp)
    fstps  0x30(%esp)
    flds   0x4(%ebx)
    fadds  0x28(%esp)
    mov    0x30(%esp),%eax
    fstps  0x34(%esp)
    flds   0x8(%ebx)
    mov    %eax,(%esp)
    fadds  0x2c(%esp)
    mov    0x34(%esp),%eax
    fstps  0x38(%esp)
    mov    %eax,0x4(%esp)
    mov    0x38(%esp),%eax
    mov    %eax,0x8(%esp)
    mov    0x30(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    %ecx,%eax
    add    $0x78,%esp
    pop    %ecx
    pop    %ebx
    ret    $0x4
  jump_125f6:
    flds   (%edx)
    mov    $0xffffffff,%ecx
    fstps  (%ebx)
    mov    0x4(%edx),%eax
    mov    %eax,0x4(%ebx)
    mov    0x8(%edx),%eax
    mov    %eax,0x8(%ebx)
    mov    %ecx,%eax
    add    $0x78,%esp
    pop    %ecx
    pop    %ebx
    ret    $0x4


/*----------------------------------------------------------------*/
func_12618:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    0x5(%eax),%ax
    xor    %edx,%edx
    mov    %eax,(%esp)
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    mov    0x7(%edi),%esi
    call   func_1b084
    push   %eax
    xor    %ebp,%ebp
    inc    %esi
    call   func_5c5e3
    add    $0x4,%esp
    cmp    %eax,%esi
    jl     jump_12653
    mov    $0xffffffff,%ebp
    xor    %esi,%esi
  jump_12653:
    mov    %edi,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    (%esp),%dx
    mov    %si,%bx
    call   func_156c0
    mov    %ebp,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12674:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    movb   $0xff,0x4f37(%eax)
    movl   $0x0,0xb3(%eax)
    movw   $0x0,0x5034(%eax)
    push   $0x0
    movb   $0x4,0xb7(%eax)
    mov    $0x52,%ebx
    mov    0x41(%eax),%edx
    push   $0x0
    xor    %ecx,%ecx
    mov    $data_fa35c,%eax
    call   func_517c4
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_126b4:
    .long   func_12a0c
    .long   func_1291a
    .long   func_1294f
    .long   func_1295a
    .long   func_12965
    .long   func_12970
    .long   func_1297b
    .long   func_12986
    .long   func_12991
    .long   func_1299c
    .long   func_129aa
    .long   func_129b8
    .long   func_129c6
    .long   func_129d4
    .long   func_129e2
    .long   func_129f0
    .long   func_129fe


/*----------------------------------------------------------------*/
func_126f8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    0x4f37(%eax),%ah
    xor    %edi,%edi
    cmp    $0xff,%ah
    jne    jump_128f0
    mov    %ecx,%eax
    call   func_187ec
    xor    %edx,%edx
    mov    %ecx,%eax
    call   func_18c2c
    mov    0xab(%ecx),%edx
    mov    %edi,0x4f38(%ecx)
    xor    %al,%al
    mov    0xab(%edx),%bl
    add    $0xab,%edx
    cmp    $0x3,%bl
    jne    jump_1285f
    mov    0x1(%edx),%edx
    mov    0x62(%edx),%bl
    add    $0x62,%edx
    test   %bl,%bl
    jne    jump_12759
    mov    %al,0x4f37(%ecx)
    jmp    jump_12883
  jump_12759:
    cmp    $0x1,%bl
    jne    jump_12883
    mov    0x1(%edx),%eax
    mov    (%eax),%al
    cmp    $0x34,%al
    jne    jump_12777
    movb   $0x3,0x4f37(%ecx)
    jmp    jump_12883
  jump_12777:
    cmp    $0x37,%al
    jne    jump_12787
    movb   $0x4,0x4f37(%ecx)
    jmp    jump_12883
  jump_12787:
    cmp    $0x20,%al
    jne    jump_12797
    movb   $0x5,0x4f37(%ecx)
    jmp    jump_12883
  jump_12797:
    cmp    $0x38,%al
    je     jump_1279f
    cmp    $0x4a,%al
    jne    jump_127ab
  jump_1279f:
    movb   $0x6,0x4f37(%ecx)
    jmp    jump_12883
  jump_127ab:
    cmp    $0x3a,%al
    jne    jump_127bb
    movb   $0x7,0x4f37(%ecx)
    jmp    jump_12883
  jump_127bb:
    cmp    $0x2e,%al
    jne    jump_127cb
    movb   $0x8,0x4f37(%ecx)
    jmp    jump_12883
  jump_127cb:
    cmp    $0x3c,%al
    jne    jump_127db
    movb   $0x9,0x4f37(%ecx)
    jmp    jump_12883
  jump_127db:
    cmp    $0x3b,%al
    je     jump_127e3
    cmp    $0x44,%al
    jne    jump_127ef
  jump_127e3:
    movb   $0xa,0x4f37(%ecx)
    jmp    jump_12883
  jump_127ef:
    cmp    $0x2d,%al
    jne    jump_127ff
    movb   $0xb,0x4f37(%ecx)
    jmp    jump_12883
  jump_127ff:
    cmp    $0x28,%al
    je     jump_12807
    cmp    $0x27,%al
    jne    jump_12813
  jump_12807:
    movb   $0xc,0x4f37(%ecx)
    jmp    jump_12883
  jump_12813:
    cmp    $0x24,%al
    jne    jump_12823
    movb   $0xd,0x4f37(%ecx)
    jmp    jump_12883
  jump_12823:
    cmp    $0x48,%al
    jne    jump_12830
    movb   $0xe,0x4f37(%ecx)
    jmp    jump_12883
  jump_12830:
    cmp    $0x26,%al
    jne    jump_1283d
    movb   $0xf,0x4f37(%ecx)
    jmp    jump_12883
  jump_1283d:
    movsbl %al,%edx
    imul   $0x6a,%edx,%edx
    mov    data_f653f(%edx),%dx
    xor    %dh,%dh
    and    $0x40,%dl
    movswl %dx,%edx
    test   %edx,%edx
    jne    jump_1287d
    movb   $0x2,0x4f37(%ecx)
    jmp    jump_12883
  jump_1285f:
    cmp    $0x2,%bl
    jne    jump_12883
    mov    0x1(%edx),%edx
    add    $0x6b,%edx
    mov    (%edx),%edx
    mov    $0x34,%al
    cmpb   $0x11,0x1(%edx)
    jne    jump_1287d
    movb   $0x3,0x4f37(%ecx)
    jmp    jump_12883
  jump_1287d:
    mov    %bl,0x4f37(%ecx)
  jump_12883:
    movsbl %al,%eax
    shl    $0x2,%eax
    lea    (%ecx,%eax,1),%ebx
    mov    0x1a90(%ebx),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    mov    0x19c6(%ecx,%eax,2),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    mov    0x1a92(%ebx),%eax
    sar    $0x10,%eax
    mov    0x19c6(%ecx,%eax,2),%dx
    mov    $data_11f10c,%eax
    and    $0xffff,%edx
    call   func_1b084
    mov    0x1bcc(%ebx),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4b530
    mov    0x1bce(%ebx),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4b530
  jump_128f0:
    mov    %ecx,%esi
    xor    %ebx,%ebx
    jmp    jump_12907
  jump_128f6:
    mov    %ecx,%eax
    mov    0x4f44(%esi),%edx
    call   func_12b4c
    add    $0x4,%esi
    inc    %ebx
  jump_12907:
    mov    0x5032(%ecx),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jge    jump_12a2c
    jmp    jump_128f6


/*----------------------------------------------------------------*/
func_1291a:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_12c98
    mov    %eax,%edi
  jump_12923:
    mov    0x5036(%ecx),%edx
    cmp    $0xffffffff,%edx
    jne    jump_1293a
    mov    %edx,%edi
    movl   $0x0,0x5036(%ecx)
  jump_1293a:
    mov    $0x1,%edx
    mov    %ecx,%eax
    call   func_18c2c
    mov    %ecx,%esi
    xor    %ebx,%ebx
    jmp    jump_12a54


/*----------------------------------------------------------------*/
func_1294f:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_12e88
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_1295a:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_12f7c
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_12965:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_13370
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_12970:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_136c4
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_1297b:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_1380c
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_12986:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_13c10
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_12991:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_14224
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_1299c:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_142d8
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129aa:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_14490
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129b8:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_145c0
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129c6:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_147cc
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129d4:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_14b18
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129e2:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_15078
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129f0:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_15164
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_129fe:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    call   func_152e4
    mov    %eax,%edi
    jmp    jump_12923


/*----------------------------------------------------------------*/
func_12a0c:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%edi
    jmp    jump_12923
  jump_12a16:
    mov    $0xf8,%ebx
    mov    $data_80158,%edx
    xor    %eax,%eax
    call   func_25888
    jmp    jump_12923
  jump_12a2c:
    mov    0x4f37(%ecx),%al
    inc    %al
    cmp    $0x10,%al
    ja     jump_12a16
    movsbl %al,%eax
    jmp    *%cs:vtable_126b4(,%eax,4)
  jump_12a43:
    mov    %ecx,%eax
    mov    0x4f44(%esi),%edx
    call   func_12b4c
    add    $0x4,%esi
    inc    %ebx
  jump_12a54:
    mov    0x5032(%ecx),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jl     jump_12a43
    mov    0xa7(%ecx),%ebx
    mov    $0x1,%edx
    mov    %ecx,%eax
    call   *0xc(%ebx)
    incl   0x4f38(%ecx)
    cmp    $0xffffffff,%edi
    jne    jump_12adf
    mov    $0x52,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%ecx),%edx
    movb   $0x0,0xb7(%ecx)
    call   func_51884
    mov    %edi,%edx
    mov    0xab(%ecx),%eax
    call   func_12238
    mov    %ecx,%eax
    call   func_187ec
    xor    %edx,%edx
    mov    %ecx,%eax
    call   func_18c2c
    mov    %ecx,%eax
    movb   $0xff,0x4f37(%ecx)
    xor    %edx,%edx
    jmp    jump_12ad2
  jump_12abf:
    mov    0x4f44(%eax),%esi
    mov    0x33(%esi),%bl
    add    $0x4,%eax
    and    $0x1,%bl
    inc    %edx
    mov    %bl,0x33(%esi)
  jump_12ad2:
    mov    0x5032(%ecx),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jl     jump_12abf
  jump_12adf:
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_12ae4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    mov    %edx,%esi
    test   %edx,%edx
    jne    jump_12b02
    mov    $0x122,%ebx
    mov    $data_80165,%edx
    xor    %eax,%eax
    call   func_25878
  jump_12b02:
    mov    0x1d32(%ecx),%ebx
    xor    %edi,%edi
    xor    %edx,%edx
    test   %ebx,%ebx
    jg     jump_12b22
    jmp    jump_12b2f
  jump_12b12:
    inc    %edx
    mov    0x1d32(%ecx),%ebp
    add    $0x35,%eax
    cmp    %ebp,%edx
    jl     jump_12b28
    jmp    jump_12b2f
  jump_12b22:
    mov    0x1d2a(%ecx),%eax
  jump_12b28:
    cmp    0x1(%eax),%esi
    jne    jump_12b12
    mov    %eax,%edi
  jump_12b2f:
    test   %edi,%edi
    jne    jump_12b44
    mov    $0x12f,%ebx
    mov    $data_80172,%edx
    xor    %eax,%eax
    call   func_25878
  jump_12b44:
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12b4c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    sub    $0x18,%esp
    cmpb   $0x8,(%edx)
    jne    jump_12bf9
    mov    0x1(%edx),%ebx
    mov    0x27(%edx),%cx
    cmp    0x27(%ebx),%cx
    jge    jump_12b84
    mov    0x25(%edx),%ecx
    mov    0x8(%eax),%esi
    sar    $0x10,%ecx
    add    %esi,%ecx
    mov    0x25(%ebx),%esi
    mov    %ecx,data_8a0e4
    sar    $0x10,%esi
    mov    0x8(%eax),%ecx
    jmp    jump_12b9b
  jump_12b84:
    mov    0x25(%ebx),%ecx
    mov    0x8(%eax),%esi
    sar    $0x10,%ecx
    add    %esi,%ecx
    mov    %ecx,data_8a0e4
    mov    0x25(%edx),%ecx
    sar    $0x10,%ecx
  jump_12b9b:
    add    %esi,%ecx
    mov    %ecx,data_8a0ec
    mov    0x29(%edx),%cx
    cmp    0x29(%ebx),%cx
    jge    jump_12bd3
    mov    0x27(%edx),%ecx
    sar    $0x10,%ecx
    mov    0xc(%eax),%edx
    add    %ecx,%edx
    mov    %edx,data_8a0e8
    mov    0x27(%ebx),%edx
    mov    0xc(%eax),%eax
    sar    $0x10,%edx
    add    %edx,%eax
    mov    %eax,data_8a0f0
    jmp    jump_12c82
  jump_12bd3:
    mov    0x27(%ebx),%ecx
    mov    0x27(%edx),%edx
    sar    $0x10,%ecx
    sar    $0x10,%edx
    mov    0xc(%eax),%ebx
    mov    0xc(%eax),%eax
    add    %ecx,%ebx
    add    %edx,%eax
    mov    %ebx,data_8a0e8
    mov    %eax,data_8a0f0
    jmp    jump_12c82
  jump_12bf9:
    mov    0x25(%edx),%ebx
    mov    0x8(%eax),%ecx
    sar    $0x10,%ebx
    add    %ebx,%ecx
    mov    0x27(%edx),%ebx
    mov    0xc(%eax),%eax
    sar    $0x10,%ebx
    add    %ebx,%eax
    mov    %eax,0xc(%esp)
    xor    %ebx,%ebx
    mov    0xf(%edx),%eax
    mov    %ebx,0x4(%esp)
    mov    %eax,(%esp)
    fildll (%esp)
    fmull  data_8017f
    filds  0x13(%edx)
    fmul   %st(1),%st
    mov    %ecx,0x8(%esp)
    fildl  0x8(%esp)
    fxch   %st(1)
    fadd   %st(1),%st
    call   func_72258
    fistpl data_8a0e4
    filds  0x15(%edx)
    fmul   %st(2),%st
    fildl  0xc(%esp)
    fxch   %st(1)
    fadd   %st(1),%st
    call   func_72258
    fistpl data_8a0e8
    filds  0x17(%edx)
    fmul   %st(3),%st
    faddp  %st,%st(2)
    fxch   %st(1)
    call   func_72258
    fistpl data_8a0ec
    filds  0x19(%edx)
    fmulp  %st,%st(2)
    faddp  %st,%st(1)
    call   func_72258
    fistpl data_8a0f0
  jump_12c82:
    mov    $data_8a0e0,%edx
    mov    $data_fa35c,%eax
    call   func_50690
    add    $0x18,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12c98:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    0xab(%eax),%edi
    xor    %ebp,%ebp
    mov    0xab(%edi),%ah
    add    $0xab,%edi
    cmp    $0x3,%ah
    je     jump_12ccd
    mov    $0x16b,%ebx
    mov    $data_80187,%edx
    xor    %eax,%eax
    call   func_25878
  jump_12ccd:
    mov    0x1(%edi),%edi
    lea    0x62(%edi),%ecx
    mov    0x5(%ecx),%dl
    cmp    $0x3,%dl
    je     jump_12cf6
    cmp    $0x1,%dl
    je     jump_12cf6
    cmp    $0x2,%dl
    je     jump_12cf6
    mov    $0x171,%ebx
    mov    $data_80194,%edx
    xor    %eax,%eax
    call   func_25878
  jump_12cf6:
    cmpl   $0x0,0x4f38(%esi)
    jne    jump_12d6c
    mov    %edi,%edx
    mov    %esi,%eax
    movw   $0x1,0x5034(%esi)
    call   func_12ae4
    mov    %eax,0x4f44(%esi)
    movb   $0x12,0x33(%eax)
    mov    0x4f44(%esi),%eax
    movb   $0x0,0x34(%eax)
    lea    0x9e(%edi),%eax
    lea    0x4f80(%esi),%edx
    mov    (%eax),%ebx
    mov    %ebx,(%edx)
    mov    0x4(%eax),%ebx
    mov    %ebx,0x4(%edx)
    mov    0x8(%eax),%ebx
    mov    %ebx,0x8(%edx)
    movl   $0x0,0x4f3c(%esi)
    cmpl   $0x0,0x94(%edi)
    je     jump_12d6c
    cmpl   $0x0,0x88(%edi)
    je     jump_12d6c
    mov    $0x7,%edx
    mov    $data_f8638,%eax
    call   func_4af80
  jump_12d6c:
    cmpl   $0x0,0x4f3c(%esi)
    jne    jump_12df3
    lea    0x16(%ecx),%edx
    lea    0x4f80(%esi),%eax
    push   $0x41a00000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_12e7c
    testb  $0x8,0x22(%ecx)
    je     jump_12de2
    cmpb   $0x2,0x5(%ecx)
    jne    jump_12de2
    mov    %edi,%eax
    mov    0x6(%ecx),%edx
    call   func_44e48
    cmp    $0xffffffff,%eax
    jne    jump_12de2
    mov    0x4f44(%esi),%eax
    orb    $0x8,0x33(%eax)
    movw   $0x2,0x5034(%esi)
    mov    %esi,%eax
    mov    0x6(%ecx),%edx
    call   func_12ae4
    movl   $0x1,0x4f3c(%esi)
    mov    %eax,0x4f48(%esi)
    jmp    jump_12e7c
  jump_12de2:
    mov    $0xffffffff,%ebp
    mov    %ebp,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_12df3:
    mov    0x6(%ecx),%eax
    mov    $0x7,%edx
    mov    0x23(%eax),%bh
    mov    %edx,(%esp)
    test   $0x1,%bh
    je     jump_12e0d
    movl   $0x8,(%esp)
  jump_12e0d:
    xor    %eax,%eax
    mov    (%esp),%ax
    xor    %edx,%edx
    mov    0x19c6(%esi,%eax,2),%dx
    mov    $data_11f10c,%eax
    mov    0x4f3c(%esi),%edi
    call   func_1b084
    push   %eax
    sar    $0x2,%edi
    call   func_5c5e3
    lea    -0x1(%eax),%ecx
    add    $0x4,%esp
    cmp    %ecx,%edi
    jle    jump_12e51
    lea    0x0(,%ecx,2),%eax
    cmp    %eax,%edi
    jg     jump_12e51
    sub    %edi,%eax
    mov    %eax,%edi
    jmp    jump_12e5e
  jump_12e51:
    add    %ecx,%ecx
    cmp    %ecx,%edi
    jle    jump_12e5e
    mov    $0xffffffff,%ebp
    xor    %edi,%edi
  jump_12e5e:
    mov    %esi,%eax
    mov    0x4f48(%esi),%edx
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    (%esp),%bx
    mov    %di,%cx
    call   func_1826c
    incl   0x4f3c(%esi)
  jump_12e7c:
    mov    %ebp,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12e88:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    0xab(%eax),%ebp
    xor    %edi,%edi
    mov    0xab(%ebp),%ah
    add    $0xab,%ebp
    cmp    $0x3,%ah
    je     jump_12eba
    mov    $0x1ba,%ebx
    mov    $data_801a1,%edx
    xor    %eax,%eax
    call   func_25878
  jump_12eba:
    mov    0x1(%ebp),%eax
    mov    0x63(%eax),%ebx
    mov    0x4f38(%esi),%edx
    mov    (%ebx),%bl
    test   %edx,%edx
    jne    jump_12f57
    mov    %edx,0x4f3c(%esi)
    mov    0x1d2a(%esi),%edx
    movw   $0x1,0x5034(%esi)
    add    $0x35,%edx
    mov    %edx,0x4f44(%esi)
    movb   $0x7,(%edx)
    mov    0x4f44(%esi),%edx
    movb   $0x12,0x33(%edx)
    mov    0x4f44(%esi),%edx
    add    $0x9e,%eax
    movb   $0x0,0x34(%edx)
    lea    0x4f80(%esi),%edx
    mov    (%eax),%ecx
    mov    %ecx,(%edx)
    mov    0x4(%eax),%ecx
    mov    %ecx,0x4(%edx)
    flds   0x8(%eax)
    movsbl %bl,%eax
    shl    $0x2,%eax
    xor    %ecx,%ecx
    lea    (%esi,%eax,1),%ebp
    fstps  0x8(%edx)
    xor    %ebx,%ebx
    mov    0x1a92(%ebp),%ax
    mov    0x4f44(%esi),%edx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
    mov    0x1bcc(%ebp),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
  jump_12f57:
    testb  $0x3,0x4f38(%esi)
    jne    jump_12f72
    mov    0x4f44(%esi),%eax
    call   func_12618
    cmp    $0xffffffff,%eax
    jne    jump_12f72
    mov    %eax,%edi
  jump_12f72:
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_12f7c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x60,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    mov    %edx,0x48(%esp)
    mov    0xab(%eax),%edx
    xor    %ebx,%ebx
    add    $0xab,%edx
    mov    %ebx,0xc(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ebx,0x14(%esp)
    mov    %ebx,(%esp)
    mov    %ebx,0x4(%esp)
    mov    %ebx,0x8(%esp)
    xor    %eax,%eax
    mov    %ebx,0x40(%esp)
    xor    %bh,%ah
    mov    (%edx),%bl
    mov    %ah,0x5c(%esp)
    cmp    $0x3,%bl
    jne    jump_1302c
    mov    0x1(%edx),%ebp
    lea    0x62(%ebp),%edx
    lea    0x9e(%ebp),%edi
    mov    (%edi),%eax
    mov    %eax,0xc(%esp)
    mov    0x4(%edi),%eax
    mov    %eax,0x10(%esp)
    mov    0x8(%edi),%eax
    lea    0x78(%ebp),%edi
    mov    %eax,0x14(%esp)
    mov    (%edi),%eax
    mov    %eax,(%esp)
    mov    0x4(%edi),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%edi),%eax
    mov    %eax,0x8(%esp)
    mov    0x1(%edx),%eax
    movsbl (%eax),%eax
    mov    %eax,0x54(%esp)
    mov    0x22(%edx),%eax
    mov    %eax,0x50(%esp)
    mov    0x5(%edx),%al
    mov    0x54(%esp),%ecx
    mov    %al,0x5c(%esp)
    imul   $0x6a,%ecx,%eax
    mov    data_f6546(%eax),%eax
    mov    0x6(%edx),%ebp
    mov    %eax,0x40(%esp)
    jmp    jump_130ec
  jump_1302c:
    cmp    $0x2,%bl
    jne    jump_130db
    mov    0x1(%edx),%ebp
    mov    0x0(%ebp),%eax
    mov    %eax,0xc(%esp)
    mov    0x4(%ebp),%eax
    mov    %eax,0x10(%esp)
    mov    0x8(%ebp),%eax
    lea    0x6b(%ebp),%edi
    mov    %eax,0x14(%esp)
    mov    0x4(%edi),%ebp
    mov    0x9e(%ebp),%eax
    mov    %eax,(%esp)
    mov    0xa2(%ebp),%eax
    mov    %eax,0x4(%esp)
    mov    0xa6(%ebp),%eax
    mov    %eax,0x8(%esp)
    mov    0x8(%edi),%eax
    mov    %eax,0x50(%esp)
    lea    0x34(%esp),%eax
    add    $0x9e,%ebp
    push   %eax
    mov    (%edi),%eax
    mov    0x4(%edi),%ebp
    mov    0x1(%eax),%al
    lea    0x34(%esp),%ecx
    lea    0x44(%esp),%ebx
    mov    0x1(%edx),%edx
    and    $0xff,%eax
    mov    %edx,0x3c(%esp)
    mov    %eax,%edx
    mov    0x3c(%esp),%eax
    call   func_34fbc
    mov    (%edi),%eax
    mov    0x1(%eax),%cl
    cmp    $0x1c,%cl
    jne    jump_130bd
    movl   $0x4c,0x54(%esp)
    jmp    jump_130ec
  jump_130bd:
    cmp    $0x1d,%cl
    jne    jump_130cc
    movl   $0x4d,0x54(%esp)
    jmp    jump_130ec
  jump_130cc:
    cmp    $0x1e,%cl
    jne    jump_130ec
    movl   $0x4e,0x54(%esp)
    jmp    jump_130ec
  jump_130db:
    mov    $0x20e,%ebx
    mov    $data_801ae,%edx
    xor    %eax,%eax
    call   func_25888
  jump_130ec:
    mov    0x4f38(%esi),%edi
    test   %edi,%edi
    jne    jump_1318c
    movw   $0x2,0x5034(%esi)
    mov    0x1d2a(%esi),%eax
    mov    %edi,0x4f3c(%esi)
    add    $0x35,%eax
    mov    %eax,0x4f44(%esi)
    movb   $0x7,(%eax)
    mov    0x4f44(%esi),%eax
    movb   $0x12,0x33(%eax)
    mov    0x4f44(%esi),%eax
    movb   $0x0,0x34(%eax)
    lea    0x4f80(%esi),%edx
    mov    0xc(%esp),%eax
    mov    %eax,(%edx)
    mov    0x10(%esp),%eax
    mov    %eax,0x4(%edx)
    xor    %ebx,%ebx
    mov    0x14(%esp),%eax
    mov    0x54(%esp),%edi
    mov    %eax,0x8(%edx)
    xor    %ecx,%ecx
    mov    0x1a92(%esi,%edi,4),%ax
    mov    0x4f44(%esi),%edx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_12ae4
    mov    %eax,0x4f48(%esi)
    mov    0x1bcc(%esi,%edi,4),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
  jump_1318c:
    cmpl   $0x0,0x4f3c(%esi)
    jne    jump_1324e
    flds   (%esp)
    fsubs  0xc(%esp)
    lea    0x18(%esp),%eax
    fstps  0x24(%esp)
    flds   0x4(%esp)
    fsubs  0x10(%esp)
    mov    %eax,0x44(%esp)
    fstps  0x28(%esp)
    flds   0x8(%esp)
    fsubs  0x14(%esp)
    mov    0x24(%esp),%eax
    fstps  0x2c(%esp)
    flds   0x28(%esp)
    fmul   %st(0),%st
    mov    %eax,0x18(%esp)
    mov    0x28(%esp),%eax
    flds   0x24(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c(%esp)
    faddp  %st,%st(1)
    mov    0x2c(%esp),%eax
    flds   0x2c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x20(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fmuls  data_801c3
    fadds  data_801c7
    mov    %esp,%edx
    call   func_72258
    sub    $0x4,%esp
    lea    0x4f80(%esi),%eax
    fstps  (%esp)
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_13235
    movl   $0x1,0x4f3c(%esi)
    jmp    jump_13361
  jump_13235:
    mov    0x4f44(%esi),%eax
    call   func_12618
    mov    0x48(%esp),%eax
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_1324e:
    mov    $0x3f800000,%edx
    mov    $0x1,%edi
    mov    %edx,0x4c(%esp)
    mov    0x50(%esp),%dh
    mov    $0x4,%eax
    test   $0x4,%dh
    jne    jump_13271
    cmpl   $0x3d,0x54(%esp)
    jne    jump_132c9
  jump_13271:
    mov    0x4f48(%esi),%eax
    cmpb   $0x2,(%eax)
    jne    jump_1329a
    movsbw 0xaa(%ebp),%ax
    mov    %eax,0x58(%esp)
    filds  0x58(%esp)
    fmull  data_801bb
    fld1
    faddp  %st,%st(1)
    fstps  0x4c(%esp)
  jump_1329a:
    mov    0x4f48(%esi),%eax
    mov    0x33(%eax),%dh
    mov    $0x5,%edi
    or     $0x8,%dh
    mov    0x54(%esp),%bl
    mov    %dh,0x33(%eax)
    test   $0x1,%bl
    sete   %al
    add    $0x5,%al
    mov    0x54(%esp),%ecx
    cbtw
    cmp    $0x3d,%ecx
    jne    jump_132f5
    mov    %ecx,%eax
    jmp    jump_132e5
  jump_132c9:
    test   $0x2,%dh
    jne    jump_132e1
    test   $0x10,%dh
    jne    jump_132e1
    mov    0x5c(%esp),%cl
    cmp    $0x1,%cl
    je     jump_132e1
    cmp    $0x2,%cl
    jne    jump_132f5
  jump_132e1:
    mov    0x54(%esp),%eax
  jump_132e5:
    mov    0x1bd0(%esi,%eax,4),%di
    mov    0x1a94(%esi,%eax,4),%ax
  jump_132f5:
    cmpl   $0x1,0x4f3c(%esi)
    jne    jump_13329
    mov    0x4f44(%esi),%edx
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
    mov    $data_f8638,%eax
    movswl %di,%edx
    call   func_4af80
    movl   $0x2,0x4f3c(%esi)
  jump_13329:
    testb  $0x3,0x4f38(%esi)
    jne    jump_13354
    mov    0x4f44(%esi),%eax
    call   func_12618
    cmp    $0xffffffff,%eax
    jne    jump_13354
    mov    0x4f44(%esi),%eax
    orb    $0x8,0x33(%eax)
    movl   $0xffffffff,0x48(%esp)
  jump_13354:
    mov    0x4f44(%esi),%eax
    mov    0x4c(%esp),%edx
    mov    %edx,0xb(%eax)
  jump_13361:
    mov    0x48(%esp),%eax
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13370:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x54,%esp
    mov    %eax,%ecx
    mov    0xab(%eax),%eax
    xor    %ebp,%ebp
    add    $0xab,%eax
    mov    %ebp,0x24(%esp)
    mov    %ebp,0x28(%esp)
    mov    %ebp,0x2c(%esp)
    xor    %esi,%esi
    mov    (%eax),%dl
    mov    %ebp,0x4c(%esp)
    cmp    $0x3,%dl
    jne    jump_13408
    mov    0x1(%eax),%edi
    lea    0x62(%edi),%esi
    cmpb   $0x0,0x5(%esi)
    je     jump_133be
    mov    $0x27d,%ebx
    mov    $data_801cb,%edx
    xor    %eax,%eax
    call   func_25878
  jump_133be:
    mov    %edi,%edx
    mov    %ecx,%eax
    mov    0x6(%esi),%esi
    call   func_12ae4
    mov    %eax,0x4c(%esp)
    mov    0x9e(%edi),%eax
    mov    %eax,0x24(%esp)
    mov    0xa2(%edi),%eax
    mov    %eax,0x28(%esp)
    mov    0xa6(%edi),%eax
    mov    %eax,0x2c(%esp)
    mov    data_f7ade,%eax
    shl    $0x5,%eax
    mov    %eax,0x3c(%esp)
    add    $0x9e,%edi
    fildl  0x3c(%esp)
    fstps  0x48(%esp)
    jmp    jump_13453
  jump_13408:
    cmp    $0x2,%dl
    jne    jump_13442
    mov    0x1(%eax),%ebx
    lea    0x6b(%ebx),%esi
    mov    %ecx,%eax
    mov    %ebx,%edx
    mov    0x4(%esi),%esi
    call   func_12ae4
    mov    %eax,0x4c(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x24(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x28(%esp)
    mov    0x8(%ebx),%eax
    mov    $0x45480000,%ebx
    mov    %eax,0x2c(%esp)
    mov    %ebx,0x48(%esp)
    jmp    jump_13453
  jump_13442:
    mov    $0x28e,%ebx
    mov    $data_801d8,%edx
    xor    %eax,%eax
    call   func_25888
  jump_13453:
    mov    %esi,%edx
    mov    %ecx,%eax
    call   func_12ae4
    mov    0x4f38(%ecx),%edi
    test   %edi,%edi
    jne    jump_13518
    movw   $0x2,0x5034(%ecx)
    mov    0x1d2a(%ecx),%eax
    mov    %edi,0x4f3c(%ecx)
    add    $0x35,%eax
    mov    %eax,0x4f44(%ecx)
    movb   $0x8,(%eax)
    mov    0x4f44(%ecx),%eax
    mov    0x4c(%esp),%edx
    mov    %edx,0x1(%eax)
    mov    0x4f44(%ecx),%eax
    orb    $0x12,0x33(%eax)
    mov    0x4f44(%ecx),%eax
    movb   $0x0,0x34(%eax)
    lea    0x4f80(%ecx),%ebx
    mov    0x24(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x28(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x2c(%esp),%eax
    mov    %esi,%edx
    mov    %eax,0x8(%ebx)
    mov    %ecx,%eax
    call   func_12ae4
    mov    %eax,0x4f48(%ecx)
    movb   $0x12,0x33(%eax)
    mov    0x4f48(%ecx),%eax
    mov    $0x1,%edx
    movb   $0x1,0x34(%eax)
    lea    0x4f8c(%ecx),%eax
    mov    0x9e(%esi),%ebx
    mov    %ebx,(%eax)
    mov    0xa2(%esi),%ebx
    mov    %ebx,0x4(%eax)
    mov    0xa6(%esi),%ebx
    mov    %ebx,0x8(%eax)
    mov    $data_f8638,%eax
    add    $0x9e,%esi
    call   func_4af80
  jump_13518:
    mov    0x4f3c(%ecx),%eax
    lea    0x4f8c(%ecx),%esi
    test   %eax,%eax
    jne    jump_1365e
    lea    0x4f80(%ecx),%eax
    mov    %esi,%edx
    push   $0x42200000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_136b8
    mov    0x4f48(%ecx),%eax
    mov    0x33(%eax),%dl
    or     $0x2,%dl
    xor    %ebx,%ebx
    mov    %dl,0x33(%eax)
    lea    0x18(%esp),%eax
    mov    %ebx,0xc(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ebx,0x14(%esp)
    mov    %eax,0x40(%esp)
    flds   (%esi)
    fsubs  0x24(%esp)
    fstps  0xc(%esp)
    flds   0x4(%esi)
    fsubs  0x28(%esp)
    fstps  0x10(%esp)
    flds   0x8(%esi)
    fsubs  0x2c(%esp)
    mov    0xc(%esp),%eax
    fstps  0x14(%esp)
    flds   0x10(%esp)
    fmul   %st(0),%st
    mov    %eax,0x18(%esp)
    mov    0x10(%esp),%eax
    flds   0xc(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c(%esp)
    faddp  %st,%st(1)
    mov    0x14(%esp),%eax
    flds   0x14(%esp)
    fmul   %st(0),%st
    mov    %eax,0x20(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fsubs  0x48(%esp)
    fsts   0x50(%esp)
    fcomps data_801e5
    fnstsw %ax
    sahf
    jae    jump_135e0
    movl   $0x42800000,0x50(%esp)
  jump_135e0:
    lea    0x18(%esp),%eax
    push   0x50(%esp)
    call   func_4e444
    flds   0x24(%esp)
    mov    %esp,%eax
    fadds  0x18(%esp)
    mov    %eax,0x44(%esp)
    fstps  0x30(%esp)
    flds   0x28(%esp)
    mov    0x30(%esp),%eax
    fadds  0x1c(%esp)
    mov    %eax,(%esp)
    fstps  0x34(%esp)
    flds   0x2c(%esp)
    mov    0x34(%esp),%eax
    fadds  0x20(%esp)
    mov    %eax,0x4(%esp)
    fstps  0x38(%esp)
    mov    0x38(%esp),%eax
    lea    0x4f98(%ecx),%ebx
    mov    %eax,0x8(%esp)
    mov    0x30(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%ebx)
    movl   $0x1,0x4f3c(%ecx)
    mov    %ebp,%eax
    add    $0x54,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_1365e:
    cmp    $0x1,%eax
    jne    jump_136b3
    lea    0x4f98(%ecx),%edx
    mov    %esi,%eax
    push   $0x40800000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_13684
    movl   $0x2,0x4f3c(%ecx)
  jump_13684:
    lea    0x4f80(%ecx),%eax
    mov    0x4f8c(%ecx),%edx
    mov    %edx,(%eax)
    flds   0x4f90(%ecx)
    add    $0x4f8c,%ecx
    fstps  0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    mov    %ebp,%eax
    add    $0x54,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_136b3:
    mov    $0xffffffff,%ebp
  jump_136b8:
    mov    %ebp,%eax
    add    $0x54,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_136c4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ecx
    mov    0xab(%eax),%edi
    xor    %esi,%esi
    mov    0xab(%edi),%ah
    add    $0xab,%edi
    cmp    $0x3,%ah
    je     jump_136f9
    mov    $0x2d5,%ebx
    mov    $data_801e9,%edx
    xor    %eax,%eax
    call   func_25878
  jump_136f9:
    mov    0x1(%edi),%ebx
    lea    0x62(%ebx),%edi
    mov    0x4f38(%ecx),%edx
    mov    0x6(%edi),%edi
    test   %edx,%edx
    jne    jump_13795
    mov    %ebx,%edx
    mov    %ecx,%eax
    movw   $0x2,0x5034(%ecx)
    call   func_12ae4
    mov    %eax,0x4f44(%ecx)
    movb   $0x14,0x33(%eax)
    mov    0x4f44(%ecx),%eax
    mov    %edi,%edx
    movb   $0x0,0x34(%eax)
    lea    0x4f80(%ecx),%eax
    mov    0x9e(%ebx),%ebp
    mov    %ebp,(%eax)
    mov    0xa2(%ebx),%ebp
    mov    %ebp,0x4(%eax)
    mov    0xa6(%ebx),%ebp
    mov    %ebp,0x8(%eax)
    mov    %ecx,%eax
    call   func_12ae4
    mov    %eax,0x4f48(%ecx)
    movb   $0x14,0x33(%eax)
    mov    0x4f48(%ecx),%eax
    add    $0x9e,%ebx
    lea    0x9e(%edi),%edx
    movb   $0x1,0x34(%eax)
    lea    0x4f8c(%ecx),%eax
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
  jump_13795:
    mov    0x4f38(%ecx),%ebx
    cmp    $0x14,%ebx
    jne    jump_137f5
    lea    0x4f8c(%ecx),%edx
    mov    (%edx),%eax
    mov    %eax,(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x8(%esp)
    mov    0x4f80(%ecx),%eax
    mov    %eax,(%edx)
    mov    0x4f84(%ecx),%eax
    mov    %eax,0x4(%edx)
    mov    0x4f88(%ecx),%eax
    mov    %eax,0x8(%edx)
    mov    (%esp),%eax
    mov    %eax,0x4f80(%ecx)
    mov    0x4(%esp),%eax
    mov    %eax,0x4f84(%ecx)
    add    $0x4f80,%ecx
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%ecx)
    jmp    jump_137ff
  jump_137f5:
    cmp    $0x29,%ebx
    jne    jump_137ff
    mov    $0xffffffff,%esi
  jump_137ff:
    mov    %esi,%eax
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1380c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    %eax,%esi
    mov    0xab(%eax),%ecx
    xor    %edi,%edi
    mov    0xab(%ecx),%ah
    add    $0xab,%ecx
    cmp    $0x3,%ah
    je     jump_13841
    mov    $0x30a,%ebx
    mov    $data_801f6,%edx
    xor    %eax,%eax
    call   func_25878
  jump_13841:
    mov    0x1(%ecx),%eax
    mov    %eax,0x10(%esp)
    lea    0x62(%eax),%ecx
    cmpb   $0x2,0x5(%ecx)
    je     jump_13862
    mov    $0x30f,%ebx
    mov    $data_80203,%edx
    xor    %eax,%eax
    call   func_25878
  jump_13862:
    lea    0x16(%ecx),%edx
    mov    (%edx),%eax
    mov    0x6(%ecx),%ebp
    mov    %eax,(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x8(%esp)
    mov    0x1(%ecx),%eax
    mov    (%eax),%al
    mov    0x4f38(%esi),%edx
    mov    %al,0x14(%esp)
    test   %edx,%edx
    jne    jump_13939
    movw   $0x2,0x5034(%esi)
    mov    0x1d2a(%esi),%eax
    mov    %edx,0x4f3c(%esi)
    add    $0x35,%eax
    mov    %eax,0x4f44(%esi)
    movb   $0x7,(%eax)
    mov    0x4f44(%esi),%eax
    movb   $0x12,0x33(%eax)
    mov    0x4f44(%esi),%eax
    movb   $0x0,0x34(%eax)
    mov    0x10(%esp),%eax
    lea    0x4f80(%esi),%ecx
    flds   0x9e(%eax)
    add    $0x9e,%eax
    fstps  (%ecx)
    mov    0x4(%eax),%edx
    mov    %edx,0x4(%ecx)
    flds   0x8(%eax)
    mov    0x11(%esp),%eax
    sar    $0x18,%eax
    xor    %ebx,%ebx
    shl    $0x2,%eax
    fstps  0x8(%ecx)
    lea    (%esi,%eax,1),%edx
    xor    %ecx,%ecx
    mov    %edx,0xc(%esp)
    mov    %esi,%eax
    mov    0x1a92(%edx),%bx
    mov    0x4f44(%esi),%edx
    call   func_1826c
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_12ae4
    mov    0xc(%esp),%edx
    mov    %eax,0x4f48(%esi)
    mov    0x1bcc(%edx),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
  jump_13939:
    mov    0x4f3c(%esi),%ebx
    test   %ebx,%ebx
    jne    jump_13994
    mov    %esp,%edx
    lea    0x4f80(%esi),%eax
    push   $0x42200000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_139a7
    mov    0x4f44(%esi),%eax
    movl   $0x1,0x4f3c(%esi)
    movb   $0xff,(%eax)
    mov    0x4f48(%esi),%eax
    orb    $0x4,0x33(%eax)
    mov    0x11(%esp),%eax
    sar    $0x18,%eax
    mov    0x1bce(%esi,%eax,4),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
    jmp    jump_139a7
  jump_13994:
    lea    0x1(%ebx),%ecx
    mov    %ecx,0x4f3c(%esi)
    cmp    $0x14,%ecx
    jle    jump_139a7
    mov    $0xffffffff,%edi
  jump_139a7:
    mov    %edi,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_139b4:
    .long   func_139fd
    .long   func_13a04
    .long   func_13a12
    .long   func_13a0b
    .long   func_13a12
    .long   func_13a12
    .long   func_13a0b
    .long   func_13a12
    .long   func_13a0b
    .long   func_13a0b
    .long   func_13a0b


/*----------------------------------------------------------------*/
func_139e0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    0x4f37(%eax),%bl
    sub    $0x4,%bl
    cmp    $0xa,%bl
    ja     func_13a12
    and    $0xff,%ebx
    jmp    *%cs:vtable_139b4(,%ebx,4)


/*----------------------------------------------------------------*/
func_139fd:
/*----------------------------------------------------------------*/
    call   func_13a28
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13a04:
/*----------------------------------------------------------------*/
    call   func_13ad8
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13a0b:
/*----------------------------------------------------------------*/
    call   func_15630
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13a12:
/*----------------------------------------------------------------*/
    mov    $0x35f,%ebx
    mov    $data_80210,%edx
    xor    %eax,%eax
    call   func_25888
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13a28:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%esi
    mov    %edx,%ecx
    cmpb   $0x2,(%edx)
    je     jump_13a49
    mov    $0x368,%ebx
    mov    $data_8021d,%edx
    xor    %eax,%eax
    call   func_25878
  jump_13a49:
    cmpl   $0x14,0x4f38(%esi)
    jge    jump_13a60
    fildl  0x4f38(%esi)
    fsubrl data_8023a
    jmp    jump_13a6c
  jump_13a60:
    fildl  0x4f38(%esi)
    faddl  data_8022a
  jump_13a6c:
    fmull  data_80232
    fstps  0x8(%esp)
    mov    0xf(%ecx),%eax
    mov    %eax,(%esp)
    fildl  (%esp)
    fld    %st(0)
    fmuls  0x8(%esp)
    push   $0x0
    fstp   %st(1)
    call   func_72258
    fistpl 0x4(%esp)
    mov    0x4(%esp),%ebx
    push   %ebx
    push   %ebx
    push   $0x0
    mov    0x27(%ecx),%eax
    push   $data_c8c44
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x7(%ecx),%ebp
    xor    %edx,%edx
    push   %ebp
    mov    0x5(%ecx),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    add    $0x4,%esi
    push   %esi
    call   func_589f1
    add    $0x28,%esp
    add    $0xc,%esp
    pop    %ebp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13ad8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x14,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    0x4f3c(%eax),%eax
    mov    %eax,0x10(%esp)
    cmp    $0xa,%eax
    jle    jump_13b14
    mov    $0x14,%eax
    sub    0x10(%esp),%eax
    mov    $0x2,%ecx
    mov    %eax,0x10(%esp)
    xor    %ebx,%ebx
    mov    %edi,%eax
    mov    0x1b14(%edi),%bx
    call   func_1826c
  jump_13b14:
    push   $0x0
    mov    0xf(%esi),%ecx
    push   %ecx
    push   %ecx
    push   $0x0
    mov    0x27(%esi),%eax
    push   $data_c8c44
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x7(%esi),%eax
    xor    %edx,%edx
    push   %eax
    mov    0x5(%esi),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    add    $0x4,%edi
    push   %edi
    call   func_589f1
    add    $0x28,%esp
    mov    0xf(%esi),%eax
    xor    %edx,%edx
    mov    %eax,(%esp)
    mov    %edx,0x4(%esp)
    mov    0x15(%esi),%edx
    mov    0x11(%esi),%eax
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %eax,%edx
    mov    0x10(%esp),%eax
    imul   %edx,%eax
    fildll (%esp)
    fmull  data_80242
    mov    %eax,0xc(%esp)
    fildl  0xc(%esp)
    fmulp  %st,%st(1)
    fmuls  data_8024a
    push   $0x96
    call   func_72258
    fistpl 0x14(%esp)
    mov    0x14(%esp),%ebx
    push   %ebx
    mov    0x27(%esi),%eax
    push   %ebx
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   %edi
    call   func_5a749
    add    $0x18,%esp
    add    $0x14,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13bc0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_13be0:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_13bf0:
/*----------------------------------------------------------------*/
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    ret


/*----------------------------------------------------------------*/
func_13c10:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x220,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    mov    0xab(%eax),%ecx
    mov    %edx,0x1f8(%esp)
    mov    0xab(%ecx),%ah
    add    $0xab,%ecx
    cmp    $0x3,%ah
    je     jump_13c4f
    mov    $0x31,%ebx
    mov    $data_80250,%edx
    xor    %eax,%eax
    call   func_25878
  jump_13c4f:
    mov    0x1(%ecx),%ecx
    lea    0x62(%ecx),%edi
    mov    0x1(%edi),%eax
    mov    $0x1,%ebx
    xor    %ebp,%ebp
    mov    (%eax),%al
    mov    %ebx,0x200(%esp)
    mov    %al,0x21c(%esp)
    cmp    $0x4a,%al
    jne    jump_13c98
    cmpb   $0x0,0x5(%edi)
    je     jump_13c8a
    mov    $0x3a,%ebx
    mov    $data_8025e,%edx
    xor    %eax,%eax
    call   func_25878
  jump_13c8a:
    mov    0x6(%edi),%ebp
    movl   $0x2,0x200(%esp)
  jump_13c98:
    cmpl   $0x0,0x4f38(%esi)
    jne    jump_13e32
    mov    %esp,%edx
    mov    0x59(%ecx),%eax
    mov    0x21c(%esp),%bl
    call   func_1d754
    mov    %eax,%edi
    movw   $0x1,0x5034(%esi)
    cmp    $0x4a,%bl
    jne    jump_13d53
    mov    %ebp,%edx
    mov    %esi,%eax
    movw   $0x2,0x5034(%esi)
    call   func_12ae4
    mov    %eax,0x4f44(%esi)
    mov    0x1d2a(%esi),%eax
    add    $0x35,%eax
    mov    %eax,0x4f48(%esi)
    movb   $0x7,(%eax)
    mov    0x4f48(%esi),%eax
    movb   $0x12,0x33(%eax)
    mov    0x4f48(%esi),%eax
    add    $0x9e,%ecx
    movb   $0x1,0x34(%eax)
    lea    0x4f8c(%esi),%eax
    mov    (%ecx),%edx
    mov    %edx,(%eax)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    mov    0x219(%esp),%eax
    xor    %ebx,%ebx
    sar    $0x18,%eax
    xor    %ecx,%ecx
    mov    0x1a92(%esi,%eax,4),%ax
    mov    0x4f48(%esi),%edx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
    test   %edi,%edi
    jg     jump_13d6c
    jmp    jump_13e0a
  jump_13d53:
    mov    %esi,%eax
    mov    0x59(%ecx),%edx
    call   func_12ae4
    mov    %eax,0x4f44(%esi)
    test   %edi,%edi
    jg     jump_13d6c
    jmp    jump_13e0a
  jump_13d6c:
    lea    0x4f80(%esi),%eax
    shl    $0x2,%edi
    xor    %ebx,%ebx
    mov    %eax,0x204(%esp)
    mov    %edi,0x208(%esp)
    mov    0x204(%esp),%edi
  jump_13d8c:
    mov    0x5032(%esi),%eax
    sar    $0x10,%eax
    cmp    $0xf,%eax
    jge    jump_13e0a
    mov    (%esp,%ebx,1),%edx
    cmpb   $0x4,0x58(%edx)
    jne    jump_13dfc
    cmp    %ebp,%edx
    je     jump_13dfc
    mov    %esi,%eax
    call   func_12ae4
    orb    $0x12,0x33(%eax)
    mov    0x5034(%esi),%dl
    mov    %dl,0x34(%eax)
    mov    0x31(%eax),%edx
    sar    $0x18,%edx
    imul   $0xc,%edx,%edx
    mov    (%esp,%ebx,1),%ecx
    add    %edi,%edx
    flds   0x9e(%ecx)
    add    $0x9e,%ecx
    fstps  (%edx)
    flds   0x4(%ecx)
    fstps  0x4(%edx)
    flds   0x8(%ecx)
    fstps  0x8(%edx)
    mov    0x5034(%esi),%dx
    movswl %dx,%ecx
    inc    %edx
    mov    %dx,0x5034(%esi)
    mov    %eax,0x4f44(%esi,%ecx,4)
  jump_13dfc:
    mov    0x208(%esp),%edx
    add    $0x4,%ebx
    cmp    %edx,%ebx
    jl     jump_13d8c
  jump_13e0a:
    mov    0x219(%esp),%eax
    sar    $0x18,%eax
    movl   $0x0,0x4f3c(%esi)
    mov    0x1bcc(%esi,%eax,4),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
  jump_13e32:
    lea    0x9e(%ebp),%edx
    mov    0x4f3c(%esi),%ebp
    test   %ebp,%ebp
    jne    jump_13e8a
    cmpb   $0x4a,0x21c(%esp)
    jne    jump_13e6b
    lea    0x4f8c(%esi),%eax
    push   $0x41200000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_13e7a
    mov    0x4f48(%esi),%eax
    orb    $0x8,0x33(%eax)
  jump_13e6b:
    movl   $0x1,0x4f3c(%esi)
    jmp    jump_1420d
  jump_13e7a:
    mov    0x4f48(%esi),%eax
    call   func_12618
    jmp    jump_1420d
  jump_13e8a:
    cmp    $0x1,%ebp
    jne    jump_13edf
    mov    0x4f44(%esi),%eax
    flds   0xb(%eax)
    fadds  data_80278
    xor    %ecx,%ecx
    fstps  0xb(%eax)
    mov    0x4f44(%esi),%eax
    mov    %ecx,data_8a0d8
    flds   0xb(%eax)
    fcomps data_8027c
    fnstsw %ax
    sahf
    jb     jump_1420d
    movl   $0x2,0x4f3c(%esi)
    mov    0x1f8(%esp),%eax
    add    $0x220,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_13edf:
    cmp    $0x2,%ebp
    jne    jump_141d8
    xor    %edi,%edi
    mov    0x21c(%esp),%al
    mov    %edi,0x1dc(%esp)
    mov    %edi,0x1e0(%esp)
    mov    %edi,0x1e4(%esp)
    cmp    $0x4a,%al
    jne    jump_13f27
    mov    (%edx),%eax
    mov    %eax,0x1dc(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x1e0(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x1e4(%esp)
  jump_13f27:
    mov    0x219(%esp),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    fildl  data_f6556(%eax)
    mov    data_f655a(%eax),%eax
    shl    $0x5,%eax
    mov    %eax,0x218(%esp)
    fstps  0x1fc(%esp)
    fildl  0x218(%esp)
    fstps  0x1f0(%esp)
    flds   0x1fc(%esp)
    fsubs  data_8a0d8
    fsts   0x20c(%esp)
    fcompl data_80270
    fnstsw %ax
    sahf
    jbe    jump_13f89
    movl   $0x3e4ccccd,0x20c(%esp)
  jump_13f89:
    flds   data_8a0d8
    mov    $0xffffffff,%ebx
    lea    0x4f80(%esi),%edi
    mov    %ebx,0x1ec(%esp)
    mov    0x200(%esp),%ebx
    fadds  0x20c(%esp)
    lea    0x0(,%ebx,4),%ecx
    fstps  data_8a0d8
    add    %esi,%ecx
    jmp    jump_1407b
  jump_13fc3:
    mov    %ebp,0x1ec(%esp)
  jump_13fca:
    imul   $0xc,%edx,%edx
    lea    0x1c4(%esp),%eax
    push   0x214(%esp)
    call   func_4e444
    flds   0x1dc(%esp)
    lea    0x1d0(%esp),%eax
    fadds  0x1c4(%esp)
    mov    %eax,0x1f4(%esp)
    fstps  0x1b8(%esp)
    flds   0x1e0(%esp)
    mov    0x1b8(%esp),%eax
    fadds  0x1c8(%esp)
    mov    %eax,0x1d0(%esp)
    fstps  0x1bc(%esp)
    flds   0x1e4(%esp)
    mov    0x1bc(%esp),%eax
    fadds  0x1cc(%esp)
    mov    %eax,0x1d4(%esp)
    fstps  0x1c0(%esp)
    mov    0x1c0(%esp),%eax
    mov    %eax,0x1d8(%esp)
    mov    0x1b8(%esp),%eax
    mov    %eax,(%edx,%edi,1)
    mov    0x1d4(%esp),%eax
    mov    %eax,0x4(%edx,%edi,1)
    mov    0x1d8(%esp),%eax
    mov    %eax,0x8(%edx,%edi,1)
  jump_14077:
    add    $0x4,%ecx
    inc    %ebx
  jump_1407b:
    mov    0x5032(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jge    jump_1419e
    mov    0x4f44(%ecx),%edx
    mov    0x31(%edx),%edx
    sar    $0x18,%edx
    imul   $0xc,%edx,%eax
    lea    0x1c4(%esp),%ebp
    mov    %ebp,0x1e8(%esp)
    xor    %ebp,%ebp
    mov    %ebp,0x1ac(%esp)
    mov    %ebp,0x1b0(%esp)
    mov    %ebp,0x1b4(%esp)
    flds   (%edi,%eax,1)
    fsubs  0x1dc(%esp)
    fstps  0x1ac(%esp)
    flds   0x4(%edi,%eax,1)
    fsubs  0x1e0(%esp)
    fstps  0x1b0(%esp)
    flds   0x8(%edi,%eax,1)
    fsubs  0x1e4(%esp)
    mov    0x1ac(%esp),%eax
    fstps  0x1b4(%esp)
    flds   0x1b0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c4(%esp)
    mov    0x1b0(%esp),%eax
    flds   0x1ac(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c8(%esp)
    faddp  %st,%st(1)
    mov    0x1b4(%esp),%eax
    flds   0x1b4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1cc(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fsts   0x210(%esp)
    fcomps 0x1f0(%esp)
    fnstsw %ax
    sahf
    jbe    jump_14077
    flds   0x20c(%esp)
    fmuls  data_80280
    fsubrs 0x210(%esp)
    fsts   0x214(%esp)
    fcomps 0x1f0(%esp)
    fnstsw %ax
    sahf
    jae    jump_13fc3
    mov    0x1f0(%esp),%eax
    mov    %eax,0x214(%esp)
    jmp    jump_13fca
  jump_1419e:
    flds   data_8a0d8
    fcomps 0x1fc(%esp)
    fnstsw %ax
    sahf
    jae    jump_141ba
    cmpl   $0xffffffff,0x1ec(%esp)
    jne    jump_1420d
  jump_141ba:
    movl   $0x3,0x4f3c(%esi)
    mov    0x1f8(%esp),%eax
    add    $0x220,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_141d8:
    mov    0x4f44(%esi),%eax
    flds   0xb(%eax)
    fadds  data_8026c
    fstps  0xb(%eax)
    mov    0x4f44(%esi),%edx
    fld1
    fcomps 0xb(%edx)
    fnstsw %ax
    sahf
    jb     jump_1420d
    mov    $0xffffffff,%ecx
    movl   $0x3f800000,0xb(%edx)
    mov    %ecx,0x1f8(%esp)
  jump_1420d:
    mov    0x1f8(%esp),%eax
    add    $0x220,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_14224:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    mov    0xab(%eax),%edi
    xor    %esi,%esi
    mov    0xab(%edi),%ah
    add    $0xab,%edi
    cmp    $0x3,%ah
    je     jump_14256
    mov    $0xcc,%ebx
    mov    $data_80284,%edx
    xor    %eax,%eax
    call   func_25878
  jump_14256:
    mov    0x1(%edi),%edx
    mov    0x63(%edx),%eax
    mov    0x4f38(%ecx),%edi
    mov    (%eax),%bl
    test   %edi,%edi
    jne    jump_142a5
    mov    %ecx,%eax
    movw   $0x1,0x5034(%ecx)
    call   func_12ae4
    mov    %eax,0x4f44(%ecx)
    orb    $0x4,0x33(%eax)
    mov    %edi,0x4f3c(%ecx)
    movsbl %bl,%eax
    mov    %edi,0x4f40(%ecx)
    mov    0x1bcc(%ecx,%eax,4),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
  jump_142a5:
    mov    0x4f38(%ecx),%eax
    mov    0x4f40(%ecx),%ebp
    and    $0x1,%eax
    add    %eax,%ebp
    mov    0x4f38(%ecx),%eax
    mov    %ebp,0x4f40(%ecx)
    cmp    $0x24,%eax
    jne    jump_142cc
    mov    $0xffffffff,%esi
  jump_142cc:
    mov    %esi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_142d8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %ebp
    sub    $0x2c,%esp
    mov    %eax,%ecx
    mov    0xab(%eax),%esi
    mov    0xab(%esi),%ah
    add    $0xab,%esi
    cmp    $0x3,%ah
    je     jump_1430a
    mov    $0xf5,%ebx
    mov    $data_80292,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1430a:
    mov    0x1(%esi),%ebx
    mov    0x63(%ebx),%eax
    mov    (%eax),%al
    mov    0x4f38(%ecx),%edx
    mov    %al,0x28(%esp)
    test   %edx,%edx
    jne    jump_143e6
    mov    %ebx,%edx
    mov    %ecx,%eax
    movw   $0x1,0x5034(%ecx)
    call   func_12ae4
    mov    %eax,0x4f44(%ecx)
    orb    $0x12,0x33(%eax)
    mov    0x4f44(%ecx),%eax
    movb   $0x0,0x34(%eax)
    lea    0x9e(%ebx),%eax
    lea    0x4f80(%ecx),%edx
    flds   (%eax)
    xor    %ebx,%ebx
    fstps  (%edx)
    mov    0x4(%eax),%esi
    mov    %esi,0x4(%edx)
    mov    0x8(%eax),%esi
    mov    %esi,0x8(%edx)
    mov    %esp,%edx
    mov    %ebx,0xc(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ebx,0x14(%esp)
    mov    %edx,0x18(%esp)
    flds   (%eax)
    fchs
    fstps  0xc(%esp)
    flds   0x4(%eax)
    fchs
    fstps  0x10(%esp)
    flds   0x8(%eax)
    mov    0xc(%esp),%eax
    fchs
    mov    %eax,(%esp)
    mov    0x10(%esp),%eax
    fstps  0x14(%esp)
    mov    %eax,0x4(%esp)
    mov    0x14(%esp),%eax
    lea    0x4f8c(%ecx),%edx
    mov    %eax,0x8(%esp)
    mov    0xc(%esp),%eax
    mov    %eax,(%edx)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x25(%esp),%edx
    sar    $0x18,%edx
    mov    %ebx,0x4f3c(%ecx)
    mov    0x1bcc(%ecx,%edx,4),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
  jump_143e6:
    lea    0x4f8c(%ecx),%eax
    flds   0x4(%eax)
    fmul   %st(0),%st
    flds   (%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    xor    %ebp,%ebp
    flds   0x8(%eax)
    fmul   %st(0),%st
    mov    %ebp,0x24(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    lea    0x4f80(%ecx),%eax
    fstps  0x20(%esp)
    flds   0x4(%eax)
    fmul   %st(0),%st
    flds   (%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x8(%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fstps  0x1c(%esp)
    fld1
    fcomps 0x20(%esp)
    fnstsw %ax
    sahf
    jae    jump_1445b
    flds   0x20(%esp)
    fld    %st(0)
    fsubs  0x1c(%esp)
    fmuls  data_802a0
    fdivp  %st,%st(1)
    fstps  0x24(%esp)
  jump_1445b:
    flds   0x24(%esp)
    fcompl data_802a4
    fnstsw %ax
    sahf
    jae    jump_14472
    movl   $0x404ccccd,0x24(%esp)
  jump_14472:
    lea    0x4f8c(%ecx),%edx
    lea    0x4f80(%ecx),%eax
    push   0x24(%esp)
    call   func_12480
    add    $0x2c,%esp
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_14490:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    0xab(%eax),%esi
    mov    0xab(%esi),%ah
    add    $0xab,%esi
    cmp    $0x3,%ah
    je     jump_144c2
    mov    $0x127,%ebx
    mov    $data_802ac,%edx
    xor    %eax,%eax
    call   func_25878
  jump_144c2:
    mov    0x1(%esi),%esi
    lea    0x62(%esi),%edi
    cmpb   $0x2,0x5(%edi)
    je     jump_144df
    mov    $0x12b,%ebx
    mov    $data_802ba,%edx
    xor    %eax,%eax
    call   func_25878
  jump_144df:
    mov    0x1(%edi),%eax
    mov    0x6(%edi),%ebx
    mov    (%eax),%al
    mov    0x4f38(%ecx),%edx
    mov    %al,(%esp)
    test   %edx,%edx
    jne    jump_14592
    mov    %esi,%edx
    mov    %ecx,%eax
    movw   $0x1,0x5034(%ecx)
    call   func_12ae4
    mov    %eax,0x4f44(%ecx)
    orb    $0x12,0x33(%eax)
    mov    0x4f44(%ecx),%eax
    movb   $0x0,0x34(%eax)
    lea    0x9e(%esi),%eax
    lea    0x4f80(%ecx),%edx
    mov    (%eax),%edi
    mov    %edi,(%edx)
    mov    0x4(%eax),%edi
    mov    %edi,0x4(%edx)
    mov    0x8(%eax),%edi
    mov    %edi,0x8(%edx)
    lea    0x14(%ebx),%edx
    lea    0x4f8c(%ecx),%eax
    mov    (%edx),%edi
    mov    %edi,(%eax)
    mov    0x4(%edx),%edi
    mov    %edi,0x4(%eax)
    mov    0x8(%edx),%edi
    mov    %edi,0x8(%eax)
    mov    0x59(%esi),%edx
    cmp    (%ebx),%edx
    jne    jump_1456d
    lea    0x8(%ebx),%edx
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
  jump_1456d:
    mov    -0x3(%esp),%eax
    sar    $0x18,%eax
    movl   $0x0,0x4f3c(%ecx)
    mov    0x1bcc(%ecx,%eax,4),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
  jump_14592:
    fildl  0x4f38(%ecx)
    fmull  data_802c8
    lea    0x4f8c(%ecx),%edx
    sub    $0x4,%esp
    lea    0x4f80(%ecx),%eax
    fstps  (%esp)
    call   func_12480
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_145c0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    mov    0xab(%eax),%ecx
    mov    %edx,(%esp)
    mov    0xab(%ecx),%ah
    add    $0xab,%ecx
    cmp    $0x3,%ah
    je     jump_145f8
    mov    $0x158,%ebx
    mov    $data_802d0,%edx
    xor    %eax,%eax
    call   func_25878
  jump_145f8:
    mov    0x1(%ecx),%ecx
    lea    0x62(%ecx),%ebp
    cmpb   $0x0,0x5(%ebp)
    je     jump_14615
    mov    $0x15c,%ebx
    mov    $data_802de,%edx
    xor    %eax,%eax
    call   func_25878
  jump_14615:
    mov    0x1(%ebp),%ebx
    mov    0x6(%ebp),%edi
    mov    0x4f38(%esi),%ebp
    mov    (%ebx),%bl
    test   %ebp,%ebp
    jne    jump_146e0
    mov    %ecx,%edx
    mov    %esi,%eax
    movw   $0x3,0x5034(%esi)
    call   func_12ae4
    mov    %eax,0x4f44(%esi)
    orb    $0x4,0x33(%eax)
    mov    0x1d2a(%esi),%eax
    add    $0x35,%eax
    mov    %eax,0x4f48(%esi)
    movb   $0x7,(%eax)
    mov    0x4f48(%esi),%eax
    movb   $0x1a,0x33(%eax)
    mov    0x4f48(%esi),%eax
    add    $0x9e,%ecx
    movb   $0x1,0x34(%eax)
    lea    0x4f8c(%esi),%ebp
    mov    (%ecx),%eax
    mov    %eax,0x0(%ebp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x4(%ebp)
    mov    0x8(%ecx),%eax
    mov    %eax,0x8(%ebp)
    movsbl %bl,%ebp
    xor    %ecx,%ecx
    mov    0x1a92(%esi,%ebp,4),%ax
    xor    %ebx,%ebx
    mov    0x4f48(%esi),%edx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_12ae4
    movl   $0x0,0x4f3c(%esi)
    movl   $0x0,0x4f40(%esi)
    mov    %eax,0x4f4c(%esi)
    mov    0x1bcc(%esi,%ebp,4),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
  jump_146e0:
    mov    0x4f3c(%esi),%eax
    test   %eax,%eax
    jne    jump_14737
    mov    0x4f38(%esi),%eax
    mov    0x4f40(%esi),%edi
    and    $0x1,%eax
    add    %eax,%edi
    mov    %edi,0x4f40(%esi)
    cmp    $0x12,%edi
    jne    jump_147bd
    mov    0x4f44(%esi),%eax
    andb   $0xfb,0x33(%eax)
    mov    0x4f48(%esi),%ecx
    andb   $0xf7,0x33(%ecx)
    movl   $0x1,0x4f3c(%esi)
    movl   $0x0,0x4f40(%esi)
    jmp    jump_147bd
  jump_14737:
    cmp    $0x1,%eax
    jne    jump_1479a
    lea    0x9e(%edi),%edx
    lea    0x4f8c(%esi),%eax
    push   $0x41a00000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_14782
    mov    0x4f48(%esi),%eax
    orb    $0x8,0x33(%eax)
    mov    0x4f4c(%esi),%ecx
    orb    $0x4,0x33(%ecx)
    movl   $0x2,0x4f3c(%esi)
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_14782:
    mov    0x4f48(%esi),%eax
    call   func_12618
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_1479a:
    mov    0x4f38(%esi),%eax
    mov    0x4f40(%esi),%ebx
    and    $0x1,%eax
    add    %eax,%ebx
    mov    %ebx,0x4f40(%esi)
    cmp    $0x12,%ebx
    jne    jump_147bd
    movl   $0xffffffff,(%esp)
  jump_147bd:
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_147cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x68,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    mov    0xab(%eax),%edi
    mov    %edx,0x58(%esp)
    mov    0xab(%edi),%ah
    add    $0xab,%edi
    cmp    $0x3,%ah
    je     jump_14805
    mov    $0x1ac,%ebx
    mov    $data_802ec,%edx
    xor    %eax,%eax
    call   func_25878
  jump_14805:
    mov    0x1(%edi),%ecx
    lea    0x62(%ecx),%edi
    cmpb   $0x0,0x5(%edi)
    je     jump_14822
    mov    $0x1b0,%ebx
    mov    $data_802fa,%edx
    xor    %eax,%eax
    call   func_25878
  jump_14822:
    mov    0x1(%edi),%eax
    mov    (%eax),%al
    movsbl %al,%edx
    imul   $0x6a,%edx,%eax
    mov    $data_f650c,%ebx
    add    %eax,%ebx
    mov    %ebx,0x50(%esp)
    mov    0x4f38(%esi),%ebx
    mov    0x6(%edi),%ebp
    test   %ebx,%ebx
    jne    jump_149f8
    mov    0x1d2a(%esi),%eax
    movw   $0x2,0x5034(%esi)
    add    $0x35,%eax
    mov    %eax,0x4f44(%esi)
    movb   $0x7,(%eax)
    mov    0x4f44(%esi),%eax
    orb    $0x12,0x33(%eax)
    mov    0x4f44(%esi),%eax
    lea    0x4f80(%esi),%edi
    movb   $0x0,0x34(%eax)
    lea    0x9e(%ecx),%eax
    shl    $0x2,%edx
    xor    %ebx,%ebx
    flds   (%eax)
    xor    %ecx,%ecx
    fstps  (%edi)
    flds   0x4(%eax)
    fstps  0x4(%edi)
    flds   0x8(%eax)
    lea    (%esi,%edx,1),%eax
    fstps  0x8(%edi)
    mov    %eax,0x54(%esp)
    mov    0x1a92(%eax),%ax
    mov    0x4f44(%esi),%edx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_12ae4
    mov    %eax,0x4f48(%esi)
    orb    $0x12,0x33(%eax)
    mov    0x4f48(%esi),%eax
    xor    %ecx,%ecx
    movb   $0x1,0x34(%eax)
    lea    0x4f8c(%esi),%ebx
    flds   0x9e(%ebp)
    lea    0xc(%esp),%eax
    fstps  (%ebx)
    mov    0xa2(%ebp),%edx
    mov    %edx,0x4(%ebx)
    mov    0xa6(%ebp),%edx
    mov    %edx,0x8(%ebx)
    mov    %eax,0x60(%esp)
    mov    %ecx,0x3c(%esp)
    mov    %ecx,0x40(%esp)
    mov    %ecx,0x44(%esp)
    flds   (%ebx)
    fsubs  (%edi)
    fstps  0x3c(%esp)
    flds   0x4(%ebx)
    fsubs  0x4(%edi)
    mov    0x3c(%esp),%eax
    fstps  0x40(%esp)
    flds   0x8(%ebx)
    fsubs  0x8(%edi)
    mov    %eax,0xc(%esp)
    mov    0x40(%esp),%eax
    fstps  0x44(%esp)
    mov    %eax,0x10(%esp)
    mov    0x44(%esp),%eax
    lea    0x4f98(%esi),%edx
    mov    %eax,0x14(%esp)
    mov    0x3c(%esp),%eax
    mov    %eax,(%edx)
    mov    0x10(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x50(%esp),%eax
    mov    0x4a(%eax),%eax
    shl    $0x5,%eax
    mov    %eax,0x64(%esp)
    fildl  0x64(%esp)
    sub    $0x4,%esp
    mov    %edx,%eax
    fstps  (%esp)
    call   func_4e444
    lea    0x18(%esp),%eax
    mov    %ecx,0x24(%esp)
    mov    %ecx,0x28(%esp)
    mov    %ecx,0x2c(%esp)
    mov    %eax,0x48(%esp)
    flds   (%ebx)
    fadds  (%edx)
    fstps  0x24(%esp)
    flds   0x4(%ebx)
    fadds  0x4(%edx)
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    flds   0x8(%ebx)
    fadds  0x8(%edx)
    mov    %eax,0x18(%esp)
    mov    0x28(%esp),%eax
    fstps  0x2c(%esp)
    mov    %eax,0x1c(%esp)
    mov    0x2c(%esp),%eax
    mov    %eax,0x20(%esp)
    mov    0x24(%esp),%eax
    mov    %eax,(%edx)
    mov    0x1c(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x20(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x54(%esp),%edx
    mov    %ecx,0x4f3c(%esi)
    mov    0x1bcc(%edx),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    add    $0x9e,%ebp
    call   func_4af80
  jump_149f8:
    mov    0x4f3c(%esi),%eax
    lea    0x4f8c(%esi),%edx
    test   %eax,%eax
    jne    jump_14a45
    mov    0x4f44(%esi),%eax
    call   func_12618
    lea    0x4f80(%esi),%eax
    push   $0x42480000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_14b07
    mov    0x4f44(%esi),%eax
    orb    $0x8,0x33(%eax)
    movl   $0x1,0x4f3c(%esi)
    jmp    jump_14b07
  jump_14a45:
    mov    %esp,%ebx
    mov    %ebx,0x4c(%esp)
    xor    %ebx,%ebx
    lea    0x4f98(%esi),%eax
    mov    %ebx,0x30(%esp)
    mov    %ebx,0x34(%esp)
    mov    %ebx,0x38(%esp)
    flds   (%eax)
    fsubs  (%edx)
    fstps  0x30(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%edx)
    fstps  0x34(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%edx)
    mov    0x30(%esp),%eax
    fstps  0x38(%esp)
    flds   0x34(%esp)
    fmul   %st(0),%st
    mov    %eax,(%esp)
    mov    0x34(%esp),%eax
    flds   0x30(%esp)
    fmul   %st(0),%st
    mov    %eax,0x4(%esp)
    faddp  %st,%st(1)
    mov    0x38(%esp),%eax
    flds   0x38(%esp)
    fmul   %st(0),%st
    mov    %eax,0x8(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fmuls  data_80308
    fsts   0x5c(%esp)
    fcompl data_8030c
    fnstsw %ax
    sahf
    jae    jump_14ad2
    movl   $0x404ccccd,0x5c(%esp)
    jmp    jump_14ae9
  jump_14ad2:
    flds   0x5c(%esp)
    fcomps data_80314
    fnstsw %ax
    sahf
    jbe    jump_14ae9
    movl   $0x42480000,0x5c(%esp)
  jump_14ae9:
    lea    0x4f98(%esi),%edx
    lea    0x4f8c(%esi),%eax
    push   0x5c(%esp)
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_14b07
    mov    %eax,0x58(%esp)
  jump_14b07:
    mov    0x58(%esp),%eax
    add    $0x68,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_14b18:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20c,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    mov    0xab(%eax),%ecx
    mov    %edx,0x1f8(%esp)
    mov    0xab(%ecx),%ah
    add    $0xab,%ecx
    cmp    $0x3,%ah
    je     jump_14b57
    mov    $0x1f9,%ebx
    mov    $data_80318,%edx
    xor    %eax,%eax
    call   func_25878
  jump_14b57:
    mov    0x1(%ecx),%ecx
    lea    0x62(%ecx),%edi
    mov    0x1(%edi),%eax
    mov    (%eax),%al
    mov    %ecx,%ebp
    mov    %al,0x208(%esp)
    cmp    $0x28,%al
    jne    jump_14b89
    cmpb   $0x0,0x5(%edi)
    je     jump_14b86
    mov    $0x201,%ebx
    mov    $data_80326,%edx
    xor    %eax,%eax
    call   func_25878
  jump_14b86:
    mov    0x6(%edi),%ebp
  jump_14b89:
    cmpl   $0x0,0x4f38(%esi)
    jne    jump_14d2e
    mov    %esp,%edx
    mov    0x59(%ecx),%eax
    call   func_1d754
    mov    %eax,%edi
    mov    %ebp,%edx
    mov    %esi,%eax
    movw   $0x2,0x5034(%esi)
    call   func_12ae4
    mov    %eax,0x4f44(%esi)
    mov    0x1d2a(%esi),%eax
    add    $0x35,%eax
    mov    %eax,0x4f48(%esi)
    mov    0x208(%esp),%bl
    movb   $0xff,(%eax)
    cmp    $0x28,%bl
    jne    jump_14c37
    mov    0x4f48(%esi),%eax
    movb   $0x7,(%eax)
    mov    0x4f48(%esi),%eax
    movb   $0x12,0x33(%eax)
    mov    0x4f48(%esi),%eax
    add    $0x9e,%ecx
    movb   $0x1,0x34(%eax)
    lea    0x4f8c(%esi),%eax
    mov    (%ecx),%edx
    mov    %edx,(%eax)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    mov    0x205(%esp),%eax
    xor    %ebx,%ebx
    sar    $0x18,%eax
    xor    %ecx,%ecx
    mov    0x1a92(%esi,%eax,4),%ax
    mov    0x4f48(%esi),%edx
    mov    %ax,%bx
    mov    %esi,%eax
    call   func_1826c
  jump_14c37:
    test   %edi,%edi
    jg     jump_14c40
    jmp    jump_14cde
  jump_14c40:
    lea    0x4f80(%esi),%eax
    shl    $0x2,%edi
    xor    %ebx,%ebx
    mov    %eax,0x1e8(%esp)
    mov    %edi,0x200(%esp)
    mov    0x1e8(%esp),%edi
  jump_14c60:
    mov    0x5032(%esi),%eax
    sar    $0x10,%eax
    cmp    $0xf,%eax
    jge    jump_14cde
    mov    (%esp,%ebx,1),%edx
    cmpb   $0x4,0x58(%edx)
    jne    jump_14cd0
    cmp    %ebp,%edx
    je     jump_14cd0
    mov    %esi,%eax
    call   func_12ae4
    orb    $0x12,0x33(%eax)
    mov    0x5034(%esi),%dl
    mov    %dl,0x34(%eax)
    mov    0x31(%eax),%edx
    sar    $0x18,%edx
    imul   $0xc,%edx,%edx
    mov    (%esp,%ebx,1),%ecx
    add    %edi,%edx
    flds   0x9e(%ecx)
    add    $0x9e,%ecx
    fstps  (%edx)
    flds   0x4(%ecx)
    fstps  0x4(%edx)
    flds   0x8(%ecx)
    fstps  0x8(%edx)
    mov    0x5034(%esi),%dx
    movswl %dx,%ecx
    inc    %edx
    mov    %dx,0x5034(%esi)
    mov    %eax,0x4f44(%esi,%ecx,4)
  jump_14cd0:
    mov    0x200(%esp),%ecx
    add    $0x4,%ebx
    cmp    %ecx,%ebx
    jl     jump_14c60
  jump_14cde:
    mov    0x208(%esp),%bh
    movl   $0x1,0x4f3c(%esi)
    cmp    $0x28,%bh
    jne    jump_14cfe
    movl   $0x0,0x4f3c(%esi)
  jump_14cfe:
    mov    0x205(%esp),%eax
    sar    $0x18,%eax
    movl   $0x0,0x4f40(%esi)
    mov    0x1bcc(%esi,%eax,4),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    xor    %edi,%edi
    call   func_4af80
    mov    %edi,data_8a0dc
  jump_14d2e:
    lea    0x9e(%ebp),%edx
    mov    0x4f3c(%esi),%ebp
    test   %ebp,%ebp
    jne    jump_14d7b
    mov    0x4f48(%esi),%eax
    call   func_12618
    lea    0x4f8c(%esi),%eax
    push   $0x41200000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_15062
    mov    0x4f48(%esi),%eax
    orb    $0x8,0x33(%eax)
    movl   $0x1,0x4f3c(%esi)
    jmp    jump_15062
  jump_14d7b:
    cmp    $0x1,%ebp
    jne    jump_14dcb
    mov    0x4f38(%esi),%eax
    mov    0x4f40(%esi),%edx
    and    %ebp,%eax
    add    %eax,%edx
    mov    0x4f44(%esi),%eax
    mov    %edx,0x4f40(%esi)
    orb    $0x4,0x33(%eax)
    cmpl   $0x9,0x4f40(%esi)
    jne    jump_15062
    movl   $0x2,0x4f3c(%esi)
    mov    0x1f8(%esp),%eax
    add    $0x20c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_14dcb:
    cmp    $0x2,%ebp
    jne    jump_1503b
    mov    (%edx),%eax
    mov    %eax,0x1dc(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x1e0(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x1e4(%esp)
    mov    0x205(%esp),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    lea    0x4f80(%esi),%edi
    mov    %ebp,%ecx
    lea    0x8(%esi),%ebx
    fildl  data_f6556(%eax)
    fstps  0x1f0(%esp)
    mov    $0xffffffff,%eax
    flds   data_8a0dc
    fadds  data_80334
    mov    %eax,0x1fc(%esp)
    fstps  data_8a0dc
    jmp    jump_14efd
  jump_14e39:
    mov    %ebp,0x1fc(%esp)
  jump_14e40:
    imul   $0xc,%edx,%edx
    flds   0x204(%esp)
    fmuls  data_8033c
    sub    $0x4,%esp
    lea    0x1c8(%esp),%eax
    fstps  (%esp)
    call   func_4e444
    flds   0x1dc(%esp)
    lea    0x1d0(%esp),%eax
    fadds  0x1c4(%esp)
    mov    %eax,0x1f4(%esp)
    fstps  0x1b8(%esp)
    flds   0x1e0(%esp)
    mov    0x1b8(%esp),%eax
    fadds  0x1c8(%esp)
    mov    %eax,0x1d0(%esp)
    fstps  0x1bc(%esp)
    flds   0x1e4(%esp)
    mov    0x1bc(%esp),%eax
    fadds  0x1cc(%esp)
    mov    %eax,0x1d4(%esp)
    fstps  0x1c0(%esp)
    mov    0x1c0(%esp),%eax
    mov    %eax,0x1d8(%esp)
    mov    0x1b8(%esp),%eax
    mov    %eax,(%edx,%edi,1)
    mov    0x1d4(%esp),%eax
    mov    %eax,0x4(%edx,%edi,1)
    add    $0x4,%ebx
    mov    0x1d8(%esp),%eax
    inc    %ecx
    mov    %eax,0x8(%edx,%edi,1)
  jump_14efd:
    mov    0x5032(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jge    jump_15001
    mov    0x4f44(%ebx),%edx
    mov    0x31(%edx),%edx
    sar    $0x18,%edx
    imul   $0xc,%edx,%eax
    lea    0x1c4(%esp),%ebp
    mov    %ebp,0x1ec(%esp)
    xor    %ebp,%ebp
    mov    %ebp,0x1ac(%esp)
    mov    %ebp,0x1b0(%esp)
    mov    %ebp,0x1b4(%esp)
    flds   (%edi,%eax,1)
    fsubs  0x1dc(%esp)
    fstps  0x1ac(%esp)
    flds   0x4(%edi,%eax,1)
    fsubs  0x1e0(%esp)
    fstps  0x1b0(%esp)
    flds   0x8(%edi,%eax,1)
    fsubs  0x1e4(%esp)
    mov    0x1ac(%esp),%eax
    fstps  0x1b4(%esp)
    flds   0x1b0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c4(%esp)
    mov    0x1b0(%esp),%eax
    flds   0x1ac(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c8(%esp)
    faddp  %st,%st(1)
    mov    0x1b4(%esp),%eax
    flds   0x1b4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1cc(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fmuls  data_80338
    fadds  data_80334
    fsts   0x204(%esp)
    fcomps 0x1f0(%esp)
    fnstsw %ax
    sahf
    jb     jump_14e39
    mov    0x1f0(%esp),%eax
    mov    %eax,0x204(%esp)
    jmp    jump_14e40
  jump_15001:
    flds   data_8a0dc
    fcomps 0x1f0(%esp)
    fnstsw %ax
    sahf
    jae    jump_1501d
    cmpl   $0xffffffff,0x1fc(%esp)
    jne    jump_15062
  jump_1501d:
    movl   $0x3,0x4f3c(%esi)
    mov    0x1f8(%esp),%eax
    add    $0x20c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_1503b:
    mov    0x4f38(%esi),%eax
    mov    0x4f40(%esi),%ecx
    and    $0x1,%eax
    add    %eax,%ecx
    mov    %ecx,0x4f40(%esi)
    cmp    $0x12,%ecx
    jne    jump_15062
    movl   $0xffffffff,0x1f8(%esp)
  jump_15062:
    mov    0x1f8(%esp),%eax
    add    $0x20c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15078:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    0xab(%eax),%edi
    xor    %esi,%esi
    mov    0xab(%edi),%ah
    add    $0xab,%edi
    cmp    $0x3,%ah
    je     jump_150a9
    mov    $0x283,%ebx
    mov    $data_80340,%edx
    xor    %eax,%eax
    call   func_25878
  jump_150a9:
    mov    0x1(%edi),%edx
    mov    0x63(%edx),%eax
    mov    0x4f38(%ecx),%edi
    mov    (%eax),%bl
    test   %edi,%edi
    jne    jump_150f8
    mov    %ecx,%eax
    movw   $0x1,0x5034(%ecx)
    call   func_12ae4
    mov    %eax,0x4f44(%ecx)
    orb    $0x4,0x33(%eax)
    mov    %edi,0x4f3c(%ecx)
    movsbl %bl,%eax
    mov    %edi,0x4f40(%ecx)
    mov    0x1bcc(%ecx,%eax,4),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
  jump_150f8:
    cmpl   $0x0,0x4f3c(%ecx)
    jne    jump_1512f
    mov    0x4f38(%ecx),%bl
    lea    0x4f40(%ecx),%edx
    test   $0x3,%bl
    sete   %al
    and    $0xff,%eax
    add    %eax,(%edx)
    cmpl   $0x9,0x4f40(%ecx)
    jne    jump_1515a
    movl   $0x1,0x4f3c(%ecx)
    jmp    jump_1515a
  jump_1512f:
    mov    0x4f44(%ecx),%eax
    flds   0xb(%eax)
    fadds  data_8034e
    fstps  0xb(%eax)
    mov    0x4f44(%ecx),%eax
    flds   0xb(%eax)
    fcompl data_80352
    fnstsw %ax
    sahf
    jae    jump_1515a
    mov    $0xffffffff,%esi
  jump_1515a:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15164:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    0xab(%eax),%ecx
    xor    %edi,%edi
    mov    0xab(%ecx),%ah
    add    $0xab,%ecx
    cmp    $0x3,%ah
    je     jump_15196
    mov    $0x2b5,%ebx
    mov    $data_8035a,%edx
    xor    %eax,%eax
    call   func_25878
  jump_15196:
    mov    0x1(%ecx),%ebx
    mov    0x4f38(%esi),%edx
    mov    $0x48,%cl
    test   %edx,%edx
    jne    jump_15200
    mov    %ebx,%edx
    mov    %esi,%eax
    movw   $0x2,0x5034(%esi)
    call   func_12ae4
    mov    %eax,0x4f44(%esi)
    orb    $0x4,0x33(%eax)
    mov    0x1d2a(%esi),%eax
    add    $0x35,%eax
    mov    %eax,0x4f48(%esi)
    movb   $0xff,(%eax)
    movl   $0x0,0x4f3c(%esi)
    lea    0x120(%esi),%edx
    movl   $0x0,0x4f40(%esi)
    mov    0x1bcc(%edx),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
  jump_15200:
    mov    0x4f3c(%esi),%ebp
    test   %ebp,%ebp
    jne    jump_152ad
    mov    0x4f38(%esi),%eax
    mov    0x4f40(%esi),%edx
    and    $0x1,%eax
    add    %eax,%edx
    mov    %edx,0x4f40(%esi)
    cmp    $0x9,%edx
    jne    jump_152da
    mov    0x4f44(%esi),%eax
    orb    $0x8,0x33(%eax)
    mov    0x4f48(%esi),%eax
    movb   $0x7,(%eax)
    mov    0x4f48(%esi),%eax
    orb    $0x10,0x33(%eax)
    mov    0x4f48(%esi),%eax
    movb   $0x1,0x34(%eax)
    lea    0x9e(%ebx),%eax
    lea    0x4f8c(%esi),%edx
    flds   (%eax)
    xor    %ebx,%ebx
    fstps  (%edx)
    mov    0x4(%eax),%ebp
    mov    %ebp,0x4(%edx)
    mov    0x8(%eax),%ebp
    mov    %ebp,0x8(%edx)
    movsbl %cl,%eax
    mov    0x4f48(%esi),%edx
    mov    0x1a92(%esi,%eax,4),%bx
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_1826c
    mov    0x4f48(%esi),%eax
    movl   $0x40a00000,0xb(%eax)
    movl   $0x1,0x4f3c(%esi)
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_152ad:
    cmp    $0x1,%ebp
    jne    jump_152da
    testb  $0x3,0x4f38(%esi)
    jne    jump_152cd
    mov    0x4f48(%esi),%eax
    call   func_12618
    cmp    $0xffffffff,%eax
    jne    jump_152cd
    mov    %eax,%edi
  jump_152cd:
    mov    0x4f48(%esi),%eax
    movl   $0x40a00000,0xb(%eax)
  jump_152da:
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_152e4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c4,%esp
    mov    %eax,%edi
    xor    %edx,%edx
    mov    0xab(%eax),%esi
    mov    %edx,0x1b0(%esp)
    mov    0xab(%esi),%ah
    add    $0xab,%esi
    cmp    $0x3,%ah
    je     jump_15323
    mov    $0x2fa,%ebx
    mov    $data_80368,%edx
    xor    %eax,%eax
    call   func_25878
  jump_15323:
    mov    0x1(%esi),%eax
    mov    $0x26,%dl
    mov    %eax,0x1b4(%esp)
    mov    $data_f650c,%eax
    mov    0x4f38(%edi),%ebx
    add    $0xfbc,%eax
    mov    %dl,0x1c0(%esp)
    mov    %eax,0x1ac(%esp)
    test   %ebx,%ebx
    jne    jump_153bf
    movw   $0x1,0x5034(%edi)
    mov    0x1d2a(%edi),%eax
    mov    %eax,0x4f44(%edi)
    movb   $0xff,(%eax)
    mov    0x4f44(%edi),%eax
    orb    $0x12,0x33(%eax)
    mov    0x1b4(%esp),%edx
    mov    0x4f44(%edi),%eax
    add    $0x9e,%edx
    movb   $0x0,0x34(%eax)
    lea    0x4f80(%edi),%eax
    mov    (%edx),%ecx
    mov    %ecx,(%eax)
    mov    0x4(%edx),%ecx
    mov    %ecx,0x4(%eax)
    flds   0x8(%edx)
    lea    0x98(%edi),%edx
    fstps  0x8(%eax)
    mov    %ebx,0x4f3c(%edi)
    mov    0x1bcc(%edx),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
  jump_153bf:
    mov    0x4f44(%edi),%eax
    cmpb   $0xff,(%eax)
    jne    jump_154d8
    mov    0x1b4(%esp),%eax
    mov    %esp,%edx
    mov    0x59(%eax),%eax
    call   func_1d754
    mov    0x4f3c(%edi),%esi
    and    $0xff,%esi
    mov    %eax,%edx
    cmp    %eax,%esi
    jl     jump_1540a
    jmp    jump_154c2
  jump_153f6:
    mov    0x1b8(%esp),%ecx
    add    $0x4,%eax
    inc    %esi
    cmp    %ecx,%eax
    jl     jump_15428
    jmp    jump_154c2
  jump_1540a:
    mov    0x1b4(%esp),%ebp
    lea    0x0(,%esi,4),%eax
    shl    $0x2,%edx
    mov    0x54(%ebp),%ebp
    mov    %edx,0x1b8(%esp)
    sar    $0x10,%ebp
  jump_15428:
    mov    (%esp,%eax,1),%edx
    mov    0x54(%edx),%ebx
    mov    0x58(%edx),%cl
    sar    $0x10,%ebx
    cmp    $0x4,%cl
    jne    jump_153f6
    cmp    %ebx,%ebp
    je     jump_153f6
    imul   $0x1ee,%ebp,%edx
    cmpb   $0x2,data_92fd6(%edx,%ebx,1)
    jne    jump_153f6
    movw   $0x2,0x5034(%edi)
    mov    (%esp,%eax,1),%ebx
    lea    0x4f8c(%edi),%edx
    mov    0x9e(%ebx),%ecx
    mov    %ecx,(%edx)
    mov    0xa2(%ebx),%ecx
    mov    %ecx,0x4(%edx)
    mov    0xa6(%ebx),%ecx
    mov    %ecx,0x8(%edx)
    mov    0x4f44(%edi),%edx
    movb   $0x7,(%edx)
    xor    %ecx,%ecx
    mov    (%esp,%eax,1),%edx
    mov    %edi,%eax
    add    $0x9e,%ebx
    call   func_12ae4
    mov    %eax,0x4f48(%edi)
    mov    0x1bd(%esp),%eax
    xor    %ebx,%ebx
    sar    $0x18,%eax
    mov    0x4f44(%edi),%edx
    mov    0x1a92(%edi,%eax,4),%bx
    mov    %edi,%eax
    inc    %esi
    call   func_1826c
    mov    %esi,0x4f3c(%edi)
  jump_154c2:
    mov    0x4f44(%edi),%eax
    cmpb   $0xff,(%eax)
    jne    jump_154d8
    movl   $0xffffffff,0x1b0(%esp)
  jump_154d8:
    mov    0x4f44(%edi),%eax
    cmpb   $0xff,(%eax)
    jne    jump_154f3
    movl   $0xffffffff,0x1b0(%esp)
    jmp    jump_15619
  jump_154f3:
    testb  $0x1,0x4f3d(%edi)
    je     jump_1553e
    testb  $0x3,0x4f38(%edi)
    jne    jump_15619
    call   func_12618
    cmp    $0xffffffff,%eax
    jne    jump_15619
    mov    0x4f44(%edi),%eax
    movb   $0xff,(%eax)
    andl   $0xff,0x4f3c(%edi)
    mov    0x1b0(%esp),%eax
    add    $0x1c4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_1553e:
    lea    0x4f8c(%edi),%edx
    call   func_12618
    lea    0x4f80(%edi),%eax
    push   $0x42480000
    call   func_12480
    cmp    $0xffffffff,%eax
    jne    jump_15619
    mov    $0x1,%edx
    mov    0x1b4(%esp),%ecx
    mov    0x4f48(%edi),%eax
    mov    0x1ac(%esp),%ebx
    mov    %dx,0x1bc(%esp)
    mov    0x1(%eax),%eax
    mov    0x54(%ecx),%ecx
    mov    0x4a(%ebx),%ebx
    sar    $0x10,%ecx
    xor    %edx,%edx
    mov    $0x4,%esi
    call   func_46b90
    test   $0x4,%al
    je     jump_155c2
    mov    $0x5,%ebx
    mov    0x4f48(%edi),%eax
    mov    %bx,0x1bc(%esp)
    mov    0x33(%eax),%bh
    or     $0x8,%bh
    mov    $0x5,%esi
    mov    %bh,0x33(%eax)
    jmp    jump_155ea
  jump_155c2:
    test   $0x2,%al
    je     jump_155ea
    mov    0x1bd(%esp),%eax
    sar    $0x18,%eax
    mov    0x1a92(%edi,%eax,4),%esi
    mov    0x1bd0(%edi,%eax,4),%ax
    sar    $0x10,%esi
    mov    %ax,0x1bc(%esp)
  jump_155ea:
    mov    %edi,%eax
    mov    0x4f44(%edi),%edx
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    %si,%bx
    call   func_1826c
    mov    0x1ba(%esp),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
    orb    $0x1,0x4f3d(%edi)
  jump_15619:
    mov    0x1b0(%esp),%eax
    add    $0x1c4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15630:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%edi
    mov    %edx,%esi
    mov    0x4f40(%eax),%eax
    cmp    $0x9,%eax
    jle    jump_1564c
    mov    $0x12,%edx
    sub    %eax,%edx
    mov    %edx,%eax
  jump_1564c:
    test   %eax,%eax
    jge    jump_15654
    xor    %eax,%eax
    jmp    jump_1565e
  jump_15654:
    cmp    $0x9,%eax
    jle    jump_1565e
    mov    $0x9,%eax
  jump_1565e:
    mov    %eax,%edx
    shl    $0x8,%edx
    mov    data_c8c33,%eax
    add    $0xb00,%edx
    add    %edx,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    push   $0x1
    mov    0xf(%esi),%edx
    push   %edx
    push   %edx
    push   $0x0
    mov    0x27(%esi),%eax
    push   $data_c8c44
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x7(%esi),%ecx
    xor    %edx,%edx
    push   %ecx
    mov    0x5(%esi),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    add    $0x4,%edi
    push   %edi
    call   func_589f1
    add    $0x28,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_156c0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    mov    %edx,0x10(%esp)
    mov    %ebx,%edi
    xor    %edx,%edx
    movl   $0x3f800000,0xb(%eax)
    mov    0x10(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    %eax,%ebp
    call   func_5c5e3
    xor    %edx,%edx
    mov    %di,%dx
    add    $0x4,%esp
    cmp    %eax,%edx
    jl     jump_1570c
    mov    $0x38,%ebx
    mov    $data_80378,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1570c:
    mov    %esp,%eax
    push   %eax
    push   $0x0
    push   $0x0
    xor    %eax,%eax
    push   $0x0
    mov    %di,%ax
    push   %eax
    push   %ebp
    call   func_5959d
    add    $0x18,%esp
    mov    (%esp),%edx
    cmp    $0xf4240,%edx
    jg     jump_15737
    cmp    $0xfff0bdc0,%edx
    jge    jump_15745
  jump_15737:
    mov    $0x10,%ebx
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_72280
  jump_15745:
    mov    (%esp),%eax
    mov    %ax,0x13(%esi)
    mov    0x4(%esp),%eax
    mov    %ax,0x15(%esi)
    mov    0x8(%esp),%eax
    mov    %ax,0x17(%esi)
    mov    0xc(%esp),%eax
    mov    %ax,0x19(%esi)
    mov    0x10(%esp),%eax
    mov    %ax,0x5(%esi)
    xor    %eax,%eax
    mov    %di,%ax
    mov    %eax,0x7(%esi)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1577c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_15788
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_15788:
/*----------------------------------------------------------------*/
    movl   $0x0,0x800(%eax)
    ret


/*----------------------------------------------------------------*/
func_15794:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    0x800(%eax),%ebx
    cmp    $0x200,%ebx
    jge    jump_157b0
    test   %edx,%edx
    je     jump_157b0
    mov    %edx,(%eax,%ebx,4)
    incl   0x800(%eax)
  jump_157b0:
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_157b4:
/*----------------------------------------------------------------*/
    sub    $0x8,%esp
    mov    (%eax),%eax
    mov    0x2f(%eax),%eax
    mov    %eax,0x4(%esp)
    mov    (%edx),%eax
    mov    0x2f(%eax),%eax
    flds   0x4(%esp)
    mov    %eax,(%esp)
    xor    %edx,%edx
    fcomps (%esp)
    fnstsw %ax
    sahf
    jbe    jump_157dd
    mov    $0xffffffff,%edx
    jmp    jump_157e4
  jump_157dd:
    jae    jump_157e4
    mov    $0x1,%edx
  jump_157e4:
    mov    %edx,%eax
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_157ec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    $func_157b4,%ecx
    mov    $0x4,%ebx
    mov    0x800(%eax),%edx
    call   func_72316
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15808:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x24,%esp
    mov    %edx,0x14(%esp)
    mov    %ebx,0x8(%esp)
    mov    0x800(%eax),%edi
    dec    %edi
    lea    0x0(,%edi,4),%esi
    add    %eax,%esi
    xor    %ebp,%ebp
    jmp    jump_1582e
  jump_1582a:
    dec    %edi
    sub    $0x4,%esi
  jump_1582e:
    movswl %di,%eax
    test   %eax,%eax
    jl     jump_1593c
    test   %esi,%esi
    jne    jump_1584e
    mov    $0x9e,%ebx
    mov    $data_80387,%edx
    mov    %ebp,%eax
    call   func_25878
  jump_1584e:
    mov    (%esi),%ecx
    cmpb   $0x9,(%ecx)
    jl     jump_15866
    mov    $0xa2,%ebx
    mov    $data_80396,%edx
    mov    %ebp,%eax
    call   func_25878
  jump_15866:
    mov    0x14(%esp),%ebx
    mov    0x25(%ecx),%edx
    mov    0x27(%ecx),%eax
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %ebx,%edx
    sub    0x8(%esp),%eax
    mov    (%ecx),%bl
    cmp    $0x5,%bl
    jne    jump_15897
    imul   %edx,%edx
    imul   %eax,%eax
    add    %edx,%eax
    cmp    $0x50,%eax
    jge    jump_1582a
    mov    %ecx,%eax
    jmp    jump_1593e
  jump_15897:
    cmp    $0x4,%bl
    je     jump_1582a
    mov    0xf(%ecx),%eax
    mov    %eax,(%esp)
    xor    %eax,%eax
    mov    %eax,0x4(%esp)
    fildll (%esp)
    fmuls  data_803a5
    fstps  0x10(%esp)
    filds  0x13(%ecx)
    fmuls  0x10(%esp)
    filds  0x27(%ecx)
    fstps  0xc(%esp)
    fadds  0xc(%esp)
    fildl  0x14(%esp)
    fstps  0x18(%esp)
    fcomps 0x18(%esp)
    fnstsw %ax
    sahf
    ja     jump_1582a
    filds  0x15(%ecx)
    fmuls  0x10(%esp)
    filds  0x29(%ecx)
    fstps  0x20(%esp)
    fadds  0x20(%esp)
    fildl  0x8(%esp)
    fstps  0x1c(%esp)
    fcomps 0x1c(%esp)
    fnstsw %ax
    sahf
    ja     jump_1582a
    filds  0x17(%ecx)
    fmuls  0x10(%esp)
    fadds  0xc(%esp)
    fcomps 0x18(%esp)
    fnstsw %ax
    sahf
    jb     jump_1582a
    filds  0x19(%ecx)
    fmuls  0x10(%esp)
    fadds  0x20(%esp)
    fcomps 0x1c(%esp)
    fnstsw %ax
    sahf
    jb     jump_1582a
    mov    %ecx,%eax
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_1593c:
    xor    %eax,%eax
  jump_1593e:
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_15948:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x54,%esp
    mov    %eax,0x8(%esp)
    mov    %edx,0x1c(%esp)
    mov    0x1c(%esp),%ebp
    xor    %edx,%edx
    mov    %eax,0x2c(%esp)
    mov    %dx,0x40(%esp)
    add    $0x4,%ebp
    jmp    jump_15cad
  jump_1596f:
    xor    %eax,%eax
  jump_15971:
    test   %eax,%eax
    je     jump_159c5
    mov    0x1f(%esi),%ebx
    mov    $0x72,%eax
    test   %ebx,%ebx
    je     jump_15986
    mov    $0x90,%eax
  jump_15986:
    cmpb   $0x6,(%esi)
    jne    jump_1599d
    mov    0x1c(%esp),%edx
    cmpb   $0x3,0xb7(%edx)
    jne    jump_1599d
    mov    $0xf3,%eax
  jump_1599d:
    push   %eax
    mov    0x27(%esi),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x2b(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x29(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   %ebp
    call   func_573c1
    add    $0x1c,%esp
  jump_159c5:
    mov    0x33(%esi),%al
    and    $0x8,%al
    movsbl %al,%eax
    test   %eax,%eax
    jne    jump_15b5a
    mov    0x33(%esi),%al
    and    $0x4,%al
    movsbl %al,%eax
    test   %eax,%eax
    je     jump_159f1
    mov    0x1c(%esp),%eax
    mov    %esi,%edx
    call   func_139e0
    jmp    jump_15b5a
  jump_159f1:
    xor    %edx,%edx
    mov    0x5(%esi),%dx
    cmp    $0xffff,%edx
    je     jump_15b5a
    cmpb   $0x8,(%esi)
    jne    jump_15b28
    mov    %eax,0x30(%esp)
    mov    0x1(%esi),%edi
    mov    %eax,0x24(%esp)
    mov    0x25(%esi),%edx
    mov    0x25(%edi),%eax
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %eax,%edx
    mov    %edx,%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,0xc(%esp)
    mov    0x25(%edi),%edx
    mov    0x25(%esi),%eax
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %edx,%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,0x28(%esp)
    mov    0xc(%esp),%eax
    mov    0x28(%esp),%ecx
    add    %ecx,%eax
    mov    %eax,0x14(%esp)
    je     jump_15a8b
    fildl  0x14(%esp)
    fdivrs data_803ad
    fildl  0x28(%esp)
    fmul   %st(1),%st
    fldl   data_803b1
    fxch   %st(1)
    fadd   %st(1),%st
    call   func_72258
    fistpl 0x30(%esp)
    fildl  0xc(%esp)
    fmulp  %st,%st(2)
    faddp  %st,%st(1)
    call   func_72258
    fistpl 0x24(%esp)
  jump_15a8b:
    push   $0x6a
    mov    0x27(%edi),%eax
    mov    0x28(%esp),%edx
    sar    $0x10,%eax
    push   $0x0
    add    %edx,%eax
    push   %eax
    mov    0x25(%edi),%eax
    mov    0x3c(%esp),%ebx
    sar    $0x10,%eax
    add    %ebx,%eax
    push   %eax
    mov    0x27(%esi),%eax
    sar    $0x10,%eax
    add    %edx,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    add    %ebx,%eax
    push   %eax
    push   %ebp
    call   func_573c1
    add    $0x1c,%esp
    mov    0x27(%edi),%eax
    push   $0x6a
    mov    0x28(%esp),%ebx
    sar    $0x10,%eax
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    mov    0x25(%edi),%eax
    mov    0x3c(%esp),%ecx
    sar    $0x10,%eax
    sub    %ecx,%eax
    push   %eax
    mov    0x27(%esi),%eax
    sar    $0x10,%eax
    sub    %ebx,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    sub    %ecx,%eax
    push   %eax
    push   %ebp
    call   func_573c1
    add    $0x1c,%esp
    push   $0x6d
    mov    0x27(%edi),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x27(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   %ebp
    call   func_573c1
    add    $0x1c,%esp
    jmp    jump_15b5a
  jump_15b28:
    push   %eax
    mov    0xf(%esi),%ecx
    push   %ecx
    push   %ecx
    push   %eax
    mov    0x27(%esi),%eax
    push   $data_c8c44
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x7(%esi),%eax
    push   %eax
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   %ebp
    call   func_589f1
    add    $0x28,%esp
  jump_15b5a:
    mov    0xf(%esi),%eax
    xor    %ecx,%ecx
    mov    %eax,(%esp)
    mov    %ecx,0x4(%esp)
    fildll (%esp)
    fmuls  data_803a9
    mov    (%esi),%ch
    fstps  0x20(%esp)
    cmp    $0x1,%ch
    jne    jump_15be9
    mov    0x1(%esi),%eax
    call   func_34e50
    cmp    $0xffffffff,%eax
    jne    jump_15be9
    filds  0x17(%esi)
    fmuls  0x20(%esp)
    fadds  data_803b9
    call   func_72258
    fistpl 0x18(%esp)
    mov    0x18(%esp),%eax
    mov    %ax,0x48(%esp)
    mov    0x1(%esi),%eax
    mov    0x57(%eax),%al
    and    $0xff,%eax
    imul   $0x1ee,%eax,%eax
    mov    data_92e18(%eax),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    push   %eax
    mov    0x4a(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    push   %eax
    mov    0x27(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x25(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   %ebp
    call   func_5a408
    add    $0x18,%esp
  jump_15be9:
    mov    0x1c(%esp),%eax
    cmp    0xb3(%eax),%esi
    jne    jump_15c98
    flds   0x20(%esp)
    filds  0x13(%esi)
    fmul   %st(1),%st
    filds  0x27(%esi)
    fxch   %st(1)
    fadd   %st(1),%st
    call   func_72258
    fistpl 0x34(%esp)
    filds  0x15(%esi)
    fmul   %st(2),%st
    filds  0x29(%esi)
    fxch   %st(1)
    fadd   %st(1),%st
    call   func_72258
    fistpl 0x38(%esp)
    filds  0x17(%esi)
    fmul   %st(3),%st
    faddp  %st,%st(2)
    fxch   %st(1)
    call   func_72258
    fistpl 0x18(%esp)
    filds  0x19(%esi)
    fmulp  %st,%st(2)
    push   $0x0
    mov    0x38(%esp),%eax
    push   $0xf3
    mov    %ax,0x54(%esp)
    mov    0x40(%esp),%eax
    mov    0x52(%esp),%edx
    mov    %ax,0x44(%esp)
    mov    0x20(%esp),%eax
    faddp  %st,%st(1)
    mov    %ax,0x4c(%esp)
    call   func_72258
    fistpl 0x3c(%esp)
    mov    0x3c(%esp),%eax
    sar    $0x10,%edx
    mov    %ax,0x58(%esp)
    mov    0x42(%esp),%ebx
    mov    0x56(%esp),%eax
    sar    $0x10,%ebx
    sar    $0x10,%eax
    mov    0x4a(%esp),%ecx
    push   %eax
    sar    $0x10,%ecx
    mov    %ebp,%eax
    call   func_2b254
  jump_15c98:
    mov    0x40(%esp),%ebx
    mov    0x2c(%esp),%eax
    inc    %ebx
    add    $0x4,%eax
    mov    %bx,0x40(%esp)
    mov    %eax,0x2c(%esp)
  jump_15cad:
    mov    0x3e(%esp),%eax
    mov    0x8(%esp),%edx
    sar    $0x10,%eax
    cmp    0x800(%edx),%eax
    jge    jump_15d17
    mov    0x2c(%esp),%esi
    mov    (%esi),%esi
    cmpb   $0x4,(%esi)
    jne    jump_15cd8
    mov    0x1c(%esp),%eax
    cmpl   $0x0,0x504a(%eax)
    je     jump_15c98
  jump_15cd8:
    cmpb   $0xff,(%esi)
    je     jump_15c98
    cmpl   $0x0,0x23(%esi)
    je     jump_1596f
    mov    0x1c(%esp),%eax
    cmpl   $0x0,0x5042(%eax)
    jne    jump_15cfd
    cmpb   $0x6,(%esi)
    jne    jump_1596f
  jump_15cfd:
    mov    0x33(%esi),%al
    and    $0x2,%al
    movsbl %al,%eax
    test   %eax,%eax
    jne    jump_1596f
    mov    $0xffffffff,%eax
    jmp    jump_15971
  jump_15d17:
    add    $0x54,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15d20:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_15d2c
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_15d2c:
/*----------------------------------------------------------------*/
    movl   $0x0,0x1900(%eax)
    ret


/*----------------------------------------------------------------*/
func_15d38:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    mov    %edx,%esi
    mov    0x1900(%eax),%edx
    cmp    $0x40,%edx
    jge    jump_15d6c
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %edx,%eax
    shl    $0x2,%eax
    mov    $0x19,%ecx
    lea    (%ebx,%eax,1),%edi
    rep movsl %ds:(%esi),%es:(%edi)
    incl   0x1900(%ebx)
  jump_15d6c:
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15d74:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    mov    0x1900(%eax),%edx
    xor    %ecx,%ecx
    test   %edx,%edx
    jle    jump_15d9f
  jump_15d88:
    mov    %edi,%edx
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    %cx,%bx
    call   func_15da4
    inc    %ecx
    cmp    0x1900(%esi),%ecx
    jl     jump_15d88
  jump_15d9f:
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15da4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    xor    %edx,%edx
    mov    %bx,%dx
    cmp    0x1900(%eax),%edx
    jge    jump_15e17
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %edx,%eax
    shl    $0x2,%eax
    lea    (%ecx,%eax,1),%edx
    mov    0x60(%edx),%ecx
    test   %ecx,%ecx
    jl     jump_15df2
    cmp    $0x7,%ecx
    jge    jump_15df2
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    data_92e18(,%eax,2),%al
    and    $0xff,%eax
    inc    %eax
    jmp    jump_15df4
  jump_15df2:
    xor    %eax,%eax
  jump_15df4:
    mov    %eax,%ecx
    shl    $0x8,%ecx
    mov    func_19be(%esi),%eax
    add    $0x1f00,%ecx
    add    %ecx,%eax
    push   %eax
    push   %edx
    push   $0x4
    add    $0x4,%esi
    push   %esi
    call   func_5e165
    add    $0x10,%esp
  jump_15e17:
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_15e1c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,(%esp)
    mov    %eax,%ebp
    xor    %ebx,%ebx
    mov    0x1900(%eax),%ecx
    mov    %ebx,0x4(%esp)
    test   %ecx,%ecx
    jle    jump_15ecb
    add    $0x4,%edx
    mov    %edx,0x8(%esp)
  jump_15e44:
    mov    0x60(%ebp),%eax
    test   %eax,%eax
    jl     jump_15e88
    cmp    $0x7,%eax
    jge    jump_15e88
    imul   $0x1ee,%eax,%eax
    mov    data_92e18(%eax),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0xc(%esp)
    jmp    jump_15e90
  jump_15e6d:
    mov    0x4(%esp),%esi
    mov    (%esp),%edx
    add    $0x64,%ebp
    inc    %esi
    mov    0x1900(%edx),%edi
    mov    %esi,0x4(%esp)
    cmp    %edi,%esi
    jge    jump_15ecb
    jmp    jump_15e44
  jump_15e88:
    movl   $0x6d,0xc(%esp)
  jump_15e90:
    mov    %ebp,%esi
    xor    %edi,%edi
  jump_15e94:
    inc    %edi
    mov    %edi,%eax
    and    $0x3,%eax
    imul   $0x18,%eax,%eax
    mov    0xc(%esp),%edx
    push   %edx
    push   $0x0
    mov    0x4(%eax,%ebp,1),%ebx
    push   %ebx
    mov    (%eax,%ebp,1),%ecx
    push   %ecx
    mov    0x4(%esi),%eax
    push   %eax
    mov    (%esi),%edx
    push   %edx
    mov    0x20(%esp),%ebx
    push   %ebx
    add    $0x18,%esi
    call   func_573c1
    add    $0x1c,%esp
    cmp    $0x4,%edi
    jge    jump_15e6d
    jmp    jump_15e94
  jump_15ecb:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
  jump_15ed0:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_15ed4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    call   func_2bf10
    mov    $data_85870,%ebx
    mov    $0x64,%edx
    add    $0xbe,%eax
    call   func_72754
    mov    $0x858d4,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x64,%edx
    add    $0x4b0,%eax
    call   func_72754
    mov    $data_85870,%ebx
    mov    $0x64,%edx
    add    $0xfa0,%eax
    call   func_72754
    add    $0x7fc,%eax
    movl   $0x0,(%eax)
    add    $0x14,%eax
    movl   $0x0,-0x10(%eax)
    movl   $0x0,-0xc(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    add    $0x18,%eax
    call   func_1577c
    add    $0x804,%eax
    call   func_1577c
    add    $0x804,%eax
    call   func_1577c
    add    $0x804,%eax
    call   func_15d20
    add    $0x1904,%eax
    call   func_1b4f0
    add    $0x98,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    sub    $0x18,%eax
    movl   $0x0,0x1c(%eax)
    movl   $0x0,0x20(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%edx
    movl   $0x3f800000,(%eax)
    movl   $0x0,(%edx)
    movl   $0x3f800000,0x4(%edx)
    movl   $0x0,0x8(%edx)
    lea    0x18(%eax),%edx
    movl   $0x0,(%edx)
    mov    $data_85870,%ebx
    movl   $0x0,0x4(%edx)
    add    $0x96,%eax
    movl   $0x3f800000,0x8(%edx)
    mov    $0xf,%edx
    call   func_72754
    lea    -0x4f80(%eax),%edx
    mov    %edx,%eax
    movl   $0x858e8,0xa7(%edx) /* Warning: address points to a valid object/reloc, but no label found */
    call   func_16120
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret

vtable_1604c:
    .long   func_c3895153
    .long   func_c1f6d189
    .long   func_ba147404
    .long   func_858c0
    .long   func_5c09be8
    .long   func_c0b6e800
    .long   func_d8890005
    .long   func_8bc35b59
    .long   func_19be90
    .long   func_a780c700
    .long   func_e8000000
    .long   func_85000858
    .long   func_890774d2
    .long   func_f8d6e8d0
    .long   func_838b0000
    .long   func_19be


/*----------------------------------------------------------------*/
func_16120:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x114,%esp
    mov    %eax,%ebp
    movl   $0x0,0xab(%eax)
    movl   $0x0,0x1d2a(%eax)
    lea    0x190(%eax),%edx
    movl   $0x0,func_19be(%eax)
  jump_16152:
    add    $0x4,%eax
    movl   $0x0,0x137a(%eax)
    cmp    %edx,%eax
    jne    jump_16152
    lea    0x1d1e(%ebp),%eax
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,0xb3(%ebp)
    movl   $0x0,0xaf(%ebp)
    movb   $0x0,0xb7(%ebp)
    movb   $0x0,0x4f2e(%ebp)
    movl   $0x2,0xb8(%ebp)
    movw   $0xffff,0xbc(%ebp)
    movl   $0x0,0x4f2f(%ebp)
    movl   $0x0,0x4f33(%ebp)
    movl   $0xffffffff,0x503a(%ebp)
    movl   $0xffffffff,0x5042(%ebp)
    xor    %edx,%edx
    movl   $0xffffffff,0x5046(%ebp)
    mov    $data_803bd,%eax
    movl   $0xffffffff,0x504a(%ebp)
    call   func_1bb10
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_1620f
    mov    $0x1e4,%ebx
    mov    $data_803c7,%edx
    call   func_25878
  jump_1620f:
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2f538
    lea    0x104(%esp),%eax
    push   %eax
    push   $data_803d6
    lea    0x8(%esp),%eax
    push   %eax
    call   func_727ed
    add    $0xc,%esp
    mov    0x104(%esp),%eax
    mov    %eax,0x1a8e(%ebp)
    cmp    $0x64,%eax
    jl     jump_16255
    mov    $0x1ea,%ebx
    mov    $data_803d9,%edx
    xor    %eax,%eax
    call   func_25878
  jump_16255:
    mov    0x1a8e(%ebp),%ebx
    xor    %edi,%edi
    test   %ebx,%ebx
    jle    jump_162b1
    mov    %ebp,%esi
  jump_16263:
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2f538
    lea    0xc8(%esp),%eax
    push   %eax
    push   $data_803e8
    lea    0x8(%esp),%eax
    push   %eax
    mov    $0xffffffff,%ebx
    call   func_727ed
    add    $0xc,%esp
    lea    0xc8(%esp),%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %ax,0x19c6(%esi)
    inc    %edi
    mov    0x1a8e(%ebp),%eax
    add    $0x2,%esi
    cmp    %eax,%edi
    jl     jump_16263
  jump_162b1:
    mov    %ebp,%ebx
    lea    0x13c(%ebp),%esi
  jump_162b9:
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2f538
    lea    0x110(%esp),%eax
    push   %eax
    lea    0x110(%esp),%eax
    push   %eax
    lea    0x110(%esp),%eax
    push   %eax
    lea    0x110(%esp),%eax
    push   %eax
    push   $data_803eb
    lea    0x14(%esp),%eax
    push   %eax
    call   func_727ed
    add    $0x18,%esp
    mov    0x104(%esp),%eax
    mov    %ax,0x1a92(%ebx)
    mov    0x108(%esp),%eax
    mov    %ax,0x1a94(%ebx)
    mov    0x10c(%esp),%eax
    mov    %ax,0x1bce(%ebx)
    add    $0x4,%ebx
    mov    0x110(%esp),%eax
    mov    %ax,0x1bcc(%ebx)
    cmp    %esi,%ebx
    jne    jump_162b9
    mov    %ecx,%eax
    call   func_7280e
    add    $0x114,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_16348:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,0x10(%esp)
    mov    %ecx,%edi
    mov    %edx,%eax
    cmp    $0x3a,%dx
    jb     jump_16c7b
    jbe    jump_16963
    cmp    $0x4c,%dx
    jb     jump_16c3d
    jbe    jump_16a70
    cmp    $0x52,%dx
    jb     jump_16c1d
    jbe    jump_16abe
    cmp    $0x53,%dx
    jbe    jump_16ad4
    cmp    $0x54,%dx
    je     jump_16b88
  jump_1639e:
    mov    0x10(%esp),%ebx
    movswl %si,%edx
    mov    %edi,%ecx
    mov    %ebp,%eax
    call   func_2eb04
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_163b5:
    cmpb   $0x4,0xb7(%ebp)
    jne    jump_163cc
    movl   $0xffffffff,0x5036(%ebp)
  jump_163cc:
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_163d5:
    flds   data_11f108
    fcompl data_8043e
    fnstsw %ax
    sahf
    jbe    jump_163cc
    flds   data_11f108
    fld    %st(0)
    fmull  data_80446
    fstp   %st(1)
    fstps  data_11f108
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16405:
    flds   data_11f108
    fcomps data_80432
    fnstsw %ax
    sahf
    jae    jump_163cc
    flds   data_11f108
    fmull  data_80436
    fstps  data_11f108
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16431:
    cmp    $0xd,%ecx
    jb     jump_16455
    jbe    jump_16405
    cmp    $0x1c,%ecx
    jb     jump_163cc
    jbe    jump_163b5
    cmp    $0x39,%ecx
    je     jump_163b5
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16455:
    cmp    $0xc,%ecx
    je     jump_163d5
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16467:
    mov    $data_803f7,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,0xab(%ebp)
    xor    %eax,%eax
    push   %eax
    xor    %ecx,%ecx
    mov    $0x3a,%ebx
    push   %eax
    mov    0x41(%ebp),%edx
    mov    $data_fa35c,%eax
    call   func_517c4
    mov    %ebp,%eax
    mov    0x10(%esp),%ebx
    call   func_186b8
    mov    %edi,%ecx
    movswl %si,%edx
    mov    %ebp,%eax
    call   func_2eb04
    movl   $0x0,0x4f2f(%ebp)
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_164c0:
    cmpb   $0x4,0xb7(%ebp)
    jne    jump_164d5
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_164d5:
    cmp    0x8(%ebp),%ebx
    jl     jump_163cc
    cmp    0x10(%ebp),%ebx
    jg     jump_163cc
    cmp    0xc(%ebp),%ecx
    jl     jump_163cc
    cmp    0x14(%ebp),%edi
    jg     jump_163cc
    mov    $data_f8638,%eax
    xor    %edx,%edx
    call   func_4af80
    mov    0xaf(%ebp),%esi
    test   %esi,%esi
    je     jump_16526
    mov    $0x1,%ecx
    mov    0x10(%esp),%edx
    mov    %edi,%ebx
    mov    %ebp,%eax
    call   func_16d6c
    jmp    jump_165d5
  jump_16526:
    mov    0xb7(%ebp),%ah
    cmp    $0x2,%ah
    jne    jump_1656d
    xor    %eax,%eax
    mov    0xbc(%ebp),%ax
    cmp    $0xffff,%eax
    jge    jump_16564
    mov    0x10(%esp),%edx
    mov    %edi,%ebx
    mov    0xc(%ebp),%eax
    mov    0x8(%ebp),%ecx
    sub    %eax,%ebx
    sub    %ecx,%edx
    mov    %ebp,%eax
    movb   $0x3,0xb7(%ebp)
    call   func_171d0
    jmp    jump_165d5
  jump_16564:
    movb   $0x0,0xb7(%ebp)
    jmp    jump_165d5
  jump_1656d:
    cmp    $0x3,%ah
    jne    jump_165b0
    mov    $0x5,%ecx
    mov    $0x326,%ebx
    lea    0x1d0a(%ebp),%eax
    mov    0xab(%ebp),%edx
    movb   $0x0,0xb7(%ebp)
    push   %eax
    mov    0x41(%edx),%edx
    mov    $data_fa35c,%eax
    call   func_520f4
    mov    %ebp,%eax
    mov    %esi,0xb3(%ebp)
    call   func_187ec
    xor    %edx,%edx
    mov    %ebp,%eax
    jmp    jump_165d9
  jump_165b0:
    test   %ah,%ah
    jne    jump_165de
    mov    $0x320,%ebx
    mov    $data_fa35c,%eax
    push   %esi
    mov    0xab(%ebp),%edx
    mov    %esi,0xb3(%ebp)
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_520f4
  jump_165d5:
    mov    %ebp,%eax
    xor    %edx,%edx
  jump_165d9:
    call   func_18c2c
  jump_165de:
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_165ea:
    cmp    0x8(%ebp),%ebx
    jl     jump_163cc
    cmp    0x10(%ebp),%ebx
    jg     jump_163cc
    cmp    0xc(%ebp),%edi
    jl     jump_163cc
    cmp    0x14(%ebp),%edi
    jg     jump_163cc
    mov    $data_f8638,%eax
    xor    %edx,%edx
    call   func_4af80
    mov    0xaf(%ebp),%ebx
    test   %ebx,%ebx
    je     jump_16635
    mov    0x10(%esp),%edx
    mov    %edi,%ebx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    call   func_16d6c
    jmp    jump_16666
  jump_16635:
    cmpl   $0x0,0xb3(%ebp)
    je     jump_16666
    mov    $data_fa35c,%eax
    push   %ebx
    mov    0xab(%ebp),%edx
    xor    %ecx,%ecx
    mov    %ebx,0xb3(%ebp)
    mov    $0x320,%ebx
    mov    0x41(%edx),%edx
    call   func_520f4
    movb   $0x0,0xb7(%ebp)
  jump_16666:
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_18c2c
    mov    %ebp,%eax
    call   func_17260
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16682:
    cmpb   $0x4,0xb7(%ebp)
    je     jump_163cc
    mov    %ebx,%eax
    mov    0x8(%ebp),%ebx
    cmp    %ebx,%eax
    jl     jump_166a9
    cmp    0x10(%ebp),%eax
    jg     jump_166a9
    mov    0xc(%ebp),%esi
    cmp    %esi,%edi
    jl     jump_166a9
    cmp    0x14(%ebp),%edi
    jle    jump_166cf
  jump_166a9:
    mov    %ebp,%eax
    movl   $0x0,0xaf(%ebp)
    xor    %edx,%edx
    movl   $0x49742400,0x1d0e(%ebp)
    call   func_18c2c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_166cf:
    cmpl   $0x0,0x4f2f(%ebp)
    jne    jump_163cc
    mov    0x10(%esp),%ecx
    mov    %ebp,%eax
    sub    %esi,%edi
    sub    %ebx,%ecx
    mov    %edi,%ebx
    mov    %ecx,%edx
    call   func_17204
    cmpl   $0x0,0xaf(%ebp)
    jne    jump_16720
    mov    0xb7(%ebp),%ah
    cmp    $0x2,%ah
    jne    jump_16710
    mov    %edi,%ebx
    mov    %ecx,%edx
    mov    %ebp,%eax
    call   func_16fc0
    jmp    jump_16720
  jump_16710:
    cmp    $0x3,%ah
    jne    jump_16720
    mov    %edi,%ebx
    mov    %ecx,%edx
    mov    %ebp,%eax
    call   func_171d0
  jump_16720:
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_18c2c
    cmpb   $0x1,0xb7(%ebp)
    jne    jump_163cc
    mov    0xaf(%ebp),%edx
    test   %edx,%edx
    je     jump_163cc
    mov    (%edx),%bl
    xor    %al,%al
    cmp    $0x2,%bl
    jne    jump_16751
    mov    $0x3,%al
    jmp    jump_16761
  jump_16751:
    cmp    $0x3,%bl
    jne    jump_1675a
    mov    $0x4,%al
    jmp    jump_16761
  jump_1675a:
    cmp    $0x1,%bl
    jne    jump_16761
    mov    $0x2,%al
  jump_16761:
    mov    0xaf(%ebp),%edx
    movsbl %al,%ecx
    mov    $data_fa35c,%eax
    mov    0x1(%edx),%ebx
    mov    0xab(%ebp),%edx
    push   %ebx
    mov    $0x322,%ebx
    mov    0x41(%edx),%edx
    mov    $0x6b,%edi
    call   func_520f4
    cmp    $0xffffffff,%eax
    jne    jump_16795
    mov    $0xf3,%edi
  jump_16795:
    mov    0xaf(%ebp),%eax
    push   %edi
    mov    0x27(%eax),%edx
    push   $0x0
    sar    $0x10,%edx
    mov    0x25(%eax),%eax
    push   %edx
    sar    $0x10,%eax
    push   %eax
    mov    0xb3(%ebp),%eax
    mov    0x27(%eax),%edx
    sar    $0x10,%edx
    mov    0x25(%eax),%eax
    push   %edx
    sar    $0x10,%eax
    push   %eax
    add    $0x4,%ebp
    push   %ebp
    call   func_573c1
    add    $0x1c,%esp
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_167d5:
    cmpb   $0x4,0xb7(%ebp)
    je     jump_163cc
    mov    %ebp,%eax
    call   func_187ec
    xor    %edx,%edx
    mov    %ebp,%eax
    call   func_18c2c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_167fb:
    cmpl   $0xffffffff,0x39(%ebp)
    je     jump_16812
    mov    $0x2e5,%ebx
    mov    $data_80405,%edx
    xor    %eax,%eax
    call   func_25878
  jump_16812:
    movswl %si,%edx
    xor    %eax,%eax
    cmp    $0x32,%edx
    jne    jump_16864
    mov    0x4f2f(%ebp),%ah
    test   $0x1,%ah
    je     jump_1684f
    test   $0x2,%ah
    je     jump_16839
    mov    %ah,%cl
    and    $0xfd,%cl
    mov    %cl,0x4f2f(%ebp)
    jmp    jump_1685f
  jump_16839:
    mov    %ah,%bh
    xor    %edx,%edx
    and    $0xfe,%bh
    mov    %ebp,%eax
    mov    %bh,0x4f2f(%ebp)
    call   func_18c2c
    jmp    jump_1685f
  jump_1684f:
    mov    %ah,%dl
    or     $0x1,%dl
    mov    %dl,%dh
    and    $0xfd,%dh
    mov    %dh,0x4f2f(%ebp)
  jump_1685f:
    mov    $0x3,%eax
  jump_16864:
    movswl %si,%edx
    cmp    $0x33,%edx
    jne    jump_168ae
    mov    0x4f2f(%ebp),%ch
    test   $0x1,%ch
    je     jump_1689f
    test   $0x2,%ch
    je     jump_16892
    mov    %ch,%dh
    and    $0xfe,%dh
    mov    %ebp,%eax
    mov    %dh,0x4f2f(%ebp)
    xor    %edx,%edx
    call   func_18c2c
    jmp    jump_168a9
  jump_16892:
    mov    %ch,%dl
    or     $0x2,%dl
    mov    %dl,0x4f2f(%ebp)
    jmp    jump_168a9
  jump_1689f:
    mov    %ch,%al
    or     $0x3,%al
    mov    %al,0x4f2f(%ebp)
  jump_168a9:
    mov    $0x3,%eax
  jump_168ae:
    movswl %si,%edx
    cmp    $0x36,%edx
    jne    jump_168f4
    mov    0x4f2f(%ebp),%bl
    test   $0x4,%bl
    je     jump_168df
    test   $0x8,%bl
    je     jump_168d3
    mov    %bl,%ah
    and    $0xf7,%ah
    mov    %ah,0x4f2f(%ebp)
    jmp    jump_168ef
  jump_168d3:
    mov    %bl,%al
    and    $0xfb,%al
    mov    %al,0x4f2f(%ebp)
    jmp    jump_168ef
  jump_168df:
    mov    %bl,%bh
    or     $0x4,%bh
    mov    %bh,%cl
    and    $0xf7,%cl
    mov    %cl,0x4f2f(%ebp)
  jump_168ef:
    mov    $0xc,%eax
  jump_168f4:
    movswl %si,%edx
    cmp    $0x37,%edx
    jne    jump_16936
    mov    0x4f2f(%ebp),%dl
    test   $0x4,%dl
    je     jump_16926
    test   $0x8,%dl
    je     jump_16919
    mov    %dl,%cl
    and    $0xfb,%cl
    mov    %cl,0x4f2f(%ebp)
    jmp    jump_16931
  jump_16919:
    mov    %dl,%bh
    or     $0x8,%bh
    mov    %bh,0x4f2f(%ebp)
    jmp    jump_16931
  jump_16926:
    mov    %dl,%dh
    or     $0xc,%dh
    mov    %dh,0x4f2f(%ebp)
  jump_16931:
    mov    $0xc,%eax
  jump_16936:
    cmpl   $0x4,0x10(%esp)
    jne    jump_16957
    push   $0x0
    mov    $0x3b,%ecx
    mov    $0x1,%ebx
    push   %eax
    mov    0x41(%ebp),%edx
    mov    $data_fa35c,%eax
    call   func_51aec
  jump_16957:
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16963:
    mov    0x4f2f(%ebp),%bl
    test   $0x1,%bl
    je     jump_16986
    test   $0x2,%bl
    je     jump_1697a
    mov    $0x2,%edx
    jmp    jump_1697f
  jump_1697a:
    mov    $0xfffffffe,%edx
  jump_1697f:
    mov    %ebp,%eax
    call   func_17e50
  jump_16986:
    mov    0x4f2f(%ebp),%cl
    test   $0x4,%cl
    je     jump_169a9
    test   $0x8,%cl
    je     jump_1699d
    mov    $0xa,%edx
    jmp    jump_169a2
  jump_1699d:
    mov    $0xfffffff6,%edx
  jump_169a2:
    mov    %ebp,%eax
    call   func_182b8
  jump_169a9:
    testb  $0x5,0x4f2f(%ebp)
    je     jump_163cc
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_18c2c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_169c8:
    mov    %ebx,%eax
    mov    0x4f2f(%ebp),%edi
    not    %eax
    and    %eax,%edi
    mov    0x10(%esp),%dh
    mov    %edi,0x4f2f(%ebp)
    test   $0x1,%dh
    je     jump_169ec
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_18c2c
  jump_169ec:
    mov    $0x3b,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%ebp),%edx
    call   func_51b80
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16a0a:
    cmp    $0x1,%ebx
    jl     jump_163cc
    mov    data_c3504,%eax
    mov    0x58(%eax),%edx
    sar    $0x10,%edx
    cmp    %ebx,%edx
    jl     jump_163cc
    mov    %ebx,%edx
    mov    $0x1,%ecx
    mov    0x42(%eax,%edx,4),%eax
    mov    $0x11,%ebx
    mov    %eax,data_c3508
    mov    %ecx,%edx
    mov    $data_fa35c,%eax
    call   func_51f24
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16a50:
    mov    0x503a(%ebp),%esi
    mov    %ebp,%eax
    not    %esi
    xor    %edx,%edx
    mov    %esi,0x503a(%ebp)
    call   func_18c2c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16a70:
    mov    0x5042(%ebp),%eax
    mov    %eax,%ecx
    not    %ecx
    xor    %edx,%edx
    mov    %ecx,0x5046(%ebp)
    mov    %ebp,%eax
    mov    %ecx,0x5042(%ebp)
    call   func_18c2c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16a98:
    mov    %ebp,%eax
    movl   $0x0,0x4f2f(%ebp)
    call   func_17f54
    xor    %edx,%edx
    mov    %ebp,%eax
    call   func_18c2c
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16abe:
    mov    0x10(%esp),%edx
    mov    %ecx,%ebx
    mov    %ebp,%eax
    call   func_126f8
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16ad4:
    mov    0xab(%ebp),%esi
    lea    0x8(%esp),%edi
    lea    0xab(%esi),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    cmpb   $0x0,0x8(%esp)
    jne    jump_16afe
    mov    $0x39a,%ebx
    mov    $data_80414,%edx
    xor    %eax,%eax
    call   func_25878
  jump_16afe:
    mov    0x9(%esp),%edx
    mov    %ebp,%eax
    call   func_12ae4
    mov    %eax,0xb3(%ebp)
    mov    0x25(%eax),%edx
    sar    $0x10,%edx
    mov    %eax,%ebx
    test   %edx,%edx
    jl     jump_16b39
    mov    0x27(%eax),%ebx
    sar    $0x10,%ebx
    test   %ebx,%ebx
    jl     jump_16b39
    mov    0x10(%ebp),%eax
    sub    0x8(%ebp),%eax
    cmp    %eax,%edx
    jg     jump_16b39
    mov    0x14(%ebp),%eax
    sub    0xc(%ebp),%eax
    cmp    %eax,%ebx
    jle    jump_16b46
  jump_16b39:
    mov    %ebp,%eax
    mov    0xb3(%ebp),%edx
    call   func_17e88
  jump_16b46:
    mov    0xb3(%ebp),%eax
    cmpb   $0x2,(%eax)
    jne    jump_16b76
    mov    0x1(%eax),%eax
    xor    %edx,%edx
    mov    0x54(%eax),%ebx
    mov    data_f458e,%dl
    sar    $0x10,%ebx
    cmp    %edx,%ebx
    jne    jump_16b76
    cmpl   $0x0,0x88(%eax)
    jle    jump_16b76
    movb   $0x2,0xb7(%ebp)
  jump_16b76:
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_18c2c
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16b88:
    mov    %ebp,%eax
    call   func_172b0
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16b98:
    mov    data_86a50,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_fa360(,%eax,4),%eax
    test   %eax,%eax
    jne    jump_16bc1
    mov    $0x3b7,%ebx
    mov    $data_80423,%edx
    call   func_25878
  jump_16bc1:
    mov    %ebp,%eax
    call   func_17260
    push   $0x0
    mov    $0x8,%ecx
    mov    $0x4,%ebx
    push   $0x0
    mov    $data_fa35c,%eax
    mov    0x41(%ebp),%edx
    call   func_51aec
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16bef:
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_55634
    mov    $0x8,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%ebp),%edx
    call   func_51b80
    mov    $0xffffffff,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16c1d:
    cmp    $0x50,%dx
    jb     jump_1639e
    jbe    jump_16a0a
    movb   $0x1,0xb7(%ebp)
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16c3d:
    cmp    $0x47,%dx
    jb     jump_16c62
    jbe    jump_16a98
    cmp    $0x4a,%dx
    jb     jump_1639e
    jbe    jump_16a50
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16c62:
    cmp    $0x3b,%dx
    jbe    jump_169c8
    cmp    $0x46,%dx
    je     jump_163cc
    jmp    jump_1639e
  jump_16c7b:
    cmp    $0x6,%dx
    jb     jump_16cd9
    jbe    jump_16bef
    cmp    $0xd,%dx
    jb     jump_16cc0
    jbe    jump_167d5
    cmp    $0x32,%dx
    jb     jump_1639e
    cmp    $0x33,%dx
    jbe    jump_167fb
    cmp    $0x36,%dx
    jb     jump_1639e
    cmp    $0x37,%dx
    jbe    jump_167fb
    jmp    jump_1639e
  jump_16cc0:
    cmp    $0x7,%dx
    jbe    jump_16b98
    cmp    $0x8,%dx
    je     jump_16682
    jmp    jump_1639e
  jump_16cd9:
    cmp    $0x3,%dx
    jb     jump_16d12
    jbe    jump_16431
    cmp    $0x4,%dx
    jbe    jump_164c0
    cmpb   $0x4,0xb7(%ebp)
    jne    jump_165ea
    mov    $0xffffffff,%eax
    movl   $0xffffffff,0x5036(%ebp)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_16d12:
    cmp    $0x1,%dx
    jb     jump_1639e
    jbe    jump_16467
    cmpb   $0x4,0xb7(%ebp)
    jne    jump_16d38
    mov    0xab(%ebp),%eax
    xor    %edx,%edx
    call   func_12238
  jump_16d38:
    mov    $0xffffffff,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%ebp),%edx
    call   func_51884
    mov    %edi,%ecx
    mov    %ebp,%eax
    mov    0x10(%esp),%ebx
    call   func_185cc
    movswl %si,%edx
    mov    %ebp,%eax
    call   func_2eb04
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_16d6c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    cmpl   $0x0,0xaf(%eax)
    jne    jump_16d8b
    mov    $0x3d7,%ebx
    mov    $data_8044e,%edx
    xor    %eax,%eax
    call   func_25878
  jump_16d8b:
    xor    %ebp,%ebp
    test   %ecx,%ecx
    jne    jump_16da3
    mov    %esi,%eax
    mov    0xaf(%esi),%edx
    call   func_17e88
    jmp    jump_16f6f
  jump_16da3:
    mov    0xb7(%esi),%ah
    cmp    $0x1,%ah
    jne    jump_16e3e
    mov    0xaf(%esi),%edi
    mov    (%edi),%bh
    xor    %al,%al
    cmp    $0x2,%bh
    jne    jump_16dc5
    mov    $0x3,%al
    jmp    jump_16dd4
  jump_16dc5:
    cmp    %ah,%bh
    jne    jump_16dcd
    mov    $0x2,%al
    jmp    jump_16dd4
  jump_16dcd:
    cmp    $0x3,%bh
    jne    jump_16dd4
    mov    $0x4,%al
  jump_16dd4:
    movsbl %al,%edi
    mov    0xaf(%esi),%edx
    mov    $data_fa35c,%eax
    mov    %edi,%ecx
    mov    0x1(%edx),%ebx
    mov    0xab(%esi),%edx
    push   %ebx
    mov    $0x322,%ebx
    mov    0x41(%edx),%edx
    call   func_520f4
    cmp    $0xffffffff,%eax
    jne    jump_16f6f
    movb   $0x0,0xb7(%esi)
    mov    0xaf(%esi),%eax
    mov    0xab(%esi),%edx
    mov    $0x326,%ebx
    mov    0x1(%eax),%ecx
    mov    0x41(%edx),%edx
    push   %ecx
    mov    $data_fa35c,%eax
    mov    %edi,%ecx
    call   func_520f4
    movl   $0x0,0xb3(%esi)
    jmp    jump_16f6f
  jump_16e3e:
    mov    0xaf(%esi),%eax
    mov    (%eax),%dl
    cmp    $0x2,%dl
    jne    jump_16e95
    cmpb   $0x0,0xb7(%esi)
    jne    jump_16f6f
    mov    %eax,0xb3(%esi)
    mov    0x1(%eax),%eax
    xor    %edx,%edx
    mov    0x54(%eax),%ecx
    mov    data_f458e,%dl
    sar    $0x10,%ecx
    mov    $0xffffffff,%ebp
    cmp    %edx,%ecx
    jne    jump_16f6f
    cmpl   $0x0,0x88(%eax)
    jle    jump_16f6f
    movb   $0x2,0xb7(%esi)
    jmp    jump_16f6f
  jump_16e95:
    cmp    $0x1,%dl
    jne    jump_16f23
    mov    0xb7(%esi),%ch
    cmp    $0x2,%ch
    je     jump_16eae
    cmp    $0x3,%ch
    jne    jump_16edc
  jump_16eae:
    movb   $0x0,0xb7(%esi)
    mov    0xaf(%esi),%eax
    mov    0xab(%esi),%edx
    mov    $0x326,%ebx
    mov    0x1(%eax),%ecx
    mov    0x41(%edx),%edx
    push   %ecx
    mov    $data_fa35c,%eax
    mov    $0x2,%ecx
    jmp    jump_16f5a
  jump_16edc:
    mov    0xb3(%esi),%ebx
    cmp    %ebx,%eax
    jne    jump_16f10
    test   %ch,%ch
    jne    jump_16f10
    mov    $0x1,%ecx
    mov    0x1(%ebx),%eax
    mov    $0x11,%ebx
    mov    %eax,data_c3508
    mov    %ecx,%edx
    mov    $data_fa35c,%eax
    mov    %ebp,0xaf(%esi)
    call   func_51f24
    jmp    jump_16f6f
  jump_16f10:
    mov    0xaf(%esi),%eax
    mov    $0xffffffff,%ebp
    mov    %eax,0xb3(%esi)
    jmp    jump_16f6f
  jump_16f23:
    cmp    $0x3,%dl
    jne    jump_16f6f
    mov    0xb7(%esi),%bh
    mov    0x1(%eax),%eax
    cmp    $0x2,%bh
    je     jump_16f3a
    cmp    %dl,%bh
    jne    jump_16f6f
  jump_16f3a:
    mov    $0x4,%ecx
    mov    $0x326,%ebx
    push   %eax
    mov    0xab(%esi),%edx
    movb   $0x0,0xb7(%esi)
    mov    $data_fa35c,%eax
    mov    0x41(%edx),%edx
  jump_16f5a:
    call   func_520f4
    mov    %esi,%eax
    call   func_187ec
    xor    %edx,%edx
    mov    %esi,%eax
    call   func_18c2c
  jump_16f6f:
    cmp    $0xffffffff,%ebp
    jne    jump_16fb3
    mov    0xb3(%esi),%edi
    xor    %al,%al
    mov    (%edi),%ah
    cmp    $0x2,%ah
    jne    jump_16f87
    mov    $0x3,%al
    jmp    jump_16f8e
  jump_16f87:
    cmp    $0x1,%ah
    jne    jump_16f8e
    mov    $0x2,%al
  jump_16f8e:
    mov    $0x320,%ebx
    mov    0xb3(%esi),%edx
    movsbl %al,%ecx
    mov    0x1(%edx),%edi
    mov    0xab(%esi),%edx
    push   %edi
    mov    $data_fa35c,%eax
    mov    0x41(%edx),%edx
    call   func_520f4
  jump_16fb3:
    mov    %esi,%eax
    call   func_17260
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_16fc0:
/*----------------------------------------------------------------*/
    push   %ecx
    sub    $0x88,%esp
    mov    %eax,%ecx
    mov    0x4f20(%eax),%eax
    sar    $0x10,%eax
    sub    %eax,%edx
    mov    %edx,0x6c(%esp)
    mov    0x4f22(%ecx),%eax
    fildl  0x6c(%esp)
    sar    $0x10,%eax
    fstps  0x30(%esp)
    sub    %eax,%ebx
    lea    0x48(%esp),%eax
    mov    %ebx,%edx
    mov    %ebx,0x70(%esp)
    neg    %edx
    mov    %eax,0x74(%esp)
    xor    %ebx,%ebx
    mov    %edx,0x70(%esp)
    mov    %ebx,0x34(%esp)
    fildl  0x70(%esp)
    fstps  0x38(%esp)
    mov    0x4f16(%ecx),%eax
    mov    %eax,0x78(%esp)
    flds   0x30(%esp)
    fmuls  0x78(%esp)
    fstps  0x24(%esp)
    fldz
    fmuls  0x78(%esp)
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    flds   0x38(%esp)
    fmuls  0x78(%esp)
    mov    %eax,0x48(%esp)
    mov    0x28(%esp),%eax
    fstps  0x2c(%esp)
    flds   0x24(%esp)
    fmuls  data_8045d
    mov    %eax,0x4c(%esp)
    mov    0x2c(%esp),%eax
    fstps  0x30(%esp)
    flds   0x2c(%esp)
    fmuls  data_80461
    mov    %eax,0x50(%esp)
    mov    0x28(%esp),%eax
    lea    0x4e5e(%ecx),%edx
    mov    %eax,0x34(%esp)
    fstps  0x38(%esp)
    mov    (%edx),%eax
    mov    %eax,0xc(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x10(%esp)
    mov    0x8(%edx),%eax
    lea    0x60(%esp),%edx
    mov    %eax,0x14(%esp)
    mov    %ebx,0x10(%esp)
    mov    $0x3f800000,%eax
    mov    %ebx,0x60(%esp)
    mov    %eax,0x68(%esp)
    lea    0xc(%esp),%eax
    mov    %ebx,0x64(%esp)
    call   func_4e48c
    fstps  0x84(%esp)
    flds   0x10(%esp)
    fmuls  0x68(%esp)
    flds   0x14(%esp)
    fmuls  0x64(%esp)
    fsubrp %st,%st(1)
    fstps  (%esp)
    flds   0x14(%esp)
    fmuls  0x60(%esp)
    flds   0xc(%esp)
    fmuls  0x68(%esp)
    fsubrp %st,%st(1)
    lea    0x54(%esp),%eax
    fstps  0x4(%esp)
    flds   0xc(%esp)
    fmuls  0x64(%esp)
    mov    %eax,0x7c(%esp)
    mov    (%esp),%eax
    flds   0x10(%esp)
    fmuls  0x60(%esp)
    mov    %eax,0x54(%esp)
    mov    0x4(%esp),%eax
    fsubrp %st,%st(1)
    mov    %eax,0x58(%esp)
    fstps  0x8(%esp)
    mov    0x8(%esp),%eax
    fldz
    mov    %eax,0x5c(%esp)
    fcomps 0x4(%esp)
    fnstsw %ax
    sahf
    jbe    jump_17130
    lea    0x30(%esp),%eax
    push   0x84(%esp)
    jmp    jump_17143
  jump_17130:
    flds   0x84(%esp)
    lea    0x30(%esp),%eax
    sub    $0x4,%esp
    fchs
    fstps  (%esp)
  jump_17143:
    call   func_4e69c
    lea    0x18(%esp),%edx
    mov    %edx,0x80(%esp)
    xor    %edx,%edx
    lea    0x1d1e(%ecx),%eax
    mov    %edx,0x3c(%esp)
    mov    %edx,0x40(%esp)
    mov    %edx,0x44(%esp)
    flds   0x30(%esp)
    fadds  (%eax)
    fstps  0x3c(%esp)
    flds   0x34(%esp)
    fadds  0x4(%eax)
    fstps  0x40(%esp)
    flds   0x38(%esp)
    fadds  0x8(%eax)
    mov    0x3c(%esp),%eax
    mov    %eax,0x18(%esp)
    mov    0x40(%esp),%eax
    fstps  0x44(%esp)
    mov    %eax,0x1c(%esp)
    mov    0x44(%esp),%eax
    mov    %eax,0x20(%esp)
    mov    0x3c(%esp),%eax
    mov    %eax,0x1d0a(%ecx)
    mov    0x1c(%esp),%eax
    mov    %eax,0x1d0e(%ecx)
    add    $0x1d0a,%ecx
    mov    0x20(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    %ecx,%eax
    call   func_4e830
    add    $0x88,%esp
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_171d0:
/*----------------------------------------------------------------*/
    sub    $0x8,%esp
    sub    $0xf0,%ebx
    mov    %ebx,(%esp)
    fildl  (%esp)
    fmuls  0x4f16(%eax)
    fmuls  data_80465
    fadds  0x1d22(%eax)
    add    $0x1d0a,%eax
    fstps  0x4(%eax)
    call   func_4e830
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_17204:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    add    $0x1d36,%eax
    mov    %esi,%ecx
    call   func_15808
    mov    %eax,0xaf(%esi)
    test   %eax,%eax
    jne    jump_1723b
    lea    0x253a(%esi),%eax
    mov    %ebp,%ebx
    mov    %edi,%edx
    mov    %esi,%ecx
    call   func_15808
    mov    %eax,0xaf(%esi)
  jump_1723b:
    cmpl   $0x0,0xaf(%esi)
    jne    jump_1725b
    lea    0x2d3e(%esi),%eax
    mov    %ebp,%ebx
    mov    %edi,%edx
    mov    %esi,%ecx
    call   func_15808
    mov    %eax,0xaf(%esi)
  jump_1725b:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_17260:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    data_fd35e,%edx
    cmp    0x41(%eax),%edx
    jne    jump_172a9
    mov    0xb7(%eax),%bl
    mov    0xb8(%eax),%edx
    cmp    $0x1,%bl
    jne    jump_17284
    add    $0x8,%edx
    jmp    jump_17291
  jump_17284:
    cmp    $0x2,%bl
    je     jump_1728e
    cmp    $0x3,%bl
    jne    jump_17291
  jump_1728e:
    add    $0x6,%edx
  jump_17291:
    cmpl   $0x0,0xaf(%eax)
    je     jump_1729b
    inc    %edx
  jump_1729b:
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_55634
  jump_172a9:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_172b0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x98,%esp
    mov    %eax,%ebp
    mov    0xb3(%eax),%edx
    test   %edx,%edx
    je     jump_173e5
    mov    %edx,%eax
    xor    %esi,%esi
    mov    (%edx),%dl
    xor    %edi,%edi
    cmp    $0x2,%dl
    jne    jump_172f8
    mov    0x1(%eax),%eax
    xor    %ecx,%ecx
    mov    0x54(%eax),%edx
    mov    data_f458e,%cl
    sar    $0x10,%edx
    cmp    %ecx,%edx
    jne    jump_172f8
    mov    $data_80469,%esi
    lea    0x34(%eax),%edi
    jmp    jump_17319
  jump_172f8:
    mov    0xb3(%ebp),%eax
    cmpb   $0x1,(%eax)
    jne    jump_17319
    mov    0x1(%eax),%eax
    mov    data_f458e,%bl
    cmp    0x57(%eax),%bl
    jne    jump_17319
    mov    $data_80472,%esi
    lea    0x24(%eax),%edi
  jump_17319:
    test   %esi,%esi
    je     jump_173e5
    mov    $data_8047b,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    $data_80486,%edx
    mov    %esi,%ebx
    mov    %eax,%ecx
    call   func_2f390
    push   %edi
    mov    0xc9a(%ecx),%ebx
    push   %ebx
    lea    0x8(%esp),%eax
    push   %eax
    lea    0xc(%esp),%esi
    mov    %ecx,%edx
    call   func_720c9
    add    $0xc,%esp
    mov    0xc9a(%ecx),%edi
    xor    %ebx,%ebx
    push   %edi
  jump_17364:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1737c
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_17364
  jump_1737c:
    pop    %edi
    mov    $data_fa35c,%eax
    call   func_506bc
    test   %eax,%eax
    je     jump_173e5
    mov    0xb3(%ebp),%eax
    cmpb   $0x2,(%eax)
    jne    jump_173a0
    mov    0x1(%eax),%eax
    call   func_4517c
    jmp    jump_173a8
  jump_173a0:
    mov    0x1(%eax),%eax
    call   func_35930
  jump_173a8:
    push   $0x0
    mov    $0x320,%ebx
    movl   $0x0,0xb3(%ebp)
    mov    $data_fa35c,%eax
    mov    0xab(%ebp),%edx
    movb   $0x0,0xb7(%ebp)
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_520f4
    mov    %ebp,%eax
    call   func_187ec
    xor    %edx,%edx
    mov    %ebp,%eax
    call   func_18c2c
  jump_173e5:
    add    $0x98,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_173f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    lea    0x1d1e(%eax),%edx
    add    $0x4e46,%eax
    call   func_1b958
    mov    %ebx,%eax
    call   func_17430
    pop    %edx
    pop    %ebx
    ret

vtable_17414:
    .long   func_17ab5
    .long   func_17ad1
    .long   func_17af6
    .long   func_17a57
    .long   func_17b6a
    .long   func_17b6a
    .long   func_17b3b


/*----------------------------------------------------------------*/
func_17430:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x154,%esp
    mov    %eax,%ecx
    mov    $data_85870,%ebx
    mov    0x1d2a(%eax),%esi
    xor    %edx,%edx
    lea    0x64(%esp),%eax
    mov    %edx,0xc4(%esp)
    mov    %edx,0xc8(%esp)
    mov    %edx,0xcc(%esp)
    mov    %edx,0xdc(%esp)
    mov    %edx,0xe0(%esp)
    mov    %edx,0xe4(%esp)
    mov    %edx,0xb8(%esp)
    mov    %edx,0xbc(%esp)
    mov    %edx,0xc0(%esp)
    mov    $0x4,%edx
    lea    0x4e86(%ecx),%ebp
    call   func_72754
    lea    0xc4(%esp),%ebx
    xor    %eax,%eax
    mov    %ebp,%edx
    mov    %eax,0xdc(%esp)
    mov    %eax,0xe0(%esp)
    mov    %eax,0xe4(%esp)
    lea    0xdc(%esp),%eax
    mov    $0x41800000,%edi
    call   func_4e774
    mov    0xc4(%esp),%eax
    mov    %edi,0x64(%esp)
    mov    %edi,0x6c(%esp)
    mov    %edi,0x70(%esp)
    mov    %eax,0xdc(%esp)
    mov    0xc8(%esp),%eax
    mov    %edi,0x90(%esp)
    mov    %eax,0xe0(%esp)
    mov    0xcc(%esp),%eax
    xor    %ebx,%ebx
    mov    %eax,0xe4(%esp)
    xor    %eax,%eax
    lea    0x64(%esp),%edi
    mov    %eax,0x68(%esp)
    mov    %eax,0x74(%esp)
    mov    $0xc1800000,%eax
    mov    %ebx,0x80(%esp)
    mov    %eax,0x78(%esp)
    mov    %eax,%edx
    mov    %eax,0x7c(%esp)
    mov    %eax,0x84(%esp)
    mov    %eax,0x88(%esp)
    xor    %eax,%edx
    lea    0x30(%edi),%eax
    mov    %edx,0x8c(%esp)
    mov    %eax,0x120(%esp)
  jump_17553:
    lea    0xc4(%esp),%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_4e774
    flds   0xc4(%esp)
    lea    0xf4(%esp),%eax
    fsubs  0xdc(%esp)
    mov    %eax,0x10c(%esp)
    fstps  0xac(%esp)
    flds   0xc8(%esp)
    mov    0xac(%esp),%eax
    fsubs  0xe0(%esp)
    mov    %eax,0xf4(%esp)
    fstps  0xb0(%esp)
    flds   0xcc(%esp)
    mov    0xb0(%esp),%eax
    fsubs  0xe4(%esp)
    mov    %eax,0xf8(%esp)
    fstps  0xb4(%esp)
    mov    0xb4(%esp),%eax
    mov    %eax,0xfc(%esp)
    mov    0xac(%esp),%eax
    mov    %eax,(%edi)
    mov    0xf8(%esp),%eax
    mov    %eax,0x4(%edi)
    add    $0xc,%edi
    mov    0xfc(%esp),%eax
    mov    %eax,-0x4(%edi)
    cmp    0x120(%esp),%edi
    jne    jump_17553
    flds   0x4f2a(%ecx)
    fmuls  data_8049e
    xor    %edx,%edx
    mov    0x1d32(%ecx),%ebx
    mov    %edx,0x11c(%esp)
    fstps  0x138(%esp)
    test   %ebx,%ebx
    jle    jump_17e42
    lea    0x1d36(%ecx),%eax
    mov    %eax,0x124(%esp)
    lea    0x253a(%ecx),%eax
    mov    %eax,0x12c(%esp)
    lea    0x3542(%ecx),%eax
    mov    %eax,0x13c(%esp)
    lea    0x2d3e(%ecx),%eax
    mov    %eax,0x134(%esp)
    lea    0x4e46(%ecx),%eax
    lea    0x4e86(%ecx),%edi
    mov    %eax,0x130(%esp)
    lea    0x1d1e(%ecx),%eax
    mov    %eax,0x144(%esp)
    lea    0x4f80(%ecx),%eax
    mov    %eax,0x128(%esp)
    lea    0x1d0a(%ecx),%ebp
  jump_17698:
    cmpb   $0x6,(%esi)
    jne    jump_176ce
    mov    0xb7(%ecx),%dl
    cmp    $0x2,%dl
    je     jump_176b1
    cmp    $0x3,%dl
    jne    jump_177a5
  jump_176b1:
    cmpl   $0x0,0xaf(%ecx)
    jne    jump_177a5
    cmpl   $0x49742400,0x1d0e(%ecx)
    je     jump_177a5
  jump_176ce:
    cmpb   $0xff,(%esi)
    je     jump_177a5
    mov    (%esi),%bh
    movl   $0xffffffff,0x1b(%esi)
    cmp    $0x4,%bh
    jne    jump_177ca
    mov    0x1(%esi),%edx
    mov    0x1(%edx),%eax
    mov    %eax,0xc4(%esp)
    mov    0x5(%edx),%eax
    inc    %edx
    mov    %eax,0xc8(%esp)
    mov    0x8(%edx),%eax
    mov    0x130(%esp),%edx
    mov    %eax,0xcc(%esp)
    lea    0xc4(%esp),%eax
    call   func_4e504
    fldz
    fcomps 0xcc(%esp)
    fnstsw %ax
    sahf
    jae    jump_177a5
    lea    0x14c(%esp),%eax
    push   %eax
    lea    0x154(%esp),%eax
    push   %eax
    mov    0x4f22(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xd4(%esp),%eax
    push   0x4e6e(%ecx)
    call   func_4e7c4
    mov    0x150(%esp),%eax
    mov    %ax,0x27(%esi)
    mov    0x14c(%esp),%eax
    mov    %ax,0x29(%esi)
    mov    0xcc(%esp),%eax
    movl   $0x0,0x1b(%esi)
    movl   $0x0,0x23(%esi)
    mov    %esi,%edx
    mov    %eax,0x2f(%esi)
    mov    0x134(%esp),%eax
    movl   $0x10000,0xf(%esi)
    call   func_15794
  jump_177a5:
    mov    0x11c(%esp),%eax
    add    $0x35,%esi
    inc    %eax
    mov    0x1d32(%ecx),%edx
    mov    %eax,0x11c(%esp)
    cmp    %edx,%eax
    jge    jump_17e42
    jmp    jump_17698
  jump_177ca:
    mov    0x33(%esi),%al
    and    $0x10,%al
    mov    $0xffffffff,%ebx
    movsbl %al,%eax
    mov    %ebx,0x114(%esp)
    test   %eax,%eax
    je     jump_17b80
    mov    0x31(%esi),%eax
    sar    $0x18,%eax
    imul   $0xc,%eax,%eax
    mov    0x128(%esp),%edx
    add    %eax,%edx
    mov    (%edx),%eax
    mov    %eax,0xb8(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0xbc(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0xc0(%esp)
  jump_17815:
    mov    0xb8(%esp),%eax
    mov    %eax,0xdc(%esp)
    mov    0xbc(%esp),%eax
    lea    0xc4(%esp),%ebx
    mov    %eax,0xe0(%esp)
    mov    0xc0(%esp),%eax
    mov    %edi,%edx
    mov    %eax,0xe4(%esp)
    lea    0xdc(%esp),%eax
    call   func_4e774
    mov    0x1d22(%ecx),%eax
    mov    %eax,0xe0(%esp)
    lea    0xa0(%esp),%eax
    mov    %eax,0x110(%esp)
    xor    %eax,%eax
    mov    %eax,0xd0(%esp)
    mov    %eax,0xd4(%esp)
    mov    %eax,0xd8(%esp)
    mov    0x144(%esp),%eax
    flds   0xdc(%esp)
    fsubs  (%eax)
    fstps  0xd0(%esp)
    flds   0xe0(%esp)
    fsubs  0x4(%eax)
    fstps  0xd4(%esp)
    flds   0xe4(%esp)
    fsubs  0x8(%eax)
    fstps  0xd8(%esp)
    mov    0xd0(%esp),%eax
    flds   0xd4(%esp)
    fmul   %st(0),%st
    mov    %eax,0xa0(%esp)
    mov    0xd4(%esp),%eax
    flds   0xd0(%esp)
    fmul   %st(0),%st
    mov    %eax,0xa4(%esp)
    mov    0xd8(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0xa8(%esp)
    flds   0xd8(%esp)
    mov    0xd0(%esp),%eax
    fmuls  0xd8(%esp)
    mov    %eax,0xdc(%esp)
    mov    0xd4(%esp),%eax
    mov    %eax,0xe0(%esp)
    mov    0xd8(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0xe4(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fcomps 0x138(%esp)
    fnstsw %ax
    sahf
    setae  %al
    and    $0xff,%eax
    dec    %eax
    mov    %eax,0x23(%esi)
    flds   0xcc(%esp)
    fcomps 0x4e72(%ecx)
    fnstsw %ax
    sahf
    jbe    jump_177a5
    flds   0xcc(%esp)
    fcomps 0x4e76(%ecx)
    fnstsw %ax
    sahf
    jae    jump_177a5
    lea    0x14c(%esp),%eax
    push   %eax
    lea    0x154(%esp),%eax
    push   %eax
    mov    0x4f22(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xd4(%esp),%eax
    push   0x4e6e(%ecx)
    call   func_4e7c4
    mov    0x150(%esp),%eax
    mov    %ax,0x27(%esi)
    mov    0x14c(%esp),%eax
    mov    %ax,0x29(%esi)
    mov    0xcc(%esp),%eax
    mov    %eax,0x2f(%esi)
    mov    (%esi),%al
    movl   $0x0,0x1b(%esi)
    cmp    $0x7,%al
    jne    jump_179f3
    flds   0x2f(%esi)
    fadds  data_804aa
    fstps  0x2f(%esi)
  jump_179f3:
    flds   0x4f1a(%ecx)
    mov    $0x48000000,%eax
    fmuls  data_804a2
    mov    %eax,0x148(%esp)
    fstps  0x140(%esp)
    flds   0x2f(%esi)
    fcomps 0x4e72(%ecx)
    fnstsw %ax
    sahf
    jb     jump_17a31
    flds   0x140(%esp)
    fdivs  0x2f(%esi)
    fstps  0x148(%esp)
  jump_17a31:
    flds   0x148(%esp)
    fcomps data_804a2
    fnstsw %ax
    sahf
    jae    jump_17b93
    movl   $0x46800000,0x148(%esp)
    jmp    jump_17bb0


/*----------------------------------------------------------------*/
func_17a57:
/*----------------------------------------------------------------*/
    mov    0x33(%esi),%al
    and    $0x1,%al
    movsbl %al,%eax
    test   %eax,%eax
    je     jump_17a8c
    mov    0x1(%esi),%edx
    mov    0x8(%edx),%eax
    mov    %eax,0xb8(%esp)
    mov    0xc(%edx),%eax
    mov    %eax,0xbc(%esp)
    mov    0x10(%edx),%eax
    add    $0x8,%edx
    mov    %eax,0xc0(%esp)
    jmp    jump_17815
  jump_17a8c:
    mov    0x1(%esi),%edx
    mov    0x14(%edx),%eax
    mov    %eax,0xb8(%esp)
    mov    0x18(%edx),%eax
    mov    %eax,0xbc(%esp)
    mov    0x1c(%edx),%eax
    add    $0x14,%edx
    mov    %eax,0xc0(%esp)
    jmp    jump_17815


/*----------------------------------------------------------------*/
func_17ab5:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    mov    %eax,0xb8(%esp)
    mov    %eax,0xbc(%esp)
    mov    %eax,0xc0(%esp)
    jmp    jump_17815


/*----------------------------------------------------------------*/
func_17ad1:
/*----------------------------------------------------------------*/
    mov    0x1(%esi),%edx
    mov    (%edx),%eax
    mov    %eax,0xb8(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0xbc(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0xc0(%esp)
    jmp    jump_17815


/*----------------------------------------------------------------*/
func_17af6:
/*----------------------------------------------------------------*/
    mov    0x1(%esi),%edx
    mov    0x9e(%edx),%eax
    mov    %eax,0xb8(%esp)
    mov    0xa2(%edx),%eax
    mov    %eax,0xbc(%esp)
    mov    0xa6(%edx),%eax
    mov    %eax,0xc0(%esp)
    mov    0x1(%esi),%eax
    mov    0x54(%eax),%eax
    sar    $0x10,%eax
    add    $0x9e,%edx
    mov    %eax,0x114(%esp)
    jmp    jump_17815


/*----------------------------------------------------------------*/
func_17b3b:
/*----------------------------------------------------------------*/
    mov    0x0(%ebp),%eax
    mov    %eax,0xb8(%esp)
    mov    0x4(%ebp),%eax
    mov    %eax,0xbc(%esp)
    mov    0x8(%ebp),%eax
    mov    %eax,0xc0(%esp)
    lea    0xb8(%esp),%eax
    call   func_4e830
    jmp    jump_17815


/*----------------------------------------------------------------*/
func_17b6a:
/*----------------------------------------------------------------*/
    mov    $0x53e,%ebx
    mov    $data_8048f,%edx
    xor    %eax,%eax
    call   func_25888
    jmp    jump_17815
  jump_17b80:
    mov    (%esi),%al
    cmp    $0x6,%al
    ja     func_17b6a
    and    $0xff,%eax
    jmp    *%cs:vtable_17414(,%eax,4)
  jump_17b93:
    flds   0x148(%esp)
    fcomps data_804ae
    fnstsw %ax
    sahf
    jbe    jump_17bb0
    movl   $0x48000000,0x148(%esp)
  jump_17bb0:
    flds   0x148(%esp)
    fmuls  0xb(%esi)
    call   func_72258
    fistpll 0x100(%esp)
    mov    0x100(%esp),%eax
    mov    %eax,0xf(%esi)
    flds   0x4f16(%ecx)
    fmuls  data_804a6
    fadds  0x1d22(%ecx)
    mov    0x23(%esi),%eax
    fstps  0x108(%esp)
    test   %eax,%eax
    je     jump_17df7
    mov    0x33(%esi),%al
    and    $0x2,%al
    movsbl %al,%eax
    test   %eax,%eax
    jne    jump_17df7
    mov    0xb8(%esp),%eax
    mov    %eax,0xdc(%esp)
    mov    0xc0(%esp),%eax
    lea    0xc4(%esp),%ebx
    mov    %eax,0xe4(%esp)
    mov    0x108(%esp),%eax
    mov    %edi,%edx
    mov    %eax,0xe0(%esp)
    lea    0xdc(%esp),%eax
    call   func_4e774
    mov    0xc4(%esp),%eax
    mov    %eax,0xdc(%esp)
    mov    0xc8(%esp),%eax
    mov    %eax,0xe0(%esp)
    mov    0xcc(%esp),%eax
    mov    %eax,0xe4(%esp)
    lea    0x14c(%esp),%eax
    push   %eax
    lea    0x154(%esp),%eax
    push   %eax
    mov    0x4f22(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xd4(%esp),%eax
    push   0x4e6e(%ecx)
    call   func_4e7c4
    mov    0x150(%esp),%eax
    mov    %ax,0x2b(%esi)
    lea    0x64(%esp),%ebx
    mov    0x14c(%esp),%eax
    xor    %edx,%edx
    mov    %ax,0x2d(%esi)
  jump_17cbf:
    lea    0xe8(%esp),%eax
    mov    %eax,0x118(%esp)
    xor    %eax,%eax
    mov    %eax,0x94(%esp)
    mov    %eax,0x98(%esp)
    mov    %eax,0x9c(%esp)
    flds   0xdc(%esp)
    fadds  (%ebx)
    fstps  0x94(%esp)
    flds   0xe0(%esp)
    fadds  0x4(%ebx)
    mov    0x94(%esp),%eax
    fstps  0x98(%esp)
    flds   0xe4(%esp)
    fadds  0x8(%ebx)
    mov    %eax,0xe8(%esp)
    mov    0x98(%esp),%eax
    fstps  0x9c(%esp)
    mov    %eax,0xec(%esp)
    mov    0x9c(%esp),%eax
    mov    %eax,0xf0(%esp)
    mov    0x94(%esp),%eax
    mov    %eax,0xc4(%esp)
    mov    0x98(%esp),%eax
    mov    %eax,0xc8(%esp)
    mov    0x9c(%esp),%eax
    mov    %eax,0xcc(%esp)
    lea    0x14c(%esp),%eax
    push   %eax
    lea    0x154(%esp),%eax
    push   %eax
    mov    0x4f22(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%ecx),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xd4(%esp),%eax
    push   0x4e6e(%ecx)
    call   func_4e7c4
    mov    0x14e(%esp),%eax
    sar    $0x10,%eax
    mov    %eax,(%esp,%edx,1)
    mov    0x14a(%esp),%eax
    add    $0x18,%edx
    sar    $0x10,%eax
    add    $0xc,%ebx
    mov    %eax,-0x14(%esp,%edx,1)
    cmp    $0x60,%edx
    jne    jump_17cbf
    mov    0x114(%esp),%eax
    mov    %esp,%edx
    mov    %eax,0x60(%esp)
    mov    0x13c(%esp),%eax
    call   func_15d38
    cmpb   $0x6,(%esi)
    jne    jump_17df7
    mov    0x4e42(%ecx),%ax
    dec    %eax
    mov    %ax,0xbc(%ecx)
  jump_17df7:
    flds   0xbc(%esp)
    fsubs  0x108(%esp)
    fldz
    fcompp
    fnstsw %ax
    sahf
    jb     jump_17e28
    mov    0x124(%esp),%eax
    mov    %esi,%edx
    movl   $0xffffffff,0x1f(%esi)
    call   func_15794
    jmp    jump_177a5
  jump_17e28:
    mov    0x12c(%esp),%eax
    mov    %esi,%edx
    movl   $0x0,0x1f(%esi)
    call   func_15794
    jmp    jump_177a5
  jump_17e42:
    add    $0x154,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_17e50:
/*----------------------------------------------------------------*/
    sub    $0x8,%esp
    mov    %edx,0x4(%esp)
    fildl  0x4(%esp)
    fmuls  data_11f108
    add    $0x4e46,%eax
    fstps  (%esp)
    push   (%esp)
    call   func_1baf0
    add    $0x8,%esp
    ret

vtable_17e78:
    .long   func_17ee5
    .long   func_17efd
    .long   func_17ec4
    .long   func_17f14


/*----------------------------------------------------------------*/
func_17e88:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    test   %edx,%edx
    jne    jump_17ea8
    mov    $0x5bd,%ebx
    mov    $data_804b2,%edx
    xor    %eax,%eax
    call   func_25878
  jump_17ea8:
    mov    (%ecx),%al
    cmp    $0x3,%al
    ja     jump_15ed0
    xor    %edx,%edx
    mov    %al,%dl
    lea    0x1d1e(%esi),%eax
    jmp    *%cs:vtable_17e78(,%edx,4)


/*----------------------------------------------------------------*/
func_17ec4:
/*----------------------------------------------------------------*/
    mov    0x1(%ecx),%ecx
    flds   0x9e(%ecx)
    add    $0x9e,%ecx
    fstps  (%eax)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_17ee5:
/*----------------------------------------------------------------*/
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_17efd:
/*----------------------------------------------------------------*/
    mov    0x1(%ecx),%ecx
    mov    (%ecx),%edx
    mov    %edx,(%eax)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_17f14:
/*----------------------------------------------------------------*/
    mov    0x1(%ecx),%ecx
    mov    data_c3504,%edx
    cmp    (%ecx),%edx
    jne    jump_17f39
    flds   0x8(%ecx)
    add    $0x8,%ecx
    fstps  (%eax)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_17f39:
    flds   0x14(%ecx)
    add    $0x14,%ecx
    fstps  (%eax)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%eax)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_17f54:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    lea    0x1d1e(%eax),%edx
    movl   $0x0,(%edx)
    movl   $0x0,0x4(%edx)
    movl   $0x0,0x8(%edx)
    lea    0x4e7a(%eax),%edx
    flds   0x4f1a(%eax)
    lea    0x4ede(%eax),%ebx
    fstps  0x4f16(%eax)
    mov    (%ebx),%ecx
    mov    %ecx,(%edx)
    mov    0x4(%ebx),%ecx
    mov    %ecx,0x4(%edx)
    mov    0x8(%ebx),%ecx
    mov    %ecx,0x8(%edx)
    lea    0x4e46(%eax),%edx
    lea    0x4eea(%eax),%ebx
    lea    0xc(%edx),%esi
    flds   (%ebx)
    lea    0xc(%ebx),%ecx
    fstps  (%edx)
    add    $0x18,%edx
    flds   0x4(%ebx)
    add    $0x18,%ebx
    fstps  -0x14(%edx)
    mov    -0x10(%ebx),%edi
    mov    %edi,-0x10(%edx)
    mov    (%ecx),%edi
    mov    %edi,(%esi)
    mov    0x4(%ecx),%edi
    mov    %edi,0x4(%esi)
    mov    0x8(%ecx),%edi
    mov    %edi,0x8(%esi)
    mov    (%ebx),%ecx
    mov    %ecx,(%edx)
    mov    0x4(%ebx),%ecx
    mov    %ecx,0x4(%edx)
    mov    0x8(%ebx),%ecx
    mov    %ecx,0x8(%edx)
    call   func_181f0
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_17ff0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%edx
    movl   $0x0,0x1d1e(%eax)
    movl   $0x23,0x4f26(%eax)
    fildl  0x4f26(%eax)
    fld    %st(0)
    fmuls  0x8588c /* Warning: address points to a valid object/reloc, but no label found */
    movl   $0x0,0x1d22(%eax)
    fmuls  data_804c1
    movl   $0x0,0x1d26(%eax)
    fstp   %st(1)
    flds   0x4f1e(%eax)
    fstpl  (%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_729b7
    fdivrl (%esp)
    mov    0x4f20(%edx),%ebx
    sar    $0x10,%ebx
    push   %ebx
    fsts   0x4f16(%edx)
    fstps  0x4f1a(%edx)
    push   $0x47c35000
    lea    0x4e46(%edx),%ebx
    push   $0x3f800000
    mov    %ebx,%eax
    sub    $0x4,%esp
    fildl  0x4f26(%edx)
    fstps  (%esp)
    call   func_1b808
    mov    0x4e6e(%edx),%eax
    mov    %eax,0x4ee6(%edx)
    mov    0x4ee9(%edx),%ah
    xor    $0x80,%ah
    mov    %edx,%ecx
    mov    %ah,0x4ee9(%edx)
    add    $0x4ede,%ecx
    flds   0x4ee6(%edx)
    fmuls  data_804c5
    mov    %ecx,%eax
    fstps  0x4ee2(%edx)
    push   0x4f16(%edx)
    movl   $0x0,0x4ede(%edx)
    call   func_4e444
    movl   $0x3f800000,(%ebx)
    movl   $0x0,0x4(%ebx)
    lea    0xc(%ebx),%esi
    movl   $0x0,0x8(%ebx)
    movl   $0x0,(%esi)
    movl   $0x3f800000,0x4(%esi)
    lea    0x18(%ebx),%edi
    movl   $0x0,0x8(%esi)
    movl   $0x0,(%edi)
    mov    %ecx,0x10(%esp)
    movl   $0x0,0x4(%edi)
    lea    0x4eea(%edx),%ecx
    movl   $0x3f800000,0x8(%edi)
    flds   (%ebx)
    lea    0xc(%ecx),%ebp
    fstps  (%ecx)
    flds   0x4(%ebx)
    mov    %ebp,0xc(%esp)
    fstps  0x4(%ecx)
    mov    0x8(%ebx),%eax
    mov    %eax,0x8(%ecx)
    mov    (%esi),%eax
    mov    %eax,0x0(%ebp)
    mov    0x4(%esi),%eax
    mov    %eax,0x4(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,0x8(%ebp)
    lea    0x18(%ecx),%ebp
    mov    (%edi),%eax
    mov    %eax,0x0(%ebp)
    mov    %ecx,%eax
    flds   0x4(%edi)
    fstps  0x4(%ebp)
    flds   0x8(%edi)
    fstps  0x8(%ebp)
    flds   0x4ede(%edx)
    fchs
    fstps  0x4f02(%edx)
    flds   0x4ee2(%edx)
    fchs
    fstps  0x4f06(%edx)
    flds   0x4ee6(%edx)
    fchs
    fstps  0x4f0a(%edx)
    call   func_4ec54
    mov    (%ecx),%eax
    mov    %eax,(%ebx)
    mov    0x4(%ecx),%eax
    mov    %eax,0x4(%ebx)
    mov    0x8(%ecx),%eax
    mov    %eax,0x8(%ebx)
    mov    0xc(%esp),%ebx
    mov    0x10(%esp),%ecx
    mov    (%ebx),%eax
    mov    %eax,(%esi)
    mov    0x4(%ebx),%eax
    mov    %eax,0x4(%esi)
    mov    0x8(%ebx),%eax
    mov    %eax,0x8(%esi)
    lea    0x4e7a(%edx),%ebx
    mov    0x0(%ebp),%eax
    mov    %eax,(%edi)
    mov    %edx,%eax
    mov    0x4(%ebp),%edx
    mov    %edx,0x4(%edi)
    mov    0x8(%ebp),%edx
    mov    %edx,0x8(%edi)
    mov    (%ecx),%edx
    mov    %edx,(%ebx)
    mov    0x4(%ecx),%edx
    mov    %edx,0x4(%ebx)
    mov    0x8(%ecx),%edx
    mov    %edx,0x8(%ebx)
    call   func_181f0
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_181f0:
/*----------------------------------------------------------------*/
    push   %edx
    sub    $0x4,%esp
    mov    %eax,%edx
    fildl  0x4f26(%eax)
    fld    %st(0)
    fmuls  0x8588c /* Warning: address points to a valid object/reloc, but no label found */
    fmuls  data_804c9
    fstp   %st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_729b7
    fstps  0x4f2a(%edx)
    flds   0x4f16(%edx)
    fmuls  0x4f2a(%edx)
    fmuls  data_804cd
    fstps  0x4f2a(%edx)
    flds   0x4f1a(%edx)
    fmuls  data_804c9
    fadds  0x4f16(%edx)
    fstps  0x4f12(%edx)
    flds   0x4f2a(%edx)
    fmuls  data_804c9
    fsubrs 0x4f16(%edx)
    fstps  0x4f0e(%edx)
    add    $0x4,%esp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_1826c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    %edx,%ebp
    mov    %ebx,%esi
    xor    %edx,%edx
    mov    %bx,%dx
    cmp    0x1a8e(%eax),%edx
    jl     jump_18293
    mov    $0x62b,%ebx
    mov    $data_804d1,%edx
    xor    %eax,%eax
    call   func_25878
  jump_18293:
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %si,%dx
    mov    %cx,%bx
    mov    0x19c6(%edi,%edx,2),%dx
    and    $0xffff,%edx
    mov    %ebp,%eax
    call   func_156c0
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_182b8:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x8,%esp
    mov    %eax,%ebx
    mov    %edx,(%esp)
    fildl  (%esp)
    fsts   0x4(%esp)
    fcomps data_804e0
    fnstsw %ax
    sahf
    jbe    jump_182dd
    movl   $0x42480000,0x4(%esp)
    jmp    jump_182f4
  jump_182dd:
    flds   0x4(%esp)
    fcomps data_804e4
    fnstsw %ax
    sahf
    jae    jump_182f4
    movl   $0xc2480000,0x4(%esp)
  jump_182f4:
    flds   0x4(%esp)
    fmuls  data_804e8
    fmuls  data_11f108
    fstps  0x4(%esp)
    fld1
    fadds  0x4(%esp)
    fstps  0x4(%esp)
    flds   0x4f16(%ebx)
    fmuls  0x4(%esp)
    fsts   0x4f16(%ebx)
    fcomps 0x4e6e(%ebx)
    fnstsw %ax
    sahf
    jae    jump_18335
    mov    0x4e6e(%ebx),%eax
    jmp    jump_1834c
  jump_18335:
    flds   0x4f16(%ebx)
    fcomps 0x4f1a(%ebx)
    fnstsw %ax
    sahf
    jbe    jump_18352
    mov    0x4f1a(%ebx),%eax
  jump_1834c:
    mov    %eax,0x4f16(%ebx)
  jump_18352:
    lea    0x4e7a(%ebx),%eax
    push   0x4f16(%ebx)
    call   func_4e444
    mov    %ebx,%eax
    call   func_181f0
    add    $0x8,%esp
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_18370:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x144,%esp
    mov    %eax,%ebp
    mov    0x10(%eax),%ax
    sub    0x8(%ebp),%ax
    mov    0xc(%ebp),%cx
    mov    %ax,0x4f22(%ebp)
    mov    %eax,%ebx
    mov    0x14(%ebp),%ax
    sar    %bx
    sub    %ecx,%eax
    mov    %bx,0x4f22(%ebp)
    mov    %eax,%esi
    sar    %si
    lea    0x1d1e(%ebp),%eax
    mov    %si,0x4f24(%ebp)
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    cmpl   $0x0,0x1d2a(%ebp)
    je     jump_183e3
    mov    $0x65e,%ebx
    mov    $data_804ec,%edx
    xor    %eax,%eax
    call   func_25878
  jump_183e3:
    cmpl   $0x0,func_19be(%ebp)
    je     jump_183fd
    mov    $0x65f,%ebx
    mov    $data_804fb,%edx
    xor    %eax,%eax
    call   func_25878
  jump_183fd:
    movl   $0x80,0x1d2e(%ebp)
    imul   $0x35,0x1d2e(%ebp),%eax
    mov    $data_8050a,%ebx
    mov    $0x1,%edx
    call   func_729c4
    call   func_2593c
    mov    %eax,0x1d2a(%ebp)
    test   %eax,%eax
    jne    jump_1843b
    mov    $0x669,%ebx
    mov    $data_8051a,%edx
    call   func_25878
  jump_1843b:
    movl   $0x27,0x19c2(%ebp)
    mov    0x19c2(%ebp),%eax
    mov    $data_80529,%ebx
    shl    $0x8,%eax
    mov    $0x1,%edx
    call   func_729c4
    call   func_2593c
    mov    %eax,func_19be(%ebp)
    test   %eax,%eax
    jne    jump_1847b
    mov    $0x66f,%ebx
    mov    $data_80531,%edx
    call   func_25878
  jump_1847b:
    mov    %esp,%eax
    mov    func_19be(%ebp),%ebp
    call   func_1bb78
    xor    %eax,%eax
    mov    %eax,0x140(%esp)
    xor    %esi,%esi
    jmp    jump_184b8
  jump_18495:
    mov    %esp,%eax
    mov    %ebp,%edx
    call   func_1bf1c
    mov    0x140(%esp),%edx
    inc    %edx
    add    $0x100,%ebp
    mov    %edx,0x140(%esp)
    cmp    $0x1f,%edx
    jge    jump_18501
  jump_184b8:
    mov    0x140(%esp),%edi
    push   %edi
    push   $data_80540
    lea    0x120(%esp),%eax
    push   %eax
    mov    $0x200,%ebx
    lea    0x124(%esp),%edx
    call   func_720c9
    add    $0xc,%esp
    mov    %esi,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    je     jump_18495
    mov    $0x67b,%ebx
    mov    $data_80553,%edx
    mov    %esi,%eax
    call   func_25888
    jmp    jump_18495
  jump_18501:
    mov    $0x200,%ebx
    mov    $data_80562,%edx
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_1bbfc
    test   %eax,%eax
    je     jump_18529
    mov    $0x680,%ebx
    mov    $data_80573,%edx
    xor    %eax,%eax
    call   func_25888
  jump_18529:
    mov    %esp,%eax
    lea    0x12c(%esp),%edi
    mov    $0x41,%ecx
    mov    %ebp,%edx
    mov    $data_8629c,%esi
    call   func_1bf1c
    mov    %ecx,0x140(%esp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    xor    %esi,%esi
    jmp    jump_18570
  jump_18553:
    mov    %esp,%eax
    mov    %ebp,%edx
    call   func_1bf1c
    mov    0x140(%esp),%eax
    inc    %eax
    mov    %eax,0x140(%esp)
    cmp    $0x48,%eax
    jge    jump_185b0
  jump_18570:
    mov    0x140(%esp),%al
    mov    $0x200,%ebx
    lea    0x12c(%esp),%edx
    mov    %esi,%ecx
    mov    %al,0x135(%esp)
    mov    %esp,%eax
    add    $0x100,%ebp
    call   func_1bbfc
    test   %eax,%eax
    je     jump_18553
    mov    $0x68a,%ebx
    mov    $data_80582,%edx
    mov    %esi,%eax
    call   func_25878
    jmp    jump_18553
  jump_185b0:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    mov    $0xffffffff,%eax
    add    $0x144,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_185cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    mov    data_c3504,%esi
    mov    0x2(%esi),%esi
    sar    $0x10,%esi
    cmp    $0x64,%esi
    jl     jump_185f6
    mov    $0x697,%ebx
    mov    $data_80591,%edx
    xor    %eax,%eax
    call   func_25878
  jump_185f6:
    lea    0x0(,%esi,4),%edi
    lea    0xbe(%ecx),%edx
    sub    %esi,%edi
    lea    0x4e7a(%ecx),%eax
    shl    $0x2,%edi
    mov    (%eax),%ebx
    mov    %ebx,(%edx,%edi,1)
    mov    0x4(%eax),%ebx
    mov    %ebx,0x4(%edx,%edi,1)
    mov    0x8(%eax),%ebx
    mov    %ebx,0x8(%edx,%edi,1)
    lea    0x0(,%esi,8),%edx
    add    %esi,%edx
    lea    0x56e(%ecx),%eax
    shl    $0x2,%edx
    add    %edx,%eax
    lea    0x4e46(%ecx),%edx
    lea    0xc(%eax),%ebx
    flds   (%edx)
    lea    0xc(%edx),%esi
    fstps  (%eax)
    add    $0x18,%eax
    flds   0x4(%edx)
    add    $0x18,%edx
    fstps  -0x14(%eax)
    mov    -0x10(%edx),%ebp
    mov    %ebp,-0x10(%eax)
    mov    (%esi),%ebp
    mov    %ebp,(%ebx)
    mov    0x4(%esi),%ebp
    mov    %ebp,0x4(%ebx)
    mov    0x8(%esi),%ebp
    mov    %ebp,0x8(%ebx)
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    flds   0x8(%edx)
    lea    0x150e(%ecx),%edx
    fstps  0x8(%eax)
    lea    0x1d1e(%ecx),%eax
    mov    (%eax),%ebx
    mov    %ebx,(%edx,%edi,1)
    mov    0x4(%eax),%ebx
    mov    %ebx,0x4(%edx,%edi,1)
    mov    0x8(%eax),%ebx
    mov    %ebx,0x8(%edx,%edi,1)
    movl   $0x0,0x4f2f(%ecx)
    movb   $0x0,0xb7(%ecx)
    movl   $0x0,0xb3(%ecx)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_186b8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    call   func_187ec
    mov    data_c3504,%esi
    mov    0x2(%esi),%esi
    sar    $0x10,%esi
    cmp    $0x64,%esi
    jl     jump_186e7
    mov    $0x6ae,%ebx
    mov    $data_805a0,%edx
    xor    %eax,%eax
    call   func_25878
  jump_186e7:
    lea    0x0(,%esi,4),%edx
    add    %ecx,%edx
    cmpl   $0x0,0x137e(%edx)
    jne    jump_1870f
    mov    %ecx,%eax
    call   func_17ff0
    movl   $0xffffffff,0x137e(%edx)
    jmp    jump_187d9
  jump_1870f:
    lea    0x0(,%esi,4),%ebp
    sub    %esi,%ebp
    lea    0xbe(%ecx),%edx
    shl    $0x2,%ebp
    lea    0x4e7a(%ecx),%eax
    mov    (%edx,%ebp,1),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx,%ebp,1),%ebx
    mov    %ebx,0x4(%eax)
    flds   0x8(%edx,%ebp,1)
    lea    0x0(,%esi,8),%edx
    add    %esi,%edx
    lea    0x56e(%ecx),%ebx
    shl    $0x2,%edx
    add    %edx,%ebx
    fstps  0x8(%eax)
    lea    0x4e46(%ecx),%edx
    flds   (%ebx)
    lea    0xc(%ebx),%edi
    fstps  (%edx)
    lea    0xc(%edx),%esi
    flds   0x4(%ebx)
    add    $0x18,%ebx
    fstps  0x4(%edx)
    add    $0x18,%edx
    flds   -0x10(%ebx)
    fstps  -0x10(%edx)
    flds   (%edi)
    fstps  (%esi)
    flds   0x4(%edi)
    fstps  0x4(%esi)
    flds   0x8(%edi)
    fstps  0x8(%esi)
    mov    (%ebx),%esi
    mov    %esi,(%edx)
    mov    0x4(%ebx),%esi
    mov    %esi,0x4(%edx)
    mov    0x8(%ebx),%esi
    mov    %esi,0x8(%edx)
    lea    0x150e(%ecx),%edx
    lea    0x1d1e(%ecx),%ebx
    mov    (%edx,%ebp,1),%esi
    mov    %esi,(%ebx)
    mov    0x4(%edx,%ebp,1),%esi
    mov    %esi,0x4(%ebx)
    mov    0x8(%edx,%ebp,1),%esi
    mov    %esi,0x8(%ebx)
    flds   0x4(%eax)
    fmul   %st(0),%st
    flds   (%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x8(%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    %ecx,%eax
    fstps  0x4f16(%ecx)
    call   func_181f0
  jump_187d9:
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_18c2c
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_187ec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1cc,%esp
    mov    %eax,%edi
    xor    %esi,%esi
    jmp    jump_1880d
  jump_187fe:
    imul   $0x35,%eax,%eax
    mov    0x1d2a(%edi),%edx
    inc    %esi
    movb   $0x0,0x33(%edx,%eax,1)
  jump_1880d:
    movswl %si,%eax
    cmp    0x1d2e(%edi),%eax
    jl     jump_187fe
    mov    0x1d2a(%edi),%esi
    movl   $0x0,0x1d32(%edi)
    movb   $0x6,(%esi)
    mov    %esi,0x1d16(%edi)
    movw   $0xffff,0x5(%esi)
    mov    0x1d32(%edi),%ebx
    xor    %eax,%eax
    inc    %ebx
    add    $0x35,%esi
    mov    %ebx,0x1d32(%edi)
    jmp    jump_1885f
  jump_1884b:
    movb   $0xff,(%esi)
    mov    0x1d32(%edi),%ebp
    inc    %eax
    inc    %ebp
    add    $0x35,%esi
    mov    %ebp,0x1d32(%edi)
  jump_1885f:
    movswl %ax,%edx
    cmp    $0x1,%edx
    jl     jump_1884b
    movb   $0x0,(%esi)
    mov    data_c3504,%eax
    mov    %eax,0x1(%esi)
    mov    (%eax),%cx
    mov    $0x1,%ebx
    and    $0xffff,%ecx
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_1826c
    mov    0x1d32(%edi),%ecx
    xor    %edx,%edx
    inc    %ecx
    mov    %dx,0x1c4(%esp)
    mov    %ecx,0x1d32(%edi)
    xor    %ebp,%ebp
    jmp    jump_188d2
  jump_188a4:
    and    $0xffff,%ecx
    mov    %ebp,%ebx
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_1826c
    mov    0x1c4(%esp),%ecx
    mov    0x1d32(%edi),%ebx
    inc    %ecx
    inc    %ebx
    mov    %cx,0x1c4(%esp)
    mov    %ebx,0x1d32(%edi)
  jump_188d2:
    mov    data_c3504,%eax
    mov    0x1c4(%esp),%edx
    cmp    0x5a(%eax),%dx
    jge    jump_1894a
    mov    0x1d32(%edi),%eax
    cmp    0x1d2e(%edi),%eax
    jl     jump_18903
    mov    $0x6fc,%ebx
    mov    $data_805af,%edx
    mov    %ebp,%eax
    call   func_25878
  jump_18903:
    mov    0x1c2(%esp),%edx
    mov    data_c3504,%eax
    sar    $0x10,%edx
    add    $0x35,%esi
    mov    0x46(%eax,%edx,4),%eax
    movb   $0x1,(%esi)
    mov    %eax,0x1(%esi)
    imul   $0x5,0x16(%eax),%cx
    add    0x14(%eax),%cx
    movswl %cx,%eax
    cmp    $0x37,%eax
    jl     jump_188a4
    mov    $0x706,%ebx
    mov    $data_805be,%edx
    mov    %ebp,%eax
    call   func_25878
    jmp    jump_188a4
  jump_1894a:
    mov    0x1(%esi),%eax
    flds   0x4(%eax)
    fmul   %st(0),%st
    flds   (%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x8(%eax)
    fmul   %st(0),%st
    sub    $0x8,%esp
    faddp  %st,%st(1)
    xor    %ecx,%ecx
    fstpl  (%esp)
    mov    %cx,0x1d0(%esp)
    call   func_721f0
    fstps  0x4f1e(%edi)
    jmp    jump_18a11
  jump_1897f:
    andb   $0xfe,0x33(%esi)
    mov    0x14(%ebp),%eax
    mov    %eax,0x1ac(%esp)
    mov    0x18(%ebp),%eax
    mov    %eax,0x1b0(%esp)
    mov    0x1c(%ebp),%eax
    add    $0x14,%ebp
  jump_1899d:
    mov    %eax,0x1b4(%esp)
    flds   0x1b0(%esp)
    fmul   %st(0),%st
    flds   0x1ac(%esp)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x1b4(%esp)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fstps  0x1b8(%esp)
    flds   0x4f1e(%edi)
    fcomps 0x1b8(%esp)
    fnstsw %ax
    sahf
    jae    jump_189f4
    mov    0x1b8(%esp),%eax
    mov    %eax,0x4f1e(%edi)
  jump_189f4:
    mov    0x1c8(%esp),%ecx
    mov    0x1d32(%edi),%ebp
    inc    %ecx
    inc    %ebp
    mov    %cx,0x1c8(%esp)
    mov    %ebp,0x1d32(%edi)
  jump_18a11:
    mov    data_c3504,%eax
    mov    0x1c8(%esp),%edx
    cmp    0x44(%eax),%dx
    jge    jump_18ad5
    mov    0x1d32(%edi),%eax
    cmp    0x1d2e(%edi),%eax
    jl     jump_18a46
    mov    $0x716,%ebx
    mov    $data_805cd,%edx
    xor    %eax,%eax
    call   func_25878
  jump_18a46:
    mov    0x1c6(%esp),%edx
    mov    data_c3504,%eax
    sar    $0x10,%edx
    add    $0x35,%esi
    mov    0x2c(%eax,%edx,4),%ebp
    movb   $0x3,(%esi)
    mov    %ebp,0x1(%esi)
    mov    0x23(%ebp),%dl
    xor    %eax,%eax
    test   $0x1,%dl
    je     jump_18a71
    mov    $0x1,%eax
  jump_18a71:
    testb  $0x2,0x23(%ebp)
    je     jump_18a7a
    add    $0x2,%eax
  jump_18a7a:
    mov    $0x2,%ebx
    xor    %ecx,%ecx
    mov    %esi,%edx
    mov    %ax,%cx
    mov    %edi,%eax
    call   func_1826c
    xor    %eax,%eax
    mov    %eax,0x1ac(%esp)
    mov    %eax,0x1b0(%esp)
    mov    %eax,0x1b4(%esp)
    mov    data_c3504,%eax
    cmp    0x0(%ebp),%eax
    jne    jump_1897f
    orb    $0x1,0x33(%esi)
    mov    0x8(%ebp),%eax
    mov    %eax,0x1ac(%esp)
    mov    0xc(%ebp),%eax
    mov    %eax,0x1b0(%esp)
    mov    0x10(%ebp),%eax
    add    $0x8,%ebp
    jmp    jump_1899d
  jump_18ad5:
    flds   0x4f1e(%edi)
    mov    %esp,%edx
    fadds  data_805fa
    xor    %ecx,%ecx
    fstps  0x4f1e(%edi)
    call   func_1d754
    mov    %eax,0x1bc(%esp)
    jmp    jump_18afa
  jump_18af9:
    inc    %ecx
  jump_18afa:
    mov    0x1bc(%esp),%edx
    movswl %cx,%eax
    cmp    %edx,%eax
    jge    jump_18b64
    mov    (%esp,%eax,4),%ebp
    cmpb   $0x4,0x58(%ebp)
    jne    jump_18af9
    mov    0x1d32(%edi),%eax
    cmp    0x1d2e(%edi),%eax
    jl     jump_18b30
    mov    $0x750,%ebx
    mov    $data_805dc,%edx
    xor    %eax,%eax
    call   func_25878
  jump_18b30:
    add    $0x35,%esi
    mov    %ebp,0x1(%esi)
    movb   $0x2,(%esi)
    mov    0x54(%ebp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    0xa7(%ebp),%ebx
    mov    data_efd60(,%eax,2),%ax
    sar    $0x18,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_156c0
    incl   0x1d32(%edi)
    jmp    jump_18af9
  jump_18b64:
    xor    %eax,%eax
    mov    data_c3502,%dx
    mov    %ax,0x1c0(%esp)
    test   %dx,%dx
    jle    jump_18bf8
    jmp    jump_18bd7
  jump_18b80:
    mov    0x1be(%esp),%eax
    sar    $0x10,%eax
    imul   $0xd,%eax,%eax
    add    $0x35,%esi
    mov    $data_c348d,%edx
    movb   $0x4,(%esi)
    add    %eax,%edx
    mov    $0x3,%ebx
    mov    %edx,0x1(%esi)
    mov    %edi,%eax
    movsbl (%edx),%ecx
    mov    %esi,%edx
    call   func_1826c
    mov    0x1d32(%edi),%eax
    inc    %eax
    mov    0x1c0(%esp),%ebx
    mov    %eax,0x1d32(%edi)
    inc    %ebx
    mov    data_c3502,%cx
    mov    %bx,0x1c0(%esp)
    cmp    %cx,%bx
    jge    jump_18bf8
  jump_18bd7:
    mov    0x1d32(%edi),%eax
    cmp    0x1d2e(%edi),%eax
    jl     jump_18b80
    mov    $0x761,%ebx
    mov    $data_805eb,%edx
    xor    %eax,%eax
    call   func_25878
    jmp    jump_18b80
  jump_18bf8:
    xor    %eax,%eax
    jmp    jump_18c11
  jump_18bfc:
    imul   $0x35,%ecx,%ecx
    mov    0x1d2a(%edi),%esi
    mov    0x33(%ecx,%esi,1),%dl
    and    $0xfb,%dl
    inc    %eax
    mov    %dl,0x33(%ecx,%esi,1)
  jump_18c11:
    movswl %ax,%ecx
    cmp    0x1d32(%edi),%ecx
    jl     jump_18bfc
    add    $0x1cc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_18c2c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ebx
    mov    %edx,%esi
    lea    0x1d36(%eax),%ecx
    mov    %ecx,%eax
    lea    0x253a(%ebx),%edx
    call   func_15788
    mov    %edx,%eax
    call   func_15788
    lea    0x2d3e(%ebx),%eax
    call   func_15788
    lea    0x3542(%ebx),%eax
    call   func_15d2c
    mov    %ebx,%eax
    call   func_173f4
    mov    %ecx,%eax
    call   func_157ec
    mov    %edx,%eax
    call   func_157ec
    test   %esi,%esi
    jne    jump_18c89
    mov    0xa7(%ebx),%ecx
    mov    %ebx,%eax
    xor    %edx,%edx
    call   *0xc(%ecx)
  jump_18c89:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret

vtable_18c90:
    .long   func_18dd9
    .long   func_18f9f
    .long   func_1906b
    .long   func_1914d
    .long   func_18dfb
    .long   func_18dfb


/*----------------------------------------------------------------*/
func_18ca8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x178,%esp
    mov    %eax,%ebp
    test   %edx,%edx
    jne    jump_18cc6
    mov    $data_8a0e0,%edi
    lea    0x4(%ebp),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
  jump_18cc6:
    xor    %eax,%eax
    mov    0x4f2e(%ebp),%al
    push   %eax
    lea    0x4(%ebp),%eax
    push   %eax
    call   func_59d90
    lea    0x2d3e(%ebp),%eax
    add    $0x8,%esp
    mov    %ebp,%edx
    call   func_15948
    mov    %ebp,%eax
    call   func_19ae8
    lea    0x253a(%ebp),%eax
    mov    %ebp,%edx
    call   func_15948
    cmpl   $0x0,0x5046(%ebp)
    je     jump_18d12
    lea    0x3542(%ebp),%eax
    mov    %ebp,%edx
    call   func_15d74
  jump_18d12:
    cmpl   $0x0,0xaf(%ebp)
    jne    jump_18d41
    mov    0xb7(%ebp),%ah
    cmp    $0x2,%ah
    je     jump_18d2b
    cmp    $0x3,%ah
    jne    jump_18d41
  jump_18d2b:
    lea    0x3542(%ebp),%eax
    xor    %ebx,%ebx
    mov    %ebp,%edx
    mov    0xbc(%ebp),%bx
    call   func_15da4
  jump_18d41:
    cmpl   $0x0,0x503a(%ebp)
    je     jump_18d5a
    testb  $0x1,0x4f2f(%ebp)
    jne    jump_18d5a
    mov    %ebp,%eax
    call   func_1936c
  jump_18d5a:
    cmpl   $0x0,0x5046(%ebp)
    je     jump_18d70
    lea    0x3542(%ebp),%eax
    mov    %ebp,%edx
    call   func_15e1c
  jump_18d70:
    lea    0x1d36(%ebp),%eax
    mov    $0x3,%ebx
    mov    %ebp,%edx
    xor    %ecx,%ecx
    call   func_15948
    mov    data_f458e,%cl
    lea    0x4(%ebp),%eax
    mov    %ebx,%edx
    call   func_4f228
    mov    data_86a50,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_fa360(,%eax,4),%eax
    test   %eax,%eax
    jne    jump_18dbd
    mov    $0x7ac,%ebx
    mov    $data_805fe,%edx
    call   func_25878
  jump_18dbd:
    xor    %edi,%edi
    mov    0xaf(%ebp),%eax
    mov    %edi,0x174(%esp)
    test   %eax,%eax
    jne    jump_19256
    jmp    jump_18e38


/*----------------------------------------------------------------*/
func_18dd9:
/*----------------------------------------------------------------*/
    mov    0x1(%eax),%eax
    add    $0x1c,%eax
    push   %eax
    mov    $0x3,%eax
    call   func_1ce70
    push   %eax
    lea    0x120(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp


/*----------------------------------------------------------------*/
func_18dfb:
/*----------------------------------------------------------------*/
    push   $0x0
    lea    0x11c(%esp),%ecx
    mov    $data_fd3aa,%edi
    mov    $data_c850c,%esi
    movswl %dx,%edx
    push   $0xff
    mov    0x14(%ebp),%ebx
    mov    0x10(%ebp),%eax
    push   %edx
    sub    $0x1e,%ebx
    sub    $0xc8,%eax
    push   $0x0
    mov    %eax,%edx
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_18e38:
    mov    %ebp,%eax
    mov    0x174(%esp),%edx
    call   func_17260
    test   %edx,%edx
    je     jump_1934e
    mov    data_90ba0,%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_1934e
    lea    0x34(%edx),%eax
    push   %eax
    mov    0x54(%edx),%eax
    sar    $0x10,%eax
    mov    %eax,%ebp
    shl    $0x5,%ebp
    sub    %eax,%ebp
    shl    $0x3,%ebp
    sub    %eax,%ebp
    xor    %edx,%edx
    mov    data_92e17(,%ebp,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    push   $data_80613
    lea    0xd4(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
    push   $0x0
    lea    0xcc(%esp),%ecx
    push   %ebx
    mov    $data_fd38a,%edi
    mov    $data_c850c,%esi
    push   %ebx
    mov    $0xfa,%edx
    mov    $data_fd382,%eax
    push   $0x0
    mov    $0xa,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    0x174(%esp),%eax
    mov    0x8c(%eax),%ecx
    push   %ecx
    mov    0x94(%eax),%esi
    push   %esi
    mov    0x88(%eax),%edi
    push   %edi
    push   $data_80619
    lea    0xd8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x14,%esp
    mov    $0x14,%ebx
    mov    $0xfa,%edx
    push   $0x0
    lea    0xcc(%esp),%ecx
    mov    $data_c850c,%esi
    push   $0xffffffff
    mov    $data_fd38a,%edi
    mov    $data_fd382,%eax
    push   $0xffffffff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    lea    0x10(%esp),%edi
    mov    $data_862b0,%esi
    call   func_2af88
    mov    $0x32,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    mov    $data_80638,%esi
    lea    0xc8(%esp),%edi
    mov    0x174(%esp),%edx
    push   %edi
  jump_18f5a:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_18f72
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_18f5a
  jump_18f72:
    pop    %edi
    mov    0x5a(%edx),%edx
    sar    $0x18,%edx
    test   %edx,%edx
    jl     jump_18f93
    mov    0x174(%esp),%eax
    movsbw 0x5d(%eax),%ax
    cmp    $0x7,%ax
    jle    jump_192a7
  jump_18f93:
    lea    0xc8(%esp),%ecx
    jmp    jump_192b7


/*----------------------------------------------------------------*/
func_18f9f:
/*----------------------------------------------------------------*/
    mov    0x1(%eax),%ebx
    lea    0x24(%ebx),%eax
    push   %eax
    mov    $0x4,%eax
    call   func_1ce70
    push   %eax
    lea    0x120(%esp),%eax
    push   %eax
    call   func_720c9
    xor    %eax,%eax
    mov    0x57(%ebx),%al
    add    $0xc,%esp
    cmp    $0xff,%eax
    je     func_18dfb
    mov    %eax,%edx
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    mov    $0x5,%eax
    call   func_1ce70
    push   %eax
    lea    0x15c(%esp),%eax
    push   %eax
    lea    0x160(%esp),%esi
    call   func_720c9
    add    $0xc,%esp
    lea    0x118(%esp),%edi
    xor    %edx,%edx
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_1902c:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_19044
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1902c
  jump_19044:
    pop    %edi
    mov    0x57(%ebx),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e18(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    lea    0x13(%eax),%edx
    jmp    func_18dfb


/*----------------------------------------------------------------*/
func_1906b:
/*----------------------------------------------------------------*/
    mov    0x1(%eax),%eax
    mov    %eax,%ebx
    mov    %ebx,%edx
    mov    %eax,0x174(%esp)
    mov    0x54(%edx),%edx
    add    $0x34,%eax
    sar    $0x10,%edx
    push   %eax
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    push   $data_8060d
    lea    0x124(%esp),%eax
    push   %eax
    call   func_720c9
    mov    %ebx,%eax
    xor    %edx,%edx
    mov    0x54(%eax),%eax
    mov    data_f458e,%dl
    sar    $0x10,%eax
    add    $0x10,%esp
    cmp    %edx,%eax
    jne    jump_19124
    mov    %ebx,%eax
    cmpb   $0x0,0x5d(%eax)
    je     jump_19124
    mov    $0x6,%eax
    call   func_1ce70
    mov    %eax,%esi
    mov    $0x7,%eax
    mov    %ebx,%edx
    call   func_1ce70
    cmpb   $0x1,0x5d(%edx)
    je     jump_190fb
    mov    %eax,%esi
  jump_190fb:
    lea    0x118(%esp),%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_1910b:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_19123
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1910b
  jump_19123:
    pop    %edi
  jump_19124:
    mov    0x54(%ebx),%edx
    sar    $0x10,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e18(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    lea    0x13(%eax),%edx
    jmp    func_18dfb


/*----------------------------------------------------------------*/
func_1914d:
/*----------------------------------------------------------------*/
    mov    $0x8,%eax
    lea    0x118(%esp),%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_19161:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_19179
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_19161
  jump_19179:
    pop    %edi
    mov    0xaf(%ebp),%eax
    mov    0x1(%eax),%eax
    testb  $0x1,0x23(%eax)
    je     jump_191b6
    mov    $0x9,%eax
    lea    0x118(%esp),%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_1919d:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_191b5
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1919d
  jump_191b5:
    pop    %edi
  jump_191b6:
    mov    0xaf(%ebp),%eax
    mov    0x33(%eax),%bl
    and    $0x1,%bl
    movsbl %bl,%ebx
    test   %ebx,%ebx
    je     jump_191d1
    mov    0x1(%eax),%ebx
    mov    0x4(%ebx),%ebx
    jmp    jump_191d6
  jump_191d1:
    mov    0x1(%eax),%ebx
    mov    (%ebx),%ebx
  jump_191d6:
    mov    $0x1,%esi
    xor    %eax,%eax
    mov    data_f458e,%cl
    mov    0x17(%ebx),%al
    shl    %cl,%esi
    test   %esi,%eax
    je     func_18dfb
    mov    $0xa,%eax
    lea    0x118(%esp),%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_1920c:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_19224
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1920c
  jump_19224:
    pop    %edi
    lea    0x118(%esp),%edi
    lea    0x1c(%ebx),%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_19238:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_19250
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_19238
  jump_19250:
    pop    %edi
    jmp    func_18dfb
  jump_19256:
    mov    $0x2,%eax
    lea    0x118(%esp),%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_1926a:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_19282
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1926a
  jump_19282:
    pop    %edi
    mov    0xaf(%ebp),%eax
    mov    (%eax),%bl
    mov    $0xf3,%edx
    cmp    $0x5,%bl
    ja     func_18dfb
    and    $0xff,%ebx
    jmp    *%cs:vtable_18c90(,%ebx,4)
  jump_192a7:
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %esp,%ecx
    shl    $0x2,%eax
    add    %eax,%ecx
  jump_192b7:
    push   $0x0
    mov    $0x1e,%ebx
    push   $0xffffffff
    mov    $0xfa,%edx
    mov    $data_fd38a,%edi
    push   $0xffffffff
    mov    $data_c850c,%esi
    mov    $data_fd382,%eax
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    0x174(%esp),%eax
    mov    0x5d(%eax),%dl
    cmp    $0x1,%dl
    jne    jump_19318
    push   $0x0
    mov    $0x1e,%ebx
    mov    $0x140,%edx
    mov    $data_fd38a,%edi
    push   $0xffffffff
    mov    $data_c850c,%esi
    mov    0x5e(%eax),%ecx
    push   $0xffffffff
    mov    $data_fd382,%eax
    add    $0x1c,%ecx
    jmp    jump_19342
  jump_19318:
    cmp    $0x2,%dl
    jne    jump_1934e
    push   $0x0
    mov    $0x1e,%ebx
    mov    $0x140,%edx
    mov    $data_fd38a,%edi
    push   $0xffffffff
    mov    $data_c850c,%esi
    mov    0x5e(%eax),%ecx
    push   $0xffffffff
    mov    $data_fd382,%eax
    add    $0x24,%ecx
  jump_19342:
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_1934e:
    mov    $data_8a0e0,%edx
    mov    $data_fa35c,%eax
    call   func_50690
    add    $0x178,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1936c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xf8,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    mov    %edx,0x3c(%esp)
    mov    %edx,0x40(%esp)
    mov    %edx,0x44(%esp)
    mov    %edx,0x48(%esp)
    mov    %edx,0x4c(%esp)
    mov    %edx,0x50(%esp)
    mov    %edx,0x30(%esp)
    mov    %edx,0x34(%esp)
    mov    %edx,0x38(%esp)
    flds   0x4f2a(%eax)
    fmuls  data_80646
    fsts   0xc0(%esp)
    fmuls  0xc0(%esp)
    fstps  0xc0(%esp)
    flds   0x4f2a(%eax)
    fmuls  data_8064a
    call   func_72258
    fistpl 0x90(%esp)
    mov    0x90(%esp),%eax
    add    $0x2,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    mov    %eax,0xc4(%esp)
    sub    %edx,%eax
    sar    %eax
    flds   0x4f2a(%esi)
    fmuls  data_8064e
    mov    %eax,0xa0(%esp)
    shl    $0x5,%eax
    call   func_72258
    mov    %eax,0xa0(%esp)
    lea    0x10(%eax),%edx
    fistpl 0x90(%esp)
    mov    %edx,0xa0(%esp)
    mov    0x90(%esp),%edx
    add    $0x2,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    $0x68,%edi
    mov    %eax,0xc8(%esp)
    mov    %eax,%edx
    shl    $0x2,%eax
    mov    $0x61,%ebp
    add    %edx,%eax
    mov    %edi,0xac(%esp)
    shl    $0x5,%eax
    mov    %ebp,0xb8(%esp)
    mov    %eax,0xc8(%esp)
    lea    0x10(%eax),%ebx
    mov    0xa0(%esp),%ecx
    mov    %ebx,0xc8(%esp)
    cmp    %ecx,%ebx
    jle    jump_1948b
    lea    -0xa0(%ebx),%edi
    mov    %edi,0xc8(%esp)
  jump_1948b:
    flds   0x4f2a(%esi)
    mov    $0xffffffff,%ebp
    xor    %eax,%eax
    mov    %ebp,0xcc(%esp)
    mov    %eax,0xbc(%esp)
    fcomps data_80652
    fnstsw %ax
    sahf
    jae    jump_194b8
    mov    %ebp,0xbc(%esp)
  jump_194b8:
    flds   0x4f16(%esi)
    fmuls  data_80656
    mov    0xc4(%esp),%ebx
    xor    %ebp,%ebp
    fstps  0xdc(%esp)
    fildl  0xa0(%esp)
    fstps  0xe4(%esp)
    test   %ebx,%ebx
    jle    jump_197cb
    lea    0x4(%esi),%eax
    lea    0x1d1e(%esi),%edi
    mov    %eax,0xa8(%esp)
    lea    0x4e86(%esi),%eax
    mov    %eax,0xb0(%esp)
  jump_19507:
    fildl  0xc8(%esp)
    fcomps 0xe4(%esp)
    fnstsw %ax
    sahf
    jne    jump_19521
    mov    %ebp,0xcc(%esp)
  jump_19521:
    flds   0xe4(%esp)
    fmul   %st,%st(0)
    fsubrs 0xc0(%esp)
    fstps  0xd4(%esp)
    fldz
    fcomps 0xd4(%esp)
    fnstsw %ax
    sahf
    jae    jump_197a7
    flds   0xd4(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    xor    %edx,%edx
    call   func_721f0
    mov    0xe4(%esp),%eax
    fstps  0xd4(%esp)
    mov    %eax,0x3c(%esp)
    mov    0xdc(%esp),%eax
    flds   0xd4(%esp)
    mov    %eax,0x40(%esp)
    mov    0xd4(%esp),%eax
    mov    %edx,0x60(%esp)
    mov    %eax,0x44(%esp)
    mov    0xe4(%esp),%eax
    fchs
    mov    %eax,0x48(%esp)
    mov    0xdc(%esp),%eax
    fstps  0x84(%esp)
    mov    %eax,0x4c(%esp)
    mov    0x84(%esp),%eax
    mov    %edx,0x64(%esp)
    mov    %eax,0x50(%esp)
    lea    0x54(%esp),%eax
    mov    %edx,0x68(%esp)
    mov    %eax,0x8c(%esp)
    flds   0xe4(%esp)
    fadds  (%edi)
    fstps  0x60(%esp)
    flds   0xdc(%esp)
    fadds  0x4(%edi)
    mov    0x60(%esp),%eax
    fstps  0x64(%esp)
    flds   0xd4(%esp)
    fadds  0x8(%edi)
    mov    %eax,0x54(%esp)
    mov    0x64(%esp),%eax
    fstps  0x68(%esp)
    mov    %eax,0x58(%esp)
    mov    0x68(%esp),%eax
    mov    %eax,0x5c(%esp)
    mov    0x60(%esp),%eax
    mov    %eax,0x3c(%esp)
    mov    0x64(%esp),%eax
    mov    %edx,0x24(%esp)
    mov    %eax,0x40(%esp)
    mov    0x68(%esp),%eax
    mov    %edx,0x28(%esp)
    mov    %eax,0x44(%esp)
    lea    0x6c(%esp),%eax
    mov    %edx,0x2c(%esp)
    mov    %eax,0x88(%esp)
    flds   0xe4(%esp)
    fadds  (%edi)
    fstps  0x24(%esp)
    flds   0xdc(%esp)
    fadds  0x4(%edi)
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    flds   0x84(%esp)
    fadds  0x8(%edi)
    mov    %eax,0x6c(%esp)
    mov    0x28(%esp),%eax
    fstps  0x2c(%esp)
    mov    %eax,0x70(%esp)
    mov    0x2c(%esp),%eax
    mov    %eax,0x74(%esp)
    mov    0x24(%esp),%eax
    mov    %eax,0x48(%esp)
    mov    0x28(%esp),%eax
    lea    0x30(%esp),%ebx
    mov    %eax,0x4c(%esp)
    mov    0x2c(%esp),%eax
    mov    0xb0(%esp),%edx
    mov    %eax,0x50(%esp)
    lea    0x3c(%esp),%eax
    call   func_4e774
    lea    0xf0(%esp),%eax
    push   %eax
    lea    0xf0(%esp),%eax
    push   %eax
    mov    0x4f22(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0x40(%esp),%ebx
    push   0x4e6e(%esi)
    lea    0x44(%esp),%eax
    mov    0xc4(%esp),%edx
    call   func_4e7c4
    lea    0x48(%esp),%eax
    call   func_4e774
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xf8(%esp),%eax
    push   %eax
    mov    0x4f22(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xdc(%esp),%ecx
    push   0x4e6e(%esi)
    lea    0x44(%esp),%eax
    mov    $0xffffffff,%ebx
    call   func_4e7c4
    test   %ecx,%ecx
    jl     jump_19752
    mov    %ebp,%edx
    sub    %ecx,%edx
    mov    $0x5,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    test   %edx,%edx
    jne    jump_19752
    mov    0xb8(%esp),%ebx
    jmp    jump_19763
  jump_19752:
    cmpl   $0x0,0xbc(%esp)
    je     jump_19763
    mov    0xac(%esp),%ebx
  jump_19763:
    cmp    $0xffffffff,%ebx
    je     jump_197a7
    push   %ebx
    mov    0xea(%esp),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    0xfe(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xfe(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xfe(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xc0(%esp),%ebx
    push   %ebx
    call   func_573c1
    add    $0x1c,%esp
  jump_197a7:
    flds   0xe4(%esp)
    mov    0xc4(%esp),%ecx
    fadds  data_8065a
    inc    %ebp
    fstps  0xe4(%esp)
    cmp    %ecx,%ebp
    jl     jump_19507
  jump_197cb:
    fildl  0xa0(%esp)
    mov    $0xffffffff,%edi
    mov    0xc4(%esp),%eax
    fstps  0xe0(%esp)
    xor    %ebp,%ebp
    mov    %edi,0xd0(%esp)
    test   %eax,%eax
    jle    jump_19ad9
    lea    0x4(%esi),%eax
    lea    0x1d1e(%esi),%edi
    mov    %eax,0xa4(%esp)
    lea    0x4e86(%esi),%eax
    mov    %eax,0xb4(%esp)
  jump_19813:
    fildl  0xc8(%esp)
    fcomps 0xe0(%esp)
    fnstsw %ax
    sahf
    jne    jump_1982d
    mov    %ebp,0xd0(%esp)
  jump_1982d:
    flds   0xe0(%esp)
    fmul   %st,%st(0)
    fsubrs 0xc0(%esp)
    fstps  0xd8(%esp)
    fldz
    fcomps 0xd8(%esp)
    fnstsw %ax
    sahf
    jae    jump_19ab5
    flds   0xd8(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fstps  0xd8(%esp)
    mov    0xd8(%esp),%eax
    flds   0xd8(%esp)
    mov    %eax,0x3c(%esp)
    mov    0xdc(%esp),%eax
    fchs
    mov    %eax,0x40(%esp)
    mov    0xe0(%esp),%eax
    fstps  0x94(%esp)
    mov    %eax,0x44(%esp)
    mov    0x94(%esp),%eax
    mov    %eax,0x48(%esp)
    mov    0xdc(%esp),%eax
    mov    %eax,0x4c(%esp)
    mov    0xe0(%esp),%eax
    mov    %eax,0x50(%esp)
    lea    0x78(%esp),%eax
    mov    %eax,0x98(%esp)
    xor    %eax,%eax
    mov    %eax,0x18(%esp)
    mov    %eax,0x1c(%esp)
    mov    %eax,0x20(%esp)
    flds   0xd8(%esp)
    fadds  (%edi)
    fstps  0x18(%esp)
    flds   0xdc(%esp)
    fadds  0x4(%edi)
    mov    0x18(%esp),%eax
    fstps  0x1c(%esp)
    flds   0xe0(%esp)
    fadds  0x8(%edi)
    mov    %eax,0x78(%esp)
    mov    0x1c(%esp),%eax
    fstps  0x20(%esp)
    mov    %eax,0x7c(%esp)
    mov    0x20(%esp),%eax
    mov    %eax,0x80(%esp)
    mov    0x18(%esp),%eax
    xor    %edx,%edx
    mov    %eax,0x3c(%esp)
    mov    0x1c(%esp),%eax
    mov    %edx,0xc(%esp)
    mov    %eax,0x40(%esp)
    mov    0x20(%esp),%eax
    mov    %edx,0x10(%esp)
    mov    %eax,0x44(%esp)
    mov    %esp,%eax
    mov    %edx,0x14(%esp)
    mov    %eax,0x9c(%esp)
    flds   0x94(%esp)
    fadds  (%edi)
    fstps  0xc(%esp)
    flds   0xdc(%esp)
    fadds  0x4(%edi)
    mov    0xc(%esp),%eax
    fstps  0x10(%esp)
    flds   0xe0(%esp)
    fadds  0x8(%edi)
    mov    %eax,(%esp)
    mov    0x10(%esp),%eax
    fstps  0x14(%esp)
    mov    %eax,0x4(%esp)
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%esp)
    mov    0xc(%esp),%eax
    mov    %eax,0x48(%esp)
    mov    0x10(%esp),%eax
    lea    0x30(%esp),%ebx
    mov    %eax,0x4c(%esp)
    mov    0x14(%esp),%eax
    mov    0xb4(%esp),%edx
    mov    %eax,0x50(%esp)
    lea    0x3c(%esp),%eax
    call   func_4e774
    lea    0xf0(%esp),%eax
    push   %eax
    lea    0xf0(%esp),%eax
    push   %eax
    mov    0x4f22(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0x40(%esp),%ebx
    push   0x4e6e(%esi)
    lea    0x44(%esp),%eax
    mov    0xc8(%esp),%edx
    call   func_4e7c4
    lea    0x48(%esp),%eax
    call   func_4e774
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xf8(%esp),%eax
    push   %eax
    mov    0x4f22(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4f20(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xe0(%esp),%ecx
    push   0x4e6e(%esi)
    lea    0x44(%esp),%eax
    mov    $0xffffffff,%ebx
    call   func_4e7c4
    test   %ecx,%ecx
    jl     jump_19a60
    mov    %ebp,%edx
    sub    %ecx,%edx
    mov    $0x5,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    test   %edx,%edx
    jne    jump_19a60
    mov    0xb8(%esp),%ebx
    jmp    jump_19a71
  jump_19a60:
    cmpl   $0x0,0xbc(%esp)
    je     jump_19a71
    mov    0xac(%esp),%ebx
  jump_19a71:
    cmp    $0xffffffff,%ebx
    je     jump_19ab5
    push   %ebx
    mov    0xea(%esp),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    0xfe(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xfe(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xfe(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0xbc(%esp),%ebx
    push   %ebx
    call   func_573c1
    add    $0x1c,%esp
  jump_19ab5:
    flds   0xe0(%esp)
    mov    0xc4(%esp),%ecx
    fadds  data_8065a
    inc    %ebp
    fstps  0xe0(%esp)
    cmp    %ecx,%ebp
    jl     jump_19813
  jump_19ad9:
    add    $0xf8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_19ae8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x36c,%esp
    mov    %eax,0x35c(%esp)
    xor    %edx,%edx
    mov    %edx,0x338(%esp)
    mov    %edx,0x33c(%esp)
    mov    %edx,0x340(%esp)
    mov    data_86a50,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_fa360(,%eax,4),%eax
    mov    %eax,0x350(%esp)
    test   %eax,%eax
    jne    jump_19b42
    mov    $0x8e7,%ebx
    mov    $data_8065e,%edx
    call   func_25878
  jump_19b42:
    mov    0x35c(%esp),%eax
    add    $0x4,%eax
    mov    $data_93bc5,%esi
    mov    %eax,0x34c(%esp)
    mov    0x35c(%esp),%eax
    xor    %ebp,%ebp
    add    $0x4e46,%eax
    xor    %edi,%edi
    mov    %eax,0x348(%esp)
    lea    0x258(%esp),%eax
    add    $0x8,%esi
    mov    %eax,0x358(%esp)
    lea    0x190(%esp),%eax
    mov    %ebp,0x360(%esp)
    mov    %eax,0x354(%esp)
    jmp    jump_19c38
  jump_19b9a:
    test   %edx,%edx
    jle    jump_19ba5
    mov    $0x1,%eax
    jmp    jump_19bb2
  jump_19ba5:
    cmp    $0xffffff24,%edx
    jle    jump_19bb2
    mov    $0x2,%eax
  jump_19bb2:
    mov    0x360(%esp),%edx
    mov    0x18e(%esp,%edx,1),%edx
    sar    $0x10,%edx
    push   %edx
    mov    0x364(%esp),%edx
    mov    0x25a(%esp,%edx,1),%edx
    sar    $0x10,%edx
    push   %edx
    movswl %bx,%edx
    cwtl
    shl    $0x2,%edx
    add    %eax,%edx
    mov    0x358(%esp),%eax
    push   %edx
    mov    0xab(%eax),%ebx
    push   %ebx
    mov    0x35c(%esp),%ecx
    push   %ecx
    call   func_57efc
    add    $0x14,%esp
  jump_19bfe:
    mov    0x358(%esp),%eax
    mov    0x354(%esp),%edx
    mov    0x360(%esp),%ebx
    add    $0x4,%edi
    add    $0x60,%esi
    inc    %ebp
    add    $0x2,%eax
    add    $0x2,%edx
    add    $0x2,%ebx
    mov    %eax,0x358(%esp)
    mov    %edx,0x354(%esp)
    mov    %ebx,0x360(%esp)
  jump_19c38:
    mov    data_96143,%eax
    sar    $0x10,%eax
    cmp    %eax,%ebp
    jge    jump_19e1d
    imul   $0x60,%ebp,%ebx
    mov    (%esi),%eax
    mov    %eax,0x338(%esp)
    mov    0x4(%esi),%eax
    mov    %eax,0x33c(%esp)
    mov    0x8(%esi),%eax
    lea    0x32c(%esp),%edx
    mov    %eax,0x340(%esp)
    mov    %edx,0x344(%esp)
    xor    %edx,%edx
    mov    data_c3504,%eax
    mov    %edx,0x320(%esp)
    mov    %edx,0x324(%esp)
    mov    %edx,0x328(%esp)
    flds   0x338(%esp)
    fsubs  0x8(%eax)
    fstps  0x320(%esp)
    flds   0x33c(%esp)
    fsubs  0xc(%eax)
    add    $0x8,%eax
    fstps  0x324(%esp)
    flds   0x340(%esp)
    fsubs  0x8(%eax)
    mov    0x320(%esp),%eax
    mov    %eax,0x32c(%esp)
    mov    0x324(%esp),%eax
    fstps  0x328(%esp)
    mov    %eax,0x330(%esp)
    mov    0x328(%esp),%eax
    mov    %eax,0x334(%esp)
    mov    0x320(%esp),%eax
    mov    %eax,0x338(%esp)
    mov    0x324(%esp),%eax
    mov    %eax,0x33c(%esp)
    mov    0x328(%esp),%eax
    mov    %eax,0x340(%esp)
    lea    0x338(%esp),%eax
    mov    %edx,(%esp,%edi,1)
    call   func_4e468
    test   %eax,%eax
    jne    jump_19bfe
    mov    0x348(%esp),%edx
    lea    0x338(%esp),%eax
    call   func_4e504
    mov    0x340(%esp),%eax
    mov    %eax,(%esp,%edi,1)
    fldz
    fcomps (%esp,%edi,1)
    fnstsw %ax
    sahf
    jae    jump_19bfe
    mov    0x354(%esp),%eax
    push   %eax
    mov    0x360(%esp),%eax
    mov    0x35c(%esp),%edx
    mov    0x4f22(%eax),%eax
    push   %edx
    sar    $0x10,%eax
    push   %eax
    mov    0x368(%esp),%eax
    mov    0x4f20(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x36c(%esp),%eax
    push   0x4e6e(%eax)
    lea    0x34c(%esp),%eax
    call   func_4e7c4
    flds   0x33c(%esp)
    fmul   %st(0),%st
    flds   0x338(%esp)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x340(%esp)
    fmul   %st(0),%st
    sub    $0x8,%esp
    faddp  %st,%st(1)
    mov    data_93bc5(%ebx),%bx
    fstpl  (%esp)
    call   func_721f0
    fadds  data_8066d
    call   func_72258
    fistpl 0x364(%esp)
    mov    0x364(%esp),%eax
    mov    %ax,0x368(%esp)
    mov    0x366(%esp),%edx
    sar    $0x10,%edx
    mov    $0x3,%eax
    cmp    $0xdc,%edx
    jle    jump_19b9a
    xor    %eax,%eax
    jmp    jump_19bb2
  jump_19e1d:
    add    $0x36c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_19e2c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3450,%esp
    mov    %eax,%ebp
    mov    %edx,0x3410(%esp)
    add    $0x4eea,%eax
    mov    %eax,0x343c(%esp)
    mov    %ebp,%eax
    add    $0x4ede,%eax
    mov    %eax,0x3440(%esp)
    mov    %ebp,%eax
    add    $0x4e46,%eax
    mov    %eax,0x344c(%esp)
    mov    %ebp,%eax
    add    $0x1d1e,%eax
    mov    %eax,0x3448(%esp)
    mov    %ebp,%eax
    add    $0x150e,%eax
    mov    %eax,0x341c(%esp)
    mov    %ebp,%eax
    add    $0x137e,%eax
    mov    %eax,0x3418(%esp)
    mov    %ebp,%eax
    add    $0x56e,%eax
    lea    0xbe(%ebp),%edi
    mov    %eax,0x3414(%esp)
    mov    %ebp,%eax
    add    $0x4f02,%eax
    mov    %eax,0x342c(%esp)
    mov    %ebp,%eax
    add    $0x4ef6,%eax
    mov    %eax,0x3428(%esp)
    mov    %ebp,%eax
    add    $0x4eba,%eax
    mov    %eax,0x3444(%esp)
    mov    %ebp,%eax
    add    $0x4e7a,%eax
    mov    %eax,0x3430(%esp)
    mov    %ebp,%eax
    add    $0x4e5e,%eax
    mov    %eax,0x3434(%esp)
    mov    %ebp,%eax
    add    $0x4e52,%eax
    mov    %eax,0x3438(%esp)
    mov    %ebp,%eax
    add    $0x4ed2,%eax
    mov    %eax,0x3424(%esp)
    mov    %ebp,%eax
    add    $0x4ec6,%eax
    mov    %eax,0x3420(%esp)
    cmp    $0xffffffff,%ebx
    jne    jump_1a3e9
    mov    $data_85870,%ebx
    mov    $0x64,%edx
    lea    0x1a08(%esp),%eax
    call   func_72754
    mov    $0x858d4,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x64,%edx
    add    $0x4b0,%eax
    call   func_72754
    mov    $data_85870,%ebx
    mov    $0x64,%edx
    add    $0xfa0,%eax
    call   func_72754
    add    $0x4b0,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    call   func_1b4f0
    add    $0x98,%eax
    xor    %ecx,%ecx
    mov    $0x1,%edx
    movl   $0x0,0x4(%eax)
    xor    %ebx,%ebx
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%esi
    movl   $0x0,(%eax)
    mov    %esi,%eax
    add    $0xc,%esi
    call   func_1aca0
    mov    %esi,%eax
    add    $0xc,%esi
    call   func_1aca0
    mov    %esi,%eax
    sub    $0x18,%esi
    call   func_1aca0
    mov    %esi,%eax
    call   func_1ac70
    mov    $0x1,%ebx
    lea    0xc(%esi),%eax
    xor    %ecx,%ecx
    xor    %edx,%edx
    call   func_1ac70
    mov    $0x1,%ecx
    lea    0x18(%esi),%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_1ac70
    mov    $0x1a08,%ebx
    lea    0x1a08(%esp),%edx
    mov    0x3410(%esp),%eax
    mov    $0x4b0,%ecx
    lea    0x1a08(%esp),%esi
    call   func_1bf94
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    $0xe10,%ecx
    lea    0x1eb8(%esp),%esi
    mov    0x3414(%esp),%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    $0x190,%ecx
    lea    0x2cc8(%esp),%esi
    mov    0x3418(%esp),%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    $0x4b0,%ecx
    lea    0x2e58(%esp),%esi
    mov    0x341c(%esp),%edi
    mov    0x3448(%esp),%edx
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    0x3308(%esp),%eax
    mov    %eax,(%edx)
    mov    0x330c(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x3310(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x344c(%esp),%edx
    mov    0x3314(%esp),%eax
    mov    %eax,(%edx)
    mov    0x3318(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x331c(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x3438(%esp),%edx
    mov    0x3320(%esp),%eax
    mov    %eax,(%edx)
    mov    0x3324(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x3328(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x3434(%esp),%edx
    mov    0x332c(%esp),%eax
    mov    %eax,(%edx)
    mov    0x3330(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x3334(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x344c(%esp),%edx
    mov    0x3338(%esp),%eax
    mov    %eax,0x24(%edx)
    mov    0x333c(%esp),%eax
    mov    %eax,0x28(%edx)
    mov    0x3340(%esp),%eax
    mov    %eax,0x2c(%edx)
    mov    0x3344(%esp),%eax
    mov    %eax,0x30(%edx)
    mov    0x3430(%esp),%edx
    mov    0x3348(%esp),%eax
    mov    %eax,(%edx)
    mov    0x334c(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x3350(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x344c(%esp),%edx
    mov    0x3354(%esp),%eax
    mov    %eax,0x40(%edx)
    mov    0x3358(%esp),%eax
    mov    %eax,0x44(%edx)
    mov    0x335c(%esp),%eax
    mov    %eax,0x48(%edx)
    mov    0x3360(%esp),%eax
    mov    %eax,0x4c(%edx)
    mov    0x3364(%esp),%eax
    mov    %eax,0x50(%edx)
    mov    0x3368(%esp),%eax
    mov    %eax,0x54(%edx)
    mov    0x336c(%esp),%eax
    mov    %eax,0x58(%edx)
    mov    0x3370(%esp),%eax
    mov    %eax,0x5c(%edx)
    mov    0x3374(%esp),%eax
    mov    %eax,0x60(%edx)
    mov    0x3378(%esp),%eax
    mov    %eax,0x64(%edx)
    mov    0x337c(%esp),%eax
    mov    %eax,0x68(%edx)
    mov    0x3380(%esp),%eax
    mov    %eax,0x6c(%edx)
    mov    0x3384(%esp),%eax
    mov    %eax,0x70(%edx)
    mov    0x3444(%esp),%edx
    mov    0x3388(%esp),%eax
    mov    %eax,(%edx)
    mov    0x338c(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x3390(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x3420(%esp),%edx
    mov    0x3394(%esp),%eax
    mov    %eax,(%edx)
    mov    0x3398(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x339c(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x3424(%esp),%edx
    mov    0x33a0(%esp),%eax
    mov    %eax,(%edx)
    mov    0x33a4(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x33a8(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x3440(%esp),%edx
    mov    0x33ac(%esp),%eax
    mov    %eax,(%edx)
    mov    0x33b0(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x33b4(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x343c(%esp),%edx
    mov    0x33b8(%esp),%eax
    mov    %eax,(%edx)
    mov    0x33bc(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x33c0(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x3428(%esp),%edx
    mov    0x33c4(%esp),%eax
    mov    %eax,(%edx)
    mov    0x33c8(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x33cc(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x342c(%esp),%edx
    mov    0x33d0(%esp),%eax
    mov    %eax,(%edx)
    mov    0x33d4(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x33d8(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x33dc(%esp),%eax
    mov    %eax,0x4f0e(%ebp)
    mov    0x33e0(%esp),%eax
    mov    %eax,0x4f12(%ebp)
    mov    0x33e4(%esp),%eax
    mov    %eax,0x4f16(%ebp)
    mov    0x33e8(%esp),%eax
    mov    %eax,0x4f1a(%ebp)
    mov    0x33ec(%esp),%eax
    mov    %eax,0x4f1e(%ebp)
    mov    0x33f0(%esp),%eax
    mov    %ax,0x4f22(%ebp)
    mov    0x33f2(%esp),%eax
    mov    %ax,0x4f24(%ebp)
    mov    0x33f4(%esp),%eax
    mov    %eax,0x4f26(%ebp)
    mov    0x33f8(%esp),%eax
    mov    %eax,0x4f2a(%ebp)
    mov    0x33fc(%esp),%eax
    mov    %eax,0x503a(%ebp)
    mov    0x3400(%esp),%eax
    mov    %eax,0x503e(%ebp)
    mov    0x3404(%esp),%eax
    mov    %eax,0x5042(%ebp)
    mov    0x3408(%esp),%eax
    mov    %eax,0x5046(%ebp)
    mov    0x340c(%esp),%eax
    xor    %edx,%edx
    mov    %eax,0x504a(%ebp)
    lea    0x3314(%esp),%eax
    call   func_1b66c
    lea    0x2e58(%esp),%eax
    xor    %edx,%edx
    call   func_1a9e0
    lea    0x1eb8(%esp),%eax
    xor    %edx,%edx
    call   func_1aa00
    lea    0x1a08(%esp),%eax
    xor    %edx,%edx
    call   func_1a9e0
    add    $0x3450,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_1a3e9:
    mov    $data_85870,%ebx
    mov    $0x64,%edx
    mov    %esp,%eax
    call   func_72754
    mov    $0x858d4,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x64,%edx
    add    $0x4b0,%eax
    call   func_72754
    mov    $data_85870,%ebx
    mov    $0x64,%edx
    add    $0xfa0,%eax
    call   func_72754
    add    $0x4b0,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    call   func_1b4f0
    add    $0x98,%eax
    xor    %ecx,%ecx
    mov    $0x1,%edx
    movl   $0x0,0x4(%eax)
    xor    %ebx,%ebx
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%esi
    movl   $0x0,(%eax)
    mov    %esi,%eax
    add    $0xc,%esi
    call   func_1aca0
    mov    %esi,%eax
    add    $0xc,%esi
    call   func_1aca0
    mov    %esi,%eax
    sub    $0x18,%esi
    call   func_1aca0
    mov    %esi,%eax
    call   func_1ac70
    mov    $0x1,%ebx
    lea    0xc(%esi),%eax
    xor    %ecx,%ecx
    xor    %edx,%edx
    call   func_1ac70
    mov    $0x1,%ecx
    lea    0x18(%esi),%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_1ac70
    mov    $0x4b0,%ecx
    mov    %edi,%esi
    mov    %esp,%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    $0xe10,%ecx
    mov    0x3414(%esp),%esi
    lea    0x4b0(%esp),%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    $0x190,%ecx
    mov    0x3418(%esp),%esi
    lea    0x12c0(%esp),%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    $0x4b0,%ecx
    mov    0x341c(%esp),%esi
    lea    0x1450(%esp),%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    0x3448(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x1900(%esp)
    mov    0x3448(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x1904(%esp)
    mov    0x3448(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x1908(%esp)
    mov    0x344c(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x190c(%esp)
    mov    0x344c(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x1910(%esp)
    mov    0x344c(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x1914(%esp)
    mov    0x3438(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x1918(%esp)
    mov    0x3438(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x191c(%esp)
    mov    0x3438(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x1920(%esp)
    mov    0x3434(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x1924(%esp)
    mov    0x3434(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x1928(%esp)
    mov    0x3434(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x192c(%esp)
    mov    0x344c(%esp),%eax
    mov    0x24(%eax),%eax
    mov    %eax,0x1930(%esp)
    mov    0x344c(%esp),%eax
    mov    0x28(%eax),%eax
    mov    %eax,0x1934(%esp)
    mov    0x344c(%esp),%eax
    mov    0x2c(%eax),%eax
    mov    %eax,0x1938(%esp)
    mov    0x344c(%esp),%eax
    mov    0x30(%eax),%eax
    mov    %eax,0x193c(%esp)
    mov    0x3430(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x1940(%esp)
    mov    0x3430(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x1944(%esp)
    mov    0x3430(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x1948(%esp)
    mov    0x344c(%esp),%eax
    mov    0x40(%eax),%eax
    mov    %eax,0x194c(%esp)
    mov    0x344c(%esp),%eax
    mov    0x44(%eax),%eax
    mov    %eax,0x1950(%esp)
    mov    0x344c(%esp),%eax
    mov    0x48(%eax),%eax
    mov    %eax,0x1954(%esp)
    mov    0x344c(%esp),%eax
    mov    0x4c(%eax),%eax
    mov    %eax,0x1958(%esp)
    mov    0x344c(%esp),%eax
    mov    0x50(%eax),%eax
    mov    %eax,0x195c(%esp)
    mov    0x344c(%esp),%eax
    mov    0x54(%eax),%eax
    mov    %eax,0x1960(%esp)
    mov    0x344c(%esp),%eax
    mov    0x58(%eax),%eax
    mov    %eax,0x1964(%esp)
    mov    0x344c(%esp),%eax
    mov    0x5c(%eax),%eax
    mov    %eax,0x1968(%esp)
    mov    0x344c(%esp),%eax
    mov    0x60(%eax),%eax
    mov    %eax,0x196c(%esp)
    mov    0x344c(%esp),%eax
    mov    0x64(%eax),%eax
    mov    %eax,0x1970(%esp)
    mov    0x344c(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,0x1974(%esp)
    mov    0x344c(%esp),%eax
    mov    0x6c(%eax),%eax
    mov    %eax,0x1978(%esp)
    mov    0x344c(%esp),%eax
    mov    0x70(%eax),%eax
    mov    %eax,0x197c(%esp)
    mov    0x3444(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x1980(%esp)
    mov    0x3444(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x1984(%esp)
    mov    0x3444(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x1988(%esp)
    mov    0x3420(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x198c(%esp)
    mov    0x3420(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x1990(%esp)
    mov    0x3420(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x1994(%esp)
    mov    0x3424(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x1998(%esp)
    mov    0x3424(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x199c(%esp)
    mov    0x3424(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x19a0(%esp)
    mov    0x3440(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x19a4(%esp)
    mov    0x3440(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x19a8(%esp)
    mov    0x3440(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x19ac(%esp)
    mov    0x343c(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x19b0(%esp)
    mov    0x343c(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x19b4(%esp)
    mov    0x343c(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x19b8(%esp)
    mov    0x3428(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x19bc(%esp)
    mov    0x3428(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x19c0(%esp)
    mov    0x3428(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x19c4(%esp)
    mov    0x342c(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x19c8(%esp)
    mov    0x342c(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x19cc(%esp)
    mov    0x342c(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x19d0(%esp)
    mov    0x4f0e(%ebp),%eax
    mov    %eax,0x19d4(%esp)
    mov    0x4f12(%ebp),%eax
    mov    %eax,0x19d8(%esp)
    mov    0x4f16(%ebp),%eax
    mov    %eax,0x19dc(%esp)
    mov    0x4f1a(%ebp),%eax
    mov    %eax,0x19e0(%esp)
    mov    0x4f1e(%ebp),%eax
    mov    %eax,0x19e4(%esp)
    mov    0x4f22(%ebp),%ax
    mov    %ax,0x19e8(%esp)
    mov    0x4f24(%ebp),%ax
    mov    %ax,0x19ea(%esp)
    mov    0x4f26(%ebp),%eax
    mov    %eax,0x19ec(%esp)
    mov    0x4f2a(%ebp),%eax
    mov    %eax,0x19f0(%esp)
    mov    0x503a(%ebp),%eax
    mov    %eax,0x19f4(%esp)
    mov    0x503e(%ebp),%eax
    mov    %eax,0x19f8(%esp)
    mov    0x5042(%ebp),%eax
    mov    %eax,0x19fc(%esp)
    mov    0x5046(%ebp),%eax
    mov    %eax,0x1a00(%esp)
    mov    $0x1a08,%ebx
    mov    0x504a(%ebp),%eax
    mov    %esp,%edx
    mov    %eax,0x1a04(%esp)
    mov    0x3410(%esp),%eax
    call   func_1c098
    lea    0x190c(%esp),%eax
    xor    %edx,%edx
    call   func_1b66c
    lea    0x1450(%esp),%eax
    xor    %edx,%edx
    call   func_1a9e0
    lea    0x4b0(%esp),%eax
    xor    %edx,%edx
    call   func_1aa00
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1a9e0
    add    $0x3450,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1a9e0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $data_85870,%ebx
    mov    $0x64,%edx
    call   func_729cc
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1aa00:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x858d4,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x64,%edx
    call   func_729cc
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1aa40:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    flds   (%edx)
    lea    0xc(%edx),%ebx
    fstps  (%eax)
    add    $0xc,%eax
    flds   0x4(%edx)
    add    $0x18,%edx
    fstps  -0x8(%eax)
    add    $0xc,%eax
    mov    -0x10(%edx),%ecx
    mov    %ecx,-0x10(%eax)
    sub    $0x18,%eax
    mov    (%ebx),%ecx
    mov    %ecx,0xc(%eax)
    mov    0x4(%ebx),%ecx
    mov    %ecx,0x10(%eax)
    mov    0x8(%ebx),%ecx
    mov    %ecx,0x14(%eax)
    mov    (%edx),%ebx
    mov    %ebx,0x18(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x1c(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x20(%eax)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1aa90:
/*----------------------------------------------------------------*/
    add    $0x190c,%eax
    xor    %edx,%edx
    call   func_1b66c
    sub    $0x4bc,%eax
    xor    %edx,%edx
    call   func_1a9e0
    sub    $0xfa0,%eax
    xor    %edx,%edx
    call   func_1aa00
    sub    $0x4b0,%eax
    xor    %edx,%edx
    jmp    func_1a9e0


/*----------------------------------------------------------------*/
func_1aac0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    $data_85870,%ebx
    mov    $0x64,%edx
    call   func_72754
    mov    $0x858d4,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x64,%edx
    add    $0x4b0,%eax
    call   func_72754
    mov    $data_85870,%ebx
    mov    $0x64,%edx
    add    $0xfa0,%eax
    call   func_72754
    add    $0x4b0,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    call   func_1b4f0
    add    $0x98,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    sub    $0x18,%eax
    movl   $0x0,0x1c(%eax)
    movl   $0x0,0x20(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%edx
    movl   $0x3f800000,(%eax)
    movl   $0x0,(%edx)
    movl   $0x3f800000,0x4(%edx)
    movl   $0x0,0x8(%edx)
    lea    0x18(%eax),%edx
    movl   $0x0,(%edx)
    movl   $0x0,0x4(%edx)
    sub    $0x19b0,%eax
    movl   $0x3f800000,0x8(%edx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1abd0:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_1abe0:
/*----------------------------------------------------------------*/
    push   %edx
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    sub    $0x18,%eax
    movl   $0x0,0x1c(%eax)
    movl   $0x0,0x20(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%edx
    movl   $0x3f800000,(%eax)
    movl   $0x0,(%edx)
    movl   $0x3f800000,0x4(%edx)
    movl   $0x0,0x8(%edx)
    lea    0x18(%eax),%edx
    movl   $0x0,(%edx)
    movl   $0x0,0x4(%edx)
    movl   $0x3f800000,0x8(%edx)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_1ac70:
/*----------------------------------------------------------------*/
    sub    $0xc,%esp
    mov    %edx,0x4(%esp)
    mov    %ebx,(%esp)
    mov    %ecx,0x8(%esp)
    fildl  0x4(%esp)
    fstps  (%eax)
    fildl  (%esp)
    fstps  0x4(%eax)
    fildl  0x8(%esp)
    fstps  0x8(%eax)
    add    $0xc,%esp
    ret


/*----------------------------------------------------------------*/
func_1aca0:
/*----------------------------------------------------------------*/
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    ret


/*----------------------------------------------------------------*/
func_1acc0:
/*----------------------------------------------------------------*/
    movl   $0x0,0x2ee4(%eax)
    movl   $0x0,0x2ee8(%eax)
    movw   $0x0,0x2ee0(%eax)
    movw   $0x0,0x2ee2(%eax)
    mov    %eax,%eax


/*----------------------------------------------------------------*/
func_1ace8:
/*----------------------------------------------------------------*/
    movl   $0xffffffff,0x2eec(%eax)
    ret


/*----------------------------------------------------------------*/
func_1acf4:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    mov    0x2ee4(%eax),%eax
    call   func_259ac
    movl   $0x0,0x2ee4(%ebx)
    mov    %ebx,%eax
    movl   $0x0,0x2ee8(%ebx)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1ad1c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %edx,(%esp)
    add    $0x3,%edx
    mov    %edx,(%esp)
    andb   $0xfc,(%esp)
    mov    $data_80674,%ebx
    mov    (%esp),%eax
    mov    $0x5,%edx
    call   func_729c4
    call   func_2593c
    mov    %eax,0x2ee4(%ecx)
    test   %eax,%eax
    jne    jump_1ad60
    mov    $0x41,%ebx
    mov    $data_80680,%edx
    call   func_25888
  jump_1ad60:
    movw   $0x0,0x2ee0(%ecx)
    mov    (%esp),%eax
    movw   $0x0,0x2ee2(%ecx)
    mov    %ecx,%edx
    mov    %eax,0x2ee8(%ecx)
    mov    %ecx,%eax
    lea    0x320(%ecx),%ebx
  jump_1ad85:
    movl   $0x0,(%eax)
    add    $0x4,%eax
    movb   $0x0,0x7d0(%edx)
    add    $0x32,%edx
    movl   $0x0,0x31c(%eax)
    cmp    %ebx,%eax
    jne    jump_1ad85
    add    $0x4,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1adac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    cmpl   $0x0,0x2ee4(%eax)
    jne    jump_1add2
    mov    $0x53,%ebx
    mov    $data_8068d,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1add2:
    mov    %esi,%edi
    mov    $0xffff,%edx
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    %edx,(%esp)
    mov    %ecx,%edi
    test   %ecx,%ecx
    jg     jump_1adfd
    mov    $0x59,%ebx
    mov    $data_8069a,%edx
    xor    %eax,%eax
    call   func_25888
  jump_1adfd:
    cmp    $0x32,%edi
    jl     jump_1ae21
    push   %esi
    push   $data_806a7
    mov    $0x5b,%ebx
    call   func_258ec
    add    $0x8,%esp
    mov    $data_806c3,%edx
    xor    %eax,%eax
    call   func_25898
  jump_1ae21:
    mov    0x2ede(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0xc8,%eax
    jl     jump_1ae42
    mov    $0x5c,%ebx
    mov    $data_806d0,%edx
    xor    %eax,%eax
    call   func_25888
  jump_1ae42:
    mov    %ebp,%eax
    xor    %edx,%edx
  jump_1ae46:
    imul   $0x32,%edx,%ecx
    mov    0x7cd(%eax),%ebx
    sar    $0x18,%ebx
    test   %ebx,%ebx
    jne    jump_1ae96
    lea    0x7d0(%ebp),%edi
    add    %ecx,%edi
    push   %edi
  jump_1ae5f:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1ae77
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1ae5f
  jump_1ae77:
    pop    %edi
    mov    0x2ee0(%ebp),%bx
    inc    %ebx
    mov    %edx,(%esp)
    mov    %bx,0x2ee0(%ebp)
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_1ae96:
    inc    %edx
    add    $0x32,%eax
    cmp    $0xc8,%edx
    jl     jump_1ae46
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1aeb0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    %edx,(%esp)
    mov    %ebx,%esi
    cmpl   $0x0,0x2ee4(%eax)
    jne    jump_1aed8
    mov    $0x70,%ebx
    mov    $data_806dd,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1aed8:
    mov    %esi,%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    %ecx,%edi
    test   %ecx,%ecx
    jg     jump_1aefb
    mov    $0x74,%ebx
    mov    $data_806ea,%edx
    xor    %eax,%eax
    call   func_25888
  jump_1aefb:
    cmp    $0x32,%edi
    jl     jump_1af1f
    push   %esi
    push   $data_806f7
    mov    $0x76,%ebx
    call   func_258ec
    add    $0x8,%esp
    mov    $data_80713,%edx
    xor    %eax,%eax
    call   func_25898
  jump_1af1f:
    mov    0x2ede(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0xc8,%eax
    jl     jump_1af40
    mov    $0x77,%ebx
    mov    $data_80720,%edx
    xor    %eax,%eax
    call   func_25888
  jump_1af40:
    xor    %eax,%eax
    mov    (%esp),%ax
    test   %eax,%eax
    jl     jump_1af51
    cmp    $0xc8,%eax
    jl     jump_1af62
  jump_1af51:
    mov    $0x78,%ebx
    mov    $data_8072d,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1af62:
    xor    %ebx,%ebx
    mov    (%esp),%bx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    add    %eax,%eax
    mov    0x7cd(%eax,%ebp,1),%edx
    sar    $0x18,%edx
    test   %edx,%edx
    je     jump_1afa9
    lea    0x7d0(%ebp),%edx
    add    %eax,%edx
    mov    %esi,%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_1afa0
    mov    $0xffffffff,%eax
    jmp    jump_1aff5
  jump_1afa0:
    mov    %ebx,%edx
    mov    %ebp,%eax
    call   func_1b000
  jump_1afa9:
    xor    %ebx,%ebx
    mov    (%esp),%bx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    lea    0x7d0(%ebp),%edi
    add    %eax,%eax
    add    %eax,%edi
    push   %edi
  jump_1afc8:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1afe0
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1afc8
  jump_1afe0:
    pop    %edi
    mov    0x2ee0(%ebp),%dx
    inc    %edx
    mov    $0xffffffff,%eax
    mov    %dx,0x2ee0(%ebp)
  jump_1aff5:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1b000:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    xor    %eax,%eax
    mov    %dx,%ax
    cmp    $0xc8,%eax
    jl     jump_1b024
    mov    $0x95,%ebx
    mov    $data_8073a,%edx
    xor    %eax,%eax
    call   func_25888
  jump_1b024:
    xor    %ebx,%ebx
    mov    %si,%bx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    mov    0x7cd(%ecx,%eax,2),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    jne    jump_1b054
    mov    $0x96,%ebx
    mov    $data_80747,%edx
    call   func_25888
  jump_1b054:
    xor    %ebx,%ebx
    mov    %si,%bx
    mov    %ecx,%eax
    mov    %ebx,%edx
    call   func_1b354
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    movb   $0x0,0x7d0(%ecx,%eax,2)
    decw   0x2ee0(%ecx)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b084:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x118,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    cmpl   $0x0,0x2eec(%eax)
    jne    jump_1b0ad
    mov    $0xa2,%ebx
    mov    $data_80754,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1b0ad:
    xor    %eax,%eax
    mov    %di,%ax
    cmp    $0xc8,%eax
    jl     jump_1b0ca
    mov    $0xa6,%ebx
    mov    $data_80761,%edx
    xor    %eax,%eax
    call   func_25888
  jump_1b0ca:
    xor    %edx,%edx
    mov    %di,%dx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %edx,%eax
    mov    0x7cd(%esi,%eax,2),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    jne    jump_1b0fa
    mov    $0xa7,%ebx
    mov    $data_8076e,%edx
    call   func_25888
  jump_1b0fa:
    xor    %edx,%edx
    mov    %di,%dx
    cmpl   $0x0,(%esi,%edx,4)
    jne    jump_1b208
    mov    %esp,%eax
    call   func_1bb78
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    mov    $0x200,%ebx
    add    %edx,%eax
    lea    0x7d0(%esi),%ebp
    add    %eax,%eax
    xor    %ecx,%ecx
    add    %eax,%ebp
    mov    %esp,%eax
    mov    %ebp,%edx
    call   func_1bbfc
    mov    %esp,%eax
    call   func_1be28
    lea    0x3(%eax),%ecx
    and    $0xfc,%cl
    cmp    0x2ee8(%esi),%ecx
    jl     jump_1b16d
    push   %ecx
    push   %ebp
    push   $data_8077b
    mov    $0xb8,%ebx
    call   func_258ec
    add    $0xc,%esp
    mov    $data_807a1,%edx
    xor    %eax,%eax
    call   func_25898
  jump_1b16d:
    mov    %ecx,%edx
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    %di,%bx
    call   func_1b2dc
    mov    %eax,(%esi,%ebx,4)
    mov    %esp,%eax
    mov    (%esi,%ebx,4),%edx
    mov    %ecx,0x320(%esi,%ebx,4)
    call   func_1bf1c
    test   %eax,%eax
    jne    jump_1b1cb
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    lea    (%ebx,%eax,1),%edx
    lea    0x7d0(%esi),%eax
    add    %edx,%edx
    add    %edx,%eax
    push   %eax
    push   $data_807ae
    mov    $0xc0,%ebx
    call   func_258ec
    add    $0x8,%esp
    mov    $data_807cc,%edx
    xor    %eax,%eax
    call   func_25898
  jump_1b1cb:
    mov    0x2ee0(%esi),%eax
    sar    $0x10,%eax
    mov    %di,0x640(%esi,%eax,2)
    mov    0x2ee2(%esi),%dx
    inc    %edx
    mov    %esp,%eax
    mov    %dx,0x2ee2(%esi)
    xor    %edx,%edx
    call   func_1bbc8
    xor    %eax,%eax
    mov    %di,%ax
    mov    (%esi,%eax,4),%eax
    add    $0x118,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_1b208:
    mov    %esi,%edx
    xor    %eax,%eax
    jmp    jump_1b212
  jump_1b20e:
    add    $0x2,%edx
    inc    %eax
  jump_1b212:
    mov    0x2ee0(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1b23e
    cmp    0x640(%edx),%di
    je     jump_1b23e
    jmp    jump_1b20e
  jump_1b22a:
    add    $0x2,%edx
    mov    0x640(%edx),%bx
    inc    %eax
    mov    %bx,0x63e(%edx)
    jmp    jump_1b247
  jump_1b23e:
    lea    0x0(,%eax,2),%edx
    add    %esi,%edx
  jump_1b247:
    mov    0x2ee0(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jl     jump_1b22a
    mov    %di,0x63e(%esi,%ebx,2)
    xor    %eax,%eax
    mov    %di,%ax
    mov    (%esi,%eax,4),%eax
    add    $0x118,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b270:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ebx,%ebp
    mov    $0xffff,%edx
    lea    0x7d0(%eax),%ebx
    xor    %ecx,%ecx
    mov    %edx,(%esp)
    jmp    jump_1b293

  jump_1b28f:
    add    $0x32,%ebx
    inc    %ecx

  jump_1b293:
    mov    0x2ede(%edi),%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jge    jump_1b2b0
    mov    %ebx,%edx
    mov    %esi,%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_1b28f
    mov    %ecx,(%esp)

  jump_1b2b0:
    cmp    $0xffffffff,%ebp
    jne    jump_1b2ce
    xor    %eax,%eax
    mov    (%esp),%ax
    cmp    $0xffff,%eax
    jne    jump_1b2ce
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_1adac
    mov    %eax,(%esp)

  jump_1b2ce:
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1b2dc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    mov    %edx,%ebp
    lea    0x320(%eax),%edx
    xor    %esi,%esi
  jump_1b2ed:
    mov    0x320(%eax),%ebx
    add    $0x4,%eax
    add    %ebx,%esi
    cmp    %edx,%eax
    jne    jump_1b2ed
    mov    0x2ee4(%ecx),%eax
    mov    0x2ee8(%ecx),%edx
    xor    %edi,%edi
    sub    %esi,%edx
    add    %esi,%eax
    mov    %edx,%esi
    cmp    %ebp,%edx
    jg     jump_1b34e
  jump_1b314:
    mov    0x2ede(%ecx),%eax
    sar    $0x10,%eax
    cmp    %eax,%edi
    jl     jump_1b332
    mov    $0xff,%ebx
    mov    $data_807d9,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1b332:
    xor    %edx,%edx
    mov    0x640(%ecx),%dx
    add    0x320(%ecx,%edx,4),%esi
    mov    %ecx,%eax
    inc    %edi
    call   func_1b354
    cmp    %ebp,%esi
    jle    jump_1b314
  jump_1b34e:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b354:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ebp
    mov    %edx,0x8(%esp)
    xor    %eax,%eax
    mov    %dx,%ax
    cmp    $0xc8,%eax
    jl     jump_1b37f
    mov    $0x10d,%ebx
    mov    $data_807e6,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1b37f:
    xor    %eax,%eax
    mov    0x8(%esp),%ax
    cmpl   $0x0,0x0(%ebp,%eax,4)
    jne    jump_1b394
    xor    %eax,%eax
    jmp    jump_1b48e
  jump_1b394:
    mov    %ebp,%eax
    xor    %edx,%edx
    lea    0x320(%ebp),%ebx
  jump_1b39e:
    mov    0x320(%eax),%ecx
    add    $0x4,%eax
    add    %ecx,%edx
    cmp    %ebx,%eax
    jne    jump_1b39e
    mov    0x2ee4(%ebp),%eax
    add    %edx,%eax
    mov    %eax,0x4(%esp)
    xor    %eax,%eax
    mov    0x8(%esp),%ax
    shl    $0x2,%eax
    lea    (%eax,%ebp,1),%edx
    mov    %edx,(%esp)
    mov    (%esp),%ebx
    mov    (%edx),%edx
    mov    0x320(%ebx),%ebx
    lea    (%edx,%ebx,1),%esi
    mov    0x4(%esp),%ecx
    mov    %edx,%edi
    sub    %esi,%ecx
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    (%esp),%eax
    movl   $0x0,(%eax)
    movl   $0x0,0x320(%eax)
    mov    %ebp,%eax
    lea    0x320(%ebp),%ecx
    jmp    jump_1b413
  jump_1b40c:
    add    $0x4,%eax
    cmp    %ecx,%eax
    je     jump_1b421
  jump_1b413:
    mov    (%eax),%edi
    cmp    %edi,%edx
    jae    jump_1b40c
    mov    %edi,%esi
    sub    %ebx,%esi
    mov    %esi,(%eax)
    jmp    jump_1b40c
  jump_1b421:
    mov    0x4(%esp),%esi
    mov    0x2ee2(%ebp),%dx
    xor    %ecx,%eax
    mov    0x8(%esp),%ecx
    sub    %ebx,%esi
    dec    %edx
    mov    %esi,0x4(%esp)
    mov    %dx,0x2ee2(%ebp)
    mov    %ebp,%edx
    jmp    jump_1b448
  jump_1b444:
    add    $0x2,%edx
    inc    %eax
  jump_1b448:
    mov    0x2ee0(%ebp),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1b474
    cmp    0x640(%edx),%cx
    je     jump_1b474
    jmp    jump_1b444
  jump_1b460:
    add    $0x2,%edx
    mov    0x640(%edx),%bx
    inc    %eax
    mov    %bx,0x63e(%edx)
    jmp    jump_1b47d
  jump_1b474:
    lea    0x0(,%eax,2),%edx
    add    %ebp,%edx
  jump_1b47d:
    mov    0x2ee0(%ebp),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jl     jump_1b460
    mov    0x4(%esp),%eax
  jump_1b48e:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b498:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    xor    %edx,%edx
    jmp    jump_1b4b5
  jump_1b4a1:
    movl   $0x0,(%eax)
    inc    %edx
    movl   $0x0,0x320(%eax)
    add    $0x4,%eax
  jump_1b4b5:
    mov    0x2ede(%ecx),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jl     jump_1b4a1
    movw   $0x0,0x2ee2(%ecx)
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b4d0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_1b498
    movl   $0x0,0x2eec(%edx)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_1b4f0:
/*----------------------------------------------------------------*/
    push   %edx
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    sub    $0x18,%eax
    movl   $0x0,0x1c(%eax)
    movl   $0x0,0x20(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%edx
    movl   $0x3f800000,(%eax)
    movl   $0x0,(%edx)
    movl   $0x3f800000,0x4(%edx)
    movl   $0x0,0x8(%edx)
    lea    0x18(%eax),%edx
    movl   $0x0,(%edx)
    movl   $0x0,0x4(%edx)
    add    $0x34,%eax
    movl   $0x3f800000,0x8(%edx)
    movl   $0x0,(%eax)
    add    $0x40,%eax
    movl   $0x0,-0x3c(%eax)
    movl   $0x0,-0x38(%eax)
    movl   $0x3f800000,-0xc(%eax)
    movl   $0x0,-0x8(%eax)
    mov    -0xc(%eax),%edx
    mov    %edx,-0x20(%eax)
    mov    -0x20(%eax),%edx
    mov    %edx,-0x34(%eax)
    mov    -0x8(%eax),%edx
    mov    %edx,-0x10(%eax)
    mov    -0x10(%eax),%edx
    mov    %edx,-0x14(%eax)
    mov    -0x14(%eax),%edx
    mov    %edx,-0x18(%eax)
    mov    -0x18(%eax),%edx
    mov    %edx,-0x1c(%eax)
    mov    -0x1c(%eax),%edx
    mov    %edx,-0x24(%eax)
    mov    -0x24(%eax),%edx
    mov    %edx,-0x28(%eax)
    mov    -0x28(%eax),%edx
    mov    %edx,-0x2c(%eax)
    mov    -0x2c(%eax),%edx
    mov    %edx,-0x30(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    sub    $0x18,%eax
    movl   $0x3f800000,(%eax)
    movl   $0x0,0x4(%eax)
    lea    0xc(%eax),%edx
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%edx)
    movl   $0x3f800000,0x4(%edx)
    movl   $0x0,0x8(%edx)
    lea    0x18(%eax),%edx
    movl   $0x0,(%edx)
    movl   $0x0,0x4(%edx)
    movl   $0x3f800000,0x8(%edx)
    lea    -0x74(%eax),%edx
    mov    %edx,%eax
    mov    %edx,%eax
    pop    %edx
    nop


/*----------------------------------------------------------------*/
func_1b66c:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_1b808:
/*----------------------------------------------------------------*/
    push   %edx
    mov    0x8(%esp),%edx
    mov    %edx,0x24(%eax)
    mov    0xc(%esp),%edx
    mov    %edx,0x2c(%eax)
    mov    0x10(%esp),%edx
    mov    %edx,0x30(%eax)
    mov    0x14(%esp),%edx
    movl   $0x3f800000,0x70(%eax)
    call   func_1b834
    pop    %edx
    ret    $0x10


/*----------------------------------------------------------------*/
func_1b834:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x4,%esp
    mov    %eax,%ebx
    mov    %edx,(%esp)
    flds   0x24(%eax)
    fmuls  0x85900 /* Warning: address points to a valid object/reloc, but no label found */
    fmuls  data_807f4
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_729b7
    fildl  (%esp)
    fdivp  %st,%st(1)
    fstps  0x28(%ebx)
    add    $0x4,%esp
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b864:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x64,%esp
    mov    %eax,%edx
    lea    0x54(%esp),%ebx
    mov    %ebx,0x60(%esp)
    xor    %ebx,%ebx
    add    $0x34,%eax
    mov    %ebx,0x48(%esp)
    mov    %ebx,0x4c(%esp)
    mov    %ebx,0x50(%esp)
    flds   (%eax)
    fchs
    fstps  0x48(%esp)
    flds   0x4(%eax)
    fchs
    fstps  0x4c(%esp)
    flds   0x8(%eax)
    mov    0x48(%esp),%eax
    fchs
    mov    %eax,0x54(%esp)
    mov    0x4c(%esp),%eax
    fstps  0x50(%esp)
    mov    %eax,0x58(%esp)
    mov    0x50(%esp),%eax
    lea    0x74(%edx),%ebx
    mov    %eax,0x5c(%esp)
    mov    (%ebx),%eax
    mov    %eax,(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%ebx),%eax
    lea    0xc(%ebx),%ecx
    mov    %eax,0x8(%esp)
    mov    (%ecx),%eax
    mov    %eax,0xc(%esp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x10(%esp)
    mov    0x8(%ecx),%eax
    mov    %eax,0x14(%esp)
    mov    0x18(%ebx),%eax
    mov    %eax,0x18(%esp)
    mov    0x1c(%ebx),%eax
    mov    %eax,0x1c(%esp)
    mov    0x20(%ebx),%eax
    mov    %eax,0x20(%esp)
    mov    (%edx),%eax
    mov    %eax,0x24(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x28(%esp)
    add    $0x18,%ebx
    mov    0x8(%edx),%eax
    lea    0xc(%edx),%ebx
    mov    %eax,0x2c(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x30(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x34(%esp)
    mov    0x8(%ebx),%eax
    lea    0x18(%edx),%ebx
    mov    %eax,0x38(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x3c(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x40(%esp)
    mov    0x8(%ebx),%eax
    lea    0x54(%esp),%ecx
    mov    %eax,0x44(%esp)
    lea    0x40(%edx),%eax
    mov    %esp,%ebx
    lea    0x24(%esp),%edx
    call   func_4eef8
    add    $0x64,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1b958:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    sub    $0x80,%esp
    mov    %eax,%ebx
    lea    0x48(%esp),%ecx
    mov    %ecx,0x78(%esp)
    xor    %ecx,%ecx
    mov    %ecx,0x60(%esp)
    mov    %ecx,0x64(%esp)
    mov    %ecx,0x68(%esp)
    flds   (%edx)
    fadds  0x34(%eax)
    fstps  0x60(%esp)
    flds   0x4(%edx)
    fadds  0x38(%eax)
    fstps  0x64(%esp)
    flds   0x8(%edx)
    fadds  0x3c(%eax)
    add    $0x34,%eax
    fstps  0x68(%esp)
    mov    0x60(%esp),%eax
    flds   0x60(%esp)
    fchs
    mov    %eax,0x48(%esp)
    fstps  0x54(%esp)
    flds   0x64(%esp)
    mov    0x64(%esp),%eax
    fchs
    mov    %eax,0x4c(%esp)
    mov    0x68(%esp),%eax
    fstps  0x58(%esp)
    mov    %eax,0x50(%esp)
    lea    0x6c(%esp),%eax
    flds   0x68(%esp)
    mov    %eax,0x7c(%esp)
    mov    0x54(%esp),%eax
    fchs
    mov    %eax,0x6c(%esp)
    mov    0x58(%esp),%eax
    fstps  0x5c(%esp)
    mov    %eax,0x70(%esp)
    mov    0x5c(%esp),%eax
    lea    0x74(%ebx),%edx
    mov    %eax,0x74(%esp)
    mov    (%edx),%eax
    mov    %eax,0x24(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x28(%esp)
    mov    0x8(%edx),%eax
    lea    0xc(%edx),%ecx
    mov    %eax,0x2c(%esp)
    mov    (%ecx),%eax
    mov    %eax,0x30(%esp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x34(%esp)
    mov    0x8(%ecx),%eax
    mov    %eax,0x38(%esp)
    mov    0x18(%edx),%eax
    mov    %eax,0x3c(%esp)
    mov    0x1c(%edx),%eax
    mov    %eax,0x40(%esp)
    mov    0x20(%edx),%eax
    mov    %eax,0x44(%esp)
    mov    (%ebx),%eax
    mov    %eax,(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x4(%esp)
    add    $0x18,%edx
    mov    0x8(%ebx),%eax
    lea    0xc(%ebx),%edx
    mov    %eax,0x8(%esp)
    mov    (%edx),%eax
    mov    %eax,0xc(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x10(%esp)
    mov    0x8(%edx),%eax
    lea    0x18(%ebx),%edx
    mov    %eax,0x14(%esp)
    mov    (%edx),%eax
    mov    %eax,0x18(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x1c(%esp)
    mov    0x8(%edx),%eax
    lea    0x6c(%esp),%ecx
    mov    %eax,0x20(%esp)
    lea    0x40(%ebx),%eax
    mov    %esp,%edx
    lea    0x24(%esp),%ebx
    call   func_4eef8
    add    $0x80,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1baf0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    add    $0x34,%eax
    push   0x8(%esp)
    call   func_4e69c
    mov    %edx,%eax
    push   0x8(%esp)
    call   func_4e9d4
    pop    %edx
    ret    $0x4


/*----------------------------------------------------------------*/
func_1bb10:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x118,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %esp,%eax
    mov    $0x100,%ebx
    call   func_1bb78
    mov    %edi,%edx
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    mov    $data_807f8,%edx
    mov    (%esp),%eax
    call   func_72a33
    mov    %eax,%edi
    test   %esi,%esi
    je     jump_1bb58
    mov    %esi,%edx
    call   func_72b2d
    mov    %esp,%eax
    call   func_1be28
    add    %eax,(%esi)
  jump_1bb58:
    mov    $0xffffffff,%ebx
    mov    %esp,%eax
    xor    %edx,%edx
    mov    %ebx,(%esp)
    call   func_1bbc8
    mov    %edi,%eax
    add    $0x118,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1bb78:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    mov    %eax,%edx
    cmpl   $0x0,data_8a0f4
    jne    jump_1bb9a
    mov    $data_8a0f8,%eax
    mov    $0xffffffff,%ecx
    call   func_1c3c4
    mov    %ecx,data_8a0f4
  jump_1bb9a:
    movl   $0xffffffff,(%edx)
    movb   $0x0,0x4(%edx)
    movl   $0x0,0x10c(%edx)
    movl   $0x0,0x110(%edx)
    mov    %edx,%eax
    movl   $0xffffffff,0x108(%edx)
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1bbc8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    call   func_1be00
    cmpl   $0xffffffff,0x110(%ebx)
    jne    jump_1bbeb
    mov    0x10c(%ebx),%ecx
    test   %ecx,%ecx
    je     jump_1bbeb
    mov    %ecx,%eax
    call   func_2595c
  jump_1bbeb:
    mov    0x10c(%ebx),%eax
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1bbfc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %ebx,%edi
    cmpl   $0xffffffff,(%eax)
    je     jump_1bc0c
    call   func_1be00
  jump_1bc0c:
    mov    $0x100,%ebx
    lea    0x4(%esi),%eax
    movl   $0x0,0x110(%esi)
    call   func_72b40
    mov    %edi,%edx
    mov    %esi,%eax
    movb   $0x0,0x103(%esi)
    call   func_1bcbc
    mov    %eax,%edi
    test   %eax,%eax
    jne    jump_1bca5
    cmp    $0xffffffff,%ecx
    jne    jump_1bca3
    mov    (%esi),%eax
    call   func_72b65
    mov    %eax,%ecx
    test   %eax,%eax
    jle    jump_1bca3
    mov    $data_807fa,%ebx
    mov    $0x1,%edx
    call   func_729c4
    call   func_2593c
    mov    %eax,0x10c(%esi)
    test   %eax,%eax
    je     jump_1bca3
    mov    %eax,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_1bf94
    test   %eax,%eax
    jne    jump_1bc87
    movl   $0xffffffff,0x110(%esi)
    mov    %edi,%eax
    pop    %edi
    pop    %esi
    ret
  jump_1bc87:
    mov    0x10c(%esi),%eax
    call   func_2595c
    mov    0x10c(%esi),%eax
    call   func_7211c
    mov    %edi,0x10c(%esi)
  jump_1bca3:
    mov    %edi,%eax
  jump_1bca5:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_1bca8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    $0x21,%ebx
    xor    %ecx,%ecx
    call   func_1bbfc
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1bcbc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,0x8(%esp)
    mov    %edx,0x4(%esp)
    cmpl   $0xffffffff,(%eax)
    je     jump_1bcd6
    call   func_1be00
  jump_1bcd6:
    mov    0x8(%esp),%ebp
    mov    0x4(%esp),%ah
    add    $0x4,%ebp
    test   $0x20,%ah
    je     jump_1bd05
    orw    $0x240,0x4(%esp)
    push   $0x180
    mov    0x8(%esp),%edi
    push   %edi
    push   %ebp
    call   func_72ba2
    add    $0xc,%esp
    jmp    jump_1bdd8
  jump_1bd05:
    xor    %ebx,%ebx
    mov    %ebx,(%esp)
    test   $0x3,%ah
    jne    jump_1bdbd
    mov    data_90a70,%esi
    xor    %edi,%edi
    xor    %ecx,%ecx
    test   %esi,%esi
    jg     jump_1bd38
    jmp    jump_1bdbd
  jump_1bd26:
    mov    data_90a70,%eax
    inc    %ecx
    add    $0x32,%ebx
    cmp    %eax,%ecx
    jl     jump_1bd3f
    jmp    jump_1bdbd
  jump_1bd38:
    mov    $data_8a0f8,%ebx
    xor    %esi,%esi
  jump_1bd3f:
    cmp    data_90a74(%esi),%ecx
    jne    jump_1bd4b
    add    $0x4,%esi
    inc    %edi
  jump_1bd4b:
    mov    %ebx,%edx
    mov    %ebp,%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_1bd26
    mov    0x8(%esp),%eax
    mov    %ecx,0x108(%eax)
    lea    0x0(,%edi,4),%eax
    sub    %edi,%eax
    shl    $0x3,%eax
    add    %edi,%eax
    mov    0x4(%esp),%ebx
    add    %eax,%eax
    push   %ebx
    add    $data_90a88,%eax
    push   %eax
    call   func_72ba2
    add    $0x8,%esp
    mov    0x8(%esp),%edx
    mov    %eax,(%edx)
    cmp    $0xffffffff,%eax
    jne    jump_1bda1
    mov    $0xc4,%ebx
    mov    $data_80808,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1bda1:
    mov    0x8(%esp),%eax
    mov    data_902a0(,%ecx,4),%edx
    xor    %ebx,%ebx
    mov    (%eax),%eax
    mov    $0xffffffff,%edi
    call   func_72df0
    mov    %edi,(%esp)
  jump_1bdbd:
    cmpl   $0x0,(%esp)
    jne    jump_1bdde
    mov    0x4(%esp),%eax
    push   %eax
    mov    0xc(%esp),%eax
    add    $0x4,%eax
    push   %eax
    call   func_72ba2
    add    $0x8,%esp
  jump_1bdd8:
    mov    0x8(%esp),%edx
    mov    %eax,(%edx)
  jump_1bdde:
    mov    0x8(%esp),%edx
    mov    0x4(%esp),%eax
    mov    %eax,0x104(%edx)
    cmpl   $0xffffffff,(%edx)
    sete   %al
    and    $0xff,%eax
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1be00:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    (%eax),%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_1be10
    xor    %eax,%eax
    pop    %edx
    pop    %ebx
    ret
  jump_1be10:
    mov    %ebx,%eax
    call   func_72e31
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_1be23
    movl   $0xffffffff,(%edx)
  jump_1be23:
    mov    %ebx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1be28:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebx
    mov    (%eax),%edx
    cmp    $0xffffffff,%edx
    jne    jump_1be3b
    mov    %edx,%eax
    jmp    jump_1be97
  jump_1be3b:
    mov    0x108(%eax),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_1be54
    mov    %edx,%eax
    call   func_72b65
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_1be54:
    mov    data_90b96,%ebp
    mov    data_902a0(,%ecx,4),%edi
    mov    data_902a4(,%ecx,4),%esi
    test   %ebp,%ebp
    jle    jump_1be93
    lea    0x0(,%ebp,4),%ecx
    xor    %eax,%eax
  jump_1be75:
    mov    data_90a74(%eax),%edx
    mov    0x108(%ebx),%ebp
    dec    %edx
    cmp    %ebp,%edx
    jne    jump_1be8c
    mov    data_90b82(%eax),%esi
  jump_1be8c:
    add    $0x4,%eax
    cmp    %ecx,%eax
    jl     jump_1be75
  jump_1be93:
    mov    %esi,%eax
    sub    %edi,%eax
  jump_1be97:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1bea0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    mov    (%eax),%eax
    call   func_72e36
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_1bec5
    mov    0x108(%edx),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_1bec5
    sub    data_902a0(,%ecx,4),%ebx
  jump_1bec5:
    mov    %ebx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1becc:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    cmpl   $0x0,0x110(%eax)
    je     jump_1bedc
    cmp    $0xffffffff,%ebx
    jne    jump_1bf00
  jump_1bedc:
    mov    0x108(%eax),%esi
    mov    %edx,%ecx
    cmp    $0xffffffff,%esi
    je     jump_1bef2
    mov    data_902a0(,%esi,4),%ecx
    add    %edx,%ecx
  jump_1bef2:
    mov    %ecx,%edx
    mov    (%eax),%eax
    xor    %ebx,%ebx
    call   func_72df0
    pop    %esi
    pop    %ecx
    ret
  jump_1bf00:
    mov    0x10c(%eax),%eax
    add    %edx,%eax
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1bf0c:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x1,%ebx
    mov    (%eax),%eax
    call   func_72df0
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1bf1c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%ecx
    cmpl   $0xffffffff,(%eax)
    je     jump_1bf89
    call   func_1be28
    mov    %eax,%edi
    xor    %ebp,%ebp
    test   %eax,%eax
    jle    jump_1bf89
    test   %ecx,%ecx
    jne    jump_1bf5a
    mov    $data_80815,%ebx
    mov    $0x5,%edx
    call   func_729c4
    call   func_2593c
    mov    %eax,%ecx
    test   %eax,%eax
    je     jump_1bf8b
    mov    $0xffffffff,%ebp
  jump_1bf5a:
    mov    %edi,%ebx
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_1bf94
    cmp    %edi,%eax
    je     jump_1bf85
    cmp    $0xffffffff,%ebp
    jne    jump_1bf75
    mov    %ecx,%eax
    call   func_2595c
  jump_1bf75:
    mov    %ecx,%eax
    call   func_7211c
    call   func_72e47
    mov    (%eax),%eax
    jmp    jump_1bf89
  jump_1bf85:
    mov    %ecx,%eax
    jmp    jump_1bf8b
  jump_1bf89:
    xor    %eax,%eax
  jump_1bf8b:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1bf94:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    0x108(%eax),%esi
    cmp    $0xffffffff,%esi
    je     jump_1bfc8
    mov    (%eax),%eax
    call   func_72e36
    mov    data_902a0(,%esi,4),%edi
    mov    %eax,%esi
    sub    %edi,%esi
    mov    %ecx,%eax
    lea    (%esi,%ebx,1),%edi
    call   func_1be28
    cmp    %eax,%edi
    jbe    jump_1bfc8
    mov    %eax,%ebx
    sub    %esi,%ebx
  jump_1bfc8:
    mov    (%ecx),%eax
    call   func_72e53
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1bfd4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,0x8(%esp)
    mov    %edx,%esi
    mov    %ebx,(%esp)
    mov    %ecx,%edi
    mov    %ebx,%eax
    xor    %edx,%edx
    div    %ecx
    xor    %ebp,%ebp
    mov    %eax,0xc(%esp)
    xor    %edx,%edx
    lea    -0x1(%ecx),%eax
    mov    %edx,0x10(%esp)
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    ja     jump_1c019
    jmp    jump_1c05c
  jump_1c004:
    mov    %esi,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    inc    %ebp
    add    %ecx,%esi
    mov    0x4(%esp),%ecx
    call   *0x24(%esp)
    cmp    %ecx,%ebp
    jae    jump_1c05c
  jump_1c019:
    mov    0x8(%esp),%eax
    mov    0xc(%esp),%ebx
    mov    %esi,%edx
    mov    (%eax),%eax
    call   func_72e53
    mov    %eax,%ecx
    cmp    $0xffffffff,%eax
    je     jump_1c08d
    mov    0x10(%esp),%ebx
    add    %eax,%ebx
    mov    0xc(%esp),%eax
    mov    %ebx,0x10(%esp)
    cmp    %eax,%ecx
    jae    jump_1c004
    mov    %ebp,%ecx
    cmp    %edi,%ebp
    jae    jump_1c089
    xor    %esi,%esi
  jump_1c04b:
    mov    %esi,%ebx
    mov    %ecx,%edx
    mov    %edi,%eax
    inc    %ecx
    call   *0x24(%esp)
    cmp    %edi,%ecx
    jb     jump_1c04b
    jmp    jump_1c089
  jump_1c05c:
    mov    (%esp),%ebx
    sub    0x10(%esp),%ebx
    mov    0x8(%esp),%eax
    mov    %esi,%edx
    mov    (%eax),%eax
    call   func_72e53
    cmp    $0xffffffff,%eax
    je     jump_1c08d
    mov    0x10(%esp),%edx
    add    %eax,%edx
    mov    %esi,%ebx
    mov    %edx,0x10(%esp)
    mov    %edi,%eax
    mov    %ebp,%edx
    call   *0x24(%esp)
  jump_1c089:
    mov    0x10(%esp),%eax
  jump_1c08d:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_1c098:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,0x4(%esp)
    mov    %edx,%ebp
    mov    %ebx,%edi
    test   %ebx,%ebx
    je     jump_1c0ff
  jump_1c0ab:
    cmp    $0xfff0,%edi
    jbe    jump_1c0ba
    mov    $0xfff0,%esi
    jmp    jump_1c0bc
  jump_1c0ba:
    mov    %edi,%esi
  jump_1c0bc:
    mov    %esp,%eax
    mov    %ds,%ecx
    push   %eax
    mov    0x8(%esp),%eax
    mov    %esi,%edx
    mov    %ebp,%ebx
    mov    (%eax),%eax
    mov    %esi,0x10(%esp)
    call   func_72f90
    mov    %eax,0x8(%esp)
    test   %eax,%eax
    jne    jump_1c103
    cmp    (%esp),%esi
    je     jump_1c0f5
    mov    $0x244,%ecx
    mov    $data_80820,%ebx
    mov    $data_8082d,%edx
    call   func_72f97
  jump_1c0f5:
    mov    0xc(%esp),%edx
    add    %edx,%ebp
    sub    %edx,%edi
    jne    jump_1c0ab
  jump_1c0ff:
    mov    0x8(%esp),%eax
  jump_1c103:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1c278:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    cmpl   $0x5,0x6a9e(%eax)
    jl     jump_1c29e
    mov    $0x28c,%ebx
    mov    $data_8086c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1c29e:
    mov    0x6a9e(%ecx),%ebx
    cmp    $0x5,%ebx
    jge    jump_1c3bb
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    lea    0x6990(%ecx),%edx
    add    %eax,%eax
    mov    $0x32,%ebx
    add    %edx,%eax
    mov    %esi,%edx
    call   func_72b40
    push   $0x200
    push   %esi
    call   func_72ba2
    mov    %eax,%esi
    add    $0x8,%esp
    mov    %eax,%edi
    cmp    $0xffffffff,%eax
    je     jump_1c3bb
    call   func_72b65
    mov    0x6a9e(%ecx),%edx
    mov    $0x4,%ebx
    mov    %eax,0x6a8a(%ecx,%edx,4)
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_72e53
    mov    $0x1f4,%eax
    mov    0x6978(%ecx),%esi
    mov    (%esp),%ebp
    sub    %esi,%eax
    cmp    %ebp,%eax
    jge    jump_1c331
    mov    $0x2a0,%ebx
    mov    $data_80879,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1c331:
    mov    $0x1f4,%eax
    mov    0x6978(%ecx),%edx
    mov    (%esp),%ebx
    sub    %edx,%eax
    cmp    %ebx,%eax
    jl     jump_1c3bb
    mov    %ebx,%esi
    lea    0x0(,%edx,4),%eax
    shl    $0x2,%ebx
    sub    %edx,%eax
    sub    %esi,%ebx
    shl    $0x3,%eax
    shl    $0x3,%ebx
    add    %edx,%eax
    add    %esi,%ebx
    add    %eax,%eax
    add    %ebx,%ebx
    lea    (%ecx,%eax,1),%edx
    mov    %edi,%eax
    call   func_72e53
    mov    (%esp),%ebx
    mov    0x6978(%ecx),%eax
    lea    0x61a8(%ecx),%edx
    shl    $0x2,%eax
    shl    $0x2,%ebx
    add    %eax,%edx
    mov    %edi,%eax
    call   func_72e53
    mov    %edi,%eax
    call   func_72e31
    mov    (%esp),%eax
    mov    0x6978(%ecx),%esi
    add    %eax,%esi
    mov    0x6a9e(%ecx),%eax
    shl    $0x2,%eax
    lea    (%ecx,%eax,1),%edx
    mov    %esi,0x6978(%ecx)
    mov    %esi,0x697c(%edx)
    incl   0x6a9e(%ecx)
  jump_1c3bb:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1c3c4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x64,%esp
    mov    %eax,%ebx
    mov    $data_80886,%edx
    mov    $data_80888,%eax
    call   func_7331e
    mov    %eax,%ecx
    test   %eax,%eax
    je     jump_1c409
  jump_1c3e1:
    mov    %esp,%eax
    push   %eax
    push   $data_80890
    push   %ecx
    call   func_73431
    add    $0xc,%esp
    cmp    $0xffffffff,%eax
    je     jump_1c402
    mov    %esp,%edx
    mov    %ebx,%eax
    call   func_1c278
    jmp    jump_1c3e1
  jump_1c402:
    mov    %ecx,%eax
    call   func_7280e
  jump_1c409:
    add    $0x64,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1c410:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    call   func_25840
    call   func_703dc
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1c424:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x558,%esp
    mov    %eax,0x554(%esp)
    mov    %edx,%ebp
    call   func_73452
    push   $data_80894
    mov    %eax,%edx
    call   func_73457
    add    $0x4,%esp
  jump_1c44c:
    call   func_73452
    sub    %edx,%eax
    cmp    $0xfa,%eax
    jb     jump_1c44c
    mov    $0xab,%eax
    mov    $data_86500,%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_1c46c:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1c484
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1c46c
  jump_1c484:
    pop    %edi
    mov    $func_1c410,%eax
    mov    0x554(%esp),%edx
    call   func_734b0
    cmp    $0x1,%edx
    jle    jump_1c4c2
    mov    0x4(%ebp),%eax
    cmpb   $0x76,(%eax)
    jne    jump_1c4c2
    mov    data_86378,%ebx
    push   %ebx
    mov    $0xac,%eax
    call   func_1ce70
    push   %eax
    call   func_73457
    add    $0x8,%esp
    call   func_734ec
  jump_1c4c2:
    call   func_4f1dc
    mov    0x554(%esp),%ecx
    mov    %eax,%edx
    cmp    $0x1,%ecx
    jle    jump_1c4f6
    mov    0x4(%ebp),%ebx
    cmpb   $0x6d,(%ebx)
    jne    jump_1c4f6
    push   %eax
    mov    $0xad,%eax
    call   func_1ce70
    push   %eax
    call   func_73457
    add    $0x8,%esp
    call   func_734ec
  jump_1c4f6:
    cmp    $0x300000,%edx
    jge    jump_1c536
    mov    $0x300000,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    shl    $0xa,%edx
    sbb    %edx,%eax
    sar    $0xa,%eax
    inc    %eax
    push   %eax
    mov    $0xae,%eax
    call   func_1ce70
    push   %eax
    push   $data_86500
    call   func_720c9
    add    $0xc,%esp
    mov    $0x1,%eax
    call   func_7350a
  jump_1c536:
    lea    0x300(%esp),%eax
    mov    $0x200,%ebx
    mov    $data_808e0,%edx
    call   func_1bb78
    xor    %ecx,%ecx
    lea    0x300(%esp),%eax
    call   func_1bbfc
    mov    %eax,%edx
    lea    0x300(%esp),%eax
    call   func_1be00
    test   %edx,%edx
    je     jump_1c5a1
    mov    $0xaf,%eax
    mov    $data_86500,%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_1c57e:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1c596
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1c57e
  jump_1c596:
    pop    %edi
    mov    $0x1,%eax
    call   func_7350a
  jump_1c5a1:
    lea    0x300(%esp),%eax
    xor    %edx,%edx
    call   func_1bbc8
    push   $0x101
    call   func_4f112
    add    $0x4,%esp
    test   %eax,%eax
    jne    jump_1c5f7
    push   %eax
    push   $data_808f1
    call   func_70458
    add    $0x8,%esp
    test   %eax,%eax
    jne    jump_1c5f7
    mov    $0xb0,%eax
    call   func_1ce70
    push   %eax
    xor    %ch,%ch
    call   func_73457
    add    $0x4,%esp
    mov    $0x1,%eax
    mov    %ch,data_86500
    call   func_7350a
  jump_1c5f7:
    mov    $data_808f4,%ebx
    mov    $data_80900,%edx
    mov    $data_c84f8,%eax
    call   func_2b468
    test   %eax,%eax
    jne    jump_1c61e
    mov    $0x92,%ebx
    mov    $data_80905,%edx
    call   func_25888
  jump_1c61e:
    push   $0x0
    push   $0x1df
    push   $0x27f
    push   $0x0
    push   $0x0
    call   *data_86a84
    mov    $0x100,%ecx
    mov    $data_80911,%edx
    add    $0x14,%esp
    mov    $data_c84f8,%eax
    xor    %ebx,%ebx
    call   func_2b838
    mov    $0x300,%ebx
    mov    %esp,%eax
    xor    %edx,%edx
    mov    %esp,%ecx
    call   func_72280
    mov    $0x100,%ebx
    mov    $data_c84f8,%eax
    xor    %edx,%edx
    call   func_2b904
    lea    0x418(%esp),%eax
    mov    $0x200,%ebx
    mov    $data_8091f,%edx
    call   func_1bb78
    xor    %ecx,%ecx
    lea    0x418(%esp),%eax
    call   func_1bbfc
    lea    0x418(%esp),%eax
    mov    $data_c8c44,%edx
    call   func_1be28
    mov    %eax,%ebx
    lea    0x418(%esp),%eax
    add    $data_c8c44,%ebx
    call   func_1bf1c
    push   %ebx
    push   $data_c8c44
    push   $data_c850c
    call   func_5c1b1
    add    $0xc,%esp
    push   $0x1df
    push   $0x27f
    push   $0x0
    push   $0x0
    push   $data_c850c
    call   *data_86aa4
    add    $0x14,%esp
    push   $0x19
    push   $data_c892b
    push   $data_c84f8
    call   func_5c9ad
    mov    $0xffffffff,%edx
    add    $0xc,%esp
    mov    $data_f8638,%eax
    xor    %ebx,%ebx
    call   func_4a3a0
    test   %eax,%eax
    jne    jump_1c71b
    mov    $data_f8638,%eax
    call   func_4b2f8
    jmp    jump_1c746
  jump_1c71b:
    cmpl   $0xffffffff,data_f8843
    jne    jump_1c746
    mov    $data_8092d,%edx
    mov    $data_f8638,%eax
    call   func_4aa4c
    test   %eax,%eax
    jne    jump_1c746
    mov    $0xb2,%ebx
    mov    $data_80937,%edx
    call   func_25878
  jump_1c746:
    mov    $data_80943,%edx
    mov    $data_80945,%eax
    call   func_7331e
    test   %eax,%eax
    je     jump_1c768
    movl   $0xffffffff,data_90ba0
    call   func_7280e
  jump_1c768:
    mov    $data_8094f,%edx
    mov    $data_80951,%eax
    call   func_7331e
    test   %eax,%eax
    je     jump_1c78a
    movl   $0xffffffff,data_90ba4
    call   func_7280e
  jump_1c78a:
    call   func_735e2
    test   %eax,%eax
    je     jump_1c7a4
    mov    $0xcf,%ebx
    mov    $data_8095b,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1c7a4:
    mov    $data_fa35c,%eax
    call   func_4f9f0
    cmp    $0xffffffff,%eax
    je     jump_1c7c4
    mov    $0xd8,%ebx
    mov    $data_80967,%edx
    xor    %eax,%eax
    call   func_25888
  jump_1c7c4:
    call   func_735e2
    test   %eax,%eax
    je     jump_1c7de
    mov    $0xda,%ebx
    mov    $data_80973,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1c7de:
    mov    $data_c849c,%eax
    call   func_25a1c
    test   %eax,%eax
    jne    jump_1c821
    mov    $0xb1,%eax
    mov    $data_86500,%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_1c7fe:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1c816
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1c7fe
  jump_1c816:
    pop    %edi
    mov    $0x1,%eax
    call   func_7350a
  jump_1c821:
    mov    $data_c84f8,%eax
    call   func_2be24
    call   func_735e2
    test   %eax,%eax
    je     jump_1c845
    mov    $0xe5,%ebx
    mov    $data_8097f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1c845:
    xor    %eax,%eax
    call   func_7366c
    call   func_736c3
    xor    %eax,%eax
    mov    $data_8098b,%edx
    call   func_1ced4
    mov    $data_8098d,%eax
    call   func_7331e
    mov    %eax,%edi
    test   %eax,%eax
    jne    jump_1c892
    mov    $0x7,%ebx
    mov    $0x32,%edx
    mov    $data_92e10,%eax
    xor    %ecx,%ecx
    call   func_1db34
    mov    $data_92e10,%eax
    call   func_1ed38
    jmp    jump_1c95f
  jump_1c892:
    lea    0x550(%esp),%edx
    push   %edx
    lea    0x534(%esp),%edx
    push   %edx
    lea    0x550(%esp),%edx
    push   %edx
    lea    0x53c(%esp),%edx
    push   %edx
    lea    0x554(%esp),%edx
    push   %edx
    lea    0x544(%esp),%edx
    push   %edx
    push   $data_80998
    push   %eax
    call   func_73431
    add    $0x20,%esp
    mov    0x550(%esp),%ebx
    xor    %esi,%esi
    cmp    $0xffffffff,%ebx
    je     jump_1c8e5
    mov    %ebx,%eax
    call   func_736c3
  jump_1c8e5:
    mov    0x546(%esp),%ebx
    mov    0x542(%esp),%edx
    mov    $data_92e10,%eax
    xor    %ecx,%ecx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    call   func_1db34
    mov    $data_92e10,%eax
    call   func_1ed38
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    lea    (%eax,%eax,1),%edx
  jump_1c91e:
    lea    0x54c(%esp),%eax
    push   %eax
    push   $data_809aa
    push   %edi
    call   func_73431
    add    $0xc,%esp
    cmp    $0xffffffff,%eax
    je     jump_1c958
    cmp    0x548(%esp),%esi
    jge    jump_1c958
    add    $0x1ee,%edx
    mov    0x54c(%esp),%al
    inc    %esi
    mov    %al,data_92c29(%edx)
    jmp    jump_1c91e
  jump_1c958:
    mov    %edi,%eax
    call   func_7280e
  jump_1c95f:
    mov    $data_92e10,%eax
    xor    %edx,%edx
    call   func_1e73c
    mov    $data_809ad,%eax
    xor    %edx,%edx
    call   func_736d3
    test   %eax,%eax
    je     jump_1c985
    mov    $data_92e10,%eax
    call   func_1e96c
  jump_1c985:
    mov    $data_c84f8,%esi
    mov    $data_fa35c,%eax
    mov    %esi,data_fd366
    call   func_52980
    call   func_735e2
    test   %eax,%eax
    je     jump_1c9b4
    mov    $0x116,%ebx
    mov    $data_809b8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1c9b4:
    mov    $data_92e10,%eax
    mov    $func_1cc5c,%ebx
    call   func_1e7d8
    xor    %edx,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0x1,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_21b48,%ebx
    mov    $0x1,%edx
    mov    $data_fa35c,%eax
    call   func_528d4
    mov    $func_556e4,%ebx
    mov    $0x2,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0x3,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0x4,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0x7,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0x8,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0x9,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0xa,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0xc,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0xd,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0xe,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0xf,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0x10,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0x12,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $func_556e4,%ebx
    mov    $0x14,%edx
    mov    $data_fa35c,%eax
    call   func_528b4
    mov    $data_fa35c,%eax
    call   func_54bec
    push   $0x32
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_c84f8
    call   func_5c9ad
    add    $0xc,%esp
    push   $0x0
    push   $0x1df
    push   $0x27f
    push   $0x0
    mov    $0xffffffff,%edi
    push   $0x0
    mov    %edi,data_12204c
    call   *data_86a84
    mov    $0x100,%ecx
    mov    $data_809c4,%edx
    add    $0x14,%esp
    mov    $data_c84f8,%eax
    xor    %ebx,%ebx
    call   func_2b838
    mov    %esp,%ecx
    mov    $0x100,%ebx
    mov    $data_c84f8,%eax
    xor    %edx,%edx
    call   func_2b904
    mov    $data_fa35c,%eax
    mov    %edi,%ebx
    xor    %edx,%edx
    call   func_52260
    call   func_735e2
    test   %eax,%eax
    je     jump_1cba2
    mov    $0x13d,%ebx
    mov    $data_809d2,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1cba2:
    cmpl   $0x4,0x554(%esp)
    jne    jump_1cbd1
    mov    $data_fa35c,%eax
    mov    0xc(%ebp),%edx
    xor    %ebx,%ebx
    call   func_54d4c
    cmp    $0xffffffff,%eax
    je     jump_1cbd1
    mov    $0x143,%ebx
    mov    $data_809de,%edx
    xor    %eax,%eax
    call   func_25888
  jump_1cbd1:
    call   func_6028a
    cmpl   $0xffffffff,data_8660c
    jne    jump_1cc2e
  jump_1cbdf:
    cmpl   $0xffffffff,data_fec06
    jne    jump_1cbf4
    mov    $data_fa35c,%eax
    call   func_54f44
    jmp    jump_1cbfe
  jump_1cbf4:
    mov    $data_c849c,%eax
    call   func_25c4c
  jump_1cbfe:
    mov    $data_fa35c,%eax
    call   func_4faa0
    mov    $data_fa35c,%eax
    call   func_50470
    cmpl   $0x0,data_fec06
    je     jump_1cc25
    mov    $data_fa35c,%eax
    call   func_54e18
  jump_1cc25:
    cmpl   $0xffffffff,data_8660c
    je     jump_1cbdf
  jump_1cc2e:
    mov    $data_fa35c,%eax
    call   func_54c60
    mov    $data_809ea,%eax
    xor    %edx,%edx
    call   func_4f438
    lea    0x418(%esp),%eax
    call   func_1bbc8
    add    $0x558,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1cc5c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x118,%esp
    mov    $data_809f5,%ecx
    mov    $0x1,%ebx
    mov    $0x502e,%eax
    mov    %ebx,%edx
    call   func_25990
    mov    $0x200,%ebx
    mov    $data_80a01,%edx
    mov    %eax,%edi
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_1bb78
    mov    %esp,%eax
    call   func_1bbfc
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_1ccb6
    mov    $0x177,%ebx
    mov    $data_80a13,%edx
    call   func_25878
  jump_1ccb6:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    test   %esi,%esi
    je     jump_1cce2
    test   %edi,%edi
    je     jump_1cce2
    push   %edi
    push   %esi
    push   $data_c850c
    call   func_5c1b1
    add    $0xc,%esp
    mov    $data_fa35c,%eax
    xor    %edx,%edx
    call   func_50690
  jump_1cce2:
    mov    %esi,%eax
    call   func_2595c
    mov    %esi,%eax
    call   func_72124
    mov    %edi,%eax
    call   func_259ac
    add    $0x118,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1cd04:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xcc,%esp
    mov    $data_80a1f,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%edi
    test   %eax,%eax
    jne    jump_1cd31
    mov    $0x197,%ebx
    mov    $data_80a2a,%edx
    call   func_25878
  jump_1cd31:
    xor    %edx,%edx
    mov    $data_90ec8,%esi
    mov    %edx,data_92e0c
    mov    %edx,0xc8(%esp)
  jump_1cd45:
    cmpl   $0xc8,data_92e0c
    jl     jump_1cd62
    mov    $0x1a5,%ebx
    mov    $data_80a36,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1cd62:
    mov    %esp,%edx
    mov    %edi,%eax
    call   func_2f538
    mov    $data_80a42,%edx
    mov    %esp,%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_1cd8b
    movl   $0xffffffff,0xc8(%esp)
    jmp    jump_1ce43
  jump_1cd8b:
    cmpb   $0x22,(%esp)
    jne    jump_1ce43
    mov    data_92e0c,%eax
    mov    %esp,%ecx
    xor    %ebp,%ebp
    mov    %esi,data_90ba8(,%eax,4)
  jump_1cda5:
    mov    %esi,%eax
    sub    $data_90ec8,%eax
    inc    %ecx
    cmp    $0x1f40,%eax
    jl     jump_1cdc5
    mov    $0x1bd,%ebx
    mov    $data_80a47,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1cdc5:
    mov    (%ecx),%dl
    cmp    $0x22,%dl
    jne    jump_1cde2
    mov    $0xffffffff,%ebp
    mov    data_92e0c,%eax
    movb   $0x0,(%esi)
    inc    %eax
    inc    %esi
    mov    %eax,data_92e0c
    jmp    jump_1ce3b
  jump_1cde2:
    cmp    $0xa,%dl
    je     jump_1ce3b
    movsbl %dl,%eax
    test   %eax,%eax
    jne    jump_1ce02
    mov    $0xc8,%edx
    mov    %esp,%eax
    mov    %edi,%ebx
    lea    -0x1(%esp),%ecx
    call   func_7370e
    jmp    jump_1ce3b
  jump_1ce02:
    cmp    $0x5c,%dl
    jne    jump_1ce37
    mov    0x1(%ecx),%bh
    inc    %ecx
    cmp    $0x6e,%bh
    jne    jump_1ce16
    movb   $0xa,(%esi)
    inc    %esi
    jmp    jump_1ce3b
  jump_1ce16:
    movsbl %bh,%eax
    test   %eax,%eax
    jne    jump_1ce31
    mov    $0xc8,%edx
    mov    %esp,%eax
    mov    %edi,%ebx
    lea    -0x1(%esp),%ecx
    call   func_7370e
    jmp    jump_1ce3b
  jump_1ce31:
    inc    %esi
    mov    %bh,-0x1(%esi)
    jmp    jump_1ce3b
  jump_1ce37:
    inc    %esi
    mov    %dl,-0x1(%esi)
  jump_1ce3b:
    test   %ebp,%ebp
    je     jump_1cda5
  jump_1ce43:
    cmpl   $0x0,0xc8(%esp)
    je     jump_1cd45
    mov    $0xffffffff,%ebx
    mov    %edi,%eax
    mov    %ebx,data_92e08
    call   func_7280e
    add    $0xcc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1ce70:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    cmpl   $0x0,data_92e08
    jne    jump_1ce83
    call   func_1cd04
  jump_1ce83:
    test   %ecx,%ecx
    jl     jump_1ce8f
    cmp    data_92e0c,%ecx
    jl     jump_1cea0
  jump_1ce8f:
    mov    $0x1ea,%ebx
    mov    $data_80a53,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1cea0:
    mov    data_90ba8(,%ecx,4),%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1ceb0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_8637c,%eax
    call   func_73a9a
    mov    $data_92e10,%eax
    mov    $0x1,%edx
    call   func_1d9c4
    mov    %edx,data_86384
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_1ced4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    xor    %edx,%edx
    mov    %al,%dl
    cmp    $0xff,%edx
    jne    jump_1cee8
    xor    %dh,%dh
    mov    $0xff,%dl
    jmp    jump_1cef0
  jump_1cee8:
    mov    %al,%dh
    mov    %al,%cl
    mov    $0x1,%dl
    shl    %cl,%dl
  jump_1cef0:
    mov    %dh,data_f458e
    mov    %dl,data_86774
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1cf00:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    lea    0x8(%eax),%edx
    movl   $0x0,(%edx)
    sub    $0x8,%edx
    movl   $0x0,0xc(%edx)
    mov    %edx,%eax
    movl   $0x0,0x10(%edx)
    mov    %edx,%eax
    pop    %edx
    mov    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_1cf28:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x94,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    0x42(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_1cf45
    cmp    $0x6,%eax
    jl     jump_1cf56
  jump_1cf45:
    mov    $0x7f,%ebx
    mov    $data_80a64,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1cf56:
    mov    0x42(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_1cf65
    cmp    $0x6,%eax
    jl     jump_1cf76
  jump_1cf65:
    mov    $0x81,%ebx
    mov    $data_80a72,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1cf76:
    mov    (%ecx),%edx
    mov    0x44(%ecx),%ax
    mov    data_863c6(,%edx,2),%di
    xor    %ebx,%ebx
    cmp    %di,%ax
    je     jump_1d1e5
    mov    (%esi),%edx
    mov    0x44(%esi),%ax
    cmp    data_863c6(,%edx,2),%ax
    je     jump_1d1e5
    mov    $data_92e10,%eax
    mov    %esi,%ebx
    mov    %ecx,%edx
    call   func_1fc84
    mov    %eax,%edx
    mov    %eax,%ebx
    test   %eax,%eax
    je     jump_1d1e5
    mov    0x42(%ecx),%eax
    sar    $0x10,%eax
    mov    %edx,0x2c(%ecx,%eax,4)
    incw   0x44(%ecx)
    mov    0x42(%esi),%eax
    sar    $0x10,%eax
    mov    %edx,0x2c(%esi,%eax,4)
    incw   0x44(%esi)
    xor    %edi,%edi
    mov    %edi,0x30(%esp)
    mov    %edi,0x34(%esp)
    mov    %edi,0x38(%esp)
    mov    0x8(%esi),%eax
    mov    %eax,0x3c(%esp)
    mov    0xc(%esi),%eax
    mov    %eax,0x40(%esp)
    mov    0x10(%esi),%eax
    mov    %eax,0x44(%esp)
    mov    %edi,0x18(%esp)
    mov    %edi,0x1c(%esp)
    mov    %esp,%eax
    mov    %edi,0x20(%esp)
    mov    %eax,0x78(%esp)
    flds   0x3c(%esp)
    fsubs  0x8(%ecx)
    fstps  0x18(%esp)
    flds   0x40(%esp)
    fsubs  0xc(%ecx)
    fstps  0x1c(%esp)
    flds   0x44(%esp)
    fsubs  0x10(%ecx)
    mov    0x18(%esp),%eax
    fstps  0x20(%esp)
    flds   0x1c(%esp)
    fmul   %st(0),%st
    mov    %eax,(%esp)
    mov    0x1c(%esp),%eax
    flds   0x18(%esp)
    mov    %eax,0x4(%esp)
    mov    0x20(%esp),%eax
    fmuls  0x18(%esp)
    mov    %eax,0x8(%esp)
    faddp  %st,%st(1)
    mov    0x18(%esp),%eax
    flds   0x20(%esp)
    mov    %eax,0x3c(%esp)
    mov    0x1c(%esp),%eax
    fmuls  0x20(%esp)
    mov    %eax,0x40(%esp)
    mov    0x20(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x44(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fld1
    fdiv   %st(1),%st
    lea    0xc(%esp),%eax
    flds   0x3c(%esp)
    fmul   %st(1),%st
    mov    %eax,0x80(%esp)
    fstps  0x6c(%esp)
    flds   0x40(%esp)
    mov    0x6c(%esp),%eax
    fmul   %st(1),%st
    mov    %eax,0xc(%esp)
    fstps  0x70(%esp)
    flds   0x44(%esp)
    mov    0x70(%esp),%eax
    fmulp  %st,%st(1)
    mov    %eax,0x10(%esp)
    fstps  0x74(%esp)
    mov    0x74(%esp),%eax
    fmuls  data_80a80
    mov    %eax,0x14(%esp)
    fstps  0x90(%esp)
    mov    0x6c(%esp),%eax
    flds   0x90(%esp)
    fmuls  data_80a84
    mov    %eax,0x3c(%esp)
    mov    0x70(%esp),%eax
    fadds  data_80a88
    mov    %eax,0x40(%esp)
    fstps  0x90(%esp)
    mov    0x74(%esp),%eax
    flds   0x6c(%esp)
    fmuls  0x90(%esp)
    mov    %eax,0x44(%esp)
    lea    0x60(%esp),%eax
    fstps  0x24(%esp)
    flds   0x70(%esp)
    fmuls  0x90(%esp)
    mov    %eax,0x84(%esp)
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    flds   0x74(%esp)
    fmuls  0x90(%esp)
    mov    %eax,0x60(%esp)
    mov    0x28(%esp),%eax
    fstps  0x2c(%esp)
    mov    %eax,0x64(%esp)
    mov    0x2c(%esp),%eax
    mov    %eax,0x68(%esp)
    mov    0x24(%esp),%eax
    mov    %eax,0x30(%esp)
    mov    0x28(%esp),%eax
    add    $0x8,%ecx
    mov    %eax,0x34(%esp)
    mov    0x2c(%esp),%eax
    lea    0x8(%edx),%ecx
    mov    %eax,0x38(%esp)
    mov    0x24(%esp),%eax
    mov    %eax,(%ecx)
    mov    0x34(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x38(%esp),%eax
    add    $0x8,%esi
    mov    %eax,0x8(%ecx)
    flds   0x30(%esp)
    lea    0x54(%esp),%eax
    fchs
    fstps  0x48(%esp)
    flds   0x34(%esp)
    mov    %eax,0x88(%esp)
    fchs
    mov    0x48(%esp),%eax
    fstps  0x4c(%esp)
    flds   0x38(%esp)
    fchs
    mov    %eax,0x54(%esp)
    mov    0x4c(%esp),%eax
    fstps  0x50(%esp)
    mov    %eax,0x58(%esp)
    mov    0x50(%esp),%eax
    mov    %eax,0x5c(%esp)
    mov    0x48(%esp),%eax
    mov    %eax,0x14(%edx)
    mov    0x58(%esp),%eax
    mov    %eax,0x18(%edx)
    add    $0x14,%edx
    mov    0x5c(%esp),%eax
    mov    %eax,0x8(%edx)
  jump_1d1e5:
    mov    %ebx,%eax
    add    $0x94,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1d1f4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ecx
    test   %edx,%edx
    jne    jump_1d215
    mov    $0xb3,%ebx
    mov    $data_80a8c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1d215:
    cmp    data_93b98,%cx
    jl     jump_1d22f
    mov    $0xb4,%ebx
    mov    $data_80a9a,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1d22f:
    xor    %edx,%edx
    movswl %cx,%eax
    mov    0x57(%edi),%dl
    cmp    %eax,%edx
    jne    jump_1d24c
    mov    $0xb5,%ebx
    mov    $data_80aa8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1d24c:
    xor    %eax,%eax
    mov    0x57(%edi),%al
    cmp    $0xff,%eax
    jne    jump_1d269
    mov    $0xb7,%ebx
    mov    $data_80ab6,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1d269:
    xor    %eax,%eax
    mov    0x57(%edi),%al
    mov    %ax,(%esp)
    xor    %eax,%eax
    mov    0x57(%edi),%al
    cmp    $0xff,%eax
    je     jump_1d322
    movswl %cx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_1d290
    movb   $0xff,0x57(%edi)
    jmp    jump_1d29a
  jump_1d290:
    mov    $0x1,%al
    mov    %cl,0x57(%edi)
    shl    %cl,%al
    or     %al,0x14(%esi)
  jump_1d29a:
    mov    (%esp),%cl
    mov    $0x1,%al
    shl    %cl,%al
    mov    0x14(%esi),%dl
    not    %al
    mov    0x5a(%esi),%bx
    and    %al,%dl
    xor    %eax,%eax
    mov    %dl,0x14(%esi)
    test   %bx,%bx
    jg     jump_1d2bf
    jmp    jump_1d2e5
  jump_1d2b8:
    inc    %eax
    cmp    0x5a(%esi),%ax
    jge    jump_1d2e5
  jump_1d2bf:
    movswl %ax,%edx
    mov    0x46(%esi,%edx,4),%edx
    xor    %ebx,%ebx
    mov    0x57(%edx),%bl
    mov    -0x2(%esp),%edx
    sar    $0x10,%edx
    cmp    %edx,%ebx
    jne    jump_1d2b8
    mov    (%esp),%cl
    mov    $0x1,%al
    mov    0x14(%esi),%dh
    shl    %cl,%al
    or     %al,%dh
    mov    %dh,0x14(%esi)
  jump_1d2e5:
    mov    -0x2(%esp),%eax
    sar    $0x10,%eax
    mov    %eax,%edx
    shl    $0x5,%edx
    sub    %eax,%edx
    shl    $0x3,%edx
    sub    %eax,%edx
    mov    data_92e1d(,%edx,2),%ebx
    cmp    %ebx,%esi
    jne    jump_1d322
    mov    -0x2(%esp),%ecx
    mov    $0x1,%eax
    xor    %edx,%edx
    sar    $0x10,%ecx
    mov    0x14(%ebx),%dl
    shl    %cl,%eax
    test   %eax,%edx
    jne    jump_1d322
    mov    %dl,%bl
    and    $0x7f,%bl
    mov    %bl,0x14(%esi)
  jump_1d322:
    mov    0x54(%edi),%bh
    cmp    $0xff,%bh
    je     jump_1d39e
    cmp    $0x17,%bh
    jne    jump_1d363
    xor    %edx,%edx
    mov    %edi,%eax
    mov    0x52(%edi),%dx
    mov    (%esp),%esi
    call   func_34b1c
    mov    %eax,%ecx
    cmp    0x56(%eax),%si
    je     jump_1d35c
    mov    $0xe0,%ebx
    mov    $data_80ac4,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1d35c:
    mov    %ecx,%eax
    call   func_4517c
  jump_1d363:
    xor    %eax,%eax
    mov    0x52(%edi),%ax
    cmp    $0xffff,%eax
    je     jump_1d38e
    cmpb   $0x23,0x54(%edi)
    je     jump_1d38e
    mov    0x10(%edi),%edx
    movb   $0xff,0x1(%edx,%eax,4)
    xor    %eax,%eax
    mov    0x10(%edi),%edx
    mov    0x52(%edi),%ax
    movw   $0x0,0x2(%edx,%eax,4)
  jump_1d38e:
    movb   $0xff,0x54(%edi)
    movw   $0x0,0x50(%edi)
    movw   $0xffff,0x52(%edi)
  jump_1d39e:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1d3a8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x10,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    test   %ebx,%ebx
    je     jump_1d3c7
    mov    $0xfc,%ebx
    mov    $data_80ad2,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1d3c7:
    mov    0x58(%esi),%ah
    cmp    $0x5,%ah
    jne    jump_1d485
    xor    %edx,%edx
    mov    0x59(%esi),%eax
    mov    %edx,(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x8(%esp)
    cmp    (%eax),%edi
    jne    jump_1d3ff
    lea    0x8(%eax),%edx
    mov    (%edx),%eax
    mov    %eax,(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x8(%esp)
    jmp    jump_1d42d
  jump_1d3ff:
    cmp    0x4(%eax),%edi
    jne    jump_1d41c
    lea    0x14(%eax),%edx
    mov    (%edx),%eax
    mov    %eax,(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x8(%esp)
    jmp    jump_1d42d
  jump_1d41c:
    mov    $0x109,%ebx
    mov    $data_80ae0,%edx
    xor    %eax,%eax
    call   func_25888
  jump_1d42d:
    flds   0x4(%esp)
    fadds  data_80aee
    fstps  0x4(%esp)
    call   func_7369f
    mov    %eax,%edx
    mov    $0xc8,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %edx,0xc(%esp)
    fildl  0xc(%esp)
    fadds  0x8(%esp)
    fstps  0x8(%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %edx,0xc(%esp)
    mov    %esi,%eax
    fildl  0xc(%esp)
    fadds  (%esp)
    mov    %esp,%edx
    fstps  (%esp)
    call   func_44ef8
    movb   $0x4,0x58(%esi)
    jmp    jump_1d48a
  jump_1d485:
    cmp    $0x4,%ah
    jne    jump_1d48d
  jump_1d48a:
    mov    %edi,0x59(%esi)
  jump_1d48d:
    mov    $0x1,%al
    mov    0x56(%esi),%cl
    mov    0x15(%edi),%dh
    shl    %cl,%al
    or     %al,%dh
    mov    %dh,0x15(%edi)
    mov    $0x1,%al
    mov    0x56(%esi),%cl
    mov    0x17(%edi),%bl
    shl    %cl,%al
    or     %al,%bl
    mov    %bl,0x17(%edi)
    mov    0x44(%edi),%bx
    xor    %edx,%edx
    test   %bx,%bx
    jle    jump_1d4e9
  jump_1d4b6:
    mov    $0x1,%bl
    movswl %dx,%eax
    mov    0x56(%esi),%cl
    mov    0x2c(%edi,%eax,4),%eax
    shl    %cl,%bl
    or     %bl,0x20(%eax)
    mov    0x56(%esi),%cl
    mov    $0x1,%ch
    shl    %cl,%ch
    mov    (%eax),%ebx
    mov    %ch,%cl
    or     %cl,0x16(%ebx)
    mov    $0x1,%bl
    mov    0x56(%esi),%cl
    mov    0x4(%eax),%eax
    shl    %cl,%bl
    or     %bl,0x16(%eax)
    inc    %edx
    cmp    0x44(%edi),%dx
    jl     jump_1d4b6
  jump_1d4e9:
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1d4f8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1b0,%esp
    mov    %eax,%edi
    mov    %edx,%ecx
    mov    0x56(%edx),%ax
    mov    %ax,0x1ac(%esp)
    mov    0x1aa(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_1d531
    mov    0x1ac(%esp),%eax
    cmp    data_93b98,%ax
    jl     jump_1d542
  jump_1d531:
    mov    $0x138,%ebx
    mov    $data_80af2,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1d542:
    mov    0x58(%ecx),%ah
    cmp    $0x3,%ah
    je     jump_1d554
    cmp    $0x1,%ah
    je     jump_1d554
    cmp    $0x2,%ah
    jne    jump_1d583
  jump_1d554:
    mov    %ecx,%edx
    mov    0x59(%ecx),%eax
    call   func_34ce4
    test   %eax,%eax
    jne    jump_1d583
    mov    0x59(%ecx),%edx
    mov    0xa(%edx),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x5,%eax
    movb   $0x4,0x58(%ecx)
    add    $data_93bc5,%eax
    mov    %eax,0x59(%ecx)
  jump_1d583:
    cmpb   $0x4,0x58(%ecx)
    jne    jump_1d58e
    cmp    0x59(%ecx),%edi
    je     jump_1d59f
  jump_1d58e:
    mov    $0x148,%ebx
    mov    $data_80b00,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1d59f:
    mov    %esp,%edx
    mov    %edi,%eax
    call   func_1d754
    mov    %eax,%esi
    test   %eax,%eax
    jg     jump_1d5bf
    mov    $0x14d,%ebx
    mov    $data_80b0e,%edx
    xor    %eax,%eax
    call   func_25888
  jump_1d5bf:
    mov    $0xffffffff,%ebp
    xor    %edx,%edx
    jmp    jump_1d5c9
  jump_1d5c8:
    inc    %edx
  jump_1d5c9:
    movswl %dx,%eax
    cmp    %esi,%eax
    jge    jump_1d5ed
    mov    (%esp,%eax,4),%eax
    mov    0x56(%eax),%bx
    cmp    0x1ac(%esp),%bx
    jne    jump_1d5c8
    cmp    %ecx,%eax
    je     jump_1d5c8
    cmpb   $0x1,0x58(%eax)
    je     jump_1d5c8
    xor    %ebp,%ebp
  jump_1d5ed:
    cmp    $0xffffffff,%ebp
    jne    jump_1d602
    mov    0x1ac(%esp),%cl
    mov    $0x1,%al
    shl    %cl,%al
    not    %al
    and    %al,0x15(%edi)
  jump_1d602:
    mov    $0xffffffff,%eax
    add    $0x1b0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1d614:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1b4,%esp
    mov    %eax,%edi
    mov    %edx,%ebp
    mov    %ebx,0x1b0(%esp)
    test   %edx,%edx
    je     jump_1d631
    test   %ebx,%ebx
    jne    jump_1d642
  jump_1d631:
    mov    $0x16b,%ebx
    mov    $data_80b1c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1d642:
    mov    %esp,%edx
    mov    %edi,%eax
    call   func_1d754
    xor    %esi,%esi
    mov    %eax,0x1ac(%esp)
    jmp    jump_1d657
  jump_1d656:
    inc    %esi
  jump_1d657:
    mov    0x1ac(%esp),%ebx
    movswl %si,%ecx
    cmp    %ebx,%ecx
    jge    jump_1d69e
    mov    (%esp,%ecx,4),%ecx
    xor    %edx,%edx
    mov    0x54(%ecx),%eax
    mov    data_f458e,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    jne    jump_1d656
    mov    %ecx,%edx
    mov    %edi,%eax
    call   func_1d4f8
    xor    %ebx,%ebx
    mov    0x1b0(%esp),%eax
    mov    %ecx,%edx
    mov    %eax,0x59(%ecx)
    mov    %ebp,%eax
    movb   $0x5,0x58(%ecx)
    call   func_1d3a8
    jmp    jump_1d656
  jump_1d69e:
    add    $0x1b4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1d6f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    mov    0x15(%eax),%al
    mov    0x14(%ecx),%ah
    mov    data_93b98,%dx
    or     %ah,%al
    xor    %ebx,%ebx
    mov    %al,(%esp)
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_1d749
    movzbl (%esp),%esi
    xor    %edx,%edx
  jump_1d720:
    mov    %al,%cl
    mov    $0x1,%ch
    shl    %cl,%ch
    mov    %ch,%cl
    and    $0xff,%ecx
    test   %esi,%ecx
    je     jump_1d73c
    mov    %edx,%ecx
    inc    %ebx
    add    $0x2,%edx
    mov    %ax,(%ecx,%edi,1)
  jump_1d73c:
    mov    data_93b98,%cx
    inc    %eax
    cmp    %cx,%ax
    jl     jump_1d720
  jump_1d749:
    mov    %ebx,%eax
  jump_1d74b:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1d754:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,(%esp)
    mov    %edx,0x4(%esp)
    mov    $data_ba095,%eax
    mov    0x4(%esp),%ebx
    xor    %edi,%edi
    xor    %esi,%esi
    xor    %edx,%edx
    jmp    jump_1d77a
  jump_1d774:
    inc    %edx
    add    $0x162,%eax
  jump_1d77a:
    movswl %dx,%ecx
    cmp    $0x6b,%ecx
    jge    jump_1d7e7
    mov    data_c3489,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%esi
    jge    jump_1d7e7
    mov    0x54(%eax),%ecx
    sar    $0x10,%ecx
    cmp    $0xffffffff,%ecx
    je     jump_1d774
    mov    0x58(%eax),%cl
    inc    %esi
    cmp    $0x3,%cl
    je     jump_1d7b1
    cmp    $0x1,%cl
    je     jump_1d7b1
    cmp    $0x2,%cl
    jne    jump_1d7ca
  jump_1d7b1:
    mov    0x59(%eax),%ecx
    mov    0xa(%ecx),%ecx
    sar    $0x10,%ecx
    imul   $0x60,%ecx,%ecx
    mov    (%esp),%ebp
    add    $data_93bc5,%ecx
    cmp    %ebp,%ecx
    je     jump_1d7d8
  jump_1d7ca:
    cmpb   $0x4,0x58(%eax)
    jne    jump_1d774
    mov    (%esp),%ebp
    cmp    0x59(%eax),%ebp
    jne    jump_1d774
  jump_1d7d8:
    cmpl   $0x0,0x4(%esp)
    je     jump_1d7e1
    mov    %eax,(%ebx)
  jump_1d7e1:
    add    $0x4,%ebx
    inc    %edi
    jmp    jump_1d774
  jump_1d7e7:
    mov    %edi,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1d7f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ebx
    mov    %dx,(%esp)
    mov    $data_ba095,%ecx
    xor    %edx,%edx
    xor    %edi,%edi
    mov    %edx,0x4(%esp)
    jmp    jump_1d818
  jump_1d811:
    inc    %edi
    add    $0x162,%ecx
  jump_1d818:
    movswl %di,%eax
    cmp    $0x6b,%eax
    jge    jump_1d8d2
    mov    0x4(%esp),%eax
    cmp    data_c348b,%ax
    jge    jump_1d8d2
    mov    0x54(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_1d811
    incl   0x4(%esp)
    cmpb   $0x5,0x58(%ecx)
    jne    jump_1d811
    mov    -0x2(%esp),%esi
    sar    $0x10,%esi
    imul   $0x1ee,%esi,%esi
    cmpb   $0x2,data_92fd6(%esi,%eax,1)
    je     jump_1d875
    movzbl data_f458e,%esi
    cmp    %esi,%eax
    je     jump_1d875
    mov    (%esp),%esi
    cmp    0x56(%ecx),%si
    jne    jump_1d811
  jump_1d875:
    mov    0x44(%ebx),%ax
    xor    %edx,%edx
    test   %ax,%ax
    jg     jump_1d889
    jmp    jump_1d811
  jump_1d882:
    inc    %edx
    cmp    0x44(%ebx),%dx
    jge    jump_1d811
  jump_1d889:
    movswl %dx,%eax
    shl    $0x2,%eax
    add    %ebx,%eax
    mov    0x59(%ecx),%ebp
    cmp    0x2c(%eax),%ebp
    jne    jump_1d882
    mov    0x2c(%eax),%eax
    cmp    (%eax),%ebx
    jne    jump_1d8ac
    testl  $0x7fffffff,0xa2(%ecx)
    je     jump_1d8c4
  jump_1d8ac:
    movswl %dx,%eax
    mov    0x2c(%ebx,%eax,4),%eax
    cmp    0x4(%eax),%ebx
    jne    jump_1d882
    cmpl   $0x3f800000,0xa2(%ecx)
    jne    jump_1d882
  jump_1d8c4:
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_1d8d2:
    xor    %eax,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1d8e0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x60,%esp
    mov    %eax,%ebp
    mov    %edx,%ecx
    cmp    $0xffffffff,%ebx
    jne    jump_1d9ad
    mov    %esp,%eax
    mov    $0x60,%ebx
    mov    %esp,%edx
    call   func_1cf00
    mov    %ecx,%eax
    call   func_1bf94
    mov    (%esp),%eax
    mov    %eax,0x0(%ebp)
    mov    0x4(%esp),%eax
    mov    %ax,0x4(%ebp)
    mov    0x6(%esp),%eax
    mov    %ax,0x6(%ebp)
    lea    0x8(%ebp),%ecx
    mov    0x8(%esp),%eax
    mov    %eax,(%ecx)
    mov    0xc(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x10(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    0x14(%esp),%al
    mov    %al,0x14(%ebp)
    mov    0x15(%esp),%al
    mov    %al,0x15(%ebp)
    mov    0x16(%esp),%al
    mov    %al,0x16(%ebp)
    mov    0x17(%esp),%al
    mov    %al,0x17(%ebp)
    lea    0x1c(%esp),%esi
    mov    0x18(%esp),%eax
    lea    0x1c(%ebp),%edi
    mov    %eax,0x18(%ebp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0x6,%ecx
    lea    0x2c(%esp),%esi
    lea    0x2c(%ebp),%edi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x44(%esp),%eax
    lea    0x46(%esp),%esi
    lea    0x46(%ebp),%edi
    mov    %ax,0x44(%ebp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x5a(%esp),%eax
    mov    %ax,0x5a(%ebp)
    mov    0x5c(%esp),%eax
    movw   $0x0,0x44(%ebp)
    xor    %edx,%edx
    mov    %eax,0x5c(%ebp)
    mov    %esp,%eax
    movw   $0x0,0x5a(%ebp)
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_1d9ad:
    mov    $0x60,%ebx
    mov    %eax,%edx
    mov    %ecx,%eax
    call   func_1c098
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1d9c4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    $0x85988,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x7,%edx
    add    $0x6,%eax
    call   func_72754
    mov    $0x8599c,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x64,%edx
    add    $0xdaf,%eax
    call   func_72754
    mov    $0x85974,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x94,%edx
    add    $0x2582,%eax
    call   func_72754
    mov    $0x85960,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x1f4,%edx
    add    $0x14f10,%eax
    call   func_72754
    mov    $0x8594c,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x6b,%edx
    add    $0xf03e,%eax
    call   func_72754
    mov    $0x85938,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x9,%edx
    add    $0x93f8,%eax
    call   func_72754
    mov    $0x85924,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x18,%edx
    add    $0x84,%eax
    call   func_72754
    lea    -0x30701(%eax),%edx
    mov    %edx,%eax
    call   func_1dabc
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1da64:
/*----------------------------------------------------------------*/
    add    $0x30701,%eax
    xor    %edx,%edx
    call   func_219a0
    sub    $0x84,%eax
    xor    %edx,%edx
    call   func_219c0
    sub    $0x93f8,%eax
    xor    %edx,%edx
    call   func_21980
    sub    $0xf03e,%eax
    xor    %edx,%edx
    call   func_219e0
    sub    $0x14f10,%eax
    xor    %edx,%edx
    call   func_21a00
    sub    $0x2582,%eax
    xor    %edx,%edx
    call   func_21960
    sub    $0xdaf,%eax
    xor    %edx,%edx
    call   func_21940
    sub    $0x6,%eax
    ret


/*----------------------------------------------------------------*/
func_1dabc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    $data_c8368,%edx
    mov    $0xb2,%ebx
    lea    0x104(%edx),%ecx
  jump_1dad4:
    mov    %ebx,%eax
    call   func_1ce70
    mov    %edx,%edi
    mov    %eax,%esi
    push   %edi
  jump_1dae0:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1daf8
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1dae0
  jump_1daf8:
    pop    %edi
    add    $0x14,%edx
    inc    %ebx
    cmp    %ecx,%edx
    jne    jump_1dad4
    movw   $0x0,0x3335(%ebp)
    movw   $0x0,0x49c3(%ebp)
    movw   $0x0,0xd88(%ebp)
    movw   $0x0,0x3067b(%ebp)
    movb   $0x1,0xdb4(%ebp)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1db34:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %ebx,%edi
    mov    $0x20,%ebx
    movswl %dx,%edx
    movw   $0x0,0x4(%eax)
    mov    %ebx,data_86a2c
    call   func_1dcc8
    mov    $0x9,%edx
    mov    %esi,%eax
    call   func_1db78
    mov    %esi,%eax
    movswl %cx,%ebx
    call   func_1e8f4
    movswl %di,%edx
    mov    %esi,%eax
    call   func_1e134
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_1db78:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x2c,%esp
    mov    %eax,%ebp
    mov    %dx,0x28(%esp)
    mov    0x26(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x9,%eax
    jle    jump_1db9a
    movw   $0x9,0x28(%esp)
  jump_1db9a:
    mov    0x26(%esp),%ebx
    movw   $0x0,jump_306f2(%ebp)
    xor    %edx,%edx
    mov    $0x168,%eax
    mov    %edx,0xc(%esp)
    mov    %edx,0x10(%esp)
    mov    %edx,0x14(%esp)
    mov    %edx,(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x8(%esp)
    mov    %eax,%edx
    sar    $0x10,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0x20(%esp)
    mov    %eax,%edx
    shl    $0x2,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    shl    $0x2,%edx
    sbb    %edx,%eax
    sar    $0x2,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    mov    %eax,0x1c(%esp)
    sub    %edx,%eax
    sar    %eax
    xor    %ecx,%ecx
    lea    0x3067e(%ebp),%ebx
    xor    %edi,%edi
    mov    %ebp,%esi
    mov    %eax,0x18(%esp)
    jmp    jump_1dcb0
  jump_1dc09:
    mov    $0x447a0000,%edx
    mov    %cl,0x3067d(%esi)
    mov    $0x43960000,%eax
    mov    %edx,0xc(%esp)
    xor    %edx,%edx
    mov    %eax,0x10(%esp)
    mov    %edx,0x14(%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idivl  0x1c(%esp)
    mov    0x18(%esp),%eax
    add    %edi,%edx
    sub    %eax,%edx
    mov    %edx,0x24(%esp)
    fildl  0x24(%esp)
    sub    $0x4,%esp
    lea    0x10(%esp),%eax
    fstps  (%esp)
    call   func_4e69c
    call   func_7369f
    mov    %eax,%edx
    movl   $0x258,0x24(%esp)
    sar    $0x1f,%edx
    idivl  0x24(%esp)
    sub    $0x12c,%edx
    mov    %edx,0x24(%esp)
    fildl  0x24(%esp)
    fadds  0x10(%esp)
    mov    0xc(%esp),%eax
    fstps  0x10(%esp)
    mov    %eax,(%ebx)
    mov    0x10(%esp),%eax
    mov    %eax,0x4(%ebx)
    add    $0xd,%ebx
    mov    0x14(%esp),%eax
    add    $0xd,%esi
    mov    %eax,-0x5(%ebx)
    inc    %ecx
    mov    jump_306f2(%ebp),%ax
    mov    0x20(%esp),%edx
    inc    %eax
    add    %edx,%edi
    mov    %ax,jump_306f2(%ebp)
  jump_1dcb0:
    mov    0x26(%esp),%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jl     jump_1dc09
    add    $0x2c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1dcc8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x828,%esp
    mov    %eax,0x80c(%esp)
    mov    %edx,%esi
    mov    $0x43dc0000,%edi
    xor    %edx,%edx
    mov    $data_80b38,%eax
    mov    %edx,0x7e8(%esp)
    mov    %edx,0x7ec(%esp)
    mov    %edx,0x7f0(%esp)
    mov    %edx,0x810(%esp)
    lea    0x7f4(%esp),%edx
    xor    %ebx,%ebx
    call   func_1bb10
    mov    %eax,0x808(%esp)
    mov    %edi,0x820(%esp)
    mov    0x808(%esp),%ebp
    jmp    jump_1dd39
  jump_1dd29:
    push   %edx
    push   $data_80b49
    push   %ebp
    call   func_73431
    add    $0xc,%esp
  jump_1dd38:
    inc    %ebx
  jump_1dd39:
    movswl %bx,%ecx
    cmp    $0x64,%ecx
    jge    jump_1dd7c
    lea    0x7f8(%esp),%edx
    mov    0x808(%esp),%eax
    call   func_72b2d
    imul   $0x14,%ecx,%edx
    mov    %esp,%eax
    mov    0x7f4(%esp),%edi
    add    %eax,%edx
    cmp    0x7f8(%esp),%edi
    jg     jump_1dd29
    push   %ecx
    push   $data_80b42
    push   %edx
    call   func_720c9
    add    $0xc,%esp
    jmp    jump_1dd38
  jump_1dd7c:
    mov    0x808(%esp),%eax
    call   func_7280e
    movl   $0x64,0x81c(%esp)
    mov    0x80c(%esp),%eax
    movswl %si,%edx
    mov    %si,0x3335(%eax)
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,0x814(%esp)
    xor    %eax,%eax
    jmp    jump_1ddd3
  jump_1ddb8:
    mov    data_863aa(,%edx,2),%edx
    mov    0x810(%esp),%ebx
    sar    $0x10,%edx
    add    %edx,%ebx
    inc    %eax
    mov    %ebx,0x810(%esp)
  jump_1ddd3:
    movswl %ax,%edx
    cmp    $0xd,%edx
    jl     jump_1ddb8
    mov    0x80c(%esp),%eax
    movw   $0x0,0x27283(%eax)
    mov    0x80c(%esp),%edx
    movw   $0x0,0x18245(%eax)
    add    $0xdb5,%eax
    movl   $0x0,(%edx)
    lea    0x18247(%edx),%ecx
    mov    %eax,0x306f4(%edx)
    mov    %ecx,0x306f8(%edx)
    xor    %edx,%edx
    mov    %dx,0x824(%esp)
    mov    0x80c(%esp),%edx
    cmpw   $0x0,0x3335(%edx)
    jle    jump_1e11a
    mov    0x81c(%esp),%edx
    mov    %eax,0x7fc(%esp)
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %esp,%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    %eax,0x818(%esp)
  jump_1de5c:
    mov    0x822(%esp),%ecx
    sar    $0x10,%ecx
    imul   $0x60,%ecx,%ebp
    add    0x7fc(%esp),%ebp
    movb   $0x0,0x14(%ebp)
    movb   $0x0,0x15(%ebp)
    movb   $0x0,0x16(%ebp)
    movb   $0x0,0x17(%ebp)
    movw   $0x0,0x44(%ebp)
    movw   $0xffff,0x6(%ebp)
    mov    0x824(%esp),%eax
    movw   $0x0,0x5a(%ebp)
    mov    %ax,0x4(%ebp)
    call   func_7369f
    mov    %eax,%edx
    mov    0x81c(%esp),%edi
    sar    $0x1f,%edx
    idiv   %edi
    imul   $0x14,%edx,%eax
    mov    %esp,%edx
    add    %eax,%edx
    lea    0x1c(%ebp),%edi
    mov    %edx,%esi
    mov    0x81c(%esp),%ebx
    push   %edi
  jump_1dec4:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1dedc
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1dec4
  jump_1dedc:
    pop    %edi
    mov    0x818(%esp),%eax
    dec    %ebx
    sub    $0x14,%eax
    mov    %edx,%edi
    mov    %eax,%esi
    mov    %eax,0x818(%esp)
    push   %edi
  jump_1def4:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_1df0c
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_1def4
  jump_1df0c:
    pop    %edi
    mov    0x814(%esp),%esi
    mov    %ebx,0x81c(%esp)
    cmp    %esi,%ecx
    jle    jump_1df75
    flds   0x820(%esp)
    fadds  data_80b4c
    fsts   0x820(%esp)
    fcomps data_80b50
    fnstsw %ax
    sahf
    jae    jump_1df49
    movl   $0x42480000,0x820(%esp)
  jump_1df49:
    mov    0x80c(%esp),%eax
    mov    0x822(%esp),%edx
    mov    0x3333(%eax),%eax
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    add    %eax,0x814(%esp)
  jump_1df75:
    movl   $0xc,0x0(%ebp)
    call   func_7369f
    mov    %eax,%edx
    mov    0x810(%esp),%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    inc    %edx
    xor    %ebx,%ebx
    mov    %edx,%esi
    xor    %edx,%edx
    jmp    jump_1df99
  jump_1df98:
    inc    %edx
  jump_1df99:
    movswl %dx,%eax
    cmp    $0xd,%eax
    jge    jump_1dfb1
    add    data_863ac(,%eax,2),%bx
    cmp    %bx,%si
    jg     jump_1df98
    mov    %eax,0x0(%ebp)
  jump_1dfb1:
    call   func_7369f
    mov    %eax,%edx
    mov    $0x3e8,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x800(%esp)
    fildl  0x800(%esp)
    fstps  0x7e8(%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x800(%esp)
    fildl  0x800(%esp)
    fstps  0x7ec(%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x800(%esp)
    lea    0x7e8(%esp),%eax
    fildl  0x800(%esp)
    fstps  0x7f0(%esp)
    call   func_4e3f0
    flds   0x7e8(%esp)
    lea    0x7d0(%esp),%eax
    flds   0x820(%esp)
    fxch   %st(1)
    fmul   %st(1),%st
    mov    %eax,0x804(%esp)
    fstps  0x7dc(%esp)
    flds   0x7ec(%esp)
    mov    0x7dc(%esp),%eax
    fmul   %st(1),%st
    mov    %eax,0x7d0(%esp)
    fstps  0x7e0(%esp)
    flds   0x7f0(%esp)
    mov    0x7e0(%esp),%eax
    fmulp  %st,%st(1)
    mov    %eax,0x7d4(%esp)
    fstps  0x7e4(%esp)
    mov    0x7e4(%esp),%eax
    mov    %eax,0x7d8(%esp)
    mov    0x7dc(%esp),%eax
    mov    %eax,0x7e8(%esp)
    mov    0x7e0(%esp),%eax
    mov    %eax,0x7ec(%esp)
    mov    0x7e4(%esp),%eax
    mov    %eax,0x7f0(%esp)
    mov    0x7dc(%esp),%eax
    mov    %eax,0x8(%ebp)
    add    $0x8,%ebp
    mov    0x7ec(%esp),%eax
    mov    %eax,0x4(%ebp)
    mov    0x824(%esp),%ecx
    mov    0x7f0(%esp),%eax
    mov    0x80c(%esp),%edx
    mov    %eax,0x8(%ebp)
    inc    %ecx
    mov    0x3335(%edx),%si
    mov    %cx,0x824(%esp)
    cmp    %si,%cx
    jl     jump_1de5c
  jump_1e11a:
    mov    0x808(%esp),%eax
    call   func_7280e
    add    $0x828,%esp
    pop    %ebp
    pop    %edi
  jump_1e12e:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1e134:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%esi
    mov    %bx,0x10(%esp)
    movl   $0xffffffff,0x306fc(%eax)
    movb   $0x0,0x30700(%eax)
    xor    %ebx,%ebx
    mov    %dx,0xd88(%eax)
    mov    %ebx,0x8(%esp)
    xor    %edx,%edx
    mov    0x3335(%eax),%bx
    mov    %dx,0x18(%esp)
    test   %bx,%bx
    jle    jump_1e1b1
    xor    %dl,%dl
  jump_1e175:
    mov    0x16(%esp),%eax
    sar    $0x10,%eax
    imul   $0x60,%eax,%eax
    mov    %dl,0xdc9(%esi,%eax,1)
    mov    %dl,0xdca(%esi,%eax,1)
    mov    %dl,0xdcb(%esi,%eax,1)
    mov    0x18(%esp),%ecx
    mov    %dl,0xdcc(%esi,%eax,1)
    inc    %ecx
    mov    0x3335(%esi),%di
    mov    %cx,0x18(%esp)
    cmp    %di,%cx
    jl     jump_1e175
  jump_1e1b1:
    xor    %eax,%eax
    mov    0x49c3(%esi),%dx
    mov    %ax,0x18(%esp)
    test   %dx,%dx
    jle    jump_1e1ec
  jump_1e1c4:
    mov    0x16(%esp),%eax
    sar    $0x10,%eax
    imul   $0x27,%eax,%eax
    mov    0x18(%esp),%ebx
    movb   $0x0,0x3357(%esi,%eax,1)
    inc    %ebx
    mov    0x49c3(%esi),%cx
    mov    %bx,0x18(%esp)
    cmp    %cx,%bx
    jl     jump_1e1c4
  jump_1e1ec:
    mov    $data_f4744,%eax
    mov    $0xffff,%ebx
    xor    %edx,%edx
    xor    %edi,%edi
    call   func_41cc0
    jmp    jump_1e218
  jump_1e201:
    mov    0x18(%esp),%edi
    xor    %ecx,%ecx
    mov    %bx,data_f6492(,%eax,2)
    inc    %edi
    mov    %cx,data_f64a0(,%eax,2)
  jump_1e218:
    mov    %di,0x18(%esp)
    mov    0x16(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x7,%eax
    jl     jump_1e201
    movl   $0x258,0xc(%esp)
    mov    0x3333(%esi),%eax
    sar    $0x10,%eax
    movw   $0x0,0x32dd3(%esi)
    cmp    $0x19,%eax
    jge    jump_1e250
    movl   $0x1c2,0xc(%esp)
  jump_1e250:
    lea    0xdb5(%esi),%ebp
  jump_1e256:
    mov    0xc(%esp),%edx
    cmp    0x32dd3(%esi),%dx
    jle    jump_1e3bc
    cmpl   $0x0,0x8(%esp)
    jbe    jump_1e2d2
    mov    0xd88(%esi),%cx
    xor    %edi,%edi
    test   %cx,%cx
    jle    jump_1e2d2
    jmp    jump_1e288
  jump_1e27e:
    inc    %edi
    cmp    0xd88(%esi),%di
    jge    jump_1e2d2
  jump_1e288:
    movswl %di,%eax
    imul   $0x1ee,%eax,%eax
    mov    0xd(%esi,%eax,1),%edx
    movb   $0x0,0x14(%edx)
    mov    0xd(%esi,%eax,1),%eax
    xor    %bl,%bl
    movb   $0x0,0x17(%eax)
    xor    %eax,%eax
    jmp    jump_1e2bd
  jump_1e2a7:
    movswl %ax,%ecx
    mov    0x2c(%edx,%ecx,4),%edx
    mov    (%edx),%ecx
    mov    %bl,0x20(%edx)
    mov    %bl,0x16(%ecx)
    mov    0x4(%edx),%edx
    inc    %eax
    mov    %bl,0x16(%edx)
  jump_1e2bd:
    movswl %di,%edx
    imul   $0x1ee,%edx,%edx
    mov    0xd(%edx,%esi,1),%edx
    cmp    0x44(%edx),%ax
    jge    jump_1e27e
    jmp    jump_1e2a7
  jump_1e2d2:
    xor    %edx,%edx
    mov    0xd88(%esi),%bx
    mov    %dx,0x14(%esp)
    test   %bx,%bx
    jg     jump_1e304
    jmp    jump_1e3a7
  jump_1e2ea:
    mov    0x14(%esp),%eax
    inc    %eax
    mov    0xd88(%esi),%dx
    mov    %ax,0x14(%esp)
    cmp    %dx,%ax
    jge    jump_1e3a7
  jump_1e304:
    mov    0x3333(%esi),%ebx
    call   func_7369f
    mov    %eax,%edx
    sar    $0x10,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    imul   $0x60,%edx,%edx
    mov    0x12(%esp),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    add    %esi,%eax
    add    %ebp,%edx
    mov    %edx,0xd(%eax)
    mov    0x14(%edx),%bl
    test   %bl,%bl
    je     jump_1e33e
    decw   0x14(%esp)
    jmp    jump_1e2ea
  jump_1e33e:
    mov    %bl,%bh
    or     $0x80,%bh
    mov    0x14(%esp),%cl
    mov    %bh,0x14(%edx)
    mov    $0x1,%bl
    mov    0xd(%eax),%edx
    shl    %cl,%bl
    or     %bl,0x14(%edx)
    mov    0x14(%esp),%dl
    mov    %dl,0x6(%eax)
    mov    0xd(%eax),%eax
    mov    0x17(%eax),%ch
    or     %bl,%ch
    xor    %edx,%edx
    mov    %ch,0x17(%eax)
    jmp    jump_1e38a
  jump_1e36a:
    movswl %dx,%ecx
    mov    0x2c(%eax,%ecx,4),%eax
    mov    0x20(%eax),%bh
    or     %bl,%bh
    mov    (%eax),%ecx
    mov    %bh,0x20(%eax)
    or     %bl,0x16(%ecx)
    mov    0x4(%eax),%eax
    mov    0x16(%eax),%cl
    or     %bl,%cl
    inc    %edx
    mov    %cl,0x16(%eax)
  jump_1e38a:
    mov    0x12(%esp),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    mov    0xd(%esi,%eax,1),%eax
    cmp    0x44(%eax),%dx
    jge    jump_1e2ea
    jmp    jump_1e36a
  jump_1e3a7:
    mov    0x8(%esp),%edi
    mov    %esi,%eax
    inc    %edi
    call   func_217ac
    mov    %edi,0x8(%esp)
    jmp    jump_1e256
  jump_1e3bc:
    mov    0xd88(%esi),%bx
    xor    %ecx,%ecx
    test   %bx,%bx
    jle    jump_1e565
    lea    0x6(%esi),%eax
    mov    %eax,(%esp)
    xor    %ebp,%ebp
  jump_1e3d6:
    movswl %cx,%eax
    test   %eax,%eax
    jne    jump_1e40a
    mov    0x10(%esp),%bl
  jump_1e3e1:
    movswl %cx,%edx
    imul   $0x1ee,%edx,%eax
    mov    (%esp),%edi
    and    $0xff,%ebx
    add    %edi,%eax
    inc    %ecx
    call   func_39b0c
    cmp    0xd88(%esi),%cx
    jge    jump_1e565
    jmp    jump_1e3d6
  jump_1e40a:
    call   func_7369f
    mov    %eax,%edx
    mov    $0x15,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    xor    %edi,%edi
    mov    %dl,%bl
    xor    %eax,%eax
    test   %cx,%cx
    jg     jump_1e42e
    jmp    jump_1e442
  jump_1e428:
    inc    %eax
    cmp    %cx,%ax
    jge    jump_1e442
  jump_1e42e:
    movswl %ax,%edx
    imul   $0x1ee,%edx,%edx
    cmp    0x7(%edx,%esi,1),%bl
    jne    jump_1e428
    mov    $0xffffffff,%edi
  jump_1e442:
    test   %edi,%edi
    jne    jump_1e40a
    jmp    jump_1e3e1
  jump_1e448:
    mov    0xd88(%esi),%di
    xor    %edx,%edx
    test   %di,%di
    jle    jump_1e58f
    mov    $0xffffffec,%ebx
    mov    $0xffffffe2,%ecx
  jump_1e464:
    movswl %dx,%eax
    imul   $0x1ee,%eax,%eax
    add    %cx,0x1cf(%esi,%eax,1)
    add    %bx,0x1d1(%esi,%eax,1)
    add    %bx,0x1d3(%esi,%eax,1)
    add    %bx,0x1d5(%esi,%eax,1)
    add    %cx,0x1d7(%esi,%eax,1)
    add    %bx,0x1d9(%esi,%eax,1)
    addw   $0x1e,0x1db(%esi,%eax,1)
    inc    %edx
    cmp    0xd88(%esi),%dx
    jge    jump_1e58f
    jmp    jump_1e464
  jump_1e4b6:
    mov    0xd88(%esi),%cx
    xor    %edx,%edx
    test   %cx,%cx
    jle    jump_1e58f
    mov    $0x14,%ebx
  jump_1e4cd:
    movswl %dx,%eax
    imul   $0x1ee,%eax,%eax
    mov    0x1cf(%esi,%eax,1),%cx
    add    %ebx,%ecx
    mov    0x1d1(%esi,%eax,1),%di
    mov    %cx,0x1cf(%esi,%eax,1)
    add    %ebx,%edi
    mov    0x1d3(%esi,%eax,1),%cx
    mov    %di,0x1d1(%esi,%eax,1)
    add    %ebx,%ecx
    mov    0x1d5(%esi,%eax,1),%di
    mov    %cx,0x1d3(%esi,%eax,1)
    add    %ebx,%edi
    mov    0x1d7(%esi,%eax,1),%cx
    mov    %di,0x1d5(%esi,%eax,1)
    add    %ebx,%ecx
    mov    0x1d9(%esi,%eax,1),%di
    mov    %cx,0x1d7(%esi,%eax,1)
    add    $0x1e,%edi
    mov    0x1db(%esi,%eax,1),%cx
    mov    %di,0x1d9(%esi,%eax,1)
    sub    $0x14,%ecx
    mov    %cx,0x1db(%esi,%eax,1)
    inc    %edx
    cmp    0xd88(%esi),%dx
    jge    jump_1e58f
    jmp    jump_1e4cd
  jump_1e565:
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0x8(%esi),%dl
    call   func_1e73c
    mov    0xdb4(%esi),%al
    cmp    $0x1,%al
    jb     jump_1e587
    jbe    jump_1e58f
    cmp    $0x2,%al
    je     jump_1e4b6
    jmp    jump_1e58f
  jump_1e587:
    test   %al,%al
    je     jump_1e448
  jump_1e58f:
    mov    0xd(%esi),%eax
    xor    %edx,%edx
    movw   $0x0,0x3067b(%esi)
    mov    %dx,0x18(%esp)
    mov    %eax,0x306f4(%esi)
    xor    %edx,%edx
    jmp    jump_1e5d4
  jump_1e5ac:
    imul   $0x162,%eax,%eax
    mov    0x18(%esp),%edi
    movw   $0xffff,0x272db(%esi,%eax,1)
    inc    %edi
    mov    %dl,0x272dd(%esi,%eax,1)
    mov    %di,0x18(%esp)
    mov    %edx,0x272de(%esi,%eax,1)
  jump_1e5d4:
    mov    0x16(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x6b,%eax
    jl     jump_1e5ac
    xor    %ebx,%ebx
    mov    0xd88(%esi),%cx
    mov    %bx,0x18(%esp)
    test   %cx,%cx
    jle    jump_20979
    jmp    jump_1e613
  jump_1e5f9:
    mov    0x18(%esp),%eax
    inc    %eax
    mov    0xd88(%esi),%dx
    mov    %ax,0x18(%esp)
    cmp    %dx,%ax
    jge    jump_20979
  jump_1e613:
    mov    0x16(%esp),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%edx
    cmpb   $0x3,0x1a3(%edx,%esi,1)
    jne    jump_1e667
    xor    %edx,%edx
    mov    data_f458e,%dl
    cmp    %edx,%eax
    jne    jump_1e667
    mov    0x18(%esp),%cl
    xor    %edx,%eax
    mov    $0x1,%dl
    shl    %cl,%dl
    mov    %dl,%cl
    mov    %esi,%edx
    jmp    jump_1e658
  jump_1e646:
    mov    0xd(%edx),%ebx
    mov    0x17(%ebx),%ch
    add    $0x1ee,%edx
    or     %cl,%ch
    inc    %eax
    mov    %ch,0x17(%ebx)
  jump_1e658:
    mov    0xd86(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1e5f9
    jmp    jump_1e646
  jump_1e667:
    mov    0x16(%esp),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    add    %esi,%eax
    mov    0x1a3(%eax),%ch
    cmp    $0xf,%ch
    jne    jump_1e6b6
    mov    0x18(%esp),%cl
    mov    $0x1,%dl
    shl    %cl,%dl
    xor    %eax,%eax
    mov    %dl,%cl
    mov    %esi,%edx
    jmp    jump_1e6a3
  jump_1e691:
    mov    0x3357(%edx),%bl
    add    $0x27,%edx
    or     %cl,%bl
    inc    %eax
    mov    %bl,0x3330(%edx)
  jump_1e6a3:
    mov    0x49c1(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1e5f9
    jmp    jump_1e691
  jump_1e6b6:
    cmp    $0x4,%ch
    jne    jump_1e5f9
    xor    %ecx,%ecx
    mov    %esi,%eax
    mov    %ecx,0x4(%esp)
    jmp    jump_1e6da
  jump_1e6c9:
    mov    0x4(%esp),%edx
    add    $0x1ee,%eax
    add    $0x2,%edx
    inc    %ecx
    mov    %edx,0x4(%esp)
  jump_1e6da:
    mov    0xd86(%esi),%edx
    sar    $0x10,%edx
    cmp    %edx,%ecx
    jge    jump_1e5f9
    mov    0x16(%esp),%edx
    sar    $0x10,%edx
    cmp    %ecx,%edx
    je     jump_1e6c9
    imul   $0x1ee,%edx,%ebx
    add    %esi,%ebx
    mov    0x4(%esp),%ebp
    mov    0x1db(%ebx),%di
    mov    %di,0x1b8(%ebx,%ebp,1)
    movb   $0x1,0x1c6(%ecx,%ebx,1)
    lea    0x0(,%edx,2),%ebx
    lea    (%eax,%ebx,1),%edi
    mov    0x1db(%eax),%bx
    mov    %bx,0x1b8(%edi)
    movb   $0x1,0x1c6(%edx,%eax,1)
    jmp    jump_1e6c9


/*----------------------------------------------------------------*/
func_1e73c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %dl,0x8(%eax)
    mov    $0x1,%ecx
    mov    0xd88(%eax),%dx
    mov    $0xffffffff,%edi
    cmp    %cx,%dx
    jle    jump_1d74b
    jmp    jump_1e78a
  jump_1e764:
    movswl %cx,%edx
    imul   $0x1ee,%edx,%edx
    mov    (%esp),%al
    mov    %al,0x8(%edx,%esi,1)
    inc    %ecx
    mov    0xd88(%esi),%bx
    mov    $0xffffffff,%edi
    cmp    %bx,%cx
    jge    jump_1d74b
  jump_1e78a:
    test   %edi,%edi
    je     jump_1e764
    call   func_7369f
    mov    %eax,%edx
    mov    $0x7,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    xor    %edi,%edi
    mov    %dx,(%esp)
    xor    %eax,%eax
    test   %cx,%cx
    jg     jump_1e7b4
    jmp    jump_1e78a
  jump_1e7ae:
    inc    %eax
    cmp    %cx,%ax
    jge    jump_1e78a
  jump_1e7b4:
    movswl %ax,%edx
    imul   $0x1ee,%edx,%edx
    xor    %ebx,%ebx
    mov    0x8(%edx,%esi,1),%bl
    mov    -0x2(%esp),%edx
    sar    $0x10,%edx
    cmp    %edx,%ebx
    jne    jump_1e7ae
    mov    $0xffffffff,%edi
    jmp    jump_1e78a


/*----------------------------------------------------------------*/
func_1e7d8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%ebp
    mov    0xd88(%eax),%dx
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_1e8e8
    mov    $0x15,%edx
    mov    $0xe,%edi
    mov    $0x7,%ebx
    mov    %edx,0x1c(%esp)
    mov    %ebx,0x18(%esp)
  jump_1e80c:
    movswl %cx,%edx
    imul   $0x1ee,%edx,%edx
    movzbw 0x7(%edx,%ebp,1),%si
    mov    0x7(%edx,%ebp,1),%dl
    and    $0xff,%edx
    push   %edx
    push   $data_80b54
    lea    0x8(%esp),%edx
    push   %edx
    lea    0xc(%esp),%ebx
    call   func_720c9
    mov    $data_11f10c,%eax
    xor    %edx,%edx
    add    $0xc,%esp
    mov    %cx,%dx
    movswl %si,%esi
    call   func_1aeb0
    push   %esi
    push   $data_80b68
    lea    0x8(%esp),%edx
    push   %edx
    lea    0xc(%esp),%ebx
    call   func_720c9
    add    $0xc,%esp
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    0x18(%esp),%dx
    call   func_1aeb0
    push   %esi
    push   $data_80b7c
    lea    0x8(%esp),%edx
    push   %edx
    lea    0xc(%esp),%ebx
    call   func_720c9
    add    $0xc,%esp
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    %di,%dx
    call   func_1aeb0
    push   %esi
    push   $data_80b90
    lea    0x8(%esp),%edx
    inc    %ecx
    push   %edx
    lea    0xc(%esp),%ebx
    inc    %edi
    call   func_720c9
    add    $0xc,%esp
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    0x1c(%esp),%dx
    mov    0x18(%esp),%esi
    call   func_1aeb0
    mov    0x1c(%esp),%ebx
    inc    %esi
    mov    0xd88(%ebp),%ax
    inc    %ebx
    mov    %esi,0x18(%esp)
    mov    %ebx,0x1c(%esp)
    cmp    %ax,%cx
    jl     jump_1e80c
  jump_1e8e8:
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
  jump_1e8ee:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1e8f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    mov    $0x168c,%ebx
    add    $0x3337,%eax
    xor    %edx,%edx
    call   func_72280
    mov    $0xffffffff,%ebx
    movw   $0x0,0x49c3(%ecx)
    call   func_1f250
    movw   $0x2,0x32dd1(%ecx)
  jump_1e926:
    mov    0x32dcf(%ecx),%edx
    sar    $0x10,%edx
    cmp    $0x1,%edx
    jle    jump_1e8ee
    mov    0x3335(%ecx),%dx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_1e95a
  jump_1e942:
    movswl %ax,%edx
    imul   $0x60,%edx,%edx
    mov    %bx,0xdbb(%ecx,%edx,1)
    inc    %eax
    cmp    0x3335(%ecx),%ax
    jl     jump_1e942
  jump_1e95a:
    mov    %ecx,%eax
    call   func_1f468
    mov    %ecx,%eax
    call   func_1f8bc
    jmp    jump_1e926


/*----------------------------------------------------------------*/
func_1e96c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x474,%esp
    mov    %eax,%esi
    mov    0x32dcf(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    je     jump_1e999
    mov    $0x424,%ebx
    mov    $data_80ba4,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1e999:
    mov    0x3333(%esi),%edi
    sar    $0x10,%edi
    lea    -0x1(%edi),%eax
    imul   %eax,%edi
    mov    $data_c8c44,%edx
    mov    %edx,0x450(%esp)
    test   %edx,%edx
    jne    jump_1e9c9
    mov    $0x42c,%ebx
    mov    $data_80bb2,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1e9c9:
    mov    0x450(%esp),%edx
    xor    %ecx,%ecx
    jmp    jump_1e9d5
  jump_1e9d4:
    inc    %ecx
  jump_1e9d5:
    mov    0x3333(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jge    jump_1ea00
    lea    0x1(%ecx),%eax
    jmp    jump_1e9f1
  jump_1e9e7:
    add    $0x2,%edx
    mov    %al,-0x1(%edx)
    mov    %cl,-0x2(%edx)
    inc    %eax
  jump_1e9f1:
    mov    0x3333(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1e9d4
    jmp    jump_1e9e7
  jump_1ea00:
    sub    0x450(%esp),%edx
    cmp    %edi,%edx
    je     jump_1ea1c
    mov    $0x43b,%ebx
    mov    $data_80bc0,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1ea1c:
    mov    $0x2710,%ebx
    mov    $0xff,%edx
    lea    0x32ddb(%esi),%eax
    sar    %edi
    call   func_72280
    xor    %ecx,%ecx
    mov    %edi,0x45c(%esp)
    mov    %esi,%eax
    xor    %bl,%bl
    jmp    jump_1ea54
  jump_1ea42:
    inc    %ecx
    mov    %bl,0x32dda(%ecx,%eax,1)
    add    $0x64,%eax
    mov    %bl,0x3e7(%esp,%ecx,1)
  jump_1ea54:
    mov    0x3333(%esi),%edx
    sar    $0x10,%edx
    cmp    %edx,%ecx
    jl     jump_1ea42
    lea    0x3337(%esi),%edi
    xor    %ecx,%ecx
    jmp    jump_1ea6f
  jump_1ea6b:
    inc    %ecx
    add    $0x27,%edi
  jump_1ea6f:
    mov    0x49c1(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jge    jump_1eb3e
    mov    0x4(%edi),%eax
    mov    (%edi),%ebx
    mov    0x4(%eax),%al
    mov    0x4(%ebx),%bl
    mov    %al,0x470(%esp)
    xor    %eax,%eax
    mov    %bl,%al
    imul   $0x64,%eax,%edx
    lea    (%esi,%edx,1),%ebp
    xor    %edx,%edx
    mov    0x470(%esp),%dl
    add    %edx,%ebp
    movb   $0x1,0x32ddb(%ebp)
    imul   $0x64,%edx,%ebp
    add    %esi,%ebp
    add    %eax,%ebp
    movb   $0x1,0x32ddb(%ebp)
    mov    0x3e8(%esp,%eax,1),%bh
    movzbl %bh,%ebp
    mov    %ebp,0x454(%esp)
    imul   $0xa,%eax,%ebp
    inc    %bh
    mov    %bh,0x3e8(%esp,%eax,1)
    add    0x454(%esp),%ebp
    mov    0x3e8(%esp,%edx,1),%bh
    mov    %dl,(%esp,%ebp,1)
    movzbl %bh,%ebp
    mov    %ebp,0x454(%esp)
    imul   $0xa,%edx,%ebp
    inc    %bh
    mov    %bh,0x3e8(%esp,%edx,1)
    add    0x454(%esp),%ebp
    mov    0x3e8(%esp,%eax,1),%al
    mov    %bl,(%esp,%ebp,1)
    and    $0xff,%eax
    cmp    $0xa,%eax
    jge    jump_1eb28
    xor    %eax,%eax
    mov    %bh,%al
    cmp    $0xa,%eax
    jl     jump_1ea6b
  jump_1eb28:
    mov    $0x45d,%ebx
    mov    $data_80bce,%edx
    xor    %eax,%eax
    call   func_25878
    jmp    jump_1ea6b
  jump_1eb3e:
    mov    0x45c(%esp),%edx
    mov    0x450(%esp),%eax
    add    %edx,%edx
    add    %eax,%edx
    sub    $0x2,%edx
    cmp    %eax,%edx
    jb     jump_1eba4
  jump_1eb57:
    mov    (%eax),%bl
    mov    0x1(%eax),%cl
    and    $0xff,%ebx
    imul   $0x64,%ebx,%ebx
    add    %esi,%ebx
    and    $0xff,%ecx
    mov    0x32ddb(%ecx,%ebx,1),%bl
    and    $0xff,%ebx
    cmp    $0x1,%ebx
    jne    jump_1eb9d
    mov    (%edx),%bl
    mov    %bl,(%eax)
    mov    0x1(%edx),%bl
    mov    %bl,0x1(%eax)
    mov    0x45c(%esp),%ebx
    dec    %ebx
    sub    $0x2,%edx
    mov    %ebx,0x45c(%esp)
    jmp    jump_1eba0
  jump_1eb9d:
    add    $0x2,%eax
  jump_1eba0:
    cmp    %edx,%eax
    jbe    jump_1eb57
  jump_1eba4:
    mov    $0x2,%ebp
    mov    0x45c(%esp),%eax
    mov    %ebp,0x44c(%esp)
    test   %eax,%eax
    jle    jump_1ed2a
    movl   $0x1,0x458(%esp)
  jump_1ebca:
    mov    0x3333(%esi),%eax
    mov    0x44c(%esp),%edx
    sar    $0x10,%eax
    cmp    %edx,%eax
    jg     jump_1ebef
    mov    $0x47a,%ebx
    mov    $data_80bdc,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1ebef:
    mov    0x45c(%esp),%eax
    mov    0x450(%esp),%ebp
    add    %eax,%eax
    add    %ebp,%eax
    sub    $0x2,%eax
    mov    %eax,0x460(%esp)
    cmp    %eax,%ebp
    ja     jump_1ecfd
    mov    0x458(%esp),%eax
    mov    %eax,0x464(%esp)
  jump_1ec21:
    mov    0x0(%ebp),%al
    mov    %al,0x46c(%esp)
    mov    0x1(%ebp),%al
    movzbl 0x46c(%esp),%edi
    mov    %al,0x468(%esp)
    movzbl 0x3e8(%esp,%edi,1),%edi
    xor    %eax,%eax
    jmp    jump_1ec4a
  jump_1ec49:
    inc    %eax
  jump_1ec4a:
    movswl %ax,%edx
    cmp    %edi,%edx
    jge    jump_1eceb
    xor    %ebx,%ebx
    mov    0x46c(%esp),%bl
    imul   $0xa,%ebx,%ecx
    add    %edx,%ecx
    mov    (%esp,%ecx,1),%cl
    and    $0xff,%ecx
    imul   $0x64,%ecx,%ecx
    xor    %edx,%edx
    mov    0x468(%esp),%dl
    add    %esi,%ecx
    mov    0x32ddb(%ecx,%edx,1),%cl
    and    $0xff,%ecx
    cmp    0x464(%esp),%ecx
    jne    jump_1ec49
    imul   $0x64,%ebx,%eax
    add    %esi,%eax
    mov    0x44c(%esp),%cl
    mov    %cl,0x32ddb(%edx,%eax,1)
    imul   $0x64,%edx,%edx
    add    %esi,%edx
    mov    0x460(%esp),%eax
    mov    %cl,0x32ddb(%edx,%ebx,1)
    mov    (%eax),%al
    mov    %al,0x0(%ebp)
    mov    0x460(%esp),%eax
    sub    $0x2,%ebp
    mov    0x1(%eax),%al
    mov    0x45c(%esp),%edx
    mov    %al,0x3(%ebp)
    mov    0x460(%esp),%eax
    dec    %edx
    sub    $0x2,%eax
    mov    %edx,0x45c(%esp)
    mov    %eax,0x460(%esp)
  jump_1eceb:
    mov    0x460(%esp),%edi
    add    $0x2,%ebp
    cmp    %edi,%ebp
    jbe    jump_1ec21
  jump_1ecfd:
    mov    0x458(%esp),%ecx
    mov    0x44c(%esp),%edi
    mov    0x45c(%esp),%ebp
    inc    %ecx
    inc    %edi
    mov    %ecx,0x458(%esp)
    mov    %edi,0x44c(%esp)
    test   %ebp,%ebp
    jg     jump_1ebca
  jump_1ed2a:
    add    $0x474,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1ed38:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x118,%esp
    mov    %eax,0x110(%esp)
    add    $0xdb5,%eax
    mov    %eax,0xf0(%esp)
    mov    0x110(%esp),%eax
    mov    0x110(%esp),%ebp
    add    $0x49c5,%eax
    xor    %edx,%edx
    mov    %eax,0xd8(%esp)
    mov    0xf0(%esp),%eax
    add    $0x18247,%ebp
    add    $0x1c,%eax
    mov    %edx,0xec(%esp)
    mov    %eax,0xd4(%esp)
    jmp    jump_1f1d9
  jump_1ed96:
    lea    0x1(%ebx),%esi
    add    $0x1ee,%eax
    mov    %esi,0x114(%esp)
  jump_1eda5:
    mov    0x110(%esp),%edx
    mov    0xd86(%edx),%edx
    mov    0x114(%esp),%ebx
    sar    $0x10,%edx
    cmp    %ebx,%edx
    jle    jump_1edcc
    cmp    0xd(%eax),%ecx
    jne    jump_1ed96
    mov    %ebx,0x108(%esp)
  jump_1edcc:
    cmpl   $0x0,0x108(%esp)
    jl     jump_1edeb
    cmpl   $0x0,0xf4(%esp)
    jne    jump_1edeb
    movl   $0x1,0xf4(%esp)
  jump_1edeb:
    xor    %ebx,%ebx
    mov    0x108(%esp),%ecx
    mov    %ebx,0xf8(%esp)
    test   %ecx,%ecx
    jl     jump_1ee19
    call   func_7369f
    mov    %eax,%edx
    mov    0xf4(%esp),%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %edx,0xf8(%esp)
  jump_1ee19:
    mov    0xf0(%esp),%edx
    mov    0xf4(%esp),%eax
    xor    %edi,%edi
    mov    %ax,0x5a(%edx)
    mov    %edi,0xc0(%esp)
    mov    %edi,0xc4(%esp)
    mov    %edi,0xc8(%esp)
    mov    (%edx),%eax
    filds  data_86392(,%eax,2)
    mov    $0x168,%eax
    mov    %eax,%edx
    mov    0xf4(%esp),%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %edi,0x100(%esp)
    mov    %edi,0x114(%esp)
    fstps  0xe8(%esp)
    mov    %eax,0xe0(%esp)
    test   %ebx,%ebx
    jle    jump_1f172
    mov    0xd4(%esp),%eax
    mov    0x108(%esp),%ecx
    mov    %eax,0xdc(%esp)
    imul   $0x1ee,%ecx,%eax
    mov    0x110(%esp),%edx
    add    %eax,%edx
    mov    0xf0(%esp),%eax
    mov    %edi,0x104(%esp)
    mov    %eax,0xfc(%esp)
    lea    0x24(%ebp),%eax
    mov    %edx,0xe4(%esp)
    mov    %eax,0x10c(%esp)
  jump_1eecc:
    mov    0xfc(%esp),%eax
    mov    %ebp,0x46(%eax)
    call   func_7369f
    mov    %eax,%edx
    mov    $0x5,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    call   func_7369f
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    $0xb,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    cmpl   $0x0,0x108(%esp)
    jl     jump_1ef45
    mov    0xf8(%esp),%eax
    cmp    0x114(%esp),%eax
    jne    jump_1ef45
    mov    $0x15,%ecx
    mov    %esp,%edi
    mov    $data_863e0,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    $0x15,%ecx
    lea    0x54(%esp),%edi
    mov    $data_86434,%esi
    mov    0xe4(%esp),%eax
    xor    %edx,%edx
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x7(%eax),%dl
    mov    (%esp,%edx,4),%ebx
    mov    0x54(%esp,%edx,4),%edx
  jump_1ef45:
    movw   $0x0,0x1a(%ebp)
    movl   $0x0,0x10(%ebp)
    mov    0xec(%esp),%eax
    movl   $0x0,0x5a(%ebp)
    mov    %ax,0xc(%ebp)
    mov    0x114(%esp),%eax
    mov    0x110(%esp),%ecx
    mov    %ax,0xe(%ebp)
    mov    0xd8(%esp),%esi
    mov    0x18243(%ecx),%ecx
    xor    %eax,%eax
    sar    $0x10,%ecx
    mov    %dx,%ax
    xor    %edx,%edx
    shl    $0x2,%ecx
    mov    %bx,%dx
    add    %esi,%ecx
    mov    %eax,%ebx
    mov    %ebp,%eax
    call   func_331d0
    mov    0x110(%esp),%edx
    add    %ax,0x18245(%edx)
    mov    0x18243(%edx),%eax
    sar    $0x10,%eax
    cmp    $0x4e20,%eax
    jle    jump_1efcd
    mov    $0x4e5,%ebx
    mov    $data_80bea,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1efcd:
    mov    0xdc(%esp),%edi
    push   %edi
    push   $data_80bf8
    mov    0x114(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    mov    0x114(%esp),%edx
    mov    0x10c(%esp),%eax
    inc    %edx
    call   func_31540
    mov    0x104(%esp),%eax
    filds  data_86388(%eax)
    fadds  0xe8(%esp)
    fmuls  data_80c0a
    lea    0xb4(%esp),%eax
    fmuls  data_80c0e
    mov    %eax,0xd0(%esp)
    fstps  0xcc(%esp)
    fldz
    mov    0xcc(%esp),%eax
    fmuls  0xcc(%esp)
    mov    %eax,0xa8(%esp)
    fstps  0xac(%esp)
    mov    0xac(%esp),%eax
    mov    %eax,0xb0(%esp)
    mov    0xcc(%esp),%eax
    mov    %eax,0xb4(%esp)
    mov    0xac(%esp),%eax
    mov    %eax,0xb8(%esp)
    mov    %eax,0xbc(%esp)
    mov    0xcc(%esp),%eax
    mov    %eax,0xc0(%esp)
    mov    0xac(%esp),%eax
    fildl  0x100(%esp)
    mov    %eax,0xc4(%esp)
    mov    %eax,0xc8(%esp)
    sub    $0x4,%esp
    lea    0xc4(%esp),%eax
    fstps  (%esp)
    lea    0xc4(%esp),%edx
    call   func_4e69c
    mov    %ebp,%eax
    call   func_34ed4
    cmpl   $0x0,0x108(%esp)
    jl     jump_1f107
    mov    0xf8(%esp),%eax
    cmp    0x114(%esp),%eax
    jne    jump_1f107
    mov    0x108(%esp),%al
    mov    $0xffffffff,%ebx
    mov    $0x5,%edx
    mov    %al,0x57(%ebp)
    mov    %ebp,%eax
    movw   $0x2,0x42(%ebp)
    call   func_33c68
  jump_1f107:
    mov    0xfc(%esp),%eax
    mov    0x104(%esp),%edx
    mov    0x114(%esp),%ebx
    mov    0x100(%esp),%ecx
    mov    0x10c(%esp),%esi
    mov    0xf4(%esp),%edi
    add    $0x7b,%ebp
    add    $0x4,%eax
    add    $0x2,%edx
    inc    %ebx
    add    $0x7b,%esi
    mov    %eax,0xfc(%esp)
    mov    %edx,0x104(%esp)
    mov    0xe0(%esp),%eax
    mov    %ebx,0x114(%esp)
    add    %eax,%ecx
    mov    %esi,0x10c(%esp)
    mov    %ecx,0x100(%esp)
    cmp    %edi,%ebx
    jl     jump_1eecc
  jump_1f172:
    mov    0x110(%esp),%edx
    mov    0xf4(%esp),%eax
    add    %ax,0x27283(%edx)
    mov    0x27281(%edx),%eax
    sar    $0x10,%eax
    cmp    $0x1f4,%eax
    jl     jump_1f1a8
    mov    $0x501,%ebx
    mov    $data_80bfc,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1f1a8:
    mov    0xec(%esp),%eax
    mov    0xd4(%esp),%edx
    mov    0xf0(%esp),%ebx
    inc    %eax
    add    $0x60,%edx
    add    $0x60,%ebx
    mov    %eax,0xec(%esp)
    mov    %edx,0xd4(%esp)
    mov    %ebx,0xf0(%esp)
  jump_1f1d9:
    mov    0x110(%esp),%eax
    mov    0x3333(%eax),%eax
    mov    0xec(%esp),%ebx
    sar    $0x10,%eax
    cmp    %ebx,%eax
    jle    jump_1f240
    call   func_7369f
    mov    %eax,%edx
    mov    $0x5,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    inc    %edx
    mov    %edx,0xf4(%esp)
    cmp    %ebx,%edx
    jle    jump_1f218
    mov    %ebx,0xf4(%esp)
  jump_1f218:
    mov    $0xffffffff,%edi
    mov    0xf0(%esp),%ecx
    xor    %eax,%eax
    mov    %edi,0x108(%esp)
    mov    %eax,0x114(%esp)
    mov    0x110(%esp),%eax
    jmp    jump_1eda5
  jump_1f240:
    add    $0x118,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1f250:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3c,%esp
    mov    $data_92e10,%ecx
    mov    $0x2710,%ebx
    xor    %edx,%edx
    lea    0x32ddb(%ecx),%eax
    call   func_72280
    mov    data_96145,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_1f29c
  jump_1f27e:
    movswl %ax,%ebx
    imul   $0x64,%ebx,%edx
    add    $data_92e10,%edx
    movb   $0x1,0x32ddb(%edx,%ebx,1)
    inc    %eax
    cmp    0x3335(%ecx),%ax
    jl     jump_1f27e
  jump_1f29c:
    xor    %edx,%edx
    xor    %esi,%esi
    mov    %edx,(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x8(%esp)
    xor    %edx,%esi
    mov    0x3335(%ecx),%di
    mov    %si,0x34(%esp)
    test   %di,%di
    jle    jump_1f45c
    lea    0xdb5(%ecx),%eax
    mov    %eax,0x2c(%esp)
  jump_1f2cc:
    mov    0x32(%esp),%eax
    sar    $0x10,%eax
    imul   $0x60,%eax,%eax
    mov    0x2c(%esp),%edx
    add    %eax,%edx
    mov    (%edx),%eax
    mov    %edx,0x28(%esp)
    mov    0x44(%edx),%dx
    cmp    data_863c6(,%eax,2),%dx
    je     jump_1f31a
    mov    $0x1388,%esi
    mov    $0xffffffff,%edi
    mov    0x28(%esp),%ebx
    mov    0x3335(%ecx),%ax
    xor    %edx,%edx
    mov    %di,0x38(%esp)
    add    $0x8,%ebx
    test   %ax,%ax
    jle    jump_1f41e
    jmp    jump_1f344
  jump_1f31a:
    mov    0x34(%esp),%eax
    inc    %eax
    mov    0x3335(%ecx),%dx
    mov    %ax,0x34(%esp)
    cmp    %dx,%ax
    jge    jump_1f45c
    jmp    jump_1f2cc
  jump_1f336:
    inc    %edx
    cmp    0x3335(%ecx),%dx
    jge    jump_1f41e
  jump_1f344:
    mov    0x32(%esp),%eax
    sar    $0x10,%eax
    imul   $0x64,%eax,%eax
    lea    (%ecx,%eax,1),%ebp
    movswl %dx,%eax
    cmpb   $0x0,0x32ddb(%eax,%ebp,1)
    jne    jump_1f336
    imul   $0x60,%eax,%eax
    add    0x2c(%esp),%eax
    mov    0x44(%eax),%di
    mov    (%eax),%ebp
    cmp    data_863c6(,%ebp,2),%di
    je     jump_1f336
    lea    0xc(%esp),%ebp
    mov    %ebp,0x24(%esp)
    xor    %ebp,%ebp
    mov    %ebp,0x18(%esp)
    mov    %ebp,0x1c(%esp)
    mov    %ebp,0x20(%esp)
    flds   (%ebx)
    fsubs  0x8(%eax)
    fstps  0x18(%esp)
    flds   0x4(%ebx)
    fsubs  0xc(%eax)
    fstps  0x1c(%esp)
    flds   0x8(%ebx)
    fsubs  0x10(%eax)
    add    $0x8,%eax
    fstps  0x20(%esp)
    mov    0x18(%esp),%eax
    flds   0x1c(%esp)
    fmul   %st(0),%st
    mov    %eax,0xc(%esp)
    mov    0x1c(%esp),%eax
    flds   0x18(%esp)
    fmul   %st(0),%st
    mov    %eax,0x10(%esp)
    mov    0x20(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x14(%esp)
    flds   0x20(%esp)
    mov    0x18(%esp),%eax
    fmuls  0x20(%esp)
    mov    %eax,(%esp)
    mov    0x1c(%esp),%eax
    mov    %eax,0x4(%esp)
    mov    0x20(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x8(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    call   func_72258
    fistpl 0x30(%esp)
    mov    0x30(%esp),%eax
    cmp    %eax,%esi
    jle    jump_1f336
    mov    %eax,%esi
    mov    %dx,0x38(%esp)
    jmp    jump_1f336
  jump_1f41e:
    mov    0x36(%esp),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_1f31a
    imul   $0x60,%eax,%eax
    mov    0x2c(%esp),%edx
    add    %eax,%edx
    mov    0x28(%esp),%eax
    call   func_1cf28
    test   %eax,%eax
    jne    jump_1f31a
    mov    $0x53a,%ebx
    mov    $data_80c12,%edx
    call   func_25878
    jmp    jump_1f31a
  jump_1f45c:
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1f468:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x40,%esp
    mov    %eax,%edi
    add    $0x30701,%eax
    mov    $0x26d0,%ebx
    xor    %edx,%edx
    movw   $0x0,0x26d0(%eax)
    call   func_72280
    mov    0x3335(%edi),%dx
    xor    %ebx,%ebx
    test   %dx,%dx
    jle    jump_1f4d1
    lea    0xdb5(%edi),%ecx
  jump_1f4a1:
    movswl %bx,%eax
    imul   $0x60,%eax,%eax
    mov    0xdb9(%edi,%eax,1),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    jne    jump_1f4c7
    lea    (%ecx,%eax,1),%edx
    mov    %edi,%eax
    call   func_1f64c
    incw   0x32dd1(%edi)
  jump_1f4c7:
    inc    %ebx
    cmp    0x3335(%edi),%bx
    jl     jump_1f4a1
  jump_1f4d1:
    movw   $0x0,0x32dd5(%edi)
    xor    %eax,%eax
    mov    0x32dd1(%edi),%dx
    mov    %ax,0x3c(%esp)
    test   %dx,%dx
    jle    jump_1f61f
    lea    0x30701(%edi),%ebp
  jump_1f4f7:
    mov    0x3a(%esp),%eax
    sar    $0x10,%eax
    imul   $0x19e,%eax,%eax
    lea    (%eax,%ebp,1),%ecx
    xor    %ebx,%ebx
    mov    0x190(%ecx),%si
    lea    0x192(%ecx),%edx
    test   %si,%si
    jle    jump_1f58a
  jump_1f51b:
    movswl %bx,%eax
    mov    %esp,%esi
    mov    (%ecx,%eax,4),%eax
    mov    %esi,0x30(%esp)
    xor    %esi,%esi
    mov    %esi,0xc(%esp)
    mov    %esi,0x10(%esp)
    mov    %esi,0x14(%esp)
    flds   (%edx)
    fadds  0x8(%eax)
    fstps  0xc(%esp)
    flds   0x4(%edx)
    fadds  0xc(%eax)
    add    $0x8,%eax
    fstps  0x10(%esp)
    flds   0x8(%edx)
    fadds  0x8(%eax)
    mov    0xc(%esp),%eax
    mov    %eax,(%esp)
    mov    0x10(%esp),%eax
    fstps  0x14(%esp)
    mov    %eax,0x4(%esp)
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%esp)
    mov    0xc(%esp),%eax
    mov    %eax,(%edx)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%edx)
    inc    %ebx
    cmp    0x190(%ecx),%bx
    jl     jump_1f51b
  jump_1f58a:
    filds  0x190(%ecx)
    fld1
    fdivp  %st,%st(1)
    lea    0x18(%esp),%eax
    xor    %ebx,%ebx
    mov    %eax,0x34(%esp)
    mov    %ebx,0x24(%esp)
    mov    %ebx,0x28(%esp)
    mov    %ebx,0x2c(%esp)
    flds   (%edx)
    fmul   %st(1),%st
    fstps  0x24(%esp)
    flds   0x4(%edx)
    fmul   %st(1),%st
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    fmuls  0x8(%edx)
    mov    %eax,0x18(%esp)
    mov    0x28(%esp),%eax
    fstps  0x2c(%esp)
    mov    %eax,0x1c(%esp)
    mov    0x2c(%esp),%eax
    mov    %eax,0x20(%esp)
    mov    0x24(%esp),%eax
    mov    %eax,(%edx)
    mov    0x1c(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x20(%esp),%eax
    mov    0x3c(%esp),%ebx
    mov    %eax,0x8(%edx)
    inc    %ebx
    mov    0x190(%ecx),%ax
    mov    0x32dd5(%edi),%dx
    mov    %bx,0x3c(%esp)
    add    %eax,%edx
    mov    0x32dd1(%edi),%cx
    mov    %dx,0x32dd5(%edi)
    cmp    %cx,%bx
    jl     jump_1f4f7
  jump_1f61f:
    filds  0x32dd5(%edi)
    filds  0x32dd1(%edi)
    fdivrp %st,%st(1)
    call   func_72258
    fistpl 0x38(%esp)
    mov    0x38(%esp),%eax
    mov    %ax,0x32dd5(%edi)
    add    $0x40,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1f64c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    0x32dd1(%eax),%ax
    mov    %ax,0x6(%edx)
    mov    0x32dcf(%ecx),%ebx
    mov    %ecx,%eax
    sar    $0x10,%ebx
    call   func_1f850
    mov    0x44(%esi),%dx
    xor    %ebx,%ebx
    test   %dx,%dx
    jle    jump_1e12e
    jmp    jump_1f68a
  jump_1f67f:
    inc    %ebx
    cmp    0x44(%esi),%bx
    jge    jump_1e12e
  jump_1f68a:
    movswl %bx,%edx
    mov    0x2c(%esi,%edx,4),%edx
    mov    (%edx),%edx
    mov    0x4(%edx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_1f6a5
    mov    %ecx,%eax
    call   func_1f64c
  jump_1f6a5:
    movswl %bx,%eax
    mov    0x2c(%esi,%eax,4),%edx
    mov    0x4(%edx),%edx
    mov    0x4(%edx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_1f67f
    mov    %ecx,%eax
    call   func_1f64c
    jmp    jump_1f67f


/*----------------------------------------------------------------*/
func_1f6c4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ebp
    mov    %edx,(%esp)
    mov    data_93b98,%bx
    xor    %ah,%ah
    xor    %edx,%edx
    mov    %ah,0x8(%esp)
    mov    %dx,0x4(%esp)
    test   %bx,%bx
    jle    jump_1f730
    mov    data_93b98,%si
  jump_1f6f1:
    xor    %eax,%eax
    mov    data_f458e,%al
    imul   $0x1ee,%eax,%ecx
    mov    0x2(%esp),%eax
    sar    $0x10,%eax
    cmpb   $0x3,data_92fd6(%ecx,%eax,1)
    jne    jump_1f721
    mov    0x4(%esp),%cl
    mov    $0x1,%al
    mov    0x8(%esp),%dh
    shl    %cl,%al
    or     %al,%dh
    mov    %dh,0x8(%esp)
  jump_1f721:
    mov    0x4(%esp),%ecx
    inc    %ecx
    mov    %cx,0x4(%esp)
    cmp    %si,%cx
    jl     jump_1f6f1
  jump_1f730:
    mov    (%esp),%eax
    xor    %edi,%edi
    mov    0x44(%eax),%dx
    mov    %di,0x4(%esp)
    test   %dx,%dx
    jle    jump_1f844
    jmp    jump_1f819
  jump_1f74c:
    mov    %eax,%edi
  jump_1f74e:
    mov    $0x1,%edx
    mov    data_f458e,%cl
    xor    %eax,%eax
    shl    %cl,%edx
    mov    0x17(%edi),%al
    mov    %edx,%ecx
    test   %edx,%eax
    je     jump_1f803
    mov    0x8(%esp),%ah
    not    %ah
    mov    0x14(%edi),%al
    mov    0x15(%edi),%bl
    and    %ah,%al
    and    %bl,%ah
    or     %ah,%al
    not    %ecx
    and    $0x7f,%al
    and    $0xff,%eax
    test   %ecx,%eax
    jne    jump_1f803
    xor    %edx,%edx
    xor    %ebx,%ebx
    jmp    jump_1f794
  jump_1f793:
    inc    %ebx
  jump_1f794:
    movswl %bx,%eax
    cmp    $0x6b,%eax
    jge    jump_1f7de
    cmp    data_c348b,%dx
    jge    jump_1f7de
    imul   $0x162,%eax,%ecx
    mov    data_ba0e9(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_1f793
    inc    %edx
    cmp    data_ba0ee(%ecx),%esi
    jne    jump_1f793
    xor    %ecx,%ecx
    mov    data_f458e,%cl
    cmp    %ecx,%eax
    je     jump_1f793
    imul   $0x1ee,%ecx,%ecx
    cmpb   $0x3,data_92fd6(%ecx,%eax,1)
    je     jump_1f793
  jump_1f7de:
    cmp    data_c348b,%dx
    jl     jump_1f803
    movw   $0x1,0x21(%esi)
    mov    0x354eb(%ebp),%ecx
    mov    %ebp,%eax
    inc    %ecx
    mov    %edi,%edx
    mov    %ecx,0x354eb(%ebp)
    call   func_1f6c4
  jump_1f803:
    mov    0x4(%esp),%ebx
    mov    (%esp),%ecx
    inc    %ebx
    mov    0x44(%ecx),%si
    mov    %bx,0x4(%esp)
    cmp    %si,%bx
    jge    jump_1f844
  jump_1f819:
    mov    0x2(%esp),%eax
    sar    $0x10,%eax
    mov    (%esp),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    0x2c(%eax),%esi
    cmpw   $0x0,0x21(%esi)
    jne    jump_1f803
    mov    (%esi),%eax
    cmp    %edx,%eax
    jne    jump_1f74c
    mov    0x4(%esi),%edi
    jmp    jump_1f74e
  jump_1f844:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1f850:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ecx
    movswl %bx,%eax
    cmp    $0x18,%eax
    jl     jump_1f872
    mov    $0x5d0,%ebx
    mov    $data_80c20,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1f872:
    movswl %cx,%eax
    imul   $0x19e,%eax,%eax
    lea    0x30701(%esi),%ecx
    add    %eax,%ecx
    mov    0x18e(%ecx),%esi
    sar    $0x10,%esi
    cmp    $0x64,%esi
    jl     jump_1f8a2
    mov    $0x5d3,%ebx
    mov    $data_80c2e,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1f8a2:
    mov    0x18e(%ecx),%esi
    sar    $0x10,%esi
    mov    %edi,(%ecx,%esi,4)
    incw   0x190(%ecx)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1f8bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x70,%esp
    mov    %eax,0x58(%esp)
    xor    %ecx,%ecx
    mov    %ecx,0x30(%esp)
    mov    %ecx,0x34(%esp)
    mov    %ecx,0x38(%esp)
    cmpw   $0x0,0x32dd1(%eax)
    jne    jump_1f8f2
    mov    $0x5f2,%ebx
    mov    $data_80c3c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1f8f2:
    mov    0x58(%esp),%eax
    mov    0x32dcf(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    je     jump_1fc79
    mov    0x58(%esp),%eax
    xor    %ebx,%ebx
    mov    0x32dd1(%eax),%si
    mov    %bx,0x6c(%esp)
    test   %si,%si
    jle    jump_1fc79
    add    $0x30701,%eax
    mov    %eax,0x48(%esp)
  jump_1f92c:
    mov    0x6a(%esp),%eax
    sar    $0x10,%eax
    imul   $0x19e,%eax,%eax
    mov    0x48(%esp),%esi
    add    %eax,%esi
    mov    0x58(%esp),%ebx
    mov    0x18e(%esi),%edx
    mov    0x32dd3(%ebx),%ebx
    sar    $0x10,%edx
    sar    $0x10,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    cwtl
    test   %eax,%eax
    mov    $0x1869f,%edi
    mov    $0x1869f,%ebp
    xor    %eax,%eax
    xor    %edx,%edx
    mov    %edi,0x50(%esp)
    mov    %ebp,0x54(%esp)
    mov    %eax,0x4c(%esp)
    xor    %edi,%edi
    mov    0x190(%esi),%ax
    mov    %di,0x68(%esp)
    xor    %edi,%edi
    test   %ax,%ax
    jle    jump_1f9f4
    jmp    jump_1f99e
  jump_1f994:
    inc    %edx
    cmp    0x190(%esi),%dx
    jge    jump_1f9f4
  jump_1f99e:
    movswl %dx,%eax
    mov    (%esi,%eax,4),%eax
    mov    (%eax),%ebx
    add    %ebx,%ebx
    mov    data_863c4(%ebx),%ebp
    sar    $0x10,%ebp
    mov    %ebp,0x3c(%esp)
    mov    0x42(%eax),%ebp
    sar    $0x10,%ebp
    mov    %ebp,0x64(%esp)
    mov    0x3c(%esp),%ebp
    sub    0x64(%esp),%ebp
    mov    %ebp,0x3c(%esp)
    mov    0x66(%esp),%ebp
    sar    $0x10,%ebp
    mov    %ebp,0x64(%esp)
    mov    0x3c(%esp),%ebp
    cmp    0x64(%esp),%ebp
    jle    jump_1f994
    mov    data_863c6(%ebx),%bx
    sub    0x44(%eax),%bx
    mov    %eax,%edi
    mov    %bx,0x68(%esp)
    jmp    jump_1f994
  jump_1f9f4:
    test   %edi,%edi
    jne    jump_1fa09
    mov    $0x614,%ebx
    mov    $data_80c4a,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1fa09:
    mov    0x58(%esp),%eax
    mov    0x32dd1(%eax),%si
    xor    %edx,%edx
    test   %si,%si
    jle    jump_1faed
    lea    0x8(%edi),%esi
  jump_1fa22:
    cmp    0x6c(%esp),%dx
    je     jump_1fadb
    movswl %dx,%ebx
    imul   $0x19e,%ebx,%ebx
    add    0x48(%esp),%ebx
    lea    0x18(%esp),%ebp
    mov    %ebp,0x44(%esp)
    xor    %ebp,%ebp
    mov    %ebp,(%esp)
    mov    %ebp,0x4(%esp)
    mov    %ebp,0x8(%esp)
    lea    0x192(%ebx),%eax
    flds   (%esi)
    fsubs  (%eax)
    fstps  (%esp)
    flds   0x4(%esi)
    fsubs  0x4(%eax)
    fstps  0x4(%esp)
    flds   0x8(%esi)
    fsubs  0x8(%eax)
    fstps  0x8(%esp)
    mov    (%esp),%eax
    flds   0x4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x18(%esp)
    mov    0x4(%esp),%eax
    flds   (%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c(%esp)
    mov    0x8(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x20(%esp)
    flds   0x8(%esp)
    mov    (%esp),%eax
    fmuls  0x8(%esp)
    mov    %eax,0x30(%esp)
    mov    0x4(%esp),%eax
    mov    %eax,0x34(%esp)
    mov    0x8(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x38(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    0x50(%esp),%ebp
    call   func_72258
    fistpl 0x60(%esp)
    mov    0x60(%esp),%eax
    cmp    %ebp,%eax
    jge    jump_1fadb
    mov    %ebx,%ecx
    mov    %eax,0x50(%esp)
  jump_1fadb:
    mov    0x58(%esp),%eax
    inc    %edx
    cmp    0x32dd1(%eax),%dx
    jl     jump_1fa22
  jump_1faed:
    test   %ecx,%ecx
    jne    jump_1fb02
    mov    $0x628,%ebx
    mov    $data_80c58,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1fb02:
    mov    0x190(%ecx),%si
    xor    %ebx,%ebx
    test   %si,%si
    jle    jump_1fc10
    lea    0x8(%edi),%esi
  jump_1fb17:
    movswl %bx,%eax
    mov    (%ecx,%eax,4),%edx
    mov    0x2(%edi),%eax
    sar    $0x10,%eax
    imul   $0x64,%eax,%eax
    mov    0x58(%esp),%ebp
    add    %eax,%ebp
    mov    0x2(%edx),%eax
    sar    $0x10,%eax
    add    %ebp,%eax
    cmpb   $0x0,0x32ddb(%eax)
    jne    jump_1fc02
    lea    0x24(%esp),%ebp
    mov    %ebp,0x40(%esp)
    xor    %ebp,%ebp
    mov    %ebp,0xc(%esp)
    mov    %ebp,0x10(%esp)
    mov    %ebp,0x14(%esp)
    lea    0x8(%edx),%eax
    flds   (%esi)
    fsubs  (%eax)
    fstps  0xc(%esp)
    flds   0x4(%esi)
    fsubs  0x4(%eax)
    fstps  0x10(%esp)
    flds   0x8(%esi)
    fsubs  0x8(%eax)
    fstps  0x14(%esp)
    mov    0xc(%esp),%eax
    flds   0x10(%esp)
    fmul   %st(0),%st
    mov    %eax,0x24(%esp)
    mov    0x10(%esp),%eax
    flds   0xc(%esp)
    fmul   %st(0),%st
    mov    %eax,0x28(%esp)
    mov    0x14(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x2c(%esp)
    flds   0x14(%esp)
    mov    0xc(%esp),%eax
    fmuls  0x14(%esp)
    mov    %eax,0x30(%esp)
    mov    0x10(%esp),%eax
    mov    %eax,0x34(%esp)
    mov    0x14(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x38(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    (%edx),%eax
    mov    data_863c4(,%eax,2),%eax
    sar    $0x10,%eax
    call   func_72258
    mov    %eax,0x64(%esp)
    mov    0x42(%edx),%eax
    mov    0x64(%esp),%ebp
    sar    $0x10,%eax
    fistpl 0x5c(%esp)
    sub    %eax,%ebp
    je     jump_1fc02
    mov    0x5c(%esp),%eax
    cmp    0x54(%esp),%eax
    jge    jump_1fc02
    mov    %edx,0x4c(%esp)
    mov    %eax,0x54(%esp)
  jump_1fc02:
    inc    %ebx
    cmp    0x190(%ecx),%bx
    jl     jump_1fb17
  jump_1fc10:
    mov    0x4c(%esp),%eax
    test   %eax,%eax
    jne    jump_1fc27
    mov    $0x641,%ebx
    mov    $data_80c66,%edx
    call   func_25878
  jump_1fc27:
    mov    0x4c(%esp),%edx
    mov    %edi,%eax
    call   func_1cf28
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_1fc47
    mov    $0x647,%ebx
    mov    $data_80c74,%edx
    call   func_25878
  jump_1fc47:
    orb    $0x1,0x23(%esi)
    mov    0x18(%edi),%dl
    or     $0x1,%dl
    mov    0x4c(%esp),%eax
    mov    %dl,0x18(%edi)
    orb    $0x1,0x18(%eax)
    mov    0x6c(%esp),%edx
    inc    %edx
    mov    %dx,0x6c(%esp)
    mov    %edx,%eax
    mov    0x58(%esp),%edx
    cmp    0x32dd1(%edx),%ax
    jl     jump_1f92c
  jump_1fc79:
    add    $0x70,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1fc84:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %ebx,%edi
    test   %edx,%edx
    je     jump_1fc95
    test   %ebx,%ebx
    jne    jump_1fca6
  jump_1fc95:
    mov    $0x654,%ebx
    mov    $data_80c82,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1fca6:
    mov    0x49c1(%ecx),%ebx
    sar    $0x10,%ebx
    cmp    $0x94,%ebx
    je     jump_1fd60
    mov    0x2(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %edx,%eax
    shl    $0x2,%eax
    lea    (%ecx,%eax,1),%edx
    mov    0x2(%edi),%eax
    sar    $0x10,%eax
    cmpb   $0x0,0x32ddb(%edx,%eax,1)
    jne    jump_1fd60
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    shl    $0x3,%eax
    lea    0x3337(%ecx),%edx
    sub    %ebx,%eax
    add    %eax,%edx
    movb   $0x0,0x20(%edx)
    mov    %esi,(%edx)
    mov    %edi,0x4(%edx)
    incw   0x49c3(%ecx)
    mov    0x2(%esi),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    shl    $0x2,%eax
    lea    (%ecx,%eax,1),%ebx
    mov    0x2(%edi),%eax
    sar    $0x10,%eax
    movb   $0x1,0x32ddb(%ebx,%eax,1)
    mov    0x2(%edi),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    shl    $0x2,%eax
    add    %eax,%ecx
    mov    0x2(%esi),%eax
    sar    $0x10,%eax
    movb   $0x1,0x32ddb(%ecx,%eax,1)
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_1fd60:
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_1fd68:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    movswl %dx,%eax
    test   %eax,%eax
    jl     jump_1fd7f
    cmp    0xd88(%ecx),%si
    jl     jump_1fd90
  jump_1fd7f:
    mov    $0x678,%ebx
    mov    $data_80c90,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1fd90:
    mov    0x30679(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0x6b,%eax
    jl     jump_1fdaf
    mov    $0x679,%ebx
    mov    $data_80c9e,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1fdaf:
    lea    0x27285(%ecx),%ebx
    xor    %edx,%edx
    jmp    jump_1fdc0
  jump_1fdb9:
    inc    %edx
    add    $0x162,%ebx
  jump_1fdc0:
    movswl %dx,%eax
    cmp    $0x6b,%eax
    jge    jump_1fded
    mov    0x54(%ebx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_1fdb9
    mov    %ebx,%eax
    xor    %edx,%edx
    call   func_4449c
    mov    %si,0x56(%ebx)
    mov    %ebx,%eax
    incw   0x3067b(%ecx)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_1fded:
    mov    $0x688,%ebx
    mov    $data_80cac,%edx
    xor    %eax,%eax
    call   func_25888
    xor    %eax,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1fe04:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    0x54(%edx),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_1fe22
    mov    0x56(%edx),%ax
    cmp    0xd88(%esi),%ax
    jl     jump_1fe33
  jump_1fe22:
    mov    $0x693,%ebx
    mov    $data_80cba,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1fe33:
    cmpb   $0x0,0x58(%ecx)
    jne    jump_1fe4a
    mov    $0x694,%ebx
    mov    $data_80cc8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1fe4a:
    movw   $0xffff,0x56(%ecx)
    movb   $0x0,0x58(%ecx)
    movb   $0x0,0x34(%ecx)
    decw   0x3067b(%esi)
    mov    0x30679(%esi),%ecx
    sar    $0x10,%ecx
    test   %ecx,%ecx
    jge    jump_1fe7d
    mov    $0x69c,%ebx
    mov    $data_80cd6,%edx
    xor    %eax,%eax
    call   func_25878
  jump_1fe7d:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_1fe84:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    xor    %edx,%edx
    xor    %ah,%ah
    mov    data_f458e,%dl
    mov    %ah,0x10(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    lea    0x6(%esi),%ebp
    add    %eax,%eax
    add    %eax,%ebp
    cmpl   $0xffffffff,0x3(%ebp)
    jne    jump_1febb
    movb   $0x1,0x10(%esp)
  jump_1febb:
    cmpb   $0x0,0x10(%esp)
    jne    jump_1fefa
    mov    $0x2,%bl
    mov    %esi,%edx
    xor    %eax,%eax
    mov    %bl,0x10(%esp)
    jmp    jump_1fed5
  jump_1fece:
    add    $0x1ee,%edx
    inc    %eax
  jump_1fed5:
    mov    0xd86(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1fefa
    xor    %ebx,%ebx
    mov    data_f458e,%bl
    cmp    %ebx,%eax
    je     jump_1fece
    cmpl   $0x0,0x9(%edx)
    jne    jump_1fece
    xor    %bh,%bh
    mov    %bh,0x10(%esp)
  jump_1fefa:
    cmpb   $0x0,0x10(%esp)
    jne    jump_1ff49
    mov    $0x3,%ch
    mov    %esi,%edx
    xor    %eax,%eax
    mov    %ch,0x10(%esp)
    mov    data_f458e,%cl
    jmp    jump_1ff1a
  jump_1ff13:
    add    $0x1ee,%edx
    inc    %eax
  jump_1ff1a:
    mov    0xd86(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1ff49
    mov    0xd(%edx),%ebx
    mov    0x14(%ebx),%bl
    and    $0xff,%ebx
    and    $0x7f,%bl
    mov    %ebx,%edi
    mov    $0x1,%ebx
    shl    %cl,%ebx
    cmp    %ebx,%edi
    je     jump_1ff13
    xor    %al,%al
    mov    %al,0x10(%esp)
  jump_1ff49:
    mov    0x10(%esp),%ah
    test   %ah,%ah
    jne    jump_1ffe5
    mov    $0x4,%dl
    mov    %ah,0xc(%esp)
    mov    %ebp,%ebx
    mov    %dl,0x10(%esp)
    xor    %eax,%eax
    mov    %esi,%edx
    xor    %edi,%edi
    jmp    jump_1ff71
  jump_1ff69:
    add    $0x1ee,%edx
    inc    %ebx
    inc    %eax
  jump_1ff71:
    mov    0xd86(%esi),%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_1ffaf
    cmp    0x9(%edx),%edi
    jne    jump_1ff8f
    mov    %al,%cl
    mov    $0x1,%ch
    shl    %cl,%ch
    mov    %ch,%cl
    or     %cl,0xc(%esp)
  jump_1ff8f:
    xor    %ecx,%ecx
    mov    data_f458e,%cl
    cmp    %ecx,%eax
    je     jump_1ff69
    cmp    0x9(%edx),%edi
    jne    jump_1ff69
    cmpb   $0x3,0x1c0(%ebx)
    je     jump_1ff69
    xor    %ch,%ch
    mov    %ch,0x10(%esp)
  jump_1ffaf:
    cmpb   $0x4,0x10(%esp)
    jne    jump_1ffe5
    mov    %esi,%edx
    xor    %eax,%eax
    jmp    jump_1ffc0
  jump_1ffbc:
    add    $0x60,%edx
    inc    %eax
  jump_1ffc0:
    mov    0x3333(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_1ffe5
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    0xc(%esp),%bl
    mov    0xdcc(%edx),%cl
    test   %ebx,%ecx
    jne    jump_1ffbc
    xor    %ah,%ah
    mov    %ah,0x10(%esp)
  jump_1ffe5:
    cmpb   $0x0,0x10(%esp)
    jne    jump_20013
    mov    0x3333(%esi),%edx
    sar    $0x10,%edx
    add    %edx,%edx
    mov    $0x3,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x354eb(%esi),%edi
    inc    %eax
    cmp    %edi,%eax
    jg     jump_20013
    movb   $0x5,0x10(%esp)
  jump_20013:
    cmpb   $0x0,0x10(%esp)
    je     jump_20214
    mov    data_f458e,%cl
    xor    %eax,%eax
    xor    %edx,%edx
    mov    %eax,0x8(%esp)
    jmp    jump_20032
  jump_2002e:
    add    $0x4b,%eax
    inc    %edx
  jump_20032:
    xor    %ebx,%ebx
    mov    data_f4744,%bx
    cmp    %ebx,%edx
    jge    jump_20059
    mov    data_f478b(%eax),%ebx
    mov    $0x1,%edi
    sar    $0x18,%ebx
    shl    %cl,%edi
    test   %edi,%ebx
    je     jump_2002e
    incl   0x8(%esp)
    jmp    jump_2002e
  jump_20059:
    mov    data_f458e,%bh
    mov    %esi,%ecx
    xor    %eax,%eax
    jmp    jump_20069
  jump_20065:
    add    $0x7b,%ecx
    inc    %eax
  jump_20069:
    mov    0x27281(%esi),%edx
    sar    $0x10,%edx
    cmp    %edx,%eax
    jge    jump_20085
    cmp    0x1829e(%ecx),%bh
    jne    jump_20065
    addl   $0x2,0x8(%esp)
    jmp    jump_20065
  jump_20085:
    mov    %ebp,%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x8(%esp),%ecx
    call   func_3c310
    add    %eax,%ecx
    xor    %edx,%edx
    mov    %ecx,0x8(%esp)
    mov    %esi,%eax
    mov    data_f458e,%cl
    jmp    jump_200aa
  jump_200a6:
    add    $0x60,%eax
    inc    %edx
  jump_200aa:
    mov    0x3333(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jge    jump_200cf
    mov    $0x1,%ebx
    movzbl 0xdcc(%eax),%edi
    shl    %cl,%ebx
    test   %ebx,%edi
    je     jump_200a6
    incl   0x8(%esp)
    jmp    jump_200a6
  jump_200cf:
    mov    %esi,%ecx
    mov    %ebp,%edx
    xor    %eax,%eax
    jmp    jump_200e9
  jump_200d7:
    cmp    $0x2,%bl
    jne    jump_200e1
    subl   $0xa,0x8(%esp)
  jump_200e1:
    add    $0x1ee,%ecx
    inc    %edx
    inc    %eax
  jump_200e9:
    mov    0xd86(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_2011a
    xor    %ebx,%ebx
    mov    data_f458e,%bl
    cmp    %ebx,%eax
    je     jump_200e1
    cmpl   $0xffffffff,0x9(%ecx)
    je     jump_200e1
    mov    0x1c0(%edx),%bl
    cmp    $0x3,%bl
    jne    jump_200d7
    addl   $0xf,0x8(%esp)
    jmp    jump_200e1
  jump_2011a:
    cmpb   $0x4,0x10(%esp)
    jne    jump_20126
    addl   $0x32,0x8(%esp)
  jump_20126:
    mov    (%esi),%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0xfa0,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    $0x64,%edx
    sub    %eax,%edx
    mov    %edx,%eax
    cmp    $0x19,%edx
    jge    jump_20159
    mov    $0x19,%eax
    jmp    jump_20163
  jump_20159:
    cmp    $0x64,%edx
    jle    jump_20163
    mov    $0x64,%eax
  jump_20163:
    mov    0x8(%esp),%edx
    imul   %eax,%edx
    mov    $0x64,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0xdb4(%esi),%ch
    mov    %eax,0x8(%esp)
    cmp    $0x1,%ch
    jne    jump_20193
    fildl  0x8(%esp)
    fld    %st(0)
    fmull  data_80cec
    jmp    jump_201a4
  jump_20193:
    cmp    $0x2,%ch
    jne    jump_201af
    fildl  0x8(%esp)
    fld    %st(0)
    fmull  data_80ce4
  jump_201a4:
    fstp   %st(1)
    call   func_72258
    fistpl 0x8(%esp)
  jump_201af:
    cmpl   $0x0,0x8(%esp)
    jge    jump_201bc
    xor    %ebp,%ebp
    mov    %ebp,0x8(%esp)
  jump_201bc:
    mov    0x8(%esp),%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %eax,%edx
    shl    $0x2,%edx
    mov    $0x258,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    $0x1,%ecx
    mov    %eax,0x8(%esp)
    mov    0x10(%esp),%al
    mov    $0x9,%ebx
    mov    %al,0x30700(%esi)
    mov    0x8(%esp),%eax
    xor    %edx,%edx
    mov    %eax,0x306fc(%esi)
    mov    $data_fa35c,%eax
    mov    %dx,data_feab6
    mov    %ecx,%edx
    call   func_51f24
  jump_20214:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_20220:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1b4,%esp
    mov    %eax,%ebp
    mov    data_f458e,%cl
    xor    %ebx,%ebx
    mov    %cl,%bl
    mov    %ebx,%edx
    shl    $0x5,%edx
    mov    $0x1,%al
    sub    %ebx,%edx
    shl    %cl,%al
    shl    $0x3,%edx
    mov    %al,0x1b0(%esp)
    sub    %ebx,%edx
    mov    $data_92e16,%eax
    add    %edx,%edx
    add    %edx,%eax
    lea    0xdb5(%ebp),%esi
    call   func_3ee44
    mov    %al,0x1ac(%esp)
    mov    %ebp,%eax
    mov    0x2(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_2029a
    mov    %ebp,%edx
    mov    0x3335(%edx),%bx
    xor    %eax,%eax
    test   %bx,%bx
    jle    jump_2029a
  jump_20286:
    movswl %ax,%edx
    andb   $0xfe,data_c8304(%edx)
    inc    %eax
    cmp    0x3335(%ebp),%ax
    jl     jump_20286
  jump_2029a:
    mov    0x3335(%ebp),%dx
    xor    %edi,%edi
    test   %dx,%dx
    jg     jump_202c1
    jmp    jump_20361
  jump_202ad:
    inc    %edi
    mov    0x3335(%ebp),%bx
    add    $0x60,%esi
    cmp    %bx,%di
    jge    jump_20361
  jump_202c1:
    movswl %di,%edx
    mov    data_c8304(%edx),%al
    xor    %ebx,%ebx
    and    $0x1,%al
    mov    %al,%bl
    test   %ebx,%ebx
    jne    jump_202ad
    orb    $0x1,data_c8304(%edx)
    mov    0x15(%esi),%al
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x1b0(%esp),%bl
    mov    %al,%dl
    test   %ebx,%edx
    je     jump_202ad
    xor    %ebx,%ebx
    mov    0x1ac(%esp),%bl
    test   %ebx,%edx
    je     jump_202ad
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_1d754
    mov    %eax,%ecx
    xor    %eax,%eax
    jmp    jump_2030c
  jump_2030b:
    inc    %eax
  jump_2030c:
    movswl %ax,%edx
    cmp    %ecx,%edx
    jge    jump_202ad
    mov    (%esp,%edx,4),%edx
    xor    %ebx,%ebx
    mov    0x54(%edx),%edx
    mov    data_f458e,%bl
    sar    $0x10,%edx
    cmp    %ebx,%edx
    je     jump_20338
    imul   $0x1ee,%ebx,%ebx
    cmpb   $0x2,data_92fd6(%edx,%ebx,1)
    jne    jump_2030b
  jump_20338:
    movswl %ax,%edx
    mov    (%esp,%edx,4),%edx
    cmpl   $0x0,0x88(%edx)
    jle    jump_2030b
    mov    0x4(%ebp),%cx
    inc    %ecx
    mov    %esi,%edx
    mov    %cx,0x4(%ebp)
    mov    %edx,%eax
    add    $0x1b4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_20361:
    xor    %edx,%edx
    mov    %edx,%eax
    add    $0x1b4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_20374:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c0,%esp
    mov    %eax,%ebp
    cmpl   $0xffffffff,data_90ba4
    jne    jump_20453
    cmpl   $0x1388,(%eax)
    jl     jump_20453
    call   func_7369f
    mov    %eax,%edx
    mov    $0x15,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    call   func_7369f
    movswl %dx,%ecx
    mov    %eax,%edx
    mov    $0x5,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x3,%edx
    call   func_7369f
    movswl %dx,%ebx
    mov    %eax,%edx
    mov    $0x4c,%esi
    sar    $0x1f,%edx
    idiv   %esi
    add    $0x19,%edx
    mov    %ebp,%eax
    movswl %dx,%edx
    call   func_1db34
    mov    %ebp,%eax
    call   func_1e96c
    mov    %ebp,%eax
    call   func_1ed38
    mov    %ebp,%eax
    call   func_1e7d8
    call   func_7369f
    mov    %eax,%edx
    mov    $0x6,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    xor    %ecx,%ecx
    movswl %dx,%edx
    mov    %ebp,%eax
    mov    $0x1,%ebx
    call   func_1e73c
    mov    $data_80cf4,%edx
    mov    $data_fa35c,%eax
    movl   $0x0,0x0(%ebp)
    call   func_521dc
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_20446
    mov    $0x7cb,%ebx
    mov    $data_80d01,%edx
    call   func_25878
  jump_20446:
    mov    0xa7(%ecx),%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_20453:
    mov    $0x64,%ebx
    mov    $data_c8304,%eax
    xor    %edx,%edx
    movw   $0x0,0x4(%ebp)
    call   func_72280
    mov    %ebp,%eax
    call   func_20850
    mov    %ebp,%eax
    call   func_209f4
    mov    $data_f4744,%eax
    xor    %edx,%edx
    call   func_41f3c
    lea    0x18247(%ebp),%esi
    jmp    jump_20497
  jump_2048c:
    mov    %esi,%eax
    call   func_343b8
    inc    %edx
    add    $0x7b,%esi
  jump_20497:
    mov    0x27281(%ebp),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jl     jump_2048c
    mov    %ebp,%eax
    call   func_2074c
    xor    %edx,%edx
    lea    0x6(%ebp),%esi
    jmp    jump_204b9
  jump_204b2:
    add    $0x1ee,%esi
    inc    %edx
  jump_204b9:
    mov    0xd86(%ebp),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jge    jump_204da
    xor    %eax,%eax
    mov    data_f458e,%al
    cmp    %eax,%edx
    je     jump_204b2
    mov    %esi,%eax
    call   func_39b30
    jmp    jump_204b2
  jump_204da:
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    $data_92e16,%eax
    call   func_39b30
    cmpl   $0xffffffff,data_90ba0
    jne    jump_2069a
    mov    $data_80d0f,%edx
    mov    $data_80d12,%eax
    mov    $data_93bc5,%esi
    call   func_7331e
    mov    data_96145,%bx
    xor    %edx,%edx
    mov    %eax,0x1ac(%esp)
    mov    %edx,0x1bc(%esp)
    test   %bx,%bx
    jle    jump_2068e
    lea    0x1c(%esi),%eax
    mov    %eax,0x1b0(%esp)
  jump_20545:
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_1d754
    mov    %eax,%ebx
    mov    data_93b98,%ax
    xor    %edx,%edx
    test   %ax,%ax
    jle    jump_20616
    mov    0x1b0(%esp),%eax
    mov    %eax,0x1b8(%esp)
  jump_2056f:
    mov    $0x1,%eax
    movswl %dx,%ecx
    movzbl 0x15(%esi),%edi
    shl    %cl,%eax
    test   %eax,%edi
    je     jump_205ba
    xor    %ecx,%ecx
    jmp    jump_205ca
  jump_20585:
    mov    0x1bc(%esp),%ecx
    mov    0x1b0(%esp),%edi
    add    $0x60,%esi
    add    $0x60,%edi
    inc    %ecx
    mov    %edi,0x1b0(%esp)
    mov    data_96145,%di
    mov    %ecx,0x1bc(%esp)
    cmp    %di,%cx
    jge    jump_2068e
    jmp    jump_20545
  jump_205ba:
    mov    data_93b98,%cx
    inc    %edx
    cmp    %cx,%dx
    jge    jump_20616
    jmp    jump_2056f
  jump_205c9:
    inc    %ecx
  jump_205ca:
    movswl %cx,%eax
    cmp    %ebx,%eax
    jge    jump_205da
    mov    (%esp,%eax,4),%eax
    cmp    0x56(%eax),%dx
    jne    jump_205c9
  jump_205da:
    movswl %cx,%eax
    cmp    %ebx,%eax
    jl     jump_205ba
    movswl %dx,%eax
    push   %eax
    xor    %eax,%eax
    mov    0x15(%esi),%al
    push   %eax
    incw   data_c8300
    mov    0x1c0(%esp),%eax
    push   %eax
    mov    0x0(%ebp),%eax
    inc    %eax
    push   %eax
    push   $data_80d1f
    mov    0x1c0(%esp),%ecx
    push   %ecx
    call   func_73aaa
    add    $0x18,%esp
    jmp    jump_205ba
  jump_20616:
    mov    0x1b0(%esp),%eax
    xor    %edx,%edx
    mov    %eax,0x1b4(%esp)
    jmp    jump_20629
  jump_20628:
    inc    %edx
  jump_20629:
    movswl %dx,%eax
    cmp    %ebx,%eax
    jge    jump_20585
    mov    (%esp,%eax,4),%eax
    cmpb   $0x1,0x58(%eax)
    je     jump_20628
    mov    0x54(%eax),%ecx
    mov    $0x1,%edi
    sar    $0x10,%ecx
    shl    %cl,%edi
    xor    %ecx,%ecx
    mov    0x15(%esi),%cl
    test   %edi,%ecx
    jne    jump_20628
    push   %ecx
    mov    0x1b8(%esp),%ecx
    mov    0x54(%eax),%eax
    push   %ecx
    sar    $0x10,%eax
    push   %eax
    mov    0x0(%ebp),%eax
    inc    %eax
    mov    data_c8300,%di
    push   %eax
    inc    %edi
    push   $data_80d54
    mov    %di,data_c8300
    mov    0x1c0(%esp),%edi
    push   %edi
    call   func_73aaa
    add    $0x18,%esp
    jmp    jump_20628
  jump_2068e:
    mov    0x1ac(%esp),%eax
    call   func_7280e
  jump_2069a:
    mov    data_977d3,%bx
    lea    0x3337(%ebp),%edx
    xor    %eax,%eax
    test   %bx,%bx
    jle    jump_206c4
  jump_206ae:
    movw   $0x0,0x21(%edx)
    inc    %eax
    mov    data_977d3,%cx
    add    $0x27,%edx
    cmp    %cx,%ax
    jl     jump_206ae
  jump_206c4:
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    mov    data_92e1d(%eax),%edx
    mov    0x14(%edx),%dl
    mov    $0x1,%ebx
    mov    data_f458e,%cl
    and    $0xff,%edx
    shl    %cl,%ebx
    test   %ebx,%edx
    je     jump_20713
    movl   $0x1,0x354eb(%ebp)
    mov    data_92e1d(%eax),%edx
    mov    %ebp,%eax
    call   func_1f6c4
    jmp    jump_2071d
  jump_20713:
    movl   $0x0,0x354eb(%ebp)
  jump_2071d:
    mov    0x0(%ebp),%esi
    inc    %esi
    mov    0x30700(%ebp),%ch
    mov    %esi,0x0(%ebp)
    test   %ch,%ch
    jne    jump_2073e
    cmpl   $0x0,data_90ba4
    jne    jump_2073e
    mov    %ebp,%eax
    call   func_1fe84
  jump_2073e:
    add    $0x1c0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2074c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%edi
    mov    data_93b98,%dx
    xor    %esi,%esi
    test   %dx,%dx
    jle    jump_207a9
  jump_20765:
    movswl %si,%ebp
    imul   $0x1ee,%ebp,%ecx
    mov    %esp,%ebx
    add    $data_92e16,%ecx
    xor    %edx,%edx
    mov    %ecx,%eax
    call   func_3c310
    imul   $0x6,%ebp,%edx
    mov    %eax,(%esp)
    mov    (%esp),%eax
    mov    %ax,0xd8c(%edx,%edi,1)
    mov    %ecx,%eax
    call   func_3c3cc
    mov    %ax,0xd8e(%edx,%edi,1)
    inc    %esi
    cmp    data_93b98,%si
    jl     jump_20765
  jump_207a9:
    mov    data_93b98,%cx
    xor    %esi,%esi
    test   %cx,%cx
    jle    jump_20843
    jmp    jump_207d9
  jump_207bd:
    movswl %si,%eax
    imul   $0x6,%eax,%eax
    mov    %bx,0xd8a(%edi,%eax,1)
    inc    %esi
    cmp    data_93b98,%si
    jge    jump_20843
  jump_207d9:
    movswl %si,%eax
    imul   $0x6,%eax,%eax
    lea    (%edi,%eax,1),%edx
    mov    0xd8c(%edx),%ax
    add    0xd8e(%edx),%ax
    mov    data_93b98,%cx
    mov    %ax,0x4(%esp)
    xor    %ebx,%ebx
    xor    %eax,%eax
    test   %cx,%cx
    jle    jump_207bd
    jmp    jump_20814
  jump_20807:
    mov    data_93b98,%dx
    inc    %eax
    cmp    %dx,%ax
    jge    jump_207bd
  jump_20814:
    cmp    %ax,%si
    je     jump_20807
    movswl %ax,%edx
    imul   $0x6,%edx,%edx
    mov    0xd8a(%edx,%edi,1),%ecx
    mov    0xd8c(%edx,%edi,1),%edx
    sar    $0x10,%ecx
    sar    $0x10,%edx
    add    %ecx,%edx
    mov    0x2(%esp),%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%edx
    jle    jump_20807
    inc    %ebx
    jmp    jump_20807
  jump_20843:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_20850:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%edi
    lea    0xdb5(%eax),%esi
    mov    data_f458e,%cl
    mov    $0x1,%al
    shl    %cl,%al
    mov    0x3335(%edi),%dx
    mov    %al,(%esp)
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_208c1
    jmp    jump_2088d
  jump_2087d:
    inc    %ecx
    mov    0x3335(%edi),%bx
    add    $0x60,%esi
    cmp    %bx,%cx
    jge    jump_208c1
  jump_2088d:
    mov    0x15(%esi),%al
    xor    %ebx,%ebx
    mov    0x14(%esi),%ah
    xor    %edx,%edx
    or     %ah,%al
    mov    (%esp),%bl
    mov    %al,%dl
    movl   $0x0,0x5c(%esi)
    test   %edx,%ebx
    jne    jump_2087d
    test   %al,%al
    je     jump_208b8
    mov    %esi,%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_208cc
  jump_208b8:
    movl   $0xffffffff,0x5c(%esi)
    jmp    jump_2087d
  jump_208c1:
    add    $0x4,%esp
  jump_208c4:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_208cc:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,%edx
    mov    data_90ba4,%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_208e6
    mov    %ebx,%edx
  jump_208e6:
    mov    0xd88(%ebp),%cx
    xor    %ebx,%ebx
    xor    %eax,%eax
    mov    %bx,0x18(%esp)
    test   %cx,%cx
    jle    jump_2094e
    jmp    jump_20907
  jump_208fd:
    inc    %eax
    cmp    0xd88(%ebp),%ax
    jge    jump_2094e
  jump_20907:
    test   %edx,%edx
    jne    jump_2091a
    xor    %ebx,%ebx
    movswl %ax,%edi
    mov    data_f458e,%bl
    cmp    %ebx,%edi
    je     jump_208fd
  jump_2091a:
    mov    $0x1,%bh
    mov    %al,%cl
    shl    %cl,%bh
    mov    0x15(%esi),%bl
    mov    0x14(%esi),%cl
    or     %bl,%cl
    mov    %bh,%bl
    and    $0xff,%ebx
    movzbl %cl,%edi
    test   %edi,%ebx
    je     jump_208fd
    mov    0x18(%esp),%edi
    mov    0x16(%esp),%ebx
    inc    %edi
    sar    $0x10,%ebx
    mov    %di,0x18(%esp)
    mov    %ax,(%esp,%ebx,2)
    jmp    jump_208fd
  jump_2094e:
    mov    0x16(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_20979
    add    $0x6,%ebp
  jump_2095c:
    mov    0x18(%esp),%eax
    xor    %edi,%edi
    xor    %ecx,%ecx
    test   %ax,%ax
    jle    jump_20975
    jmp    jump_20981
  jump_2096b:
    mov    0x18(%esp),%edx
    inc    %ecx
    cmp    %dx,%cx
    jl     jump_20981
  jump_20975:
    test   %edi,%edi
    jne    jump_2095c
  jump_20979:
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_20981:
    xor    %al,%al
    mov    %al,0x10(%esp)
    movswl %cx,%eax
    mov    -0x2(%esp,%eax,2),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    lea    0x10(%esp),%ebx
    mov    %esi,%edx
    add    %ebp,%eax
    call   func_3c6b0
    or     %eax,%edi
    mov    0x10(%esp),%ah
    test   %ah,%ah
    jne    jump_209d0
    jmp    jump_2096b
  jump_209b0:
    mov    $0x1,%edx
    mov    0x11(%esp),%eax
    call   func_45378
    jmp    jump_2096b
  jump_209c0:
    mov    $0x1,%edx
    mov    0x11(%esp),%eax
    call   func_35060
    jmp    jump_2096b
  jump_209d0:
    cmp    $0x2,%ah
    jb     jump_209dc
    jbe    jump_209c0
    cmp    $0x3,%ah
    je     jump_209b0
  jump_209dc:
    mov    $0x8f5,%ebx
    mov    $data_80d92,%edx
    xor    %eax,%eax
    call   func_25888
    jmp    jump_2096b


/*----------------------------------------------------------------*/
func_209f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%esi
    lea    0xdb5(%eax),%ecx
    mov    0x3335(%eax),%dx
    xor    %edi,%edi
    test   %dx,%dx
    jle    jump_208c4
    jmp    jump_20a29
  jump_20a15:
    inc    %edi
    mov    0x3335(%esi),%bx
    add    $0x60,%ecx
    cmp    %bx,%di
    jge    jump_208c4
  jump_20a29:
    cmpl   $0xffffffff,0x5c(%ecx)
    je     jump_20a15
    xor    %eax,%eax
    xor    %edx,%edx
    mov    0x15(%ecx),%al
    mov    0x14(%ecx),%dl
    or     %edx,%eax
    je     jump_20a4b
    mov    $0xffffffff,%ebx
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_208cc
  jump_20a4b:
    movl   $0xffffffff,0x5c(%ecx)
    jmp    jump_20a15


/*----------------------------------------------------------------*/
func_20a54:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x238,%esp
    mov    %eax,0x1e8(%esp)
    mov    %edx,%ebp
    mov    $0x1d72,%edx
    mov    $0x60,%ebx
    mov    $0x7b,%ecx
    mov    $0x1ee,%esi
    mov    $0x27,%edi
    mov    $0x19e,%eax
    mov    %edx,0x1c8(%esp)
    mov    %ebx,0x1cc(%esp)
    mov    %ecx,0x1d0(%esp)
    mov    %esi,0x1d4(%esp)
    mov    %eax,0x1dc(%esp)
    mov    $0xd,%edx
    mov    $0x354ef,%ebx
    mov    %ebp,%eax
    mov    %edx,0x1e0(%esp)
    mov    %ebx,0x1e4(%esp)
    mov    $0x20,%ebx
    lea    0x1c8(%esp),%edx
    mov    %edi,0x1d8(%esp)
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    $0x4,%ebx
    mov    (%eax),%eax
    lea    0x1ec(%esp),%edx
    mov    %eax,0x1ec(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x306f4(%eax),%eax
    mov    0x2(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x1f0(%esp),%edx
    mov    %eax,0x1f0(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%edx
    mov    0x1e8(%esp),%eax
    add    $0x18247,%edx
    mov    0x306f8(%eax),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    mov    $0x4,%ebx
    lea    0x1f4(%esp),%edx
    mov    %eax,0x1f4(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x306fd(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x18,%eax
    lea    0x1f8(%esp),%edx
    mov    %eax,0x1f8(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    $0x4,%ebx
    mov    0x306fc(%eax),%eax
    lea    0x1fc(%esp),%edx
    mov    %eax,0x1fc(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    $0x4,%ebx
    mov    data_f4734,%eax
    lea    0x200(%esp),%edx
    mov    %eax,0x200(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    $0x4,%ebx
    mov    data_f4738,%eax
    lea    0x204(%esp),%edx
    mov    %eax,0x204(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    $0x4,%ebx
    mov    data_f473c,%eax
    lea    0x208(%esp),%edx
    mov    %eax,0x208(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    $data_f4744,%eax
    mov    %ebp,%edx
    xor    %ebx,%ebx
    call   func_423f0
    mov    0x1e8(%esp),%eax
    mov    0x3333(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x20c(%esp),%edx
    mov    %eax,0x20c(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x3335(%eax),%dx
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_20c8b
    lea    0xdb5(%eax),%esi
  jump_20c69:
    movswl %cx,%eax
    imul   $0x60,%eax,%eax
    mov    %ebp,%edx
    xor    %ebx,%ebx
    add    %esi,%eax
    call   func_1d8e0
    mov    0x1e8(%esp),%eax
    inc    %ecx
    cmp    0x3335(%eax),%cx
    jl     jump_20c69
  jump_20c8b:
    mov    0x1e8(%esp),%eax
    mov    0x18243(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x210(%esp),%edx
    mov    %eax,0x210(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%ebx
    mov    0x1e8(%esp),%edx
    mov    0x18243(%ebx),%ebx
    mov    %ebp,%eax
    sar    $0x10,%ebx
    add    $0x49c5,%edx
    shl    $0x2,%ebx
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x27281(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x214(%esp),%edx
    mov    %eax,0x214(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x27283(%eax),%si
    xor    %ecx,%ecx
    test   %si,%si
    jle    jump_20d43
    lea    0x18247(%eax),%esi
  jump_20d21:
    movswl %cx,%eax
    imul   $0x7b,%eax,%eax
    mov    %ebp,%edx
    xor    %ebx,%ebx
    add    %esi,%eax
    call   func_359a8
    mov    0x1e8(%esp),%eax
    inc    %ecx
    cmp    0x27283(%eax),%cx
    jl     jump_20d21
  jump_20d43:
    mov    0x1e8(%esp),%eax
    mov    $0x4,%ebx
    lea    0x218(%esp),%edx
    mov    0x1e8(%esp),%edi
    mov    0x30679(%eax),%eax
    xor    %esi,%esi
    sar    $0x10,%eax
    xor    %ecx,%ecx
    mov    %eax,0x218(%esp)
    mov    %ebp,%eax
    add    $0x27285,%edi
    call   func_1c098
    jmp    jump_20d81
  jump_20d80:
    inc    %ecx
  jump_20d81:
    movswl %cx,%eax
    cmp    $0x6b,%eax
    jge    jump_20df2
    imul   $0x162,%eax,%eax
    add    0x1e8(%esp),%eax
    mov    0x272d9(%eax),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_20d80
    cmpb   $0x0,0x272dd(%eax)
    jne    jump_20dbe
    mov    $0x96a,%ebx
    mov    $data_80da0,%edx
    xor    %eax,%eax
    call   func_25878
  jump_20dbe:
    mov    $0x4,%ebx
    movswl %cx,%eax
    lea    0x21c(%esp),%edx
    mov    %eax,0x21c(%esp)
    mov    %ebp,%eax
    call   func_1c098
    movswl %cx,%eax
    imul   $0x162,%eax,%eax
    mov    %ebp,%edx
    xor    %ebx,%ebx
    add    %edi,%eax
    inc    %esi
    call   func_46274
    jmp    jump_20d80
  jump_20df2:
    mov    0x1e8(%esp),%eax
    cmp    0x3067b(%eax),%si
    je     jump_20e13
    mov    $0x978,%ebx
    mov    $data_80dae,%edx
    xor    %eax,%eax
    call   func_25878
  jump_20e13:
    mov    0x1e8(%esp),%eax
    mov    0xd86(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x220(%esp),%edx
    mov    %eax,0x220(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0xd88(%eax),%bx
    xor    %ecx,%ecx
    test   %bx,%bx
    jle    jump_20e7a
    lea    0x6(%eax),%esi
  jump_20e55:
    movswl %cx,%eax
    imul   $0x1ee,%eax,%eax
    mov    %ebp,%edx
    xor    %ebx,%ebx
    add    %esi,%eax
    call   func_3f638
    mov    0x1e8(%esp),%eax
    inc    %ecx
    cmp    0xd88(%eax),%cx
    jl     jump_20e55
  jump_20e7a:
    mov    0x1e8(%esp),%eax
    mov    0x49c1(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x224(%esp),%edx
    mov    %eax,0x224(%esp)
    mov    %ebp,%eax
    call   func_1c098
    lea    0x1a0(%esp),%eax
    add    $0x8,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    mov    0x1e8(%esp),%eax
    mov    0x49c3(%eax),%dx
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_20fc3
    lea    0x3337(%eax),%esi
  jump_20ef8:
    movswl %cx,%edx
    imul   $0x27,%edx,%edx
    add    %esi,%edx
    mov    (%edx),%eax
    mov    %eax,0x1a0(%esp)
    mov    0x4(%edx),%eax
    lea    0x8(%edx),%ebx
    mov    %eax,0x1a4(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x1a8(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x1ac(%esp)
    mov    0x8(%ebx),%eax
    lea    0x14(%edx),%ebx
    mov    %eax,0x1b0(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x1b4(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x1b8(%esp)
    mov    0x8(%ebx),%eax
    mov    %eax,0x1bc(%esp)
    mov    0x20(%edx),%al
    mov    %al,0x1c0(%esp)
    mov    0x21(%edx),%ax
    mov    %ax,0x1c1(%esp)
    mov    0x23(%edx),%eax
    mov    %eax,0x1c3(%esp)
    mov    0x1a0(%esp),%eax
    mov    0x2(%eax),%eax
    sar    $0x10,%eax
    mov    %eax,0x1a0(%esp)
    mov    0x1a4(%esp),%eax
    mov    0x2(%eax),%eax
    mov    $0x27,%ebx
    sar    $0x10,%eax
    lea    0x1a0(%esp),%edx
    mov    %eax,0x1a4(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    inc    %ecx
    cmp    0x49c3(%eax),%cx
    jl     jump_20ef8
  jump_20fc3:
    mov    0x1e8(%esp),%edx
    mov    $0x2710,%ebx
    mov    %ebp,%eax
    add    $0x32ddb,%edx
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    0x32dcf(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x228(%esp),%edx
    mov    %eax,0x228(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    %esp,%eax
    add    $0x192,%eax
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    mov    0x1e8(%esp),%eax
    xor    %ecx,%ecx
    mov    0x32dd1(%eax),%si
    mov    %cx,0x234(%esp)
    test   %si,%si
    jle    jump_21108
    add    $0x30701,%eax
    mov    %eax,0x230(%esp)
  jump_2104e:
    mov    0x232(%esp),%edx
    sar    $0x10,%edx
    imul   $0x19e,%edx,%edx
    mov    0x230(%esp),%ebx
    mov    $0x64,%ecx
    add    %ebx,%edx
    mov    %esp,%edi
    mov    %edx,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x190(%edx),%ax
    mov    %ax,0x190(%esp)
    mov    0x192(%edx),%eax
    mov    %eax,0x192(%esp)
    mov    0x196(%edx),%eax
    add    $0x192,%edx
    mov    %eax,0x196(%esp)
    mov    0x8(%edx),%eax
    mov    0x190(%esp),%edi
    mov    %eax,0x19a(%esp)
    xor    %eax,%eax
    test   %di,%di
    jle    jump_210d3
  jump_210b9:
    movswl %ax,%edx
    mov    (%esp,%edx,4),%ebx
    mov    0x2(%ebx),%ebx
    sar    $0x10,%ebx
    mov    %ebx,(%esp,%edx,4)
    inc    %eax
    cmp    0x190(%esp),%ax
    jl     jump_210b9
  jump_210d3:
    mov    $0x19e,%ebx
    mov    %esp,%edx
    mov    %ebp,%eax
    mov    0x234(%esp),%edi
    call   func_1c098
    mov    0x1e8(%esp),%edx
    inc    %edi
    mov    0x32dd1(%edx),%bx
    mov    %di,0x234(%esp)
    cmp    %bx,%di
    jl     jump_2104e
  jump_21108:
    mov    0x1e8(%esp),%eax
    mov    0x306f0(%eax),%eax
    mov    $0x4,%ebx
    sar    $0x10,%eax
    lea    0x22c(%esp),%edx
    mov    %eax,0x22c(%esp)
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    mov    jump_306f2(%eax),%si
    xor    %ecx,%ecx
    test   %si,%si
    jle    jump_21173
    lea    0x3067d(%eax),%esi
  jump_2114d:
    movswl %cx,%eax
    imul   $0xd,%eax,%eax
    mov    $0xd,%ebx
    lea    (%esi,%eax,1),%edx
    mov    %ebp,%eax
    call   func_1c098
    mov    0x1e8(%esp),%eax
    inc    %ecx
    cmp    jump_306f2(%eax),%cx
    jl     jump_2114d
  jump_21173:
    add    $0x238,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_21180:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1e0,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    $0x20,%ebx
    lea    0x1a0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    cmpl   $0x1d72,0x1a0(%esp)
    je     jump_211c0
    mov    $0x9bd,%ebx
    mov    $data_80dbc,%edx
    xor    %eax,%eax
    call   func_25878
  jump_211c0:
    cmpl   $0x60,0x1a4(%esp)
    je     jump_211db
    mov    $0x9be,%ebx
    mov    $data_80dca,%edx
    xor    %eax,%eax
    call   func_25878
  jump_211db:
    cmpl   $0x7b,0x1a8(%esp)
    je     jump_211f6
    mov    $0x9bf,%ebx
    mov    $data_80dd8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_211f6:
    cmpl   $0x1ee,0x1ac(%esp)
    je     jump_21214
    mov    $0x9c0,%ebx
    mov    $data_80de6,%edx
    xor    %eax,%eax
    call   func_25878
  jump_21214:
    cmpl   $0x27,0x1b0(%esp)
    je     jump_2122f
    mov    $0x9c1,%ebx
    mov    $data_80df4,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2122f:
    cmpl   $0x19e,0x1b4(%esp)
    je     jump_2124d
    mov    $0x9c2,%ebx
    mov    $data_80e02,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2124d:
    cmpl   $0xd,0x1b8(%esp)
    je     jump_21268
    mov    $0x9c3,%ebx
    mov    $data_80e10,%edx
    xor    %eax,%eax
    call   func_25878
  jump_21268:
    cmpl   $0x354ef,0x1bc(%esp)
    je     jump_21286
    mov    $0x9c4,%ebx
    mov    $data_80e1e,%edx
    xor    %eax,%eax
    call   func_25878
  jump_21286:
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %eax,(%edi)
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    lea    0xdb5(%edi),%ebp
    shl    $0x5,%eax
    mov    $0x4,%ebx
    lea    (%eax,%ebp,1),%edx
    mov    %esi,%eax
    mov    %edx,0x306f4(%edi)
    lea    0x1c0(%esp),%edx
    call   func_1bf94
    mov    0x1c0(%esp),%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    sub    %edx,%eax
    lea    0x18247(%edi),%edx
    mov    $0x4,%ebx
    add    %eax,%edx
    mov    %esi,%eax
    mov    %edx,0x306f8(%edi)
    lea    0x1c0(%esp),%edx
    call   func_1bf94
    mov    0x1c0(%esp),%al
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %al,0x30700(%edi)
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %eax,0x306fc(%edi)
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %eax,data_f4734
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %eax,data_f4738
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    $0xffffffff,%ebx
    mov    %esi,%edx
    mov    %eax,data_f473c
    mov    $data_f4744,%eax
    call   func_423f0
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    xor    %ecx,%ecx
    mov    %ax,0x3335(%edi)
    test   %ax,%ax
    jle    jump_213ff
  jump_213e1:
    movswl %cx,%eax
    imul   $0x60,%eax,%eax
    mov    $0xffffffff,%ebx
    mov    %esi,%edx
    add    %ebp,%eax
    inc    %ecx
    call   func_1d8e0
    cmp    0x3335(%edi),%cx
    jl     jump_213e1
  jump_213ff:
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    %ax,0x18245(%edi)
    lea    0x49c5(%edi),%ebp
    mov    0x18243(%edi),%ebx
    mov    %ebp,%edx
    sar    $0x10,%ebx
    mov    %esi,%eax
    shl    $0x2,%ebx
    call   func_1bf94
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    xor    %ecx,%ecx
    mov    %ax,0x27283(%edi)
    test   %ax,%ax
    jle    jump_214c6
    lea    0x18247(%edi),%eax
    mov    %eax,0x1cc(%esp)
  jump_21470:
    movswl %cx,%eax
    imul   $0x7b,%eax,%eax
    mov    %eax,0x1c4(%esp)
    mov    0x1cc(%esp),%eax
    mov    0x1c4(%esp),%edx
    mov    $0xffffffff,%ebx
    add    %edx,%eax
    mov    %esi,%edx
    call   func_359a8
    mov    0x1c4(%esp),%eax
    mov    %ebp,0x18257(%edi,%eax,1)
    mov    0x18261(%edi,%eax,1),%ax
    and    $0xffff,%eax
    inc    %ecx
    shl    $0x2,%eax
    mov    0x27283(%edi),%dx
    add    %eax,%ebp
    cmp    %dx,%cx
    jl     jump_21470
  jump_214c6:
    xor    %eax,%eax
    jmp    jump_214e3
  jump_214ca:
    imul   $0x162,%edx,%edx
    movw   $0xffff,0x272db(%edx,%edi,1)
    inc    %eax
    movb   $0x0,0x272dd(%edx,%edi,1)
  jump_214e3:
    movswl %ax,%edx
    cmp    $0x6b,%edx
    jl     jump_214ca
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    lea    0x27285(%edi),%ebp
    mov    0x1c0(%esp),%eax
    xor    %ecx,%ecx
    mov    %ax,0x3067b(%edi)
    jmp    jump_21517
  jump_21516:
    inc    %ecx
  jump_21517:
    movswl %cx,%eax
    cmp    $0x6b,%eax
    jge    jump_21556
    cmp    0x3067b(%edi),%cx
    jge    jump_21516
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    imul   $0x162,0x1c0(%esp),%eax
    mov    %esi,%edx
    mov    $0xffffffff,%ebx
    add    %ebp,%eax
    call   func_46274
    jmp    jump_21516
  jump_21556:
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    xor    %ecx,%ecx
    mov    %ax,0xd88(%edi)
    test   %ax,%ax
    jle    jump_215a2
    lea    0x6(%edi),%ebp
  jump_21581:
    movswl %cx,%eax
    imul   $0x1ee,%eax,%eax
    mov    $0xffffffff,%ebx
    mov    %esi,%edx
    add    %ebp,%eax
    inc    %ecx
    call   func_3f638
    cmp    0xd88(%edi),%cx
    jl     jump_21581
  jump_215a2:
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    xor    %ebx,%ebx
    mov    0x1c0(%esp),%eax
    mov    %bx,0x1d8(%esp)
    mov    %ax,0x49c3(%edi)
    test   %ax,%ax
    jle    jump_21695
    lea    0x3337(%edi),%eax
    mov    %eax,0x1d0(%esp)
    lea    0xdb5(%edi),%eax
    mov    %eax,0x1c8(%esp)
  jump_215f0:
    mov    0x1d6(%esp),%ebp
    sar    $0x10,%ebp
    imul   $0x27,%ebp,%ebp
    mov    0x1d0(%esp),%ecx
    mov    $0x27,%ebx
    add    %ebp,%ecx
    mov    %esi,%eax
    mov    %ecx,%edx
    call   func_1bf94
    imul   $0x60,0x3337(%edi,%ebp,1),%ebx
    add    0x1c8(%esp),%ebx
    imul   $0x60,0x333b(%edi,%ebp,1),%eax
    mov    0x1c8(%esp),%edx
    mov    %ebx,0x3337(%edi,%ebp,1)
    add    %edx,%eax
    mov    %eax,0x333b(%edi,%ebp,1)
    mov    0x44(%ebx),%dx
    mov    %dx,0x1d4(%esp)
    mov    0x1d2(%esp),%ebp
    inc    %edx
    sar    $0x10,%ebp
    mov    %dx,0x44(%ebx)
    mov    %ecx,0x2c(%ebx,%ebp,4)
    mov    0x44(%eax),%dx
    movswl %dx,%ebx
    inc    %edx
    shl    $0x2,%ebx
    mov    %dx,0x44(%eax)
    add    %ebx,%eax
    mov    %ecx,0x2c(%eax)
    mov    0x1d8(%esp),%eax
    inc    %eax
    mov    0x49c3(%edi),%dx
    mov    %ax,0x1d8(%esp)
    cmp    %dx,%ax
    jl     jump_215f0
  jump_21695:
    mov    $0x2710,%ebx
    lea    0x32ddb(%edi),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    mov    %ax,0x32dd1(%edi)
    mov    %esp,%eax
    add    $0x192,%eax
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    xor    %ebx,%ebx
    mov    0x32dd1(%edi),%cx
    mov    %ebx,0x1dc(%esp)
    test   %cx,%cx
    jle    jump_2174c
    lea    0xdb5(%edi),%ecx
  jump_216fe:
    mov    $0x19e,%ebx
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x190(%esp),%edx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_21731
  jump_2171a:
    movswl %ax,%edx
    imul   $0x60,(%esp,%edx,4),%ebx
    add    %ecx,%ebx
    mov    %ebx,(%esp,%edx,4)
    inc    %eax
    cmp    0x190(%esp),%ax
    jl     jump_2171a
  jump_21731:
    mov    0x1dc(%esp),%eax
    inc    %eax
    mov    0x32dd1(%edi),%dx
    mov    %eax,0x1dc(%esp)
    cmp    %dx,%ax
    jl     jump_216fe
  jump_2174c:
    mov    $0x4,%ebx
    lea    0x1c0(%esp),%edx
    mov    %esi,%eax
    call   func_1bf94
    mov    0x1c0(%esp),%eax
    xor    %ecx,%ecx
    mov    %ax,jump_306f2(%edi)
    test   %ax,%ax
    jle    jump_21799
    lea    0x3067d(%edi),%ebp
  jump_2177a:
    movswl %cx,%eax
    imul   $0xd,%eax,%eax
    mov    $0xd,%ebx
    lea    (%eax,%ebp,1),%edx
    mov    %esi,%eax
    inc    %ecx
    call   func_1bf94
    cmp    jump_306f2(%edi),%cx
    jl     jump_2177a
  jump_21799:
    mov    %edi,%eax
    call   func_1e7d8
    add    $0x1e0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_217ac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x6c,%esp
    mov    %eax,%ecx
    mov    $0x38,%ebx
    mov    %esp,%eax
    xor    %edx,%edx
    xor    %edi,%edi
    mov    %edx,0x44(%esp)
    mov    %edx,0x48(%esp)
    mov    %edx,0x4c(%esp)
    call   func_72280
    mov    0xd88(%ecx),%dx
    movw   $0x0,0x32dd3(%ecx)
    test   %dx,%dx
    jle    jump_21911
    jmp    jump_2183b
  jump_217ee:
    mov    0xd86(%ecx),%ebx
    sar    $0x10,%ebx
    dec    %ebx
    mov    %ebx,0x68(%esp)
    movswl %di,%eax
    fildl  0x68(%esp)
    fdivrl (%esp,%eax,8)
    fstpl  (%esp,%eax,8)
    filds  0x32dd3(%ecx)
    fld    %st(0)
    faddl  (%esp,%eax,8)
    inc    %edi
    fstp   %st(1)
    call   func_72258
    fistpl 0x68(%esp)
    mov    0x68(%esp),%eax
    mov    0xd88(%ecx),%bx
    mov    %ax,0x32dd3(%ecx)
    cmp    %bx,%di
    jge    jump_21911
  jump_2183b:
    mov    0xd88(%ecx),%si
    xor    %edx,%edx
    test   %si,%si
    jle    jump_217ee
    movswl %di,%esi
  jump_2184c:
    cmp    %dx,%di
    je     jump_218fe
    movswl %dx,%eax
    imul   $0x1ee,%eax,%eax
    mov    0xd(%ecx,%eax,1),%ebx
    imul   $0x1ee,%esi,%eax
    lea    0x50(%esp),%ebp
    mov    0xd(%ecx,%eax,1),%eax
    mov    %ebp,0x64(%esp)
    xor    %ebp,%ebp
    mov    %ebp,0x38(%esp)
    mov    %ebp,0x3c(%esp)
    mov    %ebp,0x40(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%ebx)
    fstps  0x38(%esp)
    flds   0xc(%eax)
    fsubs  0xc(%ebx)
    add    $0x8,%eax
    fstps  0x3c(%esp)
    flds   0x8(%eax)
    fsubs  0x10(%ebx)
    mov    0x38(%esp),%eax
    fstps  0x40(%esp)
    flds   0x3c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x50(%esp)
    mov    0x3c(%esp),%eax
    flds   0x38(%esp)
    fmul   %st(0),%st
    mov    %eax,0x54(%esp)
    faddp  %st,%st(1)
    mov    0x40(%esp),%eax
    flds   0x40(%esp)
    fmul   %st(0),%st
    mov    %eax,0x58(%esp)
    mov    0x38(%esp),%eax
    add    $0x8,%ebx
    mov    %eax,0x44(%esp)
    mov    0x3c(%esp),%eax
    lea    (%esp,%esi,8),%ebx
    mov    %eax,0x48(%esp)
    mov    0x40(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x4c(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    faddl  (%ebx)
    fstpl  (%ebx)
  jump_218fe:
    inc    %edx
    cmp    0xd88(%ecx),%dx
    jge    jump_217ee
    jmp    jump_2184c
  jump_21911:
    mov    0x32dd3(%ecx),%ax
    mov    0xd88(%ecx),%bx
    cwtd
    idiv   %bx
    mov    %ax,0x32dd3(%ecx)
    add    $0x6c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_21940:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x85988,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x7,%edx
    call   func_729cc
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_21960:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x8599c,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x64,%edx
    call   func_729cc
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_21980:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x8594c,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x6b,%edx
    call   func_729cc
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_219a0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x85924,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x18,%edx
    call   func_729cc
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_219c0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x85938,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x9,%edx
    call   func_729cc
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_219e0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x85960,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x1f4,%edx
    call   func_729cc
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_21a00:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x85974,%ebx /* Warning: address points to a valid object/reloc, but no label found */
    mov    $0x94,%edx
    call   func_729cc
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_21a20:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_21a30:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_21a40:
/*----------------------------------------------------------------*/
    add    $0x8,%eax
    movl   $0x0,(%eax)
    add    $0xc,%eax
    movl   $0x0,-0x8(%eax)
    movl   $0x0,-0x4(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    sub    $0x14,%eax
    ret


/*----------------------------------------------------------------*/
func_21a80:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_21a90:
/*----------------------------------------------------------------*/
    inc    %eax
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    dec    %eax
    ret


/*----------------------------------------------------------------*/
func_21ab0:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_21ac0:
/*----------------------------------------------------------------*/
    add    $0x192,%eax
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%eax)
    sub    $0x192,%eax
    ret


/*----------------------------------------------------------------*/
func_21ae0:
/*----------------------------------------------------------------*/
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movw   $0x0,0x1a(%eax)
    movl   $0x0,0x10(%eax)
    movl   $0x0,0x5a(%eax)
    ret


/*----------------------------------------------------------------*/
func_21b10:
/*----------------------------------------------------------------*/
    sub    $0x8,%esp
    mov    (%eax),%eax
    mov    0xd(%eax),%eax
    mov    %eax,0x4(%esp)
    mov    (%edx),%eax
    mov    0xd(%eax),%eax
    flds   0x4(%esp)
    mov    %eax,(%esp)
    xor    %edx,%edx
    fcomps (%esp)
    fnstsw %ax
    sahf
    jbe    jump_21b39
    mov    $0xffffffff,%edx
    jmp    jump_21b40
  jump_21b39:
    jae    jump_21b40
    mov    $0x1,%edx
  jump_21b40:
    mov    %edx,%eax
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_21b48:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    $0x1,%ebx
    mov    $data_80e2c,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    call   func_521dc
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_21b75
    mov    $0x69,%ebx
    mov    $data_80e39,%edx
    call   func_25878
  jump_21b75:
    movl   $0x0,0xab(%ecx)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_21b84:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    call   func_2bf10
    add    $0xda,%eax
    call   func_1b4f0
    add    $0x98,%eax
    call   func_24b84
    movl   $data_85a4c,-0xcb(%eax)
    movl   $0x0,-0xc7(%eax)
    movl   $0x0,-0xc3(%eax)
    movl   $0x0,-0xbf(%eax)
    movw   $0x0,-0xbb(%eax)
    movl   $0x0,-0xb7(%eax)
    movl   $0x0,-0xb2(%eax)
    movl   $0xffffffff,-0xae(%eax)
    movl   $0xffffffff,-0xaa(%eax)
    movl   $0xffffffff,-0xa6(%eax)
    movl   $0xffffffff,-0xa2(%eax)
    movl   $0x0,-0x9e(%eax)
    movl   $0x0,0x420(%eax)
    movb   $0xff,-0x9a(%eax)
    movl   $0x2,0x40c(%eax)
    movl   $0x0,0x41c(%eax)
    mov    $0x1,%dl
    movl   $0x0,0x418(%eax)
    mov    data_f458e,%cl
    movl   $0x0,0x410(%eax)
    sub    $0x172,%eax
    shl    %cl,%dl
    mov    %dl,0xd9(%eax)
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_21c68:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_21c89
    mov    $0x85a08,%edx /* Warning: address points to a valid object/reloc, but no label found */
    call   func_720fc
    call   func_7211c
    jmp    jump_21d1b
  jump_21c89:
    mov    0xab(%eax),%edx
    movl   $data_85a4c,0xa7(%eax)
    test   %edx,%edx
    je     jump_21ca4
    mov    %edx,%eax
    call   func_2595c
  jump_21ca4:
    mov    0xab(%ebx),%eax
    call   func_7211c
    mov    0xaf(%ebx),%esi
    test   %esi,%esi
    je     jump_21cc0
    mov    %esi,%eax
    call   func_2595c
  jump_21cc0:
    mov    0xaf(%ebx),%eax
    call   func_7211c
    mov    0xb3(%ebx),%edi
    test   %edi,%edi
    je     jump_21cdc
    mov    %edi,%eax
    call   func_2595c
  jump_21cdc:
    mov    0xb3(%ebx),%eax
    call   func_7211c
    xor    %edx,%edx
    lea    0x172(%ebx),%eax
    call   func_24b90
    sub    $0x98,%eax
    xor    %edx,%edx
    call   func_1b66c
    mov    $0x1,%edx
    sub    $0xda,%eax
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_21d1b
    call   func_72124
  jump_21d1b:
    mov    %ebx,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_21d24:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x118,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    test   %edx,%edx
    jne    jump_21d49
    mov    $0x9e,%ebx
    mov    $data_80e47,%edx
    xor    %eax,%eax
    call   func_25878
  jump_21d49:
    test   %ebp,%ebp
    jne    jump_21d5e
    mov    $0x9f,%ebx
    mov    $data_80e55,%edx
    xor    %eax,%eax
    call   func_25878
  jump_21d5e:
    mov    %esp,%eax
    call   func_1bb78
    mov    0xab(%esi),%edx
    test   %edx,%edx
    je     jump_21d76
    mov    %edx,%eax
    call   func_2595c
  jump_21d76:
    mov    0xab(%esi),%eax
    mov    $0x200,%ebx
    call   func_7211c
    mov    %edi,%edx
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    je     jump_21da6
    mov    $0xaa,%ebx
    mov    $data_80e63,%edx
    xor    %eax,%eax
    call   func_25888
  jump_21da6:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,0xab(%esi)
    test   %eax,%eax
    jne    jump_21dc8
    mov    $0xac,%ebx
    mov    $data_80e71,%edx
    call   func_25878
  jump_21dc8:
    mov    0xaf(%esi),%ecx
    test   %ecx,%ecx
    je     jump_21dd9
    mov    %ecx,%eax
    call   func_2595c
  jump_21dd9:
    mov    0xaf(%esi),%eax
    mov    $0x200,%ebx
    call   func_7211c
    mov    %ebp,%edx
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    je     jump_21e09
    mov    $0xb5,%ebx
    mov    $data_80e7f,%edx
    xor    %eax,%eax
    call   func_25888
  jump_21e09:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,0xaf(%esi)
    test   %eax,%eax
    jne    jump_21e2b
    mov    $0xb7,%ebx
    mov    $data_80e8d,%edx
    call   func_25878
  jump_21e2b:
    mov    0x10(%esi),%ax
    sub    0x8(%esi),%ax
    mov    0xc(%esi),%cx
    mov    %ax,0x576(%esi)
    mov    %eax,%ebx
    mov    0x14(%esi),%ax
    sar    %bx
    sub    %ecx,%eax
    mov    %bx,0x576(%esi)
    mov    %eax,%edi
    sar    %di
    mov    %esi,%eax
    mov    %di,0x578(%esi)
    call   func_21eec
    mov    0xb3(%esi),%ebp
    mov    $0x163,%ecx
    test   %ebp,%ebp
    je     jump_21e79
    mov    %ebp,%eax
    call   func_2595c
  jump_21e79:
    mov    0xb3(%esi),%eax
    movswl %cx,%edi
    call   func_7211c
    lea    0x0(,%edi,4),%eax
    add    %edi,%eax
    shl    $0x2,%eax
    mov    $data_80e9b,%ebx
    add    %edi,%eax
    mov    $0x1,%edx
    call   func_729c4
    call   func_2593c
    mov    %eax,0xb3(%esi)
    test   %eax,%eax
    jne    jump_21ec2
    mov    $0xcc,%ebx
    mov    $data_80eab,%edx
    call   func_25878
  jump_21ec2:
    mov    %esp,%eax
    movw   $0x0,0xb7(%esi)
    xor    %edx,%edx
    mov    %cx,0xb9(%esi)
    call   func_1bbc8
    mov    $0xffffffff,%eax
    add    $0x118,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_21eec:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    movl   $0x420c0000,0x57a(%eax)
    mov    0x574(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    push   $0x47c35000
    push   $0x3f800000
    lea    0xda(%edx),%eax
    push   0x57a(%edx)
    call   func_1b808
    lea    0x10e(%edx),%eax
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    add    $0x14e,%edx
    movl   $0xc4bb8000,0x8(%eax)
    movl   $0x3f800000,(%edx)
    movl   $0x0,0x4(%edx)
    lea    0xc(%edx),%eax
    movl   $0x0,0x8(%edx)
    movl   $0x0,(%eax)
    movl   $0x3f800000,0x4(%eax)
    add    $0x18,%edx
    movl   $0x0,0x8(%eax)
    movl   $0x0,(%edx)
    movl   $0x0,0x4(%edx)
    movl   $0x3f800000,0x8(%edx)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_21f84:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3c,%esp
    mov    %eax,%esi
    mov    %dx,0x38(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ecx,0x2c(%esp)
    mov    %edx,%eax
    cmp    $0x1a,%dx
    jb     jump_2321a
    jbe    jump_2262a
    cmp    $0x3b,%dx
    jb     jump_2317a
    jbe    jump_22e68
    cmp    $0x3e,%dx
    jb     jump_2311e
    jbe    jump_22c74
    cmp    $0x3f,%dx
    jbe    jump_22f22
    cmp    $0x42,%dx
    je     jump_22fd7
  jump_21fdf:
    mov    0x36(%esp),%edx
    mov    0x2c(%esp),%ecx
    mov    0x10(%esp),%ebx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2eb04
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_21ffc:
    mov    $0x1,%al
    mov    data_93b98,%cl
    shl    %cl,%al
    xor    %ebx,%ebx
    dec    %al
    mov    %ebx,0xc(%esp)
    mov    %al,0xd9(%esi)
    jmp    jump_22028
  jump_22016:
    mov    0xc(%esp),%ebx
    inc    %ebx
    mov    %ebx,0xc(%esp)
    cmp    $0x7,%ebx
    jge    jump_220b6
  jump_22028:
    mov    0xc(%esp),%cl
    mov    $0x1,%eax
    shl    %cl,%eax
    xor    %ebp,%ebp
    mov    %ax,0x34(%esp)
    xor    %edx,%edx
    mov    0x32(%esp),%eax
    mov    0xd9(%esi),%dl
    sar    $0x10,%eax
    mov    %ebp,0x8(%esp)
    test   %eax,%edx
    je     jump_2206d
    movl   $0x1,0x8(%esp)
    xor    %edx,%edx
    mov    0xd8(%esi),%dl
    test   %eax,%edx
    je     jump_2206d
    movl   $0x5,0x8(%esp)
  jump_2206d:
    xor    %ecx,%ecx
    xor    %edi,%edi
    mov    %ecx,0x28(%esp)
    jmp    jump_220a2
  jump_22077:
    mov    0x67(%esi),%eax
    mov    0x32(%esp),%ebx
    mov    (%edi,%eax,1),%eax
    mov    0x8(%esp),%ecx
    mov    $0x9,%edx
    mov    0xa7(%eax),%ebp
    sar    $0x10,%ebx
    call   *0x8(%ebp)
    mov    0x28(%esp),%ebp
    inc    %ebp
    add    $0x4,%edi
    mov    %ebp,0x28(%esp)
  jump_220a2:
    mov    0x69(%esi),%eax
    mov    0x28(%esp),%ecx
    sar    $0x10,%eax
    cmp    %ecx,%eax
    jle    jump_22016
    jmp    jump_22077
  jump_220b6:
    push   $0x0
    mov    $0x3b,%ebx
    mov    $data_fa35c,%eax
    mov    $0x168,%ebp
    mov    0x41(%esi),%edx
    push   $0x0
    xor    %ecx,%ecx
    xor    %edi,%edi
    call   func_517c4
    mov    %edi,0x24(%esp)
    movl   $0x0,0xc0(%esi)
    xor    %ecx,%ecx
    jmp    jump_2217b
  jump_220ea:
    flds   0x24(%esp)
    fmuls  0x859c4 /* Warning: address points to a valid object/reloc, but no label found */
    fstpl  (%esp)
    mov    0x4(%esp),%eax
    push   %eax
    mov    0x4(%esp),%edx
    push   %edx
    mov    0xc(%esp),%ebx
    call   func_729a6
    fmull  data_80f45
    push   %ebx
    filds  0x576(%esi)
    fsubp  %st,%st(1)
    push   %edx
    call   func_72258
    fistpl 0x38(%esp)
    mov    0x38(%esp),%eax
    mov    %ebp,%edx
    mov    %ax,data_c846c(%edi)
    call   func_7299a
    fmull  data_80f45
    sar    $0x1f,%edx
    filds  0x578(%esi)
    fsubp  %st,%st(1)
    mov    data_93b96,%ebx
    call   func_72258
    fistpl 0x30(%esp)
    mov    0x30(%esp),%eax
    sar    $0x10,%ebx
    mov    %ax,data_c846e(%edi)
    mov    %ebp,%eax
    idiv   %ebx
    mov    %eax,0x30(%esp)
    add    $0x4,%edi
    fildl  0x30(%esp)
    fadds  0x24(%esp)
    inc    %ecx
    fstps  0x24(%esp)
  jump_2217b:
    mov    data_93b96,%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jl     jump_220ea
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jne    jump_22264
    movl   $0x11,0x8(%esi)
    movl   $0xc,0xc(%esi)
    movl   $0x144,0x10(%esi)
    mov    0x10(%esi),%ax
    mov    0x8(%esi),%cx
    movl   $0x140,0x14(%esi)
    sub    %ecx,%eax
    mov    0xc(%esi),%dx
    mov    %ax,0x576(%esi)
    mov    %eax,%edi
    mov    0x14(%esi),%ax
    sar    %di
    sub    %edx,%eax
    mov    %di,0x576(%esi)
    mov    %ax,0x578(%esi)
    mov    %eax,%ebx
    mov    0x574(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    movl   $0x420c0000,0x57a(%esi)
    push   $0x47c35000
    sar    %bx
    push   $0x3f800000
    lea    0xda(%esi),%eax
    push   0x57a(%esi)
    mov    %bx,0x578(%esi)
    call   func_1b808
    movl   $0x1,0xc0(%esi)
    movl   $0x0,0xc4(%esi)
    movl   $0x0,0xc8(%esi)
    movl   $0x0,0xcc(%esi)
    movl   $0x0,0xd0(%esi)
    movl   $0x0,0x58a(%esi)
    movb   $0xff,0xd8(%esi)
  jump_22264:
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x7,%eax
    setne  %al
    and    $0xff,%eax
    dec    %eax
    mov    %eax,0xd4(%esi)
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0xd,%eax
    jne    jump_223b5
    movl   $0x143,0x10(%esi)
    mov    0x8(%esi),%cx
    mov    0x10(%esi),%ax
    movl   $0x13b,0x14(%esi)
    sub    %ecx,%eax
    mov    0xc(%esi),%dx
    mov    %ax,0x576(%esi)
    mov    %eax,%edi
    mov    0x14(%esi),%ax
    sar    %di
    sub    %edx,%eax
    mov    %di,0x576(%esi)
    mov    %ax,0x578(%esi)
    mov    %eax,%ebx
    mov    0x574(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    movl   $0x420c0000,0x57a(%esi)
    push   $0x47c35000
    sar    %bx
    push   $0x3f800000
    lea    0xda(%esi),%eax
    push   0x57a(%esi)
    mov    %bx,0x578(%esi)
    call   func_1b808
    mov    0x6b(%esi),%cx
    xor    %edi,%edi
    test   %cx,%cx
    jle    jump_22333
    mov    $0xfffffe2d,%ebp
  jump_22316:
    movswl %di,%eax
    mov    0x67(%esi),%edx
    mov    (%edx,%eax,4),%eax
    xor    %ebx,%ebx
    mov    0xa7(%eax),%ecx
    mov    %ebp,%edx
    inc    %edi
    call   *0x4(%ecx)
    cmp    0x6b(%esi),%di
    jl     jump_22316
  jump_22333:
    xor    %eax,%eax
    push   $0x7
    mov    data_86775,%al
    push   $0x150
    xor    %edx,%edx
    mov    data_efd52(,%eax,2),%ax
    push   $0x0
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   $data_c850c
    call   func_57efc
    mov    $0x8,%ebx
    mov    $0x151,%edx
    add    $0x14,%esp
    xor    %ecx,%ecx
    mov    $data_c850c,%eax
    mov    data_86775,%cl
    call   func_4f228
    xor    %edx,%edx
    mov    data_86775,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e17(,%eax,2),%al
    xor    %ah,%ah
    add    $0x8,%eax
    xor    %ebx,%ebx
    movswl %ax,%edx
    mov    $data_f8638,%eax
    call   func_4acbc
  jump_223b5:
    mov    %esi,%eax
    call   func_24410
    lea    0x172(%esi),%eax
    call   func_24b90
    mov    %esi,%eax
    call   func_2390c
    movl   $0xffffffff,0x39(%esi)
    xor    %edx,%edx
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    movl   $0xffffffff,0x35(%esi)
    call   *0xc(%ebx)
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    je     jump_22621
    xor    %edi,%edi
    xor    %ebp,%ebp
    jmp    jump_2240c
  jump_22400:
    add    $0x4,%edi
    cmp    $0x50,%edi
    je     jump_22621
  jump_2240c:
    mov    0x67(%esi),%eax
    add    %edi,%eax
    mov    (%eax),%edx
    cmp    %edx,%ebp
    je     jump_22400
    lea    0x20(%edx),%eax
    mov    $data_80eb9,%edx
    call   func_72130
    test   %eax,%eax
    jne    jump_22435
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_22400
  jump_22435:
    mov    0x2c(%esp),%ebx
    mov    0x67(%esi),%eax
    mov    0x10(%esp),%ecx
    push   %ebx
    mov    (%edi,%eax,1),%edx
    mov    0x3a(%esp),%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%edx),%edx
    sar    $0x10,%ebx
    call   func_520f4
    jmp    jump_22400
  jump_2245a:
    mov    $0xffffffff,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51884
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_22481
    xor    %edx,%edx
    mov    %edx,data_11f0f8
  jump_22481:
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0xd,%eax
    jne    jump_22557
    mov    0x6b(%esi),%dx
    xor    %edi,%edi
    test   %dx,%dx
    jle    jump_224db
  jump_2249d:
    movswl %di,%ecx
    mov    0x67(%esi),%eax
    mov    (%eax,%ecx,4),%eax
    mov    0xa7(%eax),%ebp
    mov    $0x1d3,%edx
    xor    %ebx,%ebx
    call   *0x4(%ebp)
    mov    0x67(%esi),%eax
    mov    0x36(%esp),%edx
    mov    0x10(%esp),%ebx
    mov    (%eax,%ecx,4),%eax
    sar    $0x10,%edx
    mov    0xa7(%eax),%ebp
    mov    0x2c(%esp),%ecx
    inc    %edi
    call   *0x8(%ebp)
    cmp    0x6b(%esi),%di
    jl     jump_2249d
  jump_224db:
    movl   $0x1d1,0x10(%esi)
    mov    0x8(%esi),%cx
    mov    0x10(%esi),%ax
    movl   $0x1d8,0x14(%esi)
    sub    %ecx,%eax
    mov    0xc(%esi),%dx
    mov    %ax,0x576(%esi)
    mov    %eax,%edi
    mov    0x14(%esi),%ax
    sar    %di
    sub    %edx,%eax
    mov    %di,0x576(%esi)
    mov    %ax,0x578(%esi)
    mov    %eax,%ebx
    mov    0x574(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    movl   $0x420c0000,0x57a(%esi)
    push   $0x47c35000
    sar    %bx
    push   $0x3f800000
    lea    0xda(%esi),%eax
    push   0x57a(%esi)
    mov    %bx,0x578(%esi)
    call   func_1b808
    jmp    jump_2260b
  jump_22557:
    cmp    $0x3,%eax
    jne    jump_2260b
    movl   $0x7,0x8(%esi)
    movl   $0x7,0xc(%esi)
    movl   $0x1d1,0x10(%esi)
    mov    0x10(%esi),%ax
    mov    0x8(%esi),%bx
    movl   $0x1d8,0x14(%esi)
    sub    %ebx,%eax
    mov    0xc(%esi),%di
    mov    %ax,0x576(%esi)
    mov    %eax,%ecx
    mov    0x14(%esi),%ax
    sar    %cx
    sub    %edi,%eax
    mov    %cx,0x576(%esi)
    sar    %ax
    mov    %ax,0x578(%esi)
    mov    0x574(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   $0x47c35000
    movl   $0x420c0000,0x57a(%esi)
    push   $0x3f800000
    lea    0xda(%esi),%eax
    push   0x57a(%esi)
    call   func_1b808
    movl   $0xffffffff,0xc4(%esi)
    movl   $0xffffffff,0xc8(%esi)
    movl   $0xffffffff,0xcc(%esi)
    movl   $0xffffffff,0xd0(%esi)
    movb   $0xff,0xd8(%esi)
  jump_2260b:
    mov    0x36(%esp),%edx
    mov    0x2c(%esp),%ecx
    mov    0x10(%esp),%ebx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2eb04
  jump_22621:
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2262a:
    mov    0x10(%esp),%al
    mov    %al,0xd9(%esi)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2263d:
    mov    %ebx,%eax
    cmp    0x8(%esi),%eax
    jle    jump_22621
    cmp    0x10(%esi),%eax
    jge    jump_22621
    mov    0x2c(%esp),%eax
    cmp    0xc(%esi),%eax
    jle    jump_22621
    cmp    0x14(%esi),%eax
    jge    jump_22621
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0xd,%eax
    jne    jump_22675
    mov    $data_86488,%ebx
    mov    $0x5,%edx
    mov    $data_fa35c,%eax
    jmp    jump_22695
  jump_22675:
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_2269c
    cmpb   $0x30,0x4f(%esi)
    je     jump_2269c
    mov    $0x5,%edx
    mov    $data_fa35c,%eax
    lea    0x4f(%esi),%ebx
  jump_22695:
    xor    %ecx,%ecx
    call   func_51f24
  jump_2269c:
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_226a8:
    mov    data_93b98,%cx
    inc    %eax
    add    %dl,%dl
    cmp    %cx,%ax
    jl     jump_226c8
    jmp    jump_22793
  jump_226bc:
    xor    %ebx,%ebx
    mov    0xd8(%esi),%bl
    mov    %ebx,0x20(%esp)
  jump_226c8:
    xor    %ebx,%ebx
    mov    0x20(%esp),%ecx
    mov    %dl,%bl
    test   %ecx,%ebx
    je     jump_226a8
    xor    %ecx,%ecx
    mov    data_f458e,%cl
    imul   $0x1ee,%ecx,%ecx
    movswl %ax,%ebx
    cmpb   $0x0,data_92fd6(%ecx,%ebx,1)
    je     jump_226a8
    imul   $0x1ee,%ebx,%ecx
    cmpl   $0x0,data_92e19(%ecx)
    jne    jump_226a8
    shl    $0x2,%ebx
    mov    data_c846a(%ebx),%ecx
    sar    $0x10,%ecx
    mov    0x10(%esp),%ebp
    lea    -0x32(%ecx),%edi
    cmp    %ebp,%edi
    jge    jump_226a8
    add    $0x32,%ecx
    cmp    %ebp,%ecx
    jle    jump_226a8
    mov    data_c846c(%ebx),%ebx
    sar    $0x10,%ebx
    mov    0x2c(%esp),%ebp
    lea    -0x32(%ebx),%ecx
    cmp    %ebp,%ecx
    jge    jump_226a8
    add    $0x32,%ebx
    cmp    %ebp,%ebx
    jle    jump_226a8
    mov    $0x1,%ecx
    mov    $0xd,%ebx
    mov    %al,data_86775
    mov    $data_fa35c,%eax
    mov    %ecx,%edx
    call   func_51f24
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22766:
    cmpl   $0x0,0xbb(%esi)
    je     jump_22793
    cmpl   $0x0,data_11f0f8
    jne    jump_22793
    mov    0x2c(%esp),%ebx
    mov    0x10(%esp),%edx
    mov    %esi,%eax
    call   func_242c0
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22793:
    cmpl   $0xffffffff,0x582(%esi)
    jne    jump_227b3
    mov    %esi,%eax
    mov    0xa7(%esi),%ebx
    movl   $0x0,0x582(%esi)
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_227b3:
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_227bf:
    cmpl   $0x0,data_90ba0
    je     jump_22621
    mov    0x58e(%esi),%edx
    not    %edx
    mov    %esi,%eax
    mov    %edx,0x58e(%esi)
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_227f0:
    cmpl   $0x0,data_90ba0
    je     jump_22621
    mov    data_977d3,%cx
    xor    %ebx,%ebx
    mov    $data_96147,%eax
    cmp    %cx,%bx
    jge    jump_2282d
  jump_22810:
    mov    $0x1,%dl
    mov    data_f458e,%cl
    shl    %cl,%dl
    or     %dl,0x20(%eax)
    inc    %ebx
    mov    data_977d3,%di
    add    $0x27,%eax
    cmp    %di,%bx
    jl     jump_22810
  jump_2282d:
    mov    %esi,%eax
    call   func_24410
    mov    %esi,%eax
    call   func_2390c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22851:
    cmpl   $0x0,data_90ba0
    je     jump_22621
    mov    data_96145,%di
    xor    %ebx,%ebx
    cmp    %di,%bx
    jge    jump_228a2
    mov    $0x1,%dl
    mov    data_f458e,%cl
    shl    %cl,%dl
  jump_22876:
    movswl %bx,%eax
    imul   $0x60,%eax,%eax
    mov    data_93bdc(%eax),%ch
    or     %dl,%ch
    mov    data_93bdb(%eax),%dh
    mov    %ch,data_93bdc(%eax)
    or     %dl,%dh
    mov    %dh,data_93bdb(%eax)
    inc    %ebx
    cmp    data_96145,%bx
    jl     jump_22876
  jump_228a2:
    mov    %esi,%eax
    call   func_24410
    mov    %esi,%eax
    call   func_2390c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_228c6:
    cmpl   $0x0,data_90ba0
    je     jump_22621
    mov    data_93b98,%dx
    xor    %ebx,%ebx
    mov    $data_92e16,%eax
    jmp    jump_228f0
  jump_228e3:
    mov    data_93b98,%dx
    inc    %ebx
    add    $0x1ee,%eax
  jump_228f0:
    cmp    %dx,%bx
    jge    jump_228a2
    movzbl data_f458e,%ebp
    imul   $0x1ee,%ebp,%edi
    mov    $data_92e16,%edx
    add    %edi,%edx
    cmp    %edx,%eax
    je     jump_228e3
    movswl %bx,%edx
    mov    %edx,%ecx
    imul   $0x1ee,%edx,%edx
    mov    %edx,0x30(%esp)
    mov    data_92feb(%edx),%dx
    mov    %dx,data_92fc8(%edi,%ecx,2)
    mov    0x30(%esp),%edx
    mov    data_92feb(%edx),%dx
    mov    %dx,0x1b2(%eax,%ebp,2)
    add    %ecx,%edi
    mov    $0x1,%cl
    mov    %cl,data_92fd6(%edi)
    mov    %cl,0x1c0(%eax,%ebp,1)
    mov    $0x1,%dl
    mov    data_93b98,%cl
    shl    %cl,%dl
    dec    %dl
    mov    %dl,0xd9(%esi)
    jmp    jump_228e3
  jump_22963:
    cmpl   $0x0,data_90ba0
    je     jump_22621
    cmp    $0x9,%ecx
    jne    jump_2297c
    mov    $0xff,%eax
    jmp    jump_2299f
  jump_2297c:
    mov    0x2c(%esp),%al
    mov    data_93b96,%edx
    sub    $0x2,%al
    sar    $0x10,%edx
    and    $0xff,%eax
    cmp    %edx,%eax
    jge    jump_229a4
    mov    0x2c(%esp),%al
    sub    $0x2,%al
    and    $0xff,%eax
  jump_2299f:
    call   func_1ced4
  jump_229a4:
    mov    $0x1,%ebx
    mov    $data_80ec4,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    call   func_521dc
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_229cf
    mov    $0x26c,%ebx
    mov    $data_80ece,%edx
    call   func_25878
  jump_229cf:
    mov    0xa7(%ecx),%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    %esi,%eax
    call   func_24410
    mov    %esi,%eax
    call   func_2390c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22a00:
    flds   data_11f108
    fcompl data_80f35
    fnstsw %ax
    sahf
    jbe    jump_22621
    flds   data_11f108
    fld    %st(0)
    fmull  data_80f3d
    fstp   %st(1)
    fstps  data_11f108
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22a34:
    flds   data_11f108
    fcomps data_80f29
    fnstsw %ax
    sahf
    jae    jump_22621
    flds   data_11f108
    fmull  data_80f2d
    fstps  data_11f108
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22a64:
    mov    %ecx,%eax
    cmp    $0x13,%ecx
    jb     jump_22aa0
    jbe    jump_228c6
    cmp    $0x26,%ecx
    jb     jump_22a8e
    jbe    jump_227f0
    cmp    $0x2e,%ecx
    je     jump_227bf
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22a8e:
    cmp    $0x1f,%ecx
    je     jump_22851
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22aa0:
    cmp    $0xc,%ecx
    jb     jump_22ab9
    jbe    jump_22a00
    cmp    $0xd,%ecx
    je     jump_22a34
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22ab9:
    cmp    $0x2,%ecx
    jb     jump_22621
    cmp    $0x9,%ecx
    jbe    jump_22963
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22ad4:
    mov    $0x1,%al
    mov    data_f458e,%cl
    shl    %cl,%al
    mov    %al,0xd9(%esi)
    mov    data_93b98,%dx
    xor    %eax,%eax
    cmp    %dx,%ax
    jmp    jump_22afd
  jump_22af2:
    mov    data_93b98,%bx
    inc    %eax
    cmp    %bx,%ax
  jump_22afd:
    jge    jump_22b28
    xor    %edx,%edx
    mov    data_f458e,%dl
    imul   $0x1ee,%edx,%ebx
    movswl %ax,%edx
    cmpb   $0x0,data_92fd6(%edx,%ebx,1)
    je     jump_22af2
    mov    $0x1,%dl
    mov    %al,%cl
    shl    %cl,%dl
    or     %dl,0xd9(%esi)
    jmp    jump_22af2
  jump_22b28:
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_22b6a
    mov    $data_80edc,%edx
    mov    %eax,%ebx
    xor    %ecx,%ecx
    mov    $data_fa35c,%eax
    call   func_521dc
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_22b5d
    mov    $0x298,%ebx
    mov    $data_80ee2,%edx
    call   func_25878
  jump_22b5d:
    mov    0xa7(%ecx),%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_22b6a:
    mov    %esi,%eax
    call   func_24410
    mov    %esi,%eax
    call   func_2390c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22b8e:
    testb  $0x15,0xc0(%esi)
    jne    jump_22621
    cmpl   $0x0,data_11f0f8
    jne    jump_22621
    mov    data_c84ec,%ebp
    mov    data_c84f0,%edi
    mov    0x8(%esi),%edx
    mov    0xc(%esi),%ebx
    mov    0x582(%esi),%ecx
    sub    %edx,%ebp
    sub    %ebx,%edi
    cmp    $0xffffffff,%ecx
    jne    jump_22c60
    mov    %esi,%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    push   $0xf1
    push   $0x0
    mov    0x586(%esi),%eax
    push   %edi
    mov    0x5(%eax),%eax
    push   %ebp
    sar    $0x10,%eax
    push   %eax
    mov    0x586(%esi),%eax
    mov    0x3(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0x4(%esi),%eax
    push   %eax
    call   func_573c1
    mov    0x586(%esi),%eax
    mov    0x3(%eax),%eax
    sar    $0x10,%eax
    add    $0x1c,%esp
    cmp    %ebp,%eax
    jle    jump_22c29
    mov    0x586(%esi),%ecx
    mov    0x3(%ecx),%ecx
    mov    %ebp,%edx
    sar    $0x10,%ecx
    jmp    jump_22c37
  jump_22c29:
    mov    0x586(%esi),%edx
    mov    0x3(%edx),%edx
    mov    %ebp,%ecx
    sar    $0x10,%edx
  jump_22c37:
    mov    0x586(%esi),%eax
    mov    0x5(%eax),%eax
    sar    $0x10,%eax
    mov    %eax,0x1c(%esp)
    cmp    %eax,%edi
    jge    jump_22c4f
    mov    %edi,%ebx
    jmp    jump_22c55
  jump_22c4f:
    mov    0x1c(%esp),%ebx
    mov    %edi,%eax
  jump_22c55:
    push   %eax
    mov    $data_fa35c,%eax
    call   func_50658
  jump_22c60:
    mov    %edi,%ebx
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_24028
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22c74:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x10(%esp),%dl
    mov    0xd8(%esi),%al
    test   %eax,%edx
    je     jump_22c92
    mov    %dl,%al
    not    %al
    and    %al,0xd8(%esi)
    jmp    jump_22c9c
  jump_22c92:
    mov    %al,%ah
    or     %dl,%ah
    mov    %ah,0xd8(%esi)
  jump_22c9c:
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22cb5:
    mov    %dl,%cl
    and    $0xfe,%cl
    mov    %cl,0xc0(%esi)
    jmp    jump_22cd2
  jump_22cc2:
    mov    %dl,%dh
    or     $0x1,%dh
    mov    %dh,%bl
    and    $0xfd,%bl
    mov    %bl,0xc0(%esi)
  jump_22cd2:
    mov    $0x1,%eax
  jump_22cd7:
    mov    0x36(%esp),%edx
    sar    $0x10,%edx
    cmp    $0x33,%edx
    jne    jump_22d1b
    mov    0xc0(%esi),%al
    test   $0x1,%al
    je     jump_22d0b
    test   $0x2,%al
    je     jump_22cfe
    mov    %al,%bl
    and    $0xfe,%bl
    mov    %bl,0xc0(%esi)
    jmp    jump_22d16
  jump_22cfe:
    mov    %al,%dh
    or     $0x2,%dh
    mov    %dh,0xc0(%esi)
    jmp    jump_22d16
  jump_22d0b:
    mov    %al,%ah
    or     $0x3,%ah
    mov    %ah,0xc0(%esi)
  jump_22d16:
    mov    $0x1,%eax
  jump_22d1b:
    mov    0x36(%esp),%edx
    sar    $0x10,%edx
    cmp    $0x34,%edx
    jne    jump_22d66
    mov    0xc0(%esi),%bh
    test   $0x4,%bh
    je     jump_22d51
    test   $0x8,%bh
    je     jump_22d44
    mov    %bh,%dl
    and    $0xf7,%dl
    mov    %dl,0xc0(%esi)
    jmp    jump_22d61
  jump_22d44:
    mov    %bh,%ah
    and    $0xfb,%ah
    mov    %ah,0xc0(%esi)
    jmp    jump_22d61
  jump_22d51:
    mov    %bh,%cl
    or     $0x4,%cl
    mov    %cl,%ch
    and    $0xf7,%ch
    mov    %ch,0xc0(%esi)
  jump_22d61:
    mov    $0x4,%eax
  jump_22d66:
    mov    0x36(%esp),%edx
    sar    $0x10,%edx
    cmp    $0x35,%edx
    jne    jump_22dac
    mov    0xc0(%esi),%dh
    test   $0x4,%dh
    je     jump_22d9c
    test   $0x8,%dh
    je     jump_22d8f
    mov    %dh,%ch
    and    $0xfb,%ch
    mov    %ch,0xc0(%esi)
    jmp    jump_22da7
  jump_22d8f:
    mov    %dh,%cl
    or     $0x8,%cl
    mov    %cl,0xc0(%esi)
    jmp    jump_22da7
  jump_22d9c:
    mov    %dh,%bl
    or     $0xc,%bl
    mov    %bl,0xc0(%esi)
  jump_22da7:
    mov    $0x4,%eax
  jump_22dac:
    mov    0x36(%esp),%edx
    sar    $0x10,%edx
    cmp    $0x36,%edx
    jne    jump_22df5
    mov    0xc0(%esi),%al
    test   $0x10,%al
    je     jump_22de0
    test   $0x20,%al
    je     jump_22dd3
    mov    %al,%bh
    and    $0xdf,%bh
    mov    %bh,0xc0(%esi)
    jmp    jump_22df0
  jump_22dd3:
    mov    %al,%bl
    and    $0xef,%bl
    mov    %bl,0xc0(%esi)
    jmp    jump_22df0
  jump_22de0:
    mov    %al,%ah
    or     $0x10,%ah
    mov    %ah,%dl
    and    $0xdf,%dl
    mov    %dl,0xc0(%esi)
  jump_22df0:
    mov    $0x10,%eax
  jump_22df5:
    mov    0x36(%esp),%edx
    sar    $0x10,%edx
    cmp    $0x37,%edx
    jne    jump_22e3b
    mov    0xc0(%esi),%cl
    test   $0x10,%cl
    je     jump_22e2b
    test   $0x20,%cl
    je     jump_22e1e
    mov    %cl,%dl
    and    $0xef,%dl
    mov    %dl,0xc0(%esi)
    jmp    jump_22e36
  jump_22e1e:
    mov    %cl,%ah
    or     $0x20,%ah
    mov    %ah,0xc0(%esi)
    jmp    jump_22e36
  jump_22e2b:
    mov    %cl,%ch
    or     $0x30,%ch
    mov    %ch,0xc0(%esi)
  jump_22e36:
    mov    $0x10,%eax
  jump_22e3b:
    cmpl   $0x4,0x10(%esp)
    jne    jump_22e5c
    push   $0x0
    mov    $0x3f,%ecx
    mov    $0x1,%ebx
    push   %eax
    mov    0x41(%esi),%edx
    mov    $data_fa35c,%eax
    call   func_51aec
  jump_22e5c:
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22e68:
    mov    0xc0(%esi),%dh
    test   $0x1,%dh
    je     jump_22ea0
    test   $0x2,%dh
    je     jump_22e82
    movl   $0xfffffffe,0x14(%esp)
    jmp    jump_22e8a
  jump_22e82:
    movl   $0x2,0x14(%esp)
  jump_22e8a:
    fildl  0x14(%esp)
    mov    $0xffffffff,%edx
    sub    $0x4,%esp
    mov    %esi,%eax
    fstps  (%esp)
    call   func_23834
  jump_22ea0:
    mov    0xc0(%esi),%bh
    test   $0x4,%bh
    je     jump_22ed5
    test   $0x8,%bh
    je     jump_22eba
    movl   $0x2,0x18(%esp)
    jmp    jump_22ec2
  jump_22eba:
    movl   $0xfffffffe,0x18(%esp)
  jump_22ec2:
    fildl  0x18(%esp)
    sub    $0x4,%esp
    mov    %esi,%eax
    xor    %edx,%edx
    fstps  (%esp)
    call   func_23834
  jump_22ed5:
    mov    0xc0(%esi),%ch
    test   $0x10,%ch
    je     jump_22ef8
    test   $0x20,%ch
    je     jump_22eec
    mov    $0x1,%edx
    jmp    jump_22ef1
  jump_22eec:
    mov    $0xffffffff,%edx
  jump_22ef1:
    mov    %esi,%eax
    call   func_23878
  jump_22ef8:
    testb  $0x15,0xc0(%esi)
    je     jump_22621
    mov    %esi,%eax
    call   func_2390c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22f22:
    mov    %ebx,%eax
    mov    0xc0(%esi),%edx
    not    %eax
    and    %eax,%edx
    mov    $0x3f,%ebx
    mov    %edx,0xc0(%esi)
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51b80
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22f52:
    mov    %esi,%eax
    call   func_21eec
    mov    %esi,%eax
    call   func_2390c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22f79:
    cmpl   $0xffffffff,0x58a(%esi)
    sete   %al
    and    $0xff,%eax
    mov    0xa7(%esi),%ebx
    dec    %eax
    xor    %edx,%edx
    mov    %eax,0x58a(%esi)
    mov    %esi,%eax
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22fa8:
    cmpl   $0xffffffff,0xc4(%esi)
    sete   %al
    and    $0xff,%eax
    mov    0xa7(%esi),%ebx
    dec    %eax
    xor    %edx,%edx
    mov    %eax,0xc4(%esi)
    mov    %esi,%eax
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_22fd7:
    xor    %edx,%edx
    mov    data_f41dd,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    data_f458e,%cl
    mov    data_f478b(%eax),%edx
    mov    $0x1,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_23043
    mov    $data_80efe,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    mov    $0x1,%ecx
    call   func_5216c
    mov    $0x8,%ebx
    mov    %ecx,%edx
    movl   $0x0,0xab(%eax)
    mov    $data_fa35c,%eax
    call   func_51f24
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_23043:
    mov    $data_80f0c,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    $data_80f17,%ebx
    mov    $data_80f20,%edx
    mov    %eax,%ecx
    call   func_2f390
    mov    $data_fa35c,%eax
    mov    %ecx,%edx
    xor    %ebx,%ebx
    call   func_506bc
    xor    %eax,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2307c:
    mov    $data_fa35c,%eax
    mov    0x57e(%esi),%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_55634
    push   $0x0
    mov    $0x8,%ecx
    mov    $0x4,%ebx
    push   $0x0
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51aec
    testb  $0x15,0xc0(%esi)
    jne    jump_230e4
    cmpl   $0x0,data_11f0f8
    jne    jump_230e4
    mov    data_c84ec,%edx
    mov    0x8(%esi),%ebx
    mov    0xc(%esi),%ecx
    sub    %ebx,%edx
    mov    data_c84f0,%ebx
    mov    %esi,%eax
    sub    %ecx,%ebx
    movl   $0x0,0xbb(%esi)
    call   func_24028
  jump_230e4:
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_230f0:
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_55634
    mov    $0x8,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51b80
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2311e:
    cmp    $0x3c,%dx
    jbe    jump_22f79
    cmpl   $0xffffffff,0xd0(%esi)
    sete   %al
    and    $0xff,%eax
    mov    0xa7(%esi),%ebx
    dec    %eax
    xor    %edx,%edx
    mov    %eax,0xd0(%esi)
    mov    %esi,%eax
    call   *0xc(%ebx)
    cmpl   $0xffffffff,0xcc(%esi)
    sete   %al
    and    $0xff,%eax
    mov    0xa7(%esi),%ebx
    dec    %eax
    xor    %edx,%edx
    mov    %eax,0xcc(%esi)
    mov    %esi,%eax
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2317a:
    cmp    $0x38,%dx
    jb     jump_231bf
    jbe    jump_22f52
    cmp    $0x39,%dx
    jbe    jump_22fa8
    cmpl   $0xffffffff,0xc8(%esi)
    sete   %al
    and    $0xff,%eax
    mov    0xa7(%esi),%ebx
    dec    %eax
    xor    %edx,%edx
    mov    %eax,0xc8(%esi)
    mov    %esi,%eax
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_231bf:
    cmp    $0x32,%dx
    jb     jump_21fdf
    cmpl   $0xffffffff,0x39(%esi)
    je     jump_231e0
    mov    $0x2ec,%ebx
    mov    $data_80ef0,%edx
    xor    %eax,%eax
    call   func_25878
  jump_231e0:
    mov    0x36(%esp),%edx
    sar    $0x10,%edx
    xor    %eax,%eax
    cmp    $0x32,%edx
    jne    jump_22cd7
    mov    0xc0(%esi),%dl
    test   $0x1,%dl
    je     jump_22cc2
    test   $0x2,%dl
    je     jump_22cb5
    mov    %dl,%ch
    and    $0xfd,%ch
    mov    %ch,0xc0(%esi)
    jmp    jump_22cd2
  jump_2321a:
    cmp    $0x6,%dx
    jb     jump_23255
    jbe    jump_230f0
    cmp    $0x8,%dx
    jb     jump_2307c
    jbe    jump_22b8e
    cmp    $0xc,%dx
    jb     jump_21fdf
    jbe    jump_2263d
    cmp    $0xd,%dx
    je     jump_22ad4
    jmp    jump_21fdf
  jump_23255:
    cmp    $0x2,%dx
    jb     jump_232c1
    jbe    jump_2245a
    cmp    $0x3,%dx
    jbe    jump_22a64
    cmp    0x8(%esi),%ebx
    jle    jump_22621
    cmp    0x10(%esi),%ebx
    jge    jump_22621
    cmp    0xc(%esi),%ecx
    jle    jump_22621
    cmp    0x14(%esi),%ecx
    jge    jump_22621
    mov    $data_f8638,%eax
    xor    %edx,%edx
    call   func_4af80
    cmpl   $0xffffffff,0xd4(%esi)
    jne    jump_22766
    mov    data_93b98,%bx
    xor    %eax,%eax
    mov    $0x1,%dl
    cmp    %bx,%ax
    jl     jump_226bc
    jmp    jump_22793
  jump_232c1:
    cmp    $0x1,%dx
    je     jump_21ffc
    jmp    jump_21fdf


/*----------------------------------------------------------------*/
func_232d0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xe4,%esp
    mov    %eax,%ebp
    mov    %edx,0xe0(%esp)
    add    $0x172,%eax
    mov    %ebp,%edx
    call   func_24bd8
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jne    jump_23335
    mov    $data_80f4d,%edx
    mov    %eax,%ebx
    xor    %ecx,%ecx
    mov    $data_fa35c,%eax
    call   func_521dc
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_23325
    mov    $0x414,%ebx
    mov    $data_80f58,%edx
    call   func_25878
  jump_23325:
    mov    0xa7(%esi),%ebx
    mov    $0x1,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
  jump_23335:
    cmpl   $0xffffffff,0xd4(%ebp)
    jne    jump_23345
    mov    %ebp,%eax
    call   func_236b4
  jump_23345:
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    je     jump_23369
    mov    $0x3,%ebx
    xor    %ecx,%ecx
    lea    0x4(%ebp),%eax
    mov    data_f458e,%cl
    mov    %ebx,%edx
    call   func_4f228
  jump_23369:
    cmpl   $0x0,0xbb(%ebp)
    jne    jump_23466
    jmp    jump_23483
  jump_2337b:
    mov    (%eax),%eax
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    data_86774,%bl
    mov    0x17(%eax),%cl
    test   %ebx,%ecx
    je     jump_233dd
    mov    %esp,%edi
    lea    0x1c(%eax),%esi
    push   %edi
  jump_23394:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_233ac
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_23394
  jump_233ac:
    pop    %edi
    xor    %esi,%esi
    jmp    jump_233b4
  jump_233b1:
    inc    %esi
    add    %dl,%dl
  jump_233b4:
    movswl %si,%eax
    cmp    $0x7,%eax
    jge    jump_233dd
    xor    %eax,%eax
    movsbl %dl,%edi
    mov    0xd9(%ebp),%al
    and    %eax,%edi
    mov    0xbb(%ebp),%eax
    mov    (%eax),%eax
    mov    0x14(%eax),%al
    and    $0xff,%eax
    test   %eax,%edi
    je     jump_233b1
  jump_233dd:
    movswl %si,%eax
    cmp    $0x7,%eax
    push   $0x0
    lea    0x4(%esp),%ecx
    mov    $data_fd3a2,%eax
    mov    $data_fd3aa,%edi
    mov    $data_c850c,%esi
    mov    0x14(%ebp),%ebx
    mov    0x10(%ebp),%edx
    push   $0xffffffff
    sub    $0x1b,%ebx
    sub    $0x82,%edx
    push   $0xffffffff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    mov    $data_fd38a,%edi
    mov    $data_c850c,%esi
    call   func_2af88
    push   $0x0
    mov    0xbb(%ebp),%eax
    mov    $data_c8368,%ecx
    push   $0xffffffff
    mov    (%eax),%edx
    mov    0x14(%ebp),%ebx
    push   $0xffffffff
    mov    (%edx),%edx
    sub    $0xc,%ebx
    lea    0x0(,%edx,4),%eax
    push   $0x0
    add    %edx,%eax
    mov    0x10(%ebp),%edx
    shl    $0x2,%eax
    sub    $0x82,%edx
    add    %eax,%ecx
    mov    $data_fd382,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    jmp    jump_23483
  jump_23466:
    xor    %ah,%ah
    mov    %ah,(%esp)
    mov    0xbb(%ebp),%eax
    mov    $0x1,%dl
    mov    0x4(%eax),%dh
    mov    $0x7,%esi
    test   %dh,%dh
    je     jump_2337b
  jump_23483:
    cmpl   $0xa,0xe0(%esp)
    je     jump_2349a
    mov    $data_c8488,%edi
    lea    0x4(%ebp),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
  jump_2349a:
    mov    $data_c8488,%edx
    mov    $data_fa35c,%eax
    call   func_50690
    mov    data_90ba0,%esi
    cmp    $0xffffffff,%esi
    jne    jump_236a6
    cmp    0x58e(%ebp),%esi
    jne    jump_236a6
    mov    data_c82fb,%eax
    push   %eax
    push   $data_80f66
    lea    0x8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    push   $0x0
    lea    0x4(%esp),%ecx
    mov    $0x18c,%ebx
    push   $0xff
    mov    $0xa,%edx
    mov    $data_fd38a,%edi
    push   $0xffffffff
    mov    $data_c850c,%esi
    mov    $data_fd382,%eax
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    data_c82fb,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %eax,%edx
    mov    data_96143,%ebx
    shl    $0x2,%edx
    sar    $0x10,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    push   %eax
    push   $data_80f7a
    lea    0x8(%esp),%eax
    push   %eax
    call   func_720c9
    mov    data_93bc1,%edx
    sar    $0x18,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    lea    0xb4(%esp),%edx
    shl    $0x2,%eax
    add    $0xc,%esp
    add    %edx,%eax
    push   %eax
    mov    data_f458a,%eax
    sar    $0x10,%eax
    lea    0xac(%esp),%edi
    push   %eax
    mov    $data_864a0,%esi
    mov    $0x9,%ecx
    push   $data_80f90
    lea    0xc(%esp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    push   %eax
    lea    0x10(%esp),%ecx
    mov    $data_fd3aa,%edi
    call   func_720c9
    add    $0x10,%esp
    mov    $data_c850c,%esi
    mov    $data_fd3a2,%eax
    push   $0x0
    mov    0xc(%ebp),%ebx
    mov    0x8(%ebp),%edx
    push   $0xff
    add    $0x1e,%ebx
    add    $0x5,%edx
    push   $0xffffffff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    lea    0x90(%esp),%edi
    mov    $data_864c4,%esi
    call   func_2af88
    mov    $0xa,%ecx
    xor    %dl,%dl
    mov    data_93b98,%bx
    mov    %dl,(%esp)
    rep movsl %ds:(%esi),%es:(%edi)
    xor    %dh,%dh
    test   %bx,%bx
    jle    jump_23672
  jump_235f3:
    movzbl data_f458e,%esi
    imul   $0x1ee,%esi,%esi
    movswl %dx,%eax
    mov    data_92fc6(%esi,%eax,2),%edi
    mov    data_92fd3(%esi,%eax,1),%esi
    sar    $0x18,%esi
    imul   $0xa,%esi,%esi
    sar    $0x10,%edi
    push   %edi
    lea    0x84(%esp),%edi
    add    %edi,%esi
    push   %esi
    push   %eax
    push   $data_80fa3
    lea    0xdc(%esp),%eax
    push   %eax
    lea    0x14(%esp),%edi
    call   func_720c9
    add    $0x14,%esp
    lea    0xcc(%esp),%esi
    inc    %edx
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_23650:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_23668
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_23650
  jump_23668:
    pop    %edi
    cmp    data_93b98,%dx
    jl     jump_235f3
  jump_23672:
    push   $0x0
    lea    0x4(%esp),%ecx
    mov    $data_fd3a2,%eax
    mov    $data_fd3aa,%edi
    mov    $data_c850c,%esi
    push   $0xff
    mov    0xc(%ebp),%ebx
    mov    0x8(%ebp),%edx
    push   $0xffffffff
    add    $0x37,%ebx
    add    $0x5,%edx
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_236a6:
    add    $0xe4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_236b4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,0x4(%esp)
    mov    $0x1,%ah
    mov    $data_92e16,%ebp
    xor    %esi,%esi
    mov    %ah,0x1c(%esp)
    mov    0x4(%esp),%eax
    xor    %edi,%edi
    add    $0x4,%eax
    mov    %esi,(%esp)
    mov    %eax,0x8(%esp)
    jmp    jump_236fd
  jump_236e0:
    mov    0x1c(%esp),%bh
    mov    (%esp),%edx
    add    $0x4,%edi
    inc    %esi
    add    $0x1ee,%ebp
    add    %bh,%bh
    add    $0x2,%edx
    mov    %bh,0x1c(%esp)
    mov    %edx,(%esp)
  jump_236fd:
    mov    data_93b96,%eax
    sar    $0x10,%eax
    cmp    %eax,%esi
    jge    jump_2382a
    mov    data_c846a(%edi),%eax
    sar    $0x10,%eax
    mov    %eax,0x10(%esp)
    mov    data_c846c(%edi),%eax
    sar    $0x10,%eax
    mov    %eax,0xc(%esp)
    mov    0x4(%esp),%eax
    xor    %edx,%edx
    mov    0xd8(%eax),%dl
    mov    0x19(%esp),%eax
    sar    $0x18,%eax
    test   %edx,%eax
    je     jump_237d5
    xor    %eax,%eax
    mov    data_f458e,%al
    imul   $0x1ee,%eax,%edx
    cmpb   $0x0,data_92fd6(%edx,%esi,1)
    jne    jump_2375d
    cmp    %eax,%esi
    jne    jump_237d5
  jump_2375d:
    mov    (%esp),%eax
    mov    0x3(%ebp),%ecx
    xor    %ebx,%ebx
    mov    data_efd44(%eax),%ax
    mov    %ebx,0x14(%esp)
    mov    %eax,0x18(%esp)
    cmp    $0xffffffff,%ecx
    jne    jump_23794
    movl   $0x1,0x14(%esp)
    mov    data_c8c33,%eax
    add    $0x1600,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
  jump_23794:
    mov    0x14(%esp),%edx
    push   %edx
    push   $0x10000
    push   $0x10000
    push   $0x0
    push   $data_c8c44
    mov    0x20(%esp),%ebx
    push   %ebx
    mov    0x28(%esp),%ecx
    push   %ecx
    xor    %edx,%edx
    push   $0x0
    mov    $data_11f10c,%eax
    mov    0x38(%esp),%dx
    call   func_1b084
    push   %eax
    mov    0x2c(%esp),%eax
    push   %eax
    call   func_589f1
    add    $0x28,%esp
  jump_237d5:
    mov    0x4(%esp),%edx
    xor    %eax,%eax
    mov    0xd8(%edx),%al
    mov    0x19(%esp),%edx
    sar    $0x18,%edx
    test   %eax,%edx
    je     jump_236e0
    mov    0xc(%esp),%ebx
    push   %ebx
    mov    0x14(%esp),%ecx
    xor    %eax,%eax
    push   %ecx
    mov    0x2(%ebp),%al
    mov    data_efd86,%dx
    push   %eax
    mov    $data_11f10c,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    mov    0x18(%esp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_236e0
  jump_2382a:
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_23834:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x4,%esp
    mov    %eax,%ebx
    add    $0x172,%eax
    call   func_24b90
    flds   0xc(%esp)
    fmuls  data_11f108
    lea    0x14e(%ebx),%eax
    fstps  (%esp)
    cmp    $0xffffffff,%edx
    jne    jump_23866
    push   (%esp)
    call   func_4e9d4
    jmp    jump_2386e
  jump_23866:
    push   (%esp)
    call   func_4e9a4
  jump_2386e:
    add    $0x4,%esp
    pop    %ebx
    ret    $0x4


/*----------------------------------------------------------------*/
func_23878:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x8,%esp
    mov    %eax,%ebx
    mov    %edx,0x4(%esp)
    flds   0x57a(%eax)
    fcomps data_80fb0
    fnstsw %ax
    sahf
    jae    jump_23897
    test   %edx,%edx
    jl     jump_238af
  jump_23897:
    flds   0x57a(%ebx)
    fcomps data_80fb4
    fnstsw %ax
    sahf
    jbe    jump_238bb
    cmpl   $0x0,0x4(%esp)
    jle    jump_238bb
  jump_238af:
    andb   $0xef,0xc0(%ebx)
    add    $0x8,%esp
    pop    %ebx
    ret
  jump_238bb:
    fildl  0x4(%esp)
    mov    0x574(%ebx),%eax
    fld    %st(0)
    fmuls  data_11f108
    sar    $0x10,%eax
    fstp   %st(1)
    fadds  0x57a(%ebx)
    push   %eax
    fstps  0x57a(%ebx)
    push   $0x47c35000
    push   $0x3f800000
    lea    0xda(%ebx),%eax
    push   0x57a(%ebx)
    call   func_1b808
    lea    0x172(%ebx),%eax
    call   func_24b90
    add    $0x8,%esp
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2390c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xfc,%esp
    mov    %eax,%edi
    xor    %edx,%edx
    mov    %edx,0x9c(%esp)
    mov    %edx,0xa0(%esp)
    mov    %edx,0xa4(%esp)
    mov    %edx,0x30(%esp)
    mov    %edx,0x34(%esp)
    mov    %edx,0x38(%esp)
    lea    0x172(%eax),%edx
    mov    0xb3(%eax),%esi
    mov    %edx,%eax
    call   func_24b90
    lea    0xda(%edi),%eax
    xor    %ebx,%ebx
    call   func_1b864
    mov    %edi,%eax
    mov    %ebx,0xc8(%esp)
    add    $0x11a,%eax
    mov    %edx,0xcc(%esp)
    mov    %eax,0xdc(%esp)
    lea    -0x15(%esi),%eax
    mov    %edx,0xd4(%esp)
    jmp    jump_23fdc
  jump_23988:
    lea    0x9c(%esp),%ebx
    mov    (%esi),%eax
    mov    0xdc(%esp),%edx
    mov    %eax,0xd8(%esp)
    add    $0x8,%eax
    call   func_4e774
    movl   $0xffffffff,0x11(%esi)
    flds   0xa4(%esp)
    fcomps 0x106(%edi)
    fnstsw %ax
    sahf
    jbe    jump_23fc0
    flds   0xa4(%esp)
    fcomps 0x10a(%edi)
    fnstsw %ax
    sahf
    jae    jump_23fc0
    lea    0xf4(%esp),%eax
    push   %eax
    lea    0xfc(%esp),%eax
    push   %eax
    mov    0x576(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x574(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xac(%esp),%eax
    push   0x102(%edi)
    call   func_4e7c4
    mov    0xf8(%esp),%eax
    mov    %ax,0x5(%esi)
    mov    0xf4(%esp),%eax
    mov    %ax,0x7(%esi)
    mov    0xa4(%esp),%eax
    mov    %esi,%edx
    mov    %eax,0xd(%esi)
    mov    0xd4(%esp),%eax
    movl   $0x0,0x11(%esi)
    call   func_24b9c
    jmp    jump_23fc0
  jump_23a4a:
    mov    (%esi),%ebp
    lea    0x9c(%esp),%ebx
    mov    0x0(%ebp),%eax
    mov    0xdc(%esp),%edx
    add    $0x8,%eax
    call   func_4e774
    lea    0x30(%esp),%ebx
    mov    0x4(%ebp),%eax
    mov    0xdc(%esp),%edx
    add    $0x8,%eax
    call   func_4e774
    movl   $0xffffffff,0x11(%esi)
    flds   0xa4(%esp)
    fcomps 0x106(%edi)
    fnstsw %ax
    sahf
    jbe    jump_23fc0
    flds   0xa4(%esp)
    fcomps 0x10a(%edi)
    fnstsw %ax
    sahf
    jae    jump_23fc0
    flds   0x38(%esp)
    fcomps 0x106(%edi)
    fnstsw %ax
    sahf
    jbe    jump_23fc0
    flds   0x38(%esp)
    fcomps 0x10a(%edi)
    fnstsw %ax
    sahf
    jae    jump_23fc0
    lea    0xf4(%esp),%eax
    push   %eax
    lea    0xfc(%esp),%eax
    push   %eax
    mov    0x576(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x574(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xac(%esp),%eax
    push   0x102(%edi)
    call   func_4e7c4
    lea    0xec(%esp),%eax
    push   %eax
    lea    0xf4(%esp),%eax
    push   %eax
    mov    0x576(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x574(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0x40(%esp),%eax
    push   0x102(%edi)
    call   func_4e7c4
    mov    0xf8(%esp),%eax
    mov    %ax,0x5(%esi)
    mov    0xf4(%esp),%eax
    mov    %ax,0x7(%esi)
    mov    0xf0(%esp),%eax
    mov    %ax,0x9(%esi)
    mov    0xec(%esp),%eax
    mov    %ax,0xb(%esi)
    flds   0xa4(%esp)
    fadds  0x38(%esp)
    fmuls  data_80fd4
    mov    %esi,%edx
    movl   $0x0,0x11(%esi)
    mov    0xd4(%esp),%eax
    fstps  0xd(%esi)
    call   func_24b9c
    jmp    jump_23fc0
  jump_23b97:
    mov    (%esi),%edx
    cmpb   $0x5,0x58(%edx)
    jne    jump_23ec9
    xor    %eax,%eax
    mov    0x59(%edx),%ebx
    mov    %eax,0x84(%esp)
    mov    %eax,0x88(%esp)
    mov    %eax,0x8c(%esp)
    mov    %eax,0x48(%esp)
    mov    %eax,0x4c(%esp)
    mov    %eax,0x50(%esp)
    testl  $0x7fffffff,0xa2(%edx)
    jne    jump_23bfa
    mov    0x4(%ebx),%ebp
    mov    0x8(%ebp),%eax
    mov    %eax,0x84(%esp)
    mov    0xc(%ebp),%eax
    mov    %eax,0x88(%esp)
    mov    0x10(%ebp),%eax
    mov    %eax,0x8c(%esp)
    mov    (%ebx),%ebx
    jmp    jump_23c1d
  jump_23bfa:
    mov    (%ebx),%ebp
    mov    0x8(%ebp),%eax
    mov    %eax,0x84(%esp)
    mov    0xc(%ebp),%eax
    mov    %eax,0x88(%esp)
    mov    0x10(%ebp),%eax
    mov    %eax,0x8c(%esp)
    mov    0x4(%ebx),%ebx
  jump_23c1d:
    mov    0x8(%ebx),%eax
    mov    %eax,0x48(%esp)
    mov    0xc(%ebx),%eax
    mov    %eax,0x4c(%esp)
    add    $0x8,%ebp
    mov    0x10(%ebx),%eax
    add    $0x8,%ebx
    mov    %eax,0x50(%esp)
    flds   0x48(%esp)
    fsubs  0x84(%esp)
    mov    %esp,%eax
    fstps  0x90(%esp)
    flds   0x4c(%esp)
    fsubs  0x88(%esp)
    mov    %eax,0xa8(%esp)
    fstps  0x94(%esp)
    flds   0x50(%esp)
    fsubs  0x8c(%esp)
    mov    0x90(%esp),%eax
    fstps  0x98(%esp)
    flds   0x94(%esp)
    fmul   %st(0),%st
    mov    %eax,(%esp)
    mov    0x94(%esp),%eax
    flds   0x90(%esp)
    fmul   %st(0),%st
    mov    %eax,0x4(%esp)
    faddp  %st,%st(1)
    mov    0x98(%esp),%eax
    flds   0x98(%esp)
    fmul   %st(0),%st
    mov    %eax,0x8(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    lea    0x3c(%esp),%eax
    flds   0x48(%esp)
    fsubs  0x84(%esp)
    mov    %eax,0xb0(%esp)
    fstps  0x6c(%esp)
    flds   0x4c(%esp)
    mov    0x6c(%esp),%eax
    fsubs  0x88(%esp)
    mov    %eax,0x3c(%esp)
    fstps  0x70(%esp)
    flds   0x50(%esp)
    mov    0x70(%esp),%eax
    fsubs  0x8c(%esp)
    mov    %eax,0x40(%esp)
    fstps  0x74(%esp)
    mov    0x74(%esp),%eax
    mov    %eax,0x44(%esp)
    lea    0x60(%esp),%eax
    mov    %eax,0xb4(%esp)
    mov    0x9e(%edx),%eax
    mov    %eax,0xb8(%esp)
    flds   0x6c(%esp)
    fmuls  0xb8(%esp)
    fstps  0x78(%esp)
    flds   0x70(%esp)
    fmuls  0xb8(%esp)
    fstps  0x7c(%esp)
    flds   0x74(%esp)
    fmuls  0xb8(%esp)
    fstps  0x80(%esp)
    fld1
    fdivp  %st,%st(1)
    mov    0x78(%esp),%eax
    mov    %eax,0x60(%esp)
    mov    0x7c(%esp),%eax
    mov    %eax,0x64(%esp)
    mov    0x80(%esp),%eax
    flds   0x78(%esp)
    fmul   %st(1),%st
    mov    %eax,0x68(%esp)
    lea    0x18(%esp),%eax
    fstps  0x24(%esp)
    flds   0x7c(%esp)
    fmul   %st(1),%st
    mov    %eax,0xbc(%esp)
    mov    0x24(%esp),%eax
    fstps  0x28(%esp)
    fmuls  0x80(%esp)
    mov    %eax,0x18(%esp)
    mov    0x28(%esp),%eax
    lea    0x9c(%esp),%ebx
    mov    %eax,0x1c(%esp)
    fstps  0x2c(%esp)
    flds   0x84(%esp)
    mov    0x2c(%esp),%eax
    fadds  0x24(%esp)
    mov    %eax,0x20(%esp)
    fstps  0x54(%esp)
    lea    0xc(%esp),%eax
    flds   0x88(%esp)
    mov    %eax,0xc0(%esp)
    fadds  0x28(%esp)
    mov    0x54(%esp),%eax
    fstps  0x58(%esp)
    flds   0x8c(%esp)
    mov    %eax,0xc(%esp)
    fadds  0x2c(%esp)
    mov    0x58(%esp),%eax
    fstps  0x5c(%esp)
    mov    %eax,0x10(%esp)
    mov    0x5c(%esp),%eax
    mov    0xdc(%esp),%edx
    mov    %eax,0x14(%esp)
    lea    0xc(%esp),%eax
    call   func_4e774
    movl   $0xffffffff,0x11(%esi)
    flds   0xa4(%esp)
    fcomps 0x106(%edi)
    fnstsw %ax
    sahf
    jbe    jump_23f97
    flds   0xa4(%esp)
    fcomps 0x10a(%edi)
    fnstsw %ax
    sahf
    jae    jump_23f97
    lea    0xf4(%esp),%eax
    push   %eax
    lea    0xfc(%esp),%eax
    push   %eax
    mov    0x576(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x574(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0xac(%esp),%eax
    push   0x102(%edi)
    call   func_4e7c4
    mov    0xf8(%esp),%eax
    add    $0x3,%eax
    mov    %ax,0x5(%esi)
    mov    0xf4(%esp),%eax
    mov    %ax,0x7(%esi)
    mov    0xa4(%esp),%eax
    movl   $0x0,0x11(%esi)
    mov    %eax,0xd(%esi)
    mov    0xcc(%esp),%eax
    mov    %esi,%edx
    call   func_24b9c
    jmp    jump_23fc0
  jump_23ec9:
    mov    0xe4(%esp),%eax
    mov    0x11(%eax),%ebp
    mov    %eax,0xe0(%esp)
    test   %ebp,%ebp
    jne    jump_23f97
    cmpb   $0x0,0x4(%eax)
    je     jump_23ef9
    mov    $0x56e,%ebx
    mov    $data_80fb8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_23ef9:
    mov    0xe0(%esp),%eax
    mov    $0x4,%edx
    mov    0xd8(%esp),%ebp
    xor    %ebx,%ebx
    mov    (%eax),%eax
    movzbl 0x14(%ebp),%ebp
    mov    0xd8(%edi),%bl
    mov    %eax,0xd0(%esp)
    mov    %ebx,0xe8(%esp)
    xor    %eax,%eax
    jmp    jump_23f32
  jump_23f2c:
    inc    %eax
    cmp    $0x7,%eax
    jge    jump_23f4d
  jump_23f32:
    mov    $0x1,%ebx
    mov    %al,%cl
    shl    %cl,%ebx
    mov    0xe8(%esp),%ecx
    and    %ebp,%ebx
    test   %ecx,%ebx
    je     jump_23f2c
    add    $0x2,%edx
    jmp    jump_23f2c
  jump_23f4d:
    mov    0xd0(%esp),%ebp
    cmp    data_c3504,%ebp
    jne    jump_23f5f
    add    $0x2,%edx
  jump_23f5f:
    mov    0xe0(%esp),%eax
    mov    0x5(%eax),%ax
    add    %edx,%eax
    mov    %ax,0x5(%esi)
    mov    0xe0(%esp),%eax
    mov    0x7(%eax),%ax
    mov    %ax,0x7(%esi)
    mov    0xe0(%esp),%eax
    flds   0xd(%eax)
    fld1
    faddp  %st,%st(1)
    movl   $0x0,0x11(%esi)
    fstps  0xd(%esi)
  jump_23f97:
    mov    0xcc(%esp),%eax
    mov    %esi,%edx
    call   func_24b9c
    jmp    jump_23fc0
  jump_23fa7:
    test   %al,%al
    je     jump_23988
  jump_23faf:
    mov    $0x588,%ebx
    mov    $data_80fc6,%edx
    xor    %eax,%eax
    call   func_25888
  jump_23fc0:
    mov    0xc8(%esp),%ebp
    mov    0xe4(%esp),%eax
    add    $0x15,%esi
    inc    %ebp
    add    $0x15,%eax
    mov    %ebp,0xc8(%esp)
  jump_23fdc:
    mov    %eax,0xe4(%esp)
    mov    0xb5(%edi),%eax
    mov    0xc8(%esp),%ecx
    sar    $0x10,%eax
    cmp    %ecx,%eax
    jle    jump_2400e
    mov    0x4(%esi),%al
    cmp    $0x1,%al
    jb     jump_23fa7
    jbe    jump_23a4a
    cmp    $0x2,%al
    je     jump_23b97
    jmp    jump_23faf
  jump_2400e:
    mov    0xd4(%esp),%eax
    call   func_24bbc
    add    $0xfc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_24028:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%ebp
    mov    %edx,0x14(%esp)
    mov    %ebx,0x18(%esp)
    cmpl   $0xffffffff,0xd4(%eax)
    je     jump_242b7
    mov    0xbb(%eax),%ebx
    test   %ebx,%ebx
    je     jump_240ea
    mov    0x14(%esp),%ecx
    mov    0x18(%esp),%esi
    mov    $0x28,%edi
    mov    0x3(%ebx),%edx
    mov    0x5(%ebx),%eax
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %ecx,%edx
    mov    0x4(%ebx),%cl
    sub    %esi,%eax
    cmp    $0x2,%cl
    jne    jump_24094
    mov    data_8648d,%ebx
    sar    $0x18,%ebx
    add    %ebx,%edx
    mov    data_86495,%ebx
    sar    $0x18,%ebx
    mov    $0x14,%edi
    add    %ebx,%eax
  jump_24094:
    imul   %edx,%edx
    imul   %eax,%eax
    add    %edx,%eax
    cmp    %edi,%eax
    jle    jump_242b7
    mov    $data_fa35c,%eax
    mov    0x57e(%ebp),%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    movl   $0x0,0xbb(%ebp)
    call   func_55634
    mov    0x10(%ebp),%eax
    sub    $0x82,%eax
    mov    %eax,data_c848c
    mov    0x14(%ebp),%eax
    mov    $0xa,%edx
    sub    $0x1b,%eax
    mov    0xa7(%ebp),%ebx
    mov    %eax,data_c8490
    mov    %ebp,%eax
    call   *0xc(%ebx)
  jump_240ea:
    mov    0xb5(%ebp),%edx
    sar    $0x10,%edx
    dec    %edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    0xb3(%ebp),%ebx
    shl    $0x2,%eax
    mov    0xb7(%ebp),%si
    add    %edx,%eax
    dec    %esi
    add    %eax,%ebx
    jmp    jump_24118
  jump_24114:
    dec    %esi
    sub    $0x15,%ebx
  jump_24118:
    movswl %si,%eax
    test   %eax,%eax
    jl     jump_24177
    cmpb   $0x1,0x4(%ebx)
    je     jump_24114
    mov    0x14(%esp),%edi
    mov    0x18(%esp),%ecx
    mov    0x3(%ebx),%eax
    mov    0x5(%ebx),%edx
    sar    $0x10,%eax
    sar    $0x10,%edx
    sub    %edi,%eax
    sub    %ecx,%edx
    mov    0x4(%ebx),%cl
    mov    $0x28,%edi
    cmp    $0x2,%cl
    jne    jump_24165
    mov    data_8648d,%edi
    sar    $0x18,%edi
    add    %edi,%eax
    mov    data_86495,%edi
    sar    $0x18,%edi
    add    %edi,%edx
    mov    $0x14,%edi
  jump_24165:
    imul   %eax,%eax
    imul   %edx,%edx
    add    %edx,%eax
    cmp    %edi,%eax
    jge    jump_24114
    mov    %ebx,0xbb(%ebp)
  jump_24177:
    cmpl   $0x0,0xbb(%ebp)
    je     jump_242b7
    mov    $data_fa35c,%eax
    mov    0x57e(%ebp),%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    inc    %edx
    call   func_55634
    mov    0xbb(%ebp),%eax
    cmpb   $0x0,0x4(%eax)
    jne    jump_242b7
    mov    %esp,%edi
    mov    $data_864ec,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0xbb(%ebp),%eax
    mov    $0x1,%dl
    xor    %ebx,%ebx
    mov    (%eax),%eax
    xor    %ecx,%ecx
    mov    data_86774,%bl
    mov    0x17(%eax),%cl
    mov    $0x7,%esi
    test   %ebx,%ecx
    je     jump_24224
    mov    %esp,%edi
    lea    0x1c(%eax),%esi
    push   %edi
  jump_241db:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_241f3
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_241db
  jump_241f3:
    pop    %edi
    xor    %esi,%esi
    jmp    jump_241fb
  jump_241f8:
    inc    %esi
    add    %dl,%dl
  jump_241fb:
    movswl %si,%eax
    cmp    $0x7,%eax
    jge    jump_24224
    xor    %eax,%eax
    movsbl %dl,%ebx
    mov    0xd9(%ebp),%al
    and    %eax,%ebx
    mov    0xbb(%ebp),%eax
    mov    (%eax),%eax
    mov    0x14(%eax),%al
    and    $0xff,%eax
    test   %eax,%ebx
    je     jump_241f8
  jump_24224:
    movswl %si,%eax
    cmp    $0x7,%eax
    cmpb   $0x0,(%esp)
    je     jump_24267
    push   $0x0
    lea    0x4(%esp),%ecx
    mov    $data_fd3a2,%eax
    mov    $data_fd3aa,%edi
    mov    $data_c850c,%esi
    push   $0xff
    mov    0x14(%ebp),%ebx
    mov    0x10(%ebp),%edx
    push   $0xffffffff
    sub    $0x1b,%ebx
    sub    $0x82,%edx
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_24267:
    mov    $data_c8368,%ecx
    push   $0x0
    mov    $data_fd38a,%edi
    mov    0xbb(%ebp),%edx
    mov    $data_c850c,%esi
    push   $0xff
    mov    (%edx),%edx
    mov    0x14(%ebp),%ebx
    push   $0xffffffff
    mov    (%edx),%edx
    sub    $0xc,%ebx
    lea    0x0(,%edx,4),%eax
    push   $0x0
    add    %edx,%eax
    mov    0x10(%ebp),%edx
    shl    $0x2,%eax
    sub    $0x82,%edx
    add    %eax,%ecx
    mov    $data_fd382,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_242b7:
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_242c0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    0xbb(%eax),%eax
    cmpb   $0x0,0x4(%eax)
    jne    jump_24409
    cmpl   $0x0,0x582(%esi)
    jne    jump_24383
    mov    data_fe582,%edx
    sar    $0x10,%edx
    cmp    $0x1,%edx
    jne    jump_24332
    mov    (%eax),%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    data_86774,%dl
    mov    0x17(%eax),%bl
    test   %edx,%ebx
    je     jump_24409
    mov    $0x1,%ecx
    mov    $0x10,%ebx
    mov    %eax,data_c3504
    mov    $data_fa35c,%eax
    mov    %ecx,%edx
    movl   $0x0,0xbb(%esi)
    call   func_51f24
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_24332:
    cmp    $0xd,%edx
    jne    jump_24409
    mov    %edx,%ebx
    mov    (%eax),%eax
    xor    %ecx,%ecx
    mov    $data_80fd8,%edx
    mov    %eax,data_c3504
    mov    $data_fa35c,%eax
    call   func_521dc
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_2436a
    mov    $0x612,%ebx
    mov    $data_80fe2,%edx
    call   func_25878
  jump_2436a:
    mov    %ecx,%eax
    call   func_320fc
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_24383:
    mov    (%eax),%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    data_86774,%dl
    mov    0x16(%eax),%bl
    test   %edx,%ebx
    je     jump_24409
    mov    %eax,%edx
    xor    %ecx,%ecx
    jmp    jump_243a4
  jump_243a0:
    add    $0x4,%edx
    inc    %ecx
  jump_243a4:
    mov    0x42(%eax),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%ecx
    jge    jump_24409
    mov    0x2c(%edx),%ebx
    cmp    (%ebx),%eax
    jne    jump_243c2
    mov    0x4(%ebx),%ebp
    mov    0x586(%esi),%edi
    cmp    (%edi),%ebp
    je     jump_243d3
  jump_243c2:
    mov    (%ebx),%ebp
    mov    0x586(%esi),%edi
    cmp    (%edi),%ebp
    jne    jump_243a0
    cmp    0x4(%ebx),%eax
    jne    jump_243a0
  jump_243d3:
    mov    0x586(%esi),%ecx
    mov    (%ecx),%ecx
    mov    %eax,%edx
    mov    %ecx,%eax
    call   func_1d614
    mov    %esi,%eax
    movl   $0x0,0x582(%esi)
    call   func_24410
    mov    %esi,%eax
    call   func_2390c
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
  jump_24409:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_24410:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x1c0,%esp
    mov    %eax,%ecx
    movw   $0x0,0xb7(%eax)
    mov    data_96145,%dx
    xor    %edi,%edi
    test   %dx,%dx
    jle    jump_24568
    jmp    jump_2444b
  jump_2443a:
    mov    data_96145,%bx
    inc    %edi
    cmp    %bx,%di
    jge    jump_24568
  jump_2444b:
    mov    0xb7(%ecx),%ax
    cmp    0xb9(%ecx),%ax
    jl     jump_2446c
    mov    $0x659,%ebx
    mov    $data_80ff0,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2446c:
    movswl %di,%esi
    imul   $0x60,%esi,%esi
    mov    0xb5(%ecx),%eax
    sar    $0x10,%eax
    imul   $0x15,%eax,%eax
    mov    0xb3(%ecx),%edx
    add    $data_93bc5,%esi
    mov    %esi,(%edx,%eax,1)
    mov    0xb5(%ecx),%eax
    sar    $0x10,%eax
    imul   $0x15,%eax,%eax
    mov    0xb3(%ecx),%edx
    movb   $0x0,0x4(%edx,%eax,1)
    mov    0xb7(%ecx),%bx
    inc    %ebx
    mov    %bx,0xb7(%ecx)
    cmpb   $0x0,0x15(%esi)
    je     jump_2443a
    cmp    0xb9(%ecx),%bx
    jl     jump_244d3
    mov    $0x66b,%ebx
    mov    $data_80ffe,%edx
    xor    %eax,%eax
    call   func_25878
  jump_244d3:
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_1d754
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_24524
    cmpl   $0xffffffff,data_90ba0
    jne    jump_24524
    mov    data_92e10,%ebx
    push   %ebx
    push   $data_8100c
    lea    0x1b4(%esp),%eax
    push   %eax
    mov    $data_81018,%edx
    call   func_720c9
    add    $0xc,%esp
    lea    0x1ac(%esp),%eax
    mov    $0x676,%ebx
    call   func_4f438
    xor    %eax,%eax
    call   func_25888
  jump_24524:
    test   %esi,%esi
    jle    jump_2443a
    mov    0xb5(%ecx),%eax
    sar    $0x10,%eax
    imul   $0x15,%eax,%eax
    mov    0xb3(%ecx),%edx
    add    %eax,%edx
    mov    (%esp),%eax
    mov    %eax,(%edx)
    mov    0xb5(%ecx),%eax
    sar    $0x10,%eax
    imul   $0x15,%eax,%eax
    mov    0xb3(%ecx),%edx
    movb   $0x2,0x4(%edx,%eax,1)
    incw   0xb7(%ecx)
    jmp    jump_2443a
  jump_24568:
    mov    data_977d3,%di
    xor    %esi,%esi
    test   %di,%di
    jle    jump_24604
    jmp    jump_2458d
  jump_2457c:
    mov    data_977d3,%di
    inc    %esi
    cmp    %di,%si
    jge    jump_24604
  jump_2458d:
    movswl %si,%eax
    imul   $0x27,%eax,%eax
    mov    $data_96147,%edi
    xor    %edx,%edx
    add    %eax,%edi
    xor    %eax,%eax
    mov    data_86774,%dl
    mov    0x20(%edi),%al
    test   %edx,%eax
    je     jump_2457c
    mov    0xb7(%ecx),%ax
    cmp    0xb9(%ecx),%ax
    jl     jump_245cc
    mov    $0x68b,%ebx
    mov    $data_81026,%edx
    xor    %eax,%eax
    call   func_25878
  jump_245cc:
    mov    0xb5(%ecx),%eax
    sar    $0x10,%eax
    imul   $0x15,%eax,%eax
    mov    0xb3(%ecx),%edx
    mov    %edi,(%edx,%eax,1)
    mov    0xb5(%ecx),%eax
    sar    $0x10,%eax
    imul   $0x15,%eax,%eax
    mov    0xb3(%ecx),%edx
    movb   $0x1,0x4(%edx,%eax,1)
    incw   0xb7(%ecx)
    jmp    jump_2457c
  jump_24604:
    xor    %edi,%edi
    xor    %esi,%esi
    jmp    jump_2460b
  jump_2460a:
    inc    %esi
  jump_2460b:
    movswl %si,%eax
    cmp    $0x6b,%eax
    jge    jump_2469f
    cmp    data_c348b,%di
    jge    jump_2469f
    mov    0xb7(%ecx),%ax
    cmp    0xb9(%ecx),%ax
    jl     jump_24645
    mov    $0x698,%ebx
    mov    $data_81034,%edx
    xor    %eax,%eax
    call   func_25878
  jump_24645:
    movswl %si,%eax
    imul   $0x162,%eax,%eax
    add    $data_ba095,%eax
    mov    0x54(%eax),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_2460a
    mov    0x58(%eax),%dl
    inc    %edi
    cmp    $0x5,%dl
    jne    jump_2460a
    mov    0xb5(%ecx),%edx
    sar    $0x10,%edx
    imul   $0x15,%edx,%edx
    mov    0xb3(%ecx),%ebx
    mov    %eax,(%edx,%ebx,1)
    mov    0xb5(%ecx),%edx
    sar    $0x10,%edx
    imul   $0x15,%edx,%edx
    mov    0xb3(%ecx),%eax
    movb   $0x2,0x4(%edx,%eax,1)
    incw   0xb7(%ecx)
    jmp    jump_2460a
  jump_2469f:
    add    $0x1c0,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_246ac:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x194,%esp
    mov    %eax,%esi
    mov    %edx,0x180(%esp)
    lea    0xda(%eax),%ecx
    add    $0x14e,%eax
    mov    %eax,0x184(%esp)
    mov    %esi,%eax
    add    $0x10e,%eax
    lea    0xf2(%esi),%edi
    mov    %eax,0x190(%esp)
    mov    %esi,%eax
    add    $0xe6,%eax
    lea    0x166(%esi),%ebp
    mov    %eax,0x18c(%esp)
    mov    %esi,%eax
    add    $0x15a,%eax
    mov    %eax,0x188(%esp)
    cmp    $0xffffffff,%ebx
    jne    jump_24964
    lea    0xc0(%esp),%eax
    mov    $0xbe,%ebx
    add    $0x1e,%eax
    lea    0xc0(%esp),%edx
    call   func_1b4f0
    mov    0x180(%esp),%eax
    call   func_1bf94
    mov    0xc0(%esp),%eax
    mov    %eax,0xc0(%esi)
    mov    0xc4(%esp),%eax
    mov    %eax,0xc4(%esi)
    mov    0xc8(%esp),%eax
    mov    %eax,0x58a(%esi)
    mov    0xcc(%esp),%eax
    mov    %eax,0xc8(%esi)
    mov    0xd0(%esp),%eax
    mov    %eax,0xcc(%esi)
    mov    0xd4(%esp),%eax
    mov    %eax,0xd0(%esi)
    mov    0xd8(%esp),%eax
    mov    %eax,0xd4(%esi)
    mov    0xdc(%esp),%al
    mov    %al,0xd8(%esi)
    mov    0xdd(%esp),%al
    mov    %al,0xd9(%esi)
    mov    0xde(%esp),%eax
    mov    %eax,(%ecx)
    mov    0xe2(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0xe6(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    0x18c(%esp),%edx
    mov    0xea(%esp),%eax
    mov    %eax,(%edx)
    mov    0xee(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0xf2(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0xf6(%esp),%eax
    mov    %eax,(%edi)
    mov    0xfa(%esp),%eax
    mov    %eax,0x4(%edi)
    mov    0xfe(%esp),%eax
    mov    %eax,0x8(%edi)
    mov    0x102(%esp),%eax
    mov    %eax,0x24(%ecx)
    mov    0x106(%esp),%eax
    mov    %eax,0x28(%ecx)
    mov    0x10a(%esp),%eax
    mov    %eax,0x2c(%ecx)
    mov    0x10e(%esp),%eax
    mov    %eax,0x30(%ecx)
    mov    0x190(%esp),%edx
    mov    0x112(%esp),%eax
    mov    %eax,(%edx)
    mov    0x116(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x11a(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x11e(%esp),%eax
    mov    %eax,0x40(%ecx)
    mov    0x122(%esp),%eax
    mov    %eax,0x44(%ecx)
    mov    0x126(%esp),%eax
    mov    %eax,0x48(%ecx)
    mov    0x12a(%esp),%eax
    mov    %eax,0x4c(%ecx)
    mov    0x12e(%esp),%eax
    mov    %eax,0x50(%ecx)
    mov    0x132(%esp),%eax
    mov    %eax,0x54(%ecx)
    mov    0x136(%esp),%eax
    mov    %eax,0x58(%ecx)
    mov    0x13a(%esp),%eax
    mov    %eax,0x5c(%ecx)
    mov    0x13e(%esp),%eax
    mov    %eax,0x60(%ecx)
    mov    0x142(%esp),%eax
    mov    %eax,0x64(%ecx)
    mov    0x146(%esp),%eax
    mov    %eax,0x68(%ecx)
    mov    0x14a(%esp),%eax
    mov    %eax,0x6c(%ecx)
    mov    0x14e(%esp),%eax
    mov    %eax,0x70(%ecx)
    mov    0x184(%esp),%edx
    mov    0x152(%esp),%eax
    mov    %eax,(%edx)
    mov    0x156(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x15a(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x188(%esp),%edx
    mov    0x15e(%esp),%eax
    mov    %eax,(%edx)
    mov    0x162(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x166(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x16a(%esp),%eax
    mov    %eax,0x0(%ebp)
    mov    0x16e(%esp),%eax
    mov    %eax,0x4(%ebp)
    mov    0x172(%esp),%eax
    mov    %eax,0x8(%ebp)
    xor    %edx,%edx
    fildl  0x176(%esp)
    lea    0xde(%esp),%eax
    fstps  0x57a(%esi)
    call   func_1b66c
    add    $0x194,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_24964:
    mov    %esp,%eax
    add    $0x1e,%eax
    call   func_1b4f0
    mov    0xc0(%esi),%eax
    mov    %eax,(%esp)
    mov    0xc4(%esi),%eax
    mov    %eax,0x4(%esp)
    mov    0x58a(%esi),%eax
    mov    %eax,0x8(%esp)
    mov    0xc8(%esi),%eax
    mov    %eax,0xc(%esp)
    mov    0xcc(%esi),%eax
    mov    %eax,0x10(%esp)
    mov    0xd0(%esi),%eax
    mov    %eax,0x14(%esp)
    mov    0xd4(%esi),%eax
    mov    %eax,0x18(%esp)
    mov    0xd8(%esi),%al
    mov    %al,0x1c(%esp)
    mov    0xd9(%esi),%al
    mov    %al,0x1d(%esp)
    mov    (%ecx),%eax
    mov    %eax,0x1e(%esp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x22(%esp)
    mov    0x8(%ecx),%eax
    mov    %eax,0x26(%esp)
    mov    0x18c(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x2a(%esp)
    mov    0x18c(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x2e(%esp)
    mov    0x18c(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x32(%esp)
    mov    (%edi),%eax
    mov    %eax,0x36(%esp)
    mov    0x4(%edi),%eax
    mov    %eax,0x3a(%esp)
    mov    0x8(%edi),%eax
    mov    %eax,0x3e(%esp)
    mov    0x24(%ecx),%eax
    mov    %eax,0x42(%esp)
    mov    0x28(%ecx),%eax
    mov    %eax,0x46(%esp)
    mov    0x2c(%ecx),%eax
    mov    %eax,0x4a(%esp)
    mov    0x30(%ecx),%eax
    mov    %eax,0x4e(%esp)
    mov    0x190(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x52(%esp)
    mov    0x190(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x56(%esp)
    mov    0x190(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x5a(%esp)
    mov    0x40(%ecx),%eax
    mov    %eax,0x5e(%esp)
    mov    0x44(%ecx),%eax
    mov    %eax,0x62(%esp)
    mov    0x48(%ecx),%eax
    mov    %eax,0x66(%esp)
    mov    0x4c(%ecx),%eax
    mov    %eax,0x6a(%esp)
    mov    0x50(%ecx),%eax
    mov    %eax,0x6e(%esp)
    mov    0x54(%ecx),%eax
    mov    %eax,0x72(%esp)
    mov    0x58(%ecx),%eax
    mov    %eax,0x76(%esp)
    mov    0x5c(%ecx),%eax
    mov    %eax,0x7a(%esp)
    mov    0x60(%ecx),%eax
    mov    %eax,0x7e(%esp)
    mov    0x64(%ecx),%eax
    mov    %eax,0x82(%esp)
    mov    0x68(%ecx),%eax
    mov    %eax,0x86(%esp)
    mov    0x6c(%ecx),%eax
    mov    %eax,0x8a(%esp)
    mov    0x70(%ecx),%eax
    mov    %eax,0x8e(%esp)
    mov    0x184(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x92(%esp)
    mov    0x184(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x96(%esp)
    mov    0x184(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x9a(%esp)
    mov    0x188(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x9e(%esp)
    mov    0x188(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0xa2(%esp)
    mov    0x188(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0xa6(%esp)
    mov    0x0(%ebp),%eax
    mov    %eax,0xaa(%esp)
    mov    0x4(%ebp),%eax
    mov    %eax,0xae(%esp)
    mov    0x8(%ebp),%eax
    mov    $0xbe,%ebx
    mov    %eax,0xb2(%esp)
    mov    %esp,%edx
    flds   0x57a(%esi)
    mov    0x180(%esp),%eax
    call   func_72258
    fistpl 0xb6(%esp)
    call   func_1c098
    lea    0x1e(%esp),%eax
    xor    %edx,%edx
    call   func_1b66c
    add    $0x194,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_24b84:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_24b90
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_24b90:
/*----------------------------------------------------------------*/
    movl   $0x0,0x400(%eax)
    ret


/*----------------------------------------------------------------*/
func_24b9c:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    0x400(%eax),%ebx
    cmp    $0x100,%ebx
    jge    jump_24bb8
    test   %edx,%edx
    je     jump_24bb8
    mov    %edx,(%eax,%ebx,4)
    incl   0x400(%eax)
  jump_24bb8:
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_24bbc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    $func_21b10,%ecx
    mov    $0x4,%ebx
    mov    0x400(%eax),%edx
    call   func_72316
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_24bd8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x58,%esp
    mov    %eax,0x4(%esp)
    mov    %edx,0x3c(%esp)
    xor    %eax,%eax
    mov    0xbf(%edx),%al
    push   %eax
    lea    0x4(%edx),%esi
    push   %esi
    call   func_59d90
    add    $0x8,%esp
    xor    %edx,%edx
    mov    0x4(%esp),%eax
    mov    data_f458e,%dl
    mov    %eax,0x8(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e18(,%eax,2),%al
    mov    %al,0x4c(%esp)
    shl    $0x2,%al
    add    $0x13,%al
    mov    %al,0x4c(%esp)
    mov    0x4(%esp),%eax
    xor    %edx,%edx
    mov    0x400(%eax),%ebx
    mov    %edx,0x28(%esp)
    test   %ebx,%ebx
    jle    jump_252ce
    mov    %esi,0x2c(%esp)
    mov    %esi,0x24(%esp)
    mov    %esi,0x20(%esp)
    mov    %esi,0x10(%esp)
    mov    %esi,0x30(%esp)
    mov    %esi,(%esp)
    mov    %esi,0x18(%esp)
    mov    %esi,0x1c(%esp)
  jump_24c64:
    mov    0x8(%esp),%esi
    mov    (%esi),%esi
    flds   0xd(%esi)
    fadds  data_8105e
    mov    0x4(%esi),%al
    call   func_72258
    fistpl 0xc(%esp)
    cmp    $0x1,%al
    jb     jump_252c1
    jbe    jump_25000
    cmp    $0x2,%al
    je     jump_25116
  jump_24c95:
    mov    0x28(%esp),%ecx
    mov    0x8(%esp),%esi
    mov    0x4(%esp),%edx
    inc    %ecx
    add    $0x4,%esi
    mov    0x400(%edx),%edi
    mov    %ecx,0x28(%esp)
    mov    %esi,0x8(%esp)
    cmp    %edi,%ecx
    jge    jump_252ce
    jmp    jump_24c64
  jump_24cbd:
    mov    (%esi),%eax
    mov    %eax,0x14(%esp)
    mov    $0x3,%eax
    mov    0xc(%esp),%edx
    mov    %eax,0x38(%esp)
    cmp    $0xdc,%edx
    jle    jump_24ce0
    xor    %eax,%eax
    mov    %eax,0x38(%esp)
    jmp    jump_24cfe
  jump_24ce0:
    test   %edx,%edx
    jle    jump_24cee
    movl   $0x1,0x38(%esp)
    jmp    jump_24cfe
  jump_24cee:
    cmp    $0xffffff24,%edx
    jle    jump_24cfe
    movl   $0x2,0x38(%esp)
  jump_24cfe:
    mov    0x5(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x1c(%esp),%eax
    mov    (%eax),%eax
    mov    0x40(%esp),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    push   %eax
    mov    0x48(%esp),%eax
    mov    0xab(%eax),%ebx
    push   %ebx
    mov    0x10(%esp),%ecx
    push   %ecx
    call   func_57efc
    mov    data_fe584,%ax
    add    $0x14,%esp
    mov    %ax,0x44(%esp)
    mov    0x14(%esp),%eax
    xor    %edx,%edx
    mov    data_f458e,%cl
    mov    0x17(%eax),%dl
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    $0x4,%edi
    test   %eax,%edx
    jne    jump_24d6e
    mov    0x42(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jne    jump_24e0b
  jump_24d6e:
    mov    0x3c(%esp),%eax
    cmpl   $0x0,0xcc(%eax)
    je     jump_24e0b
    mov    0x14(%esp),%eax
    cmpb   $0x0,0x14(%eax)
    je     jump_24e0b
    mov    $0x1,%bl
    xor    %ebp,%ebp
    mov    %bl,0x54(%esp)
    jmp    jump_24daf
  jump_24d97:
    mov    0x54(%esp),%cl
    add    %cl,%cl
    add    $0x1ee,%ebp
    mov    %cl,0x54(%esp)
    cmp    $0xd82,%ebp
    je     jump_24e0b
  jump_24daf:
    mov    0x14(%esp),%eax
    xor    %edx,%edx
    xor    %ecx,%ecx
    mov    0x54(%esp),%dl
    mov    0x14(%eax),%cl
    mov    0x3c(%esp),%eax
    and    %ecx,%edx
    xor    %ecx,%ecx
    mov    0xd8(%eax),%cl
    test   %ecx,%edx
    je     jump_24d97
    mov    data_92e18(%ebp),%al
    shl    $0x2,%al
    xor    %edx,%edx
    add    $0x13,%al
    mov    %al,%dl
    mov    0x38(%esp),%ebx
    sub    $0x3,%edx
    add    %ebx,%edx
    push   %edx
    push   %edi
    mov    0x5(%esi),%edx
    push   %edi
    sar    $0x10,%edx
    push   %edx
    mov    0x3(%esi),%edx
    sar    $0x10,%edx
    push   %edx
    mov    0x44(%esp),%ecx
    push   %ecx
    add    $0x2,%edi
    call   func_5a408
    add    $0x18,%esp
    jmp    jump_24d97
  jump_24e0b:
    mov    0x14(%esp),%eax
    cmp    data_c3504,%eax
    jne    jump_24e46
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    je     jump_24e46
    push   $0xf3
    push   %edi
    mov    0x5(%esi),%eax
    push   %edi
    sar    $0x10,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x34(%esp),%eax
    push   %eax
    call   func_5a408
    add    $0x18,%esp
  jump_24e46:
    mov    0x14(%esp),%eax
    xor    %edx,%edx
    mov    data_f458e,%cl
    mov    0x17(%eax),%dl
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    jne    jump_24e70
    mov    0x42(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jne    jump_24f46
  jump_24e70:
    mov    0x14(%esp),%eax
    mov    0x14(%eax),%al
    and    $0x80,%al
    and    $0xff,%eax
    je     jump_24f46
    mov    0x3c(%esp),%eax
    cmpl   $0xffffffff,0xd0(%eax)
    jne    jump_24f46
    xor    %ebx,%ebx
    mov    data_93b98,%cx
    mov    %bx,0x48(%esp)
    test   %cx,%cx
    jg     jump_24ec2
    jmp    jump_24edb
  jump_24eaa:
    mov    0x48(%esp),%edi
    inc    %edi
    mov    data_93b98,%dx
    mov    %di,0x48(%esp)
    cmp    %dx,%di
    jl     jump_24ec6
    jmp    jump_24edb
  jump_24ec2:
    mov    0x14(%esp),%ebx
  jump_24ec6:
    mov    0x46(%esp),%edx
    sar    $0x10,%edx
    imul   $0x1ee,%edx,%edx
    cmp    data_92e1d(%edx),%ebx
    jne    jump_24eaa
  jump_24edb:
    mov    0x48(%esp),%eax
    cmp    data_93b98,%ax
    jl     jump_24ef9
    mov    $0x786,%ebx
    mov    $data_81042,%edx
    xor    %eax,%eax
    call   func_25878
  jump_24ef9:
    mov    0x48(%esp),%cl
    mov    0x3c(%esp),%ebx
    xor    %eax,%eax
    mov    $0x1,%dl
    mov    0xd8(%ebx),%al
    shl    %cl,%dl
    and    $0xff,%edx
    test   %eax,%edx
    jne    jump_24f24
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jne    jump_24f46
  jump_24f24:
    mov    0x46(%esp),%ecx
    mov    0x24(%esp),%eax
    mov    0x5(%esi),%ebx
    mov    0x3(%esi),%edx
    sar    $0x10,%ecx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    add    $0x3,%ebx
    sub    $0x7,%edx
    call   func_4f228
  jump_24f46:
    mov    0x14(%esp),%eax
    xor    %edx,%edx
    mov    data_f458e,%cl
    mov    0x17(%eax),%dl
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_24c95
    mov    0x3c(%esp),%edx
    cmpl   $0x0,0xcc(%edx)
    je     jump_24c95
    mov    0x14(%esp),%ebx
    xor    %edx,%edx
    mov    0x14(%ebx),%dl
    test   %eax,%edx
    jne    jump_24c95
    movzbl 0x4c(%esp),%edi
    mov    0x5(%esi),%eax
    push   %edi
    sar    $0x10,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    sub    $0x4,%eax
    push   %eax
    mov    0x38(%esp),%ebp
    push   %ebp
    call   func_57210
    mov    0x5(%esi),%eax
    add    $0x10,%esp
    sar    $0x10,%eax
    push   %edi
    sub    $0x4,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   %ebp
    call   func_57210
    add    $0x10,%esp
    mov    0x5(%esi),%eax
    push   %edi
    sar    $0x10,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    add    $0x4,%eax
    push   %eax
    push   %ebp
    call   func_57210
    mov    0x5(%esi),%eax
    add    $0x10,%esp
    sar    $0x10,%eax
    push   %edi
    add    $0x4,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    push   %ebp
    call   func_57210
    add    $0x10,%esp
    jmp    jump_24c95
  jump_25000:
    mov    0x3c(%esp),%eax
    cmpl   $0x0,0xc4(%eax)
    jne    jump_2501a
    cmpl   $0x0,0x58a(%eax)
    je     jump_24c95
  jump_2501a:
    mov    $0x7,%ecx
    mov    0xc(%esp),%edi
    mov    (%esi),%ebx
    cmp    $0xdc,%edi
    jle    jump_25031
    xor    %ecx,%ecx
    jmp    jump_2507f
  jump_25031:
    cmp    $0x93,%edi
    jle    jump_25040
    mov    $0x1,%ecx
    jmp    jump_2507f
  jump_25040:
    cmp    $0x49,%edi
    jle    jump_2504c
    mov    $0x2,%ecx
    jmp    jump_2507f
  jump_2504c:
    test   %edi,%edi
    jle    jump_25057
    mov    $0x3,%ecx
    jmp    jump_2507f
  jump_25057:
    cmp    $0xffffffb7,%edi
    jle    jump_25063
    mov    $0x4,%ecx
    jmp    jump_2507f
  jump_25063:
    cmp    $0xffffff6d,%edi
    jle    jump_25072
    mov    $0x5,%ecx
    jmp    jump_2507f
  jump_25072:
    cmp    $0xffffff24,%edi
    jle    jump_2507f
    mov    $0x6,%ecx
  jump_2507f:
    mov    0x3c(%esp),%eax
    cmpl   $0xffffffff,0x58a(%eax)
    jne    jump_250c1
    cmpw   $0x0,0x21(%ebx)
    je     jump_250bc
    xor    %eax,%eax
    mov    data_f458e,%al
    imul   $0x1ee,%eax,%eax
    mov    %ecx,%edx
    sar    $0x1f,%edx
    movzbl data_92e18(%eax),%edi
    mov    %ecx,%eax
    sub    %edx,%eax
    sar    %eax
    shl    $0x2,%edi
    add    $0x10,%edi
    add    %edi,%eax
    jmp    jump_250c4
  jump_250bc:
    lea    0x30(%ecx),%eax
    jmp    jump_250c4
  jump_250c1:
    lea    0x68(%ecx),%eax
  jump_250c4:
    mov    0x3c(%esp),%edx
    cmpl   $0x0,0x58a(%edx)
    jne    jump_250e5
    testb  $0x1,0x23(%ebx)
    je     jump_250e5
    mov    %ecx,%edx
    mov    %ecx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    add    $0x70,%eax
  jump_250e5:
    push   %eax
    mov    0x9(%esi),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    0x7(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x5(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x3(%esi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x30(%esp),%ebp
    push   %ebp
    call   func_573c1
    add    $0x1c,%esp
    jmp    jump_24c95
  jump_25116:
    mov    0x3c(%esp),%eax
    cmpl   $0x0,0xc8(%eax)
    je     jump_24c95
    mov    $0x3,%ebp
    mov    0xc(%esp),%edx
    mov    (%esi),%eax
    cmp    $0xdc,%edx
    jle    jump_2513e
    xor    %ebp,%ebp
    jmp    jump_25156
  jump_2513e:
    test   %edx,%edx
    jle    jump_25149
    mov    $0x1,%ebp
    jmp    jump_25156
  jump_25149:
    cmp    $0xffffff24,%edx
    jle    jump_25156
    mov    $0x2,%ebp
  jump_25156:
    mov    0x58(%eax),%dl
    cmp    $0x5,%dl
    jne    jump_251ce
    mov    0x59(%eax),%ebx
    mov    0x20(%ebx),%bl
    mov    $0x1,%edx
    mov    data_f458e,%cl
    and    $0xff,%ebx
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_24c95
    mov    0x54(%eax),%ecx
    mov    $0x1,%ebx
    sar    $0x10,%ecx
    shl    %cl,%ebx
    mov    0x3c(%esp),%ecx
    xor    %edx,%edx
    mov    0xd8(%ecx),%dl
    test   %ebx,%edx
    je     jump_24c95
    mov    0x54(%eax),%eax
    mov    0x3c(%esp),%edx
    sar    $0x10,%eax
    mov    %ebp,%ebx
    push   %eax
    mov    0x5(%esi),%eax
    mov    0x3(%esi),%ecx
    sar    $0x10,%eax
    sar    $0x10,%ecx
    push   %eax
    mov    0xaf(%edx),%edx
    mov    0x24(%esp),%eax
    call   func_4f2a8
    jmp    jump_24c95
  jump_251ce:
    movb   $0x1,0x50(%esp)
    cmp    $0x4,%dl
    jne    jump_251e1
    mov    0x59(%eax),%eax
    mov    %eax,0x34(%esp)
    jmp    jump_251f8
  jump_251e1:
    mov    0x59(%eax),%eax
    mov    0xa(%eax),%eax
    sar    $0x10,%eax
    imul   $0x60,%eax,%eax
    mov    $data_93bc5,%edx
    add    %eax,%edx
    mov    %edx,0x34(%esp)
  jump_251f8:
    cmpl   $0x0,0x34(%esp)
    jne    jump_25210
    mov    $0x822,%ebx
    mov    $data_81050,%edx
    xor    %eax,%eax
    call   func_25878
  jump_25210:
    mov    0x34(%esp),%eax
    xor    %edx,%edx
    mov    data_f458e,%cl
    mov    0x17(%eax),%dl
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_24c95
    xor    %edi,%edi
    mov    %edi,0x40(%esp)
    jmp    jump_25249
  jump_25236:
    mov    0x50(%esp),%bh
    mov    0x40(%esp),%edx
    add    %bh,%bh
    inc    %edx
    mov    %bh,0x50(%esp)
    mov    %edx,0x40(%esp)
  jump_25249:
    mov    data_93b96,%edx
    mov    0x40(%esp),%eax
    sar    $0x10,%edx
    cmp    %eax,%edx
    jle    jump_24c95
    mov    0x34(%esp),%eax
    xor    %edx,%edx
    xor    %ecx,%ecx
    mov    0x50(%esp),%dl
    mov    0x15(%eax),%cl
    mov    0x3c(%esp),%eax
    and    %edx,%ecx
    xor    %edx,%edx
    mov    0xd8(%eax),%dl
    test   %edx,%ecx
    je     jump_25236
    mov    0x3e(%esp),%edx
    sar    $0x10,%edx
    mov    0x5(%esi),%ecx
    push   %edx
    mov    data_86495(%edi),%edx
    sar    $0x10,%ecx
    sar    $0x18,%edx
    add    %ecx,%edx
    push   %edx
    mov    data_8648d(%edi),%ecx
    mov    0x3(%esi),%edx
    sar    $0x18,%ecx
    sar    $0x10,%edx
    mov    %ebp,%ebx
    add    %edx,%ecx
    mov    0xaf(%eax),%edx
    mov    0x18(%esp),%eax
    inc    %edi
    call   func_4f2a8
    jmp    jump_25236
  jump_252c1:
    test   %al,%al
    je     jump_24cbd
    jmp    jump_24c95
  jump_252ce:
    add    $0x58,%esp
  jump_252d1:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_252d8:
/*----------------------------------------------------------------*/
    call   func_2bf10
    movl   $data_85a34,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_252e8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_25307
    mov    $0x859e0,%edx /* Warning: address points to a valid object/reloc, but no label found */
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_25307:
    mov    $0x1,%edx
    movl   $data_85a34,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_25327
    call   func_72124
  jump_25327:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2532c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    call   func_2c404
    mov    $0x2f,%edi
    mov    data_93b98,%dx
    xor    %esi,%esi
    test   %dx,%dx
    jle    jump_252d1
    add    $0x4,%ebp
  jump_2534e:
    xor    %ecx,%ecx
    movswl %si,%edx
    mov    data_f458e,%cl
    cmp    %ecx,%edx
    je     jump_2536d
    imul   $0x1ee,%ecx,%ecx
    cmpb   $0x0,data_92fd6(%ecx,%edx,1)
    je     jump_25382
  jump_2536d:
    mov    $0x3,%ebx
    movswl %si,%ecx
    movswl %di,%edx
    mov    %ebp,%eax
    call   func_4f228
    add    $0x10,%edi
  jump_25382:
    mov    data_93b98,%bx
    inc    %esi
    cmp    %bx,%si
    jge    jump_252d1
    jmp    jump_2534e


/*----------------------------------------------------------------*/
func_25398:
/*----------------------------------------------------------------*/
    call   func_2bf10
    movl   $0x85a1c,0xa7(%eax) /* Warning: address points to a valid object/reloc, but no label found */
    movw   $0x0,0xab(%eax)
    ret


/*----------------------------------------------------------------*/
func_253b4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_253d3
    mov    $0x859cc,%edx /* Warning: address points to a valid object/reloc, but no label found */
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_253d3:
    mov    $0x1,%edx
    movl   $0x85a1c,0xa7(%eax) /* Warning: address points to a valid object/reloc, but no label found */
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_253f3
    call   func_72124
  jump_253f3:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_253f8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4c,%esp
    mov    %eax,%ebp
    cmpl   $0x0,0x39(%eax)
    je     jump_25688
    mov    $0xffffffff,%esi
    xor    %ecx,%ecx
    mov    $0xf2,%edi
    mov    %ecx,0x44(%esp)
    mov    %edi,0x40(%esp)
    test   %edx,%edx
    je     jump_25428
    mov    %edx,0x40(%esp)
  jump_25428:
    mov    0xa9(%ebp),%ecx
    sar    $0x10,%ecx
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    %ecx,%ebx
    add    %eax,%eax
    xor    %ecx,%ebx
    mov    data_92e19(%eax),%edx
    mov    data_f458e,%bl
    mov    %edx,0x34(%esp)
    mov    %ebx,%edx
    shl    $0x5,%edx
    sub    %ebx,%edx
    shl    $0x3,%edx
    sub    %ebx,%edx
    mov    data_92fd6(%ecx,%edx,2),%dl
    mov    %dl,0x48(%esp)
    test   %dl,%dl
    je     jump_254aa
    mov    0x34(%esp),%edx
    test   %edx,%edx
    jne    jump_254aa
    mov    data_92e18(%eax),%dl
    shl    $0x2,%edx
    add    $0x13,%edx
    mov    data_92e17(%eax),%al
    mov    %edx,0x38(%esp)
    and    $0xff,%eax
    lea    0x0(,%eax,4),%edx
    add    %eax,%edx
    mov    $data_f4590,%eax
    shl    $0x2,%edx
    add    %edx,%eax
    mov    %eax,0x3c(%esp)
    jmp    jump_254b2
  jump_254aa:
    movl   $0xffffffff,0x44(%esp)
  jump_254b2:
    xor    %eax,%eax
    mov    0xa9(%ebp),%edx
    mov    data_f458e,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    jne    jump_25553
    mov    data_93b98,%dx
    xor    %ecx,%ecx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_2550b
    jmp    jump_254e9
  jump_254dc:
    mov    data_93b98,%bx
    inc    %eax
    cmp    %bx,%ax
    jge    jump_2550b
  jump_254e9:
    xor    %ebx,%ebx
    movswl %ax,%edx
    mov    data_f458e,%bl
    cmp    %ebx,%edx
    je     jump_254dc
    imul   $0x1ee,%ebx,%ebx
    cmpb   $0x0,data_92fd6(%edx,%ebx,1)
    je     jump_254dc
    inc    %ecx
    jmp    jump_254dc
  jump_2550b:
    mov    data_93b96,%eax
    sar    $0x10,%eax
    dec    %eax
    push   %eax
    movswl %cx,%eax
    push   %eax
    mov    $0xb,%eax
    call   func_1ce70
    push   %eax
    lea    0xc(%esp),%eax
    push   %eax
    mov    $0xf3,%esi
    mov    $0xf2,%edi
    call   func_720c9
    lea    0x10(%esp),%eax
    add    $0x10,%esp
    xor    %ecx,%ecx
    mov    %eax,0x3c(%esp)
    mov    %ecx,0x44(%esp)
    mov    %esi,0x38(%esp)
    mov    %edi,0x40(%esp)
    xor    %esi,%esi
  jump_25553:
    cmpl   $0xffffffff,0x34(%esp)
    jne    jump_25589
    mov    $0xc,%eax
    call   func_1ce70
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    mov    $0xf3,%edx
    call   func_720c9
    lea    0x8(%esp),%eax
    add    $0x8,%esp
    xor    %ebx,%ebx
    mov    %eax,0x3c(%esp)
    mov    %edx,0x38(%esp)
    mov    %ebx,0x44(%esp)
  jump_25589:
    mov    0x44(%esp),%ecx
    test   %ecx,%ecx
    jne    jump_255ee
    cmp    $0xffffffff,%esi
    jne    jump_255bf
    mov    0x40(%esp),%esi
    push   %esi
    lea    0x4(%ebp),%eax
    push   %eax
    call   func_59d90
    add    $0x8,%esp
    mov    0x3e(%esp),%eax
    push   $0x0
    sar    $0x10,%eax
    mov    $data_fd3aa,%edi
    push   %eax
    mov    0x3e(%esp),%eax
    lea    0x4(%ebp),%esi
    jmp    jump_255d1
  jump_255bf:
    mov    0x36(%esp),%eax
    push   %ecx
    mov    $data_fd3aa,%edi
    lea    0x4(%ebp),%esi
    push   $0xff
  jump_255d1:
    sar    $0x10,%eax
    xor    %ebx,%ebx
    push   %eax
    xor    %edx,%edx
    mov    0x48(%esp),%ecx
    push   $0x43
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_255ee:
    cmpb   $0x0,0x48(%esp)
    je     jump_2567b
    xor    %eax,%eax
    mov    0xa9(%ebp),%ecx
    mov    data_f458e,%al
    sar    $0x10,%ecx
    cmp    %eax,%ecx
    je     jump_2567b
    cmpl   $0xffffffff,0x44(%esp)
    je     jump_2567b
    mov    $0x3,%ebx
    mov    $0xe,%edx
    lea    0x4(%ebp),%eax
    call   func_4f228
    mov    0x34(%esp),%eax
    mov    $0xffffffff,%ebx
    test   %eax,%eax
    jne    jump_25651
    mov    0x48(%esp),%cl
    cmp    $0x3,%cl
    jne    jump_25647
    mov    $0x9,%ebx
    jmp    jump_25651
  jump_25647:
    cmp    $0x2,%cl
    jne    jump_25651
    mov    $0x8,%ebx
  jump_25651:
    cmp    $0xffffffff,%ebx
    je     jump_2567b
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd96,%dx
    call   func_1b084
    push   $0x3
    push   $0xe
    push   %ebx
    push   %eax
    lea    0x4(%ebp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
  jump_2567b:
    mov    $data_fa35c,%eax
    lea    0x4(%ebp),%edx
    call   func_50690
  jump_25688:
    add    $0x4c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_25694:
/*----------------------------------------------------------------*/
    push   %ebx
    cmpl   $0x0,0x39(%eax)
    je     jump_256a9
    mov    0xa7(%eax),%ebx
    mov    $0x96,%edx
    call   *0xc(%ebx)
  jump_256a9:
    pop    %ebx
    ret

vtable_256ac:
    .long   func_25704
    .long   func_25729
    .long   func_257b4
    .long   func_25757
    .long   func_25757
    .long   func_257ea
    .long   func_25803
    .long   func_257b4
    .long   func_257b4
    .long   func_257b4
    .long   func_257e3
    .long   func_257b4
    .long   func_257c5


/*----------------------------------------------------------------*/
func_256e0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %edx,%eax
    dec    %eax
    cmp    $0xc,%ax
    ja     func_257b4
    and    $0xffff,%eax
    jmp    *%cs:vtable_256ac(,%eax,4)


/*----------------------------------------------------------------*/
func_25704:
/*----------------------------------------------------------------*/
    movsbw 0x25(%esi),%ax
    sub    $0x31,%eax
    mov    %ax,0xab(%esi)
    cmp    data_93b98,%ax
    jl     func_257b4
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_25729:
/*----------------------------------------------------------------*/
    movl   $0x0,0x39(%esi)
    mov    $data_fa35c,%eax
    mov    0x14(%esi),%ebx
    mov    0x10(%esi),%ecx
    mov    0x8(%esi),%edx
    push   %ebx
    mov    0xc(%esi),%ebx
    movl   $0x0,0x35(%esi)
    call   func_505f8
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_25757:
/*----------------------------------------------------------------*/
    movzbl data_f458e,%ebp
    mov    %ebp,%eax
    shl    $0x5,%eax
    sub    %ebp,%eax
    shl    $0x3,%eax
    sub    %ebp,%eax
    add    %eax,%eax
    mov    %eax,(%esp)
    mov    0xa9(%esi),%eax
    mov    (%esp),%edx
    sar    $0x10,%eax
    add    %eax,%edx
    cmpb   $0x0,data_92fd6(%edx)
    je     jump_257a0
    cmp    %ebp,%eax
    je     jump_257a0
    mov    %eax,%edx
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmpl   $0xffffffff,data_92e19(,%eax,2)
    jne    jump_257a9
  jump_257a0:
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_257a9:
    mov    0xab(%esi),%al
    mov    %al,data_86775


/*----------------------------------------------------------------*/
func_257b4:
/*----------------------------------------------------------------*/
    movswl %di,%edx
    mov    %esi,%eax
    call   func_2eb04
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_257c5:
/*----------------------------------------------------------------*/
    mov    0xa7(%esi),%ebp
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebp)
    movswl %di,%edx
    mov    %esi,%eax
    call   func_2eb04
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_257e3:
/*----------------------------------------------------------------*/
    mov    %bx,0xab(%esi)


/*----------------------------------------------------------------*/
func_257ea:
/*----------------------------------------------------------------*/
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_25803:
/*----------------------------------------------------------------*/
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0x10(%ebx)
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_25820:
/*----------------------------------------------------------------*/
    add    $0x1e,%eax
    xor    %edx,%edx
    call   func_1b66c
    sub    $0x1e,%eax
    ret


/*----------------------------------------------------------------*/
func_25830:
/*----------------------------------------------------------------*/
    add    $0x1e,%eax
    call   func_1b4f0
    sub    $0x1e,%eax
    ret


/*----------------------------------------------------------------*/
func_25840:
/*----------------------------------------------------------------*/
    mov    $data_c849c,%eax
    call   func_25a0c
    mov    $data_c84f8,%eax
    call   func_2bdac
    mov    $data_f8638,%eax
    call   func_4b27c
    push   $data_86500
    push   $data_81064
    call   func_73457
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_25874:
/*----------------------------------------------------------------*/
    int3
  jump_25875:
    ret


/*----------------------------------------------------------------*/
func_25878:
/*----------------------------------------------------------------*/
    test   %eax,%eax
    jne    jump_25875
    push   %ebx
    push   %edx
    push   $data_8106a
    jmp    jump_2591c


/*----------------------------------------------------------------*/
func_25888:
/*----------------------------------------------------------------*/
    test   %eax,%eax
    jne    jump_25875
    push   %ebx
    push   %edx
    push   $data_81088
    jmp    jump_2591c


/*----------------------------------------------------------------*/
func_25898:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x100,%esp
    test   %eax,%eax
    jne    jump_258e1
    mov    $data_86500,%esi
    mov    %esp,%edi
    push   %edi
  jump_258ac:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_258c4
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_258ac
  jump_258c4:
    pop    %edi
    mov    %esp,%eax
    push   %eax
    push   %ebx
    push   %edx
    push   $data_810a6
    push   $data_86500
    call   func_720c9
    add    $0x14,%esp
    call   func_2592c
  jump_258e1:
    add    $0x100,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_258ec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x4,%esp
    lea    0x14(%esp),%ebx
    mov    0x10(%esp),%edx
    mov    $data_86500,%eax
    mov    %ebx,(%esp)
    mov    %esp,%ebx
    call   func_73adf
    xor    %edx,%edx
    mov    %edx,(%esp)
    add    $0x4,%esp
    pop    %edx
    pop    %ebx
    ret
  jump_2591c:
    push   $data_86500
    call   func_720c9
    add    $0x10,%esp
    lea    0x0(%eax),%eax


/*----------------------------------------------------------------*/
func_2592c:
/*----------------------------------------------------------------*/
    call   func_25874
    mov    $0x1,%eax
    jmp    func_7350a


/*----------------------------------------------------------------*/
func_2593c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_25956
    mov    %ebx,%ecx
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_55458
    mov    %esi,%eax
  jump_25956:
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2595c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_55508
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2596c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    call   func_73af4
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_2598b
    mov    %ebx,%ecx
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_55458
    mov    %esi,%eax
  jump_2598b:
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_25990:
/*----------------------------------------------------------------*/
    push   %esi
    call   func_73bd7
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_259aa
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_55458
    mov    %esi,%eax
  jump_259aa:
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_259ac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_55508
    mov    %ebx,%eax
    call   func_73bef
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_259d0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_86600,%eax
    call   func_73a9a
    mov    $data_c849c,%eax
    mov    $0x1,%edx
    call   func_259f4
    mov    %edx,data_86608
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_259f4:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_259fc:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    call   func_25a0c
    mov    %ebx,%eax
    pop    %ebx
    nop
  jump_25a08:
    ret


/*----------------------------------------------------------------*/
func_25a0c:
/*----------------------------------------------------------------*/
    cmpl   $0x0,data_c84cc
    je     jump_25a08
    jmp    jump_614bf


/*----------------------------------------------------------------*/
func_25a1c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $0x1e0,%edx
    mov    $0x280,%eax
    call   func_61264
    mov    %eax,data_c84cc
    test   %eax,%eax
    sete   %al
    and    $0xff,%eax
    dec    %eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_25a40:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    $0x2,%ah
    mov    %ah,%dh
    int    $0x16
    jne    jump_25a55
    and    $0xf,%dh
    dec    %dh
    jne    jump_25a55
    sub    %eax,%eax
  jump_25a55:
    mov    %eax,%ebx
    mov    %eax,%edx
    xor    %ah,%bh
    mov    %ax,data_c84c8
    and    $0x1,%bl
    and    $0xffff,%ebx
    jne    jump_25a79
    xor    %ah,%dh
    and    $0x2,%dl
    and    $0xffff,%edx
    je     jump_25a85
  jump_25a79:
    movl   $0xffffffff,data_c84ac
    jmp    jump_25a8b
  jump_25a85:
    mov    %ebx,data_c84ac
  jump_25a8b:
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x4,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_c84a8
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x8,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_c84a4
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x10,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_c84b8
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x20,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_c84b4
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x40,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    xor    %ah,%ah
    dec    %edx
    and    $0x80,%al
    mov    %edx,data_c84b0
    and    $0xffff,%eax
    sete   %al
    and    $0xff,%eax
    dec    %eax
    mov    %eax,data_c84bc
    mov    $0x1,%ah
    mov    %ah,%dh
    int    $0x16
    jne    jump_25b44
    and    $0xf,%dh
    dec    %dh
    jne    jump_25b44
    sub    %eax,%eax
  jump_25b44:
    test   %ax,%ax
    je     jump_25b85
    xor    %ah,%ah
    mov    %ah,%dh
    int    $0x16
    jne    jump_25b5a
    and    $0xf,%dh
    dec    %dh
    jne    jump_25b5a
    sub    %eax,%eax
  jump_25b5a:
    mov    %eax,%edx
    xor    %ah,%dh
    mov    %dx,data_c84c6
    xor    %al,%al
    and    $0xffff,%eax
    mov    $0xffffffff,%esi
    sar    $0x8,%eax
    mov    %esi,data_c84a0
    mov    %ax,data_c84c4
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_25b85:
    xor    %ecx,%ecx
    mov    %ecx,data_c84a0
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_25b94:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    lea    0x10(%esp),%eax
    lea    0xc(%esp),%ecx
    lea    0x8(%esp),%ebx
    push   %eax
    lea    0x8(%esp),%edx
    lea    0x4(%esp),%eax
    call   func_603be
    mov    (%esp),%eax
    cmp    data_c84ec,%eax
    jne    jump_25bce
    mov    0x4(%esp),%eax
    cmp    data_c84f0,%eax
    je     jump_25bec
  jump_25bce:
    mov    (%esp),%eax
    mov    $0xffffffff,%esi
    mov    %eax,data_c84ec
    mov    0x4(%esp),%eax
    mov    %esi,data_c84e8
    mov    %eax,data_c84f0
    jmp    jump_25bf4
  jump_25bec:
    xor    %ecx,%ecx
    mov    %ecx,data_c84e8
  jump_25bf4:
    mov    0x8(%esp),%edi
    cmp    data_c84d0,%edi
    je     jump_25c12
    mov    $0xffffffff,%eax
    mov    %edi,data_c84d0
    mov    %eax,data_c84dc
    jmp    jump_25c1a
  jump_25c12:
    xor    %ebp,%ebp
    mov    %ebp,data_c84dc
  jump_25c1a:
    mov    0xc(%esp),%edx
    cmp    data_c84d4,%edx
    je     jump_25c39
    mov    $0xffffffff,%ecx
    mov    %edx,data_c84d4
    mov    %ecx,data_c84e0
    jmp    jump_25c41
  jump_25c39:
    xor    %ebx,%ebx
    mov    %ebx,data_c84e0
  jump_25c41:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_25c4c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    xor    %ebx,%ebx
    mov    %ebx,data_c84dc
    mov    %ebx,data_c84e0
    mov    %ebx,data_c84e8
    mov    %ebx,data_c84a0
    call   func_25a40
    cmpl   $0x0,data_c84cc
    je     jump_25c7f
    mov    %edx,%eax
    call   func_25b94
  jump_25c7f:
    mov    data_8660c,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_25c88:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    push   %edi
    push   %ebp
    xor    %edx,%edx
    mov    %edx,data_c84e8
    mov    %edx,data_c84dc
    mov    %edx,data_c84e0
    mov    %edx,data_c84a0
    mov    0x8(%eax),%dx
    cmp    $0x2,%dx
    jb     jump_25e64
    jbe    jump_25cf2
    cmp    $0x3,%dx
    je     jump_25d4e
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_25cc5:
    mov    0xc(%eax),%edx
    mov    0x10(%eax),%eax
    mov    %edx,data_c84ec
    mov    %eax,data_c84f0
    mov    %eax,%edx
    mov    data_c84ec,%eax
    mov    $0xffffffff,%ecx
    call   func_6043c
    mov    %ecx,data_c84e8
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_25cf2:
    cmpl   $0x0,0xc(%eax)
    jne    jump_25d36
    mov    0x10(%eax),%edx
    mov    $0xffffffff,%ebp
    mov    %edx,data_c84d0
    mov    0xa(%eax),%dx
    mov    %ebp,data_c84dc
    test   %dx,%dx
    je     jump_25d29
    cmpl   $0x0,data_c84d0
    je     jump_25d29
    mov    %ebp,data_c84ac
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_25d29:
    xor    %edx,%edx
    mov    %edx,data_c84ac
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_25d36:
    mov    0x10(%eax),%eax
    mov    $0xffffffff,%edi
    mov    %eax,data_c84d4
    mov    %edi,data_c84e0
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_25d4e:
    mov    0xa(%eax),%dx
    mov    %dx,data_c84c8
    mov    0xc(%eax),%dx
    mov    0x10(%eax),%ax
    mov    %ax,data_c84c6
    mov    data_c84c8,%ax
    mov    %dx,data_c84c4
    mov    %eax,%edx
    mov    $0xffffffff,%edi
    xor    %ah,%dh
    mov    %edi,data_c84a0
    and    $0x1,%dl
    and    $0xffff,%edx
    jne    jump_25d9d
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x2,%dl
    and    $0xffff,%edx
    je     jump_25da9
  jump_25d9d:
    movl   $0xffffffff,data_c84ac
    jmp    jump_25daf
  jump_25da9:
    mov    %edx,data_c84ac
  jump_25daf:
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x4,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_c84a8
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x8,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_c84a4
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x10,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_c84b8
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x20,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    dec    %edx
    mov    %edx,data_c84b4
    mov    %eax,%edx
    xor    %ah,%dh
    and    $0x40,%dl
    and    $0xffff,%edx
    sete   %dl
    and    $0xff,%edx
    xor    %ah,%ah
    dec    %edx
    and    $0x80,%al
    mov    %edx,data_c84b0
    and    $0xffff,%eax
    je     jump_25e5a
    movl   $0xffffffff,data_c84bc
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_25e5a:
    mov    %eax,data_c84bc
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret
  jump_25e64:
    cmp    $0x1,%dx
    je     jump_25cc5
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_25e80:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2f330
    mov    %eax,%edx
    movl   $data_85b08,0xa7(%eax)
    call   func_25ee0
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_25e9c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_25ebb
    mov    $0x85ac4,%edx /* Warning: address points to a valid object/reloc, but no label found */
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_25ebb:
    mov    $0x1,%edx
    movl   $data_85b08,0xa7(%eax)
    call   func_2f348
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_25edb
    call   func_72124
  jump_25edb:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_25ee0:
/*----------------------------------------------------------------*/
    movl   $0x0,0xdaf(%eax)
    ret

vtable_25eec:
    .long   func_26075
    .long   func_2614a
    .long   func_26516
    .long   func_262c4
    .long   func_262c4
    .long   func_262c4
    .long   func_262c4
    .long   func_262c4
    .long   func_263ce
    .long   func_263ce
    .long   func_2656f
    .long   func_265cb
    .long   func_265cb
    .long   func_26614
    .long   func_267ca
    .long   func_266c1
    .long   func_26242
    .long   func_261c6
    .long   func_261c6
    .long   func_262a2
    .long   func_262c4
    .long   func_26710
    .long   func_260d0
    .long   func_26483
    .long   func_267ca
    .long   func_26771


/*----------------------------------------------------------------*/
func_25f54:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x290,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    test   %edx,%edx
    jne    jump_25f7a
    mov    $0x48,%ebx
    mov    $data_810dc,%edx
    xor    %eax,%eax
    call   func_25878
  jump_25f7a:
    mov    %esi,0xdaf(%ecx)
    movswl (%esi),%eax
    push   %eax
    push   $data_810ec
    lea    -0x38(%ebp),%eax
    push   %eax
    lea    -0x38(%ebp),%ebx
    call   func_720c9
    add    $0xc,%esp
    mov    $data_810f6,%edx
    mov    %ecx,%eax
    call   func_2f390
    lea    0xc95(%ecx),%eax
    mov    %eax,-0x10(%ebp)
    lea    0xcb0(%ecx),%eax
    mov    %eax,-0x4(%ebp)
    mov    -0x10(%ebp),%eax
    cmpb   $0x1,(%eax)
    je     jump_25fcf
    mov    $0x55,%ebx
    mov    $data_810ff,%edx
    xor    %eax,%eax
    call   func_25878
  jump_25fcf:
    cmpl   $0x1,0xda3(%ecx)
    jle    jump_25ff9
    mov    -0x4(%ebp),%eax
    cmpb   $0x0,(%eax)
    je     jump_25ff9
    mov    $0x57,%ebx
    mov    $data_8110f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_25ff9:
    mov    -0x10(%ebp),%esi
    lea    -0x290(%ebp),%edi
    mov    0x5(%esi),%esi
    push   %edi
  jump_26006:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2601e
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_26006
  jump_2601e:
    pop    %edi
    mov    0xdaf(%ecx),%ebx
    mov    0x2(%ebx),%edx
    mov    (%ebx),%ax
    mov    0x6(%ebx),%esi
    cmp    $0x19,%ax
    ja     func_267ca
    and    $0xffff,%eax
    shl    $0x2,%eax
    mov    %eax,-0x18(%ebp)
    lea    0x24(%edx),%eax
    mov    %eax,-0x8(%ebp)
    lea    0x24(%esi),%eax
    mov    %edx,-0x14(%ebp)
    mov    %eax,-0xc(%ebp)
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,-0x14(%ebp)
    mov    -0x14(%ebp),%edi
    shl    $0x4,%eax
    sub    %edi,%eax
    mov    -0x18(%ebp),%edi
    add    $data_f4746,%eax
    jmp    *%cs:vtable_25eec(%edi)


/*----------------------------------------------------------------*/
func_26075:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    mov    data_f458e,%bl
    push   %eax
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    xor    %ebx,%ebx
    mov    data_92e17(,%eax,2),%bl
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edi
    push   %edi
    call   func_720c9
    mov    -0x4(%ebp),%eax
    movw   $0x1f,0x1(%eax)
    add    $0x10,%esp
    mov    %dx,0x3(%eax)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_260d0:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    mov    data_f458e,%bl
    push   %eax
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    xor    %ebx,%ebx
    mov    data_92e17(,%eax,2),%bl
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    mov    -0xc(%ebp),%edi
    shl    $0x2,%eax
    push   %edi
    add    $data_f4590,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ebx
    push   %ebx
    call   func_720c9
    mov    -0x4(%ebp),%eax
    movw   $0x1f,0x1(%eax)
    mov    %dx,0x3(%eax)
    movw   $0x1d,0xccc(%ecx)
    imul   $0x5,0x16(%esi),%dx
    mov    0x14(%esi),%ax
    add    %eax,%edx
    add    $0x14,%esp
    mov    %dx,0xcce(%ecx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2614a:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    xor    %esi,%esi
    mov    0x42(%edx),%ax
    mov    0x4c(%edx),%si
    sub    %esi,%eax
    push   %eax
    mov    -0x8(%ebp),%esi
    push   %esi
    mov    0x6(%ebx),%bl
    push   %esi
    movzbl %bl,%esi
    lea    0x0(,%esi,4),%eax
    add    %esi,%eax
    shl    $0x3,%eax
    add    $data_f3e40,%eax
    add    $0xa,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%esi
    push   %esi
    call   func_720c9
    mov    -0x4(%ebp),%eax
    movw   $0x1e,0x1(%eax)
    xor    %ah,%ah
    mov    %bl,%al
    mov    -0x4(%ebp),%ebx
    mov    %ax,0x3(%ebx)
    movw   $0x1d,0xccc(%ecx)
    imul   $0x5,0x16(%edx),%bx
    mov    0x14(%edx),%ax
    add    %eax,%ebx
    add    $0x18,%esp
    mov    %bx,0xcce(%ecx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_261c6:
/*----------------------------------------------------------------*/
    mov    0xdaf(%ecx),%ebx
    mov    0x6(%ebx),%edx
    xor    %esi,%esi
    xor    %eax,%eax
    mov    0x42(%edx),%si
    mov    0x4c(%edx),%ax
    sub    %eax,%esi
    push   %esi
    lea    0x24(%edx),%eax
    push   %eax
    mov    0x2(%ebx),%ebx
    push   %eax
    lea    0x34(%ebx),%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edi
    push   %edi
    call   func_720c9
    xor    %ah,%ah
    mov    data_f458e,%al
    mov    -0x4(%ebp),%esi
    add    $0xe,%eax
    mov    %ax,0x1(%esi)
    movsbw 0xaa(%ebx),%ax
    mov    %ax,0x3(%esi)
    movw   $0x1d,0xccc(%ecx)
    imul   $0x5,0x16(%edx),%bx
    mov    0x14(%edx),%ax
    add    %eax,%ebx
    add    $0x18,%esp
    mov    %bx,0xcce(%ecx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26242:
/*----------------------------------------------------------------*/
    mov    -0xc(%ebp),%eax
    push   %eax
    lea    0x34(%edx),%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ebx
    push   %ebx
    call   func_720c9
    xor    %ah,%ah
    mov    data_f458e,%al
    mov    -0x4(%ebp),%ebx
    add    $0xe,%eax
    mov    %ax,0x1(%ebx)
    movsbw 0xaa(%edx),%ax
    mov    %ax,0x3(%ebx)
    movw   $0x1d,0xccc(%ecx)
    imul   $0x5,0x16(%esi),%dx
    mov    0x14(%esi),%ax
    add    %eax,%edx
    add    $0x10,%esp
    mov    %dx,0xcce(%ecx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_262a2:
/*----------------------------------------------------------------*/
    add    $0x1c,%edx
    push   %edx
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%esi
    push   %esi
    call   func_720c9
    add    $0xc,%esp
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_262c4:
/*----------------------------------------------------------------*/
    mov    0xdaf(%ecx),%eax
    mov    0x2(%eax),%esi
    mov    0x6(%eax),%edi
    cmpb   $0x4,0x58(%esi)
    je     jump_262e7
    mov    $0xb3,%ebx
    mov    $data_8111f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_262e7:
    mov    0xdaf(%ecx),%eax
    movswl (%eax),%eax
    mov    0x59(%esi),%edx
    cmp    $0x14,%eax
    jne    jump_26360
    mov    0x42(%edx),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_2630a
    mov    $0xd,%eax
    jmp    jump_2630f
  jump_2630a:
    mov    $0xe,%eax
  jump_2630f:
    call   func_1ce70
    push   %eax
    mov    0x42(%edx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x58(%edx),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_2632e
    mov    $0xd,%eax
    jmp    jump_26333
  jump_2632e:
    mov    $0xe,%eax
  jump_26333:
    call   func_1ce70
    push   %eax
    mov    0x58(%edx),%eax
    sar    $0x10,%eax
    push   %eax
    add    $0x1c,%edx
    push   %edx
    lea    0x34(%esi),%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edi
    push   %edi
    call   func_720c9
    add    $0x20,%esp
    jmp    jump_263a7
  jump_26360:
    mov    %edi,%eax
    shl    $0x5,%eax
    sub    %edi,%eax
    shl    $0x3,%eax
    mov    %edi,%ebx
    sub    %edi,%eax
    xor    %edi,%ebx
    mov    data_92e17(,%eax,2),%bl
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    add    $0x1c,%edx
    push   %edx
    lea    0x34(%esi),%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ecx
    push   %ecx
    call   func_720c9
    add    $0x14,%esp
  jump_263a7:
    xor    %ah,%ah
    mov    data_f458e,%al
    mov    -0x4(%ebp),%edx
    add    $0xe,%eax
    mov    %ax,0x1(%edx)
    movsbw 0xaa(%esi),%ax
    mov    %ax,0x3(%edx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_263ce:
/*----------------------------------------------------------------*/
    mov    0xdaf(%ecx),%edi
    mov    0x2(%edi),%esi
    mov    0x58(%esi),%bh
    mov    0x6(%edi),%edi
    cmp    $0x4,%bh
    je     jump_263f5
    je     jump_263f5
    mov    $0xcd,%ebx
    mov    $data_8112f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_263f5:
    mov    0xdaf(%ecx),%edx
    mov    0x59(%esi),%eax
    movswl (%edx),%edx
    add    $0x1c,%eax
    cmp    $0x9,%edx
    jne    jump_2644b
    push   %eax
    mov    %edi,%eax
    shl    $0x5,%eax
    sub    %edi,%eax
    shl    $0x3,%eax
    mov    %edi,%edx
    sub    %edi,%eax
    xor    %edi,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ebx
    push   %ebx
    call   func_720c9
    add    $0x10,%esp
    jmp    jump_26462
  jump_2644b:
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edx
    push   %edx
    call   func_720c9
    add    $0xc,%esp
  jump_26462:
    mov    -0x4(%ebp),%eax
    add    $0xe,%edi
    mov    %di,0x1(%eax)
    mov    -0x4(%ebp),%edx
    movsbw 0xaa(%esi),%ax
    mov    %ax,0x3(%edx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26483:
/*----------------------------------------------------------------*/
    mov    0x58(%edx),%bl
    mov    %edx,%esi
    cmp    $0x5,%bl
    je     jump_2649e
    mov    $0xe0,%ebx
    mov    $data_8113f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2649e:
    mov    0x59(%esi),%edi
    test   %edi,%edi
    jne    jump_264b6
    mov    $0xe3,%ebx
    mov    $data_8114f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_264b6:
    mov    $0x1,%edx
    mov    (%edi),%eax
    xor    %ebx,%ebx
    mov    data_f458e,%cl
    mov    0x17(%eax),%bl
    shl    %cl,%edx
    test   %edx,%ebx
    jne    jump_264d1
    mov    0x4(%edi),%eax
  jump_264d1:
    add    $0x1c,%eax
    push   %eax
    lea    0x34(%esi),%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ebx
    push   %ebx
    call   func_720c9
    xor    %ah,%ah
    mov    data_f458e,%al
    mov    -0x4(%ebp),%edx
    add    $0xe,%eax
    mov    %ax,0x1(%edx)
    movsbw 0xaa(%esi),%ax
    add    $0x10,%esp
    mov    %ax,0x3(%edx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26516:
/*----------------------------------------------------------------*/
    mov    0x2(%ebx),%bx
    movswl %bx,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edx
    push   %edx
    call   func_720c9
    mov    -0x4(%ebp),%eax
    movw   $0x0,0x3(%eax)
    add    $0xc,%esp
    mov    %bx,0x1(%eax)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2656f:
/*----------------------------------------------------------------*/
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%esi
    push   %esi
    call   func_720c9
    mov    0xdaf(%ecx),%eax
    mov    -0x4(%ebp),%edx
    mov    0x2(%eax),%ax
    movw   $0x0,0x3(%edx)
    add    $0xc,%esp
    mov    %ax,0x1(%edx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_265cb:
/*----------------------------------------------------------------*/
    mov    0xdaf(%ecx),%eax
    mov    0x2(%eax),%edx
    mov    0x6(%eax),%eax
    test   %eax,%eax
    je     jump_265f5
    add    $0x1c,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ebx
    push   %ebx
    call   func_720c9
    add    $0xc,%esp
  jump_265f5:
    xor    %ah,%ah
    mov    -0x4(%ebp),%ebx
    mov    data_f458e,%al
    mov    %dx,0x3(%ebx)
    add    $0xe,%eax
    mov    %ax,0x1(%ebx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26614:
/*----------------------------------------------------------------*/
    mov    %edx,%ecx
    test   %edx,%edx
    jne    jump_2662b
    mov    $0x114,%ebx
    mov    $data_8115f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2662b:
    xor    %edx,%edx
    mov    0x57(%ecx),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    lea    0x24(%ecx),%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edx
    push   %edx
    xor    %ebx,%ebx
    call   func_720c9
    add    $0x10,%esp
    mov    $data_8116f,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    -0x4(%ebp),%edx
    mov    %ax,0x1(%edx)
    xor    %eax,%eax
    mov    0x1(%edx),%ax
    cmp    $0xffff,%eax
    jne    jump_266a7
    mov    $0x118,%ebx
    mov    $data_81180,%edx
    xor    %eax,%eax
    call   func_25878
  jump_266a7:
    imul   $0x5,0x16(%ecx),%dx
    mov    0x14(%ecx),%ax
    add    %edx,%eax
    mov    -0x4(%ebp),%edx
    mov    %ax,0x3(%edx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_266c1:
/*----------------------------------------------------------------*/
    mov    -0x8(%ebp),%esi
    push   %esi
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edi
    push   %edi
    call   func_720c9
    mov    -0x4(%ebp),%eax
    movw   $0x1d,0x1(%eax)
    imul   $0x5,0x16(%edx),%bx
    mov    0x14(%edx),%ax
    mov    -0x4(%ebp),%edx
    add    %ebx,%eax
    mov    %ax,0x3(%edx)
    movw   $0x2c,0xccc(%ecx)
    add    $0xc,%esp
    movw   $0x2,0xcce(%ecx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26710:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%ecx
    push   %ecx
    mov    -0x4(%ebp),%edx
    call   func_720c9
    xor    %ah,%ah
    movw   $0x0,0x3(%edx)
    mov    data_f458e,%al
    add    $0xc,%esp
    mov    %ax,0x1(%edx)
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_26771:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    lea    -0x290(%ebp),%eax
    push   %eax
    mov    -0x10(%ebp),%eax
    mov    0x5(%eax),%edx
    push   %edx
    call   func_720c9
    xor    %ah,%ah
    mov    -0x4(%ebp),%edx
    mov    data_f458e,%al
    movw   $0x0,0x3(%edx)
    add    $0xc,%esp
    mov    %ax,0x1(%edx)


/*----------------------------------------------------------------*/
func_267ca:
/*----------------------------------------------------------------*/
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_267d4:
/*----------------------------------------------------------------*/
    cmp    $0x1,%dx
    jb     jump_267e0
    jbe    jump_267e8
    cmp    $0x32,%dx
  jump_267e0:
    movswl %dx,%edx
    jmp    func_2f448
  jump_267e8:
    movl   $0xffffffff,0x35(%eax)
    mov    0xa7(%eax),%ebx
    movl   $0xffffffff,0x39(%eax)
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_26804:
/*----------------------------------------------------------------*/
    jmp    func_2fe54


/*----------------------------------------------------------------*/
func_2680c:
/*----------------------------------------------------------------*/
    call   func_2bf10
    movl   $data_85af0,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_2681c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2683b
    mov    $0x85ab0,%edx /* Warning: address points to a valid object/reloc, but no label found */
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2683b:
    mov    $0x1,%edx
    movl   $data_85af0,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2685b
    call   func_72124
  jump_2685b:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_26864:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,%edi
    cmp    $0x1,%dx
    jb     jump_268ae
    jbe    jump_2687d
    cmp    $0x2,%dx
    je     jump_268be
    jmp    jump_268ae
  jump_2687d:
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e17(,%eax,2),%al
    xor    %ah,%ah
    add    $0x8,%eax
    xor    %ebx,%ebx
    movswl %ax,%edx
    mov    $data_f8638,%eax
    call   func_4acbc
  jump_268ae:
    movswl %si,%edx
    mov    %edi,%ebx
    mov    %ebp,%eax
    call   func_2eb04
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_268be:
    mov    $0x1,%ecx
    mov    $data_fa35c,%eax
    mov    %ecx,%ebx
    mov    %ecx,%edx
    call   func_51f24
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_268dc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x610,%esp
    mov    %eax,0x5d4(%esp)
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %ecx,%ecx
    mov    $data_c8c44,%edx
    mov    data_92e17(,%eax,2),%cl
    xor    %ah,%ah
    mov    %edx,0x604(%esp)
    mov    %ah,data_c8c44
    mov    %ah,(%esp)
    xor    %edx,%edx
    mov    $data_81190,%eax
    call   func_1bb10
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_26943
    mov    $0x1c1,%ebx
    mov    $data_8119c,%edx
    call   func_25878
  jump_26943:
    xor    %ebx,%ebx
    mov    $data_811e8,%edi
    mov    %ebx,0x5e8(%esp)
    xor    %esi,%esi
  jump_26953:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    call   func_2f538
    lea    0x584(%esp),%eax
    push   %eax
    push   $data_811ac
    lea    0x3f4(%esp),%eax
    push   %eax
    call   func_727ed
    add    $0xc,%esp
    mov    $data_811af,%edx
    lea    0x584(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_269ce
    lea    0x5e0(%esp),%eax
    push   %eax
    lea    0x588(%esp),%eax
    push   %eax
    push   $data_811b7
    lea    0x3f8(%esp),%eax
    push   %eax
    call   func_727ed
    add    $0x10,%esp
    cmp    0x5e0(%esp),%ecx
    jne    jump_269ff
    movl   $0x1,0x5e8(%esp)
    jmp    jump_269ff
  jump_269ce:
    mov    $data_811bd,%edx
    lea    0x584(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_269ff
    push   %ecx
    push   $data_811c1
    mov    $0x1e8,%ebx
    call   func_258ec
    add    $0x8,%esp
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_25898
  jump_269ff:
    mov    0x5e8(%esp),%ebx
    cmp    %ebx,%esi
    je     jump_26953
    xor    %esi,%esi
    mov    %esi,0x5dc(%esp)
    cmp    $0x2,%ebx
    je     jump_2700c
    lea    0x0(,%ecx,4),%eax
    add    %ecx,%eax
    mov    $data_f4590,%edx
    shl    $0x2,%eax
    add    %eax,%edx
    mov    %edx,0x5d8(%esp)
  jump_26a3a:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    call   func_2f538
    lea    0x584(%esp),%eax
    push   %eax
    push   $data_811f8
    lea    0x3f4(%esp),%eax
    push   %eax
    call   func_727ed
    add    $0xc,%esp
    mov    $data_811fb,%edx
    lea    0x584(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    je     jump_26a8f
    mov    $data_81203,%edx
    lea    0x584(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_26a9f
  jump_26a8f:
    movl   $0x2,0x5e8(%esp)
    jmp    jump_26ffe
  jump_26a9f:
    mov    $data_81207,%edx
    lea    0x584(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_26b95
    mov    0x5d8(%esp),%ecx
    push   %ecx
    mov    %eax,0x5f4(%esp)
    push   $data_8120d
    mov    %eax,0x604(%esp)
    lea    0x4c0(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
  jump_26ae3:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    mov    $0x8,%ebx
    call   func_2f538
    mov    $data_81212,%edx
    lea    0x3ec(%esp),%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_26b18
    movl   $0xffffffff,0x5f0(%esp)
    jmp    jump_26b82
  jump_26b18:
    lea    0x3ec(%esp),%edi
    mov    0x5fc(%esp),%esi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    add    %ecx,%esi
    mov    %esi,0x5fc(%esp)
    cmp    $0xc4,%esi
    jl     jump_26b52
    mov    $0x238,%ebx
    mov    $data_8121b,%edx
    xor    %eax,%eax
    call   func_25878
  jump_26b52:
    lea    0x3ec(%esp),%esi
    lea    0x4b8(%esp),%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_26b69:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_26b81
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_26b69
  jump_26b81:
    pop    %edi
  jump_26b82:
    cmpl   $0x0,0x5f0(%esp)
    je     jump_26ae3
    jmp    jump_26ffe
  jump_26b95:
    mov    $data_8122b,%edx
    lea    0x584(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_26c71
    mov    %eax,0x608(%esp)
    mov    %eax,0x5f8(%esp)
  jump_26bbc:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    mov    $0x8,%ebx
    call   func_2f538
    mov    $data_81231,%edx
    lea    0x3ec(%esp),%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_26bf9
    mov    $0xffffffff,%edx
    mov    %edx,0x608(%esp)
    mov    %edx,0x5dc(%esp)
    jmp    jump_26c5e
  jump_26bf9:
    lea    0x3ec(%esp),%edi
    mov    0x5f8(%esp),%esi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    add    %ecx,%esi
    mov    %esi,0x5f8(%esp)
    cmp    $0x3e4,%esi
    jl     jump_26c33
    mov    $0x24d,%ebx
    mov    $data_8123a,%edx
    xor    %eax,%eax
    call   func_25878
  jump_26c33:
    lea    0x3ec(%esp),%esi
    mov    %esp,%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_26c45:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_26c5d
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_26c45
  jump_26c5d:
    pop    %edi
  jump_26c5e:
    cmpl   $0x0,0x608(%esp)
    je     jump_26bbc
    jmp    jump_26ffe
  jump_26c71:
    mov    $data_8124a,%edx
    lea    0x584(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_26d5b
    cmpl   $0xffffffff,0x5dc(%esp)
    jne    jump_26d5b
    cmpb   $0x0,data_93bc4
    jne    jump_26d5b
    xor    %edx,%edx
    mov    %edx,0x5e4(%esp)
  jump_26cae:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    mov    $0x8,%ebx
    call   func_2f538
    mov    $data_81250,%edx
    lea    0x3ec(%esp),%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_26ce3
    movl   $0xffffffff,0x5e4(%esp)
    jmp    jump_26d48
  jump_26ce3:
    lea    0x3ec(%esp),%edi
    mov    0x5f8(%esp),%ebx
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    add    %ecx,%ebx
    mov    %ebx,0x5f8(%esp)
    cmp    $0x3e4,%ebx
    jl     jump_26d1d
    mov    $0x25f,%ebx
    mov    $data_81259,%edx
    xor    %eax,%eax
    call   func_25878
  jump_26d1d:
    lea    0x3ec(%esp),%esi
    mov    %esp,%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_26d2f:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_26d47
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_26d2f
  jump_26d47:
    pop    %edi
  jump_26d48:
    cmpl   $0x0,0x5e4(%esp)
    je     jump_26cae
    jmp    jump_26ffe
  jump_26d5b:
    mov    $data_81269,%edx
    lea    0x584(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_26e42
    cmpl   $0xffffffff,0x5dc(%esp)
    jne    jump_26e42
    cmpb   $0x1,data_93bc4
    jne    jump_26e42
    mov    %eax,0x600(%esp)
  jump_26d96:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    mov    $0xa,%ebx
    call   func_2f538
    mov    $data_81271,%edx
    lea    0x3ec(%esp),%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_26dcb
    movl   $0xffffffff,0x600(%esp)
    jmp    jump_26e2f
  jump_26dcb:
    lea    0x3ec(%esp),%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    0x5f8(%esp),%eax
    add    %ecx,%eax
    mov    %eax,0x5f8(%esp)
    cmp    $0x3e4,%eax
    jl     jump_26e04
    mov    $0x271,%ebx
    mov    $data_8127c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_26e04:
    lea    0x3ec(%esp),%esi
    mov    %esp,%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_26e16:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_26e2e
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_26e16
  jump_26e2e:
    pop    %edi
  jump_26e2f:
    cmpl   $0x0,0x600(%esp)
    je     jump_26d96
    jmp    jump_26ffe
  jump_26e42:
    mov    $data_8128c,%edx
    lea    0x584(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_26f2a
    cmpl   $0xffffffff,0x5dc(%esp)
    jne    jump_26f2a
    cmpb   $0x2,data_93bc4
    jne    jump_26f2a
    mov    %eax,0x5ec(%esp)
  jump_26e7d:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    mov    $0xa,%ebx
    call   func_2f538
    mov    $data_81294,%edx
    lea    0x3ec(%esp),%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_26eb2
    movl   $0xffffffff,0x5ec(%esp)
    jmp    jump_26f17
  jump_26eb2:
    lea    0x3ec(%esp),%edi
    mov    0x5f8(%esp),%esi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    add    %ecx,%esi
    mov    %esi,0x5f8(%esp)
    cmp    $0x3e4,%esi
    jl     jump_26eec
    mov    $0x283,%ebx
    mov    $data_8129f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_26eec:
    lea    0x3ec(%esp),%esi
    mov    %esp,%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_26efe:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_26f16
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_26efe
  jump_26f16:
    pop    %edi
  jump_26f17:
    cmpl   $0x0,0x5ec(%esp)
    je     jump_26e7d
    jmp    jump_26ffe
  jump_26f2a:
    mov    $data_812af,%edx
    lea    0x584(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_26ffe
    mov    %eax,0x60c(%esp)
    mov    %eax,0x5f4(%esp)
  jump_26f51:
    lea    0x3ec(%esp),%edx
    mov    %ebp,%eax
    mov    $0x7,%ebx
    call   func_2f538
    mov    $data_812b4,%edx
    lea    0x3ec(%esp),%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_26f86
    movl   $0xffffffff,0x60c(%esp)
    jmp    jump_26ff0
  jump_26f86:
    lea    0x3ec(%esp),%edi
    mov    0x5f4(%esp),%ebx
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    add    %ecx,%ebx
    mov    %ebx,0x5f4(%esp)
    cmp    $0xbb4,%ebx
    jl     jump_26fc0
    mov    $0x295,%ebx
    mov    $data_812bc,%edx
    xor    %eax,%eax
    call   func_25878
  jump_26fc0:
    lea    0x3ec(%esp),%esi
    mov    0x604(%esp),%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_26fd7:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_26fef
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_26fd7
  jump_26fef:
    pop    %edi
  jump_26ff0:
    cmpl   $0x0,0x60c(%esp)
    je     jump_26f51
  jump_26ffe:
    cmpl   $0x2,0x5e8(%esp)
    jne    jump_26a3a
  jump_2700c:
    mov    %ebp,%eax
    mov    %esp,%ecx
    call   func_7280e
    mov    (%esp),%al
    xor    %esi,%esi
    test   %al,%al
    je     jump_2705d
    mov    $data_812cc,%ebp
    mov    $0x2ab,%edi
  jump_27028:
    cmp    $0x3e5,%esi
    jl     jump_2703b
    mov    %edi,%ebx
    mov    %ebp,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2703b:
    mov    (%ecx),%ah
    cmp    $0xa,%ah
    je     jump_27051
    cmp    $0x40,%ah
    jne    jump_2704c
    movb   $0xa,(%ecx)
    jmp    jump_27054
  jump_2704c:
    cmp    $0x5f,%ah
    jne    jump_27054
  jump_27051:
    movb   $0x20,(%ecx)
  jump_27054:
    mov    0x1(%ecx),%bl
    inc    %ecx
    inc    %esi
    test   %bl,%bl
    jne    jump_27028
  jump_2705d:
    cmpl   $0x0,0x604(%esp)
    jne    jump_27078
    mov    $0x2b7,%ebx
    mov    $data_812dc,%edx
    xor    %eax,%eax
    call   func_25878
  jump_27078:
    mov    0x604(%esp),%ecx
    mov    (%ecx),%bh
    xor    %esi,%esi
    test   %bh,%bh
    je     jump_270c3
    mov    $data_812ec,%edi
    mov    $0x2bd,%ebp
  jump_27091:
    cmp    $0xbb5,%esi
    jl     jump_270a4
    mov    %ebp,%ebx
    mov    %edi,%edx
    xor    %eax,%eax
    call   func_25878
  jump_270a4:
    mov    (%ecx),%al
    cmp    $0xa,%al
    je     jump_270b7
    cmp    $0x40,%al
    jne    jump_270b3
    movb   $0xa,(%ecx)
    jmp    jump_270ba
  jump_270b3:
    cmp    $0x5f,%al
    jne    jump_270ba
  jump_270b7:
    movb   $0x20,(%ecx)
  jump_270ba:
    mov    0x1(%ecx),%dh
    inc    %ecx
    inc    %esi
    test   %dh,%dh
    jne    jump_27091
  jump_270c3:
    xor    %eax,%eax
    push   $0x2e
    mov    data_f458e,%al
    push   $0x7
    xor    %edx,%edx
    mov    data_efd52(,%eax,2),%ax
    push   $0x0
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   $data_c850c
    call   func_57efc
    add    $0x14,%esp
    mov    0x5d4(%esp),%esi
    lea    0x5c0(%esp),%edi
    lea    0x4(%esi),%esi
    mov    $0x278,%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    %edx,0x5cc(%esp)
    xor    %edx,%edx
    mov    $0x7,%eax
    mov    data_f458e,%dl
    mov    %eax,0x5c4(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    mov    $0x105,%ebx
    shl    $0x3,%eax
    mov    $0x1d1,%ecx
    sub    %edx,%eax
    mov    %ebx,0x5c8(%esp)
    mov    %ecx,0x5d0(%esp)
    mov    data_92e18(,%eax,2),%al
    lea    0x5c0(%esp),%esi
    push   $0x257
    mov    0x608(%esp),%ecx
    mov    $0xa,%ebx
    xor    %ah,%ah
    mov    $0x278,%ebp
    shl    $0x2,%eax
    mov    $data_fd3aa,%edi
    add    $0x13,%eax
    push   $0xff
    cwtl
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %eax
    mov    %ebx,%edx
    lea    0x5cc(%esp),%edi
    push   $0x0
    mov    $data_fd3a2,%eax
    mov    0x5e4(%esp),%esi
    call   func_2af88
    mov    $0xf5,%eax
    push   $0x126
    lea    0x4(%esp),%ecx
    lea    0x4(%esi),%esi
    mov    $0xa,%ebx
    push   $0xff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    %ebx,%edx
    mov    $0x138,%esi
    mov    $0x2e,%edi
    push   $0xf3
    mov    %ebp,0x5d8(%esp)
    mov    %eax,0x5dc(%esp)
    mov    %esi,0x5d0(%esp)
    mov    %edi,0x5d4(%esp)
    lea    0x5cc(%esp),%esi
    mov    $data_fd3aa,%edi
    push   $0x0
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    lea    0x5c0(%esp),%edi
    mov    0x5d4(%esp),%esi
    mov    $0x7,%edx
    mov    $0x3,%ebx
    mov    %ebp,%ecx
    lea    0x4(%esi),%esi
    lea    0x5c0(%esp),%eax
    xor    %ebp,%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    data_f458e,%cl
    mov    $0x25,%esi
    mov    %edx,0x5c4(%esp)
    mov    %edx,0x5c8(%esp)
    mov    %ebp,0x5cc(%esp)
    mov    %ebx,%edx
    mov    %esi,0x5d0(%esp)
    call   func_4f228
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e18(,%eax,2),%al
    xor    %ah,%ah
    shl    $0x2,%eax
    add    $0x13,%eax
    push   $0x25a
    lea    0x5c4(%esp),%esi
    lea    0x4bc(%esp),%ecx
    push   $0xff
    cwtl
    mov    $0xa,%ebx
    push   %eax
    mov    $data_fd3aa,%edi
    xor    %edx,%edx
    push   $0x2
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    add    $0x610,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_272d8:
/*----------------------------------------------------------------*/
    call   func_2bf10
    movl   $0x85ad8,0xa7(%eax) /* Warning: address points to a valid object/reloc, but no label found */
    ret


/*----------------------------------------------------------------*/
func_272e8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_27307
    mov    $0x85a9c,%edx /* Warning: address points to a valid object/reloc, but no label found */
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_27307:
    mov    $0x1,%edx
    movl   $0x85ad8,0xa7(%eax) /* Warning: address points to a valid object/reloc, but no label found */
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_27327
    call   func_72124
  jump_27327:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_27330:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %eax,%edi
    mov    %dx,0x4(%esp)
    mov    %ebx,%esi
    cmp    $0x1,%dx
    jne    jump_273cb
    xor    %ah,%ah
    mov    %esp,%edx
    mov    %ah,0x2(%esp)
    mov    %ah,0x1(%esp)
    mov    %ah,(%esp)
    mov    $data_c84f8,%eax
    xor    %ebx,%ebx
    call   func_2b9d8
    mov    $0xffffffff,%edx
    mov    $0x5,%eax
    mov    %ebx,data_122050
    mov    data_c3510,%bl
    mov    %edx,data_12204c
    cmp    $0x1,%bl
    jne    jump_273a6
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e17(,%eax,2),%al
    xor    %ah,%ah
    add    $0x8,%eax
  jump_273a6:
    movswl %ax,%edx
    xor    %ebx,%ebx
    mov    $data_f8638,%eax
    call   func_4acbc
    mov    0x2(%esp),%edx
    mov    %esi,%ebx
    mov    %edi,%eax
    sar    $0x10,%edx
    call   func_2eb04
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret
  jump_273cb:
    mov    0x2(%esp),%edx
    sar    $0x10,%edx
    call   func_2eb04
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret

vtable_273e0:
    .long   func_2748a
    .long   func_2749d
    .long   func_274b4
    .long   func_274cb
    .long   func_274e2
    .long   func_274f9


/*----------------------------------------------------------------*/
func_273f8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x344,%esp
    mov    %eax,0x2c8(%esp)
    mov    data_c350d,%eax
    sar    $0x18,%eax
    dec    %eax
    test   %eax,%eax
    jl     jump_2741a
    cmp    $0x4,%eax
  jump_2741a:
    mov    data_c350c,%eax
    mov    %eax,%edx
    mov    $0xa,%ebx
    sar    $0x1f,%edx
    mov    %eax,0x2cc(%esp)
    idiv   %ebx
    dec    %eax
    mov    %eax,0x2d0(%esp)
    test   %eax,%eax
    jge    jump_2744c
    xor    %esi,%esi
    mov    %esi,0x2d0(%esp)
    jmp    jump_27460
  jump_2744c:
    cmp    $0x9,%eax
    jle    jump_27460
    movl   $0x9,0x2d0(%esp)
  jump_27460:
    xor    %ah,%ah
    mov    $data_c8c44,%edi
    mov    %ah,data_c8c44
    mov    data_c3510,%al
    mov    %edi,0x2d4(%esp)
    cmp    $0x5,%al
    ja     func_2748a
    and    $0xff,%eax
    jmp    *%cs:vtable_273e0(,%eax,4)


/*----------------------------------------------------------------*/
func_2748a:
/*----------------------------------------------------------------*/
    mov    $0x34e,%ebx
    mov    $data_812fc,%edx
    xor    %eax,%eax
    call   func_25888
    jmp    jump_2750e


/*----------------------------------------------------------------*/
func_2749d:
/*----------------------------------------------------------------*/
    push   $data_8130c
    lea    0x2b8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x8,%esp
    jmp    jump_2750e


/*----------------------------------------------------------------*/
func_274b4:
/*----------------------------------------------------------------*/
    push   $data_81319
    lea    0x2b8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x8,%esp
    jmp    jump_2750e


/*----------------------------------------------------------------*/
func_274cb:
/*----------------------------------------------------------------*/
    push   $data_81326
    lea    0x2b8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x8,%esp
    jmp    jump_2750e


/*----------------------------------------------------------------*/
func_274e2:
/*----------------------------------------------------------------*/
    push   $data_81333
    lea    0x2b8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x8,%esp
    jmp    jump_2750e


/*----------------------------------------------------------------*/
func_274f9:
/*----------------------------------------------------------------*/
    push   $data_81340
    lea    0x2b8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x8,%esp
  jump_2750e:
    lea    0x2b4(%esp),%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_27548
    lea    0x2b4(%esp),%eax
    push   %eax
    push   $data_8134d
    mov    $0x370,%ebx
    call   func_258ec
    add    $0x8,%esp
    mov    $data_8135e,%edx
    xor    %eax,%eax
    call   func_25898
  jump_27548:
    xor    %dl,%dl
    xor    %eax,%eax
    mov    %dl,(%esp)
    mov    %eax,0x2dc(%esp)
  jump_27556:
    lea    0x198(%esp),%edx
    mov    %ebp,%eax
    call   func_2f538
    lea    0x264(%esp),%eax
    push   %eax
    push   $data_8136e
    lea    0x1a0(%esp),%eax
    push   %eax
    call   func_727ed
    add    $0xc,%esp
    mov    $data_81371,%edx
    lea    0x264(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_275a6
    movl   $0xffffffff,0x2dc(%esp)
    jmp    jump_277d5
  jump_275a6:
    mov    $data_81375,%edx
    lea    0x264(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2767a
    mov    %eax,0x2fc(%esp)
    mov    %eax,0x300(%esp)
  jump_275cd:
    lea    0x198(%esp),%edx
    mov    %ebp,%eax
    mov    $0x7,%ebx
    call   func_2f538
    mov    $data_8137d,%edx
    lea    0x198(%esp),%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_27602
    movl   $0xffffffff,0x2fc(%esp)
    jmp    jump_27667
  jump_27602:
    lea    0x198(%esp),%edi
    mov    0x300(%esp),%ebx
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    add    %ecx,%ebx
    mov    %ebx,0x300(%esp)
    cmp    $0xc4,%ebx
    jl     jump_2763c
    mov    $0x3a1,%ebx
    mov    $data_81385,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2763c:
    lea    0x198(%esp),%esi
    mov    %esp,%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_2764e:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_27666
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2764e
  jump_27666:
    pop    %edi
  jump_27667:
    cmpl   $0x0,0x2fc(%esp)
    je     jump_275cd
    jmp    jump_277d5
  jump_2767a:
    mov    $data_81395,%edx
    lea    0x264(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_27752
    mov    %eax,0x304(%esp)
    mov    %eax,0x308(%esp)
  jump_276a1:
    lea    0x198(%esp),%edx
    mov    %ebp,%eax
    mov    $0x7,%ebx
    call   func_2f538
    mov    $data_8139d,%edx
    lea    0x198(%esp),%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_276d6
    movl   $0xffffffff,0x304(%esp)
    jmp    jump_2773f
  jump_276d6:
    lea    0x198(%esp),%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    0x308(%esp),%eax
    add    %ecx,%eax
    mov    %eax,0x308(%esp)
    cmp    $0x3e4,%eax
    jl     jump_2770f
    mov    $0x3b3,%ebx
    mov    $data_813a5,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2770f:
    lea    0x198(%esp),%esi
    mov    0x2d4(%esp),%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_27726:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2773e
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_27726
  jump_2773e:
    pop    %edi
  jump_2773f:
    cmpl   $0x0,0x304(%esp)
    je     jump_276a1
    jmp    jump_277d5
  jump_27752:
    mov    $data_813b5,%edx
    lea    0x264(%esp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_277d5
    mov    0x2d0(%esp),%eax
    xor    %ebx,%ebx
    test   %eax,%eax
    jle    jump_2778e
    mov    0x2d0(%esp),%ecx
  jump_2777b:
    lea    0x198(%esp),%edx
    mov    %ebp,%eax
    inc    %ebx
    call   func_2f538
    cmp    %ecx,%ebx
    jl     jump_2777b
  jump_2778e:
    lea    0x198(%esp),%edx
    mov    %ebp,%eax
    lea    0x198(%esp),%esi
    call   func_2f538
    xor    %dh,%dh
    lea    0xcc(%esp),%edi
    mov    %dh,0xcc(%esp)
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_277bc:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_277d4
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_277bc
  jump_277d4:
    pop    %edi
  jump_277d5:
    cmpl   $0xffffffff,0x2dc(%esp)
    jne    jump_27556
    mov    %ebp,%eax
    mov    %esp,%ecx
    call   func_7280e
    xor    %edi,%edi
    mov    (%esp),%bl
    mov    %edi,0x2e0(%esp)
    test   %bl,%bl
    je     jump_2784e
    mov    $data_813bb,%edi
    mov    $0x3d7,%esi
  jump_27806:
    cmpl   $0xc5,0x2e0(%esp)
    jl     jump_2781e
    mov    %esi,%ebx
    mov    %edi,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2781e:
    mov    (%ecx),%bh
    cmp    $0xa,%bh
    je     jump_27834
    cmp    $0x40,%bh
    jne    jump_2782f
    movb   $0xa,(%ecx)
    jmp    jump_27837
  jump_2782f:
    cmp    $0x5f,%bh
    jne    jump_27837
  jump_27834:
    movb   $0x20,(%ecx)
  jump_27837:
    mov    0x2e0(%esp),%eax
    mov    0x1(%ecx),%dl
    inc    %eax
    inc    %ecx
    mov    %eax,0x2e0(%esp)
    test   %dl,%dl
    jne    jump_27806
  jump_2784e:
    xor    %edx,%edx
    mov    %edx,0x2e0(%esp)
    mov    0xcc(%esp),%dh
    lea    0xcc(%esp),%ecx
    test   %dh,%dh
    je     jump_278bb
    mov    $data_813cb,%esi
    mov    $0x3e9,%edi
  jump_27873:
    cmpl   $0xc5,0x2e0(%esp)
    jl     jump_2788b
    mov    %edi,%ebx
    mov    %esi,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2788b:
    mov    (%ecx),%bl
    cmp    $0xa,%bl
    je     jump_278a1
    cmp    $0x40,%bl
    jne    jump_2789c
    movb   $0xa,(%ecx)
    jmp    jump_278a4
  jump_2789c:
    cmp    $0x5f,%bl
    jne    jump_278a4
  jump_278a1:
    movb   $0x20,(%ecx)
  jump_278a4:
    mov    0x2e0(%esp),%ebp
    mov    0x1(%ecx),%ah
    inc    %ebp
    inc    %ecx
    mov    %ebp,0x2e0(%esp)
    test   %ah,%ah
    jne    jump_27873
  jump_278bb:
    mov    0x2d4(%esp),%eax
    test   %eax,%eax
    jne    jump_278d5
    mov    $0x3f5,%ebx
    mov    $data_813db,%edx
    call   func_25878
  jump_278d5:
    xor    %edx,%edx
    mov    0x2d4(%esp),%ecx
    mov    %edx,0x2e0(%esp)
    cmpb   $0x0,(%ecx)
    je     jump_2793c
    mov    $data_813eb,%esi
    mov    $0x3fb,%edi
  jump_278f4:
    cmpl   $0x3e5,0x2e0(%esp)
    jl     jump_2790c
    mov    %edi,%ebx
    mov    %esi,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2790c:
    mov    (%ecx),%dh
    cmp    $0xa,%dh
    je     jump_27922
    cmp    $0x40,%dh
    jne    jump_2791d
    movb   $0xa,(%ecx)
    jmp    jump_27925
  jump_2791d:
    cmp    $0x5f,%dh
    jne    jump_27925
  jump_27922:
    movb   $0x20,(%ecx)
  jump_27925:
    mov    0x2e0(%esp),%ebp
    mov    0x1(%ecx),%al
    inc    %ebp
    inc    %ecx
    mov    %ebp,0x2e0(%esp)
    test   %al,%al
    jne    jump_278f4
  jump_2793c:
    mov    0x2c8(%esp),%esi
    lea    0x2a0(%esp),%edi
    mov    $0x7,%eax
    lea    0x4(%esi),%esi
    mov    $0xd7,%edx
    mov    $0x12f,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0x17d,%ecx
    mov    %eax,0x2a4(%esp)
    mov    %edx,0x2a8(%esp)
    mov    %ebx,0x2ac(%esp)
    mov    data_c3510,%ah
    mov    %ecx,0x2b0(%esp)
    cmp    $0x1,%ah
    je     jump_279c0
    push   $0x53
    push   $0x94
    mov    0x2d8(%esp),%esi
    xor    %edx,%edx
    push   %esi
    mov    $data_11f10c,%eax
    mov    data_efd9a,%dx
    call   func_1b084
    push   %eax
    lea    0x2b0(%esp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
  jump_279c0:
    mov    $0x12f,%eax
    mov    $0x7,%edi
    mov    %eax,0x2ac(%esp)
    mov    %esp,%eax
    mov    $0xd7,%ebp
    push   %eax
    mov    $0x107,%edx
    mov    %edi,0x2a8(%esp)
    push   $data_813fb
    lea    0x1a0(%esp),%eax
    mov    %ebp,0x2b0(%esp)
    push   %eax
    mov    %edx,0x2bc(%esp)
    xor    %edx,%edx
    call   func_720c9
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0xc,%esp
    mov    data_92e18(,%eax,2),%al
    lea    0x2a0(%esp),%esi
    push   $0x118
    lea    0x19c(%esp),%ecx
    mov    $0xe,%edx
    xor    %ah,%ah
    mov    0x2d0(%esp),%ebp
    shl    $0x2,%eax
    mov    $data_fd3aa,%edi
    add    $0x13,%eax
    push   $0xff
    cwtl
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %eax
    xor    %ebx,%ebx
    mov    $0x12f,%esi
    push   $0x1
    mov    $data_fd3a2,%eax
    mov    $0x17d,%edi
    call   func_2af88
    mov    $0x7,%ebx
    mov    $0x14d,%ecx
    lea    0xcc(%esp),%eax
    mov    %esi,0x2ac(%esp)
    push   %eax
    mov    %edi,0x2b4(%esp)
    mov    %ebx,0x2a8(%esp)
    push   %ebp
    mov    $0xf,%eax
    mov    %ecx,0x2b0(%esp)
    call   func_1ce70
    push   %eax
    lea    0x1a4(%esp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_720c9
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0x10,%esp
    mov    data_92e18(,%eax,2),%al
    xor    %ah,%ah
    shl    $0x2,%eax
    add    $0x13,%eax
    push   $0x118
    lea    0x2a4(%esp),%esi
    lea    0x19c(%esp),%ecx
    push   $0xff
    cwtl
    mov    $data_fd3aa,%edi
    push   %eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    push   $0x3
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    movl   $0x278,0x2ac(%esp)
    xor    %edx,%edx
    mov    $0x7,%eax
    mov    data_f458e,%dl
    mov    %eax,0x2a4(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    mov    $0x18d,%ebx
    shl    $0x3,%eax
    mov    $0x1d1,%ecx
    sub    %edx,%eax
    mov    %ebx,0x2a8(%esp)
    mov    %ecx,0x2b0(%esp)
    mov    data_92e18(,%eax,2),%al
    lea    0x2a0(%esp),%esi
    xor    %ah,%ah
    push   $0x25a
    shl    $0x2,%eax
    mov    0x2d8(%esp),%ecx
    add    $0x13,%eax
    push   $0xff
    cwtl
    mov    $0x7,%edx
    push   %eax
    mov    $data_fd3aa,%edi
    xor    %ebx,%ebx
    push   $0x1
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    xor    %eax,%eax
    push   $0x7
    mov    data_f458e,%al
    push   $0x7
    xor    %edx,%edx
    mov    data_efd52(,%eax,2),%ax
    push   $0x0
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    $0x2,%ebp
    push   $data_c850c
    mov    $0x1,%esi
    mov    $0x2a,%edi
    call   func_57efc
    mov    $0xa,%ebx
    add    $0x14,%esp
    xor    %ecx,%ecx
    mov    0x2c8(%esp),%eax
    mov    data_f458e,%cl
    mov    %ebx,%edx
    mov    %esi,0x2e0(%esp)
    mov    %ebp,0x324(%esp)
    add    $0x4,%eax
    mov    $0x15b,%esi
    call   func_4f228
    jmp    jump_27c73
  jump_27c17:
    cmp    $0x2,%dl
    jne    jump_27c21
    mov    $0x8,%ebx
  jump_27c21:
    cmp    $0xffffffff,%ebx
    je     jump_27c50
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd96,%dx
    call   func_1b084
    lea    0x21(%edi),%edx
    push   %edx
    lea    -0x7(%esi),%edx
    push   %edx
    push   %ebx
    push   %eax
    push   $data_c850c
    call   func_57efc
    add    $0x14,%esp
  jump_27c50:
    mov    0x324(%esp),%ebp
    mov    0x2e0(%esp),%eax
    add    $0x3e,%esi
    add    $0x2,%ebp
    inc    %eax
    mov    %ebp,0x324(%esp)
    mov    %eax,0x2e0(%esp)
  jump_27c73:
    mov    data_93b96,%eax
    mov    0x2e0(%esp),%edx
    sar    $0x10,%eax
    cmp    %edx,%eax
    jle    jump_27d5a
    cmp    $0x4,%edx
    jne    jump_27c99
    mov    $0x15b,%esi
    mov    $0x85,%edi
  jump_27c99:
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_c8c44
    push   %edi
    mov    0x33c(%esp),%eax
    push   %esi
    xor    %edx,%edx
    mov    data_efd44(%eax),%ax
    push   $0x0
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   $data_c850c
    call   func_589f1
    add    $0x28,%esp
    mov    0x2de(%esp),%ebp
    mov    data_efd96,%ax
    sar    $0x10,%ebp
    xor    %edx,%edx
    push   %ebp
    mov    $0x3,%ebx
    mov    %ax,%dx
    push   %edi
    mov    $data_11f10c,%eax
    mov    %esi,%ecx
    call   func_1b084
    mov    %eax,%edx
    mov    $data_c850c,%eax
    call   func_4f2a8
    mov    $data_c850c,%eax
    lea    0x21(%edi),%ebx
    lea    -0x7(%esi),%edx
    mov    %ebp,%ecx
    call   func_4f228
    xor    %eax,%eax
    mov    data_f458e,%al
    imul   $0x1ee,%eax,%eax
    mov    0x2e0(%esp),%ecx
    add    $data_92e16,%eax
    add    %ecx,%eax
    mov    0x1c0(%eax),%dl
    mov    $0xffffffff,%ebx
    cmp    $0x3,%dl
    jne    jump_27c17
    mov    $0x9,%ebx
    jmp    jump_27c21
  jump_27d5a:
    mov    $0x1fe,%edi
    mov    $0x7,%ecx
    mov    $0x278,%ebx
    xor    %edx,%edx
    mov    $0xba,%ebp
    mov    data_f458e,%dl
    mov    $0x138,%esi
    mov    %ebx,0x2e4(%esp)
    mov    data_efd60(,%edx,2),%ax
    mov    %esi,0x2a4(%esp)
    mov    %eax,0x33c(%esp)
    mov    %edx,%eax
    mov    %ecx,0x2a8(%esp)
    shl    $0x5,%eax
    mov    %ebx,0x2ac(%esp)
    sub    %edx,%eax
    mov    $0x17d,%ebx
    shl    $0x3,%eax
    mov    %ebx,0x2b0(%esp)
    sub    %edx,%eax
    xor    %ebx,%ebx
    add    %eax,%eax
    xor    %edx,%edx
    add    $data_92e16,%eax
    mov    %ecx,%esi
    call   func_3c310
    mov    %eax,0x2e8(%esp)
    cmp    $0x14,%eax
    jge    jump_27dfa
    mov    $0x14,%edx
    sub    %eax,%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x11,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    sub    %eax,%esi
  jump_27dfa:
    test   %esi,%esi
    jge    jump_27e02
    xor    %esi,%esi
    jmp    jump_27e0c
  jump_27e02:
    cmp    $0x6,%esi
    jle    jump_27e0c
    mov    $0x6,%esi
  jump_27e0c:
    mov    0x2e8(%esp),%eax
    mov    %eax,%edx
    lea    0x1(%esi),%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0x2ec(%esp)
    xor    %eax,%eax
    mov    %eax,0x2f0(%esp)
    mov    0x2e4(%esp),%eax
    sub    %ecx,%ebp
    sub    %edi,%eax
    sub    $0x14,%ebp
    sub    $0x14,%eax
    mov    %ebp,0x2f8(%esp)
    mov    %eax,0x2f4(%esp)
    cmp    $0x2,%eax
    jge    jump_27e5c
    movl   $0x2,0x2f4(%esp)
  jump_27e5c:
    cmpl   $0x2,0x2f8(%esp)
    jge    jump_27e71
    movl   $0x2,0x2f8(%esp)
  jump_27e71:
    add    $0xa,%edi
    add    $0xa,%ecx
    xor    %edx,%edx
    mov    %esi,%ebp
    mov    %edx,0x2e0(%esp)
    mov    %edi,0x2d8(%esp)
    shl    $0x8,%ebp
    mov    %ecx,0x30c(%esp)
    neg    %ebp
    mov    $data_ba095,%edi
    add    $0x700,%ebp
    jmp    jump_27ec6
  jump_27ea2:
    mov    0x2e0(%esp),%edx
    mov    0x2f0(%esp),%ebx
    add    $0x162,%edi
    inc    %edx
    inc    %ebx
    mov    %edx,0x2e0(%esp)
    mov    %ebx,0x2f0(%esp)
  jump_27ec6:
    mov    data_c3489,%eax
    mov    0x2e0(%esp),%edx
    sar    $0x10,%eax
    cmp    %edx,%eax
    jle    jump_27fcf
    xor    %edx,%edx
    mov    0x54(%edi),%eax
    mov    data_f458e,%dl
    sar    $0x10,%eax
    mov    %edi,0x2c4(%esp)
    cmp    %edx,%eax
    jne    jump_27ea2
    mov    0x2f0(%esp),%eax
    mov    0x2ec(%esp),%edx
    xor    %ebx,%ebx
    cmp    %edx,%eax
    jle    jump_27f15
    test   %esi,%esi
    jle    jump_27f15
    add    $0x100,%ebp
    dec    %esi
  jump_27f15:
    test   %esi,%esi
    jle    jump_27f2e
    mov    data_c8c33,%eax
    add    %ebp,%eax
    push   %eax
    call   func_583c7
    mov    $0x1,%ebx
    add    $0x4,%esp
  jump_27f2e:
    mov    0x2d8(%esp),%ecx
    sub    0x2a4(%esp),%ecx
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idivl  0x2f4(%esp)
    mov    0x30c(%esp),%eax
    add    %edx,%ecx
    mov    0x2a8(%esp),%edx
    sub    %edx,%eax
    mov    %eax,0x32c(%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idivl  0x2f8(%esp)
    push   %ebx
    push   $0x5555
    push   $0x5555
    push   $0x0
    mov    0x33c(%esp),%eax
    push   $data_c8c44
    add    %eax,%edx
    mov    0x2d8(%esp),%eax
    push   %edx
    mov    0xa7(%eax),%eax
    push   %ecx
    sar    $0x18,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x35c(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    lea    0x2c4(%esp),%eax
    push   %eax
    call   func_589f1
    add    $0x28,%esp
    jmp    jump_27ea2
  jump_27fcf:
    xor    %edx,%edx
    mov    data_efd7e,%ax
    mov    data_f458e,%dl
    mov    %eax,0x340(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    mov    $0x138,%ebx
    sub    %edx,%eax
    mov    $0xd2,%ecx
    shl    $0x3,%eax
    mov    $0x1ff,%esi
    sub    %edx,%eax
    mov    $0x17d,%ebp
    add    %eax,%eax
    mov    %esi,0x330(%esp)
    add    $data_92e16,%eax
    mov    $0x7,%esi
    call   func_3c3cc
    cmp    $0x14,%eax
    jge    jump_28044
    mov    $0x14,%edx
    sub    %eax,%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x11,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    $0x7,%esi
    sub    %eax,%esi
  jump_28044:
    test   %esi,%esi
    jge    jump_2804c
    xor    %esi,%esi
    jmp    jump_28056
  jump_2804c:
    cmp    $0x6,%esi
    jle    jump_28056
    mov    $0x6,%esi
  jump_28056:
    mov    0x2e8(%esp),%eax
    mov    %eax,%edx
    lea    0x1(%esi),%edi
    sar    $0x1f,%edx
    idiv   %edi
    mov    %eax,0x334(%esp)
    mov    0x330(%esp),%eax
    sub    %ebx,%eax
    sub    $0x14,%eax
    mov    %eax,0x328(%esp)
    mov    %ebp,%eax
    xor    %edi,%edi
    sub    %ecx,%eax
    mov    %edi,0x338(%esp)
    sub    $0x14,%eax
    mov    0x328(%esp),%ebp
    mov    %eax,0x310(%esp)
    cmp    $0x2,%ebp
    jge    jump_280af
    movl   $0x2,0x328(%esp)
  jump_280af:
    cmpl   $0x2,0x310(%esp)
    jge    jump_280c4
    movl   $0x2,0x310(%esp)
  jump_280c4:
    mov    $data_ab057,%edi
    xor    %ebp,%ebp
    add    $0xa,%ebx
    mov    %ebp,0x2e0(%esp)
    mov    %esi,%ebp
    add    $0xa,%ecx
    shl    $0x8,%ebp
    mov    %ebx,0x318(%esp)
    neg    %ebp
    mov    %ecx,0x31c(%esp)
    add    $0x700,%ebp
    jmp    jump_28116
  jump_280f5:
    mov    0x2e0(%esp),%ecx
    mov    0x338(%esp),%eax
    add    $0x7b,%edi
    inc    %ecx
    inc    %eax
    mov    %ecx,0x2e0(%esp)
    mov    %eax,0x338(%esp)
  jump_28116:
    mov    data_ba091,%eax
    mov    0x2e0(%esp),%ecx
    sar    $0x10,%eax
    cmp    %ecx,%eax
    jle    jump_28229
    mov    data_f458e,%bl
    mov    0x57(%edi),%al
    mov    %edi,0x314(%esp)
    cmp    %bl,%al
    jne    jump_280f5
    mov    0x338(%esp),%eax
    mov    0x334(%esp),%edx
    xor    %ebx,%ebx
    cmp    %edx,%eax
    jle    jump_28160
    test   %esi,%esi
    jle    jump_28160
    add    $0x100,%ebp
    dec    %esi
  jump_28160:
    test   %esi,%esi
    jle    jump_28179
    mov    data_c8c33,%eax
    add    %ebp,%eax
    push   %eax
    call   func_583c7
    mov    $0x1,%ebx
    add    $0x4,%esp
  jump_28179:
    mov    0x318(%esp),%ecx
    sub    0x2a4(%esp),%ecx
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idivl  0x328(%esp)
    add    %edx,%ecx
    mov    0x2a8(%esp),%edx
    mov    %ecx,0x32c(%esp)
    mov    0x31c(%esp),%ecx
    call   func_7369f
    sub    %edx,%ecx
    mov    %eax,%edx
    sar    $0x1f,%edx
    idivl  0x310(%esp)
    push   %ebx
    push   $0x5555
    push   $0x5555
    push   $0x0
    push   $data_c8c44
    add    %ecx,%edx
    push   %edx
    mov    0x32c(%esp),%edx
    xor    %eax,%eax
    mov    0x344(%esp),%ebx
    mov    0x16(%edx),%ax
    push   %ebx
    lea    (%eax,%eax,4),%edx
    mov    0x330(%esp),%ebx
    xor    %eax,%eax
    mov    0x14(%ebx),%ax
    add    %edx,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x360(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    lea    0x2c4(%esp),%eax
    push   %eax
    call   func_589f1
    add    $0x28,%esp
    jmp    jump_280f5
  jump_28229:
    mov    $0xcb,%ebp
    mov    0x2c8(%esp),%eax
    xor    %esi,%esi
    xor    %edi,%edi
    mov    %esi,0x2e0(%esp)
    add    $0x4,%eax
    mov    $0x213,%esi
    mov    %eax,0x320(%esp)
    jmp    jump_28266
  jump_28251:
    mov    0x2e0(%esp),%edx
    add    $0x11,%esi
    inc    %edx
    add    $0x4b,%edi
    mov    %edx,0x2e0(%esp)
  jump_28266:
    xor    %eax,%eax
    mov    0x2e0(%esp),%edx
    mov    data_f4744,%ax
    cmp    %edx,%eax
    jle    jump_282f9
    test   %edx,%edx
    je     jump_28299
    mov    $0x6,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    test   %edx,%edx
    jne    jump_28299
    mov    $0x213,%esi
    add    $0x11,%ebp
  jump_28299:
    mov    $0x1,%eax
    mov    data_f478b(%edi),%edx
    mov    data_f458e,%cl
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_28251
    push   $0x0
    push   $0x5555
    push   $0x5555
    push   $0x0
    push   $data_c8c44
    push   %ebp
    push   %esi
    mov    0x2fc(%esp),%ecx
    xor    %edx,%edx
    push   %ecx
    mov    $data_11f10c,%eax
    mov    data_efd82,%dx
    call   func_1b084
    push   %eax
    mov    0x344(%esp),%eax
    push   %eax
    call   func_589f1
    add    $0x28,%esp
    jmp    jump_28251
  jump_282f9:
    mov    $data_c850c,%edx
    mov    $data_fa35c,%eax
    call   func_50690
    add    $0x344,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_28320:
/*----------------------------------------------------------------*/
    movl   $0xffffffff,data_c84f4
    ret


/*----------------------------------------------------------------*/
func_2832c:
/*----------------------------------------------------------------*/
    movswl (%eax),%eax
    movswl (%edx),%edx
    sub    %edx,%eax
    ret


/*----------------------------------------------------------------*/
func_28354:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    call   func_1bb78
    add    $0x90a,%eax
    call   func_2a9a0
    lea    -0x90a(%eax),%ecx
    movl   $0x0,0x198(%ecx)
    movl   $0x0,0x1a8(%ecx)
    movl   $0x0,0x1ac(%ecx)
    mov    $0x80,%ebx
    movl   $0x0,0x1b0(%ecx)
    xor    %edx,%edx
    movl   $0x0,0x1b4(%ecx)
    lea    0x118(%ecx),%eax
    movl   $0xffffffff,0x19c(%ecx)
    call   func_72280
    movl   $0x0,0x1e4(%ecx)
    movl   $0x0,0x1e8(%ecx)
    mov    $0x600,%ebx
    movl   $0x0,0x1ec(%ecx)
    lea    0x204(%ecx),%eax
    movl   $0x0,0x1f0(%ecx)
    xor    %edx,%edx
    movl   $0x0,0x946(%ecx)
    call   func_72280
    mov    $0x100,%ebx
    lea    0x808(%ecx),%eax
    xor    %edx,%edx
    call   func_72280
    movw   $0x0,0x804(%ecx)
    movw   $0x0,0x806(%ecx)
    movw   $0x0,0x908(%ecx)
    movl   $0x0,0x92e(%ecx)
    movw   $0x0,0x932(%ecx)
    movw   $0x0,0x934(%ecx)
    movl   $0xffffffff,0x936(%ecx)
    movl   $0x12,0x1e0(%ecx)
    movl   $0x0,0x93a(%ecx)
    movl   $0xffffffff,0x93e(%ecx)
    mov    %ecx,%eax
    movl   $0x0,0x942(%ecx)
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_28484:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    cmpl   $0xffffffff,0x1b0(%eax)
    jne    jump_2849d
    mov    0x1ac(%eax),%eax
    call   func_2595c
  jump_2849d:
    mov    0x1ac(%ecx),%eax
    call   func_72124
    cmpl   $0xffffffff,0x1b4(%ecx)
    jne    jump_284dd
    mov    0x198(%ecx),%eax
    call   func_2595c
    mov    0x198(%ecx),%eax
    call   func_72124
    mov    0x1a8(%ecx),%eax
    call   func_2595c
    mov    0x1a8(%ecx),%eax
    call   func_72124
  jump_284dd:
    mov    %ecx,%edx
    xor    %ebx,%ebx
    jmp    jump_284f2
  jump_284e3:
    mov    0x808(%edx),%eax
    call   func_2595c
    add    $0x8,%edx
    inc    %ebx
  jump_284f2:
    mov    0x906(%ecx),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jl     jump_284e3
    mov    0x808(%edx),%eax
    call   func_72124
    xor    %ebx,%ebx
    mov    %ecx,%edx
    jmp    jump_28514
  jump_28510:
    add    $0xc,%edx
    inc    %ebx
  jump_28514:
    mov    0x804(%ecx),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jge    jump_28551
    mov    0x204(%edx),%eax
    sar    $0x10,%eax
    cmp    $0xa,%eax
    jne    jump_28510
    mov    0x20c(%edx),%eax
    call   func_2595c
    mov    0x20c(%edx),%eax
    call   func_72124
    movl   $0x0,0x20c(%edx)
    jmp    jump_28510
  jump_28551:
    mov    0x92e(%ecx),%esi
    test   %esi,%esi
    je     jump_28562
    mov    %esi,%eax
    call   func_2595c
  jump_28562:
    mov    0x92e(%ecx),%eax
    call   func_72124
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_2a3e8
    lea    0x90a(%ecx),%eax
    call   func_2a9c0
    sub    $0x90a,%eax
    xor    %edx,%edx
    call   func_1bbc8
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_28594:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,(%esp)
    mov    %ecx,%ebp
    test   %edx,%edx
    jne    jump_285ae
    xor    %eax,%eax
    jmp    jump_2870e
  jump_285ae:
    mov    $data_81400,%edx
    mov    $0x200,%ebx
    call   func_298bc
    xor    %ecx,%ecx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_1bbfc
    test   %eax,%eax
    jne    jump_285ff
    lea    0x118(%esi),%edx
    mov    $0x80,%ebx
    mov    %esi,%eax
    call   func_1bf94
    cmp    $0xffffffff,%eax
    jne    jump_2861b
    mov    $0xe3,%ebx
    mov    $data_8140d,%edx
    xor    %eax,%eax
    call   func_25888
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_285ff:
    mov    $0xe9,%ebx
    mov    $data_81419,%edx
    xor    %eax,%eax
    call   func_25888
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_2861b:
    xor    %eax,%eax
    mov    0x11c(%esi),%ax
    cmp    $0xaf12,%eax
    je     jump_28647
    mov    $0xef,%ebx
    mov    $data_81425,%edx
    xor    %eax,%eax
    call   func_25888
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_28647:
    cmp    $0xffffffff,%ebp
    jne    jump_28667
    xor    %edx,%edx
    mov    $0x280,%eax
    mov    0x120(%esi),%dx
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    jmp    jump_28669
  jump_28667:
    mov    %ebp,%eax
  jump_28669:
    mov    0x14(%esp),%edx
    mov    %eax,0x1a0(%esi)
    cmp    $0xffffffff,%edx
    jne    jump_28693
    xor    %edx,%edx
    mov    $0x1e0,%eax
    mov    0x122(%esi),%dx
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    jmp    jump_28695
  jump_28693:
    mov    %edx,%eax
  jump_28695:
    movl   $0x27f,0x1bc(%esi)
    movl   $0x1df,0x1c0(%esi)
    mov    %eax,0x1a4(%esi)
    lea    0x1b8(%esi),%eax
    mov    (%esp),%ebx
    mov    %eax,0x1cc(%esi)
    test   %ebx,%ebx
    jne    jump_286d9
    mov    data_c84f8,%eax
    mov    %eax,0x1ac(%esi)
    test   %eax,%eax
    je     jump_2870e
    mov    %ebx,0x1b0(%esi)
    jmp    jump_286e9
  jump_286d9:
    movl   $0x0,0x1b0(%esi)
    mov    %ebx,0x1ac(%esi)
  jump_286e9:
    movl   $0x0,0x1c4(%esi)
    mov    0x1ac(%esi),%eax
    movl   $0x0,0x1c8(%esi)
    mov    %eax,0x1b8(%esi)
    mov    $0xffffffff,%eax
  jump_2870e:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_28718:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%ebp
    mov    %ebx,%edi
    movw   $0x0,0x804(%eax)
    movw   $0x0,0x92a(%eax)
    movl   $0x0,0x942(%eax)
    movw   $0x0,0x92c(%eax)
    cmp    %ebx,%edx
    jae    jump_2875b
    mov    $0x15e,%ebx
    mov    $data_81431,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2875b:
    mov    %ebp,%eax
    sub    %ecx,%eax
    cmp    %edi,%eax
    jae    jump_28765
    mov    %eax,%edi
  jump_28765:
    mov    0x1b4(%esi),%edx
    movl   $0xffffffff,0x19c(%esi)
    cmp    $0xffffffff,%edx
    jne    jump_287c4
    mov    0x198(%esi),%eax
    call   func_2595c
    mov    0x198(%esi),%eax
    call   func_7211c
    mov    0x1a8(%esi),%eax
    call   func_2595c
    mov    0x1a8(%esi),%eax
    call   func_7211c
    movl   $0x0,0x198(%esi)
    movl   $0x0,0x1a8(%esi)
    movl   $0x0,0x1b4(%esi)
  jump_287c4:
    mov    0x14(%esp),%ebx
    test   %ebx,%ebx
    je     jump_287d2
    mov    %ebx,0x1e8(%esi)
  jump_287d2:
    cmpl   $0x0,0x1e8(%esi)
    jne    jump_28811
    mov    $data_8143d,%ebx
    mov    %ebp,%eax
    mov    $0x1,%edx
    call   func_729c4
    call   func_2593c
    mov    %eax,0x1e8(%esi)
    test   %eax,%eax
    jne    jump_28811
    mov    $0x183,%ebx
    mov    $data_81449,%edx
    call   func_25888
    xor    %eax,%eax
    jmp    jump_288cf
  jump_28811:
    mov    0x1e8(%esi),%eax
    mov    %ebp,0x1f4(%esi)
    add    %ebp,%eax
    mov    0x168(%esi),%edx
    mov    %eax,0x1ec(%esi)
    sub    %ecx,%eax
    xor    %ebx,%ebx
    mov    %eax,0x1f0(%esi)
    mov    $0x40,%ecx
    mov    0x1f0(%esi),%ebp
    mov    0x10(%esp),%eax
    sub    %edi,%ebp
    mov    %eax,0x1fc(%esi)
    mov    %esi,%eax
    mov    %ebp,0x1e4(%esi)
    call   func_1becc
    push   $func_2b3d4
    mov    %edi,%ebx
    mov    %esi,%eax
    mov    0x1e4(%esi),%edx
    call   func_1bfd4
    cmp    %edi,%eax
    setge  %al
    push   $0x0
    push   $0x1df
    push   $0x27f
    and    $0xff,%eax
    push   $0x0
    dec    %eax
    push   $0x0
    mov    %eax,0x200(%esi)
    call   *data_86a84
    mov    0x1e4(%esi),%eax
    mov    %eax,0x198(%esi)
    add    $0x10,%eax
    mov    %eax,0x1a8(%esi)
    mov    0x1e8(%esi),%eax
    mov    %eax,0x1e4(%esi)
    mov    0x198(%esi),%eax
    sub    0x1e4(%esi),%eax
    add    $0x14,%esp
    mov    %eax,0x1f8(%esi)
    mov    $0xffffffff,%eax
  jump_288cf:
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_28d94:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    cmpl   $0x0,data_c84f4
    je     jump_291f7
    cmpl   $0xffffffff,0x946(%eax)
    jne    jump_28db7
    call   func_29204
  jump_28db7:
    cmpl   $0xffffffff,data_c84f4
    je     jump_28dcd
    cmpl   $0xffffffff,0x93a(%ebp)
    jne    jump_290cc
  jump_28dcd:
    mov    0x93a(%ebp),%edi
    test   %edi,%edi
    jne    jump_28de0
    cli
    mov    %edi,data_c84f4
    sti
    cld
  jump_28de0:
    mov    0x19c(%ebp),%edx
    inc    %edx
    mov    %edx,0x19c(%ebp)
    jne    jump_28e0b
    mov    0x926(%ebp),%ecx
    push   %ecx
    push   $0x1df
    push   $0x27f
    push   %edx
    push   %edx
    call   *data_86a84
    add    $0x14,%esp
  jump_28e0b:
    xor    %eax,%eax
    mov    0x19c(%ebp),%esi
    mov    0x11e(%ebp),%ax
    cmp    %esi,%eax
    jg     jump_28e25
    xor    %eax,%eax
    jmp    jump_291fc
  jump_28e25:
    mov    0x198(%ebp),%eax
    mov    0x4(%eax),%ax
    mov    data_90b9c,%edi
    inc    %edi
    and    $0xffff,%eax
    mov    %edi,data_90b9c
    cmp    $0xf1fa,%eax
    je     jump_28e59
    mov    $0x32e,%ebx
    mov    $data_814a9,%edx
    xor    %eax,%eax
    call   func_25878
  jump_28e59:
    mov    0x1a8(%ebp),%esi
    xor    %edi,%edi
    jmp    jump_28eb2
  jump_28e63:
    mov    %ebp,%eax
    movw   $0x0,0x92c(%ebp)
    call   func_2934c
    jmp    jump_28eb1
  jump_28e75:
    mov    0x1a4(%ebp),%ebx
    push   %ebx
    mov    0x1a0(%ebp),%ecx
    push   %ecx
    push   %edx
    call   func_2a420
    add    $0xc,%esp
    jmp    jump_28eb1
  jump_28e8e:
    mov    %ebp,%eax
    call   func_29434
    jmp    jump_28eb1
  jump_28e97:
    mov    %ebp,%eax
    call   func_29638
    jmp    jump_28eb1
  jump_28ea0:
    mov    $0x355,%ebx
    mov    $data_814b5,%edx
    xor    %eax,%eax
    call   func_25878
  jump_28eb1:
    inc    %edi
  jump_28eb2:
    mov    0x198(%ebp),%edx
    mov    0x6(%edx),%dx
    and    $0xffff,%edx
    cmp    %edx,%edi
    jge    jump_28f41
    mov    (%esi),%eax
    mov    %esi,%edx
    add    %eax,%esi
    mov    0x4(%edx),%ax
    add    $0x6,%edx
    cmp    $0xf,%ax
    jb     jump_28eed
    jbe    jump_28e8e
    cmp    $0x10,%ax
    jbe    jump_28e97
    cmp    $0x12,%ax
    je     jump_28eb1
    jmp    jump_28ea0
  jump_28eed:
    cmp    $0x4,%ax
    jb     jump_28ea0
    jbe    jump_28e63
    cmp    $0x7,%ax
    je     jump_28e75
    jmp    jump_28ea0
  jump_28f05:
    mov    $data_c84f8,%eax
    mov    0x932(%ebp),%ebx
    mov    0x930(%ebp),%edx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    call   func_2baf8
    jmp    jump_28f56
  jump_28f23:
    mov    $data_c84f8,%eax
    mov    0x932(%ebp),%ebx
    mov    0x930(%ebp),%edx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    call   func_2bba0
    jmp    jump_28f56
  jump_28f41:
    mov    0x92a(%ebp),%ax
    cmp    $0x1,%ax
    jb     jump_28f56
    jbe    jump_28f23
    cmp    $0x2,%ax
    je     jump_28f05
  jump_28f56:
    mov    0x802(%ebp),%eax
    sar    $0x10,%eax
    lea    0x0(,%eax,4),%edx
    sub    %eax,%edx
    mov    0x202(%ebp,%edx,4),%eax
    sar    $0x10,%eax
    cmp    0x19c(%ebp),%eax
    jne    jump_28f81
    mov    %ebp,%eax
    call   func_2a168
  jump_28f81:
    cmpw   $0x0,0x92c(%ebp)
    je     jump_28fbf
    mov    0x92c(%ebp),%al
    xor    %edx,%edx
    dec    %al
    mov    %al,%dl
    mov    $data_c84f8,%eax
    call   func_2bcc4
    incw   0x92c(%ebp)
    mov    0x92a(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x40,%eax
    jle    jump_28fbf
    movw   $0x0,0x92c(%ebp)
  jump_28fbf:
    mov    0x93a(%ebp),%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_28fed
    mov    0x93e(%ebp),%eax
    cmp    0x19c(%ebp),%eax
    jne    jump_28fed
    call   func_734ec
    movl   $0x0,0x93a(%ebp)
    mov    %ebx,0x93e(%ebp)
  jump_28fed:
    mov    0x198(%ebp),%eax
    mov    0x1f8(%ebp),%esi
    mov    (%eax),%eax
    add    %eax,%esi
    mov    %esi,0x1f8(%ebp)
    mov    0x198(%ebp),%esi
    add    (%esi),%esi
    mov    0x1f0(%ebp),%edx
    mov    %esi,0x198(%ebp)
    cmp    %edx,%esi
    jb     jump_29030
    mov    0x1e8(%ebp),%eax
    add    %eax,%esi
    sub    %edx,%esi
    mov    %esi,0x198(%ebp)
    jmp    jump_290bd
  jump_29030:
    lea    0x10(%esi),%ebx
    mov    0x1f0(%ebp),%ecx
    mov    %ebx,%edx
    sub    %ecx,%edx
    test   %edx,%edx
    jle    jump_29074
    mov    %ebx,%edi
    mov    %edx,%ecx
    mov    0x1e8(%ebp),%esi
    sub    %edx,%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    0x198(%ebp),%ecx
    mov    %ebx,%edi
    mov    0x1e8(%ebp),%esi
    mov    (%ecx),%ecx
    add    %edx,%esi
    sub    $0x10,%ecx
    jmp    jump_290ad
  jump_29074:
    mov    (%esi),%ecx
    add    %esi,%ecx
    mov    0x1f0(%ebp),%esi
    sub    %esi,%ecx
    test   %ecx,%ecx
    jle    jump_290bd
    mov    0x1ec(%ebp),%eax
    sub    %esi,%eax
    cmp    %eax,%ecx
    jl     jump_290a1
    mov    $0x3d0,%ebx
    mov    $data_814c1,%edx
    xor    %eax,%eax
    call   func_25878
  jump_290a1:
    mov    0x1e8(%ebp),%esi
    mov    0x1f0(%ebp),%edi
  jump_290ad:
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
  jump_290bd:
    mov    0x198(%ebp),%eax
    add    $0x10,%eax
    mov    %eax,0x1a8(%ebp)
  jump_290cc:
    cmpl   $0x0,0x200(%ebp)
    jne    jump_2915c
    mov    0x1f8(%ebp),%eax
    mov    0x1fc(%ebp),%edi
    cmp    %edi,%eax
    jb     jump_290ed
    mov    %edi,%edx
    jmp    jump_290ef
  jump_290ed:
    mov    %eax,%edx
  jump_290ef:
    mov    0x1e4(%ebp),%eax
    mov    0x1f0(%ebp),%ebx
    add    %edx,%eax
    sub    %ebx,%eax
    mov    %edx,%esi
    test   %eax,%eax
    jle    jump_29107
    sub    %eax,%esi
  jump_29107:
    mov    %esi,%ebx
    mov    %ebp,%eax
    mov    0x1e4(%ebp),%edx
    call   func_1bf94
    cmp    %esi,%eax
    jge    jump_29124
    movl   $0xffffffff,0x200(%ebp)
  jump_29124:
    mov    0x1e4(%ebp),%ecx
    mov    0x1f8(%ebp),%edi
    add    %esi,%ecx
    mov    0x1f0(%ebp),%edx
    mov    %ecx,0x1e4(%ebp)
    sub    %esi,%edi
    mov    0x1e4(%ebp),%eax
    mov    %edi,0x1f8(%ebp)
    cmp    %edx,%eax
    jb     jump_2915c
    mov    0x1e8(%ebp),%eax
    mov    %eax,0x1e4(%ebp)
  jump_2915c:
    mov    0x198(%ebp),%edx
    mov    0x1f8(%ebp),%eax
    mov    (%edx),%ebx
    mov    0x1ec(%ebp),%ecx
    add    %ebx,%eax
    mov    0x1f0(%ebp),%esi
    add    %ecx,%eax
    mov    0x1f4(%ebp),%edi
    sub    %esi,%eax
    cmp    %edi,%eax
    jb     jump_291f7
    mov    0x1f8(%ebp),%esi
    mov    0x1e4(%ebp),%eax
    mov    0x1f0(%ebp),%edx
    add    %esi,%eax
    sub    %edx,%eax
    test   %eax,%eax
    jle    jump_291a2
    sub    %eax,%esi
  jump_291a2:
    mov    %esi,%ebx
    mov    %ebp,%eax
    mov    0x1e4(%ebp),%edx
    call   func_1bf94
    cmp    %esi,%eax
    jge    jump_291bf
    movl   $0xffffffff,0x200(%ebp)
  jump_291bf:
    mov    0x1e4(%ebp),%ebx
    add    %esi,%ebx
    mov    0x1f8(%ebp),%ecx
    mov    %ebx,0x1e4(%ebp)
    sub    %esi,%ecx
    mov    0x1f0(%ebp),%esi
    mov    0x1e4(%ebp),%eax
    mov    %ecx,0x1f8(%ebp)
    cmp    %esi,%eax
    jb     jump_291f7
    mov    0x1e8(%ebp),%eax
    mov    %eax,0x1e4(%ebp)
  jump_291f7:
    mov    $0xffffffff,%eax
  jump_291fc:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_29204:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    $0x27f,%ebx
    mov    0x1f4(%eax),%eax
    xor    %edx,%edx
    div    %ebx
    mov    0x1e8(%esi),%ecx
    mov    0x1e4(%esi),%edx
    sub    %ecx,%edx
    mov    %eax,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x198(%esi),%edx
    sub    %ecx,%edx
    mov    %eax,%edi
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    xor    %dl,%dl
    mov    %dl,0x1(%esp)
    mov    %dl,0x2(%esp)
    mov    %esp,%edx
    push   %edx
    mov    %eax,%esi
    mov    $0xff,%ah
    push   $0xfe
    mov    %ah,0x8(%esp)
    call   *data_86a9c
    add    $0x8,%esp
    mov    %esp,%edx
    xor    %bl,%bl
    push   %edx
    mov    %bl,0x4(%esp)
    mov    $0xff,%bh
    push   $0xff
    mov    %bh,0x9(%esp)
    call   *data_86a9c
    add    $0x8,%esp
    cmp    %edi,%esi
    jl     jump_292d5
    push   $0xff
    push   $0x1df
    push   %edi
    push   $0x1c2
    push   $0x0
    call   *data_86a84
    add    $0x14,%esp
    push   $0xfe
    push   $0x1df
    push   %esi
    push   $0x1c2
    push   %edi
    call   *data_86a84
    add    $0x14,%esp
    push   $0xff
    push   $0x1df
    push   $0x27f
    push   $0x1c2
    push   %esi
    jmp    jump_2931f
  jump_292d5:
    push   $0xfe
    push   $0x1df
    push   %esi
    push   $0x1c2
    push   $0x0
    call   *data_86a84
    add    $0x14,%esp
    push   $0xff
    push   $0x1df
    push   %edi
    push   $0x1c2
    push   %esi
    call   *data_86a84
    add    $0x14,%esp
    push   $0xfe
    push   $0x1df
    push   $0x27f
    push   $0x1c2
    push   %edi
  jump_2931f:
    call   *data_86a84
    add    $0x14,%esp
    push   $0xfe
    push   $0x1df
    push   %esi
    push   $0x1c2
    push   %esi
    call   *data_86a84
    add    $0x14,%esp
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2934c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%ebp
    lea    0x2(%edx),%esi
    mov    (%edx),%ax
    xor    %ebx,%ebx
    mov    %eax,(%esp)
    mov    %ebx,0x8(%esp)
    xor    %ah,%ah
    mov    (%esp),%ecx
    mov    %ah,0xc(%esp)
    test   %cx,%cx
    jbe    jump_29428
    jmp    jump_2938e
  jump_29379:
    mov    0x8(%esp),%edi
    inc    %edi
    mov    (%esp),%edx
    mov    %edi,0x8(%esp)
    cmp    %dx,%di
    jae    jump_29428
  jump_2938e:
    mov    %esi,%eax
    mov    0xc(%esp),%dl
    mov    (%eax),%al
    inc    %esi
    add    %al,%dl
    xor    %ah,%ah
    mov    (%esi),%al
    inc    %esi
    mov    %eax,0x4(%esp)
    xor    %eax,%eax
    mov    -0x1(%esi),%al
    mov    %dl,0xc(%esp)
    test   %eax,%eax
    jne    jump_293b7
    movl   $0x100,0x4(%esp)
  jump_293b7:
    mov    0x4(%esp),%ecx
    xor    %edi,%edi
    test   %cx,%cx
    jbe    jump_29379
    jmp    jump_293ce
  jump_293c4:
    mov    0x4(%esp),%eax
    inc    %edi
    cmp    %ax,%di
    jae    jump_29379
  jump_293ce:
    mov    0x930(%ebp),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    %di,%ax
    cmp    %edx,%eax
    jl     jump_293ef
    mov    0x932(%ebp),%ebx
    sar    $0x10,%ebx
    add    %ebx,%edx
    cmp    %edx,%eax
    jl     jump_293c4
  jump_293ef:
    push   %esi
    mov    (%esi),%dh
    mov    0x1(%esi),%bl
    xor    %eax,%eax
    shr    $0x2,%bl
    mov    0x10(%esp),%al
    mov    %bl,0x1(%esi)
    shr    $0x2,%dh
    mov    0x2(%esi),%bh
    mov    %dh,(%esi)
    shr    $0x2,%bh
    push   %eax
    mov    %bh,0x2(%esi)
    call   *data_86a9c
    add    $0x8,%esp
    mov    0xc(%esp),%cl
    inc    %cl
    add    $0x3,%esi
    mov    %cl,0xc(%esp)
    jmp    jump_293c4
  jump_29428:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_29434:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    %eax,0x4(%esp)
    mov    %edx,%ebp
    mov    0x1ac(%eax),%edx
    mov    %edx,0x8(%esp)
    xor    %edx,%edx
    mov    %edx,(%esp)
    jmp    jump_294c1
  jump_29453:
    mov    0x11(%esp),%ebx
    mov    0x8(%esp),%eax
    xor    %edx,%edx
    sar    $0x18,%ebx
    mov    0x0(%ebp),%dl
    inc    %ebp
    call   func_72280
  jump_29469:
    movsbw 0x14(%esp),%dx
    mov    0x10(%esp),%edi
    add    %edx,%edi
    mov    0x11(%esp),%edx
    mov    0x8(%esp),%eax
    sar    $0x18,%edx
    add    %edx,%eax
    mov    0x4(%esp),%ebx
    mov    %eax,0x8(%esp)
    mov    0x120(%ebx),%ax
    mov    %edi,0x10(%esp)
    cmp    %ax,%di
    jb     jump_294ea
  jump_2949a:
    mov    0x4(%esp),%ebx
    xor    %edx,%edx
    mov    0x120(%ebx),%dx
    mov    $0x280,%ebx
    sub    %edx,%ebx
    mov    (%esp),%ecx
    mov    %ebx,%edx
    mov    0x8(%esp),%ebx
    inc    %ecx
    add    %edx,%ebx
    mov    %ecx,(%esp)
    mov    %ebx,0x8(%esp)
  jump_294c1:
    mov    0x4(%esp),%ebx
    xor    %edx,%edx
    mov    0x122(%ebx),%dx
    cmp    (%esp),%edx
    jle    jump_29536
    xor    %edx,%edx
    mov    %edx,0x10(%esp)
    mov    0x4(%esp),%edx
    mov    0x120(%edx),%bx
    inc    %ebp
    test   %bx,%bx
    jbe    jump_2949a
  jump_294ea:
    mov    0x0(%ebp),%dl
    mov    %dl,0x14(%esp)
    mov    0x11(%esp),%edx
    sar    $0x18,%edx
    inc    %ebp
    test   %edx,%edx
    jge    jump_29453
    mov    0x14(%esp),%bl
    neg    %bl
    mov    0x8(%esp),%edi
    mov    %bl,0x14(%esp)
    mov    %ebp,%esi
    mov    0x11(%esp),%ecx
    mov    0x11(%esp),%edx
    sar    $0x18,%ecx
    sar    $0x18,%edx
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    add    %edx,%ebp
    jmp    jump_29469
  jump_29536:
    mov    $0x100,%ebx
    xor    %ah,%ah
    xor    %ecx,%ecx
    xor    %edx,%edx
    mov    %ah,0xc(%esp)
    mov    %ah,0xd(%esp)
    mov    %ah,0xe(%esp)
    mov    $data_c84f8,%eax
    call   func_2b990
    lea    0xc(%esp),%ecx
    mov    $0x100,%ebx
    mov    $data_c84f8,%eax
    xor    %edx,%edx
    call   func_2bd50
    mov    0x4(%esp),%edx
    movl   $0x0,0x1d0(%edx)
    mov    0x4(%esp),%ebx
    movl   $0x0,0x1d4(%edx)
    xor    %edx,%edx
    mov    0x120(%ebx),%dx
    dec    %edx
    mov    %edx,0x1d8(%ebx)
    xor    %edx,%edx
    mov    0x122(%ebx),%dx
    dec    %edx
    mov    %edx,0x1dc(%ebx)
    mov    0x1a4(%ebx),%edx
    add    0x1dc(%ebx),%edx
    mov    0x1d8(%ebx),%esi
    push   %edx
    mov    0x1a0(%ebx),%edx
    add    %esi,%edx
    push   %edx
    mov    0x1a4(%ebx),%edi
    push   %edi
    mov    0x1a0(%ebx),%ebp
    push   %ebp
    lea    0x1cc(%ebx),%edx
    push   %edx
    call   *data_86aa4
    add    $0x14,%esp
    mov    0x4(%esp),%edx
    mov    $data_c84f8,%ecx
    mov    0x4(%esp),%ebx
    movw   $0x0,0x92c(%edx)
    jmp    jump_29610
  jump_295fa:
    xor    %edx,%edx
    mov    %ecx,%eax
    mov    0x92c(%ebx),%dl
    call   func_2bcc4
    incw   0x92c(%ebx)
  jump_29610:
    mov    0x4(%esp),%edx
    mov    0x92a(%edx),%edx
    sar    $0x10,%edx
    cmp    $0x20,%edx
    jl     jump_295fa
    mov    0x4(%esp),%edx
    incw   0x92c(%edx)
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_29638:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    xor    %ecx,%ecx
    mov    0x1ac(%eax),%edi
    mov    0x120(%eax),%cx
    xor    %eax,%eax
    mov    0x122(%ebx),%ax
    imul   %eax,%ecx
    mov    %edx,%esi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    xor    %eax,%eax
    mov    0x120(%ebx),%ax
    dec    %eax
    mov    %eax,0x1d8(%ebx)
    xor    %eax,%eax
    mov    0x122(%ebx),%ax
    dec    %eax
    mov    %eax,0x1dc(%ebx)
    mov    0x1a4(%ebx),%eax
    add    0x1dc(%ebx),%eax
    mov    0x1d8(%ebx),%ecx
    push   %eax
    mov    0x1a0(%ebx),%eax
    add    %ecx,%eax
    push   %eax
    mov    0x1a4(%ebx),%esi
    push   %esi
    mov    0x1a0(%ebx),%edi
    add    $0x1cc,%ebx
    push   %edi
    movl   $0x0,0x4(%ebx)
    push   %ebx
    movl   $0x0,0x8(%ebx)
    call   *data_86aa4
    add    $0x14,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_298bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x2e0,%esp
    mov    %eax,%ebp
    mov    %edx,%eax
    test   %edx,%edx
    je     jump_2a159
    xor    %edx,%edx
    mov    %dx,0x2dc(%esp)
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,0x2d0(%esp)
    test   %eax,%eax
    je     jump_2a159
    mov    %ebp,%eax
    xor    %edx,%edx
    add    $0x90a,%eax
    mov    %edx,0x2d4(%esp)
    mov    %eax,0x2d8(%esp)
  jump_2990a:
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_814f0
    mov    0x2dc(%esp),%ebx
    push   %ebx
    call   func_73431
    add    $0x10,%esp
    mov    0x2cc(%esp),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_2a12f
    mov    0x2d4(%esp),%esi
    inc    %esi
    mov    %esi,0x2d4(%esp)
    cmp    $0x2,%ecx
    jb     jump_29fc0
    jbe    jump_29a64
    cmp    $0xb,%ecx
    jb     jump_29fb2
    jbe    jump_29ea0
    cmp    $0x10,%ecx
    je     jump_29d97
  jump_29975:
    mov    0x2d4(%esp),%ebx
    push   %ebx
    mov    0x2d0(%esp),%ecx
    push   %ecx
    lea    0x2a0(%esp),%eax
    push   %eax
    push   $data_815ef
    push   $data_86500
    call   func_720c9
    add    $0x14,%esp
    call   func_2592c
    jmp    jump_2990a
  jump_299a9:
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_814f6
    push   %ebx
    call   func_73431
    add    $0x10,%esp
    mov    0x2cc(%esp),%eax
    mov    %eax,0x916(%ebp)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_814fc
    push   %ebx
    call   func_73431
    add    $0x10,%esp
    mov    0x2cc(%esp),%eax
    mov    %eax,0x91a(%ebp)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_81502
    push   %ebx
    call   func_73431
    add    $0x10,%esp
    mov    0x2cc(%esp),%eax
    mov    %eax,0x91e(%ebp)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_81508
    push   %ebx
    call   func_73431
    add    $0x10,%esp
    lea    0x5(%esi),%edx
    mov    0x2cc(%esp),%eax
    mov    %edx,0x2d4(%esp)
    mov    %eax,0x922(%ebp)
    jmp    jump_2990a
  jump_29a64:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x80,%eax
    jl     jump_29a85
    mov    $0x5ff,%ebx
    mov    $data_81550,%edx
    xor    %eax,%eax
    call   func_25878
  jump_29a85:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    movw   $0x1,0x206(%eax,%ebp,1)
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    mov    0x2da(%esp),%edx
    sar    $0x10,%edx
    mov    %edx,0x208(%eax,%ebp,1)
    lea    0x118(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_8155c
    mov    0x2dc(%esp),%eax
    push   %eax
    call   func_73431
    add    $0x10,%esp
    lea    0x118(%esp),%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    lea    0x118(%esp),%eax
    mov    0x118(%esp),%dl
    mov    %ecx,%edi
    test   %dl,%dl
    je     jump_29b12
  jump_29b02:
    cmpb   $0x5f,(%eax)
    jne    jump_29b0a
    movb   $0x20,(%eax)
  jump_29b0a:
    mov    0x1(%eax),%dh
    inc    %eax
    test   %dh,%dh
    jne    jump_29b02
  jump_29b12:
    lea    0x118(%esp),%edx
    mov    0x2d8(%esp),%eax
    call   func_2ac9c
    mov    %eax,%esi
    cmp    $0xffffffff,%eax
    jne    jump_29b3d
    mov    $0x613,%ebx
    mov    $data_81562,%edx
    xor    %eax,%eax
    call   func_25888
  jump_29b3d:
    mov    0x2da(%esp),%ecx
    sar    $0x10,%ecx
    mov    %si,0x80c(%ebp,%ecx,8)
    xor    %si,%si
    mov    %esi,%eax
    shr    $0x10,%eax
    mov    %ax,0x80e(%ebp,%ecx,8)
    movswl %di,%eax
    mov    $data_8156e,%ebx
    inc    %eax
    mov    $0x1,%edx
    call   func_729c4
    call   func_2593c
    mov    %eax,0x808(%ebp,%ecx,8)
    test   %eax,%eax
    jne    jump_29b91
    mov    $0x61b,%ebx
    mov    $data_81577,%edx
    call   func_25878
  jump_29b91:
    mov    0x2da(%esp),%eax
    sar    $0x10,%eax
    lea    0x118(%esp),%esi
    mov    0x808(%ebp,%eax,8),%edi
    push   %edi
  jump_29baa:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_29bc2
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_29baa
  jump_29bc2:
    pop    %edi
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_81583
    mov    0x2dc(%esp),%edi
    push   %edi
    call   func_73431
    add    $0x10,%esp
    mov    0x2cc(%esp),%eax
    sub    $0x20,%eax
    mov    %eax,0x2cc(%esp)
    test   %eax,%eax
    jg     jump_29c0e
    mov    $0x622,%ebx
    mov    $data_81589,%edx
    xor    %eax,%eax
    call   func_25888
  jump_29c0e:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %ax,0x204(%edx)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_81595
    mov    0x806(%ebp),%ax
    mov    0x2dc(%esp),%ebx
    inc    %eax
    push   %ebx
    mov    %ax,0x806(%ebp)
    call   func_73431
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    incw   0x2ec(%esp)
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %ax,0x204(%edx)
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    movw   $0x2,0x206(%eax,%ebp,1)
    mov    0x2d4(%esp),%ecx
    mov    0x806(%ebp),%dx
    add    $0x4,%ecx
    inc    %edx
    mov    %ecx,0x2d4(%esp)
    mov    %dx,0x806(%ebp)
    jmp    jump_2990a
  jump_29cbf:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x80,%eax
    jl     jump_29ce0
    mov    $0x635,%ebx
    mov    $data_8159b,%edx
    xor    %eax,%eax
    call   func_25878
  jump_29ce0:
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_815a7
    mov    0x2dc(%esp),%ecx
    push   %ecx
    call   func_73431
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %ax,0x204(%edx)
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    movw   $0x3,0x206(%eax,%ebp,1)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_815ad
    push   %ecx
    call   func_73431
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %eax,0x208(%edx)
    mov    0x2d4(%esp),%edi
    mov    0x806(%ebp),%si
    add    $0x3,%edi
    inc    %esi
    mov    %edi,0x2d4(%esp)
    mov    %si,0x806(%ebp)
    jmp    jump_2990a
  jump_29d97:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x80,%eax
    jl     jump_29db8
    mov    $0x68a,%ebx
    mov    $data_815b3,%edx
    xor    %eax,%eax
    call   func_25878
  jump_29db8:
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_815bf
    mov    0x2dc(%esp),%esi
    push   %esi
    call   func_73431
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %eax,0x208(%edx)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_815c5
    push   %esi
    call   func_73431
    add    $0x10,%esp
    cmpl   $0x1,0x2cc(%esp)
    setne  %al
    and    $0xff,%eax
    add    $0x1e,%eax
    mov    %eax,%edx
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    mov    %dx,0x206(%eax,%ebp,1)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_815cb
    push   %esi
    call   func_73431
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %ax,0x204(%edx)
    mov    0x2d4(%esp),%ecx
    mov    0x806(%ebp),%bx
    add    $0x4,%ecx
    inc    %ebx
    mov    %ecx,0x2d4(%esp)
    mov    %bx,0x806(%ebp)
    jmp    jump_2990a
  jump_29ea0:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x80,%eax
    jl     jump_29ec1
    mov    $0x703,%ebx
    mov    $data_815d1,%edx
    xor    %eax,%eax
    call   func_25878
  jump_29ec1:
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    movw   $0xb,0x206(%eax,%ebp,1)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_815dd
    mov    0x2dc(%esp),%esi
    push   %esi
    call   func_73431
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %eax,0x208(%edx)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_815e3
    push   %esi
    call   func_73431
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %eax,0x20c(%edx)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_815e9
    push   %esi
    call   func_73431
    mov    0x804(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xc,%eax,%eax
    add    $0x10,%esp
    lea    (%eax,%ebp,1),%edx
    mov    0x2cc(%esp),%eax
    mov    %ax,0x204(%edx)
    mov    0x2d4(%esp),%edx
    mov    0x806(%ebp),%cx
    add    $0x4,%edx
    inc    %ecx
    mov    %edx,0x2d4(%esp)
    mov    %cx,0x806(%ebp)
    jmp    jump_2990a
  jump_29fb2:
    cmp    $0x3,%ecx
    je     jump_29cbf
    jmp    jump_29975
  jump_29fc0:
    test   %ecx,%ecx
    jbe    jump_299a9
    lea    0x218(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_8150e
    push   %ebx
    call   func_73431
    add    $0x10,%esp
    lea    0x218(%esp),%edx
    mov    0x2d8(%esp),%eax
    call   func_2aa40
    test   %eax,%eax
    jne    jump_2a00c
    mov    $0x5e3,%ebx
    mov    $data_81514,%edx
    call   func_25888
  jump_2a00c:
    lea    0x218(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_81520
    mov    0x2dc(%esp),%ecx
    push   %ecx
    mov    $0x200,%ebx
    call   func_73431
    add    $0x10,%esp
    mov    %esp,%eax
    lea    0x218(%esp),%edx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    je     jump_2a062
    mov    $0x5eb,%ebx
    mov    $data_81526,%edx
    xor    %eax,%eax
    call   func_25888
  jump_2a062:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,0x92e(%ebp)
    test   %eax,%eax
    jne    jump_2a084
    mov    $0x5ee,%ebx
    mov    $data_81532,%edx
    call   func_25878
  jump_2a084:
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_8153e
    mov    0x2dc(%esp),%edi
    push   %edi
    call   func_73431
    add    $0x10,%esp
    mov    0x2cc(%esp),%eax
    mov    %ax,0x932(%ebp)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_81544
    push   %edi
    call   func_73431
    add    $0x10,%esp
    mov    0x2cc(%esp),%eax
    mov    %ax,0x934(%ebp)
    lea    0x2cc(%esp),%eax
    push   %eax
    lea    0x29c(%esp),%eax
    push   %eax
    push   $data_8154a
    push   %edi
    mov    %edi,%edx
    call   func_73431
    add    $0x10,%esp
    xor    %edi,%edx
    mov    0x2d4(%esp),%ebx
    mov    0x2cc(%esp),%eax
    add    $0x6,%ebx
    mov    %eax,0x926(%ebp)
    mov    %esp,%eax
    mov    %ebx,0x2d4(%esp)
    call   func_1bbc8
    jmp    jump_2990a
  jump_2a12f:
    mov    %ebx,%eax
    mov    $func_2832c,%ecx
    call   func_7280e
    mov    $0xc,%ebx
    mov    0x804(%ebp),%edx
    lea    0x204(%ebp),%eax
    sar    $0x10,%edx
    call   func_72316
    mov    $0xffffffff,%eax
  jump_2a159:
    add    $0x2e0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2a168:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    lea    0x808(%eax),%edx
    mov    %edx,-0x8(%ebp)
    lea    0x90a(%eax),%edx
    mov    %edx,-0x4(%ebp)
  jump_2a187:
    mov    0x802(%esi),%edx
    sar    $0x10,%edx
    imul   $0xc,%edx,%edx
    add    %esi,%edx
    mov    0x202(%edx),%ebx
    mov    0x19c(%esi),%ecx
    sar    $0x10,%ebx
    cmp    %ecx,%ebx
    je     jump_2a2ee
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_2a1b5:
    mov    0x942(%esi),%ebx
    test   %ebx,%ebx
    jne    jump_2a239
    mov    -0x8(%ebp),%edi
    mov    0x208(%edx),%edx
    mov    $data_c84f8,%eax
    shl    $0x3,%edx
    mov    0x92e(%esi),%ecx
    add    %edx,%edi
    xor    %edx,%edx
    mov    0x934(%esi),%bx
    mov    0x932(%esi),%dx
    call   func_2b8c0
    mov    $data_c84f8,%eax
    mov    0x932(%esi),%ebx
    mov    0x930(%esi),%edx
    xor    %ecx,%ecx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    call   func_2bd50
    push   $0x0
    mov    -0x4(%ebp),%eax
    mov    (%edi),%ecx
    push   $0xffffffff
    mov    0x4(%edi),%ebx
    mov    0x2(%edi),%edx
    push   $0xffffffff
    sar    $0x10,%ebx
    push   $0x80
    sar    $0x10,%edx
    call   func_2af88
    movw   $0x1,0x92a(%esi)
  jump_2a239:
    incw   0x804(%esi)
    jmp    jump_2a187
  jump_2a245:
    mov    0x208(%edx),%edx
    mov    0x936(%esi),%eax
    mov    %edx,0x1e0(%esi)
    cmp    $0xffffffff,%eax
    je     jump_2a239
    test   %edx,%edx
    jne    jump_2a275
    push   %eax
    call   func_62fd5
    add    $0x4,%esp
    incw   0x804(%esi)
    jmp    jump_2a187
  jump_2a275:
    push   %edx
    push   %eax
    call   func_62d3c
    add    $0x8,%esp
    incw   0x804(%esi)
    jmp    jump_2a187
  jump_2a28b:
    mov    $data_f8638,%eax
    mov    0x208(%edx),%edx
    xor    %ecx,%ebx
    movswl %dx,%edx
    call   func_4acbc
    incw   0x804(%esi)
    jmp    jump_2a187
  jump_2a2ac:
    mov    $data_f8638,%eax
    call   func_4ae0c
    incw   0x804(%esi)
    jmp    jump_2a187
  jump_2a2c2:
    cmpl   $0xffffffff,data_f8843
    jne    jump_2a239
    mov    0x20c(%edx),%edx
    mov    $data_f8638,%eax
    movsbl %dl,%edx
    call   func_4b33c
    incw   0x804(%esi)
    jmp    jump_2a187
  jump_2a2ee:
    mov    0x206(%edx),%ax
    cmp    $0x3,%ax
    jb     jump_2a334
    jbe    jump_2a245
    cmp    $0x1e,%ax
    jb     jump_2a311
    jbe    jump_2a28b
    cmp    $0x1f,%ax
    je     jump_2a2ac
    jmp    jump_2a317
  jump_2a311:
    cmp    $0xb,%ax
    je     jump_2a2c2
  jump_2a317:
    mov    $0x80f,%ebx
    mov    $data_8161b,%edx
    xor    %eax,%eax
    call   func_25888
    incw   0x804(%esi)
    jmp    jump_2a187
  jump_2a334:
    cmp    $0x1,%ax
    jb     jump_2a317
    jbe    jump_2a1b5
    cmpl   $0x0,0x942(%esi)
    jne    jump_2a239
    movw   $0x2,0x92a(%esi)
    incw   0x804(%esi)
    jmp    jump_2a187


/*----------------------------------------------------------------*/
func_2a364:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %edx,0x1e0(%eax)
    mov    0x936(%eax),%edx
    cmp    $0xffffffff,%edx
    jne    jump_2a3c8
    push   $func_28320
    call   func_62ae8
    add    $0x4,%esp
    mov    %eax,0x936(%esi)
    cmp    $0xffffffff,%eax
    jne    jump_2a3a7
    mov    $0x823,%ebx
    mov    $data_81627,%edx
    xor    %eax,%eax
    call   func_25888
  jump_2a3a7:
    push   %edi
    mov    0x936(%esi),%edi
    push   %edi
    call   func_62d3c
    add    $0x8,%esp
    mov    0x936(%esi),%ebp
    push   %ebp
    call   func_62f06
    add    $0x4,%esp
    jmp    jump_2a3d2
  jump_2a3c8:
    push   %edi
    push   %edx
    call   func_62d3c
    add    $0x8,%esp
  jump_2a3d2:
    cmpl   $0xffffffff,0x936(%esi)
    sete   %al
    and    $0xff,%eax
    dec    %eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2a3e8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    mov    0x936(%eax),%edx
    cmp    $0xffffffff,%edx
    je     jump_2a41b
    push   %edx
    call   func_62fd5
    add    $0x4,%esp
    mov    0x936(%esi),%ecx
    push   %ecx
    call   func_630a4
    add    $0x4,%esp
    movl   $0xffffffff,0x936(%esi)
  jump_2a41b:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2a420:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xfffffff0,%esp
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %ds
    pop    %es
    cld
    mov    0x8(%ebp),%esi
    mov    0x10(%ebp),%ebx
    mov    $0x0,%ecx
    mov    (%esi),%cx
    inc    %esi
    inc    %esi
  jump_2a43d:
    lods   %ds:(%esi),%ax
    cmp    $0x0,%ax
    jg     jump_2a459
    test   $0x4000,%ax
    je     jump_2a43d
    sub    %ax,%bx
    jmp    jump_2a43d
  jump_2a450:
    dec    %ecx
    jne    jump_2a43d
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    leave
    ret
  jump_2a459:
    mov    0xc(%ebp),%edx
    push   %ecx
  jump_2a45d:
    push   %ax
    mov    $0x0,%eax
    lods   %ds:(%esi),%al
    add    %eax,%edx
    lods   %ds:(%esi),%al
    movsbl %al,%ecx
    test   $0x80,%cx
    je     jump_2a4cd
    neg    %ecx
    lods   %ds:(%esi),%ax
    push   %ebx
    push   %eax
    shl    %ecx
    push   %ecx
    lea    -0x8(%ebp),%eax
    push   %eax
    lea    -0x4(%ebp),%eax
    push   %eax
    push   %ebx
    push   %edx
    call   *data_86aa8
    pop    %edx
    pop    %ebx
    add    $0x8,%esp
    pop    %ecx
    pop    %eax
    mov    -0x4(%ebp),%edi
    cmp    -0x8(%ebp),%ecx
    jle    jump_2a4c3
    sub    -0x8(%ebp),%ecx
    push   %ecx
    mov    -0x8(%ebp),%ecx
    add    %ecx,%edx
    shr    %ecx
    rep stos %ax,%es:(%edi)
    push   %eax
    lea    -0x8(%ebp),%eax
    push   %eax
    lea    -0x4(%ebp),%eax
    push   %eax
    push   %ebx
    push   %edx
    call   *data_86aa8
    pop    %edx
    pop    %ebx
    add    $0x8,%esp
    pop    %eax
    pop    %ecx
    mov    -0x4(%ebp),%edi
  jump_2a4c3:
    add    %ecx,%edx
    shr    %ecx
    rep stos %ax,%es:(%edi)
    pop    %ebx
    jmp    jump_2a516
  jump_2a4cd:
    shl    %ecx
    push   %ecx
    lea    -0x10(%ebp),%eax
    push   %eax
    lea    -0xc(%ebp),%eax
    push   %eax
    push   %ebx
    push   %edx
    call   *data_86aa8
    pop    %edx
    pop    %ebx
    add    $0x8,%esp
    pop    %ecx
    mov    -0xc(%ebp),%edi
    cmp    -0x10(%ebp),%ecx
    jle    jump_2a512
    sub    -0x10(%ebp),%ecx
    push   %ecx
    mov    -0x10(%ebp),%ecx
    add    %ecx,%edx
    rep movsb %ds:(%esi),%es:(%edi)
    lea    -0x10(%ebp),%eax
    push   %eax
    lea    -0xc(%ebp),%eax
    push   %eax
    push   %ebx
    push   %edx
    call   *data_86aa8
    pop    %edx
    pop    %ebx
    add    $0x8,%esp
    pop    %ecx
    mov    -0xc(%ebp),%edi
  jump_2a512:
    add    %ecx,%edx
    rep movsb %ds:(%esi),%es:(%edi)
  jump_2a516:
    pop    %ax
    dec    %ax
    jne    jump_2a45d
    pop    %ecx
    inc    %bx
    jmp    jump_2a450


/*----------------------------------------------------------------*/
func_2a560:
/*----------------------------------------------------------------*/
    call   func_2bf10
    add    $0xab,%eax
    call   func_28354
    movl   $data_85b4c,-0x4(%eax)
    movw   $0x1,0x94a(%eax)
    movw   $0x0,0x94c(%eax)
    sub    $0xab,%eax
    ret


/*----------------------------------------------------------------*/
func_2a590:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2a5af
    mov    $data_85b38,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2a5af:
    add    $0xab,%eax
    xor    %edx,%edx
    movl   $data_85b4c,-0x4(%eax)
    call   func_28484
    mov    $0x1,%edx
    sub    $0xab,%eax
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2a5dd
    call   func_72124
  jump_2a5dd:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2a5e4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   $0xffffffff
    mov    data_fd366,%ebx
    mov    $0xffffffff,%ecx
    add    $0xab,%eax
    mov    (%ebx),%ebx
    call   func_28594
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_2a614
    mov    $0x4e,%ebx
    mov    $data_81634,%edx
    call   func_25888
  jump_2a614:
    mov    %ecx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2a61c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%edx
    mov    0x9ff(%eax),%esi
    sar    $0x10,%esi
    mov    data_121ff4,%ebx
    shl    $0x14,%esi
    cmp    %ebx,%esi
    jle    jump_2a650
    mov    $0x67,%ebx
    mov    $data_81643,%edx
    xor    %eax,%eax
    call   func_25888
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_2a650:
    mov    0xa01(%eax),%ebx
    sar    $0x10,%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_2a668
    mov    data_121ff4,%esi
    mov    %esi,%ebx
    jmp    jump_2a66b
  jump_2a668:
    shl    $0x14,%ebx
  jump_2a66b:
    mov    $data_11f10c,%eax
    call   func_1b4d0
    mov    0xa05(%edx),%eax
    mov    data_121ff0,%ecx
    sar    $0x10,%eax
    push   %ecx
    shl    $0xa,%eax
    mov    0xa03(%edx),%ecx
    push   %eax
    sar    $0x10,%ecx
    lea    0xab(%edx),%eax
    shl    $0xa,%ecx
    mov    %esi,%edx
    call   func_28718
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_2a6a8:
    .long   func_2a71e
    .long   func_2a7db
    .long   func_2a926
    .long   func_2a926
    .long   func_2a926
    .long   func_2a96a
    .long   func_2a96a
    .long   func_2a96a
    .long   func_2a96a
    .long   func_2a8e9


/*----------------------------------------------------------------*/
func_2a6d0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x310,%esp
    mov    %eax,%esi
    mov    %dx,0x308(%esp)
    mov    %ebx,%ebp
    mov    %ecx,%edi
    mov    0x308(%esp),%eax
    xor    %edx,%edx
    dec    %eax
    mov    %edx,0x304(%esp)
    cmp    $0x9,%ax
    ja     func_2a96a
    mov    %esi,%edx
    add    $0xab,%edx
    and    $0xffff,%eax
    mov    %edx,0x300(%esp)
    jmp    *%cs:vtable_2a6a8(,%eax,4)


/*----------------------------------------------------------------*/
func_2a71e:
/*----------------------------------------------------------------*/
    movl   $0xffffffff,0x247(%esi)
    movw   $0x0,0x9f7(%esi)
    movl   $0x0,0x9f9(%esi)
    movl   $0x0,0x9fd(%esi)
    call   func_602c6
    xor    %eax,%eax
    mov    %eax,data_12204c
    mov    %esi,%eax
    call   func_2a61c
    test   %eax,%eax
    jne    jump_2a786
    mov    $data_11f10c,%eax
    call   func_1ace8
    call   func_6028a
    mov    $data_fa35c,%eax
    mov    0x4b(%esi),%ecx
    mov    0x43(%esi),%edx
    mov    0x47(%esi),%ebx
    sar    $0x10,%edx
    call   func_51f24
    jmp    jump_2a989
  jump_2a786:
    mov    $data_f8638,%eax
    mov    0x306(%esp),%edx
    call   func_4ae0c
    sar    $0x10,%edx
    mov    %esi,%eax
    call   func_2eb04
    push   $0x0
    mov    $0xa,%ebx
    mov    $data_fa35c,%eax
    push   $0x0
    mov    0x41(%esi),%edx
    xor    %ecx,%ecx
    call   func_517c4
    mov    $0x12,%edx
    mov    0x300(%esp),%eax
    call   func_2a364
    mov    0x304(%esp),%eax
    add    $0x310,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2a7db:
/*----------------------------------------------------------------*/
    xor    %ecx,%ecx
    mov    %edx,%eax
    mov    %cl,%dl
    add    %cl,%dl
    neg    %dl
    add    $0x81,%dl
    call   func_2a3e8
    mov    %dl,0x30c(%esp)
    jmp    jump_2a82c
  jump_2a7f6:
    mov    $data_c84f8,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %cl,%dl
    call   func_2b3e4
    mov    0x309(%esp),%edx
    mov    $data_f8638,%eax
    sar    $0x18,%edx
    call   func_4b33c
    mov    0x30c(%esp),%ah
    sub    $0x2,%ah
    inc    %ecx
    mov    %ah,0x30c(%esp)
  jump_2a82c:
    movswl %cx,%edx
    cmp    $0x40,%edx
    jl     jump_2a7f6
    mov    $data_f8638,%eax
    mov    $0x300,%ebx
    call   func_4ae0c
    mov    $data_11f10c,%eax
    xor    %edx,%edx
    call   func_1ace8
    mov    %esp,%eax
    mov    %esp,%ecx
    call   func_72280
    mov    $0x100,%ebx
    mov    $data_c84f8,%eax
    xor    %edx,%edx
    call   func_2b904
    push   $0x0
    push   $0x1df
    push   $0x27f
    push   $0x0
    push   $0x0
    call   *data_86a84
    mov    $0x100,%ecx
    mov    $data_81652,%edx
    add    $0x14,%esp
    mov    $data_c84f8,%eax
    xor    %ebx,%ebx
    call   func_2b838
    mov    %esp,%ecx
    mov    $0x100,%ebx
    mov    $data_c84f8,%eax
    xor    %edx,%edx
    call   func_2b904
    mov    $0xffffffff,%edx
    mov    %edi,%ecx
    xor    %ebx,%ebx
    mov    %edx,data_12204c
    mov    %ebx,data_122050
    call   func_6028a
    mov    0x306(%esp),%edx
    mov    %ebp,%ebx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2eb04
    mov    0x304(%esp),%eax
    add    $0x310,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2a8e9:
/*----------------------------------------------------------------*/
    mov    %edx,%eax
    call   func_28d94
    test   %eax,%eax
    jne    jump_2a916
    mov    0x9f7(%esi),%dx
    inc    %edx
    mov    0x9f5(%esi),%bx
    mov    %dx,0x9f7(%esi)
    cmp    %bx,%dx
    jge    jump_2a916
    mov    %esi,%eax
    call   func_2a61c
  jump_2a916:
    mov    0x9f7(%esi),%ax
    cmp    0x9f5(%esi),%ax
    jl     jump_2a94e


/*----------------------------------------------------------------*/
func_2a926:
/*----------------------------------------------------------------*/
    mov    $0xa,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51884
    mov    $data_fa35c,%eax
    mov    0x4b(%esi),%ecx
    mov    0x43(%esi),%edx
    mov    0x47(%esi),%ebx
    sar    $0x10,%edx
    call   func_51f24
  jump_2a94e:
    movl   $0xffffffff,0x304(%esp)
    mov    0x304(%esp),%eax
    add    $0x310,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2a96a:
/*----------------------------------------------------------------*/
    mov    0x306(%esp),%edx
    mov    %edi,%ecx
    mov    %ebp,%ebx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2eb04
    add    $0x310,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2a989:
    mov    0x304(%esp),%eax
    add    $0x310,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    lea    0x0(%eax),%eax
    ret


/*----------------------------------------------------------------*/
func_2a9a0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    movl   $0x0,(%eax)
    xor    %edx,%edx
    movl   $0x0,0x8(%eax)
    call   func_2a9dc
    mov    %ebx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2a9c0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    mov    (%eax),%edx
    test   %edx,%edx
    je     jump_2a9d0
    mov    %edx,%eax
    call   func_2595c
  jump_2a9d0:
    mov    (%ebx),%eax
    call   func_72124
    mov    %ebx,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2a9dc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ecx
    mov    %edx,%eax
    movl   $data_c84f8,0x8(%ecx)
    test   %edx,%edx
    je     jump_2a9f7
    mov    %ecx,%eax
    call   func_2aa40
    pop    %ecx
    pop    %ebx
    ret
  jump_2a9f7:
    mov    $0x100,%eax
    mov    $data_81660,%ebx
    mov    $0x1,%edx
    call   func_729c4
    call   func_2593c
    mov    %eax,0x4(%ecx)
    test   %eax,%eax
    jne    jump_2aa26
    mov    $0x5d,%ebx
    mov    $data_8166f,%edx
    call   func_25878
  jump_2aa26:
    xor    %eax,%eax
  jump_2aa28:
    mov    0x4(%ecx),%edx
    mov    %al,(%edx,%eax,1)
    inc    %eax
    cmp    $0x100,%eax
    jl     jump_2aa28
    mov    $0xffffffff,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2aa40:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    sub    $0x118,%esp
    mov    %eax,%esi
    test   %edx,%edx
    je     jump_2aaae
    mov    %esp,%eax
    mov    $0x200,%ebx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    je     jump_2aa75
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    xor    %esi,%esi
    jmp    jump_2aab3
  jump_2aa75:
    mov    (%esi),%edx
    test   %edx,%edx
    je     jump_2aa82
    mov    %edx,%eax
    call   func_2595c
  jump_2aa82:
    mov    (%esi),%eax
    call   func_72124
    xor    %edx,%edx
    mov    %esp,%eax
    call   func_1bf1c
    mov    %eax,(%esi)
    test   %eax,%eax
    jne    jump_2aaa5
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    xor    %esi,%esi
    jmp    jump_2aab3
  jump_2aaa5:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
  jump_2aaae:
    mov    $0xffffffff,%esi
  jump_2aab3:
    mov    %esi,%eax
    add    $0x118,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2aac0:
/*----------------------------------------------------------------*/
    mov    %edx,0xc(%eax)
    mov    %ebx,0x10(%eax)
    mov    %ecx,0x14(%eax)
    mov    0x4(%esp),%edx
    mov    %edx,0x18(%eax)
    ret    $0x4


/*----------------------------------------------------------------*/
func_2aad4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,0x4(%esp)
    mov    %edx,%ebp
    mov    %ebx,%edi
    mov    %ecx,%ebx
    mov    $0x7c,%dl
    mov    %ebp,%esi
  jump_2aae8:
    mov    (%esi),%al
    cmp    %dl,%al
    je     jump_2ab00
    cmp    $0x0,%al
    je     jump_2aafe
    inc    %esi
    mov    (%esi),%al
    cmp    %dl,%al
    je     jump_2ab00
    inc    %esi
    cmp    $0x0,%al
    jne    jump_2aae8
  jump_2aafe:
    sub    %esi,%esi
  jump_2ab00:
    xor    %ecx,%ecx
    test   %esi,%esi
    je     jump_2abac
    mov    %esi,%ecx
    sub    %ebp,%ecx
    jne    jump_2ab94
    lea    0x1(%esi),%ebp
    mov    %ebp,%esi
    movb   $0x0,(%edi)
  jump_2ab1c:
    mov    (%esi),%al
    cmp    %dl,%al
    je     jump_2ab34
    cmp    $0x0,%al
    je     jump_2ab32
    inc    %esi
    mov    (%esi),%al
    cmp    %dl,%al
    je     jump_2ab34
    inc    %esi
    cmp    $0x0,%al
    jne    jump_2ab1c
  jump_2ab32:
    sub    %esi,%esi
  jump_2ab34:
    test   %esi,%esi
    jne    jump_2ab42
    mov    $0x1,%ecx
    jmp    jump_2abc8
  jump_2ab42:
    mov    %esi,%eax
    sub    %ebp,%eax
    lea    0x2(%eax),%ecx
    cmp    %ebp,%esi
    jne    jump_2ab5c
    movb   $0x0,0x1(%edi)
    mov    %dl,(%edi)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2ab5c:
    cmp    $0xffffffff,%ebx
    jne    jump_2abc8
    mov    $0x3,%ebx
    mov    %esp,%eax
    mov    %ebp,%edx
    call   func_72b40
    xor    %ah,%ah
    mov    %ah,0x3(%esp)
    mov    %esp,%eax
    call   func_73ca4
    mov    %eax,%ebx
    mov    0x4(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %bl,0xf3(%eax)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2ab94:
    mov    %ecx,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_72b40
    movb   $0x0,(%ecx,%edi,1)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2abac:
    mov    %ebp,%esi
    push   %edi
  jump_2abaf:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2abc7
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2abaf
  jump_2abc7:
    pop    %edi
  jump_2abc8:
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2abd4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    test   %edx,%edx
    jne    jump_2abf5
    mov    $0xd7,%ebx
    mov    $data_8167b,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2abf5:
    cmpl   $0x0,0x0(%ebp)
    jne    jump_2ac0c
    mov    $0xd8,%ebx
    mov    $data_81687,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2ac0c:
    mov    %esi,%eax
    mov    %esi,0x8(%esp)
    call   func_73cfb
    xor    %edi,%edi
    mov    %eax,0x4(%esp)
  jump_2ac1d:
    mov    0x4(%esp),%ebx
    mov    0x8(%esp),%edx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    mov    0x4(%esp),%esi
    call   func_2aad4
    mov    (%esi),%dl
    mov    %eax,(%esp)
    test   %dl,%dl
    je     jump_2ac55
  jump_2ac3b:
    xor    %eax,%eax
    mov    (%esi),%al
    push   %eax
    mov    0x0(%ebp),%ebx
    push   %ebx
    inc    %esi
    call   func_5ba13
    add    $0x8,%esp
    mov    (%esi),%dh
    add    %eax,%edi
    test   %dh,%dh
    jne    jump_2ac3b
  jump_2ac55:
    mov    (%esp),%eax
    add    %eax,0x8(%esp)
    test   %eax,%eax
    jg     jump_2ac1d
    mov    0x4(%esp),%eax
    call   func_73bef
    mov    %edi,%eax
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ac74:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ecx
    cmpl   $0x0,(%eax)
    jne    jump_2ac8e
    mov    $0x104,%ebx
    mov    $data_81693,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2ac8e:
    mov    (%ecx),%ebx
    push   %ebx
    call   func_5ba00
    add    $0x4,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ac9c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ebx
    mov    %edx,%ecx
    call   func_2ac74
    mov    %eax,%esi
    mov    %ecx,%edx
    mov    %ebx,%eax
    call   func_2abd4
    mov    %eax,%edx
    mov    0x10(%ebx),%ecx
    mov    0x18(%ebx),%eax
    sub    %ecx,%eax
    mov    %eax,%ecx
    mov    0x14(%ebx),%eax
    sub    %esi,%ecx
    mov    0xc(%ebx),%esi
    mov    %eax,%ebx
    sub    %esi,%ebx
    sub    %edx,%ebx
    test   %ecx,%ecx
    jl     jump_2acd5
    test   %ebx,%ebx
    jge    jump_2acde
  jump_2acd5:
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_2acde:
    mov    %ecx,%eax
    sar    %eax
    sar    %ebx
    shl    $0x10,%eax
    add    %ebx,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2acf0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x2c,%esp
    mov    %eax,%ebp
    mov    %edx,0x18(%esp)
    mov    %ebx,0x24(%esp)
    mov    %ecx,0x1c(%esp)
    mov    0x40(%esp),%ecx
    cmpl   $0x0,0x1c(%esp)
    jne    jump_2ad20
    mov    $0x13b,%ebx
    mov    $data_8169f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2ad20:
    cmpl   $0x0,0x0(%ebp)
    jne    jump_2ad37
    mov    $0x13c,%ebx
    mov    $data_816ab,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2ad37:
    mov    0x42(%esp),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_2ad4c
    mov    0x1c(%ebp),%ax
    mov    %ax,0x44(%esp)
  jump_2ad4c:
    movswl %cx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_2ad59
    mov    $0xf3,%ecx
  jump_2ad59:
    movswl %cx,%eax
    cmp    $0xfffffffe,%eax
    je     jump_2ad6a
    mov    0x4(%ebp),%eax
    mov    %cl,0xf3(%eax)
  jump_2ad6a:
    mov    0x1c(%esp),%edx
    mov    %ebp,%eax
    mov    %esp,%edi
    call   func_2ac74
    lea    0x8(%ebp),%esi
    mov    0x1c(%esp),%edx
    mov    %eax,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x18(%esp),%eax
    mov    0x4(%esp),%ecx
    mov    0x8(%esp),%esi
    add    %eax,%ecx
    mov    0x24(%esp),%eax
    mov    %ecx,0x4(%esp)
    add    %eax,%esi
    mov    %ebp,%eax
    mov    %esi,0x8(%esp)
    call   func_2abd4
    mov    0x4(%esp),%edx
    add    %eax,%edx
    mov    0x8(%esp),%eax
    add    %ebx,%eax
    mov    %edx,0xc(%esp)
    mov    %eax,0x10(%esp)
    mov    0x4(%esp),%eax
    mov    0x14(%ebp),%edi
    cmp    %edi,%eax
    jg     jump_2aed8
    mov    %edx,%eax
    mov    0xc(%ebp),%edx
    cmp    %edx,%eax
    jl     jump_2aed8
    mov    0x8(%esp),%eax
    cmp    0x18(%ebp),%eax
    jg     jump_2aed8
    mov    0x10(%esp),%eax
    cmp    0x10(%ebp),%eax
    jl     jump_2aed8
    cmp    0x4(%esp),%edx
    jle    jump_2adfe
    mov    %edx,0x4(%esp)
    jmp    jump_2ae08
  jump_2adfe:
    cmp    0xc(%esp),%edi
    jge    jump_2ae08
    mov    %edi,0xc(%esp)
  jump_2ae08:
    mov    0x8(%esp),%eax
    mov    0x10(%ebp),%edx
    cmp    %edx,%eax
    jge    jump_2ae19
    mov    %edx,0x8(%esp)
    jmp    jump_2ae28
  jump_2ae19:
    mov    0x10(%esp),%eax
    mov    0x18(%ebp),%ebx
    cmp    %ebx,%eax
    jle    jump_2ae28
    mov    %ebx,0x10(%esp)
  jump_2ae28:
    mov    0x42(%esp),%eax
    sar    $0x10,%eax
    cmp    $0xff,%eax
    je     jump_2ae44
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    call   func_59d90
    add    $0x8,%esp
  jump_2ae44:
    mov    0x1c(%esp),%eax
    call   func_73cfb
    mov    %eax,%esi
    mov    0x18(%esp),%eax
    mov    %eax,0x28(%esp)
    lea    0x8(%ebp),%eax
    mov    0x1c(%esp),%edi
    mov    %eax,0x20(%esp)
  jump_2ae62:
    mov    $0xffffffff,%ecx
    mov    %esi,%ebx
    mov    %edi,%edx
    mov    %ebp,%eax
    call   func_2aad4
    mov    %eax,0x14(%esp)
    cmpb   $0x0,(%esi)
    je     jump_2ae9b
    mov    0x4(%ebp),%ecx
    push   %ecx
    push   %esi
    mov    0x0(%ebp),%eax
    push   %eax
    mov    0x30(%esp),%edx
    push   %edx
    mov    0x38(%esp),%ebx
    push   %ebx
    mov    0x34(%esp),%ecx
    push   %ecx
    call   func_5bbc6
    add    $0x18,%esp
  jump_2ae9b:
    mov    %esi,%edx
    mov    %ebp,%eax
    call   func_2abd4
    mov    0x28(%esp),%edx
    mov    0x14(%esp),%ebx
    add    %eax,%edx
    add    %ebx,%edi
    mov    %edx,0x28(%esp)
    test   %ebx,%ebx
    jg     jump_2ae62
    mov    %esi,%eax
    call   func_73bef
    mov    0x3c(%esp),%eax
    xor    %ah,%ah
    and    $0xc0,%al
    cwtl
    test   %eax,%eax
    jne    jump_2aed8
    mov    %esp,%edx
    mov    $data_fa35c,%eax
    call   func_50690
  jump_2aed8:
    add    $0x2c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0xc


/*----------------------------------------------------------------*/
func_2af88:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x34,%esp
    mov    %eax,%esi
    mov    %edx,0x1c(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ecx,0x8(%esp)
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x80,%al
    cwtl
    test   %eax,%eax
    je     jump_2afd3
    mov    0x4a(%esp),%edx
    sar    $0x10,%edx
    cmp    $0xff,%edx
    je     jump_2afd3
    mov    0x4c(%esp),%eax
    cmp    $0xffffffff,%edx
    jne    jump_2afc5
    mov    0x1c(%esi),%ax
  jump_2afc5:
    cwtl
    push   %eax
    lea    0x8(%esi),%eax
    push   %eax
    call   func_59d90
    add    $0x8,%esp
  jump_2afd3:
    mov    0x46(%esp),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_2afe6
    movw   $0xf3,0x48(%esp)
  jump_2afe6:
    mov    0x4(%esi),%eax
    mov    0x48(%esp),%dl
    mov    %dl,0xf3(%eax)
    cmpl   $0x1,0x50(%esp)
    jge    jump_2b006
    mov    0x14(%esi),%eax
    mov    0xc(%esi),%ebx
    sub    %ebx,%eax
    mov    %eax,0x50(%esp)
  jump_2b006:
    mov    0x8(%esp),%eax
    mov    $0x1,%edi
    call   func_73cfb
    mov    %eax,0xc(%esp)
    mov    %eax,%ebp
    mov    %eax,%ebx
    mov    %eax,%ecx
    mov    %edi,0x20(%esp)
    xor    %edi,%edi
  jump_2b024:
    movsbl (%ebx),%eax
    test   %eax,%eax
    jne    jump_2b030
    mov    $0xffffffff,%edi
  jump_2b030:
    mov    (%ebx),%al
    mov    %ebp,%edx
    mov    %al,0x30(%esp)
    mov    %esi,%eax
    movb   $0x0,(%ebx)
    call   func_2abd4
    mov    0x30(%esp),%dl
    mov    %dl,(%ebx)
    cmp    $0xa,%dl
    jne    jump_2b05e
    mov    0x20(%esp),%edx
    movb   $0x0,(%ebx)
    inc    %ebx
    inc    %edx
    mov    %ebx,%ebp
    mov    %edx,0x20(%esp)
    jmp    jump_2b083
  jump_2b05e:
    cmp    0x50(%esp),%eax
    jle    jump_2b07b
    cmp    %ebp,%ecx
    jbe    jump_2b07b
    mov    0x20(%esp),%eax
    lea    0x1(%ecx),%ebp
    movb   $0x0,(%ecx)
    inc    %eax
    mov    %ebp,%ebx
    mov    %eax,0x20(%esp)
    jmp    jump_2b083
  jump_2b07b:
    cmpb   $0x20,(%ebx)
    jne    jump_2b082
    mov    %ebx,%ecx
  jump_2b082:
    inc    %ebx
  jump_2b083:
    test   %edi,%edi
    je     jump_2b024
    mov    0x8(%esp),%edx
    mov    %esi,%eax
    call   func_2ac74
    add    $0x2,%eax
    mov    0x20(%esp),%ebx
    mov    %eax,0x18(%esp)
    imul   %ebx,%eax
    mov    %eax,(%esp)
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x10,%al
    cwtl
    test   %eax,%eax
    je     jump_2b0bb
    mov    0x10(%esp),%eax
    mov    (%esp),%edi
    sub    %edi,%eax
    jmp    jump_2b105
  jump_2b0bb:
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x1,%al
    mov    (%esp),%edx
    cwtl
    inc    %edx
    test   %eax,%eax
    je     jump_2b0df
    mov    0x18(%esi),%eax
    sub    0x10(%esi),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    jmp    jump_2b105
  jump_2b0df:
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x4,%al
    cwtl
    test   %eax,%eax
    je     jump_2b101
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    0x10(%esp),%edx
    sub    %eax,%edx
    mov    %edx,0x4(%esp)
    jmp    jump_2b109
  jump_2b101:
    mov    0x10(%esp),%eax
  jump_2b105:
    mov    %eax,0x4(%esp)
  jump_2b109:
    mov    0xc(%esp),%ebp
    xor    %eax,%eax
    mov    0x20(%esp),%edx
    mov    %eax,0x14(%esp)
    test   %edx,%edx
    jle    jump_2b1fd
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x8,%al
    mov    %ax,0x24(%esp)
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x2,%al
    mov    %ax,0x28(%esp)
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x20,%al
    mov    %ax,0x2c(%esp)
  jump_2b146:
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_2abd4
    mov    %eax,%edx
    mov    0x2a(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_2b1b3
    mov    0x1c(%esp),%eax
    sub    %edx,%eax
    mov    %eax,%edx
  jump_2b164:
    mov    0x4a(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x8(%esp),%ebx
    mov    0x46(%esp),%eax
    push   $0xfffffffe
    sar    $0x10,%eax
    mov    %ebp,%ecx
    push   %eax
    mov    %esi,%eax
    mov    %ebp,%edi
    call   func_2acf0
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    0x18(%esp),%eax
    mov    0x4(%esp),%edi
    mov    0x20(%esp),%edx
    inc    %ecx
    add    %eax,%edi
    mov    0x14(%esp),%eax
    add    %ecx,%ebp
    inc    %eax
    mov    %edi,0x4(%esp)
    mov    %eax,0x14(%esp)
    cmp    %edx,%eax
    jge    jump_2b1fd
    jmp    jump_2b146
  jump_2b1b3:
    mov    0x26(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_2b1d5
    mov    0x14(%esi),%ebx
    sub    0xc(%esi),%ebx
    sub    %edx,%ebx
    mov    %ebx,%edx
    mov    %ebx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,%edx
    jmp    jump_2b164
  jump_2b1d5:
    mov    0x22(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_2b1f4
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    0x1c(%esp),%edx
    sub    %eax,%edx
    jmp    jump_2b164
  jump_2b1f4:
    mov    0x1c(%esp),%edx
    jmp    jump_2b164
  jump_2b1fd:
    mov    0x44(%esp),%eax
    xor    %ah,%ah
    and    $0x80,%al
    cwtl
    test   %eax,%eax
    je     jump_2b217
    mov    $data_fa35c,%eax
    lea    0x8(%esi),%edx
    call   func_50690
  jump_2b217:
    mov    0xc(%esp),%eax
    call   func_73bef
    mov    (%esp),%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x10


/*----------------------------------------------------------------*/
func_2b230:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_86618,%eax
    call   func_73a9a
    mov    $data_c84f8,%eax
    mov    $0x1,%edx
    call   func_2b42c
    mov    %edx,data_86620
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2b254:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%ebp
    mov    %edx,0x1c(%esp)
    mov    %ebx,0x18(%esp)
    mov    %ecx,0x14(%esp)
    mov    0x34(%esp),%al
    cmpl   $0xffffffff,0x38(%esp)
    jne    jump_2b2af
    mov    %esp,%edi
    mov    %ebp,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x1c(%esp),%esi
    mov    %esi,0x4(%esp)
    mov    0x30(%esp),%esi
    mov    %esi,0x10(%esp)
    movzbl %al,%esi
    push   %esi
    push   %ebx
    mov    %ecx,0x14(%esp)
    mov    0x24(%esp),%ecx
    push   %ecx
    push   %ebp
    push   $0x0
    push   $0x0
    lea    0x18(%esp),%esi
    push   %esi
    mov    %ebx,0x24(%esp)
    call   func_59e6f
    jmp    jump_2b313
  jump_2b2af:
    movzbl %al,%esi
    push   %esi
    push   $0x0
    push   %ebx
    push   %ecx
    push   %ebx
    mov    0x30(%esp),%eax
    push   %eax
    push   %ebp
    call   func_573c1
    add    $0x1c,%esp
    push   %esi
    push   $0x0
    mov    0x38(%esp),%edx
    push   %edx
    mov    0x20(%esp),%ebx
    push   %ebx
    push   %edx
    mov    0x30(%esp),%edi
    push   %edi
    push   %ebp
    call   func_573c1
    add    $0x1c,%esp
    push   %esi
    push   $0x0
    mov    0x38(%esp),%eax
    push   %eax
    push   %edi
    mov    0x28(%esp),%ebx
    push   %ebx
    push   %edi
    push   %ebp
    call   func_573c1
    add    $0x1c,%esp
    push   %esi
    push   $0x0
    mov    0x38(%esp),%esi
    push   %esi
    mov    0x20(%esp),%edi
    push   %edi
    mov    0x28(%esp),%eax
    push   %eax
    push   %edi
    push   %ebp
    call   func_573c1
  jump_2b313:
    add    $0x1c,%esp
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0xc


/*----------------------------------------------------------------*/
func_2b320:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    0x28(%esp),%ebp
    mov    %eax,%edi
    mov    %edx,0x14(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ecx,%esi
    test   %eax,%eax
    jne    jump_2b349
    mov    $0x40,%ebx
    mov    $data_816b8,%edx
    call   func_25878
  jump_2b349:
    cmpl   $0x0,0x14(%esp)
    jne    jump_2b361
    mov    $0x41,%ebx
    mov    $data_816c7,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2b361:
    mov    %esp,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    mov    0x20(%esp),%ebx
    push   %ebx
    mov    0x28(%esp),%ecx
    push   %ecx
    call   func_5959d
    add    $0x18,%esp
    mov    0x8(%esp),%edx
    mov    (%esp),%eax
    mov    0xc(%esp),%ebx
    mov    0x4(%esp),%ecx
    sub    %eax,%edx
    sub    %ecx,%ebx
    mov    0xc(%edi),%eax
    sub    0x4(%edi),%eax
    sub    %edx,%eax
    mov    %eax,(%esi)
    je     jump_2b3a6
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,(%esi)
  jump_2b3a6:
    mov    0x10(%edi),%eax
    sub    0x8(%edi),%eax
    sub    %ebx,%eax
    mov    %eax,0x0(%ebp)
    je     jump_2b3bf
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,0x0(%ebp)
  jump_2b3bf:
    mov    (%esp),%eax
    sub    %eax,(%esi)
    mov    0x4(%esp),%eax
    sub    %eax,0x0(%ebp)
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_2b3d4:
/*----------------------------------------------------------------*/
    mov    $data_c84f8,%eax
    and    $0xff,%edx
    xor    %ebx,%ebx
    lea    0x0(%eax),%eax


/*----------------------------------------------------------------*/
func_2b3e4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %dl,0x4(%esp)
    mov    %ebx,%edi
    xor    %eax,%eax
    mov    %dl,%al
    test   %eax,%eax
    jne    jump_2b40e
    mov    $0x100,%ebx
    lea    0x133(%esi),%ecx
    xor    %edx,%edx
    mov    %esi,%eax
    call   func_2b990
  jump_2b40e:
    test   %edi,%edi
    jne    jump_2ba01
    xor    %ah,%ah
    xor    %dl,%dl
    mov    %ah,(%esp)
    mov    %dl,0x1(%esp)
    mov    %dl,0x2(%esp)
    jmp    jump_2ba14


/*----------------------------------------------------------------*/
func_2b42c:
/*----------------------------------------------------------------*/
    movl   $0x0,(%eax)
    movl   $0x0,0x14(%eax)
    movl   $0x0,0x12f(%eax)
    movb   $0x0,0x30(%eax)
    movl   $0x0,0x73b(%eax)
    movw   $0x0,0x73f(%eax)
    ret


/*----------------------------------------------------------------*/
func_2b45c:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    call   func_2bdac
    mov    %ebx,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2b468:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x220,%esp
    mov    %eax,%ebp
    mov    %edx,0x218(%esp)
    lea    0x30(%eax),%edx
    mov    0x218(%esp),%esi
    mov    %edx,%edi
    push   %edi
  jump_2b488:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2b4a0
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2b488
  jump_2b4a0:
    pop    %edi
    mov    $data_816d6,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_2b4af:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2b4c7
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2b4af
  jump_2b4c7:
    pop    %edi
    test   %ebx,%ebx
    jne    jump_2b5ec
    mov    0x218(%esp),%esi
    lea    0x118(%esp),%edi
    push   %edi
  jump_2b4df:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2b4f7
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2b4df
  jump_2b4f7:
    pop    %edi
    mov    $data_816d8,%esi
    lea    0x118(%esp),%edi
    mov    $0x200,%ebx
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_2b512:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2b52a
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2b512
  jump_2b52a:
    pop    %edi
    mov    %esp,%eax
    lea    0x118(%esp),%edx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_2b560
    mov    $0x9f,%ebx
    mov    $data_816e5,%edx
    call   func_25878
  jump_2b560:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    test   %esi,%esi
    jne    jump_2b574
    xor    %eax,%eax
    jmp    jump_2b6b0
  jump_2b574:
    push   $0x0
    push   $0x5
    push   %esi
    call   func_6187c
    mov    %eax,0x228(%esp)
    add    $0xc,%esp
    mov    %esi,%eax
    call   func_2595c
    mov    %esi,%eax
    mov    0x21c(%esp),%edx
    call   func_72124
    test   %edx,%edx
    jne    jump_2b5ae
    xor    %eax,%eax
    add    $0x220,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2b5ae:
    push   %edx
    call   func_571c8
    add    $0x4,%esp
    lea    0x30(%ebp),%edi
    mov    %eax,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_2b5c5:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2b5dd
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2b5c5
  jump_2b5dd:
    pop    %edi
    mov    0x21c(%esp),%eax
    call   func_73bef
    jmp    jump_2b610
  jump_2b5ec:
    mov    %ebx,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_2b5f7:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2b60f
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2b5f7
  jump_2b60f:
    pop    %edi
  jump_2b610:
    mov    %ebp,%eax
    call   func_2b6bc
    test   %eax,%eax
    je     jump_2b6b0
    call   *data_86a7c
    mov    0x0(%ebp),%ecx
    movl   $0xffffffff,0x12f(%ebp)
    test   %ecx,%ecx
    je     jump_2b63d
    mov    %ecx,%eax
    call   func_259ac
  jump_2b63d:
    mov    0x28(%ebp),%eax
    imul   0x2c(%ebp),%eax
    mov    $0x1,%ebx
    mov    $data_816f4,%ecx
    mov    %ebx,%edx
    call   func_25990
    movl   $0x0,0xc(%ebp)
    mov    %eax,0x0(%ebp)
    mov    0x28(%ebp),%eax
    movl   $0x0,0x10(%ebp)
    dec    %eax
    mov    %eax,0x4(%ebp)
    mov    0x2c(%ebp),%eax
    movl   $0x0,0x18(%ebp)
    dec    %eax
    mov    %eax,0x8(%ebp)
    mov    0x28(%ebp),%eax
    movl   $0x0,0x1c(%ebp)
    dec    %eax
    mov    %eax,0x20(%ebp)
    mov    0x2c(%ebp),%eax
    mov    %ebp,0x14(%ebp)
    dec    %eax
    mov    0x0(%ebp),%edi
    mov    %eax,0x24(%ebp)
    test   %edi,%edi
    jne    jump_2b6ab
    mov    $0xd9,%ebx
    mov    $data_81705,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2b6ab:
    mov    $0xffffffff,%eax
  jump_2b6b0:
    add    $0x220,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2b6bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x118,%esp
    mov    %eax,%edi
    mov    %esp,%eax
    mov    $0x200,%ebx
    call   func_1bb78
    lea    0x30(%edi),%edx
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_2b6ff
    mov    $0xeb,%ebx
    mov    $data_81714,%edx
    call   func_25878
  jump_2b6ff:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    test   %esi,%esi
    jne    jump_2b710
    xor    %eax,%eax
    jmp    jump_2b75e
  jump_2b710:
    push   $0x0
    push   $0x5
    push   %esi
    call   func_6187c
    add    $0xc,%esp
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_2595c
    mov    %esi,%eax
    call   func_72124
    test   %edx,%edx
    jne    jump_2b73f
    xor    %eax,%eax
    add    $0x118,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_2b73f:
    push   %edx
    call   func_571f1
    add    $0x4,%esp
    call   *data_86a78
    mov    (%eax),%edx
    mov    %edx,0x28(%edi)
    mov    0x4(%eax),%eax
    mov    %eax,0x2c(%edi)
    mov    $0xffffffff,%eax
  jump_2b75e:
    add    $0x118,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2b76c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    xor    %eax,%eax
    mov    %dx,%ax
    mov    $data_81723,%ebx
    shl    $0x8,%eax
    mov    $0x1,%edx
    call   func_729c4
    call   func_2593c
    mov    %eax,0x73b(%esi)
    mov    %cx,0x73f(%esi)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2b7a0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x118,%esp
    mov    %eax,%ebp
    mov    %edx,%edi
    mov    %ebx,%esi
    mov    0x73d(%eax),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    %bx,%dx
    cmp    %eax,%edx
    jl     jump_2b7d3
    mov    $0x11f,%ebx
    mov    $data_81737,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2b7d3:
    mov    %esp,%eax
    mov    $0x200,%ebx
    call   func_1bb78
    mov    %edi,%edx
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    xor    %eax,%eax
    mov    %si,%ax
    mov    0x73b(%ebp),%edx
    shl    $0x8,%eax
    add    %eax,%edx
    mov    %esp,%eax
    call   func_1bf1c
    mov    %eax,%edi
    test   %eax,%eax
    jne    jump_2b816
    mov    $0x127,%ebx
    mov    $data_81746,%edx
    call   func_25888
  jump_2b816:
    test   %edi,%edi
    sete   %al
    xor    %edx,%edx
    movzbl %al,%edi
    mov    %esp,%eax
    dec    %edi
    call   func_1bbc8
    mov    %edi,%eax
    add    $0x118,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2b838:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x11c,%esp
    mov    %eax,%esi
    mov    %ebx,0x118(%esp)
    mov    %ecx,%edi
    mov    %esp,%eax
    mov    $0x200,%ebx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    mov    %esp,%eax
    lea    0x433(%esi),%edx
    call   func_1bf1c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_2b882
    mov    $0x13c,%ebx
    mov    $data_81755,%edx
    call   func_25878
  jump_2b882:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    test   %ecx,%ecx
    je     jump_2b8b2
    lea    0x433(%esi),%ecx
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    0x118(%esp),%dx
    mov    %di,%bx
    mov    %esi,%eax
    call   func_2b904
    mov    $0xffffffff,%eax
    jmp    jump_2b8b4
  jump_2b8b2:
    xor    %eax,%eax
  jump_2b8b4:
    add    $0x11c,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2b8c0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ebp
    mov    %edx,(%esp)
    mov    %ebx,0x4(%esp)
    mov    %ecx,%eax
    xor    %edx,%edx
    jmp    jump_2b8f0
  jump_2b8d5:
    xor    %ebx,%ebx
    mov    (%esp),%bx
    add    %edx,%ebx
    lea    (%ebx,%ebx,2),%ebx
    mov    %eax,%esi
    lea    0x433(%ebx,%ebp,1),%edi
    add    $0x3,%eax
    inc    %edx
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
  jump_2b8f0:
    xor    %ebx,%ebx
    mov    0x4(%esp),%bx
    cmp    %ebx,%edx
    jl     jump_2b8d5
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2b904:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %edx,%esi
    mov    %ecx,%edi
    add    %edx,%ebx
    mov    %bx,(%esp)
    call   *data_86a8c
    and    $0xffff,%esi
    jmp    jump_2b930
  jump_2b921:
    push   %edi
    push   %esi
    add    $0x3,%edi
    call   *data_86a9c
    add    $0x8,%esp
    inc    %esi
  jump_2b930:
    mov    -0x2(%esp),%eax
    sar    $0x10,%eax
    cmp    %eax,%esi
    jl     jump_2b921
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2b990:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %edx,%esi
    mov    %ecx,%edi
    test   %ecx,%ecx
    jne    jump_2b9a3
    lea    0x433(%eax),%edi
  jump_2b9a3:
    add    %esi,%ebx
    mov    %bx,(%esp)
    call   *data_86a8c
    and    $0xffff,%esi
    jmp    jump_2b9c6
  jump_2b9b7:
    push   %edi
    push   %esi
    add    $0x3,%edi
    call   *data_86a98
    add    $0x8,%esp
    inc    %esi
  jump_2b9c6:
    mov    -0x2(%esp),%eax
    sar    $0x10,%eax
    cmp    %eax,%esi
    jl     jump_2b9b7
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2b9d8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%edi
    mov    %edx,%esi
    xor    %ecx,%ecx
  jump_2b9e2:
    mov    %esi,%ebx
    xor    %edx,%edx
    mov    %edi,%eax
    mov    %cl,%dl
    call   func_2b3e4
    mov    %ecx,%eax
    inc    %ecx
    call   func_73d40
    cmp    $0x40,%ecx
    jl     jump_2b9e2
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_2ba01:
    mov    (%edi),%al
    mov    %al,(%esp)
    mov    0x1(%edi),%al
    mov    %al,0x1(%esp)
    mov    0x2(%edi),%al
    mov    %al,0x2(%esp)
  jump_2ba14:
    mov    $0x40,%dh
    sub    0x4(%esp),%dh
    movsbl %dh,%eax
    test   %eax,%eax
    jge    jump_2ba23
    xor    %dh,%dh
  jump_2ba23:
    mov    %esi,%eax
    lea    0x300(%esi),%ecx
    jmp    jump_2baac
  jump_2ba30:
    sub    %dh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jle    jump_2ba3f
    decb   0x133(%eax)
  jump_2ba3f:
    mov    0x1(%esp),%bh
    mov    0x134(%eax),%dl
    sub    %bh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jge    jump_2ba63
    add    %dh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jge    jump_2ba72
    incb   0x134(%eax)
    jmp    jump_2ba72
  jump_2ba63:
    sub    %dh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jle    jump_2ba72
    decb   0x134(%eax)
  jump_2ba72:
    mov    0x2(%esp),%bh
    mov    0x135(%eax),%dl
    sub    %bh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jge    jump_2ba96
    add    %dh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jge    jump_2baa5
    incb   0x135(%eax)
    jmp    jump_2baa5
  jump_2ba96:
    sub    %dh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jle    jump_2baa5
    decb   0x135(%eax)
  jump_2baa5:
    add    $0x3,%eax
    cmp    %ecx,%eax
    je     jump_2bada
  jump_2baac:
    mov    (%esp),%bh
    mov    0x133(%eax),%dl
    sub    %bh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jge    jump_2ba30
    add    %dh,%dl
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jge    jump_2ba3f
    incb   0x133(%eax)
    jmp    jump_2ba3f
  jump_2bada:
    mov    $0x100,%ebx
    lea    0x133(%esi),%ecx
    xor    %edx,%edx
    mov    %esi,%eax
    call   func_2b904
  jump_2baee:
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2baf8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %edx,0x4(%esp)
    mov    %edx,%edi
    mov    0x4(%esp),%esi
    add    %ebx,%edi
    call   *data_86a8c
    cmp    %si,%di
    jle    jump_2baee
    jmp    jump_2bb2d
  jump_2bb17:
    mov    %esp,%eax
    push   %eax
    movswl %si,%eax
    push   %eax
    inc    %esi
    call   *data_86a9c
    add    $0x8,%esp
    cmp    %di,%si
    jge    jump_2baee
  jump_2bb2d:
    mov    %esp,%eax
    push   %eax
    movswl %si,%eax
    push   %eax
    call   *data_86a98
    add    $0x8,%esp
    mov    (%esp),%ah
    test   %ah,%ah
    je     jump_2bb4b
    mov    %ah,%dl
    dec    %dl
    mov    %dl,(%esp)
  jump_2bb4b:
    mov    (%esp),%dh
    test   %dh,%dh
    je     jump_2bb59
    mov    %dh,%bl
    dec    %bl
    mov    %bl,(%esp)
  jump_2bb59:
    mov    0x1(%esp),%bh
    test   %bh,%bh
    je     jump_2bb69
    mov    %bh,%cl
    dec    %cl
    mov    %cl,0x1(%esp)
  jump_2bb69:
    mov    0x1(%esp),%ch
    test   %ch,%ch
    je     jump_2bb79
    mov    %ch,%al
    dec    %al
    mov    %al,0x1(%esp)
  jump_2bb79:
    mov    0x2(%esp),%ah
    test   %ah,%ah
    je     jump_2bb89
    mov    %ah,%dl
    dec    %dl
    mov    %dl,0x2(%esp)
  jump_2bb89:
    mov    0x2(%esp),%dh
    test   %dh,%dh
    je     jump_2bb17
    mov    %dh,%bl
    dec    %bl
    mov    %bl,0x2(%esp)
    jmp    jump_2bb17


/*----------------------------------------------------------------*/
func_2bba0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%edi
    mov    %edx,0x4(%esp)
    mov    %edx,%esi
    add    %ebx,%esi
    call   *data_86a8c
    mov    %esi,0x8(%esp)
    mov    0x4(%esp),%esi
    jmp    jump_2bbd2
  jump_2bbc1:
    mov    %esp,%ebp
    push   %ebp
    movswl %si,%ebp
    push   %ebp
    call   *data_86a9c
    add    $0x8,%esp
    inc    %esi
  jump_2bbd2:
    cmp    0x8(%esp),%si
    jge    jump_2bc95
    mov    %esp,%ebp
    push   %ebp
    movswl %si,%ebp
    push   %ebp
    call   *data_86a98
    add    $0x8,%esp
    lea    0x0(%ebp,%ebp,2),%ebp
    mov    (%esp),%al
    cmp    0x433(%edi,%ebp,1),%al
    jae    jump_2bc04
    mov    %al,%dl
    inc    %dl
    mov    %dl,(%esp)
  jump_2bc04:
    movswl %si,%ebp
    lea    0x0(%ebp,%ebp,2),%ebp
    mov    (%esp),%al
    cmp    0x433(%edi,%ebp,1),%al
    jae    jump_2bc1e
    mov    %al,%bl
    inc    %bl
    mov    %bl,(%esp)
  jump_2bc1e:
    movswl %si,%ebp
    lea    0x0(%ebp,%ebp,2),%ebp
    mov    0x1(%esp),%al
    cmp    0x434(%edi,%ebp,1),%al
    jae    jump_2bc3a
    mov    %al,%cl
    inc    %cl
    mov    %cl,0x1(%esp)
  jump_2bc3a:
    movswl %si,%ebp
    lea    0x0(%ebp,%ebp,2),%ebp
    mov    0x1(%esp),%al
    cmp    0x434(%edi,%ebp,1),%al
    jae    jump_2bc54
    inc    %al
    mov    %al,0x1(%esp)
  jump_2bc54:
    movswl %si,%ebp
    lea    0x0(%ebp,%ebp,2),%ebp
    mov    0x2(%esp),%al
    cmp    0x435(%edi,%ebp,1),%al
    jae    jump_2bc70
    mov    %al,%dl
    inc    %dl
    mov    %dl,0x2(%esp)
  jump_2bc70:
    movswl %si,%ebp
    lea    0x0(%ebp,%ebp,2),%ebp
    mov    0x2(%esp),%al
    cmp    0x435(%edi,%ebp,1),%al
    jae    jump_2bbc1
    mov    %al,%bl
    inc    %bl
    mov    %bl,0x2(%esp)
    jmp    jump_2bbc1
  jump_2bc95:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2bcc4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %dl,(%esp)
    xor    %eax,%eax
    mov    %dl,%al
    test   %eax,%eax
    jne    jump_2bcec
    mov    $0x100,%ebx
    lea    0x133(%edi),%ecx
    xor    %edx,%edx
    mov    %edi,%eax
    call   func_2b990
  jump_2bcec:
    mov    $0x40,%dh
    lea    0x133(%edi),%esi
    mov    (%esp),%ah
    lea    0x433(%edi),%ebx
    sub    %ah,%dh
    mov    %esi,%eax
    add    $0x300,%esi
    jmp    jump_2bd1a
  jump_2bd09:
    sub    %dh,%dl
    movsbl %dl,%ecx
    test   %ecx,%ecx
    jle    jump_2bd14
    decb   (%eax)
  jump_2bd14:
    inc    %eax
    inc    %ebx
    cmp    %esi,%eax
    je     jump_2bd32
  jump_2bd1a:
    mov    (%eax),%dl
    sub    (%ebx),%dl
    movsbl %dl,%ecx
    test   %ecx,%ecx
    jge    jump_2bd09
    add    %dh,%dl
    movsbl %dl,%ecx
    test   %ecx,%ecx
    jge    jump_2bd14
    incb   (%eax)
    jmp    jump_2bd14
  jump_2bd32:
    mov    $0x100,%ebx
    lea    0x133(%edi),%ecx
    xor    %edx,%edx
    mov    %edi,%eax
    call   func_2b904
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2bd50:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0xc,%esp
    mov    %edx,0x8(%esp)
    mov    %ecx,%edi
    test   %ecx,%ecx
    jne    jump_2bd72
    mov    %esp,%edi
    xor    %dl,%dl
    xor    %ah,%ah
    mov    %dl,0x1(%esp)
    xor    %dh,%dh
    mov    %ah,0x2(%esp)
    mov    %dh,(%esp)
  jump_2bd72:
    mov    0x8(%esp),%eax
    add    %ebx,%eax
    mov    0x8(%esp),%esi
    mov    %eax,0x4(%esp)
    call   *data_86a8c
    cmp    0x4(%esp),%si
    jge    jump_2bda3
  jump_2bd8d:
    push   %edi
    movswl %si,%eax
    push   %eax
    call   *data_86a9c
    add    $0x8,%esp
    inc    %esi
    cmp    0x4(%esp),%si
    jl     jump_2bd8d
  jump_2bda3:
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2bdac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    cmpl   $0xffffffff,0x12f(%eax)
    jne    jump_2bdc1
    call   *data_86a80
  jump_2bdc1:
    mov    (%esi),%ebx
    movl   $0x0,0x12f(%esi)
    test   %ebx,%ebx
    je     jump_2bdde
    mov    %ebx,%eax
    call   func_259ac
    movl   $0x0,(%esi)
  jump_2bdde:
    mov    0x10(%esi),%ecx
    test   %ecx,%ecx
    je     jump_2bdf3
    mov    %ecx,%eax
    call   func_259ac
    movl   $0x0,0x10(%esi)
  jump_2bdf3:
    mov    0x73b(%esi),%eax
    call   func_2595c
    mov    0x73b(%esi),%eax
    call   func_7211c
    movl   $0x0,0x73b(%esi)
    movw   $0x0,0x73f(%esi)
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2be24:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x118,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_c84cc
    je     jump_2bea2
    cmpl   $0x0,0x733(%eax)
    jne    jump_2be91
    mov    %esp,%eax
    mov    $0x200,%ebx
    mov    $data_81764,%edx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bf1c
    mov    %eax,0x733(%esi)
    test   %eax,%eax
    jne    jump_2be7e
    mov    $0x2b3,%ebx
    mov    $data_81773,%edx
    call   func_25878
  jump_2be7e:
    mov    %esp,%eax
    xor    %edx,%edx
    movl   $0x0,0x737(%esi)
    call   func_1bbc8
  jump_2be91:
    mov    0x737(%esi),%edx
    mov    0x733(%esi),%eax
    call   func_602f9
  jump_2bea2:
    add    $0x118,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2beb0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %edx,%esi
    mov    %ebx,%ecx
    test   %ebx,%ebx
    jne    jump_2bec0
    mov    0x733(%eax),%ecx
  jump_2bec0:
    test   %ecx,%ecx
    jne    jump_2bed5
    mov    $0x2c7,%ebx
    mov    $data_81782,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2bed5:
    test   %esi,%esi
    jge    jump_2beea
    mov    $0x2c8,%ebx
    mov    $data_81791,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2beea:
    test   %ecx,%ecx
    jne    jump_2bef3
    xor    %eax,%eax
    pop    %esi
    pop    %ecx
    ret
  jump_2bef3:
    mov    %esi,%edx
    mov    %ecx,%eax
    call   func_602f9
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2bf10:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    movl   $data_85cb8,0xa7(%eax)
    call   func_2bfc4
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2bf28:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %edx,(%esp)
    testb  $0x4,(%esp)
    je     jump_2bf4e
    mov    $data_85c14,%edx
    mov    %ecx,%eax
    call   func_720fc
    call   func_7211c
    jmp    jump_2bfb9
  jump_2bf4e:
    mov    0x67(%ecx),%edx
    movl   $data_85cb8,0xa7(%ecx)
    test   %edx,%edx
    je     jump_2bf8e
    xor    %eax,%eax
    jmp    jump_2bf64
  jump_2bf63:
    inc    %eax
  jump_2bf64:
    movswl %ax,%edx
    cmp    $0x14,%edx
    jge    jump_2bf86
    lea    0x0(,%edx,4),%ebx
    mov    0x67(%ecx),%edx
    mov    (%edx,%ebx,1),%edx
    test   %edx,%edx
    je     jump_2bf63
    movl   $0x0,0x63(%edx)
    jmp    jump_2bf63
  jump_2bf86:
    mov    0x67(%ecx),%eax
    call   func_259ac
  jump_2bf8e:
    mov    0x63(%ecx),%ebx
    test   %ebx,%ebx
    je     jump_2bfac
    lea    0x0(,%ebx,4),%edx
    sub    %ebx,%edx
    mov    data_fa360(,%edx,4),%eax
    mov    %ecx,%edx
    call   func_2c0ec
  jump_2bfac:
    testb  $0x2,(%esp)
    je     jump_2bfb9
    mov    %ecx,%eax
    call   func_72124
  jump_2bfb9:
    mov    %ecx,%eax
    add    $0x4,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2bfc4:
/*----------------------------------------------------------------*/
    movl   $0x0,0x41(%eax)
    movl   $0x0,0x4(%eax)
    movw   $0xffff,0x18(%eax)
    movl   $0x0,0x1a(%eax)
    movw   $0xffff,0x1e(%eax)
    movb   $0x0,0x20(%eax)
    movl   $0x0,0x35(%eax)
    movl   $0x0,0x39(%eax)
    movl   $0x0,0x3d(%eax)
    movw   $0xffff,0x59(%eax)
    movw   $0xffff,0x5b(%eax)
    movw   $0xffff,0x5d(%eax)
    movl   $0x0,0x5f(%eax)
    movw   $0x0,0x45(%eax)
    movl   $0x0,0x47(%eax)
    movl   $0x0,0x4b(%eax)
    movb   $0x0,0x4f(%eax)
    movl   $0x0,0x63(%eax)
    movl   $0x0,0x67(%eax)
    movw   $0x0,0x6b(%eax)
    movw   $0x0,0xa1(%eax)
    movl   $0xffffffff,0xa3(%eax)
    ret


/*----------------------------------------------------------------*/
func_2c058:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_5257c
    mov    %eax,0x41(%ebx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c070:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    0x69(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_2c0b2
    mov    0x67(%ecx),%edx
    test   %edx,%edx
    je     jump_2c08f
    mov    %edx,%eax
    call   func_259ac
  jump_2c08f:
    mov    $data_817a0,%ebx
    mov    $0x1,%edx
    mov    $0x50,%eax
    call   func_2596c
    mov    $0x50,%ebx
    xor    %edx,%edx
    mov    %eax,0x67(%ecx)
    call   func_72280
  jump_2c0b2:
    mov    0x69(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0x14,%eax
    jl     jump_2c0ce
    mov    $0x94,%ebx
    mov    $data_817ae,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2c0ce:
    mov    0x6b(%ecx),%ax
    movswl %ax,%edx
    inc    %eax
    mov    %ax,0x6b(%ecx)
    mov    0x67(%ecx),%eax
    mov    %esi,(%eax,%edx,4)
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c0ec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%edi
    mov    0x67(%eax),%edx
    xor    %esi,%esi
    test   %edx,%edx
    je     jump_2c12e
    xor    %edx,%edx
    jmp    jump_2c100
  jump_2c0ff:
    inc    %edx
  jump_2c100:
    movswl %dx,%ebx
    cmp    $0x14,%ebx
    jge    jump_2c12e
    lea    0x0(,%ebx,4),%ecx
    mov    0x67(%eax),%ebx
    add    %ecx,%ebx
    cmp    (%ebx),%edi
    jne    jump_2c0ff
    movl   $0x0,(%ebx)
    mov    0x6b(%eax),%bx
    dec    %ebx
    mov    $0xffffffff,%esi
    mov    %bx,0x6b(%eax)
    jmp    jump_2c0ff
  jump_2c12e:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c158:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    movswl %dx,%edx
    mov    0x8(%eax),%ecx
    mov    0x10(%eax),%esi
    mov    0xc(%eax),%edi
    mov    0x14(%eax),%ebp
    add    %edx,%ecx
    add    %edx,%esi
    mov    %ecx,0x8(%eax)
    movswl %bx,%edx
    mov    %esi,0x10(%eax)
    add    %edx,%edi
    add    %edx,%ebp
    mov    %edi,0xc(%eax)
    mov    %ebp,0x14(%eax)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2c187:
    movl   $0xffffffff,0x39(%eax)
    mov    0xa7(%eax),%ebp
    movl   $0xffffffff,0x35(%eax)
    xor    %edx,%edx
    call   *0xc(%ebp)
    movswl %di,%edx
    mov    %esi,%eax
    call   func_2c938
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2c1b3:
    movswl %dx,%edx
    call   func_2c938
    movl   $0x0,0x39(%esi)
    movl   $0x0,0x35(%esi)
    mov    0x41(%esi),%edx
    cmp    data_fd35e,%edx
    jne    jump_2c1de
    movl   $0xffffffff,data_fd35e
  jump_2c1de:
    mov    $0xffffffff,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51b80
    mov    $0xffffffff,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51884
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2c20b:
    movl   $0xffffffff,0x35(%eax)
    movl   $0xffffffff,0x39(%eax)
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2c222:
    movl   $0x0,0x35(%eax)
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2c232:
    cmpl   $0x0,0x39(%eax)
    je     jump_2c252
    cmpl   $0x0,0x35(%eax)
    je     jump_2c252
    cmpl   $0x0,0x3d(%eax)
    je     jump_2c252
    mov    0xa7(%eax),%ebx
    mov    $0x3,%edx
    call   *0xc(%ebx)
  jump_2c252:
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2c25e:
    cmp    0x8(%eax),%ebx
    jl     jump_2c3f9
    cmp    0x10(%eax),%ebx
    jg     jump_2c3f9
    cmp    0xc(%eax),%ecx
    jl     jump_2c3f9
    cmp    0x14(%esi),%ecx
    jg     jump_2c3f9
    mov    0x47(%esi),%eax
    mov    0x45(%esi),%cx
    mov    %eax,(%esp)
    movswl %cx,%eax
    mov    0x4b(%esi),%ebx
    cmp    $0x3e7,%eax
    jne    jump_2c29b
    mov    %edi,%ecx
  jump_2c29b:
    cmpl   $0x3e7,(%esp)
    jne    jump_2c2aa
    movswl %di,%eax
    mov    %eax,(%esp)
  jump_2c2aa:
    cmp    $0x3e7,%ebx
    jne    jump_2c2b5
    movswl %di,%ebx
  jump_2c2b5:
    mov    0x57(%esi),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_2c2ca
    mov    $data_f8638,%eax
    call   func_4af80
  jump_2c2ca:
    cmpl   $0x0,0x63(%esi)
    jne    jump_2c2e4
    mov    $data_fa35c,%eax
    movswl %cx,%edx
    mov    %ebx,%ecx
    mov    (%esp),%ebx
    call   func_51f24
    jmp    jump_2c320
  jump_2c2e4:
    movswl %cx,%eax
    cmp    $0x3e6,%eax
    jne    jump_2c30d
    mov    -0x2(%esp),%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    sar    $0x10,%edx
    call   func_51f24
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2c30d:
    mov    (%esp),%ecx
    push   %ebx
    mov    0x63(%esi),%edx
    mov    %eax,%ebx
    mov    $data_fa35c,%eax
    call   func_520f4
  jump_2c320:
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2c32c:
    cmp    0x8(%eax),%ebx
    jl     jump_2c3f9
    cmp    0x10(%eax),%ebx
    jg     jump_2c3f9
    cmp    0xc(%eax),%ecx
    jl     jump_2c3f9
    cmp    0x14(%eax),%ecx
    jg     jump_2c3f9
    cmpb   $0x30,0x4f(%esi)
    je     jump_2c36a
    mov    $0x5,%edx
    mov    $data_fa35c,%eax
    lea    0x4f(%esi),%ebx
    xor    %ecx,%ecx
    call   func_51f24
  jump_2c36a:
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2c376:
    mov    $data_fa35c,%eax
    movswl %dx,%ebx
    xor    %ecx,%ecx
    mov    $0x6,%edx
    call   func_51f24
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2c396:
    cmp    $0xc,%dx
    je     jump_2c32c
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2c3a5:
    cmp    $0x2,%dx
    jb     jump_2c3ef
    jbe    jump_2c1b3
    cmp    $0x4,%dx
    jb     jump_2c3f9
    cmp    $0x5,%dx
    jbe    jump_2c25e
    cmpl   $0x0,0x39(%eax)
    je     jump_2c3e3
    cmpl   $0x0,0x35(%eax)
    je     jump_2c3e3
    cmpl   $0x0,0x3d(%eax)
    je     jump_2c3e3
    mov    0xa7(%esi),%ebx
    mov    $0x2,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
  jump_2c3e3:
    mov    $0xffffffff,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2c3ef:
    cmp    $0x1,%dx
    je     jump_2c187
  jump_2c3f9:
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2c404:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x4,%esp
    mov    %eax,-0x4(%ebp)
    mov    %edx,%eax
    mov    -0x4(%ebp),%edx
    cmpl   $0x0,0x39(%edx)
    je     jump_2c5ff
    mov    data_fd35e,%ecx
    cmp    0x41(%edx),%ecx
    je     jump_2c430
    cmp    $0x3,%eax
    jne    jump_2c451
  jump_2c430:
    mov    -0x4(%ebp),%edx
    cmpl   $0x0,0x3d(%edx)
    je     jump_2c451
    cmp    $0x2,%eax
    je     jump_2c451
    mov    0xa7(%edx),%ebx
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    call   *0x10(%ebx)
    jmp    jump_2c5ee
  jump_2c451:
    mov    -0x4(%ebp),%eax
    mov    0x1c(%eax),%eax
    mov    -0x4(%ebp),%esi
    sar    $0x10,%eax
    add    $0x4,%esi
    cmp    $0xffffffff,%eax
    je     jump_2c48f
    push   $0x0
    push   $0x0
    push   %eax
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    mov    0x18(%eax),%ax
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_2c5d4
  jump_2c48f:
    mov    -0x4(%ebp),%eax
    mov    0x9f(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_2c5ca
    push   $0xf2
    push   %esi
    mov    -0x4(%ebp),%esi
    mov    $data_fd3aa,%edi
    call   func_59d90
    lea    0x4(%esi),%esi
    mov    -0x4(%ebp),%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x59(%edx),%edx
    add    $0x8,%esp
    sar    $0x10,%edx
    xor    %eax,%eax
    cmp    $0xffffffff,%edx
    jne    jump_2c4d6
    mov    $0x2,%eax
  jump_2c4d6:
    mov    -0x4(%ebp),%edx
    mov    0x5b(%edx),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    jne    jump_2c4e6
    or     $0x1,%al
  jump_2c4e6:
    push   $0x0
    mov    -0x4(%ebp),%ecx
    mov    -0x4(%ebp),%ebx
    mov    -0x4(%ebp),%edx
    cwtl
    push   $0xff
    add    $0x20,%ecx
    mov    0x5b(%ebx),%ebx
    mov    0x59(%edx),%edx
    push   $0xffffffff
    sar    $0x10,%ebx
    push   %eax
    sar    $0x10,%edx
    mov    $data_fd3a2,%eax
    call   func_2af88
    mov    -0x4(%ebp),%eax
    cmpl   $0xffffffff,0x5f(%eax)
    jne    jump_2c5d4
    push   $0xf3
    mov    -0x4(%ebp),%edx
    push   $0x0
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ebx
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    lea    0x4(%edx),%esi
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%ecx
    push   $0x0
    sub    %ecx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%edi
    push   $0x0
    sub    %edi,%eax
    push   %eax
    push   $0x0
    mov    0x8(%edx),%ebx
    push   %eax
    mov    0x10(%edx),%eax
    sub    %ebx,%eax
    push   %eax
    push   %esi
    call   func_573c1
    mov    -0x4(%ebp),%eax
    add    $0x1c,%esp
    mov    -0x4(%ebp),%edx
    mov    -0x4(%ebp),%ebx
    push   $0xf3
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ecx
    mov    0xc(%ebx),%edi
    push   $0x0
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    push   $0x0
    sub    %ecx,%edx
    mov    0x14(%eax),%eax
    push   %edx
    sub    %edi,%eax
    push   %eax
    push   %edx
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
    jmp    jump_2c5d4
  jump_2c5ca:
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    call   func_2c7d4
  jump_2c5d4:
    mov    -0x4(%ebp),%eax
    mov    0x14(%eax),%edx
    mov    0x10(%eax),%ecx
    mov    0xc(%eax),%ebx
    push   %edx
    mov    0x8(%eax),%edx
    mov    $data_fa35c,%eax
    call   func_50658
  jump_2c5ee:
    mov    -0x4(%ebp),%eax
    cmpw   $0x0,0x6b(%eax)
    je     jump_2c5ff
    xor    %edx,%edx
    call   func_2c8f8
  jump_2c5ff:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c608:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x4,%esp
    mov    %eax,-0x4(%ebp)
    mov    0x1c(%eax),%eax
    mov    -0x4(%ebp),%esi
    sar    $0x10,%eax
    add    $0x4,%esi
    cmp    $0xffffffff,%eax
    je     jump_2c667
    mov    data_fd36e,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    mov    -0x4(%ebp),%eax
    push   $0x0
    mov    0x1c(%eax),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    mov    0x18(%eax),%ax
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_583e6
    add    $0x14,%esp
    jmp    jump_2c7af
  jump_2c667:
    mov    -0x4(%ebp),%eax
    mov    0x9f(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_2c7a2
    push   $0x96
    push   %esi
    mov    -0x4(%ebp),%esi
    mov    $data_fd3aa,%edi
    call   func_59d90
    lea    0x4(%esi),%esi
    mov    -0x4(%ebp),%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x59(%edx),%edx
    add    $0x8,%esp
    sar    $0x10,%edx
    xor    %eax,%eax
    cmp    $0xffffffff,%edx
    jne    jump_2c6ae
    mov    $0x2,%eax
  jump_2c6ae:
    mov    -0x4(%ebp),%edx
    mov    0x5b(%edx),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    jne    jump_2c6be
    or     $0x1,%al
  jump_2c6be:
    push   $0x0
    mov    -0x4(%ebp),%ecx
    mov    -0x4(%ebp),%ebx
    mov    -0x4(%ebp),%edx
    cwtl
    push   $0xff
    add    $0x20,%ecx
    mov    0x5b(%ebx),%ebx
    mov    0x59(%edx),%edx
    push   $0xffffffff
    sar    $0x10,%ebx
    push   %eax
    sar    $0x10,%edx
    mov    $data_fd3a2,%eax
    call   func_2af88
    mov    -0x4(%ebp),%eax
    cmpl   $0xffffffff,0x5f(%eax)
    jne    jump_2c7af
    push   $0xf3
    mov    -0x4(%ebp),%edx
    push   $0x0
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ebx
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    lea    0x4(%edx),%esi
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%ecx
    push   $0x0
    sub    %ecx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%edi
    push   $0x0
    sub    %edi,%eax
    push   %eax
    push   $0x0
    mov    0x8(%edx),%ebx
    push   %eax
    mov    0x10(%edx),%eax
    sub    %ebx,%eax
    push   %eax
    push   %esi
    call   func_573c1
    mov    -0x4(%ebp),%eax
    add    $0x1c,%esp
    mov    -0x4(%ebp),%edx
    mov    -0x4(%ebp),%ebx
    push   $0xf3
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ecx
    mov    0xc(%ebx),%edi
    push   $0x0
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    push   $0x0
    sub    %ecx,%edx
    mov    0x14(%eax),%eax
    push   %edx
    sub    %edi,%eax
    push   %eax
    push   %edx
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
    jmp    jump_2c7af
  jump_2c7a2:
    mov    $0x1,%edx
    mov    -0x4(%ebp),%eax
    call   func_2c7d4
  jump_2c7af:
    mov    -0x4(%ebp),%eax
    mov    0x14(%eax),%edx
    mov    0x10(%eax),%ecx
    mov    0xc(%eax),%ebx
    push   %edx
    mov    0x8(%eax),%edx
    mov    $data_fa35c,%eax
    call   func_50658
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c7d4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,(%esp)
    mov    $0xf2,%eax
    test   %edx,%edx
    je     jump_2c7ed
    mov    $0x96,%eax
  jump_2c7ed:
    mov    (%esp),%esi
    push   %eax
    add    $0x4,%esi
    push   %esi
    call   func_59d90
    add    $0x8,%esp
    xor    %edx,%edx
    mov    (%esp),%eax
    mov    (%esp),%ebp
    mov    %edx,0x8(%esp)
    mov    0xa1(%eax),%bx
    add    $0x6d,%ebp
    test   %bx,%bx
    jle    jump_2c8ec
    mov    %esi,0x4(%esp)
  jump_2c820:
    test   %ebp,%ebp
    jne    jump_2c839
    mov    $0x1ce,%ebx
    mov    $data_817bd,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2c839:
    mov    0x0(%ebp),%al
    test   %al,%al
    jbe    jump_2c846
    cmp    $0x1,%al
    je     jump_2c88a
    jmp    jump_2c8bc
  jump_2c846:
    mov    0x4(%esp),%esi
    mov    0x1(%ebp),%eax
    mov    $data_fd3aa,%edi
    call   func_2cab0
    push   $0x0
    mov    0x9(%ebp),%ebx
    mov    0x7(%ebp),%edx
    mov    0x5(%ebp),%cx
    push   $0xff
    sar    $0x10,%ebx
    movswl %cx,%ecx
    push   $0xf3
    sar    $0x10,%edx
    push   %ecx
    mov    %eax,%ecx
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    jmp    jump_2c8cd
  jump_2c88a:
    mov    0x9(%ebp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x7(%ebp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x5(%ebp),%edx
    push   %edx
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    0x1(%ebp),%dx
    call   func_1b084
    push   %eax
    mov    0x14(%esp),%ebx
    push   %ebx
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_2c8cd
  jump_2c8bc:
    mov    $0x1df,%ebx
    mov    $data_817cc,%edx
    xor    %eax,%eax
    call   func_25888
  jump_2c8cd:
    mov    0x8(%esp),%ecx
    mov    (%esp),%edx
    add    $0xd,%ebp
    inc    %ecx
    mov    0xa1(%edx),%si
    mov    %ecx,0x8(%esp)
    cmp    %si,%cx
    jl     jump_2c820
  jump_2c8ec:
    add    $0xc,%esp
    pop    %ebp
  jump_2c8f0:
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2c8f8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    cmpl   $0x0,0x67(%eax)
    je     jump_2c8f0
    xor    %ebx,%ebx
    jmp    jump_2c909
  jump_2c908:
    inc    %ebx
  jump_2c909:
    movswl %bx,%eax
    cmp    $0x14,%eax
    jge    jump_2c8f0
    shl    $0x2,%eax
    mov    0x67(%esi),%ecx
    add    %ecx,%eax
    mov    (%eax),%ecx
    test   %ecx,%ecx
    je     jump_2c908
    mov    0x39(%ecx),%edi
    mov    %ecx,%eax
    cmp    $0xffffffff,%edi
    jne    jump_2c908
    mov    0xa7(%ecx),%ecx
    xor    %edx,%edx
    call   *0xc(%ecx)
    jmp    jump_2c908


/*----------------------------------------------------------------*/
func_2c938:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%edi
    mov    %dx,0x8(%esp)
    mov    %ebx,(%esp)
    mov    %ecx,0x4(%esp)
    cmpl   $0x0,0x67(%eax)
    je     jump_2c9a5
    xor    %esi,%esi
    jmp    jump_2c957
  jump_2c956:
    inc    %esi
  jump_2c957:
    movswl %si,%eax
    cmp    $0x14,%eax
    jge    jump_2c9a5
    lea    0x0(,%eax,4),%edx
    mov    0x67(%edi),%eax
    add    %edx,%eax
    mov    (%eax),%ebx
    test   %ebx,%ebx
    je     jump_2c956
    cmpl   $0x0,0x35(%ebx)
    jne    jump_2c983
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_2c956
  jump_2c983:
    mov    0x67(%edi),%edx
    movswl %si,%eax
    mov    0x4(%esp),%ecx
    mov    (%edx,%eax,4),%eax
    mov    (%esp),%ebx
    mov    0x6(%esp),%edx
    mov    0xa7(%eax),%ebp
    sar    $0x10,%edx
    call   *0x8(%ebp)
    jmp    jump_2c956
  jump_2c9a5:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2c9ac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x34,%esp
    mov    $data_817db,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_2c9d3
    mov    $0x214,%ebx
    mov    $data_817e7,%edx
    call   func_25878
  jump_2c9d3:
    xor    %ebx,%ebx
  jump_2c9d5:
    mov    %esp,%edx
    push   %edx
    push   $data_817f6
    push   %ecx
    lea    0xc(%esp),%edx
    call   func_73431
    add    $0xc,%esp
    mov    $data_11f10c,%eax
    add    $0x2,%ebx
    call   func_1adac
    mov    %ax,data_efd42(%ebx)
    cmp    $0x5a,%ebx
    jne    jump_2c9d5
    mov    %ecx,%eax
    call   func_7280e
    add    $0x34,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ca14:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_2ca31
    mov    $0x226,%ebx
    mov    $data_817f9,%edx
    call   func_25878
  jump_2ca31:
    mov    %esi,%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    data_f01a6,%eax
    sar    $0x10,%eax
    add    %ecx,%eax
    mov    %ecx,(%esp)
    cmp    $0x400,%eax
    jl     jump_2ca62
    mov    $0x229,%ebx
    mov    $data_81808,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2ca62:
    mov    data_f01a6,%edi
    sar    $0x10,%edi
    mov    (%esp),%ecx
    add    $data_efda8,%edi
    inc    %ecx
    push   %edi
  jump_2ca76:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2ca8e
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2ca76
  jump_2ca8e:
    pop    %edi
    mov    data_f01a8,%dx
    mov    data_f01a6,%eax
    add    %ecx,%edx
    sar    $0x10,%eax
    mov    %dx,data_f01a8
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2cab0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    mov    data_f01a6,%eax
    sar    $0x10,%eax
    cmp    %eax,%ecx
    jl     jump_2cad2
    mov    $0x237,%ebx
    mov    $data_81817,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2cad2:
    mov    $data_efda8,%eax
    add    %ecx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2cae0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    mov    %edx,%esi
    mov    0x9f(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x4,%eax
    jl     jump_2cb0e
    mov    $0x241,%ebx
    mov    $data_81826,%edx
    xor    %eax,%eax
    call   func_25888
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_2cb0e:
    mov    0xa1(%ebx),%cx
    movswl %cx,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    inc    %ecx
    add    %edx,%eax
    mov    %cx,0xa1(%ebx)
    lea    0x6d(%ebx,%eax,1),%edi
    mov    $0xffffffff,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_2cb44:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85ca0,0xa7(%eax)
    call   func_2cba4
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2cb60:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2cb7f
    mov    $data_85c00,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2cb7f:
    mov    $0x1,%edx
    movl   $data_85ca0,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2cb9f
    call   func_72124
  jump_2cb9f:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2cba4:
/*----------------------------------------------------------------*/
    movl   $0x0,0xab(%eax)
    ret


/*----------------------------------------------------------------*/
func_2cbb0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    cmp    $0x4,%dx
    jb     jump_2cbc3
    cmp    $0x5,%dx
    jbe    jump_2cbd1
  jump_2cbc3:
    movswl %di,%edx
    mov    %esi,%eax
    call   func_2eb04
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2cbd1:
    cmp    0x8(%eax),%ebx
    jl     jump_2cbc3
    cmp    0x10(%eax),%ebx
    jg     jump_2cbc3
    cmp    0xc(%eax),%ecx
    jl     jump_2cbc3
    cmp    0x14(%esi),%ecx
    jg     jump_2cbc3
    notl   0xab(%esi)
    mov    0xa7(%esi),%ebp
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0x10(%ebp)
    movswl %di,%edx
    mov    %esi,%eax
    call   func_2eb04
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2cc08:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x4,%esp
    mov    %eax,-0x4(%ebp)
    mov    %edx,%eax
    mov    -0x4(%ebp),%edx
    cmpl   $0x0,0x39(%edx)
    je     jump_2ce72
    mov    data_fd35e,%ecx
    cmp    0x41(%edx),%ecx
    je     jump_2cc34
    cmp    $0x3,%eax
    jne    jump_2cc55
  jump_2cc34:
    mov    -0x4(%ebp),%edx
    cmpl   $0x0,0x3d(%edx)
    je     jump_2cc55
    cmp    $0x2,%eax
    je     jump_2cc55
    mov    0xa7(%edx),%ebx
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    call   *0x10(%ebx)
    jmp    jump_2ce61
  jump_2cc55:
    mov    -0x4(%ebp),%eax
    mov    0x1c(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_2ccf6
    mov    -0x4(%ebp),%edx
    mov    -0x4(%ebp),%esi
    mov    0xab(%edx),%ebx
    add    $0x4,%esi
    cmp    $0xffffffff,%ebx
    jne    jump_2cccf
    mov    data_fd36e,%eax
    push   %eax
    movb   $0x50,0xf2(%eax)
    call   func_583c7
    add    $0x4,%esp
    mov    -0x4(%ebp),%eax
    push   $0x0
    mov    0x1c(%eax),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    mov    0x18(%eax),%ax
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_583e6
    mov    data_fd36e,%eax
    add    $0x14,%esp
    movb   $0x96,0xf2(%eax)
    jmp    jump_2ce47
  jump_2cccf:
    push   $0x0
    push   $0x0
    push   %eax
    mov    0x18(%edx),%ax
    xor    %edx,%edx
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_2ce47
  jump_2ccf6:
    mov    -0x4(%ebp),%edx
    mov    0xab(%edx),%edi
    mov    $0xf2,%eax
    cmp    $0xffffffff,%edi
    jne    jump_2cd0e
    mov    $0x50,%eax
  jump_2cd0e:
    push   %eax
    mov    -0x4(%ebp),%eax
    add    $0x4,%eax
    push   %eax
    mov    -0x4(%ebp),%esi
    mov    $data_fd3aa,%edi
    call   func_59d90
    lea    0x4(%esi),%esi
    mov    -0x4(%ebp),%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x59(%eax),%eax
    sar    $0x10,%eax
    add    $0x8,%esp
    cmp    $0xffffffff,%eax
    jne    jump_2cd65
    mov    -0x4(%ebp),%eax
    mov    0x5b(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_2cd65
    push   $0x0
    push   $0xff
    mov    -0x4(%ebp),%ecx
    push   %eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    push   $0x3
    add    $0x20,%ecx
    mov    $data_fd3a2,%eax
    jmp    jump_2cd8d
  jump_2cd65:
    push   $0x0
    mov    -0x4(%ebp),%ecx
    mov    -0x4(%ebp),%ebx
    mov    -0x4(%ebp),%edx
    mov    $data_fd3a2,%eax
    push   $0xff
    add    $0x20,%ecx
    mov    0x5b(%ebx),%ebx
    mov    0x59(%edx),%edx
    push   $0xffffffff
    sar    $0x10,%ebx
    push   $0x0
    sar    $0x10,%edx
  jump_2cd8d:
    call   func_2af88
    mov    -0x4(%ebp),%eax
    cmpl   $0xffffffff,0x5f(%eax)
    jne    jump_2ce47
    push   $0xf3
    mov    -0x4(%ebp),%edx
    push   $0x0
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ebx
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    lea    0x4(%edx),%esi
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%ecx
    push   $0x0
    sub    %ecx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%edi
    push   $0x0
    sub    %edi,%eax
    push   %eax
    push   $0x0
    mov    0x8(%edx),%ebx
    push   %eax
    mov    0x10(%edx),%eax
    sub    %ebx,%eax
    push   %eax
    push   %esi
    call   func_573c1
    mov    -0x4(%ebp),%eax
    add    $0x1c,%esp
    mov    -0x4(%ebp),%edx
    mov    -0x4(%ebp),%ebx
    push   $0xf3
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ecx
    mov    0xc(%ebx),%edi
    push   $0x0
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    push   $0x0
    sub    %ecx,%edx
    mov    0x14(%eax),%eax
    push   %edx
    sub    %edi,%eax
    push   %eax
    push   %edx
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
  jump_2ce47:
    mov    -0x4(%ebp),%eax
    mov    0x14(%eax),%esi
    mov    0x10(%eax),%ecx
    mov    0xc(%eax),%ebx
    push   %esi
    mov    0x8(%eax),%edx
    mov    $data_fa35c,%eax
    call   func_50658
  jump_2ce61:
    mov    -0x4(%ebp),%eax
    cmpw   $0x0,0x6b(%eax)
    je     jump_2ce72
    xor    %edx,%edx
    call   func_2c8f8
  jump_2ce72:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ce7c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x8,%esp
    mov    %eax,-0x4(%ebp)
    mov    0x1c(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_2cf41
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%esi
    mov    0xab(%eax),%edi
    add    $0x4,%esi
    cmp    $0xffffffff,%edi
    jne    jump_2cf00
    mov    data_fd36e,%eax
    push   %eax
    movb   $0xca,0xf2(%eax)
    call   func_583c7
    add    $0x4,%esp
    mov    -0x4(%ebp),%eax
    push   $0x0
    mov    0x1c(%eax),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    mov    0x18(%eax),%ax
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_583e6
    mov    data_fd36e,%eax
    add    $0x14,%esp
    movb   $0x96,0xf2(%eax)
    jmp    jump_2d059
  jump_2cf00:
    mov    data_fd36e,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    mov    -0x4(%ebp),%eax
    push   $0x0
    mov    0x1c(%eax),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    mov    0x18(%eax),%ax
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_583e6
    add    $0x14,%esp
    jmp    jump_2d059
  jump_2cf41:
    mov    -0x4(%ebp),%edx
    mov    0xab(%edx),%ebx
    mov    $0x96,%eax
    cmp    $0xffffffff,%ebx
    jne    jump_2cf59
    mov    $0xca,%eax
  jump_2cf59:
    push   %eax
    mov    -0x4(%ebp),%eax
    add    $0x4,%eax
    push   %eax
    mov    %eax,-0x8(%ebp)
    call   func_59d90
    add    $0x8,%esp
    mov    -0x4(%ebp),%esi
    mov    $data_fd3aa,%edi
    push   $0x0
    mov    -0x4(%ebp),%ecx
    mov    $data_fd3a2,%eax
    push   $0xff
    lea    0x4(%esi),%esi
    xor    %ebx,%ebx
    push   $0xffffffff
    xor    %edx,%edx
    add    $0x20,%ecx
    push   $0x3
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    -0x4(%ebp),%eax
    cmpl   $0xffffffff,0x5f(%eax)
    jne    jump_2d059
    push   $0xf3
    mov    -0x4(%ebp),%edx
    push   $0x0
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%edi
    push   $0x0
    sub    %edi,%eax
    push   %eax
    push   $0x0
    push   $0x0
    mov    -0x8(%ebp),%eax
    push   %eax
    call   func_573c1
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%ebx
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    mov    -0x8(%ebp),%ecx
    push   %ecx
    call   func_573c1
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x14(%eax),%eax
    mov    0xc(%edx),%esi
    push   $0x0
    sub    %esi,%eax
    push   %eax
    push   $0x0
    mov    0x8(%edx),%edi
    push   %eax
    mov    0x10(%edx),%eax
    sub    %edi,%eax
    push   %eax
    mov    -0x8(%ebp),%eax
    push   %eax
    call   func_573c1
    add    $0x1c,%esp
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%edx
    push   $0xf3
    mov    0x10(%eax),%eax
    mov    0x8(%edx),%ebx
    push   $0x0
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    sub    %ebx,%edx
    mov    -0x4(%ebp),%ebx
    push   $0x0
    mov    0x14(%eax),%eax
    mov    0xc(%ebx),%ecx
    push   %edx
    sub    %ecx,%eax
    push   %eax
    push   %edx
    mov    -0x8(%ebp),%esi
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
  jump_2d059:
    mov    -0x4(%ebp),%eax
    mov    0x14(%eax),%ebx
    mov    0x10(%eax),%ecx
    mov    0x8(%eax),%edx
    push   %ebx
    mov    0xc(%eax),%ebx
    mov    $data_fa35c,%eax
    call   func_50658
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d07c:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    mov    %edx,%eax
    lea    0xab(%ecx),%edx
    cmp    $0xffffffff,%ebx
    jne    jump_2d098
    mov    $0x4,%ebx
    call   func_1bf94
    pop    %ecx
    ret
  jump_2d098:
    mov    $0x4,%ebx
    call   func_1c098
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2d0a4:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    movl   $data_85c88,0xa7(%eax)
    movl   $0x0,0xab(%eax)
    movw   $0x0,0xaf(%eax)
    mov    %eax,%edx
    movw   $0xffff,0xb1(%eax)
    call   func_2d140
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2d0dc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2d0fb
    mov    $data_85bec,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2d0fb:
    mov    0xab(%eax),%edx
    movl   $data_85c88,0xa7(%eax)
    test   %edx,%edx
    je     jump_2d120
    mov    %edx,%eax
    call   func_259ac
    movl   $0x0,0xab(%ebx)
  jump_2d120:
    mov    $0x1,%edx
    mov    %ebx,%eax
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2d138
    call   func_72124
  jump_2d138:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d140:
/*----------------------------------------------------------------*/
    movw   $0x7,0x59(%eax)
    ret


/*----------------------------------------------------------------*/
func_2d148:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_5257c
    mov    %eax,0x41(%ebx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d160:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    movswl %dx,%eax
    test   %eax,%eax
    jg     jump_2d176
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_2d176:
    mov    $data_81835,%ecx
    mov    $0x1,%ebx
    movswl %dx,%eax
    mov    $0xe,%edx
    call   func_25990
    mov    %eax,0xab(%esi)
    test   %eax,%eax
    je     jump_2d1a3
    mov    $0xffffffff,%eax
    mov    %di,0xaf(%esi)
  jump_2d1a3:
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d1a8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,(%esp)
    mov    %ecx,%ebp
    xor    %eax,%eax
    xor    %edx,%edx
    jmp    jump_2d1c1
  jump_2d1bd:
    add    $0xe,%edx
    inc    %eax
  jump_2d1c1:
    mov    0xad(%esi),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_2d1da
    mov    0xab(%esi),%ebx
    cmp    (%edx,%ebx,1),%di
    jne    jump_2d1bd
  jump_2d1da:
    mov    0xad(%esi),%edx
    sar    $0x10,%edx
    cmp    %edx,%eax
    jge    jump_2d22b
    mov    %eax,%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    test   %ebp,%ebp
    je     jump_2d215
    mov    $0xe,%ecx
    mov    0xab(%esi),%edi
    mov    %ebp,%esi
    add    %eax,%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    jmp    jump_2d224
  jump_2d215:
    mov    0xab(%esi),%edx
    add    %edx,%eax
    mov    (%esp),%edx
    mov    %dx,0xa(%eax)
  jump_2d224:
    mov    $0xffffffff,%eax
    jmp    jump_2d22d
  jump_2d22b:
    xor    %eax,%eax
  jump_2d22d:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2d234:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %edx,%esi
    mov    %bx,(%esp)
    movswl %dx,%edx
    mov    0x8(%eax),%ebx
    mov    0x10(%eax),%ecx
    mov    0xc(%eax),%edi
    mov    0x14(%eax),%ebp
    add    %edx,%ebx
    add    %edx,%ecx
    mov    -0x2(%esp),%edx
    mov    %ebx,0x8(%eax)
    sar    $0x10,%edx
    mov    %ecx,0x10(%eax)
    add    %edx,%edi
    xor    %ebx,%ebx
    mov    %edi,0xc(%eax)
    add    %edx,%ebp
    mov    0xaf(%eax),%dx
    mov    %ebp,0x14(%eax)
    test   %dx,%dx
    jle    jump_2d2bb
  jump_2d279:
    movswl %bx,%edx
    imul   $0xe,%edx,%edx
    mov    0xab(%eax),%ecx
    add    %si,0x2(%ecx,%edx,1)
    mov    0xab(%eax),%ecx
    add    %si,0x4(%ecx,%edx,1)
    mov    0xab(%eax),%ecx
    mov    (%esp),%edi
    add    %di,0x6(%ecx,%edx,1)
    mov    0xab(%eax),%ecx
    add    %ecx,%edx
    mov    %edi,%ecx
    add    %cx,0x8(%edx)
    inc    %ebx
    cmp    0xaf(%eax),%bx
    jl     jump_2d279
  jump_2d2bb:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2d2c4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    %edx,%ecx
    mov    0xaf(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_2d31c
    mov    %eax,%esi
    shl    $0x3,%eax
    sub    %esi,%eax
    lea    (%eax,%eax,1),%esi
    mov    0xab(%edi),%eax
    add    %esi,%eax
    mov    0x2(%eax),%esi
    sar    $0x10,%esi
    cmp    %esi,%edx
    jg     jump_2d31c
    mov    (%eax),%esi
    sar    $0x10,%esi
    cmp    %esi,%edx
    jl     jump_2d31c
    mov    0x6(%eax),%esi
    sar    $0x10,%esi
    cmp    %esi,%ebx
    jg     jump_2d31c
    mov    0x4(%eax),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jl     jump_2d31c
    mov    0xb1(%edi),%dx
    jmp    jump_2d379
  jump_2d31c:
    mov    0xaf(%edi),%si
    xor    %edx,%edx
    test   %si,%si
    jg     jump_2d338
    jmp    jump_2d374
  jump_2d32c:
    inc    %edx
    cmp    0xaf(%edi),%dx
    jl     jump_2d33e
    jmp    jump_2d374
  jump_2d338:
    mov    0xab(%edi),%ebp
  jump_2d33e:
    movswl %dx,%eax
    imul   $0xe,%eax,%eax
    add    %ebp,%eax
    mov    0x2(%eax),%esi
    sar    $0x10,%esi
    cmp    %esi,%ecx
    jg     jump_2d32c
    mov    (%eax),%esi
    sar    $0x10,%esi
    cmp    %esi,%ecx
    jl     jump_2d32c
    mov    0x6(%eax),%esi
    sar    $0x10,%esi
    cmp    %esi,%ebx
    jg     jump_2d32c
    mov    0x4(%eax),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebx
    jl     jump_2d32c
    mov    %edx,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2d374:
    mov    $0xffffffff,%edx
  jump_2d379:
    mov    %edx,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2d380:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    cmp    0xb1(%eax),%si
    je     jump_2d406
    cmp    0xaf(%eax),%si
    jl     jump_2d3ae
    mov    $0x396,%ebx
    mov    $data_8183e,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2d3ae:
    mov    0xaf(%ecx),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_2d3d0
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    0xab(%ecx),%edx
    andb   $0xfd,0xa(%edx,%eax,2)
  jump_2d3d0:
    movswl %si,%edx
    cmp    $0xffffffff,%edx
    je     jump_2d3ff
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    0xab(%ecx),%edx
    add    %eax,%eax
    add    %edx,%eax
    mov    0xa(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_2d3ff
    orb    $0x2,0xa(%eax)
  jump_2d3ff:
    mov    %si,0xb1(%ecx)
  jump_2d406:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d450:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    mov    data_93b98,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_2d493
  jump_2d464:
    movswl %ax,%edx
    imul   $0x1ee,%edx,%ebx
    mov    data_92e18(%ebx),%bl
    imul   $0xe,%edx,%ecx
    xor    %bh,%bh
    imul   $0x5,%ebx,%ebx
    mov    0xab(%esi),%edx
    add    $0x14,%ebx
    mov    %bx,0xc(%ecx,%edx,1)
    inc    %eax
    cmp    data_93b98,%ax
    jl     jump_2d464
  jump_2d493:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d498:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    cmp    0xaf(%eax),%cx
    jl     jump_2d4b9
    mov    $0x3cd,%ebx
    mov    $data_8184d,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2d4b9:
    movswl %cx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_2d4d2
    mov    $0x3ce,%ebx
    mov    $data_8185c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2d4d2:
    movswl %cx,%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    lea    (%eax,%eax,1),%edx
    mov    0xab(%esi),%eax
    add    %edx,%eax
    mov    0xa(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    movswl %dx,%edx
    test   %edx,%edx
    jne    jump_2d4ff
    xor    %eax,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_2d4ff:
    mov    0xa(%eax),%dx
    xor    %dh,%dh
    and    $0x4,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_2d515
    andb   $0xfb,0xa(%eax)
    jmp    jump_2d519
  jump_2d515:
    orb    $0x4,0xa(%eax)
  jump_2d519:
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret

vtable_2d524:
    .long   func_2d572
    .long   func_2d58f
    .long   func_2d728
    .long   func_2d61a
    .long   func_2d61a
    .long   func_2d5c9
    .long   func_2d5a3
    .long   func_2d5e6
    .long   func_2d6c6


/*----------------------------------------------------------------*/
func_2d548:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %dx,(%esp)
    mov    %ecx,%edi
    mov    %ebx,%edx
    mov    (%esp),%eax
    dec    %eax
    cmp    $0x8,%ax
    ja     func_2d728
    and    $0xffff,%eax
    jmp    *%cs:vtable_2d524(,%eax,4)


/*----------------------------------------------------------------*/
func_2d572:
/*----------------------------------------------------------------*/
    mov    %esi,%eax
    mov    -0x2(%esp),%edx
    call   func_2d450
    sar    $0x10,%edx
    mov    %esi,%eax
    call   func_2eb04
  jump_2d587:
    xor    %eax,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2d58f:
/*----------------------------------------------------------------*/
    mov    -0x2(%esp),%edx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2eb04
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2d5a3:
/*----------------------------------------------------------------*/
    push   $0x0
    mov    $0x8,%ecx
    mov    $0x4,%ebx
    push   $0x0
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51aec
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2d5c9:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51b80
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2d5e6:
/*----------------------------------------------------------------*/
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_2d2c4
    cmp    0xb1(%esi),%ax
    je     jump_2d60f
    movswl %ax,%edx
    mov    %esi,%eax
    call   func_2d380
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_2d60f:
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2d61a:
/*----------------------------------------------------------------*/
    cmp    0x8(%esi),%edx
    jl     jump_2d587
    cmp    0x10(%esi),%edx
    jg     jump_2d587
    cmp    0xc(%esi),%edi
    jl     jump_2d587
    cmp    0x14(%esi),%edi
    jg     jump_2d587
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_2d2c4
    mov    %eax,%ebx
    cwtl
    cmp    $0xffffffff,%eax
    je     jump_2d6bb
    mov    0x57(%esi),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_2d664
    mov    $data_f8638,%eax
    call   func_4af80
  jump_2d664:
    movswl %bx,%edi
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_2d380
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_2d498
    mov    %eax,%ebx
    mov    0xa7(%esi),%ecx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ecx)
    cmp    $0xffffffff,%ebx
    jne    jump_2d6bb
    cmpl   $0x0,0x63(%esi)
    je     jump_2d6bb
    push   $0x0
    lea    0x0(,%edi,8),%eax
    mov    0xab(%esi),%edx
    mov    0x43(%esi),%ebx
    sub    %edi,%eax
    sar    $0x10,%ebx
    movswl (%edx,%eax,2),%ecx
    mov    $data_fa35c,%eax
    mov    0x63(%esi),%edx
    call   func_520f4
  jump_2d6bb:
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2d6c6:
/*----------------------------------------------------------------*/
    cmp    $0xffffffff,%ebx
    je     jump_2d6db
    movswl %bx,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    mov    %edi,%ebx
    call   func_2d1a8
    jmp    jump_2d71d
  jump_2d6db:
    xor    %ebx,%edx
    mov    0xaf(%esi),%bx
    mov    %dx,0x4(%esp)
    test   %bx,%bx
    jle    jump_2d71d
  jump_2d6ee:
    mov    0x4(%esp),%cl
    mov    $0x1,%edx
    mov    %edi,%ebx
    shl    %cl,%edx
    mov    %esi,%eax
    movswl %dx,%edx
    xor    %ecx,%ecx
    call   func_2d1a8
    mov    0x4(%esp),%eax
    inc    %eax
    mov    0xaf(%esi),%dx
    mov    %ax,0x4(%esp)
    cmp    %dx,%ax
    jl     jump_2d6ee
  jump_2d71d:
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2d728:
/*----------------------------------------------------------------*/
    mov    -0x2(%esp),%eax
    mov    %edi,%ecx
    sar    $0x10,%eax
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_2eb04
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret

vtable_2d744:
    .long   func_2d801
    .long   func_2d7fd
    .long   func_2d808
    .long   func_2d7f6
    .long   func_2d808
    .long   func_2d7ef
    .long   func_2d808
    .long   func_2d7e8


/*----------------------------------------------------------------*/
func_2d764:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    mov    %eax,%edi
    push   $0x0
    mov    0x1c(%eax),%eax
    push   $0x0
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x18(%edi),%ax
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    %edi,%eax
    add    $0x4,%eax
    push   %eax
    mov    %eax,-0x8(%ebp)
    call   func_57efc
    add    $0x14,%esp
    xor    %edx,%edx
    mov    0xaf(%edi),%bx
    mov    %dx,-0x4(%ebp)
    test   %bx,%bx
    jle    jump_2d874
    mov    -0x8(%ebp),%eax
    mov    %eax,-0xc(%ebp)
  jump_2d7bc:
    mov    -0x6(%ebp),%eax
    sar    $0x10,%eax
    imul   $0xe,%eax,%eax
    mov    0xab(%edi),%ecx
    add    %eax,%ecx
    mov    0xa(%ecx),%ax
    cmp    $0x7,%ax
    ja     func_2d808
    and    $0xffff,%eax
    jmp    *%cs:vtable_2d744(,%eax,4)


/*----------------------------------------------------------------*/
func_2d7e8:
/*----------------------------------------------------------------*/
    mov    $0x3,%esi
    jmp    jump_2d819


/*----------------------------------------------------------------*/
func_2d7ef:
/*----------------------------------------------------------------*/
    mov    $0x2,%esi
    jmp    jump_2d819


/*----------------------------------------------------------------*/
func_2d7f6:
/*----------------------------------------------------------------*/
    mov    $0x1,%esi
    jmp    jump_2d819


/*----------------------------------------------------------------*/
func_2d7fd:
/*----------------------------------------------------------------*/
    xor    %esi,%esi
    jmp    jump_2d819


/*----------------------------------------------------------------*/
func_2d801:
/*----------------------------------------------------------------*/
    mov    $0x4,%esi
    jmp    jump_2d819


/*----------------------------------------------------------------*/
func_2d808:
/*----------------------------------------------------------------*/
    mov    $0x48a,%ebx
    mov    $data_8186b,%edx
    xor    %eax,%eax
    call   func_25888
  jump_2d819:
    mov    0x4(%ecx),%eax
    mov    0xc(%edi),%ebx
    sar    $0x10,%eax
    sub    %ebx,%eax
    push   %eax
    mov    (%ecx),%eax
    mov    0x8(%edi),%edx
    sar    $0x10,%eax
    sub    %edx,%eax
    mov    0xa(%ecx),%edx
    push   %eax
    sar    $0x10,%edx
    movswl %si,%eax
    add    %edx,%eax
    push   %eax
    xor    %edx,%edx
    mov    0x18(%edi),%ax
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    -0xc(%ebp),%ebx
    push   %ebx
    call   func_57efc
    mov    -0x4(%ebp),%ecx
    add    $0x14,%esp
    inc    %ecx
    mov    0xaf(%edi),%dx
    mov    %cx,-0x4(%ebp)
    cmp    %dx,%cx
    jl     jump_2d7bc
  jump_2d874:
    mov    $data_fa35c,%eax
    mov    0x14(%edi),%ecx
    mov    0xc(%edi),%ebx
    push   %ecx
    mov    0x8(%edi),%edx
    mov    0x10(%edi),%ecx
    call   func_50658
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d894:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    cmp    $0xffffffff,%ebx
    jne    jump_2d8c3
    mov    0xad(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,8),%ebx
    sub    %edx,%ebx
    mov    0xab(%eax),%edx
    add    %ebx,%ebx
    mov    %esi,%eax
    call   func_1bf94
    pop    %esi
    pop    %ecx
    ret
  jump_2d8c3:
    mov    0xad(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,8),%ebx
    sub    %edx,%ebx
    mov    0xab(%eax),%edx
    add    %ebx,%ebx
    mov    %esi,%eax
    call   func_1c098
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2d8e8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    $0xf2,%ebx
    cmp    $0xffffffff,%ecx
    jne    jump_2d8f9
    mov    $0x96,%ebx
  jump_2d8f9:
    push   $0x0
    mov    %eax,%esi
    movswl %bx,%eax
    mov    $data_fd3aa,%edi
    push   %eax
    mov    %edx,%ecx
    mov    $0x1,%ebx
    push   $0xffffffff
    mov    $data_fd3a2,%eax
    mov    %ebx,%edx
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2d928:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85c70,0xa7(%eax)
    call   func_2d998
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2d944:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2d963
    mov    $data_85bd8,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2d963:
    movl   $data_85c70,0xa7(%eax)
    call   func_2e42c
    mov    %ebx,%eax
    mov    $0x1,%edx
    call   func_2e994
    mov    %ebx,%eax
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2d991
    call   func_72124
  jump_2d991:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2d998:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    call   func_2bfc4
    movl   $0x0,0xab(%ecx)
    movl   $0x0,0xaf(%ecx)
    movl   $0x0,0xb3(%ecx)
    movl   $0x0,0xb7(%ecx)
    movl   $0x0,0xbb(%ecx)
    mov    $0x800,%ebx
    movb   $0x31,0xc4(%ecx)
    lea    0xc7(%ecx),%eax
    movb   $0xf2,0xc5(%ecx)
    xor    %edx,%edx
    movb   $0x0,0xc6(%ecx)
    call   func_72280
    mov    $data_8187a,%edx
    mov    $data_fd3a2,%eax
    movw   $0x0,0x8c7(%ecx)
    call   func_2ac74
    movw   $0x0,0x8cb(%ecx)
    movw   $0x0,0x8cd(%ecx)
    movw   $0xffff,0x8cf(%ecx)
    movb   $0x0,0x8e5(%ecx)
    movl   $0x0,0x8e6(%ecx)
    movl   $0x0,0x8ea(%ecx)
    movl   $0x0,0x8ee(%ecx)
    add    $0x3,%eax
    movl   $0x0,0x8f2(%ecx)
    mov    $func_2d8e8,%edx
    mov    %ax,0x8c9(%ecx)
    mov    %ecx,%eax
    movl   $0x0,0x8f6(%ecx)
    call   func_2e8a8
    mov    data_efd8c,%ax
    mov    $0x1,%edx
    mov    %ax,0x18(%ecx)
    mov    %ecx,%eax
    call   func_2e0ac
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2da9c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_5257c
    mov    %eax,0x41(%ebx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2dab4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    mov    %ecx,%ebx
    cmp    $0x8,%dx
    jb     jump_2dd2a
    jbe    jump_2db70
    cmp    $0x191,%dx
    jb     jump_2dd0e
    jbe    jump_2dc03
    cmp    $0x192,%dx
    jbe    jump_2dc77
    cmp    $0x193,%dx
    je     jump_2dbd6
    movswl %di,%edx
    mov    %ebx,%ecx
    mov    %esi,%eax
    mov    %ebp,%ebx
    call   func_2eb04
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2db08:
    mov    0xc0(%eax),%edx
    sar    $0x18,%edx
    mov    %ebp,%ebx
    call   func_2e0ac
    movswl %di,%edx
    mov    %esi,%eax
    call   func_2eb04
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2db26:
    mov    $0xffffffff,%ebx
    mov    0x41(%eax),%edx
    mov    $data_fa35c,%eax
    call   func_51b80
    mov    $0xffffffff,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51884
    movw   $0xffff,0x8cf(%esi)
    mov    %esi,%eax
    mov    0xa7(%esi),%ebx
    movb   $0x0,0x8e5(%esi)
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2db70:
    mov    %ebp,%edx
    call   func_2e4a8
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2db80:
    cmp    0x8(%esi),%ebp
    jl     jump_2dd97
    cmp    0x10(%esi),%ebp
    jg     jump_2dd97
    cmp    0xc(%esi),%ebx
    jl     jump_2dd97
    cmp    0x14(%esi),%ebx
    jg     jump_2dd97
    movswl %di,%edx
    cmp    $0xc,%edx
    jne    jump_2dbc1
    cmpb   $0x30,0x4f(%esi)
    je     jump_2dbc1
    mov    %ebx,%ecx
    mov    %esi,%eax
    mov    %ebp,%ebx
    call   func_2eb04
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2dbc1:
    movswl %di,%ecx
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_2e770
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2dbd6:
    mov    $0x193,%ebx
    mov    0x41(%eax),%edx
    mov    $data_fa35c,%eax
    call   func_51b80
    mov    $0xffffffff,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51884
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2dc03:
    movswl %dx,%ebx
    mov    0x41(%eax),%edx
    mov    $data_fa35c,%eax
    call   func_518ec
    cmp    $0xffff,%eax
    je     jump_2dc4a
    lea    0x0(,%eax,2),%edx
    mov    $0x3,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    lea    -0x1(%eax),%edx
    test   %edx,%edx
    jge    jump_2dc36
    xor    %edx,%edx
  jump_2dc36:
    movswl %di,%ebx
    mov    0x41(%esi),%eax
    mov    %edx,%ecx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_51928
  jump_2dc4a:
    xor    %eax,%eax
    mov    0x8cd(%esi),%ax
    test   %eax,%eax
    je     jump_2dc6e
    mov    %eax,%ebx
    dec    %ebx
    mov    %bx,0x8cd(%esi)
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   *0xc(%ebx)
  jump_2dc6e:
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2dc77:
    movswl %dx,%ebx
    mov    0x41(%eax),%edx
    mov    $data_fa35c,%eax
    call   func_518ec
    cmp    $0xffff,%eax
    je     jump_2dcbe
    lea    0x0(,%eax,2),%edx
    mov    $0x3,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    lea    -0x1(%eax),%edx
    test   %edx,%edx
    jge    jump_2dcaa
    xor    %edx,%edx
  jump_2dcaa:
    movswl %di,%ebx
    mov    0x41(%esi),%eax
    mov    %edx,%ecx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_51928
  jump_2dcbe:
    mov    0x14(%esi),%edx
    mov    0xc(%esi),%ebx
    sub    %ebx,%edx
    mov    %edx,%eax
    xor    %ebx,%ebx
    sar    $0x1f,%edx
    mov    0x8c9(%esi),%bx
    idiv   %ebx
    xor    %edx,%edx
    mov    0x8c7(%esi),%dx
    sub    %eax,%edx
    mov    %edx,%eax
    xor    %edx,%edx
    mov    0x8cd(%esi),%dx
    cmp    %eax,%edx
    jge    jump_2dd05
    inc    %edx
    mov    %esi,%eax
    mov    0xa7(%esi),%ebx
    mov    %dx,0x8cd(%esi)
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_2dd05:
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2dd0e:
    cmp    $0xc,%dx
    je     jump_2db80
    movswl %di,%edx
    mov    %ebx,%ecx
    mov    %esi,%eax
    mov    %ebp,%ebx
    call   func_2eb04
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2dd2a:
    cmp    $0x4,%dx
    jb     jump_2dd7b
    cmp    $0x5,%dx
    jbe    jump_2db80
    cmp    $0x6,%dx
    jbe    jump_2db26
    push   $0x0
    mov    $0x8,%ecx
    mov    $0x4,%ebx
    push   $0x0
    mov    0x41(%eax),%edx
    mov    $data_fa35c,%eax
    call   func_51aec
    mov    data_c84f0,%ebx
    mov    data_c84ec,%edx
    mov    %esi,%eax
    call   func_2e4a8
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2dd7b:
    cmp    $0x1,%dx
    je     jump_2db08
    movswl %di,%edx
    mov    %ebx,%ecx
    mov    %esi,%eax
    mov    %ebp,%ebx
    call   func_2eb04
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_2dd97:
    xor    %eax,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2dda0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%esi
    xor    %eax,%eax
    mov    0xc5(%esi),%al
    push   %eax
    lea    0x4(%esi),%ebp
    push   %ebp
    call   func_59d90
    mov    0x10(%esi),%eax
    mov    0x8(%esi),%edx
    add    $0x8,%esp
    sub    %edx,%eax
    mov    %eax,0x14(%esp)
    xor    %eax,%eax
    mov    0xc4(%esi),%al
    push   %eax
    push   $0x0
    push   $0x0
    mov    0x20(%esp),%ecx
    push   %ecx
    push   $0x0
    push   $0x0
    mov    0x14(%esi),%edi
    mov    0xc(%esi),%ebx
    push   %ebp
    sub    %ebx,%edi
    call   func_573c1
    xor    %eax,%eax
    add    $0x1c,%esp
    mov    0xc4(%esi),%al
    push   %eax
    push   $0x0
    push   %edi
    push   $0x0
    push   $0x0
    push   $0x0
    push   %ebp
    call   func_573c1
    xor    %eax,%eax
    add    $0x1c,%esp
    mov    0xc4(%esi),%al
    push   %eax
    push   $0x0
    push   $0x0
    mov    0x20(%esp),%eax
    push   %eax
    push   %edi
    push   %eax
    push   %ebp
    call   func_573c1
    xor    %eax,%eax
    add    $0x1c,%esp
    mov    0xc4(%esi),%al
    push   %eax
    push   $0x0
    push   %edi
    push   $0x0
    push   %edi
    mov    0x28(%esp),%ebx
    push   %ebx
    push   %ebp
    call   func_573c1
    mov    0xb3(%esi),%ecx
    add    $0x1c,%esp
    cmp    $0xffffffff,%ecx
    jne    jump_2de5b
    mov    %esi,%eax
    xor    %edx,%edx
    call   func_2df48
  jump_2de5b:
    mov    0x8(%esi),%eax
    inc    %eax
    mov    %eax,0x4(%esp)
    mov    0xc(%esi),%eax
    inc    %eax
    mov    %eax,0x8(%esp)
    mov    0x4(%esi),%eax
    mov    %eax,(%esp)
    mov    0x10(%esi),%eax
    dec    %eax
    mov    %eax,0xc(%esp)
    cmpl   $0xffffffff,0xb3(%esi)
    jne    jump_2de92
    mov    0xc(%esp),%ebp
    mov    0xbf(%esi),%eax
    sub    %eax,%ebp
    mov    %ebp,0xc(%esp)
  jump_2de92:
    lea    0xc7(%esi),%eax
    mov    0x8cd(%esi),%di
    xor    %ebp,%ebp
    mov    %eax,0x18(%esp)
    jmp    jump_2defc
  jump_2dea7:
    mov    0x8c9(%esi),%ax
  jump_2deae:
    mov    0x8(%esp),%edx
    and    $0xffff,%eax
    add    %edx,%eax
    dec    %eax
    mov    %eax,0x10(%esp)
    mov    0x14(%esi),%ecx
    cmp    %ecx,%eax
    jl     jump_2ded1
    lea    -0x1(%ecx),%eax
    mov    $0xffffffff,%ebp
    mov    %eax,0x10(%esp)
  jump_2ded1:
    mov    0x8cf(%esi),%dx
    xor    %ecx,%ecx
    cmp    %dx,%di
    setne  %al
    mov    %al,%cl
    mov    (%ebx),%edx
    mov    0x4(%ebx),%eax
    dec    %ecx
    mov    %eax,%ebx
    mov    %esp,%eax
    call   *0x8fa(%esi)
    mov    0x10(%esp),%eax
    inc    %eax
    inc    %edi
    mov    %eax,0x8(%esp)
  jump_2defc:
    xor    %edx,%edx
    movswl %di,%eax
    mov    0x8c7(%esi),%dx
    cmp    %edx,%eax
    jge    jump_2df32
    test   %ebp,%ebp
    jne    jump_2df32
    mov    0x18(%esp),%ebx
    shl    $0x3,%eax
    add    %eax,%ebx
    cmpl   $0x0,0x8f6(%esi)
    je     jump_2dea7
    mov    0x4(%ebx),%edx
    mov    (%ebx),%eax
    call   *0x8f6(%esi)
    jmp    jump_2deae
  jump_2df32:
    mov    $data_fa35c,%eax
    lea    0x4(%esi),%edx
    call   func_50690
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2df48:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x28,%esp
    mov    %eax,%esi
    mov    %edx,-0xc(%ebp)
    mov    0x10(%eax),%edi
    mov    0x8(%eax),%edx
    mov    0xbf(%eax),%ebx
    mov    0xc(%esi),%ecx
    mov    0x14(%eax),%eax
    sub    %ecx,%eax
    mov    %eax,-0x4(%ebp)
    xor    %eax,%eax
    mov    0xc4(%esi),%al
    push   %eax
    push   $0x0
    mov    -0x4(%ebp),%eax
    sub    %edx,%edi
    push   %eax
    sub    %ebx,%edi
    push   %edi
    push   $0x0
    push   %edi
    lea    0x4(%esi),%eax
    push   %eax
    call   func_573c1
    mov    0x14(%esi),%edx
    mov    0xc(%esi),%ebx
    sub    %ebx,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    lea    (%ebx,%eax,1),%edx
    mov    0x4(%esi),%eax
    mov    %eax,-0x28(%ebp)
    mov    0x10(%esi),%eax
    sub    0xbf(%esi),%eax
    inc    %eax
    mov    %eax,-0x24(%ebp)
    mov    0x10(%esi),%eax
    dec    %eax
    mov    %eax,-0x1c(%ebp)
    mov    0xc(%esi),%eax
    inc    %eax
    mov    %eax,-0x20(%ebp)
    mov    0x14(%esi),%eax
    dec    %eax
    mov    %eax,-0x18(%ebp)
    xor    %eax,%eax
    add    $0x1c,%esp
    mov    0xc6(%esi),%al
    push   %eax
    lea    -0x28(%ebp),%eax
    push   %eax
    mov    %edx,-0x8(%ebp)
    call   func_59d90
    xor    %eax,%eax
    mov    0x8e5(%esi),%al
    add    $0x8,%esp
    cmp    $0x1,%eax
    jle    jump_2e016
    cmp    $0x2,%eax
    jne    jump_2dfff
    mov    -0x8(%ebp),%eax
    mov    %eax,-0x18(%ebp)
    jmp    jump_2e005
  jump_2dfff:
    mov    -0x8(%ebp),%eax
    mov    %eax,-0x20(%ebp)
  jump_2e005:
    push   $0x96
    lea    -0x28(%ebp),%eax
    push   %eax
    call   func_59d90
    add    $0x8,%esp
  jump_2e016:
    lea    0x2(%edi),%eax
    push   $0x2
    mov    %eax,-0x14(%ebp)
    push   %eax
    mov    0x1c(%esi),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x18(%esi),%ax
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    lea    0x4(%esi),%eax
    push   %eax
    mov    %eax,-0x10(%ebp)
    call   func_57efc
    mov    -0x4(%ebp),%eax
    sub    0xbf(%esi),%eax
    add    $0x14,%esp
    add    $0x2,%eax
    push   %eax
    mov    0x1c(%esi),%eax
    mov    -0x14(%ebp),%ecx
    sar    $0x10,%eax
    push   %ecx
    inc    %eax
    xor    %edx,%edx
    push   %eax
    mov    0x18(%esi),%ax
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    -0x10(%ebp),%eax
    push   %eax
    call   func_57efc
    mov    -0xc(%ebp),%edx
    add    $0x14,%esp
    cmp    $0xffffffff,%edx
    jne    jump_2e0a3
    mov    $data_fa35c,%eax
    mov    0x14(%esi),%ebx
    mov    0x10(%esi),%ecx
    mov    0x8(%esi),%edx
    push   %ebx
    add    %edi,%edx
    mov    0xc(%esi),%ebx
    call   func_50658
  jump_2e0a3:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e0ac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    cmp    $0x1,%dl
    jne    jump_2e0be
    movw   $0x0,0x1e(%eax)
    jmp    jump_2e0c4
  jump_2e0be:
    movw   $0x2,0x1e(%eax)
  jump_2e0c4:
    mov    0x1c(%esi),%eax
    mov    %dl,0xc3(%esi)
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x18(%esi),%ax
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    call   func_5c4a8
    mov    %eax,0xbf(%esi)
    mov    %eax,%edx
    mov    0x4(%esi),%eax
    mov    %eax,0x8d1(%esi)
    shr    $0x10,%edx
    mov    0x8(%esi),%eax
    mov    %edx,0xbf(%esi)
    inc    %eax
    add    $0x8,%esp
    mov    %eax,0x8d5(%esi)
    lea    0x3(%edx),%ebx
    mov    0x10(%esi),%eax
    mov    %ebx,0xbf(%esi)
    dec    %eax
    mov    0xb3(%esi),%ecx
    mov    %eax,0x8dd(%esi)
    cmp    $0xffffffff,%ecx
    jne    jump_2e13b
    mov    0xbf(%esi),%eax
    sub    %eax,0x8dd(%esi)
  jump_2e13b:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e16c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    %ecx,(%esp)
    xor    %eax,%eax
    mov    0x8c7(%ebp),%ax
    cmp    $0x100,%eax
    jl     jump_2e19c
    mov    $0x62a,%ebx
    mov    $data_8187c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2e19c:
    movswl %di,%eax
    cmp    $0xffffffff,%eax
    jne    jump_2e1ab
    mov    0x8c9(%ebp),%di
  jump_2e1ab:
    add    %di,0x8cb(%ebp)
    mov    0x14(%ebp),%eax
    sub    0xc(%ebp),%eax
    xor    %edx,%edx
    dec    %eax
    mov    0x8cb(%ebp),%dx
    cmp    %eax,%edx
    jle    jump_2e201
    cmpl   $0xffffffff,0xb7(%ebp)
    jne    jump_2e1da
    add    0xc(%ebp),%edx
    add    $0x2,%edx
    mov    %edx,0x14(%ebp)
    jmp    jump_2e201
  jump_2e1da:
    cmpl   $0x0,0xb3(%ebp)
    jne    jump_2e201
    mov    0xbf(%ebp),%eax
    mov    0x8dd(%ebp),%edi
    movl   $0xffffffff,0xb3(%ebp)
    sub    %eax,%edi
    mov    %edi,0x8dd(%ebp)
  jump_2e201:
    cmpl   $0xffffffff,0xab(%ebp)
    jne    jump_2e2d7
    mov    %ds,%ecx
    mov    %esi,%edi
    push   %es
    mov    %ecx,%es
    xor    %eax,%eax
    mov    %eax,%ecx
    dec    %ecx
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    pop    %es
    mov    0x8e6(%ebp),%ebx
    lea    0x1(%ecx),%eax
    test   %ebx,%ebx
    jne    jump_2e25a
    mov    $data_8188b,%ebx
    mov    $0x1,%edx
    call   func_729c4
    call   func_2593c
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jne    jump_2e2a1
    mov    $0x648,%ebx
    mov    $data_8189a,%edx
    call   func_25878
    jmp    jump_2e2a1
  jump_2e25a:
    mov    0x8f2(%ebp),%edx
    mov    0x8ee(%ebp),%ecx
    sub    %ecx,%edx
    cmp    %eax,%edx
    jae    jump_2e287
    mov    $0x653,%ebx
    mov    $data_818a9,%edx
    xor    %eax,%eax
    call   func_25888
    mov    $0xffffffff,%eax
    jmp    jump_2e327
  jump_2e287:
    mov    0x8ea(%ebp),%edx
    mov    0x8ee(%ebp),%edi
    add    %edx,%ecx
    add    %eax,%edi
    mov    %ecx,0x4(%esp)
    mov    %edi,0x8ee(%ebp)
  jump_2e2a1:
    mov    0x4(%esp),%eax
    mov    %ds,%ecx
    mov    %ds,%edx
    mov    %esi,%ebx
    push   %ds
    push   %es
    push   %eax
    mov    %dx,%es
    mov    %cx,%ds
    mov    %ebx,%esi
    mov    %eax,%edi
  jump_2e2b8:
    mov    (%esi),%al
    mov    %al,%es:(%edi)
    cmp    $0x0,%al
    je     jump_2e2d2
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,%es:0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2e2b8
  jump_2e2d2:
    pop    %eax
    pop    %es
    pop    %ds
    mov    %eax,%esi
  jump_2e2d7:
    xor    %eax,%eax
    mov    0x8c7(%ebp),%ax
    mov    %esi,0xc7(%ebp,%eax,8)
    xor    %eax,%eax
    mov    0x8c7(%ebp),%ax
    movl   $0x0,0xcb(%ebp,%eax,8)
    mov    0x8c7(%ebp),%bx
    inc    %ebx
    mov    (%esp),%eax
    mov    %bx,0x8c7(%ebp)
    cmp    $0xffffffff,%eax
    jne    jump_2e31f
    mov    0xa7(%ebp),%ecx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ecx)
  jump_2e31f:
    mov    0x8c7(%ebp),%ax
    dec    %eax
  jump_2e327:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2e330:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    %ebx,%edi
    xor    %eax,%eax
    mov    %dx,%ax
    test   %eax,%eax
    jl     jump_2e349
    cmp    $0x100,%eax
    jl     jump_2e35a
  jump_2e349:
    mov    $0x66b,%ebx
    mov    $data_818b8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2e35a:
    xor    %eax,%eax
    mov    %cx,%ax
    shl    $0x3,%eax
    add    %eax,%esi
    cmpl   $0x0,0xc7(%esi)
    jne    jump_2e373
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2e373:
    mov    $0xffffffff,%eax
    mov    %edi,0xcb(%esi)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2e384:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    xor    %eax,%eax
    mov    %dx,%ax
    test   %eax,%eax
    jl     jump_2e39b
    cmp    $0x100,%eax
    jl     jump_2e3ac
  jump_2e39b:
    mov    $0x679,%ebx
    mov    $data_818c7,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2e3ac:
    xor    %eax,%eax
    mov    %cx,%ax
    mov    0xcb(%esi,%eax,8),%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e3bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    0x14(%eax),%ebx
    mov    0xc(%eax),%ecx
    sub    %ecx,%ebx
    mov    %ebx,%ecx
    xor    %ebx,%ebx
    dec    %ecx
    mov    0x8cb(%eax),%bx
    cmp    %ecx,%ebx
    jle    jump_2e3ef
    cmp    0x8c7(%eax),%dx
    jae    jump_2e3ef
    movw   $0xffff,0x8cf(%eax)
    mov    %dx,0x8cd(%eax)
  jump_2e3ef:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e3f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    xor    %eax,%eax
    mov    %dx,%ax
    test   %eax,%eax
    jl     jump_2e40b
    cmp    $0x100,%eax
    jl     jump_2e41c
  jump_2e40b:
    mov    $0x68d,%ebx
    mov    $data_818d6,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2e41c:
    xor    %eax,%eax
    mov    %cx,%ax
    mov    0xc7(%esi,%eax,8),%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e42c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    movl   $0x0,0x8ee(%eax)
    xor    %edx,%edx
    jmp    jump_2e443
  jump_2e43f:
    add    $0x8,%eax
    inc    %edx
  jump_2e443:
    xor    %ebx,%ebx
    mov    0x8c7(%ecx),%bx
    cmp    %ebx,%edx
    jge    jump_2e465
    cmpl   $0x0,0xc7(%eax)
    je     jump_2e43f
    movl   $0x0,0xc7(%eax)
    jmp    jump_2e43f
  jump_2e465:
    movw   $0x0,0x8c7(%ecx)
    movw   $0x0,0x8cb(%ecx)
    movw   $0xffff,0x8cf(%ecx)
    mov    0x10(%ecx),%eax
    movw   $0x0,0x8cd(%ecx)
    dec    %eax
    mov    0xaf(%ecx),%edx
    mov    %eax,0x8dd(%ecx)
    test   %edx,%edx
    jne    jump_2e4a3
    mov    %edx,0xb3(%ecx)
  jump_2e4a3:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e4a8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,(%esp)
    mov    %ebx,%ebp
    mov    0x8cd(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_2e58b
    cmp    0x8d9(%esi),%ebx
    jb     jump_2e53d
    cmp    0x8e1(%esi),%ebp
    ja     jump_2e53d
    mov    (%esp),%eax
    cmp    0x8dd(%esi),%eax
    ja     jump_2e53d
    cmpl   $0xffffffff,0xbb(%esi)
    jne    jump_2e767
    xor    %eax,%eax
    mov    0xc5(%esi),%al
    push   %eax
    lea    0x8d1(%esi),%ebp
    push   %ebp
    call   func_59d90
    mov    $0xffffffff,%ecx
    mov    0x8cd(%esi),%edx
    add    $0x8,%esp
    sar    $0x10,%edx
    mov    %ebp,%eax
    mov    0xcb(%esi,%edx,8),%ebx
    mov    0xc7(%esi,%edx,8),%edx
    call   *0x8fa(%esi)
    mov    $data_fa35c,%eax
    mov    %ebp,%edx
    call   func_50690
    jmp    jump_2e767
  jump_2e53d:
    xor    %eax,%eax
    mov    0xc5(%esi),%al
    push   %eax
    lea    0x8d1(%esi),%edi
    push   %edi
    call   func_59d90
    mov    0x8cd(%esi),%eax
    add    $0x8,%esp
    sar    $0x10,%eax
    xor    %ecx,%ecx
    mov    0xcb(%esi,%eax,8),%ebx
    mov    0xc7(%esi,%eax,8),%edx
    mov    %edi,%eax
    call   *0x8fa(%esi)
    mov    $data_fa35c,%eax
    mov    %edi,%edx
    call   func_50690
    movw   $0xffff,0x8cf(%esi)
  jump_2e58b:
    mov    0xb3(%esi),%edi
    mov    0x10(%esi),%eax
    cmp    $0xffffffff,%edi
    jne    jump_2e59f
    sub    0xbf(%esi),%eax
  jump_2e59f:
    cmp    (%esp),%eax
    jbe    jump_2e6fd
    xor    %eax,%eax
    mov    0x8e5(%esi),%al
    cmp    $0x1,%eax
    jle    jump_2e5ec
    mov    $0xffffffff,%edx
    mov    $0x193,%ebx
    mov    %esi,%eax
    movb   $0x1,0x8e5(%esi)
    call   func_2df48
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51b80
    mov    $0xffffffff,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51884
  jump_2e5ec:
    mov    0xc(%esi),%eax
    mov    0x8cd(%esi),%di
    mov    0x8c7(%esi),%dx
    inc    %eax
    xor    %ebx,%ebx
    mov    %eax,0x8d9(%esi)
    cmp    %dx,%di
    jb     jump_2e631
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2e613:
    mov    0x8e1(%esi),%eax
    inc    %edi
    inc    %eax
    mov    0x8c7(%esi),%cx
    mov    %eax,0x8d9(%esi)
    cmp    %cx,%di
    jae    jump_2e767
  jump_2e631:
    test   %ebx,%ebx
    jne    jump_2e767
    mov    0x8f6(%esi),%eax
    test   %eax,%eax
    je     jump_2e663
    xor    %eax,%eax
    mov    %di,%ax
    mov    0xcb(%esi,%eax,8),%edx
    mov    0xc7(%esi,%eax,8),%eax
    call   *0x8f6(%esi)
    and    $0xffff,%eax
    jmp    jump_2e66a
  jump_2e663:
    mov    0x8c9(%esi),%ax
  jump_2e66a:
    add    0x8d9(%esi),%eax
    dec    %eax
    mov    %eax,0x8e1(%esi)
    mov    0x8e1(%esi),%eax
    mov    0x14(%esi),%edx
    cmp    %edx,%eax
    jl     jump_2e692
    lea    -0x1(%edx),%eax
    mov    $0xffffffff,%ebx
    mov    %eax,0x8e1(%esi)
  jump_2e692:
    cmp    0x8d9(%esi),%ebp
    jb     jump_2e613
    cmp    0x8e1(%esi),%ebp
    ja     jump_2e613
    xor    %eax,%eax
    mov    0xc5(%esi),%al
    push   %eax
    lea    0x8d1(%esi),%ebp
    push   %ebp
    mov    %di,0x8cf(%esi)
    call   func_59d90
    xor    %eax,%eax
    mov    %di,%ax
    mov    $0xffffffff,%ecx
    add    $0x8,%esp
    mov    0xcb(%esi,%eax,8),%ebx
    mov    0xc7(%esi,%eax,8),%edx
    mov    %ebp,%eax
    call   *0x8fa(%esi)
    mov    $data_fa35c,%eax
    mov    %ebp,%edx
    call   func_50690
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_2e6fd:
    mov    0xb3(%esi),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_2e767
    mov    0x14(%esi),%edx
    mov    0xc(%esi),%edi
    sub    %edi,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    lea    (%edi,%eax,1),%edx
    xor    %eax,%eax
    mov    0x8e5(%esi),%al
    cmp    $0x1,%eax
    jg     jump_2e73c
    cmp    %edx,%ebp
    seta   %al
    add    $0x2,%al
    mov    %ecx,%edx
    mov    %al,0x8e5(%esi)
    mov    %esi,%eax
    jmp    jump_2e762
  jump_2e73c:
    cmp    %edx,%ebp
    jbe    jump_2e752
    cmp    $0x3,%eax
    je     jump_2e767
    mov    %ecx,%edx
    mov    %esi,%eax
    movb   $0x3,0x8e5(%esi)
    jmp    jump_2e762
  jump_2e752:
    cmp    $0x2,%eax
    je     jump_2e767
    mov    %ecx,%edx
    mov    %esi,%eax
    movb   $0x2,0x8e5(%esi)
  jump_2e762:
    call   func_2df48
  jump_2e767:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2e770:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %edx,0x4(%esp)
    mov    %ebx,(%esp)
    mov    %ecx,%edi
    mov    0x10(%eax),%edx
    mov    0xbf(%eax),%ebx
    mov    0x4(%esp),%ecx
    sub    %ebx,%edx
    cmp    %ecx,%edx
    jbe    jump_2e804
    mov    0x8cd(%eax),%ecx
    sar    $0x10,%ecx
    cmp    $0xffffffff,%ecx
    je     jump_2e89f
    cmpl   $0x0,data_11f100
    jne    jump_2e7db
    mov    0x57(%eax),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_2e7c4
    mov    $data_f8638,%eax
    call   func_4af80
  jump_2e7c4:
    mov    $0x1c01,%ebx
    movswl %di,%eax
    mov    0x8cd(%esi),%ecx
    mov    0x63(%esi),%edx
    push   %eax
    sar    $0x10,%ecx
    jmp    jump_2e7e7
  jump_2e7db:
    movswl %di,%eax
    mov    $0x1c02,%ebx
    push   %eax
    mov    0x63(%esi),%edx
  jump_2e7e7:
    mov    $data_fa35c,%eax
    call   func_520f4
    mov    (%esp),%ebx
    mov    0x4(%esp),%edx
    mov    %esi,%eax
    call   func_2e4a8
    jmp    jump_2e89f
  jump_2e804:
    cmpl   $0xffffffff,0xb3(%eax)
    jne    jump_2e89f
    mov    0x14(%eax),%edx
    mov    0xc(%eax),%eax
    sub    %eax,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    0xc(%esi),%edx
    mov    (%esp),%ebx
    add    %edx,%eax
    cmp    %ebx,%eax
    jbe    jump_2e84b
    mov    $0x191,%edx
    mov    %esi,%eax
    mov    0xa7(%esi),%ebp
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   *0x8(%ebp)
    push   $0x1e
    mov    $0x191,%ebx
    jmp    jump_2e866
  jump_2e84b:
    mov    $0x192,%edx
    mov    %esi,%eax
    mov    0xa7(%esi),%ebp
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   *0x8(%ebp)
    push   $0x1e
    mov    $0x192,%ebx
  jump_2e866:
    mov    $data_fa35c,%eax
    push   $0x0
    mov    0x41(%esi),%edx
    xor    %ecx,%ecx
    call   func_517c4
    movswl %di,%eax
    mov    $0x1,%ebx
    cmp    $0x5,%eax
    jne    jump_2e889
    mov    $0x2,%ebx
  jump_2e889:
    push   $0x0
    mov    $0x193,%ecx
    push   $0x0
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51aec
  jump_2e89f:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2e8a8:
/*----------------------------------------------------------------*/
    mov    %edx,0x8fa(%eax)
    ret


/*----------------------------------------------------------------*/
func_2e8b8:
/*----------------------------------------------------------------*/
    mov    %edx,0x8fe(%eax)
    ret


/*----------------------------------------------------------------*/
func_2e8c0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    cmpl   $0x0,0x8fe(%eax)
    jne    jump_2e8e0
    mov    $0x7ab,%ebx
    mov    $data_818e5,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2e8e0:
    mov    $0x8,%ebx
    lea    0xc7(%ecx),%esi
    xor    %edx,%edx
    mov    0x8fe(%ecx),%eax
    mov    0x8c7(%ecx),%dx
    mov    %eax,%ecx
    mov    %esi,%eax
    call   func_72316
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e908:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    call   func_2e42c
    mov    0x8ea(%ecx),%edx
    test   %edx,%edx
    je     jump_2e92e
    mov    %edx,%eax
    call   func_259ac
    movl   $0x0,0x8ea(%ecx)
  jump_2e92e:
    test   %ebx,%ebx
    je     jump_2e93a
    mov    %ebx,0x8ea(%ecx)
    jmp    jump_2e951
  jump_2e93a:
    mov    $data_818f4,%ebx
    mov    $0x1,%edx
    mov    %esi,%eax
    call   func_2596c
    mov    %eax,0x8ea(%ecx)
  jump_2e951:
    mov    0x8ea(%ecx),%ebx
    test   %ebx,%ebx
    je     jump_2e97d
    movl   $0xffffffff,0x8e6(%ecx)
    movl   $0x0,0x8ee(%ecx)
    mov    $0xffffffff,%eax
    mov    %esi,0x8f2(%ecx)
    pop    %esi
    pop    %ecx
    ret
  jump_2e97d:
    mov    %ebx,0x8e6(%ecx)
    mov    %ebx,0x8f2(%ecx)
    xor    %eax,%eax
    mov    %ebx,0x8ee(%ecx)
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2e994:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    0x8ea(%eax),%ebx
    test   %ebx,%ebx
    je     jump_2e9b3
    mov    %ebx,%eax
    call   func_259ac
    movl   $0x0,0x8ea(%edx)
  jump_2e9b3:
    movl   $0x0,0x8f2(%edx)
    movl   $0x0,0x8ee(%edx)
    movl   $0x0,0x8e6(%edx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2e9d4:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85c58,0xa7(%eax)
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2e9ec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2ea0b
    mov    $data_85bc4,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2ea0b:
    mov    $0x1,%edx
    movl   $data_85c58,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2ea2b
    call   func_72124
  jump_2ea2b:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_2ea34:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x14,%esp
    mov    %eax,%edi
    push   $0x0
    mov    0xab(%eax),%eax
    push   $0x0
    add    $0xc,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x18(%edi),%ax
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    %edi,%eax
    add    $0x4,%eax
    push   %eax
    mov    %eax,-0x8(%ebp)
    call   func_57efc
    add    $0x14,%esp
    mov    data_92e10,%ebx
    push   %ebx
    push   $data_81904
    lea    -0x14(%ebp),%eax
    push   %eax
    xor    %esi,%esi
    call   func_720c9
    mov    -0x8(%ebp),%eax
    add    $0xc,%esp
    mov    %eax,-0x4(%ebp)
    jmp    jump_2ead6
  jump_2ea95:
    mov    -0x17(%eax,%ebp,1),%ebx
    imul   $0x1f,%eax,%eax
    xor    %edx,%edx
    sar    $0x18,%ebx
    mov    data_f458e,%dl
    sub    $0x30,%ebx
    lea    0x2(%eax),%ecx
    push   %edx
    mov    0xab(%edi),%eax
    xor    %edx,%edx
    add    %eax,%ebx
    mov    0x18(%edi),%ax
    push   $0x0
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    inc    %esi
    call   func_4f2a8
  jump_2ead6:
    movswl %si,%eax
    cmp    $0x5,%eax
    jl     jump_2ea95
    mov    -0x4(%ebp),%edx
    mov    $data_fa35c,%eax
    call   func_50690
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2eaf4:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    0xa7(%eax),%ebx
    call   *0xc(%ebx)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2eb00:
/*----------------------------------------------------------------*/
    movswl %dx,%edx
    nop


/*----------------------------------------------------------------*/
func_2eb04:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    cmp    $0x7,%dx
    jb     jump_2c3a5
    jbe    jump_2c232
    cmp    $0xe,%dx
    jb     jump_2c396
    jbe    jump_2c20b
    cmp    $0xf,%dx
    jbe    jump_2c222
    cmp    $0xc9,%dx
    jb     jump_2c3f9
    cmp    $0xca,%dx
    jbe    jump_2c376
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2eb58:
/*----------------------------------------------------------------*/
    cmp    $0xd,%dx
    jne    func_2eb00
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_2eb6c:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85c40,0xa7(%eax)
    call   func_2ebcc
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2eb88:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2eba7
    mov    $data_85bb0,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2eba7:
    mov    $0x1,%edx
    movl   $data_85c40,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2ebc7
    call   func_72124
  jump_2ebc7:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2ebcc:
/*----------------------------------------------------------------*/
    push   %edx
    movl   $0x0,0xab(%eax)
    movw   $0x0,0xb1(%eax)
    movw   $0x0,0xaf(%eax)
    movw   $0x0,0xb3(%eax)
    movw   $0xf2,0xb7(%eax)
    movl   $data_fd3a2,0xb9(%eax)
    xor    %edx,%edx
    movl   $0xffffffff,0xbd(%eax)
    mov    data_86610,%dl
    mov    %dx,0xb5(%eax)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2ec20:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    0xb5(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    mov    %ebp,%eax
    add    $0x4,%eax
    push   %eax
    mov    %eax,0x8(%esp)
    call   func_59d90
    add    $0x8,%esp
    push   $0xf3
    push   $0x0
    mov    0x10(%ebp),%eax
    mov    0x8(%ebp),%ebx
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    mov    0x18(%esp),%ecx
    push   %ecx
    call   func_573c1
    add    $0x1c,%esp
    push   $0xf3
    mov    0x14(%ebp),%eax
    mov    0xc(%ebp),%esi
    push   $0x0
    sub    %esi,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    mov    0x18(%esp),%edi
    push   %edi
    call   func_573c1
    add    $0x1c,%esp
    push   $0xf3
    mov    0x14(%ebp),%eax
    mov    0xc(%ebp),%edx
    push   $0x0
    sub    %edx,%eax
    push   %eax
    push   $0x0
    mov    0x8(%ebp),%ebx
    push   %eax
    mov    0x10(%ebp),%eax
    sub    %ebx,%eax
    push   %eax
    push   %edi
    call   func_573c1
    add    $0x1c,%esp
    push   $0xf3
    mov    0x10(%ebp),%ecx
    push   $0x0
    mov    0x8(%ebp),%esi
    mov    0x14(%ebp),%eax
    push   $0x0
    sub    %esi,%ecx
    mov    0xc(%ebp),%edi
    push   %ecx
    sub    %edi,%eax
    push   %eax
    push   %ecx
    mov    0x18(%esp),%eax
    push   %eax
    call   func_573c1
    add    $0x1c,%esp
    mov    (%esp),%esi
    push   $0x0
    mov    $0x4,%ebx
    mov    0xb5(%ebp),%dx
    push   $0xff
    movswl %dx,%edx
    mov    0xb9(%ebp),%eax
    push   %edx
    mov    0xab(%ebp),%ecx
    lea    0x8(%eax),%edi
    push   $0x0
    mov    $0x2,%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    0xb1(%ebp),%edx
    mov    0xab(%ebp),%eax
    sar    $0x10,%edx
    mov    (%edx,%eax,1),%cl
    movb   $0x0,(%edx,%eax,1)
    mov    0xab(%ebp),%edx
    mov    0xb9(%ebp),%eax
    call   func_2abd4
    mov    0xb1(%ebp),%ebx
    mov    %eax,%edx
    sar    $0x10,%ebx
    mov    0xab(%ebp),%eax
    mov    %cl,(%ebx,%eax,1)
    mov    0x14(%ebp),%eax
    mov    0xc(%ebp),%ebx
    push   $0x98
    sub    %ebx,%eax
    push   $0x0
    sub    $0x3,%eax
    push   %eax
    lea    0x2(%edx),%eax
    push   %eax
    push   $0x3
    push   %eax
    mov    0x18(%esp),%ecx
    push   %ecx
    call   func_573c1
    add    $0x1c,%esp
    mov    $data_fa35c,%eax
    mov    (%esp),%edx
    call   func_50690
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_2ed90:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%edx
    mov    %ecx,%eax
    cmp    $0x3,%di
    jne    jump_2ef6f
    mov    0xbd(%esi),%ecx
    movl   $0x0,0xbd(%esi)
    cmp    $0x30,%bl
    jl     jump_2edbe
    cmp    $0x39,%bl
    jle    jump_2ede0
  jump_2edbe:
    cmp    $0x41,%bl
    jl     jump_2edc8
    cmp    $0x5a,%bl
    jle    jump_2ede0
  jump_2edc8:
    cmp    $0x61,%bl
    jl     jump_2edd2
    cmp    $0x7a,%bl
    jle    jump_2ede0
  jump_2edd2:
    cmp    $0x20,%bl
    je     jump_2ede0
    cmp    $0x2d,%bl
    jne    jump_2ef42
  jump_2ede0:
    test   %ecx,%ecx
    je     jump_2ee04
    movw   $0x0,0xb3(%esi)
    mov    0xb3(%esi),%ax
    mov    %ax,0xb1(%esi)
    mov    0xab(%esi),%eax
    movb   $0x0,(%eax)
  jump_2ee04:
    mov    0xb1(%esi),%ax
    cmp    0xaf(%esi),%ax
    jge    jump_2ee50
    mov    $data_fd3a2,%eax
    mov    0xab(%esi),%edx
    call   func_2abd4
    cmp    $0x5f,%eax
    jge    jump_2ee50
    movsbl %bl,%ebx
    mov    0xb1(%esi),%edx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2efd8
    incw   0xb3(%esi)
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_2ee50:
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    ret
  jump_2ee58:
    mov    $0x6,%edx
    mov    $data_fa35c,%eax
    movswl %di,%ebx
    xor    %ecx,%ecx
    call   func_51f24
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    ret
  jump_2ee74:
    mov    0xb3(%esi),%ax
    cmp    0xb1(%esi),%ax
    jge    jump_2eea1
    mov    0xb1(%esi),%edx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2ef84
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_2eea1:
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    ret
  jump_2eea9:
    mov    0xb1(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_2eeda
    decw   0xb3(%esi)
    mov    0xb1(%esi),%edx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2ef84
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_2eeda:
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    ret
  jump_2eee2:
    mov    0xb1(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_2ef0b
    mov    %esi,%eax
    mov    0xb3(%esi),%di
    mov    0xa7(%esi),%ebx
    dec    %edi
    xor    %edx,%edx
    mov    %di,0xb3(%esi)
    call   *0xc(%ebx)
  jump_2ef0b:
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    ret
  jump_2ef13:
    mov    0xb3(%esi),%ax
    cmp    0xb1(%esi),%ax
    jge    jump_2ef3a
    mov    %eax,%ecx
    mov    0xa7(%esi),%ebx
    xor    %edx,%edx
    inc    %ecx
    mov    %esi,%eax
    mov    %cx,0xb3(%esi)
    call   *0xc(%ebx)
  jump_2ef3a:
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    ret
  jump_2ef42:
    cmp    $0x4b,%eax
    jb     jump_2ef5b
    jbe    jump_2eee2
    cmp    $0x4d,%eax
    jb     jump_2ef6f
    jbe    jump_2ef13
    cmp    $0x53,%eax
    je     jump_2ee74
    jmp    jump_2ef6f
  jump_2ef5b:
    cmp    $0xe,%eax
    jb     jump_2ef6f
    jbe    jump_2eea9
    cmp    $0x1c,%eax
    je     jump_2ee58
  jump_2ef6f:
    movswl %di,%edi
    mov    %eax,%ecx
    mov    %edx,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_2eb04
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_2ef84:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    cmp    0xaf(%eax),%si
    jl     jump_2efa5
    mov    $0x8f2,%ebx
    mov    $data_81909,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2efa5:
    mov    0xb1(%ecx),%bx
    mov    %esi,%eax
    cmp    %bx,%si
    jge    jump_2efcd
  jump_2efb3:
    movswl %ax,%edx
    mov    0xab(%ecx),%ebx
    add    %ebx,%edx
    mov    0x1(%edx),%bl
    mov    %bl,(%edx)
    inc    %eax
    cmp    0xb1(%ecx),%ax
    jl     jump_2efb3
  jump_2efcd:
    decw   0xb1(%ecx)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2efd8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %bl,(%esp)
    cmp    0xb1(%eax),%si
    jle    jump_2efff
    mov    $0x903,%ebx
    mov    $data_81918,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2efff:
    mov    0xb1(%ecx),%ax
    cmp    0xaf(%ecx),%ax
    jl     jump_2f020
    mov    $0x904,%ebx
    mov    $data_81927,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2f020:
    mov    0xb1(%ecx),%di
    cmp    %di,%si
    jne    jump_2f048
    mov    0xab(%ecx),%ebx
    movswl %di,%edx
    mov    (%esp),%al
    mov    %al,(%edx,%ebx,1)
    mov    0xab(%ecx),%ebx
    movb   $0x0,0x1(%edx,%ebx,1)
    jmp    jump_2f065
  jump_2f048:
    mov    %edi,%eax
    cmp    %si,%di
    jl     jump_2f065
  jump_2f04f:
    movswl %ax,%ebx
    mov    0xab(%ecx),%edx
    add    %ebx,%edx
    mov    (%edx),%bl
    dec    %eax
    mov    %bl,0x1(%edx)
    cmp    %si,%ax
    jge    jump_2f04f
  jump_2f065:
    mov    0xab(%ecx),%edx
    movswl %si,%ebx
    mov    (%esp),%al
    mov    %al,(%edx,%ebx,1)
    incw   0xb1(%ecx)
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2f084:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,(%esp)
    test   %edx,%edx
    jne    jump_2f0a6
    mov    $0x91b,%ebx
    mov    $data_81936,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2f0a6:
    mov    (%esp),%ecx
    mov    %edi,0xab(%esi)
    mov    (%esp),%edx
    mov    %cx,0xaf(%esi)
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    %cx,0xb1(%esi)
    cmp    %dx,%cx
    jle    jump_2f0e0
    mov    $0x921,%ebx
    mov    $data_81945,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2f0e0:
    mov    0xb1(%esi),%cx
    mov    %cx,0xb3(%esi)
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2f0f8:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85c28,0xa7(%eax)
    call   func_2f158
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2f114:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2f133
    mov    $data_85b9c,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2f133:
    mov    $0x1,%edx
    movl   $data_85c28,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2f153
    call   func_72124
  jump_2f153:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2f158:
/*----------------------------------------------------------------*/
    movl   $0x0,0xab(%eax)
    movw   $0x3,0xaf(%eax)
    movw   $0xf3,0xb1(%eax)
    ret


/*----------------------------------------------------------------*/
func_2f178:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    push   $0xf2
    lea    0x4(%eax),%esi
    push   %esi
    call   func_59d90
    mov    0x5f(%ebp),%edx
    add    $0x8,%esp
    cmp    $0xffffffff,%edx
    jne    jump_2f224
    push   $0xf3
    push   $0x0
    mov    0x10(%ebp),%eax
    mov    0x8(%ebp),%ebx
    push   $0x0
    sub    %ebx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
    push   $0xf3
    mov    0x14(%ebp),%eax
    mov    0xc(%ebp),%ecx
    push   $0x0
    sub    %ecx,%eax
    push   %eax
    push   $0x0
    push   $0x0
    push   $0x0
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
    push   $0xf3
    mov    0x14(%ebp),%eax
    mov    0xc(%ebp),%edi
    push   $0x0
    sub    %edi,%eax
    push   %eax
    push   $0x0
    mov    0x8(%ebp),%edx
    push   %eax
    mov    0x10(%ebp),%eax
    sub    %edx,%eax
    push   %eax
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
    push   $0xf3
    mov    0x10(%ebp),%edx
    push   $0x0
    mov    0x8(%ebp),%ebx
    mov    0x14(%ebp),%eax
    push   $0x0
    sub    %ebx,%edx
    mov    0xc(%ebp),%ecx
    push   %edx
    sub    %ecx,%eax
    push   %eax
    push   %edx
    push   %esi
    call   func_573c1
    add    $0x1c,%esp
  jump_2f224:
    mov    0x10(%ebp),%eax
    sub    0x8(%ebp),%eax
    mov    0xab(%ebp),%edi
    lea    -0x5(%eax),%edx
    test   %edi,%edi
    je     jump_2f26e
    lea    0x4(%ebp),%esi
    mov    %edi,%ecx
    push   %edx
    mov    0xaf(%ebp),%bx
    mov    0xb1(%ebp),%ax
    push   $0xff
    cwtl
    mov    $data_fd3aa,%edi
    push   %eax
    movswl %bx,%eax
    xor    %edx,%edx
    push   %eax
    xor    %ebx,%ebx
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_2f26e:
    mov    $data_fa35c,%eax
    lea    0x4(%ebp),%edx
    call   func_50690
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2f284:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    data_fd35e,%ebx
    mov    0x41(%esi),%ecx
    mov    $0xf2,%eax
    cmp    %ecx,%ebx
    jne    jump_2f2a1
    cmp    $0x2,%edx
    jne    jump_2f2a6
  jump_2f2a1:
    cmp    $0x3,%edx
    jne    jump_2f2ab
  jump_2f2a6:
    mov    $0x96,%eax
  jump_2f2ab:
    push   %eax
    lea    0x4(%esi),%eax
    push   %eax
    call   func_59d90
    mov    0x1c(%esi),%eax
    sar    $0x10,%eax
    add    $0x8,%esp
    cmp    $0xffffffff,%eax
    jne    jump_2f2d4
    mov    $0x9a0,%ebx
    mov    $data_81954,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2f2d4:
    mov    0x1c(%esi),%ebx
    sar    $0x10,%ebx
    cmp    $0xffffffff,%ebx
    je     jump_2f30a
    xor    %eax,%eax
    mov    data_f458e,%al
    lea    0x4(%esi),%edi
    push   %eax
    xor    %edx,%edx
    mov    0x18(%esi),%ax
    push   $0x0
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    xor    %ecx,%ecx
    call   func_1b084
    mov    %eax,%edx
    mov    %edi,%eax
    call   func_4f2a8
  jump_2f30a:
    mov    $data_fa35c,%eax
    lea    0x4(%esi),%edx
    call   func_50690
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2f31c:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    0xa7(%eax),%ebx
    mov    $0x3,%edx
    call   *0xc(%ebx)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2f330:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85cec,0xa7(%eax)
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_2f348:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_2f367
    mov    $data_85cd8,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_2f367:
    mov    $0x1,%edx
    movl   $data_85cec,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_2f387
    call   func_72124
  jump_2f387:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_2f390:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    movl   $0x0,0xdab(%eax)
    lea    0xab(%ecx),%edi
    mov    0xdab(%eax),%eax
    mov    %edx,%esi
    mov    %eax,0xda7(%ecx)
    push   %edi
  jump_2f3b4:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2f3cc
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2f3b4
  jump_2f3cc:
    pop    %edi
    lea    0xc9(%ecx),%edi
    mov    %ebx,%esi
    push   %edi
  jump_2f3d6:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2f3ee
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2f3d6
  jump_2f3ee:
    pop    %edi
    mov    %ecx,%eax
    call   func_2f598
    mov    data_fe582,%eax
    mov    $0x78,%edx
    sar    $0x10,%eax
    mov    $0x98,%ebx
    test   %eax,%eax
    je     jump_2f425
    cmp    $0x1,%eax
    je     jump_2f425
    cmp    $0x7,%eax
    je     jump_2f425
    cmp    $0x8,%eax
    je     jump_2f425
    cmp    $0x10,%eax
    je     jump_2f425
    cmp    $0x14,%eax
    jne    jump_2f42a
  jump_2f425:
    mov    $0x50,%ebx
  jump_2f42a:
    mov    %ebx,0x8(%ecx)
    mov    %edx,0xc(%ecx)
    add    $0x14f,%ebx
    add    $0xff,%edx
    mov    %ebx,0x10(%ecx)
    mov    %edx,0x14(%ecx)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_2f448:
/*----------------------------------------------------------------*/
    push   %edi
    cmp    $0x6,%dx
    jb     jump_2f506
    cmp    $0x7,%dx
    jbe    jump_2f479
    cmp    $0xd,%dx
    jb     jump_2f4f6
    jbe    jump_2f479
    cmp    $0x32,%dx
    jb     jump_2f479
    jbe    jump_2f4bd
    cmp    $0xc9,%dx
    jb     jump_2f479
    cmp    $0xca,%dx
  jump_2f479:
    movswl %dx,%edx
    call   func_2eb04
    pop    %edi
    ret
  jump_2f483:
    movl   $0xffffffff,0x35(%eax)
    mov    0xa7(%eax),%ebx
    movl   $0xffffffff,0x39(%eax)
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    pop    %edi
    ret
  jump_2f4a0:
    mov    $0xca,%ebx
    mov    $0x6,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    call   func_51f24
    mov    $0xffffffff,%eax
    pop    %edi
    ret
  jump_2f4bd:
    mov    0xda7(%eax),%edx
    cmp    0xdab(%eax),%edx
    jge    jump_2f4e3
    lea    0x1(%edx),%edi
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    mov    %edi,0xda7(%eax)
    call   *0xc(%ebx)
    xor    %eax,%eax
    pop    %edi
    ret
  jump_2f4e3:
    mov    $0x6,%edx
    mov    $data_fa35c,%eax
    call   func_51f24
    xor    %eax,%eax
    pop    %edi
    ret
  jump_2f4f6:
    cmp    $0xc,%dx
    je     jump_2f4a0
    movswl %dx,%edx
    call   func_2eb04
    pop    %edi
    ret
  jump_2f506:
    cmp    $0x2,%dx
    jb     jump_2f522
    jbe    jump_2f479
    cmp    $0x5,%dx
    je     jump_2f4a0
    movswl %dx,%edx
    call   func_2eb04
    pop    %edi
    ret
  jump_2f522:
    cmp    $0x1,%dx
    je     jump_2f483
    movswl %dx,%edx
    call   func_2eb04
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_2f538:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%ecx
    xor    %edi,%edi
    xor    %ebp,%ebp
  jump_2f545:
    mov    $0xc8,%edx
    mov    %esi,%ebx
    mov    %ecx,%eax
    call   func_7370e
    test   %eax,%eax
    jne    jump_2f568
    mov    $0x9e,%ebx
    mov    $data_81964,%edx
    mov    %ebp,%eax
    call   func_25888
  jump_2f568:
    mov    (%ecx),%ah
    cmp    $0x20,%ah
    je     jump_2f58d
    cmp    $0x9,%ah
    je     jump_2f58d
    cmp    $0xa,%ah
    je     jump_2f58d
    cmp    $0xd,%ah
    je     jump_2f58d
    cmp    $0x2f,%ah
    je     jump_2f58d
    cmp    $0x23,%ah
    je     jump_2f58d
    mov    $0xffffffff,%edi
  jump_2f58d:
    test   %edi,%edi
    je     jump_2f545
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2f598:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1bc,%esp
    sub    $0x82,%ebp
    mov    %eax,0x76(%ebp)
    mov    $0x2,%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_2c938
    mov    0x76(%ebp),%eax
    lea    0x10e(%eax),%edx
  jump_2f5c6:
    add    $0x1b,%eax
    movl   $0x0,0xc91(%eax)
    cmp    %edx,%eax
    jne    jump_2f5c6
    mov    0x76(%ebp),%eax
    mov    $0xbb8,%ebx
    add    $0xdd,%eax
    xor    %edx,%edx
    xor    %ecx,%ecx
    movl   $0x0,0xcc6(%eax)
    call   func_72280
    xor    %edx,%edx
    mov    %ecx,0x6e(%ebp)
    mov    %edx,0x66(%ebp)
    mov    %edx,0x62(%ebp)
    mov    0x76(%ebp),%edx
    mov    data_efd8e,%ax
    mov    0x76(%ebp),%ecx
    mov    %ax,0x18(%edx)
    lea    0xab(%edx),%eax
    movw   $0x0,0x1e(%edx)
    xor    %edx,%edx
    add    $0xc9,%ecx
    call   func_1bb10
    mov    %eax,0x3e(%ebp)
    mov    $0xe8,%edi
    xor    %esi,%esi
  jump_2f635:
    lea    -0x13a(%ebp),%edx
    mov    0x3e(%ebp),%eax
    call   func_2f538
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_81973
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_727ed
    add    $0xc,%esp
    mov    $data_81976,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2f6cc
    lea    -0x6e(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_8197b
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_727ed
    add    $0x10,%esp
    lea    -0x6e(%ebp),%edx
    mov    %ecx,%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2f69f
    movl   $0x1,0x6e(%ebp)
    jmp    jump_2f6cc
  jump_2f69f:
    lea    -0x6e(%ebp),%edx
    mov    $data_81981,%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2f6cc
    push   %ecx
    push   $data_81985
    mov    $data_819a9,%edx
    call   func_258ec
    add    $0x8,%esp
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_25898
  jump_2f6cc:
    mov    0x6e(%ebp),%edx
    cmp    %edx,%esi
    je     jump_2f635
    mov    0x76(%ebp),%eax
    mov    $0xffffffff,%ebx
    add    $0xc95,%eax
    mov    %ebx,0x6a(%ebp)
    mov    %ebx,0x5a(%ebp)
    mov    %eax,0x42(%ebp)
    cmp    $0x2,%edx
    je     jump_2fe3f
    mov    0x76(%ebp),%eax
    add    $0xdd,%eax
    mov    %eax,0x56(%ebp)
    mov    0x66(%ebp),%eax
    shl    $0x2,%eax
    mov    0x62(%ebp),%edx
    mov    %eax,0x72(%ebp)
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    %eax,0x5e(%ebp)
  jump_2f723:
    lea    -0x13a(%ebp),%edx
    mov    0x3e(%ebp),%eax
    call   func_2f538
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_819b8
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_727ed
    add    $0xc,%esp
    mov    $data_819bb,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2f766
    movl   $0x2,0x6e(%ebp)
    jmp    jump_2fe35
  jump_2f766:
    mov    $data_819c0,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2f7ad
    lea    0x4a(%ebp),%eax
    push   %eax
    lea    0x46(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_819c4
    lea    -0x13a(%ebp),%eax
    push   %eax
    mov    0x42(%ebp),%edx
    call   func_727ed
    mov    0x46(%ebp),%eax
    mov    %ax,0x13(%edx)
    mov    0x4a(%ebp),%eax
    add    $0x14,%esp
    mov    %ax,0x15(%edx)
    jmp    jump_2fe35
  jump_2f7ad:
    mov    $data_819cd,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2f86c
    mov    0x76(%ebp),%eax
    mov    0xda3(%eax),%edx
    inc    %edx
    mov    %edx,0xda3(%eax)
    cmp    $0xa,%edx
    jl     jump_2f7e8
    mov    $0x124,%ebx
    mov    $data_819d3,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2f7e8:
    cmpl   $0xffffffff,0x6a(%ebp)
    jne    jump_2f7f5
    xor    %edi,%edi
    mov    %edi,0x6a(%ebp)
    jmp    jump_2f7f9
  jump_2f7f5:
    addl   $0x1b,0x42(%ebp)
  jump_2f7f9:
    mov    0x42(%ebp),%eax
    movb   $0x0,(%eax)
    movw   $0x0,0x1(%eax)
    movw   $0x0,0x3(%eax)
    movw   $0x0,0x13(%eax)
    movw   $0x0,0x15(%eax)
    lea    0x52(%ebp),%eax
    push   %eax
    lea    0x4e(%ebp),%eax
    push   %eax
    lea    0x4a(%ebp),%eax
    push   %eax
    lea    0x46(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_819e2
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_727ed
    add    $0x1c,%esp
    cmp    $0x5,%eax
    jne    jump_2fe35
    mov    0x42(%ebp),%edx
    mov    0x46(%ebp),%eax
    mov    %ax,0x1(%edx)
    mov    0x4a(%ebp),%eax
    mov    %ax,0x3(%edx)
    mov    0x4e(%ebp),%eax
    mov    %ax,0x13(%edx)
    mov    0x52(%ebp),%eax
    mov    %ax,0x15(%edx)
    jmp    jump_2fe35
  jump_2f86c:
    mov    $data_819f1,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2f8e3
    cmpl   $0xffffffff,0x5a(%ebp)
    jne    jump_2f88a
    xor    %ecx,%ecx
    mov    %ecx,0x5a(%ebp)
    jmp    jump_2f89a
  jump_2f88a:
    mov    0x72(%ebp),%edx
    mov    0x66(%ebp),%ebx
    add    $0x4,%edx
    inc    %ebx
    mov    %edx,0x72(%ebp)
    mov    %ebx,0x66(%ebp)
  jump_2f89a:
    mov    0x76(%ebp),%eax
    mov    0x69(%eax),%eax
    mov    0x66(%ebp),%esi
    sar    $0x10,%eax
    cmp    %esi,%eax
    jg     jump_2f8bb
    mov    $0x145,%ebx
    mov    $data_819f8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2f8bb:
    mov    0x76(%ebp),%edx
    mov    0x72(%ebp),%edi
    mov    0x67(%edx),%edx
    add    %edi,%edx
    push   $0x0
    mov    $0xe,%ebx
    mov    (%edx),%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_520f4
    jmp    jump_2fe35
  jump_2f8e3:
    mov    $data_81a07,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2f922
    mov    0x76(%ebp),%eax
    mov    0x72(%ebp),%edx
    mov    0x67(%eax),%eax
    add    %edx,%eax
    mov    (%eax),%eax
    add    $0x20,%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_81a0d
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_727ed
    add    $0x10,%esp
    jmp    jump_2fe35
  jump_2f922:
    mov    $data_81a13,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2f967
    lea    0x46(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_81a17
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_727ed
    mov    0x76(%ebp),%eax
    mov    0x72(%ebp),%ebx
    mov    0x67(%eax),%eax
    add    %ebx,%eax
    mov    (%eax),%edx
    mov    0x46(%ebp),%eax
    add    $0x10,%esp
    mov    %eax,0x47(%edx)
    jmp    jump_2fe35
  jump_2f967:
    mov    $data_81a1d,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2f9cd
    lea    0x52(%ebp),%eax
    push   %eax
    lea    0x4e(%ebp),%eax
    push   %eax
    lea    0x4a(%ebp),%eax
    push   %eax
    lea    0x46(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_81a22
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_727ed
    mov    0x76(%ebp),%eax
    mov    0x72(%ebp),%ecx
    mov    0x67(%eax),%eax
    add    %ecx,%eax
    mov    (%eax),%edx
    mov    0x46(%ebp),%eax
    mov    %eax,0x8(%edx)
    mov    0x4a(%ebp),%eax
    mov    %eax,0xc(%edx)
    mov    0x4e(%ebp),%eax
    mov    %eax,0x10(%edx)
    add    $0x4,%edx
    mov    0x52(%ebp),%eax
    add    $0x1c,%esp
    mov    %eax,0x10(%edx)
    jmp    jump_2fe35
  jump_2f9cd:
    mov    $data_81a31,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fa9e
    lea    0xa(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_81a36
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_727ed
    mov    0x76(%ebp),%eax
    mov    0x72(%ebp),%esi
    mov    0x67(%eax),%eax
    add    %esi,%eax
    mov    $data_81a3c,%edx
    add    $0x10,%esp
    mov    (%eax),%ebx
    lea    0xa(%ebp),%eax
    add    $0x4,%ebx
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fa54
    mov    0x76(%ebp),%eax
    mov    0x8(%eax),%eax
    add    $0xf,%eax
    mov    %eax,0x4(%ebx)
    mov    0x76(%ebp),%eax
    mov    0x14(%eax),%eax
    sub    $0x32,%eax
    mov    %eax,0x8(%ebx)
    mov    0x76(%ebp),%eax
    mov    0x8(%eax),%eax
    add    $0x5a,%eax
    mov    %eax,0xc(%ebx)
    mov    0x76(%ebp),%eax
    mov    0x14(%eax),%eax
    sub    $0xf,%eax
    mov    %eax,0x10(%ebx)
    jmp    jump_2fe35
  jump_2fa54:
    mov    $data_81a3f,%edx
    lea    0xa(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fe35
    mov    0x76(%ebp),%eax
    mov    0x10(%eax),%eax
    sub    $0x5a,%eax
    mov    %eax,0x4(%ebx)
    mov    0x76(%ebp),%eax
    mov    0x14(%eax),%eax
    sub    $0x32,%eax
    mov    %eax,0x8(%ebx)
    mov    0x76(%ebp),%eax
    mov    0x10(%eax),%eax
    sub    $0xf,%eax
    mov    %eax,0xc(%ebx)
    mov    0x76(%ebp),%eax
    mov    0x14(%eax),%eax
    sub    $0xf,%eax
    mov    %eax,0x10(%ebx)
    jmp    jump_2fe35
  jump_2fa9e:
    mov    $data_81a42,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fc93
    mov    0x76(%ebp),%eax
    mov    0xda3(%eax),%edi
    inc    %edi
    mov    %edi,0xda3(%eax)
    cmp    $0xa,%edi
    jl     jump_2fad9
    mov    $0x177,%ebx
    mov    $data_81a47,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2fad9:
    cmpl   $0x5,0x62(%ebp)
    jl     jump_2faf0
    mov    $0x178,%ebx
    mov    $data_81a56,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2faf0:
    cmpl   $0xffffffff,0x6a(%ebp)
    jne    jump_2fafd
    xor    %edi,%edi
    mov    %edi,0x6a(%ebp)
    jmp    jump_2fb01
  jump_2fafd:
    addl   $0x1b,0x42(%ebp)
  jump_2fb01:
    mov    0x42(%ebp),%eax
    movb   $0x1,(%eax)
    movl   $0x0,0xf(%eax)
    mov    0x5e(%ebp),%eax
    lea    0x258(%eax),%edx
    mov    %edx,0x5e(%ebp)
    mov    0x56(%ebp),%edx
    add    %eax,%edx
    mov    0x42(%ebp),%eax
    mov    %edx,0x5(%eax)
    movb   $0x0,(%edx)
    movl   $data_fd3a2,0xb(%eax)
    movw   $0x0,0x13(%eax)
    movw   $0x0,0x15(%eax)
    movw   $0xffff,0x9(%eax)
    lea    0x4e(%ebp),%eax
    push   %eax
    lea    0x4a(%ebp),%eax
    push   %eax
    lea    0x46(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    mov    0x62(%ebp),%ebx
    push   $data_81a65
    lea    -0x13a(%ebp),%eax
    inc    %ebx
    push   %eax
    mov    %ebx,0x62(%ebp)
    call   func_727ed
    add    $0x18,%esp
    cmp    $0x4,%eax
    jne    jump_2fb89
    mov    0x42(%ebp),%edx
    mov    0x46(%ebp),%eax
    mov    %ax,0x13(%edx)
    mov    0x4a(%ebp),%eax
    mov    %ax,0x15(%edx)
    mov    0x4e(%ebp),%eax
    mov    %ax,0x9(%edx)
  jump_2fb89:
    xor    %ecx,%ecx
    mov    %ecx,0x7a(%ebp)
    mov    %ecx,0x7e(%ebp)
  jump_2fb91:
    lea    -0x13a(%ebp),%edx
    mov    0x3e(%ebp),%eax
    mov    $0x7,%ebx
    call   func_2f538
    mov    $data_81a71,%edx
    lea    -0x13a(%ebp),%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_2fbc1
    movl   $0xffffffff,0x7a(%ebp)
    jmp    jump_2fc20
  jump_2fbc1:
    lea    -0x13a(%ebp),%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    0x7e(%ebp),%edi
    add    %ecx,%edi
    mov    %edi,0x7e(%ebp)
    cmp    $0x254,%edi
    jl     jump_2fbf2
    mov    $0x19e,%ebx
    mov    $data_81a79,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2fbf2:
    mov    0x42(%ebp),%edi
    lea    -0x13a(%ebp),%esi
    mov    0x5(%edi),%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_2fc07:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_2fc1f
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_2fc07
  jump_2fc1f:
    pop    %edi
  jump_2fc20:
    cmpl   $0x0,0x7a(%ebp)
    je     jump_2fb91
    mov    0x42(%ebp),%eax
    cmpl   $0x0,0x5(%eax)
    jne    jump_2fc44
    mov    $0x1a6,%ebx
    mov    $data_81a88,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2fc44:
    mov    0x42(%ebp),%ecx
    mov    0x5(%ecx),%ecx
    mov    (%ecx),%ah
    xor    %esi,%esi
    test   %ah,%ah
    je     jump_2fe35
    mov    $data_81a97,%edi
  jump_2fc5b:
    cmp    $0x255,%esi
    jl     jump_2fc71
    mov    $0x1ac,%ebx
    mov    %edi,%edx
    xor    %eax,%eax
    call   func_25878
  jump_2fc71:
    mov    (%ecx),%dl
    cmp    $0xa,%dl
    jne    jump_2fc7d
    movb   $0x20,(%ecx)
    jmp    jump_2fc85
  jump_2fc7d:
    cmp    $0x40,%dl
    jne    jump_2fc85
    movb   $0xa,(%ecx)
  jump_2fc85:
    mov    0x1(%ecx),%bl
    inc    %ecx
    inc    %esi
    test   %bl,%bl
    jne    jump_2fc5b
    jmp    jump_2fe35
  jump_2fc93:
    mov    $data_81aa6,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fce5
    mov    0x76(%ebp),%edx
    mov    0x76(%ebp),%eax
    mov    0x10(%edx),%edx
    mov    0x8(%eax),%edi
    sub    %edi,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    0x42(%ebp),%edx
    mov    %ax,0x13(%edx)
    mov    0x76(%ebp),%eax
    mov    0x14(%eax),%edx
    mov    0xc(%eax),%ebx
    sub    $0x32,%edx
    sub    %ebx,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    0x42(%ebp),%edx
    mov    %ax,0x15(%edx)
    jmp    jump_2fe35
  jump_2fce5:
    mov    $data_81ab0,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fd56
    lea    0xa(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    push   $data_81ab5
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_727ed
    add    $0x10,%esp
    mov    $data_81abb,%edx
    lea    0xa(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fd32
    mov    0x42(%ebp),%eax
    movl   $data_fd3a2,0xb(%eax)
    jmp    jump_2fe35
  jump_2fd32:
    mov    $data_81ac1,%edx
    lea    0xa(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fe35
    mov    0x42(%ebp),%eax
    movl   $data_fd382,0xb(%eax)
    jmp    jump_2fe35
  jump_2fd56:
    mov    $data_81ac7,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fe11
    xor    %ecx,%ecx
    imul   $0xa,%ecx,%ebx
    lea    0x32(%ebp),%eax
    push   %eax
    lea    0x28(%ebp),%eax
    push   %eax
    lea    0x1e(%ebp),%eax
    push   %eax
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0xa(%ebp),%eax
    push   %eax
    lea    -0x32(%ebp),%eax
    push   %eax
    mov    $data_81acd,%eax
    push   %eax
    lea    -0x13a(%ebp),%eax
    push   %eax
    call   func_727ed
    lea    -0x1(%eax),%esi
    lea    0xa(%ebp),%eax
    add    $0x20,%esp
    add    %eax,%ebx
    jmp    jump_2fdf4
  jump_2fda7:
    mov    $data_81ae5,%edx
    mov    %ebx,%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fdc0
    mov    0x42(%ebp),%eax
    orb    $0x1,0xf(%eax)
    jmp    jump_2fdf0
  jump_2fdc0:
    mov    $data_81aeb,%edx
    mov    %ebx,%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fdd9
    mov    0x42(%ebp),%eax
    orb    $0x20,0xf(%eax)
    jmp    jump_2fdf0
  jump_2fdd9:
    mov    $data_81af0,%edx
    mov    %ebx,%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fdf0
    mov    0x42(%ebp),%eax
    orb    $0x10,0xf(%eax)
  jump_2fdf0:
    inc    %ecx
    add    $0xa,%ebx
  jump_2fdf4:
    cmp    %esi,%ecx
    jge    jump_2fe35
    mov    $data_81adf,%edx
    mov    %ebx,%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fda7
    mov    0x42(%ebp),%eax
    orb    $0x2,0xf(%eax)
    jmp    jump_2fdf0
  jump_2fe11:
    mov    $data_81af5,%edx
    lea    -0x32(%ebp),%eax
    call   func_729fa
    test   %eax,%eax
    jne    jump_2fe35
    mov    0x42(%ebp),%eax
    movl   $0xffffffff,0x17(%eax)
    mov    0x76(%ebp),%eax
    incl   0xdab(%eax)
  jump_2fe35:
    cmpl   $0x2,0x6e(%ebp)
    jne    jump_2f723
  jump_2fe3f:
    mov    0x3e(%ebp),%eax
    call   func_7280e
    lea    0x82(%ebp),%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_2fe54:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x80,%esp
    mov    %eax,0x74(%esp)
    push   $0xf2
    lea    0x4(%eax),%esi
    push   %esi
    call   func_59d90
    add    $0x8,%esp
    mov    0x74(%esp),%edx
    xor    %eax,%eax
    mov    0x18(%edx),%ax
    cmp    $0xffff,%eax
    je     jump_2feae
    push   $0x0
    mov    0x1c(%edx),%edx
    push   $0x0
    sar    $0x10,%edx
    push   %edx
    xor    %edx,%edx
    mov    data_efd44(,%eax,2),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_57efc
    add    $0x14,%esp
  jump_2feae:
    mov    0x74(%esp),%edx
    mov    $data_fa35c,%eax
    xor    %edi,%edi
    add    $0x4,%edx
    xor    %esi,%esi
    call   func_50690
    xor    %eax,%eax
    xor    %edx,%edx
    jmp    jump_2fecd
  jump_2fec9:
    add    $0x4,%edx
    inc    %eax
  jump_2fecd:
    mov    0x74(%esp),%ebx
    mov    0x69(%ebx),%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_2fef5
    mov    0x74(%esp),%ebx
    mov    0x67(%ebx),%ebx
    mov    (%edx,%ebx,1),%ebx
    cmpl   $0xffffffff,0x35(%ebx)
    jne    jump_2fec9
    add    $0x4,%esi
    inc    %edi
    mov    %eax,-0x4(%esp,%esi,1)
    jmp    jump_2fec9
  jump_2fef5:
    mov    0x74(%esp),%esi
    mov    0x74(%esp),%ebx
    mov    0x8(%esi),%esi
    mov    0x8(%ebx),%ebx
    add    $0x8,%esi
    add    $0x147,%ebx
    test   %edi,%edi
    jle    jump_2ff6f
    mov    %edi,%ecx
    shl    $0x2,%edi
    xor    %ebp,%ebp
    mov    %edi,0x68(%esp)
  jump_2ff1b:
    mov    0x74(%esp),%edx
    mov    (%esp,%ebp,1),%eax
    mov    0x67(%edx),%edx
    mov    (%edx,%eax,4),%edi
    mov    0x74(%esp),%eax
    mov    %esi,0x8(%edi)
    mov    0xc(%eax),%eax
    add    $0xd9,%eax
    mov    %eax,0xc(%edi)
    mov    0x74(%esp),%eax
    mov    0xc(%eax),%eax
    mov    %ebx,%edx
    add    $0xf7,%eax
    sub    %esi,%edx
    mov    %eax,0x14(%edi)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    add    %eax,%esi
    add    $0x4,%edi
    cmp    %ebx,%esi
    jle    jump_2ff5f
    mov    %ebx,%esi
  jump_2ff5f:
    dec    %ecx
    add    $0x4,%ebp
    mov    %esi,0xc(%edi)
    mov    0x68(%esp),%edi
    inc    %esi
    cmp    %edi,%ebp
    jl     jump_2ff1b
  jump_2ff6f:
    mov    0x74(%esp),%esi
    lea    0x50(%esp),%edi
    lea    0x4(%esi),%esi
    mov    0x74(%esp),%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x8(%eax),%eax
    add    $0xa,%eax
    mov    %eax,0x54(%esp)
    mov    0x74(%esp),%eax
    mov    0xc(%eax),%eax
    add    $0xa,%eax
    mov    %eax,0x58(%esp)
    mov    0x74(%esp),%eax
    mov    0x8(%eax),%eax
    add    $0x145,%eax
    mov    %eax,0x5c(%esp)
    mov    0x74(%esp),%eax
    mov    0xc(%eax),%eax
    add    $0xcf,%eax
    mov    %eax,0x60(%esp)
    mov    0x74(%esp),%eax
    xor    %edx,%edx
    mov    0xda7(%eax),%ebx
    mov    %edx,0x70(%esp)
    test   %ebx,%ebx
    jle    jump_30003
  jump_2ffcf:
    mov    0x74(%esp),%ecx
    mov    0x70(%esp),%ebx
    cmp    0xda3(%ecx),%ebx
    jge    jump_30003
    cmpl   $0xffffffff,0xcac(%eax)
    jne    jump_2ffe9
    inc    %edx
  jump_2ffe9:
    mov    0x70(%esp),%ecx
    mov    0x74(%esp),%ebx
    add    $0x1b,%eax
    inc    %ecx
    mov    0xda7(%ebx),%esi
    mov    %ecx,0x70(%esp)
    cmp    %esi,%edx
    jl     jump_2ffcf
  jump_30003:
    mov    0x70(%esp),%edx
    xor    %ebp,%ebp
    lea    0x0(,%edx,8),%eax
    mov    %ebp,0x6c(%esp)
    sub    %edx,%eax
    mov    0x74(%esp),%ebp
    shl    $0x2,%eax
    add    $0xc95,%ebp
    sub    %edx,%eax
    add    %eax,%ebp
    mov    %edx,%eax
    mov    0x74(%esp),%edx
    cmp    0xda3(%edx),%eax
    jge    jump_30152
  jump_30039:
    cmpl   $0xffffffff,0x6c(%esp)
    je     jump_30152
    mov    0x17(%ebp),%eax
    mov    %eax,0x6c(%esp)
    mov    0x0(%ebp),%ah
    test   %ah,%ah
    jne    jump_30098
    mov    0x13(%ebp),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x11(%ebp),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    xor    %eax,%eax
    mov    0x1(%ebp),%dx
    mov    0x3(%ebp),%ax
    mov    data_efd44(,%edx,2),%dx
    push   %eax
    mov    $data_11f10c,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    lea    0x60(%esp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_30134
  jump_30098:
    cmp    $0x1,%ah
    jne    jump_3011e
    mov    0xf(%ebp),%bl
    xor    %edx,%edx
    test   $0x2,%bl
    jne    jump_300bd
    mov    0x5c(%esp),%eax
    sub    0x54(%esp),%eax
    mov    0x11(%ebp),%edx
    sar    $0x10,%edx
    sub    %edx,%eax
    mov    %eax,%edx
  jump_300bd:
    push   %edx
    mov    0x13(%ebp),%ebx
    mov    0x11(%ebp),%eax
    mov    0x5(%ebp),%ecx
    mov    0xf(%ebp),%si
    push   $0xff
    mov    %si,0x80(%esp)
    mov    0x9(%ebp),%si
    sar    $0x10,%ebx
    mov    %si,0x84(%esp)
    sar    $0x10,%eax
    mov    0x82(%esp),%edx
    mov    %eax,0x6c(%esp)
    sar    $0x10,%edx
    mov    0xb(%ebp),%eax
    push   %edx
    mov    0x82(%esp),%edx
    lea    0x5c(%esp),%esi
    sar    $0x10,%edx
    lea    0x8(%eax),%edi
    push   %edx
    mov    0x74(%esp),%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    jmp    jump_30134
  jump_3011e:
    cmp    $0x2,%ah
    je     jump_30134
    mov    $0x245,%ebx
    mov    $data_81afd,%edx
    xor    %eax,%eax
    call   func_25888
  jump_30134:
    mov    0x70(%esp),%esi
    mov    0x74(%esp),%edx
    add    $0x1b,%ebp
    inc    %esi
    mov    0xda3(%edx),%edi
    mov    %esi,0x70(%esp)
    cmp    %edi,%esi
    jl     jump_30039
  jump_30152:
    mov    0x74(%esp),%eax
    xor    %edx,%edx
    call   func_2c8f8
    add    $0x80,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_30170:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x84,%esp
    mov    %eax,%ebp
    mov    $0x9,%esi
    mov    %edx,0x70(%esp)
    mov    %esi,0x48(%esp)
    test   %ecx,%ecx
    je     jump_301a1
    cmp    $0x1,%ebx
    je     jump_30197
    cmpl   $0xffffffff,0x8(%edx)
    je     jump_301a1
  jump_30197:
    movl   $0xf3,0x48(%esp)
    jmp    jump_301c7
  jump_301a1:
    mov    0x70(%esp),%eax
    mov    0x8(%eax),%edx
    cmp    $0xffffffff,%edx
    je     jump_301c7
    mov    0x70(%esp),%ebx
    lea    0x0(,%edx,4),%eax
    add    %ebx,%eax
    mov    0x28(%eax),%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0x48(%esp)
  jump_301c7:
    mov    0x70(%esp),%eax
    mov    0x6c(%eax),%esi
    push   %esi
    push   $data_81b0c
    lea    0x8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    mov    %esp,%ecx
    mov    $0x5,%ebx
    push   $0x0
    mov    $data_fd3aa,%edi
    mov    0x4a(%esp),%eax
    push   $0xff
    sar    $0x10,%eax
    mov    %ebx,%edx
    push   %eax
    mov    %ebp,%esi
    mov    %eax,0x50(%esp)
    push   $0x0
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    0x70(%esp),%eax
    cmpl   $0xffffffff,0x8(%eax)
    jne    jump_3025e
    mov    $0x10,%eax
    call   func_1ce70
    push   $0x0
    mov    0x48(%esp),%ecx
    push   $0xff
    mov    $0x5,%ebx
    mov    $0x1e,%edx
    push   %ecx
    mov    $data_fd3aa,%edi
    mov    %ebp,%esi
    push   $0x0
    mov    %eax,%ecx
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    jmp    jump_3082e
  jump_3025e:
    mov    data_efd84,%ax
    mov    %eax,0x80(%esp)
    mov    0x70(%esp),%eax
    mov    0x8(%eax),%eax
    mov    0x70(%esp),%ebx
    shl    $0x2,%eax
    add    %ebx,%eax
    mov    0xc(%eax),%edx
    mov    0x28(%eax),%eax
    mov    %eax,0x74(%esp)
    mov    $0x19,%ecx
    mov    0x72(%esp),%eax
    mov    %edx,0x3c(%esp)
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    $data_fd3aa,%edi
    mov    0x84(%esp),%dx
    push   $0x5
    mov    $data_11f10c,%eax
    mov    0x44(%esp),%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    mov    %ebp,%esi
    call   func_4f330
    mov    0x3c(%esp),%edx
    mov    $data_f4590,%ecx
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0xff
    mov    0x4c(%esp),%esi
    lea    0x0(,%edx,4),%eax
    push   %esi
    mov    $0x5,%ebx
    add    %edx,%eax
    push   $0x0
    shl    $0x2,%eax
    mov    $0x2d,%edx
    add    %eax,%ecx
    mov    $data_fd3a2,%eax
    call   func_2af88
    mov    0x70(%esp),%eax
    mov    (%eax),%edi
    push   %edi
    mov    $0x11,%eax
    call   func_1ce70
    push   %eax
    lea    0x8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    push   $0x0
    mov    %ebp,%esi
    lea    0x4(%esp),%ecx
    push   $0xff
    mov    0x4c(%esp),%eax
    mov    $0x14,%ebx
    push   %eax
    mov    $0x2d,%edx
    mov    $data_fd3aa,%edi
    push   $0x0
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    0x70(%esp),%eax
    mov    0x70(%eax),%ax
    xor    %al,%al
    and    $0xfe,%ah
    and    $0xffff,%eax
    sar    $0x9,%eax
    lea    0x50(%eax),%edx
    mov    0x70(%esp),%eax
    mov    0x70(%eax),%ax
    and    $0x1e0,%eax
    mov    %eax,%ecx
    mov    0x70(%esp),%eax
    mov    0x70(%eax),%ax
    xor    %ah,%ah
    xor    %ebx,%ebx
    and    $0x1f,%al
    mov    %ax,%bx
    mov    0x70(%esp),%eax
    mov    0x72(%eax),%ax
    and    $0xffff,%ecx
    xor    %al,%al
    sar    $0x5,%ecx
    and    $0xf8,%ah
    and    $0xffff,%eax
    sar    $0xb,%eax
    mov    %eax,0x50(%esp)
    mov    $0x12,%eax
    mov    0x50(%esp),%esi
    call   func_1ce70
    mov    %eax,0x40(%esp)
    test   %esi,%esi
    jne    jump_303c9
    movl   $0xc,0x50(%esp)
    jmp    jump_303f1
  jump_303c9:
    cmp    $0xc,%esi
    jne    jump_303da
    mov    $0x13,%eax
    call   func_1ce70
    jmp    jump_303ed
  jump_303da:
    jle    jump_303f1
    mov    $0x13,%eax
    sub    $0xc,%esi
    call   func_1ce70
    mov    %esi,0x50(%esp)
  jump_303ed:
    mov    %eax,0x40(%esp)
  jump_303f1:
    mov    0x70(%esp),%eax
    mov    0x72(%eax),%ax
    and    $0x7e0,%eax
    push   %edx
    push   %ebx
    and    $0xffff,%eax
    push   %ecx
    sar    $0x5,%eax
    push   $data_81b10
    mov    %eax,0x44(%esp)
    lea    0x10(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x14,%esp
    mov    $data_fd3aa,%edi
    mov    %ebp,%esi
    push   $0x0
    mov    $0x2d,%edx
    mov    0x4a(%esp),%eax
    push   $0xff
    sar    $0x10,%eax
    mov    $0x32,%ebx
    push   %eax
    lea    0xc(%esp),%ecx
    mov    %eax,0x44(%esp)
    push   $0x0
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    0x40(%esp),%edx
    push   %edx
    mov    0x38(%esp),%ebx
    push   %ebx
    mov    0x58(%esp),%ecx
    push   %ecx
    push   $data_81b19
    lea    0x10(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x14,%esp
    mov    $data_fd3aa,%edi
    mov    %ebp,%esi
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0xff
    mov    0x40(%esp),%esi
    push   %esi
    mov    $0x2d,%edx
    mov    $0x41,%ebx
    push   $0x0
    lea    0x10(%esp),%ecx
    mov    $data_fd3a2,%eax
    call   func_2af88
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_c8c44
    push   $0x1e
    push   $0x96
    mov    0x58(%esp),%edi
    xor    %edx,%edx
    push   %edi
    mov    $data_11f10c,%eax
    mov    data_efd98,%dx
    call   func_1b084
    push   %eax
    push   %ebp
    call   func_589f1
    add    $0x28,%esp
    mov    0x72(%esp),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    $0x96,%ecx
    mov    data_efd96,%dx
    push   $0x1e
    mov    $data_11f10c,%eax
    mov    $0x3,%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_4f330
    mov    data_efd96,%ax
    mov    %ebp,%esi
    mov    %eax,0x78(%esp)
    mov    $0xc8,%eax
    mov    $0x14,%edx
    mov    %eax,0x4c(%esp)
    mov    %edx,%eax
    mov    $data_fd38a,%edi
    call   func_1ce70
    push   $0x0
    mov    0x3c(%esp),%ebx
    mov    %edx,0x64(%esp)
    push   $0xff
    mov    $0xc8,%edx
    mov    %eax,%ecx
    push   %ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $data_fd382,%eax
    push   $0x0
    mov    $0x5,%ebx
    xor    %edi,%edi
    call   func_2af88
    jmp    jump_3056f
  jump_3056e:
    inc    %edi
  jump_3056f:
    mov    0x70(%esp),%eax
    movswl %di,%esi
    cmp    0x60(%eax),%esi
    jge    jump_305d8
    mov    0x72(%esp),%eax
    mov    0x4c(%esp),%ecx
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x64(%esp),%eax
    mov    0x7c(%esp),%dx
    push   %eax
    mov    $data_11f10c,%eax
    mov    $0x5,%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_4f330
    mov    $0x9,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x8,0x4c(%esp)
    cmp    $0x8,%edx
    jne    jump_3056e
    mov    0x60(%esp),%esi
    mov    $0xc8,%ecx
    add    %edx,%esi
    mov    %ecx,0x4c(%esp)
    mov    %esi,0x60(%esp)
    jmp    jump_3056e
  jump_305d8:
    mov    $0x118,%ebx
    mov    $0x14,%ecx
    mov    $0x15,%eax
    mov    0x46(%esp),%edx
    mov    $data_fd38a,%edi
    call   func_1ce70
    mov    %ebp,%esi
    push   $0x0
    mov    %ebx,0x68(%esp)
    mov    %ecx,0x60(%esp)
    sar    $0x10,%edx
    push   $0xff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0x5,%ebx
    push   %edx
    mov    %eax,%ecx
    mov    $data_fd382,%eax
    push   $0x0
    mov    $0x118,%edx
    xor    %edi,%edi
    call   func_2af88
    jmp    jump_3062c
  jump_3062b:
    inc    %edi
  jump_3062c:
    mov    0x70(%esp),%eax
    movswl %di,%esi
    cmp    0x64(%eax),%esi
    jge    jump_30695
    mov    0x72(%esp),%eax
    mov    0x64(%esp),%ecx
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x60(%esp),%eax
    mov    0x7c(%esp),%dx
    push   %eax
    mov    $data_11f10c,%eax
    mov    $0x6,%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_4f330
    mov    $0x9,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x8,0x64(%esp)
    cmp    $0x8,%edx
    jne    jump_3062b
    mov    0x5c(%esp),%esi
    mov    $0x118,%ecx
    add    %edx,%esi
    mov    %ecx,0x64(%esp)
    mov    %esi,0x5c(%esp)
    jmp    jump_3062b
  jump_30695:
    mov    $0x168,%ebx
    mov    $0x14,%ecx
    mov    0x46(%esp),%edx
    mov    $data_fd38a,%edi
    mov    0x68(%eax),%eax
    mov    %ebp,%esi
    sar    $0x2,%eax
    mov    %ebx,0x68(%esp)
    mov    %eax,0x54(%esp)
    mov    $0x16,%eax
    mov    %ecx,0x58(%esp)
    call   func_1ce70
    push   $0x0
    sar    $0x10,%edx
    push   $0xff
    mov    $0x5,%ebx
    mov    %eax,%ecx
    push   %edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $data_fd382,%eax
    push   $0x0
    mov    $0x168,%edx
    xor    %edi,%edi
    call   func_2af88
    jmp    jump_306f3
  jump_306f2:
    inc    %edi
  jump_306f3:
    mov    0x54(%esp),%eax
    movswl %di,%esi
    cmp    %eax,%esi
    jge    jump_3075b
    mov    0x72(%esp),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x5c(%esp),%ebx
    mov    0x7c(%esp),%dx
    push   %ebx
    mov    $data_11f10c,%eax
    mov    0x70(%esp),%ecx
    call   func_1b084
    mov    $0x7,%ebx
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_4f330
    mov    $0x9,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x8,0x68(%esp)
    cmp    $0x8,%edx
    jne    jump_306f2
    mov    0x58(%esp),%eax
    mov    $0x168,%esi
    add    %edx,%eax
    mov    %esi,0x68(%esp)
    mov    %eax,0x58(%esp)
    jmp    jump_306f2
  jump_3075b:
    movl   $0x5,0x6c(%esp)
    xor    %edx,%edx
    mov    $0x1cc,%esi
    mov    %dx,0x7c(%esp)
    jmp    jump_307c4
  jump_30771:
    cmp    $0x2,%ecx
    jne    jump_3077b
    mov    $0x8,%ebx
  jump_3077b:
    cmp    $0xffffffff,%ebx
    je     jump_307a4
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd96,%dx
    call   func_1b084
    mov    0x6c(%esp),%edx
    push   %edx
    push   %esi
    push   %ebx
    push   %eax
    push   %ebp
    call   func_57efc
    add    $0x14,%esp
  jump_307a4:
    add    $0x39,%esi
    cmp    $0x258,%esi
    jle    jump_307bf
    mov    0x6c(%esp),%ebx
    add    $0x1b,%ebx
    mov    $0x1cc,%esi
    mov    %ebx,0x6c(%esp)
  jump_307bf:
    incw   0x7c(%esp)
  jump_307c4:
    mov    0x7a(%esp),%eax
    mov    0x70(%esp),%edx
    sar    $0x10,%eax
    cmp    0x4(%edx),%eax
    jge    jump_3082e
    cmp    0x8(%edx),%eax
    je     jump_307bf
    shl    $0x2,%eax
    lea    (%edx,%eax,1),%edi
    cmpl   $0x0,0x44(%edi)
    je     jump_307bf
    mov    0x26(%edi),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x70(%esp),%edx
    mov    %esi,%ecx
    push   %edx
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    0x88(%esp),%dx
    mov    0xc(%edi),%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_4f330
    mov    0x44(%edi),%ecx
    mov    $0xffffffff,%ebx
    cmp    $0x3,%ecx
    jne    jump_30771
    mov    $0x9,%ebx
    jmp    jump_3077b
  jump_3082e:
    add    $0x84,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_30838:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%ebp
    mov    %edx,0x10(%esp)
    mov    $0x9,%edx
    test   %ecx,%ecx
    je     jump_30852
    mov    $0xf3,%edx
  jump_30852:
    mov    0x10(%esp),%ecx
    mov    0xdc(%ecx),%ebx
    push   %ebx
    push   $data_81b26
    lea    0x8(%esp),%ecx
    push   %ecx
    mov    $data_fd3aa,%edi
    mov    %ebp,%esi
    call   func_720c9
    add    $0xc,%esp
    movswl %dx,%edx
    mov    $0x5,%ebx
    push   $0x0
    lea    0x4(%esp),%ecx
    mov    $data_fd3a2,%eax
    push   $0xff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %edx
    mov    $data_fd3aa,%edi
    mov    %edx,0x18(%esp)
    push   $0x0
    mov    %ebx,%edx
    mov    %ebp,%esi
    call   func_2af88
    push   $0x226
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0xff
    mov    0x14(%esp),%esi
    mov    0x18(%esp),%ecx
    push   %esi
    mov    $0x5,%ebx
    mov    $0x1e,%edx
    push   $0x0
    mov    $data_fd3a2,%eax
    add    $0x14,%ecx
    call   func_2af88
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_308e0:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85d20,0xa7(%eax)
    call   func_2bfc4
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_308fc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_3091b
    mov    $data_85d0c,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_3091b:
    mov    $0x1,%edx
    movl   $data_85d20,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_3093b
    call   func_72124
  jump_3093b:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_30948:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x144,%esp
    mov    %eax,%ebp
    mov    %dx,0x140(%esp)
    mov    %ebx,0x13c(%esp)
    mov    %ecx,0x138(%esp)
    cmp    $0x3,%dx
    jb     jump_30cda
    jbe    jump_30ac0
    cmp    $0x1c01,%dx
    je     jump_30b09
  jump_30984:
    mov    0x13e(%esp),%edx
    mov    0x138(%esp),%ecx
    mov    0x13c(%esp),%ebx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2eb04
    mov    %eax,%ecx
    mov    %ecx,%eax
    add    $0x144,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_309b1:
    mov    data_fe582,%eax
    sar    $0x10,%eax
    mov    $data_81b2a,%ecx
    cmp    $0x2,%eax
    jne    jump_309cc
    movb   $0x1,0xaf(%ebp)
    jmp    jump_309eb
  jump_309cc:
    cmp    $0x4,%eax
    jne    jump_309df
    mov    $data_81b32,%ecx
    movb   $0x0,0xaf(%ebp)
    jmp    jump_309eb
  jump_309df:
    mov    $data_81b3a,%ecx
    movb   $0x2,0xaf(%ebp)
  jump_309eb:
    mov    $data_81b41,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    0xaf(%ebp),%bl
    mov    %eax,0xab(%ebp)
    cmp    $0x2,%bl
    jne    jump_30a2f
    movw   $0x3c,0x8c9(%eax)
    mov    $func_30838,%edx
    mov    0xab(%ebp),%eax
    call   func_2e8a8
    mov    %ebp,%eax
    call   func_30eb0
    jmp    jump_30a4f
  jump_30a2f:
    movw   $0x55,0x8c9(%eax)
    mov    $func_30170,%edx
    mov    0xab(%ebp),%eax
    call   func_2e8a8
    mov    %ebp,%eax
    call   func_30d88
  jump_30a4f:
    mov    0x13e(%esp),%edx
    lea    0x4f(%ebp),%edi
    mov    %ecx,%esi
    mov    0x13c(%esp),%ebx
    push   %edi
  jump_30a63:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_30a7b
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_30a63
  jump_30a7b:
    pop    %edi
    mov    %ecx,%esi
    mov    0xab(%ebp),%edi
    sar    $0x10,%edx
    add    $0x4f,%edi
    mov    0x138(%esp),%ecx
    push   %edi
  jump_30a92:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_30aaa
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_30a92
  jump_30aaa:
    pop    %edi
    mov    %ebp,%eax
    call   func_2eb04
  jump_30ab2:
    xor    %ecx,%ecx
    mov    %ecx,%eax
    add    $0x144,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_30ac0:
    cmp    $0x31,%ebx
    jl     jump_30ab2
    cmp    $0x39,%ebx
    jg     jump_30ab2
    mov    $0x9,%eax
    mov    0xaf(%ebp),%dh
    sub    $0x30,%ebx
    cmp    $0x1,%dh
    jne    jump_30ae2
    mov    $0xa,%eax
  jump_30ae2:
    cmp    %eax,%ebx
    jge    jump_30ab2
    mov    $0x1c01,%edx
    mov    0xa7(%ebp),%esi
    mov    %ebp,%eax
    xor    %ecx,%ecx
    call   *0x8(%esi)
    mov    $0xffffffff,%ecx
    mov    %ecx,%eax
    add    $0x144,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_30b09:
    xor    %edx,%edx
    mov    0xab(%eax),%eax
    mov    0x13c(%esp),%dx
    call   func_2e3f4
    mov    0x6c(%eax),%edx
    push   %edx
    push   $data_81b4a
    mov    %eax,%esi
    lea    0x120(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    mov    %esp,%eax
    call   func_1bb78
    mov    0xaf(%ebp),%ah
    cmp    $0x1,%ah
    jne    jump_30b6f
    lea    0x118(%esp),%eax
    mov    $0x3,%edx
    call   func_4f438
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    $data_fa35c,%eax
    call   func_51f24
    jmp    jump_30cc0
  jump_30b6f:
    test   %ah,%ah
    jne    jump_30bbc
    cmpl   $0xffffffff,0x8(%esi)
    je     jump_30cc0
    lea    0x118(%esp),%eax
    mov    $0x1,%esi
    mov    $0x1,%ebx
    call   func_4f3a0
    xor    %ecx,%ecx
    mov    %si,data_feab4
    xor    %eax,%eax
    mov    %ebx,%edx
    mov    %ax,data_fea92
    mov    $data_fa35c,%eax
    mov    %si,data_feab2
    call   func_51f24
    jmp    jump_30cc0
  jump_30bbc:
    lea    0x0(,%ebx,8),%eax
    sub    %ebx,%eax
    add    $0x9c0,%ebp
    shl    $0x5,%eax
    add    %eax,%ebp
    lea    0x118(%esp),%edi
    mov    %ebp,%esi
    mov    $0x3,%edx
    push   %edi
  jump_30bdf:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_30bf7
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_30bdf
  jump_30bf7:
    pop    %edi
    mov    $data_81b53,%esi
    lea    0x118(%esp),%edi
    xor    %ebx,%ebx
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_30c0f:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_30c27
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_30c0f
  jump_30c27:
    pop    %edi
    lea    0x118(%esp),%eax
    lea    0x118(%esp),%edi
    call   func_4f3a0
    xor    %ecx,%ecx
    mov    $data_fa35c,%eax
    mov    %ebp,%esi
    call   func_51f24
    xor    %eax,%eax
    mov    $0x3f800000,%ebx
    call   func_736c3
    mov    data_11f108,%eax
    mov    %eax,data_86a60
    mov    %ebx,data_11f108
    push   %edi
  jump_30c66:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_30c7e
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_30c66
  jump_30c7e:
    pop    %edi
    mov    $data_81b58,%esi
    lea    0x118(%esp),%edi
    lea    0x118(%esp),%edx
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_30c9b:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_30cb3
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_30c9b
  jump_30cb3:
    pop    %edi
    xor    %ebx,%ebx
    mov    $data_fa35c,%eax
    call   func_54d4c
  jump_30cc0:
    mov    %esp,%eax
    xor    %edx,%edx
    mov    $0xffffffff,%ecx
    call   func_1bbc8
    mov    %ecx,%eax
    add    $0x144,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_30cda:
    cmp    $0x1,%dx
    je     jump_309b1
    jmp    jump_30984


/*----------------------------------------------------------------*/
func_30cec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    $0x17,%eax
    call   func_1ce70
    mov    %eax,(%esp)
    mov    0xaf(%ebp),%ah
    mov    $0x10,%edx
    cmp    $0x1,%ah
    jne    jump_30d24
    mov    $0x18,%eax
    mov    $0x73,%edx
    call   func_1ce70
    jmp    jump_30d35
  jump_30d24:
    cmp    $0x2,%ah
    jne    jump_30d38
    mov    $0x19,%eax
    call   func_1ce70
    xor    %edx,%edx
  jump_30d35:
    mov    %eax,(%esp)
  jump_30d38:
    test   %edx,%edx
    je     jump_30d49
    push   %edx
    lea    0x4(%ebp),%eax
    push   %eax
    call   func_59d90
    add    $0x8,%esp
  jump_30d49:
    push   $0x0
    mov    0x4(%esp),%ecx
    mov    $0x4,%ebx
    push   $0xff
    mov    $data_fd3a2,%eax
    mov    $data_fd3aa,%edi
    push   $0xffffffff
    lea    0x4(%ebp),%esi
    xor    %edx,%edx
    push   $0x3
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_2c8f8
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_30d88:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x140,%esp
    mov    %eax,0x13c(%esp)
    mov    0xab(%eax),%eax
    mov    0x13c(%esp),%esi
    call   func_2e42c
    mov    %esp,%eax
    xor    %edi,%edi
    call   func_1bb78
    add    $0xb0,%esi
    jmp    jump_30e29
  jump_30dbe:
    movl   $0xffffffff,0x8(%esi)
  jump_30dc5:
    mov    0x138(%esp),%eax
    mov    $0xffffffff,%ebx
    mov    %eax,0x6c(%ebp)
    mov    0x13c(%esp),%eax
    mov    %ebp,%edx
    xor    %ecx,%ecx
    mov    0xab(%eax),%eax
    call   func_2e16c
    mov    0x13c(%esp),%eax
    mov    0xaf(%eax),%bl
    xor    %edx,%edx
    cmp    $0x1,%bl
    jne    jump_30e03
    mov    $0x1,%edx
  jump_30e03:
    mov    0x13c(%esp),%ebp
    mov    %edx,%ebx
    xor    %eax,%eax
    add    $0x74,%esi
    mov    %di,%ax
    mov    0xab(%ebp),%ebp
    mov    %eax,%edx
    mov    %ebp,%eax
    inc    %edi
    call   func_2e330
    cmp    $0x14,%edi
    jge    jump_30e97
  jump_30e29:
    lea    0x1(%edi),%eax
    push   %eax
    push   $data_81b5d
    mov    %eax,0x140(%esp)
    lea    0x120(%esp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_720c9
    add    $0xc,%esp
    lea    0x118(%esp),%eax
    mov    %esi,%ebp
    call   func_736d3
    test   %eax,%eax
    jne    jump_30dbe
    mov    $0x200,%ebx
    lea    0x118(%esp),%edx
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_1bbfc
    mov    $0x74,%ebx
    mov    %esp,%eax
    mov    %esi,%edx
    call   func_1bf94
    lea    0x72(%esi),%ebx
    mov    (%esp),%eax
    lea    0x70(%esi),%edx
    call   func_73d46
    jmp    jump_30dc5
  jump_30e97:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x140,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_30eb0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,0x4(%esp)
    mov    0xab(%eax),%eax
    call   func_2e42c
    xor    %edx,%edx
    mov    $data_81b66,%eax
    mov    %esp,%esi
    call   func_1bb10
    push   %esi
    push   $data_81b73
    push   %eax
    mov    %eax,%ebp
    call   func_73431
    add    $0xc,%esp
    cmpl   $0x7,(%esp)
    jle    jump_30efe
    mov    $0x1ea,%ebx
    mov    $data_81b76,%edx
    xor    %eax,%eax
    call   func_25878
  jump_30efe:
    mov    0x4(%esp),%esi
    mov    (%esp),%ecx
    xor    %ebx,%ebx
    add    $0x9c0,%esi
    mov    %ebx,0x8(%esp)
    test   %ecx,%ecx
    jle    jump_30f6a
    lea    0x14(%esi),%edi
  jump_30f18:
    push   %esi
    push   $data_81b85
    push   %ebp
    mov    %edi,%edx
    call   func_73431
    add    $0xc,%esp
    mov    %ebp,%eax
    mov    $0xffffffff,%ebx
    call   func_2f538
    mov    0x4(%esp),%eax
    xor    %ecx,%ecx
    mov    %esi,%edx
    mov    0xab(%eax),%eax
    call   func_2e16c
    mov    0x8(%esp),%eax
    inc    %eax
    add    $0xe0,%edi
    mov    %eax,0xdc(%esi)
    add    $0xe0,%esi
    mov    (%esp),%edx
    mov    %eax,0x8(%esp)
    cmp    %edx,%eax
    jl     jump_30f18
  jump_30f6a:
    mov    %ebp,%eax
    call   func_7280e
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_30f80:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %dl,%bl
    xor    %edx,%edx
    mov    %ax,%dx
    lea    0x0(,%edx,2),%ecx
    mov    data_f01d0,%edx
    xor    %esi,%esi
    mov    (%ecx,%edx,1),%dx
    mov    %dx,%si
    cmp    $0xffff,%esi
    je     jump_3100d
    xor    %edx,%edx
    mov    data_f01d4,%dx
    mov    data_f01cc,%ecx
    shl    $0x2,%edx
    add    %ecx,%edx
    mov    %ebx,%edi
    xor    %ebx,%ebx
    and    $0xff,%edi
    mov    %ax,%bx
    lea    0x0(,%esi,4),%eax
    shl    $0x10,%edi
    add    %ecx,%eax
    add    %edi,%ebx
    cmp    %edx,%eax
    jb     jump_30fe5
    jmp    jump_3100d
  jump_30fde:
    add    $0x4,%eax
    cmp    %edx,%eax
    jae    jump_3100d
  jump_30fe5:
    cmp    (%eax),%ebx
    jne    jump_30fde
    mov    data_f01cc,%esi
    sub    %esi,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    shl    $0x2,%edx
    sbb    %edx,%eax
    sar    $0x2,%eax
    and    $0xffff,%eax
    add    $0x102,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3100d:
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31014:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    data_f01d9,%ch
    mov    %eax,%esi
    mov    %ch,%cl
    mov    %esi,%edx
    mov    data_f01c8,%ebx
    shl    %cl,%edx
    mov    (%ebx),%dh
    inc    %ebx
    or     %dl,%dh
    mov    %ebx,data_f01c8
    mov    %dh,-0x1(%ebx)
    mov    data_f01c8,%dx
    sub    data_f01dc,%dx
    xor    %ebx,%ebx
    mov    %dx,%bx
    mov    data_f01d8,%al
    cmp    $0x100,%ebx
    jne    jump_31078
    mov    data_f01dc,%ebx
    movb   $0xff,(%ebx)
    mov    data_f01c8,%ebx
    mov    %ebx,data_f01dc
    lea    0x1(%ebx),%edx
    mov    %edx,data_f01c8
  jump_31078:
    xor    %ebx,%ebx
    mov    $0x8,%edx
    mov    %ch,%bl
    sub    %ebx,%edx
    and    $0xffff,%esi
    mov    %dl,%cl
    mov    $0x8,%bl
    sar    %cl,%esi
    sub    %ch,%bl
    mov    %esi,%edx
    sub    %bl,%al
    xor    %ch,%ch
    mov    data_f01c8,%ebx
    movzbl %al,%esi
    mov    %dl,(%ebx)
    cmp    $0x8,%esi
    jge    jump_310ab
    mov    %al,%ch
    jmp    jump_31106
  jump_310ab:
    inc    %ebx
    mov    %ebx,data_f01c8
    mov    data_f01dc,%si
    mov    data_f01c8,%bx
    sub    %esi,%ebx
    and    $0xffff,%ebx
    cmp    $0x100,%ebx
    jne    jump_310ec
    mov    data_f01dc,%ebx
    movb   $0xff,(%ebx)
    mov    data_f01c8,%ebx
    mov    %ebx,data_f01dc
    inc    %ebx
    mov    %ebx,data_f01c8
  jump_310ec:
    xor    %ebx,%ebx
    mov    %al,%bl
    cmp    $0x8,%ebx
    jle    jump_31106
    mov    data_f01c8,%ebx
    mov    %al,%ch
    shr    $0x8,%dx
    sub    $0x8,%ch
    mov    %dl,(%ebx)
  jump_31106:
    mov    %ch,data_f01d9
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31114:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    xor    %ebx,%ebx
    mov    data_f01cc,%ecx
    mov    data_f01d4,%bx
    mov    %dl,0x2(%ecx,%ebx,4)
    xor    %edx,%edx
    mov    %ax,(%ecx,%ebx,4)
    mov    %ax,%dx
    mov    data_f01d0,%ebx
    add    %edx,%edx
    add    %ebx,%edx
    xor    %ebx,%ebx
    mov    (%edx),%bx
    cmp    $0xffff,%ebx
    jne    jump_31154
    mov    data_f01d4,%bx
    mov    %bx,(%edx)
  jump_31154:
    and    $0xffff,%eax
    call   func_31014
    mov    data_f01d4,%dx
    inc    %edx
    xor    %eax,%eax
    mov    %dx,data_f01d4
    mov    %dx,%ax
    xor    %edx,%edx
    add    $0x102,%eax
    mov    data_f01d6,%dx
    cmp    %edx,%eax
    jle    jump_311e3
    cmp    $0x1000,%eax
    jle    jump_311ca
    mov    $0x100,%eax
    mov    $0x9,%dl
    mov    $0x200,%ecx
    mov    $0x2008,%ebx
    call   func_31014
    xor    %esi,%esi
    mov    data_f01d0,%eax
    mov    %dl,data_f01d8
    mov    %cx,data_f01d6
    mov    $0xff,%edx
    mov    %si,data_f01d4
    call   func_72280
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_311ca:
    mov    %edx,%ebx
    mov    data_f01d8,%ah
    add    %edx,%ebx
    inc    %ah
    mov    %bx,data_f01d6
    mov    %ah,data_f01d8
  jump_311e3:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_311e8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    $0x9,%ah
    mov    $0x200,%edx
    mov    data_f01c8,%ebx
    mov    %ah,data_f01d8
    mov    %dx,data_f01d6
    movb   $0x8,(%ebx)
    xor    %dl,%dl
    inc    %ebx
    mov    %dl,data_f01d9
    mov    %ebx,data_f01c8
    mov    %ebx,data_f01dc
    lea    0x1(%ebx),%edx
    mov    $0x100,%eax
    mov    %edx,data_f01c8
    call   func_31014
    mov    data_f01b0,%eax
    mov    (%eax),%al
    mov    $0x1,%esi
    xor    %ah,%ah
    jmp    jump_3124a
  jump_31241:
    inc    %esi
    cmp    $0x4b000,%esi
    jge    jump_31279
  jump_3124a:
    mov    data_f01b0,%ebx
    mov    (%esi,%ebx,1),%bl
    xor    %ecx,%ecx
    mov    %bl,%cl
    xor    %ebx,%ebx
    mov    %ax,%bx
    mov    %ecx,%edx
    mov    %ebx,%eax
    call   func_30f80
    test   %ax,%ax
    jne    jump_31241
    mov    %ecx,%edx
    mov    %ebx,%eax
    call   func_31114
    xor    %ah,%ah
    mov    %cl,%al
    jmp    jump_31241
  jump_31279:
    and    $0xffff,%eax
    call   func_31014
    mov    $0x101,%eax
    call   func_31014
    mov    data_f01c8,%ax
    mov    data_f01dc,%bx
    mov    data_f01d9,%dh
    sub    %ebx,%eax
    test   %dh,%dh
    je     jump_312c1
    mov    data_f01dc,%ebx
    mov    %al,(%ebx)
    mov    data_f01c8,%ebx
    inc    %ebx
    mov    %ebx,data_f01c8
    movb   $0x0,(%ebx)
    inc    %ebx
    jmp    jump_312ea
  jump_312c1:
    xor    %ebx,%ebx
    mov    %ax,%bx
    cmp    $0x1,%ebx
    jne    jump_312d7
    mov    data_f01dc,%eax
    mov    %dh,(%eax)
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_312d7:
    mov    data_f01dc,%eax
    dec    %bl
    mov    %bl,(%eax)
    mov    data_f01c8,%ebx
    inc    %ebx
    mov    %dh,-0x1(%ebx)
  jump_312ea:
    mov    %ebx,data_f01c8
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_312f8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    data_f01c8,%ebp
    cmp    $0x9a6e8,%edx
    jl     jump_3152a
    mov    $0x1df,%ebx
    push   %ebx
    mov    $0x27f,%edx
    push   %edx
    xor    %ecx,%ecx
    mov    %eax,data_f01b0
    push   %ecx
    mov    %edx,data_f01b4
    mov    %ebx,data_f01b8
    push   %ecx
    mov    %ecx,data_f01c0
    add    $0x4b000,%eax
    push   $data_f01b0
    mov    %ecx,data_f01bc
    mov    %eax,0x28(%esp)
    call   *data_86a94
    add    $0x14,%esp
    mov    0x14(%esp),%eax
    mov    %eax,data_f01ac
    mov    %eax,%edi
    add    $0x300,%eax
    xor    %esi,%esi
    mov    %eax,0x14(%esp)
  jump_3136c:
    push   %edi
    push   %esi
    add    $0x3,%edi
    call   *data_86a98
    inc    %esi
    add    $0x8,%esp
    cmp    $0x100,%esi
    jl     jump_3136c
    mov    0x14(%esp),%eax
    mov    $0x493e0,%ebx
    mov    %eax,data_f01c4
    lea    0x493e0(%eax),%edx
    mov    $0x6,%ecx
    mov    %edx,0x14(%esp)
    xor    %edx,%edx
    mov    $data_81b88,%esi
    call   func_72280
    mov    0x14(%esp),%eax
    mov    data_f01c4,%ebp
    xor    %edx,%edx
    mov    %eax,data_f01cc
    mov    %dx,data_f01d4
    lea    0x4000(%eax),%ebx
    mov    $0xff,%edx
    mov    %ebx,0x14(%esp)
    mov    %ebx,%eax
    mov    %ebx,data_f01d0
    mov    $0x2008,%ebx
    mov    %ebp,data_f01c8
    call   func_72280
    mov    data_f01c8,%edi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    data_f01c8,%ebp
    add    $0x6,%ebp
    movw   $0x280,0x0(%ebp)
    add    $0x2,%ebp
    movw   $0x1e0,0x0(%ebp)
    add    $0x2,%ebp
    movb   $0x87,0x0(%ebp)
    inc    %ebp
    movb   $0xff,0x0(%ebp)
    inc    %ebp
    xor    %esi,%esi
    movb   $0x0,0x0(%ebp)
    inc    %ebp
  jump_3142d:
    mov    data_f01ac,%ebx
    mov    (%esi,%ebx,1),%bl
    and    $0xff,%ebx
    imul   $0xff,%ebx,%ebx
    mov    %ebx,%eax
    mov    %ebx,%edx
    mov    $0x3f,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    inc    %ebp
    mov    %eax,%ebx
    inc    %esi
    mov    %bl,-0x1(%ebp)
    cmp    $0x300,%esi
    jl     jump_3142d
    movb   $0x2c,0x0(%ebp)
    inc    %ebp
    movw   $0x0,0x0(%ebp)
    add    $0x2,%ebp
    movw   $0x0,0x0(%ebp)
    add    $0x2,%ebp
    movw   $0x280,0x0(%ebp)
    add    $0x2,%ebp
    movw   $0x1e0,0x0(%ebp)
    add    $0x2,%ebp
    movb   $0x7,0x0(%ebp)
    inc    %ebp
    mov    %ebp,data_f01c8
    call   func_311e8
    mov    data_f01e0,%esi
    push   %esi
    mov    data_f01c8,%ebp
    lea    0x4(%esp),%eax
    push   $data_81b8f
    movb   $0x3b,0x0(%ebp)
    inc    %ebp
    push   %eax
    mov    data_f01c4,%ecx
    mov    %ebp,data_f01c8
    call   func_720c9
    add    $0xc,%esp
    push   $0x1c0
    push   $0x262
    lea    0x8(%esp),%eax
    mov    %ebp,%ebx
    push   %eax
    sub    %ecx,%ebx
    call   func_72ba2
    add    $0xc,%esp
    mov    data_f01c4,%edx
    mov    %eax,%esi
    call   func_72fb6
    mov    %esi,%eax
    xor    %ebp,%ebp
    call   func_72e31
    mov    data_f01e0,%esi
    mov    %ebp,data_f01c8
    mov    %ebp,data_f01d0
    mov    %ebp,data_f01cc
    mov    %ebp,data_f01c4
    mov    %ebp,data_f01b0
    inc    %esi
    mov    %ebp,data_f01ac
    mov    %esi,data_f01e0
  jump_3152a:
    mov    data_f01c8,%ebp
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31540:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    %edx,(%esp)
    test   %edx,%edx
    jl     jump_31555
    test   %eax,%eax
    jne    jump_31566
  jump_31555:
    mov    $0x29,%ebx
    mov    $data_81b9c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_31566:
    mov    $0x3e8,%edx
    cmp    (%esp),%edx
    jl     jump_315a6
    jmp    jump_315b0
  jump_31572:
    mov    $data_81ba8,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_31580:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_31598
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_31580
  jump_31598:
    pop    %edi
    add    $0x3e8,%edx
    cmp    (%esp),%edx
    jl     jump_315a8
    jmp    jump_315b0
  jump_315a6:
    mov    %ebp,%edi
  jump_315a8:
    cmp    $0xfa0,%edx
    jl     jump_31572
  jump_315b0:
    mov    (%esp),%eax
    mov    %eax,%edx
    mov    $0x64,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %eax,%edx
    mov    $0xa,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %edx,%esi
    shl    $0x2,%edx
    add    %esi,%edx
    mov    $data_86624,%esi
    mov    %ebp,%edi
    add    %edx,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_315e4:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_315fc
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_315e4
  jump_315fc:
    pop    %edi
    mov    (%esp),%eax
    mov    %eax,%edx
    mov    $0xa,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %esi
    mov    %edx,%esi
    shl    $0x2,%edx
    add    %esi,%edx
    mov    $data_86656,%esi
    add    %edx,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_3162a:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_31642
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3162a
  jump_31642:
    pop    %edi
    mov    (%esp),%eax
    mov    %eax,%edx
    mov    $0xa,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %edx,%esi
    shl    $0x2,%edx
    add    %esi,%edx
    mov    $data_86688,%esi
    add    %edx,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_31669:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_31681
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_31669
  jump_31681:
    pop    %edi
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31690:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%ebp
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e18(,%eax,2),%al
    mov    %al,%dl
    shl    $0x2,%dl
    add    $0x13,%dl
    cmp    $0xffffffff,%ecx
    jne    jump_316c1
    mov    $0xf3,%dl
  jump_316c1:
    mov    0xc(%esi),%eax
    sub    0x4(%esi),%eax
    sub    $0x10,%eax
    push   %eax
    mov    $data_fd3aa,%edi
    xor    %eax,%eax
    push   $0xff
    mov    %dl,%al
    mov    %ebp,%ecx
    push   %eax
    mov    $0x3,%ebx
    mov    $0x8,%edx
    push   $0x0
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_316fc:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85db4,0xa7(%eax)
    call   func_3175c
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_31718:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_31737
    mov    $data_85d70,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_31737:
    mov    $0x1,%edx
    movl   $data_85db4,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_31757
    call   func_72124
  jump_31757:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3175c:
/*----------------------------------------------------------------*/
    movl   $0x0,0xab(%eax)
    movl   $0x0,0xaf(%eax)
    movl   $0x0,0xb3(%eax)
    movw   $0xffff,0xbb(%eax)
    movw   $0xffff,0xbd(%eax)
    movw   $0xffff,0xbf(%eax)
    ret


/*----------------------------------------------------------------*/
func_31798:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x44,%esp
    mov    %eax,%esi
    mov    %dx,-0x4(%ebp)
    mov    %ebx,%edi
    mov    %ecx,-0x8(%ebp)
    xor    %eax,%eax
    mov    data_f458e,%al
    mov    %eax,-0x14(%ebp)
    xor    %eax,%eax
    mov    data_86775,%al
    mov    %eax,-0xc(%ebp)
    cmp    $0x4,%dx
    jb     jump_31ad4
    cmp    $0x5,%dx
    jbe    jump_31a5b
    cmp    $0xc,%dx
    jb     jump_319ed
    jbe    jump_31a1a
    cmp    $0x1c01,%dx
    je     jump_31a9d
    jmp    jump_319ed
  jump_317f3:
    cmpl   $0x0,0xab(%esi)
    jne    jump_3182b
    mov    $0xd,%ebx
    mov    $data_81bac,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    call   func_521dc
    mov    %eax,0xab(%esi)
    test   %eax,%eax
    jne    jump_3182b
    mov    $0x7b,%ebx
    mov    $data_81bb6,%edx
    call   func_25878
  jump_3182b:
    mov    0xab(%esi),%eax
    movl   $0x0,0xab(%eax)
    mov    0xab(%esi),%eax
    movw   $0x1d,0x8c9(%eax)
    mov    $func_31690,%edx
    mov    0xab(%esi),%eax
    call   func_2e8a8
    mov    0xab(%esi),%eax
    xor    %edx,%edx
    call   func_2e0ac
    mov    0xab(%esi),%eax
    movb   $0xf2,0xc6(%eax)
    cmpl   $0x0,0xaf(%esi)
    jne    jump_318ac
    mov    $0xd,%ebx
    mov    $data_81bc4,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    call   func_521dc
    mov    %eax,0xaf(%esi)
    test   %eax,%eax
    jne    jump_318ac
    mov    $0x88,%ebx
    mov    $data_81bcd,%edx
    call   func_25878
  jump_318ac:
    cmpl   $0x0,0xb3(%esi)
    jne    jump_318e4
    mov    $0xd,%ebx
    mov    $data_81bdb,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    call   func_521dc
    mov    %eax,0xb3(%esi)
    test   %eax,%eax
    jne    jump_318e4
    mov    $0x8f,%ebx
    mov    $data_81be5,%edx
    call   func_25878
  jump_318e4:
    mov    %esi,%eax
    call   func_31d38
    mov    %esi,%eax
    xor    %edx,%edx
    call   func_32564
    mov    data_86775,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e18(,%eax,2),%al
    xor    %ah,%ah
    shl    $0x2,%eax
    mov    0xaf(%esi),%edx
    add    $0x13,%eax
    mov    $0xf,%ebx
    mov    %ax,0xb1(%edx)
    mov    $data_f1c68,%eax
    xor    %edx,%edx
    call   func_72280
    mov    -0xc(%ebp),%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    -0x14(%ebp),%edx
    mov    data_92fff(,%eax,2),%bl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    movl   $0x0,0xb7(%esi)
    add    $data_92e16,%eax
    cmp    $0xe,%bl
    je     jump_319aa
    movsbl %bl,%edx
    lea    -0x44(%ebp),%ecx
    mov    %edx,-0x10(%ebp)
    mov    -0xe(%ebp),%edx
    mov    -0x10(%ebp),%ebx
    sar    $0x10,%edx
    movl   $0xffffffff,0xb7(%esi)
    call   func_40270
    lea    -0x44(%ebp),%edx
    movswl %ax,%ebx
    mov    %esi,%eax
    call   func_32224
    mov    -0x10(%ebp),%edx
    mov    %esi,%eax
    call   func_322bc
    jmp    jump_319ed
  jump_319aa:
    mov    0xbd(%esi),%edx
    sar    $0x10,%edx
    lea    -0x24(%ebp),%ebx
    mov    data_866d8(,%edx,2),%ecx
    xor    %edx,%edx
    sar    $0x10,%ecx
    mov    data_86775,%dl
    call   func_3fc98
    push   $0xffffffff
    mov    $0xffffffff,%ecx
    lea    -0x24(%ebp),%edx
    movswl %ax,%ebx
    mov    %esi,%eax
    call   func_32128
    mov    $0x1d,%edx
    mov    %esi,%eax
    call   func_322f4
  jump_319ed:
    mov    -0x6(%ebp),%edx
    mov    -0x8(%ebp),%ecx
    mov    %edi,%ebx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2eb04
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_31a05:
    mov    -0x6(%ebp),%edx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2c938
  jump_31a12:
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_31a1a:
    cmp    $0xae,%ebx
    jl     jump_319ed
    cmp    $0x147,%ebx
    jg     jump_319ed
    cmp    $0x145,%ecx
    jl     jump_319ed
    cmp    $0x1d8,%ecx
    jg     jump_319ed
    mov    $data_866bc,%ebx
    mov    $0x5,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    call   func_51f24
    mov    $0xffffffff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_31a5b:
    cmp    $0xae,%ebx
    jl     jump_31a12
    cmp    $0x147,%ebx
    jg     jump_31a12
    cmp    $0x145,%ecx
    jl     jump_31a12
    cmp    $0x1d8,%ecx
    jg     jump_31a12
    mov    $data_f8638,%eax
    xor    %edx,%edx
    call   func_4af80
    mov    %ecx,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_31df4
    mov    $0xffffffff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_31a9d:
    xor    %edx,%edx
    mov    0xab(%esi),%eax
    mov    %bx,%dx
    call   func_2e384
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_31ee0
    cmpl   $0xffffffff,0xb7(%esi)
    jne    jump_31ac9
    movl   $0x0,0xb7(%esi)
  jump_31ac9:
    mov    $0xffffffff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_31ad4:
    cmp    $0x1,%dx
    jb     jump_319ed
    jbe    jump_317f3
    cmp    $0x2,%dx
    je     jump_31a05
    jmp    jump_319ed


/*----------------------------------------------------------------*/
func_31af4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,0x14(%esp)
    mov    %esp,%edi
    mov    $data_c850c,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    cmpw   $0x0,0xc1(%eax)
    je     jump_31c70
    mov    $0xae,%edx
    mov    $0x145,%ebx
    mov    $0x147,%ecx
    mov    $0x1d8,%esi
    push   $0xf2
    lea    0x4(%esp),%eax
    mov    %edx,0x8(%esp)
    mov    %ebx,0xc(%esp)
    push   %eax
    mov    %ecx,0x14(%esp)
    mov    %esi,0x18(%esp)
    call   func_59d90
    add    $0x8,%esp
    mov    %esp,%edx
    mov    $data_fa35c,%eax
    call   func_50690
    xor    %ebx,%ebx
    mov    $data_81bf3,%edx
    mov    $data_fa35c,%eax
    call   func_5216c
    mov    data_efd96,%ax
    mov    %eax,0x1c(%esp)
    mov    0x14(%esp),%eax
    mov    0xc1(%eax),%bx
    xor    %edi,%edi
    test   %bx,%bx
    jle    jump_31c70
    jmp    jump_31bcb
  jump_31b8f:
    mov    0x18(%esp),%eax
    push   %ebp
    xor    %edx,%edx
    mov    $0x3,%ebx
    mov    0x20(%esp),%dx
    push   %eax
    mov    $data_11f10c,%eax
    mov    %esi,%ecx
    call   func_1b084
    mov    %eax,%edx
    mov    $data_c850c,%eax
    call   func_4f2a8
  jump_31bb9:
    mov    0x14(%esp),%eax
    inc    %edi
    cmp    0xc1(%eax),%di
    jge    jump_31c70
  jump_31bcb:
    push   $0x0
    movswl %di,%esi
    push   $0x8000
    mov    data_866da(,%esi,2),%bx
    push   $0x8000
    mov    data_866c6(,%esi,2),%ax
    mov    data_866d0(,%esi,2),%dx
    push   $0x0
    movswl %dx,%edx
    push   $data_c8c44
    movswl %ax,%esi
    push   %edx
    movswl %bx,%ebp
    push   %esi
    mov    %edx,0x34(%esp)
    mov    data_efd44(,%ebp,2),%dx
    push   $0x0
    mov    $data_11f10c,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    push   $data_c850c
    call   func_589f1
    add    $0x28,%esp
    mov    0x14(%esp),%eax
    cmp    0xbf(%eax),%di
    jne    jump_31b8f
    push   %ebp
    mov    0x1c(%esp),%edx
    mov    $data_11f10c,%eax
    push   %edx
    xor    %edx,%edx
    mov    $0x4,%ebx
    mov    0x24(%esp),%dx
    mov    %esi,%ecx
    call   func_1b084
    mov    %eax,%edx
    mov    $data_c850c,%eax
    call   func_4f2a8
    jmp    jump_31bb9
  jump_31c70:
    mov    $0x7,%ebx
    mov    $0x145,%ecx
    mov    $0xa5,%esi
    mov    $0x163,%edi
    push   $0xf2
    lea    0x4(%esp),%eax
    mov    %ebx,0x8(%esp)
    mov    %ecx,0xc(%esp)
    push   %eax
    mov    %esi,0x14(%esp)
    mov    %edi,0x18(%esp)
    call   func_59d90
    add    $0x8,%esp
    mov    %esp,%edx
    mov    $data_fa35c,%eax
    call   func_50690
    mov    $0x1a,%eax
    mov    %esp,%esi
    call   func_1ce70
    push   $0x0
    mov    $0x2,%ebx
    mov    $data_fd38a,%edi
    push   $0xff
    mov    %ebx,%edx
    mov    %eax,%ecx
    push   $0xffffffff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    mov    $data_fd382,%eax
    lea    0x10(%esp),%esi
    call   func_2af88
    push   $0x0
    mov    $data_fd3aa,%edi
    mov    $0xd,%ebx
    push   $0xff
    mov    $0xa,%edx
    mov    data_c3504,%ecx
    push   $0xffffffff
    mov    $data_fd3a2,%eax
    add    $0x1c,%ecx
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    0x14(%esp),%eax
    cmpw   $0x0,0x6b(%eax)
    je     jump_31d2e
    xor    %edx,%edx
    call   func_2c8f8
  jump_31d2e:
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31d38:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    $0xa,%ebx
    movw   $0x0,0xc1(%eax)
    mov    $0xffffffff,%edx
    movw   $0x0,0xbf(%eax)
    mov    $data_866da,%eax
    call   func_72280
    mov    data_93b98,%bx
    xor    %edx,%edx
    test   %bx,%bx
    jle    jump_31dec
    jmp    jump_31d86
  jump_31d79:
    mov    data_93b98,%cx
    inc    %edx
    cmp    %cx,%dx
    jge    jump_31dec
  jump_31d86:
    xor    %ecx,%ecx
    movswl %dx,%eax
    mov    data_f458e,%cl
    cmp    %ecx,%eax
    je     jump_31d79
    xor    %ebx,%ebx
    mov    data_86775,%bl
    cmp    %ebx,%eax
    je     jump_31d79
    imul   $0x1ee,%eax,%edi
    cmpl   $0xffffffff,data_92e19(%edi)
    je     jump_31d79
    imul   $0x1ee,%ecx,%ecx
    cmpb   $0x0,data_92fd6(%ecx,%eax,1)
    je     jump_31d79
    imul   $0x1ee,%ebx,%ebx
    cmpb   $0x0,data_92fd6(%ebx,%eax,1)
    je     jump_31d79
    mov    0xc1(%esi),%ax
    movswl %ax,%ebx
    inc    %eax
    mov    %ax,0xc1(%esi)
    mov    %dx,data_866da(,%ebx,2)
    jmp    jump_31d79
  jump_31dec:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_31df4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x14,%esp
    mov    %eax,%esi
    mov    %edx,0x10(%esp)
    mov    %ebx,%edi
    mov    0xc1(%esi),%dx
    xor    %eax,%eax
    test   %dx,%dx
    jg     jump_31e1c
    jmp    jump_31e4f
  jump_31e12:
    inc    %eax
    cmp    0xc1(%esi),%ax
    jge    jump_31e4f
  jump_31e1c:
    movswl %ax,%edx
    mov    0x10(%esp),%ecx
    sub    data_866c6(,%edx,2),%cx
    mov    %edi,%ebx
    sub    data_866d0(,%edx,2),%bx
    movswl %cx,%edx
    cmp    $0x16,%edx
    jge    jump_31e12
    cmp    $0xffffffea,%edx
    jle    jump_31e12
    movswl %bx,%edx
    cmp    $0x16,%edx
    jge    jump_31e12
    cmp    $0xffffffea,%edx
    jle    jump_31e12
  jump_31e4f:
    cmp    0xc1(%esi),%ax
    jge    jump_31ed6
    cmp    0xbf(%esi),%ax
    je     jump_31ed6
    mov    0xb7(%esi),%edx
    mov    %ax,0xbf(%esi)
    test   %edx,%edx
    jne    jump_31ec9
    mov    %esp,%ebx
    movzbl data_f458e,%edi
    mov    0xbd(%esi),%ecx
    mov    %edi,%edx
    xor    %eax,%eax
    shl    $0x5,%edx
    mov    data_86775,%al
    sub    %edi,%edx
    sar    $0x10,%ecx
    shl    $0x3,%edx
    mov    data_866d8(,%ecx,2),%ecx
    sub    %edi,%edx
    mov    $data_92e16,%edi
    add    %edx,%edx
    sar    $0x10,%ecx
    add    %edx,%edi
    mov    %eax,%edx
    mov    %edi,%eax
    call   func_3fc98
    push   $0xffffffff
    lea    0x4(%esp),%edx
    movswl %ax,%ebx
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_32128
  jump_31ec9:
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_31ed6:
    add    $0x14,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_31ee0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x30,%esp
    mov    %eax,%esi
    xor    %ecx,%ecx
    mov    data_86775,%cl
    mov    %ecx,%ebx
    shl    $0x5,%ebx
    xor    %eax,%eax
    sub    %ecx,%ebx
    mov    data_f458e,%al
    shl    $0x3,%ebx
    mov    %eax,-0x8(%ebp)
    sub    %ecx,%ebx
    mov    %eax,%ecx
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    $data_92e16,%ecx
    add    %eax,%eax
    mov    $data_92e16,%edi
    add    %eax,%ecx
    add    %ebx,%ebx
    mov    %ecx,-0x4(%ebp)
    mov    0xb7(%esi),%ecx
    add    %ebx,%edi
    cmp    $0xffffffff,%ecx
    jne    jump_31ff5
    cmp    $0x1,%dl
    jne    jump_31f65
    mov    $0x1,%edx
    mov    data_93000(%ebx),%eax
    xor    %ecx,%ecx
    mov    $0x10,%ebx
    mov    %eax,data_c3504
    mov    $data_fa35c,%eax
    call   func_51f24
    jmp    jump_320f2
  jump_31f65:
    push   $0x0
    movsbl %dl,%ecx
    mov    0x1ea(%edi),%ebx
    mov    %edi,%eax
    push   %ebx
    mov    0x1e6(%edi),%ebx
    mov    -0x8(%ebp),%edx
    sar    $0x18,%ebx
    call   func_408f4
    push   $0x0
    mov    $0xd,%ebx
    mov    0xb3(%esi),%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_520f4
    movb   $0xe,0x1e9(%edi)
    lea    -0x30(%ebp),%ebx
    mov    0xbd(%esi),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    data_86775,%dl
    mov    data_866d8(,%eax,2),%ecx
    mov    -0x4(%ebp),%eax
    sar    $0x10,%ecx
    call   func_3fc98
    push   $0xffffffff
    mov    $0xffffffff,%ecx
    lea    -0x30(%ebp),%edx
    movswl %ax,%ebx
    mov    %esi,%eax
    call   func_32128
    mov    $0xe,%edx
    mov    %esi,%eax
    call   func_322bc
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_31ff5:
    xor    %eax,%eax
    mov    %dl,%bl
    mov    %eax,-0x10(%ebp)
    cmp    $0xe,%dl
    jne    jump_3203e
    mov    $0x3,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_51f24
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3201c:
    mov    0xbd(%esi),%eax
    sar    $0x10,%eax
    mov    data_866d8(,%eax,2),%eax
    sar    $0x10,%eax
    mov    %eax,-0x10(%ebp)
    jmp    jump_3205b
  jump_32034:
    mov    data_c3504,%eax
    mov    %eax,-0x10(%ebp)
    jmp    jump_3205b
  jump_3203e:
    movb   $0x1,data_f1c68(%edx)
    cmp    $0x9,%dl
    jb     jump_32056
    cmp    $0xb,%dl
    jbe    jump_3201c
    cmp    $0xc,%dl
    je     jump_32034
    jmp    jump_3205b
  jump_32056:
    cmp    $0x7,%dl
    je     jump_3201c
  jump_3205b:
    push   $0x0
    mov    -0x10(%ebp),%ecx
    xor    %edx,%edx
    movsbl %bl,%eax
    mov    data_f458e,%dl
    mov    %eax,-0xc(%ebp)
    mov    %eax,%ebx
    mov    %edi,%eax
    call   func_40410
    movsbl %al,%ecx
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_322f4
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    -0xc(%ebp),%ebx
    push   %edx
    xor    %edx,%edx
    mov    -0x4(%ebp),%eax
    mov    data_86775,%dl
    call   func_408f4
    push   $0x0
    mov    $0xd,%ebx
    mov    0xb3(%esi),%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_520f4
    lea    -0x20(%ebp),%ebx
    mov    0xbd(%esi),%ecx
    mov    -0x4(%ebp),%eax
    sar    $0x10,%ecx
    xor    %edx,%edx
    mov    data_866d8(,%ecx,2),%ecx
    mov    data_86775,%dl
    sar    $0x10,%ecx
    call   func_3fc98
    push   $0xffffffff
    mov    $0xffffffff,%ecx
    lea    -0x20(%ebp),%edx
    movswl %ax,%ebx
    mov    %esi,%eax
    call   func_32128
  jump_320f2:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_320fc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    mov    0xb7(%eax),%edx
    test   %edx,%edx
    jne    jump_32116
    push   %edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_32128
  jump_32116:
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32128:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ebp
    mov    %ecx,0x4(%esp)
    xor    %ecx,%ecx
    mov    %cx,data_f3e38
    cmpl   $0x0,0x1c(%esp)
    je     jump_32167
    mov    $0xf,%ecx
    mov    $data_f01e4,%edi
    mov    %edx,%esi
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    %bx,data_f01f4
  jump_32167:
    mov    0xab(%ebp),%eax
    xor    %esi,%esi
    mov    0x8cd(%eax),%dx
    call   func_2e42c
    mov    data_f01f4,%di
    mov    %edx,0x8(%esp)
    test   %di,%di
    jle    jump_321f1
    jmp    jump_32199
  jump_3218d:
    mov    data_f01f4,%ax
    inc    %esi
    cmp    %ax,%si
    jge    jump_321f1
  jump_32199:
    movswl %si,%edi
    mov    data_f01e1(%edi),%edx
    sar    $0x18,%edx
    cmpb   $0x0,data_f1c68(%edx)
    jne    jump_3218d
    mov    $0xffffffff,%ecx
    mov    %ebp,%eax
    mov    %ecx,%ebx
    call   func_32328
    mov    $0xffffffff,%ebx
    mov    0xab(%ebp),%edx
    xor    %ecx,%ecx
    mov    %edx,(%esp)
    mov    %eax,%edx
    mov    (%esp),%eax
    call   func_2e16c
    mov    data_f01e1(%edi),%ebx
    xor    %edx,%edx
    sar    $0x18,%ebx
    mov    %ax,%dx
    mov    0xab(%ebp),%eax
    call   func_2e330
    jmp    jump_3218d
  jump_321f1:
    cmpl   $0x0,0x4(%esp)
    jne    jump_3220a
    xor    %edx,%edx
    mov    0xab(%ebp),%eax
    mov    0x8(%esp),%dx
    call   func_2e3bc
  jump_3220a:
    mov    0xab(%ebp),%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_32224:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%esi
    mov    %edx,0x4(%esp)
    mov    %ebx,0x8(%esp)
    mov    0xab(%eax),%eax
    xor    %edx,%edx
    xor    %edi,%edi
    mov    %dx,data_f3e38
    call   func_2e42c
    test   %bx,%bx
    jle    jump_322a3
  jump_32250:
    mov    0x4(%esp),%edx
    movswl %di,%eax
    mov    $0xffffffff,%ebx
    add    %eax,%edx
    xor    %ecx,%ecx
    mov    %edx,(%esp)
    mov    %esi,%eax
    movsbl (%edx),%edx
    call   func_32328
    mov    $0xffffffff,%ebx
    mov    %eax,%edx
    mov    0xab(%esi),%ebp
    xor    %ecx,%ecx
    mov    %ebp,%eax
    call   func_2e16c
    mov    (%esp),%ebx
    xor    %edx,%edx
    inc    %edi
    mov    %ax,%dx
    movsbl (%ebx),%ebx
    mov    0xab(%esi),%eax
    mov    0x8(%esp),%ecx
    call   func_2e330
    cmp    %cx,%di
    jl     jump_32250
  jump_322a3:
    mov    0xab(%esi),%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_322bc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    $0xffffffff,%ecx
    movsbl %dl,%edx
    xor    %ebx,%ebx
    call   func_32328
    mov    0xaf(%esi),%edx
    mov    %eax,0xab(%edx)
    mov    0xaf(%esi),%eax
    mov    0xa7(%eax),%esi
    xor    %edx,%edx
    call   *0xc(%esi)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_322f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    movsbl %dl,%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_32328
    mov    0xaf(%esi),%edx
    mov    %eax,0xab(%edx)
    mov    0xaf(%esi),%eax
    mov    0xa7(%eax),%esi
    xor    %edx,%edx
    call   *0xc(%esi)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32328:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,0x8(%esp)
    mov    %edx,0xc(%esp)
    mov    %ebx,%ebp
    mov    %ecx,(%esp)
    mov    data_f3e36,%edx
    sar    $0x10,%edx
    cmp    $0xf,%edx
    jl     jump_3235a
    mov    $0x27b,%ebx
    mov    $data_81bff,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3235a:
    test   %ebp,%ebp
    je     jump_32388
    mov    data_f3e36,%ebx
    sar    $0x10,%ebx
    inc    %ebx
    lea    0x0(,%ebx,4),%edx
    sub    %ebx,%edx
    shl    $0x2,%edx
    mov    %edx,%ebx
    shl    $0x4,%edx
    sub    %ebx,%edx
    mov    $data_f32f8,%ebx
    add    %edx,%ebx
    mov    %ebx,0x4(%esp)
    jmp    jump_32390
  jump_32388:
    movl   $data_f32f8,0x4(%esp)
  jump_32390:
    cmpl   $0x0,(%esp)
    je     jump_323be
    test   %ebp,%ebp
    je     jump_323ac
    mov    0x9(%esp),%ebx
    sar    $0x18,%ebx
    shl    $0x7,%ebx
    add    $data_f05e8,%ebx
    jmp    jump_323e1
  jump_323ac:
    mov    0x9(%esp),%ebx
    sar    $0x18,%ebx
    shl    $0x7,%ebx
    add    $data_f1c78,%ebx
    jmp    jump_323e1
  jump_323be:
    test   %ebp,%ebp
    je     jump_323d0
    mov    0x9(%esp),%edx
    sar    $0x18,%edx
    mov    $data_f0d68,%ebx
    jmp    jump_323dc
  jump_323d0:
    mov    0x9(%esp),%edx
    sar    $0x18,%edx
    mov    $data_f23f8,%ebx
  jump_323dc:
    shl    $0x7,%edx
    add    %edx,%ebx
  jump_323e1:
    mov    0x4(%esp),%edx
    jmp    jump_32537
  jump_323ea:
    test   %ebp,%ebp
    je     jump_3241b
  jump_323ee:
    xor    %ecx,%ecx
    mov    data_f458e,%cl
    imul   $0x1ee,%ecx,%ecx
    mov    data_92e17(%ecx),%cl
    and    $0xff,%ecx
    imul   $0x14,%ecx,%ecx
    mov    $data_f4590,%esi
    add    %ecx,%esi
    jmp    jump_32501
  jump_32417:
    test   %ebp,%ebp
    je     jump_323ee
  jump_3241b:
    xor    %ecx,%ecx
    mov    data_86775,%cl
    imul   $0x1ee,%ecx,%ecx
    mov    data_92e17(%ecx),%cl
    and    $0xff,%ecx
    imul   $0x14,%ecx,%ecx
    mov    $data_f4590,%esi
    add    %ecx,%esi
    jmp    jump_32501
  jump_32444:
    cmp    $0xffffffff,%ebp
    jne    jump_32486
    cmp    (%esp),%ebp
    jne    jump_32486
    mov    0x8(%esp),%ecx
    mov    0xbd(%ecx),%ecx
    sar    $0x10,%ecx
    mov    data_866d8(,%ecx,2),%ecx
    sar    $0x10,%ecx
    imul   $0x1ee,%ecx,%ecx
    mov    data_92e17(%ecx),%cl
    and    $0xff,%ecx
    imul   $0x14,%ecx,%ecx
    mov    $data_f4590,%esi
    add    %ecx,%esi
    jmp    jump_32501
  jump_32486:
    xor    %ecx,%ecx
    mov    data_86775,%cl
    imul   $0x1ee,%ecx,%ecx
    imul   $0x1ee,data_93000(%ecx),%ecx
    mov    data_92e17(%ecx),%cl
    and    $0xff,%ecx
    imul   $0x14,%ecx,%ecx
    mov    $data_f4590,%esi
    add    %ecx,%esi
    jmp    jump_32501
  jump_324b6:
    test   %ebp,%ebp
    je     jump_324c5
    mov    data_c3504,%esi
    add    $0x1c,%esi
    jmp    jump_32501
  jump_324c5:
    xor    %ecx,%ecx
    mov    data_86775,%cl
    imul   $0x1ee,%ecx,%ecx
    mov    data_93000(%ecx),%esi
    add    $0x1c,%esi
    jmp    jump_32501
  jump_324de:
    mov    0x1(%ebx),%al
    cmp    $0x73,%al
    jb     jump_324f9
    jbe    jump_324b6
    cmp    $0x74,%al
    jbe    jump_32444
    cmp    $0x79,%al
    je     jump_32417
    jmp    jump_32501
  jump_324f9:
    cmp    $0x6d,%al
    je     jump_323ea
  jump_32501:
    test   %esi,%esi
    je     jump_32530
    mov    %edx,%edi
    push   %edi
  jump_32508:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_32520
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_32508
  jump_32520:
    pop    %edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    inc    %ebx
    add    %ecx,%edx
    jmp    jump_32536
  jump_32530:
    inc    %edx
    mov    (%ebx),%al
    mov    %al,-0x1(%edx)
  jump_32536:
    inc    %ebx
  jump_32537:
    movsbl (%ebx),%ecx
    test   %ecx,%ecx
    je     jump_32549
    mov    (%ebx),%ah
    xor    %esi,%esi
    cmp    $0x25,%ah
    je     jump_324de
    jmp    jump_32501
  jump_32549:
    movb   $0x0,(%edx)
    test   %ebp,%ebp
    je     jump_32557
    incw   data_f3e38
  jump_32557:
    mov    0x4(%esp),%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_32564:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x20,%esp
    mov    %eax,%ecx
    xor    %eax,%eax
    mov    data_86775,%al
    test   %eax,%eax
    jl     jump_3257e
    cmp    $0x15,%eax
    jl     jump_3258f
  jump_3257e:
    mov    $0x2d6,%ebx
    mov    $data_81c0d,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3258f:
    xor    %eax,%eax
    mov    data_f458e,%al
    test   %eax,%eax
    jl     jump_3259f
    cmp    $0x15,%eax
    jl     jump_325b0
  jump_3259f:
    mov    $0x2d7,%ebx
    mov    $data_81c1b,%edx
    xor    %eax,%eax
    call   func_25878
  jump_325b0:
    movzbl data_86775,%esi
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    mov    data_92e17(,%eax,2),%al
    and    $0xff,%eax
    push   %eax
    push   $data_81c29
    lea    0x8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    mov    $data_81c36,%esi
    lea    0x10(%esp),%edi
    push   %edi
  jump_325ec:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_32604
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_325ec
  jump_32604:
    pop    %edi
    mov    0xb9(%ecx),%eax
    movzbl data_86775,%esi
    sar    $0x10,%eax
    cmp    %esi,%eax
    je     jump_32657
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_32637
    mov    $0x2e4,%ebx
    mov    $data_81c41,%edx
    call   func_25878
  jump_32637:
    mov    %esi,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_326b8
    mov    %esi,%eax
    call   func_7280e
    xor    %eax,%eax
    mov    data_86775,%al
    mov    %ax,0xbb(%ecx)
  jump_32657:
    mov    0xbb(%ecx),%eax
    movzbl data_f458e,%esi
    sar    $0x10,%eax
    cmp    %esi,%eax
    je     jump_326ae
    lea    0x10(%esp),%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_3268b
    mov    $0x2ef,%ebx
    mov    $data_81c4f,%edx
    call   func_25878
  jump_3268b:
    mov    $0xffffffff,%ebx
    mov    %esi,%edx
    mov    %ecx,%eax
    call   func_326b8
    mov    %esi,%eax
    call   func_7280e
    xor    %eax,%eax
    mov    data_f458e,%al
    mov    %ax,0xbd(%ecx)
  jump_326ae:
    add    $0x20,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_326b8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xcc,%esp
    mov    $data_81c5d,%ebp
    mov    %edx,%ecx
    mov    %ebx,%edi
    mov    $0x7,%esi
  jump_326d0:
    mov    %esp,%eax
    mov    %esi,%ebx
    mov    %ebp,%edx
    call   func_73d7a
    test   %eax,%eax
    je     jump_326ea
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2f538
    jmp    jump_326d0
  jump_326ea:
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2f538
    xor    %esi,%esi
    mov    $0x7f,%ebp
  jump_326fa:
    mov    $0x9,%ebx
    mov    $data_81c65,%edx
    mov    %esp,%eax
    call   func_73d7a
    test   %eax,%eax
    je     jump_3274d
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2f538
    test   %edi,%edi
    je     jump_3272d
    movswl %si,%eax
    mov    %esp,%edx
    shl    $0x7,%eax
    mov    %ebp,%ebx
    add    $data_f05e8,%eax
    jmp    jump_3273c
  jump_3272d:
    movswl %si,%eax
    mov    %esp,%edx
    shl    $0x7,%eax
    mov    %ebp,%ebx
    add    $data_f1c78,%eax
  jump_3273c:
    inc    %esi
    call   func_72b40
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2f538
    jmp    jump_326fa
  jump_3274d:
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2f538
    xor    %esi,%esi
    mov    $0x7f,%ebp
  jump_3275d:
    mov    $0x9,%ebx
    mov    $data_81c6f,%edx
    mov    %esp,%eax
    call   func_73d7a
    test   %eax,%eax
    je     jump_327b0
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2f538
    test   %edi,%edi
    je     jump_32790
    movswl %si,%eax
    mov    %esp,%edx
    shl    $0x7,%eax
    mov    %ebp,%ebx
    add    $data_f0d68,%eax
    jmp    jump_3279f
  jump_32790:
    movswl %si,%eax
    mov    %esp,%edx
    shl    $0x7,%eax
    mov    %ebp,%ebx
    add    $data_f23f8,%eax
  jump_3279f:
    inc    %esi
    call   func_72b40
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2f538
    jmp    jump_3275d
  jump_327b0:
    add    $0xcc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_327bc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4c,%esp
    mov    %eax,%ebp
    mov    %edx,0x14(%esp)
    mov    $data_81c79,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    data_efd96,%ax
    mov    %eax,0x48(%esp)
    mov    0x14(%esp),%eax
    mov    0x14(%esp),%edx
    mov    %eax,0x24(%esp)
    xor    %eax,%eax
    mov    (%edx),%al
    mov    %eax,%esi
    shl    $0x5,%esi
    sub    %eax,%esi
    shl    $0x3,%esi
    sub    %eax,%esi
    add    %esi,%esi
    mov    %eax,0x2c(%esp)
    xor    %eax,%eax
    mov    data_92e18(%esi),%al
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0x10(%esp)
    mov    0x2a(%esp),%eax
    mov    $0x3,%ebx
    sar    $0x10,%eax
    mov    %ebx,%edx
    mov    %eax,0x4(%esp)
    mov    %eax,%ecx
    mov    %ebp,%eax
    call   func_4f228
    xor    %edx,%edx
    mov    data_92e17(%esi),%dl
    mov    $data_fd3aa,%edi
    lea    0x0(,%edx,4),%eax
    mov    $data_f4590,%ecx
    add    %edx,%eax
    push   $0x0
    shl    $0x2,%eax
    mov    $0x5,%ebx
    add    %eax,%ecx
    mov    0x12(%esp),%eax
    push   $0xff
    sar    $0x10,%eax
    mov    %ebp,%esi
    push   %eax
    mov    $0x14,%edx
    mov    %eax,0x18(%esp)
    push   $0x0
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_c8c44
    push   $0x1e
    mov    0x44(%esp),%edx
    push   $0x96
    mov    data_efd44(,%edx,2),%dx
    push   $0x0
    mov    $data_11f10c,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    push   %ebp
    mov    $0xc8,%esi
    call   func_589f1
    add    $0x28,%esp
    mov    $0x14,%edi
    mov    0x4(%esp),%ebx
    mov    $data_11f10c,%eax
    push   %ebx
    mov    $0x96,%ecx
    xor    %edx,%edx
    push   $0x1e
    mov    0x50(%esp),%dx
    mov    $0x3,%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    mov    %esi,0x40(%esp)
    call   func_4f2a8
    mov    %esp,%ebx
    mov    0x14(%esp),%eax
    xor    %ecx,%ecx
    xor    %edx,%edx
    mov    %ecx,(%esp)
    call   func_3c310
    mov    %edi,%eax
    mov    %edi,0x30(%esp)
    call   func_1ce70
    push   %ecx
    mov    %ebp,%esi
    mov    0x10(%esp),%edx
    push   $0xff
    mov    $data_fd38a,%edi
    mov    $0x5,%ebx
    push   %edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0xc8,%edx
    push   %ecx
    mov    %eax,%ecx
    mov    $data_fd382,%eax
    xor    %edi,%edi
    call   func_2af88
    jmp    jump_3294d
  jump_3294c:
    inc    %edi
  jump_3294d:
    mov    (%esp),%ebx
    movswl %di,%esi
    cmp    %ebx,%esi
    jge    jump_329b6
    mov    0x2a(%esp),%eax
    mov    0x38(%esp),%ecx
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x34(%esp),%eax
    mov    data_efd96,%dx
    push   %eax
    mov    $data_11f10c,%eax
    mov    $0x5,%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_4f2a8
    mov    $0x9,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x8,0x38(%esp)
    cmp    $0x8,%edx
    jne    jump_3294c
    mov    0x30(%esp),%esi
    mov    $0xc8,%ecx
    add    %edx,%esi
    mov    %ecx,0x38(%esp)
    mov    %esi,0x30(%esp)
    jmp    jump_3294c
  jump_329b6:
    mov    0x24(%esp),%eax
    mov    $0x118,%ecx
    mov    $0x14,%esi
    mov    0xe(%esp),%edx
    mov    $0x5,%ebx
    mov    $data_fd38a,%edi
    call   func_3c3cc
    mov    %eax,0x18(%esp)
    mov    %ecx,0x44(%esp)
    mov    $0x15,%eax
    mov    %esi,0x28(%esp)
    call   func_1ce70
    push   $0x0
    sar    $0x10,%edx
    push   $0xff
    mov    %ebp,%esi
    mov    %eax,%ecx
    push   %edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $data_fd382,%eax
    push   $0x0
    mov    $0x118,%edx
    xor    %edi,%edi
    call   func_2af88
    jmp    jump_32a17
  jump_32a16:
    inc    %edi
  jump_32a17:
    mov    0x18(%esp),%eax
    movswl %di,%esi
    cmp    %eax,%esi
    jge    jump_32a82
    mov    0x2a(%esp),%eax
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x2c(%esp),%ecx
    mov    data_efd96,%dx
    push   %ecx
    mov    $data_11f10c,%eax
    mov    $0x6,%ebx
    call   func_1b084
    mov    0x4c(%esp),%ecx
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_4f2a8
    mov    $0x9,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x8,0x44(%esp)
    cmp    $0x8,%edx
    jne    jump_32a16
    mov    0x28(%esp),%edx
    mov    $0x118,%eax
    add    $0x8,%edx
    mov    %eax,0x44(%esp)
    mov    %edx,0x28(%esp)
    jmp    jump_32a16
  jump_32a82:
    mov    0x24(%esp),%eax
    mov    $0x168,%edx
    mov    $0x14,%ebx
    mov    $data_fd38a,%edi
    call   func_3c650
    mov    %ebp,%esi
    sar    $0x2,%eax
    mov    %edx,0x40(%esp)
    mov    %eax,0x20(%esp)
    mov    $0x16,%eax
    mov    %ebx,0x34(%esp)
    call   func_1ce70
    push   $0x0
    mov    0x12(%esp),%edx
    mov    $0x5,%ebx
    push   $0xff
    sar    $0x10,%edx
    mov    %eax,%ecx
    push   %edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $data_fd382,%eax
    push   $0x0
    mov    $0x168,%edx
    xor    %edi,%edi
    call   func_2af88
    jmp    jump_32ae6
  jump_32ae5:
    inc    %edi
  jump_32ae6:
    mov    0x20(%esp),%ebx
    movswl %di,%esi
    cmp    %ebx,%esi
    jge    jump_32b50
    mov    0x2a(%esp),%eax
    mov    0x40(%esp),%ecx
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x38(%esp),%eax
    mov    data_efd96,%dx
    push   %eax
    mov    $data_11f10c,%eax
    mov    $0x7,%ebx
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    call   func_4f2a8
    mov    $0x9,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x8,0x40(%esp)
    cmp    $0x8,%edx
    jne    jump_32ae5
    mov    0x34(%esp),%esi
    mov    $0x168,%ecx
    add    %edx,%esi
    mov    %ecx,0x40(%esp)
    mov    %esi,0x34(%esp)
    jmp    jump_32ae5
  jump_32b50:
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    mov    $0x1cc,%esi
    sub    %edx,%eax
    mov    $data_92e16,%edx
    add    %eax,%eax
    mov    $0x5,%ecx
    add    %eax,%edx
    xor    %edi,%edi
    mov    %edx,0x1c(%esp)
    mov    data_93b98,%dx
    mov    %ecx,0x3c(%esp)
    test   %dx,%dx
    jle    jump_32c70
    jmp    jump_32bf2
  jump_32b93:
    cmp    $0x2,%cl
    jne    jump_32b9d
    mov    $0x8,%ebx
  jump_32b9d:
    cmp    $0xffffffff,%ebx
    je     jump_32bc6
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd96,%dx
    call   func_1b084
    mov    0x3c(%esp),%edx
    push   %edx
    push   %esi
    push   %ebx
    push   %eax
    push   %ebp
    call   func_57efc
    add    $0x14,%esp
  jump_32bc6:
    add    $0x39,%esi
    cmp    $0x258,%esi
    jle    jump_32be1
    mov    0x3c(%esp),%ebx
    add    $0x1b,%ebx
    mov    $0x1cc,%esi
    mov    %ebx,0x3c(%esp)
  jump_32be1:
    mov    data_93b98,%bx
    inc    %edi
    cmp    %bx,%di
    jge    jump_32c70
  jump_32bf2:
    mov    0x2c(%esp),%edx
    movswl %di,%eax
    cmp    %edx,%eax
    je     jump_32be1
    mov    0x24(%esp),%edx
    cmpb   $0x0,0x1c0(%edx,%eax,1)
    je     jump_32be1
    imul   $0x1ee,%eax,%edx
    cmpl   $0x0,data_92e19(%edx)
    jne    jump_32be1
    mov    0x1c(%esp),%edx
    cmpb   $0x0,0x1c0(%edx,%eax,1)
    jne    jump_32c34
    xor    %edx,%edx
    mov    data_f458e,%dl
    cmp    %edx,%eax
    jne    jump_32be1
  jump_32c34:
    mov    0x3c(%esp),%ebx
    movswl %di,%eax
    mov    %esi,%edx
    mov    %eax,0x8(%esp)
    mov    %eax,%ecx
    mov    %ebp,%eax
    call   func_4f228
    mov    0x24(%esp),%eax
    add    0x8(%esp),%eax
    mov    0x1c0(%eax),%cl
    mov    $0xffffffff,%ebx
    cmp    $0x3,%cl
    jne    jump_32b93
    mov    $0x9,%ebx
    jmp    jump_32b9d
  jump_32c70:
    add    $0x4c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_32c78:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85d9c,0xa7(%eax)
    call   func_32cd8
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_32c94:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_32cb3
    mov    $data_85d5c,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_32cb3:
    mov    $0x1,%edx
    movl   $data_85d9c,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_32cd3
    call   func_72124
  jump_32cd3:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32cd8:
/*----------------------------------------------------------------*/
    movl   $0x0,0xab(%eax)
    ret


/*----------------------------------------------------------------*/
func_32ce4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %dx,(%esp)
    mov    %ebx,%edi
    cmp    $0x1,%dx
    jne    jump_32d42
    cmpl   $0x0,0xab(%eax)
    jne    jump_32d30
    mov    $data_81c85,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,0xab(%esi)
    movw   $0x3c,0x8c9(%eax)
    mov    $func_327bc,%edx
    mov    0xab(%esi),%eax
    call   func_2e8a8
  jump_32d30:
    mov    -0x2(%esp),%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_2eb04
    jmp    jump_32d4e
  jump_32d42:
    mov    -0x2(%esp),%edx
    sar    $0x10,%edx
    call   func_2eb04
  jump_32d4e:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_32d54:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x40,%esp
    mov    %eax,0x34(%esp)
    lea    0x4(%eax),%esi
    mov    $0x3,%ebx
    mov    $data_fa35c,%eax
    mov    %esi,%edx
    xor    %ecx,%ecx
    call   func_50690
    mov    data_f458e,%cl
    mov    %ebx,%edx
    mov    %esi,%eax
    call   func_4f228
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    mov    $0x1b,%eax
    call   func_1ce70
    push   %eax
    lea    0x8(%esp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_720c9
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0xc,%esp
    mov    data_92e18(,%eax,2),%al
    push   $0x0
    xor    %ah,%ah
    lea    0x4(%esp),%ecx
    shl    $0x2,%eax
    mov    $0x9,%ebx
    add    $0x13,%eax
    push   $0xff
    cwtl
    mov    $data_92e16,%ebp
    push   %eax
    mov    $data_fd3aa,%edi
    xor    %edx,%edx
    push   $0x2
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    0x34(%esp),%eax
    mov    %ebp,%edi
    mov    0xab(%eax),%eax
    xor    %esi,%esi
    call   func_2e42c
    jmp    jump_32e42
  jump_32e35:
    add    $0x1ee,%edi
    inc    %esi
    add    $0x1ee,%ebp
  jump_32e42:
    mov    data_93b96,%eax
    sar    $0x10,%eax
    cmp    %eax,%esi
    jge    jump_32ed9
    xor    %eax,%eax
    mov    data_f458e,%al
    cmp    %eax,%esi
    je     jump_32e7c
    imul   $0x1ee,%eax,%eax
    cmpb   $0x0,data_92fd6(%esi,%eax,1)
    je     jump_32e35
    imul   $0x1ee,%esi,%eax
    cmpl   $0x0,data_92e19(%eax)
    jne    jump_32e35
  jump_32e7c:
    mov    %edi,%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    %ebx,0x38(%esp)
    lea    0x38(%esp),%ebx
    call   func_3c310
    mov    %edi,%eax
    xor    %ecx,%ecx
    call   func_3c3cc
    mov    %eax,0x3c(%esp)
    mov    0x34(%esp),%eax
    mov    $0xffffffff,%ebx
    mov    %ebp,%edx
    mov    0xab(%eax),%eax
    call   func_2e16c
    mov    0x38(%esp),%ebx
    add    0x3c(%esp),%ebx
    movswl %ax,%edx
    neg    %ebx
    mov    0x34(%esp),%eax
    and    $0xffff,%edx
    mov    0xab(%eax),%eax
    call   func_2e330
    jmp    jump_32e35
  jump_32ed9:
    mov    0x34(%esp),%eax
    mov    $func_10a14,%edx
    mov    0xab(%eax),%eax
    call   func_2e8b8
    mov    0x34(%esp),%eax
    mov    0xab(%eax),%eax
    xor    %edx,%edx
    call   func_2e8c0
    mov    0x34(%esp),%eax
    call   func_2c8f8
    add    $0x40,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32f10:
/*----------------------------------------------------------------*/
    call   func_2f330
    movl   $data_85d84,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_32f20:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_32f3f
    mov    $data_85d48,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_32f3f:
    mov    $0x1,%edx
    movl   $data_85d84,0xa7(%eax)
    call   func_2f348
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_32f5f
    call   func_72124
  jump_32f5f:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32f64:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x14,%esp
    mov    %eax,%ecx
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    $data_92e16,%eax
    mov    0x19a(%eax),%eax
    sar    $0x18,%eax
    push   %eax
    push   $data_81c8f
    lea    0x8(%esp),%eax
    push   %eax
    lea    0xc(%esp),%ebx
    call   func_720c9
    add    $0xc,%esp
    mov    $data_81c98,%edx
    mov    %ecx,%eax
    call   func_2f390
    add    $0x14,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_32fbc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x78,%esp
    mov    %eax,%ebp
    movzbl data_f458e,%esi
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    mov    $data_92e16,%esi
    add    %eax,%eax
    add    %eax,%esi
    cmp    $0x1,%dx
    jb     jump_330f1
    jbe    jump_32ffb
    cmp    $0x32,%dx
    je     jump_330ec
    jmp    jump_330f1
  jump_32ffb:
    mov    %esi,%eax
    xor    %edx,%edx
    call   func_3efa0
    cmp    $0xffffffff,%eax
    jne    jump_33015
    movb   $0x2,0xccb(%ebp)
    jmp    jump_330c8
  jump_33015:
    mov    0x67(%ebp),%eax
    push   $0x0
    mov    $0x2,%ebx
    mov    (%eax),%edx
    xor    %ecx,%ecx
    mov    $data_fa35c,%eax
    mov    0x41(%edx),%edx
    call   func_520f4
    mov    0x19a(%esi),%eax
    xor    %edx,%edx
    sar    $0x18,%eax
    mov    0x19e(%esi),%ebx
    mov    data_86780(,%eax,2),%dx
    sub    %ebx,%edx
    cmp    $0x1,%edx
    jne    jump_33057
    mov    $0x1c,%eax
    jmp    jump_3305c
  jump_33057:
    mov    $0x1d,%eax
  jump_3305c:
    call   func_1ce70
    push   %eax
    push   %edx
    mov    0xcd0(%ebp),%ecx
    push   %ecx
    lea    0xc(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
    mov    %esp,%esi
    mov    0xcd0(%ebp),%edi
    push   %edi
  jump_33080:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_33098
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_33080
  jump_33098:
    pop    %edi
    mov    $0x1e,%eax
    call   func_1ce70
    mov    0x67(%ebp),%edx
    mov    0x4(%edx),%edi
    mov    %eax,%esi
    add    $0x20,%edi
    push   %edi
  jump_330af:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_330c7
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_330af
  jump_330c7:
    pop    %edi
  jump_330c8:
    movl   $0xffffffff,0x35(%ebp)
    mov    %ebp,%eax
    mov    0xa7(%ebp),%ebx
    movl   $0xffffffff,0x39(%ebp)
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x78,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_330ec:
    cmp    $0x1,%ebx
    je     jump_330fd
  jump_330f1:
    movswl %dx,%edx
    mov    %ebp,%eax
    call   func_2f448
    jmp    jump_33141
  jump_330fd:
    mov    %ebx,%edx
    mov    %esi,%eax
    call   func_3efa0
    mov    0x19a(%esi),%eax
    sar    $0x18,%eax
    push   %eax
    push   $data_81ca1
    lea    0x6c(%esp),%eax
    push   %eax
    lea    0x70(%esp),%ebx
    call   func_720c9
    add    $0xc,%esp
    mov    $data_81cab,%edx
    mov    %ebp,%eax
    call   func_2f390
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
  jump_33141:
    add    $0x78,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_33148:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ebx
    xor    %edx,%edx
    call   func_2fe54
    push   $0x41
    push   $0xfa
    xor    %edx,%edx
    push   $0x0
    mov    $data_11f10c,%eax
    mov    data_f458e,%dl
    call   func_1b084
    push   %eax
    lea    0x4(%ebx),%esi
    push   %esi
    call   func_57efc
    xor    %ebx,%ebx
    mov    data_f458e,%bl
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    add    $0x14,%esp
    shl    $0x3,%eax
    push   $0x41
    sub    %ebx,%eax
    push   $0xfa
    mov    data_92e18(,%eax,2),%al
    and    $0xff,%eax
    push   %eax
    mov    $0x21,%edx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_57efc
    add    $0x14,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_331d0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,0xc(%esp)
    cmpl   $0x0,0x10(%eax)
    je     jump_331fb
    cmp    0x14(%eax),%di
    je     jump_331fb
    mov    $0x40,%ebx
    mov    $data_81cb4,%edx
    xor    %eax,%eax
    call   func_25878
  jump_331fb:
    mov    data_f4458,%ebx
    mov    %ecx,0x10(%esi)
    test   %ebx,%ebx
    jne    jump_3320f
    mov    %esi,%eax
    call   func_33410
  jump_3320f:
    xor    %eax,%eax
    mov    %di,%ax
    cmp    $0x5,%eax
    jge    jump_3321f
    mov    %di,0x14(%esi)
    jmp    jump_33225
  jump_3321f:
    movw   $0x4,0x14(%esi)
  jump_33225:
    movw   $0x0,0x18(%esi)
    xor    %eax,%eax
  jump_3322d:
    xor    %edx,%edx
    mov    0x14(%esi),%dx
    imul   $0xf,%edx,%edx
    mov    data_f44a8(%edx,%eax,1),%dl
    mov    0x18(%esi),%bx
    xor    %dh,%dh
    add    %edx,%ebx
    inc    %eax
    mov    %bx,0x18(%esi)
    cmp    $0xf,%eax
    jl     jump_3322d
    xor    %eax,%eax
    mov    %bx,%ax
    cmp    $0x64,%eax
    jle    jump_3326a
    mov    $0x51,%ebx
    mov    $data_81cc2,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3326a:
    mov    0x18(%esi),%ax
    add    $0xa,%eax
    mov    %ax,0x1a(%esi)
    xor    %eax,%eax
    mov    0xc(%esp),%ax
    cmp    $0xb,%eax
    jge    jump_33289
    mov    %ax,0x16(%esi)
    jmp    jump_3328f
  jump_33289:
    movw   $0x2,0x16(%esi)
  jump_3328f:
    xor    %eax,%eax
    mov    0x16(%esi),%ax
    mov    $data_f44f4,%ebx
    shl    $0x2,%eax
    add    %eax,%ebx
    xor    %edx,%edx
    mov    (%ebx),%dl
    mov    %edx,%eax
    shl    $0xf,%eax
    mov    $0x64,%ecx
    sub    %edx,%eax
    xor    %edx,%edx
    div    %ecx
    xor    %edx,%edx
    mov    0x1(%ebx),%dl
    mov    %eax,%ebp
    mov    %edx,%eax
    shl    $0xf,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    div    %ecx
    mov    %ebp,%edx
    add    %eax,%edx
    mov    %edx,0x8(%esp)
    xor    %edx,%edx
    mov    0x2(%ebx),%dl
    mov    %edx,%eax
    shl    $0xf,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    div    %ecx
    mov    0x8(%esp),%edx
    add    %eax,%edx
    mov    %edx,(%esp)
    xor    %edx,%edx
    mov    0x3(%ebx),%dl
    mov    %edx,%eax
    shl    $0xf,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    div    %ecx
    mov    (%esp),%edx
    xor    %ebx,%ebx
    add    %eax,%edx
    xor    %ecx,%ecx
    mov    %edx,0x4(%esp)
    xor    %edx,%edx
    jmp    jump_33340
  jump_33307:
    mov    0x8(%esp),%edi
    inc    %ecx
    cmp    %edi,%eax
    jge    jump_33317
    mov    $0x2,%eax
    jmp    jump_33335
  jump_33317:
    cmp    (%esp),%eax
    jge    jump_33323
    mov    $0x3,%eax
    jmp    jump_33335
  jump_33323:
    cmp    0x4(%esp),%eax
    jge    jump_33330
    mov    $0x4,%eax
    jmp    jump_33335
  jump_33330:
    mov    $0x1,%eax
  jump_33335:
    add    $0x4,%edx
    mov    0x10(%esi),%edi
    inc    %ebx
    mov    %al,-0x4(%edx,%edi,1)
  jump_33340:
    xor    %eax,%eax
    mov    0x1a(%esi),%ax
    cmp    %eax,%ebx
    jge    jump_33378
    mov    0x10(%esi),%eax
    movb   $0xff,0x1(%edx,%eax,1)
    mov    0x10(%esi),%eax
    xor    %edi,%edi
    movw   $0x0,0x2(%edx,%eax,1)
    mov    0x18(%esi),%di
    mov    $0x1,%eax
    cmp    %edi,%ebx
    jge    jump_33335
    call   func_7369f
    cmp    %ebp,%eax
    jge    jump_33307
    xor    %eax,%eax
    jmp    jump_33335
  jump_33378:
    movb   $0x0,0x66(%esi)
    xor    %ah,%ah
    mov    0x66(%esi),%al
    mov    %ax,0x50(%esi)
    mov    %ax,0x4e(%esi)
    mov    %ax,0x4c(%esi)
    mov    %ax,0x48(%esi)
    mov    %ax,0x46(%esi)
    mov    %ax,0x44(%esi)
    mov    %ax,0x42(%esi)
    call   func_7369f
    mov    %eax,%edx
    mov    $0x7,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    test   %edx,%edx
    jne    jump_333cf
    xor    %ebx,%ebx
    mov    0x18(%esi),%bx
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x10(%esi),%eax
    orb    $0x8,(%eax,%edx,4)
    orb    $0x2,0x66(%esi)
  jump_333cf:
    mov    $0x3,%ebx
    mov    %ecx,%edx
    mov    %ecx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    movw   $0xffff,0x52(%esi)
    movb   $0xff,0x54(%esi)
    add    $0x5,%eax
    mov    %ax,0x55(%esi)
    mov    %ax,0x4a(%esi)
    mov    %esi,%eax
    movb   $0xff,0x57(%esi)
    call   func_33ff4
    movl   $0x0,0x5e(%esi)
    mov    0x1a(%esi),%ax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_33410:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xec,%esp
    mov    $data_81cd0,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_33744
    xor    %edi,%edi
    mov    $0xc3,%ecx
  jump_33439:
    mov    %esp,%eax
    mov    %esi,%ebx
    mov    %ecx,%edx
    call   func_7370e
    cmpb   $0x23,(%esp)
    jne    jump_3344f
    mov    $0xffffffff,%edi
  jump_3344f:
    test   %edi,%edi
    je     jump_33439
    lea    0xc8(%esp),%eax
    push   %eax
    push   $data_81cdd
    push   %esi
    mov    $0x4,%ebp
    call   func_73431
    add    $0xc,%esp
    mov    $data_81ce0,%ecx
    mov    0xc8(%esp),%eax
    xor    %edi,%edi
    mov    %eax,data_866e4
    jmp    jump_3348c
  jump_33483:
    inc    %edi
    add    $0x4,%ebp
    cmp    $0xb,%edi
    jge    jump_334bb
  jump_3348c:
    lea    0x0(,%edi,4),%edx
    mov    %ebp,%ebx
  jump_33495:
    lea    0xc8(%esp),%eax
    push   %eax
    push   %ecx
    push   %esi
    call   func_73431
    add    $0xc,%esp
    inc    %edx
    mov    0xc8(%esp),%al
    mov    %al,data_f44f3(%edx)
    cmp    %ebx,%edx
    je     jump_33483
    jmp    jump_33495
  jump_334bb:
    mov    $0xf,%ebp
    mov    $data_81ce3,%ecx
    xor    %edi,%edi
    jmp    jump_334d2
  jump_334c9:
    inc    %edi
    add    $0xf,%ebp
    cmp    $0x5,%edi
    jge    jump_334fd
  jump_334d2:
    mov    %ebp,%ebx
    imul   $0xf,%edi,%edx
  jump_334d7:
    lea    0xc8(%esp),%eax
    push   %eax
    push   %ecx
    push   %esi
    call   func_73431
    add    $0xc,%esp
    inc    %edx
    mov    0xc8(%esp),%al
    mov    %al,data_f445b(%edx)
    cmp    %ebx,%edx
    je     jump_334c9
    jmp    jump_334d7
  jump_334fd:
    mov    $0xf,%ebp
    mov    $data_81ce6,%ecx
    xor    %edi,%edi
    jmp    jump_33514
  jump_3350b:
    inc    %edi
    add    $0xf,%ebp
    cmp    $0x5,%edi
    jge    jump_3353f
  jump_33514:
    mov    %ebp,%ebx
    imul   $0xf,%edi,%edx
  jump_33519:
    lea    0xc8(%esp),%eax
    push   %eax
    push   %ecx
    push   %esi
    call   func_73431
    add    $0xc,%esp
    inc    %edx
    mov    0xc8(%esp),%al
    mov    %al,data_f44a7(%edx)
    cmp    %ebx,%edx
    je     jump_3350b
    jmp    jump_33519
  jump_3353f:
    lea    0xd0(%esp),%eax
    push   %eax
    lea    0xd0(%esp),%eax
    push   %eax
    lea    0xd0(%esp),%eax
    push   %eax
    push   $data_81ce9
    push   %esi
    call   func_73431
    add    $0x14,%esp
    cmpl   $0x27,0xc8(%esp)
    je     jump_33580
    mov    $0xe0,%ebx
    mov    $data_81cf2,%edx
    xor    %eax,%eax
    call   func_25878
  jump_33580:
    mov    0xcc(%esp),%eax
    mov    %ax,data_f3e3c
    mov    0xd0(%esp),%eax
    xor    %edx,%edx
    mov    %ax,data_f3e3e
    xor    %eax,%eax
    mov    0xcc(%esp),%dx
    mov    0xd0(%esp),%ax
    add    %edx,%eax
    cmp    $0x27,%eax
    jle    jump_335c6
    mov    $0xe5,%ebx
    mov    $data_81d00,%edx
    xor    %eax,%eax
    call   func_25878
  jump_335c6:
    mov    $data_f3e40,%eax
    add    $0xa,%eax
    xor    %ebp,%ebp
    mov    %eax,0xe8(%esp)
    jmp    jump_3363e
  jump_335d9:
    mov    $0x20,%ch
  jump_335db:
    cmpb   $0x5e,data_f3e4a(%eax)
    jne    jump_335ea
    mov    %ch,data_f3e4a(%eax)
  jump_335ea:
    inc    %edx
    inc    %eax
    cmp    %ebx,%edx
    jge    jump_336a8
    jmp    jump_335db
  jump_335f6:
    mov    0xc8(%esp),%cl
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    data_f3e46(%ebx),%cx
    or     %eax,%ecx
    inc    %edx
    mov    %cx,data_f3e46(%ebx)
    cmp    $0x8,%edx
    jl     jump_33711
  jump_3361e:
    mov    0xe8(%esp),%eax
    add    $0x28,%eax
    add    $0x28,%ebp
    mov    %eax,0xe8(%esp)
    cmp    $0x618,%ebp
    je     jump_3373d
  jump_3363e:
    lea    0xe0(%esp),%eax
    push   %eax
    lea    0xe0(%esp),%eax
    push   %eax
    lea    0xe0(%esp),%eax
    push   %eax
    lea    0xe0(%esp),%eax
    push   %eax
    lea    0xe0(%esp),%eax
    push   %eax
    lea    0xe0(%esp),%eax
    push   %eax
    lea    0xe0(%esp),%eax
    push   %eax
    mov    0x104(%esp),%ebx
    push   %ebx
    push   $data_81d0e
    push   %esi
    call   func_73431
    add    $0x28,%esp
    mov    %ebx,%edi
    xor    %edx,%edx
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    %ecx,%ebx
    mov    %ebp,%edi
    mov    %ebp,%eax
    test   %ecx,%ecx
    jg     jump_335d9
  jump_336a8:
    mov    0xc8(%esp),%al
    xor    %edx,%edx
    mov    %al,data_f3e40(%edi)
    mov    %dx,data_f3e46(%edi)
    mov    0xcc(%esp),%al
    mov    %al,data_f3e41(%edi)
    mov    0xd0(%esp),%al
    mov    %al,data_f3e42(%edi)
    mov    0xd4(%esp),%al
    mov    %al,data_f3e43(%edi)
    mov    0xd8(%esp),%al
    mov    %al,data_f3e44(%edi)
    mov    0xdc(%esp),%eax
    mov    %ebp,%ebx
    mov    %ax,data_f3e48(%edi)
    mov    0xe0(%esp),%al
    xor    %edx,%edx
    mov    %al,data_f3e45(%edi)
  jump_33711:
    lea    0xc8(%esp),%eax
    push   %eax
    push   $data_81d26
    push   %esi
    call   func_73431
    add    $0xc,%esp
    cmpl   $0xff,0xc8(%esp)
    je     jump_3361e
    jmp    jump_335f6
  jump_3373d:
    mov    %esi,%eax
    call   func_7280e
  jump_33744:
    movl   $0xffffffff,data_f4458
    add    $0xec,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3375c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%esi
    xor    %eax,%eax
    mov    $0xffffffff,%ebp
    mov    0x57(%esi),%al
    mov    %ebp,%edi
    cmp    $0xff,%eax
    jne    jump_33781
    cmp    $0x5,%dl
    jne    jump_33b5d
  jump_33781:
    cmp    $0x27,%dl
    jae    jump_3388a
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    xor    %ebp,%ebp
    mov    data_f3e45(,%eax,8),%al
    and    $0xff,%eax
    mov    %eax,0x4(%esp)
    cmp    $0xff,%eax
    je     jump_33803
    xor    %eax,%eax
    mov    0x4(%esp),%ecx
    mov    data_f4744,%ax
    cmp    %ecx,%eax
    jle    jump_33880
    mov    %ecx,0x8(%esp)
    lea    0x0(,%ecx,4),%eax
    add    %ecx,%eax
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x4,%eax
    sub    %ecx,%eax
    mov    data_f478b(%eax),%eax
    sar    $0x18,%eax
    mov    0x57(%esi),%cl
    mov    %eax,(%esp)
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    %eax,%ecx
    test   %ecx,(%esp)
    je     jump_33880
  jump_33803:
    mov    0x42(%esi),%ax
    mov    0x4c(%esi),%cx
    sub    %ecx,%eax
    mov    %eax,0x1c(%esp)
    cmpb   $0xff,0x54(%esi)
    je     jump_3383c
    xor    %eax,%eax
    mov    0x54(%esi),%al
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    0x1c(%esp),%ecx
    movsbw data_f3e44(,%eax,8),%ax
    add    %eax,%ecx
    mov    %ecx,0x1c(%esp)
  jump_3383c:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    data_f3e41(,%eax,8),%eax
    sar    $0x18,%eax
    mov    %eax,(%esp)
    xor    %eax,%eax
    mov    (%esp),%ecx
    mov    0x1c(%esp),%ax
    cmp    %ecx,%eax
    jl     jump_3386d
    mov    $0xffffffff,%ebp
  jump_3386d:
    cmp    $0xffffffff,%ebp
    jne    jump_33880
    cmp    $0x17,%dl
    jne    jump_33880
    mov    %esi,%eax
    call   func_34eec
    mov    %eax,%ebp
  jump_33880:
    cmp    $0x5,%dl
    jne    jump_3388a
    mov    $0xffffffff,%ebp
  jump_3388a:
    cmp    0x1a(%esi),%bx
    jae    jump_33b4e
    xor    %edi,%edi
    cmp    $0x27,%dl
    jae    jump_338e3
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    data_f3e46(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_338de
    mov    0x57(%esi),%al
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    cmpb   $0x2,data_92fb3(,%eax,2)
    jne    jump_338e3
  jump_338de:
    mov    $0xffffffff,%edi
  jump_338e3:
    xor    %eax,%eax
    mov    %bx,%ax
    shl    $0x2,%eax
    mov    %eax,(%esp)
    mov    (%esp),%ecx
    mov    0x10(%esi),%eax
    add    %ecx,%eax
    mov    (%eax),%al
    and    $0xff,%eax
    jne    jump_33926
    cmp    $0xff,%dl
    je     jump_33926
    mov    %dl,%al
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    data_f3e46(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    je     jump_3392b
  jump_33926:
    mov    $0xffffffff,%edi
  jump_3392b:
    cmp    $0xff,%dl
    je     jump_33969
    cmp    $0x1e,%dl
    ja     jump_33969
    cmp    0x18(%esi),%bx
    setb   %al
    xor    %ecx,%ecx
    mov    %dl,%cl
    mov    %ecx,(%esp)
    xor    %ecx,%ecx
    mov    data_f3e3c,%cx
    mov    %ecx,0x8(%esp)
    mov    (%esp),%ecx
    and    $0xff,%eax
    cmp    0x8(%esp),%ecx
    setl   %dh
    xor    %ecx,%ecx
    mov    %dh,%cl
    cmp    %ecx,%eax
    je     jump_33969
    xor    %edi,%edi
  jump_33969:
    cmp    $0xff,%dl
    je     jump_339a4
    xor    %eax,%eax
    mov    %bx,%ax
    shl    $0x2,%eax
    mov    %eax,0x8(%esp)
    mov    0x8(%esp),%ecx
    mov    0x10(%esi),%eax
    add    %ecx,%eax
    mov    (%eax),%al
    and    $0x8,%al
    and    $0xff,%eax
    setne  %al
    and    $0xff,%eax
    xor    %ecx,%ecx
    cmp    $0x26,%dl
    sete   %dh
    mov    %dh,%cl
    cmp    %ecx,%eax
    je     jump_339a4
    xor    %edi,%edi
  jump_339a4:
    cmp    $0x24,%dl
    jne    jump_339c6
    xor    %eax,%eax
    mov    %bx,%ax
    mov    0x10(%esi),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    xor    %ecx,%ecx
    mov    (%eax),%cl
    test   %ecx,%ecx
    jne    jump_339c4
    cmpb   $0xff,0x1(%eax)
    je     jump_339c6
  jump_339c4:
    xor    %edi,%edi
  jump_339c6:
    cmp    $0x23,%dl
    jne    jump_33a07
    xor    %eax,%eax
    mov    %bx,%ax
    mov    0x10(%esi),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    0x2(%eax),%cx
    xor    %ch,%ch
    and    $0x1,%cl
    mov    %ecx,0x10(%esp)
    xor    %ecx,%ecx
    mov    0x10(%esp),%cx
    test   %ecx,%ecx
    je     jump_33a05
    cmpb   $0x17,0x1(%eax)
    je     jump_33a05
    mov    0x2(%eax),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    je     jump_33a07
  jump_33a05:
    xor    %edi,%edi
  jump_33a07:
    cmp    0x18(%esi),%bx
    jae    jump_33b4e
    xor    %eax,%eax
    mov    %bx,%ax
    lea    0x0(,%eax,4),%ebx
    mov    %ebx,0x8(%esp)
    mov    0x8(%esp),%ecx
    mov    0x10(%esi),%ebx
    add    %ecx,%ebx
    mov    0x2(%ebx),%bx
    xor    %bh,%bh
    and    $0x1,%bl
    mov    %ebx,0x10(%esp)
    xor    %ebx,%ebx
    mov    0x10(%esp),%bx
    test   %ebx,%ebx
    jne    jump_33b4e
    cmp    $0x5,%dl
    je     jump_33b4e
    cmp    $0x23,%dl
    je     jump_33b4e
    mov    %eax,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_34aac
    mov    %eax,%edx
    sar    $0x10,%eax
    mov    %dx,%cx
    and    $0xffff,%eax
    mov    %eax,0x8(%esp)
    lea    -0x1(%eax),%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_34a14
    mov    0x8(%esp),%edx
    mov    %eax,0xc(%esp)
    mov    %ecx,%ebx
    inc    %edx
    mov    %esi,%eax
    call   func_34a14
    mov    0x8(%esp),%edx
    mov    %eax,0x18(%esp)
    lea    -0x1(%ecx),%ebx
    mov    %esi,%eax
    call   func_34a14
    mov    0x8(%esp),%edx
    mov    %eax,0x14(%esp)
    lea    0x1(%ecx),%ebx
    mov    %esi,%eax
    call   func_34a14
    mov    %eax,%ebx
    xor    %eax,%eax
    mov    0xc(%esp),%ax
    cmp    $0xffff,%eax
    je     jump_33add
    mov    0x10(%esi),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_33b4e
  jump_33add:
    xor    %eax,%eax
    mov    0x18(%esp),%ax
    cmp    $0xffff,%eax
    je     jump_33afe
    mov    0x10(%esi),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_33b4e
  jump_33afe:
    xor    %eax,%eax
    mov    0x14(%esp),%ax
    cmp    $0xffff,%eax
    je     jump_33b26
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    mov    0x2(%edx,%eax,1),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_33b4e
  jump_33b26:
    xor    %eax,%eax
    mov    %bx,%ax
    cmp    $0xffff,%eax
    je     jump_33b4c
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    mov    0x2(%edx,%eax,1),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_33b4e
  jump_33b4c:
    xor    %edi,%edi
  jump_33b4e:
    test   %ebp,%ebp
    je     jump_33b5d
    test   %edi,%edi
    je     jump_33b5d
    mov    $0xffffffff,%eax
    jmp    jump_33b5f
  jump_33b5d:
    xor    %eax,%eax
  jump_33b5f:
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_33b68:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    cmp    $0xffff,%ebx
    je     jump_33ba8
    mov    0x10(%eax),%edi
    cmpb   $0xff,0x1(%edi,%ebx,4)
    jne    jump_33ba8
    cmp    $0xffffffff,%ecx
    jne    jump_33b8f
    movzbl %dl,%esi
    xor    %edx,%edx
    xor    %ecx,%ecx
    mov    %bx,%dx
    mov    %esi,%ebx
    jmp    jump_33ba3
  jump_33b8f:
    mov    $0x2,%ecx
    xor    %esi,%esi
    and    $0xff,%edx
    mov    %bx,%si
    mov    %edx,%ebx
    mov    %esi,%edx
  jump_33ba3:
    call   func_33c90
  jump_33ba8:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_33bac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xd4,%esp
    mov    %eax,%esi
    mov    %dl,0xd0(%esp)
    mov    $0xffff,%edx
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    xor    %ebp,%ebp
    xor    %edi,%edi
    mov    %edx,0xcc(%esp)
    mov    %ebx,0xc8(%esp)
    jmp    jump_33be1
  jump_33bdd:
    add    $0x4,%ebp
    inc    %ecx
  jump_33be1:
    xor    %eax,%eax
    mov    0x1a(%esi),%ax
    cmp    %eax,%ecx
    jge    jump_33c2f
    cmp    $0xc8,%edi
    jge    jump_33c2f
    mov    0x10(%esi),%eax
    cmpb   $0xff,0x1(%eax,%ebp,1)
    jne    jump_33bdd
    mov    %esi,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    0xd0(%esp),%dl
    mov    %cx,%bx
    call   func_3375c
    test   %eax,%eax
    je     jump_33bdd
    mov    0xc8(%esp),%eax
    add    $0x2,%edi
    inc    %eax
    mov    %cx,-0x2(%esp,%edi,1)
    mov    %eax,0xc8(%esp)
    jmp    jump_33bdd
  jump_33c2f:
    mov    0xc8(%esp),%ecx
    test   %ecx,%ecx
    je     jump_33c53
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    xor    %eax,%eax
    mov    (%esp,%edx,2),%ax
    mov    %eax,0xcc(%esp)
  jump_33c53:
    mov    0xcc(%esp),%eax
    add    $0xd4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_33c68:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    movzbl %dl,%ebp
    mov    %ebp,%edx
    mov    %ebx,%ecx
    call   func_33bac
    mov    %eax,%edi
    mov    %eax,%ebx
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_33b68
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_33c90:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x24,%esp
    mov    %eax,%esi
    mov    %edx,0x1c(%esp)
    mov    %bl,0x20(%esp)
    xor    %eax,%eax
    mov    %dx,%ax
    xor    %ebp,%ebp
    cmp    $0xffff,%eax
    jne    jump_33cdb
    xor    %edx,%edx
    mov    %bl,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_f3e46(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    je     jump_33fe2
    cmp    $0x2,%cl
    jne    jump_33fe2
  jump_33cdb:
    mov    0x1c(%esp),%eax
    cmp    0x18(%esi),%ax
    setb   %al
    and    $0xff,%eax
    dec    %eax
    mov    %eax,0x18(%esp)
    xor    %eax,%eax
    mov    0x1c(%esp),%ax
    mov    0x10(%esi),%edi
    cmp    $0xffff,%eax
    je     jump_33d0a
    shl    $0x2,%eax
    add    %eax,%edi
  jump_33d0a:
    cmp    $0x1,%cl
    jb     jump_33fda
    jbe    jump_33e0e
    cmp    $0x3,%cl
    jbe    jump_33e88
    mov    %esi,%eax
    call   func_33ff4
    mov    %ebp,%eax
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_33d32:
    cmpb   $0xff,0x1(%edi)
    jne    jump_33fe2
    cmpb   $0x27,0x20(%esp)
    jae    jump_33fe2
    xor    %eax,%eax
    xor    %ecx,%ecx
    mov    0x42(%esi),%ax
    mov    0x4c(%esi),%cx
    xor    %edx,%edx
    sub    %ecx,%eax
    mov    0x20(%esp),%dl
    mov    %eax,%ecx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_f3e41(,%eax,8),%eax
    sar    $0x18,%eax
    cmp    %eax,%ecx
    jl     jump_33fe2
    xor    %eax,%eax
    mov    data_f3e3c,%ax
    cmp    %eax,%edx
    setge  %al
    mov    0x18(%esp),%ecx
    and    $0xff,%eax
    cmp    %ecx,%eax
    jne    jump_33fe2
    mov    %dl,%al
    mov    %dl,0x1(%edi)
    xor    %edx,%edx
    mov    %al,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    movw   $0x1,0x2(%edi)
    mov    data_f3e46(,%eax,8),%ax
    xor    %ah,%ah
    mov    $0xffffffff,%ebp
    and    $0x4,%al
    and    $0xffff,%eax
    je     jump_33fe2
    lea    0x8(%esp),%eax
    lea    0x4(%esp),%ecx
    push   %eax
    lea    0x4(%esp),%ebx
    mov    %esi,%eax
    call   func_34fbc
    cmpl   $0x0,0x8(%esp)
    je     jump_33fe2
    movb   $0x0,0x3(%edi)
    mov    0x8(%esp),%eax
    mov    0x2(%edi),%dx
    shl    $0x8,%eax
    or     %eax,%edx
    mov    %dx,0x2(%edi)
    mov    %esi,%eax
    call   func_33ff4
    mov    %ebp,%eax
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_33e0e:
    mov    0x1(%edi),%al
    cmp    $0xff,%al
    je     jump_33fe2
    xor    %edx,%edx
    mov    %al,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_f3e40(,%eax,8),%ebx
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x4a(%esi),%dx
    mov    0x42(%esi),%ax
    sar    $0x18,%ebx
    sub    %eax,%edx
    cmp    %edx,%ebx
    jle    jump_33e55
    mov    0x2(%edi),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    jne    jump_33fe2
  jump_33e55:
    movb   $0xff,0x1(%edi)
    movw   $0x0,0x2(%edi)
    mov    0x1c(%esp),%ecx
    cmp    0x52(%esi),%cx
    jne    jump_33e73
    movw   $0xffff,0x52(%esi)
    movb   $0xff,0x54(%esi)
  jump_33e73:
    mov    $0xffffffff,%ebp
    mov    %esi,%eax
    call   func_33ff4
    mov    %ebp,%eax
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_33e88:
    je     jump_33eef
    xor    %edx,%edx
    mov    0x20(%esp),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_f3e46(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    jne    jump_33eef
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    0x1c(%esp),%bx
    call   func_3375c
    test   %eax,%eax
    je     jump_33fe2
    mov    0x2(%edi),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_33eef
    cmpb   $0x23,0x20(%esp)
    jne    jump_33fe2
    mov    0x2(%edi),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    jne    jump_33fe2
  jump_33eef:
    xor    %edx,%edx
    mov    0x52(%esi),%dx
    cmp    $0xffff,%edx
    jge    jump_33f36
    mov    0x10(%esi),%ebx
    cmpb   $0x17,0x1(%ebx,%edx,4)
    jne    jump_33f13
    mov    %esi,%eax
    call   func_34b1c
    call   func_4517c
  jump_33f13:
    xor    %eax,%eax
    mov    0x52(%esi),%ax
    mov    0x10(%esi),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    0x2(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    jne    jump_33f36
    movb   $0xff,0x1(%eax)
  jump_33f36:
    xor    %edx,%edx
    mov    0x20(%esp),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    movw   $0xffff,0x52(%esi)
    mov    data_f3e46(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    jne    jump_33f6e
    mov    0x1c(%esp),%eax
    mov    %ax,0x52(%esi)
    cmp    $0x23,%dl
    je     jump_33f6e
    mov    %dl,0x1(%edi)
  jump_33f6e:
    mov    0x20(%esp),%al
    xor    %edx,%edx
    mov    %al,%dl
    mov    %al,0x54(%esi)
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_f3e46(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x4,%al
    and    $0xffff,%eax
    je     jump_33fc5
    lea    0x14(%esp),%eax
    lea    0x10(%esp),%ecx
    push   %eax
    lea    0x10(%esp),%ebx
    mov    %esi,%eax
    call   func_34fbc
    cmpl   $0x0,0x14(%esp)
    je     jump_33fc5
    movb   $0x0,0x3(%edi)
    mov    0x14(%esp),%eax
    mov    0x2(%edi),%bx
    shl    $0x8,%eax
    or     %eax,%ebx
    mov    %bx,0x2(%edi)
  jump_33fc5:
    mov    $0xffffffff,%ebp
    mov    %esi,%eax
    call   func_33ff4
    mov    %ebp,%eax
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_33fda:
    test   %cl,%cl
    je     jump_33d32
  jump_33fe2:
    mov    %esi,%eax
    call   func_33ff4
    mov    %ebp,%eax
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_33ff4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x30,%esp
    mov    %eax,%ebx
    xor    %edx,%edx
    xor    %eax,%eax
    xor    %ebp,%ebp
    mov    %edx,0x28(%esp)
    mov    %edx,0x20(%esp)
    mov    %edx,0x10(%esp)
    mov    %edx,0x18(%esp)
    mov    %edx,(%esp)
    mov    %edx,0x8(%esp)
    mov    %edx,0xc(%esp)
    mov    %edx,0x24(%esp)
    mov    0x55(%ebx),%ax
    mov    %edx,0x4(%esp)
    mov    %eax,0x1c(%esp)
    jmp    jump_340cd
  jump_34035:
    mov    0x6(%eax),%si
    and    $0x8,%esi
    and    $0xffff,%esi
    je     jump_34048
    incl   0x4(%esp)
  jump_34048:
    mov    (%eax),%esi
    mov    0x1c(%esp),%edi
    sar    $0x18,%esi
    add    %esi,%edi
    mov    %edi,0x1c(%esp)
  jump_34057:
    cmp    $0x17,%cl
    je     jump_340c9
    mov    0x10(%ebx),%esi
    mov    0x2(%edx,%esi,1),%si
    and    $0x2,%esi
    and    $0xffff,%esi
    jne    jump_340c9
    movzbl %cl,%esi
    imul   $0x28,%esi,%esi
    mov    data_f3e46(%esi),%si
    and    $0x40,%esi
    and    $0xffff,%esi
    jne    jump_340c9
    mov    0x1(%eax),%eax
    mov    0x18(%esp),%ecx
    sar    $0x18,%eax
    add    %eax,%ecx
    mov    %ecx,0x18(%esp)
    jmp    jump_340c9
  jump_3409d:
    xor    %eax,%eax
    mov    0x18(%ebx),%ax
    cmp    %eax,%ebp
    jl     jump_340ad
    incl   0xc(%esp)
    jmp    jump_340c9
  jump_340ad:
    mov    (%esi),%al
    and    $0x8,%al
    and    $0xff,%eax
    jne    jump_340c9
    mov    (%esp),%edi
    inc    %edi
    mov    (%esi),%al
    mov    %edi,(%esp)
    test   %eax,%eax
    jne    jump_340c9
    incl   0x8(%esp)
  jump_340c9:
    add    $0x4,%edx
    inc    %ebp
  jump_340cd:
    xor    %eax,%eax
    mov    0x1a(%ebx),%ax
    cmp    %eax,%ebp
    jge    jump_3418f
    mov    0x10(%ebx),%esi
    add    %edx,%esi
    xor    %eax,%eax
    mov    0x1(%esi),%cl
    mov    %cl,%al
    imul   $0x28,%eax,%eax
    add    $data_f3e40,%eax
    cmp    $0xff,%cl
    je     jump_3409d
    mov    0x2(%esi),%di
    and    $0x1,%edi
    mov    %edi,0x2c(%esp)
    xor    %edi,%edi
    mov    0x2c(%esp),%di
    test   %edi,%edi
    je     jump_34057
    mov    (%eax),%ch
    test   %ch,%ch
    je     jump_34127
    movsbl %ch,%edi
    movzbl (%esi),%esi
    add    %edi,0x28(%esp)
    cmp    $0x2,%esi
    jne    jump_34127
    incl   0x28(%esp)
  jump_34127:
    mov    0x2(%eax),%ch
    test   %ch,%ch
    je     jump_3414c
    mov    0x10(%esp),%edi
    movsbl %ch,%esi
    add    %esi,%edi
    mov    0x10(%ebx),%esi
    movzbl (%edx,%esi,1),%esi
    mov    %edi,0x10(%esp)
    cmp    $0x3,%esi
    jne    jump_3414c
    inc    %edi
    mov    %edi,0x10(%esp)
  jump_3414c:
    mov    0x1(%eax),%ch
    test   %ch,%ch
    je     jump_34173
    mov    0x20(%esp),%edi
    movsbl %ch,%esi
    add    %esi,%edi
    mov    0x10(%ebx),%esi
    movzbl (%edx,%esi,1),%esi
    mov    %edi,0x20(%esp)
    cmp    $0x4,%esi
    jne    jump_34173
    lea    0x1(%edi),%esi
    mov    %esi,0x20(%esp)
  jump_34173:
    mov    0x6(%eax),%si
    and    $0x4,%esi
    and    $0xffff,%esi
    je     jump_34035
    incl   0x24(%esp)
    jmp    jump_34048
  jump_3418f:
    mov    $0xc,%edx
    mov    %ebx,%eax
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_341ca
    mov    0x10(%ebx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_341ca
    mov    0x28(%esp),%eax
    mov    0x28(%esp),%edi
    sar    %eax
    add    %eax,%edi
    mov    %edi,0x28(%esp)
  jump_341ca:
    mov    $0xd,%edx
    mov    %ebx,%eax
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_34205
    mov    0x10(%ebx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_34205
    mov    0x10(%esp),%eax
    mov    0x10(%esp),%ebp
    sar    %eax
    add    %eax,%ebp
    mov    %ebp,0x10(%esp)
  jump_34205:
    mov    $0xe,%edx
    mov    %ebx,%eax
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_34240
    mov    0x10(%ebx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_34240
    mov    0x20(%esp),%eax
    mov    0x20(%esp),%edx
    sar    %eax
    add    %eax,%edx
    mov    %edx,0x20(%esp)
  jump_34240:
    cmpb   $0xff,0x54(%ebx)
    je     jump_3427d
    mov    0x28(%esp),%eax
    mov    0x54(%ebx),%dl
    sar    $0x2,%eax
    cmp    $0x21,%dl
    jne    jump_3425b
    add    %eax,0x10(%esp)
    jmp    jump_3427d
  jump_3425b:
    cmp    $0x22,%dl
    jne    jump_34266
    add    %eax,0x20(%esp)
    jmp    jump_3427d
  jump_34266:
    cmp    $0x23,%dl
    jne    jump_3427d
    mov    data_f43b9,%eax
    mov    0x18(%esp),%ecx
    sar    $0x18,%eax
    add    %eax,%ecx
    mov    %ecx,0x18(%esp)
  jump_3427d:
    mov    0x28(%esp),%ebp
    test   %ebp,%ebp
    je     jump_342ae
    lea    0x1(%ebp),%eax
    push   $0x3feb3333
    mov    %eax,0x18(%esp)
    push   $0x33333333
    fildl  0x1c(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_73ee0
    call   func_72258
    fistpl 0x28(%esp)
  jump_342ae:
    mov    0x10(%esp),%eax
    test   %eax,%eax
    je     jump_342dd
    inc    %eax
    push   $0x3feb3333
    mov    %eax,0x18(%esp)
    push   $0x33333333
    fildl  0x1c(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_73ee0
    call   func_72258
    fistpl 0x10(%esp)
  jump_342dd:
    xor    %edx,%edx
    mov    0x42(%ebx),%dx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x2,%edx
    sbb    %edx,%eax
    sar    $0x2,%eax
    mov    0x10(%esp),%edx
    sub    %eax,%edx
    mov    %edx,0x10(%esp)
    test   %edx,%edx
    jge    jump_34304
    xor    %esi,%esi
    mov    %esi,0x10(%esp)
  jump_34304:
    mov    (%esp),%eax
    mov    %ax,0x1c(%ebx)
    mov    0x8(%esp),%eax
    mov    %ax,0x20(%ebx)
    mov    0xc(%esp),%eax
    mov    %ax,0x1e(%ebx)
    mov    0x28(%esp),%eax
    mov    %ax,0x44(%ebx)
    mov    0x20(%esp),%eax
    mov    %ax,0x46(%ebx)
    mov    0x10(%esp),%eax
    mov    %ax,0x48(%ebx)
    mov    0x1c(%esp),%eax
    mov    %ax,0x4a(%ebx)
    mov    0x18(%esp),%eax
    mov    %ax,0x4c(%ebx)
    mov    0x24(%esp),%al
    mov    %al,0x58(%ebx)
    mov    0x4(%esp),%al
    mov    %al,0x59(%ebx)
    xor    %eax,%eax
    mov    0x4a(%ebx),%ax
    test   %eax,%eax
    jge    jump_34363
    movw   $0x0,0x4a(%ebx)
    jmp    jump_3436e
  jump_34363:
    cmp    $0x64,%eax
    jle    jump_3436e
    movw   $0x64,0x4a(%ebx)
  jump_3436e:
    xor    %eax,%eax
    mov    0x42(%ebx),%ax
    test   %eax,%eax
    jge    jump_34380
    movw   $0x0,0x42(%ebx)
    jmp    jump_3438d
  jump_34380:
    mov    0x4a(%ebx),%dx
    cmp    %dx,%ax
    jbe    jump_3438d
    mov    %dx,0x42(%ebx)
  jump_3438d:
    xor    %eax,%eax
    mov    0x4c(%ebx),%ax
    test   %eax,%eax
    jge    jump_3439f
    movw   $0x0,0x4c(%ebx)
    jmp    jump_343ac
  jump_3439f:
    mov    0x42(%ebx),%cx
    cmp    %cx,%ax
    jbe    jump_343ac
    mov    %cx,0x4c(%ebx)
  jump_343ac:
    add    $0x30,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_343b8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x3c,%esp
    mov    %eax,%esi
    movl   $0x0,0x62(%eax)
    xor    %eax,%eax
    mov    0x57(%esi),%al
    cmp    $0xff,%eax
    je     jump_34856
    xor    %edx,%edx
    mov    0x10(%esi),%edi
    mov    %dx,0x38(%esp)
    jmp    jump_343f2
  jump_343e5:
    mov    0x38(%esp),%ebx
    inc    %ebx
    add    $0x4,%edi
    mov    %bx,0x38(%esp)
  jump_343f2:
    mov    0x36(%esp),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    0x1a(%esi),%ax
    cmp    %eax,%edx
    jge    jump_34455
    mov    0x1(%edi),%al
    cmp    $0xff,%al
    je     jump_343e5
    xor    %edx,%edx
    mov    %al,%dl
    imul   $0x28,%edx,%eax
    mov    data_f3e46(%eax),%ax
    xor    %ah,%ah
    and    $0x4,%al
    and    $0xffff,%eax
    je     jump_343e5
    lea    0x28(%esp),%eax
    lea    0x24(%esp),%ecx
    push   %eax
    lea    0x30(%esp),%ebx
    mov    %esi,%eax
    call   func_34fbc
    cmpl   $0x0,0x28(%esp)
    je     jump_343e5
    movb   $0x0,0x3(%edi)
    mov    0x28(%esp),%eax
    mov    0x2(%edi),%dx
    shl    $0x8,%eax
    or     %eax,%edx
    mov    %dx,0x2(%edi)
    jmp    jump_343e5
  jump_34455:
    mov    0x54(%esi),%ah
    xor    %edi,%edi
    cmp    $0xff,%ah
    je     jump_34744
    xor    %edx,%edx
    mov    %ah,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    mov    data_f3e46(%eax),%dx
    xor    %dh,%dh
    and    $0x20,%dl
    and    $0xffff,%edx
    jne    jump_34744
    mov    0x52(%esi),%dx
    cmp    $0xffff,%edx
    jne    jump_344b5
    mov    data_f3e46(%eax),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    %edx,%eax
    jne    jump_344b5
    mov    $0x2e9,%ebx
    mov    $data_81d29,%edx
    call   func_25878
  jump_344b5:
    mov    data_f458e,%dl
    cmp    0x57(%esi),%dl
    je     jump_344d8
    cmpb   $0x2,data_93bc4
    jne    jump_344d8
    xor    %eax,%eax
    mov    0x44(%esi),%ax
    cmp    $0x4,%eax
    jge    jump_344d8
    incw   0x50(%esi)
  jump_344d8:
    mov    0x44(%esi),%ax
    mov    0x50(%esi),%cx
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x54(%esi),%bl
    mov    0x52(%esi),%dx
    add    %eax,%ecx
    mov    %esi,%eax
    mov    %cx,0x50(%esi)
    call   func_34928
    cmp    0x50(%esi),%ax
    ja     jump_346f2
    mov    data_f458e,%bh
    cmp    0x57(%esi),%bh
    jne    jump_3454c
    cmpb   $0x2,0x54(%esi)
    jne    jump_3454c
    xor    %edx,%edx
    mov    %bh,%dl
    mov    data_f6492(,%edx,2),%ax
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3454c
    mov    $data_f4744,%eax
    call   func_42230
    test   %eax,%eax
    jne    jump_3454c
    mov    $0x19,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_50eb0
  jump_3454c:
    mov    data_f458e,%ch
    cmp    0x57(%esi),%ch
    jne    jump_3458b
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x11,%eax
    je     jump_3458b
    mov    0x54(%esi),%al
    cmp    $0x17,%al
    je     jump_3458b
    cmpl   $0x0,0x5a(%esi)
    jne    jump_3458b
    mov    $0x1,%edx
    xor    %ecx,%ecx
    mov    %esi,%ebx
    mov    %al,%cl
    mov    $data_fa35c,%eax
    mov    $0xffffffff,%edi
    call   func_50eb0
  jump_3458b:
    xor    %eax,%eax
    mov    0x52(%esi),%ax
    mov    0x10(%esi),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    (%eax),%dl
    and    $0x8,%dl
    and    $0xff,%edx
    je     jump_345ca
    andb   $0xf7,(%eax)
    xor    %eax,%eax
    mov    0x10(%esi),%edx
    mov    0x52(%esi),%ax
    mov    %esi,%ebx
    movb   $0xff,0x1(%edx,%eax,4)
    xor    %edx,%edx
    mov    $data_f4744,%eax
    mov    0x57(%esi),%dl
    call   func_422d4
    jmp    jump_345ce
  jump_345ca:
    orb    $0x1,0x2(%eax)
  jump_345ce:
    cmpb   $0x17,0x54(%esi)
    jne    jump_3460f
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0x52(%esi),%dx
    call   func_34b1c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_345f6
    mov    $0x31a,%ebx
    mov    $data_81d37,%edx
    call   func_25878
  jump_345f6:
    cmpb   $0x1,0x58(%ecx)
    jne    jump_34608
    movsbw data_f41dc,%ax
    sub    %ax,0x42(%esi)
  jump_34608:
    mov    %ecx,%eax
    call   func_45064
  jump_3460f:
    cmpb   $0x24,0x54(%esi)
    jne    jump_3464e
    xor    %eax,%eax
    mov    0x10(%esi),%edx
    mov    0x52(%esi),%ax
    movw   $0x0,0x2(%edx,%eax,4)
    xor    %eax,%eax
    mov    0x52(%esi),%ax
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    movb   $0xff,0x1(%edx,%eax,1)
    xor    %eax,%eax
    mov    0x52(%esi),%ax
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    movb   $0x1,(%edx,%eax,1)
  jump_3464e:
    cmpb   $0x23,0x54(%esi)
    jne    jump_34662
    xor    %eax,%eax
    mov    0x10(%esi),%edx
    mov    0x52(%esi),%ax
    orb    $0x2,0x2(%edx,%eax,4)
  jump_34662:
    cmpb   $0x25,0x54(%esi)
    jne    jump_3467d
    mov    0x66(%esi),%al
    and    $0x1,%al
    and    $0xff,%eax
    jne    jump_3467d
    addw   $0xa,0x55(%esi)
    orb    $0x1,0x66(%esi)
  jump_3467d:
    xor    %edx,%edx
    mov    0x54(%esi),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_f3e46(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x8,%al
    and    $0xffff,%eax
    je     jump_346e0
    mov    0x52(%esi),%ax
    cmp    0x18(%esi),%ax
    jb     jump_346e0
    mov    0x54(%esi),%ch
    mov    $0xf,%edx
    cmp    $0x1b,%ch
    jne    jump_346ba
    mov    $0x23,%edx
  jump_346ba:
    xor    %eax,%eax
    mov    0x52(%esi),%ax
    lea    0x0(,%eax,4),%ebx
    mov    0x10(%esi),%eax
    movb   $0x0,0x3(%ebx,%eax,1)
    xor    %eax,%eax
    mov    0x10(%esi),%ebx
    mov    0x52(%esi),%ax
    shl    $0x8,%edx
    or     %dx,0x2(%ebx,%eax,4)
  jump_346e0:
    movw   $0xffff,0x52(%esi)
    movb   $0xff,0x54(%esi)
    movw   $0x0,0x50(%esi)
    jmp    jump_34744
  jump_346f2:
    cmpb   $0x1f,0x54(%esi)
    jne    jump_34744
    mov    data_92e10,%eax
    mov    %eax,%edx
    mov    $0xa,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    test   %edx,%edx
    jne    jump_34744
    mov    0x44(%esi),%dx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    lea    0x1(%eax),%ecx
    xor    %edx,%edx
    xor    %eax,%eax
    jmp    jump_34737
  jump_34721:
    xor    %ebx,%ebx
    add    $0x1ee,%eax
    mov    data_f458e,%bl
    inc    %edx
    add    %cx,data_92dda(%eax,%ebx,2)
  jump_34737:
    mov    data_93b96,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jl     jump_34721
  jump_34744:
    mov    0x42(%esi),%ax
    cmp    0x4a(%esi),%ax
    jae    jump_34849
    mov    0x48(%esi),%ax
    mov    0x4e(%esi),%dx
    add    %eax,%edx
    mov    0x57(%esi),%al
    mov    data_f458e,%ah
    mov    %dx,0x4e(%esi)
    cmp    %ah,%al
    je     jump_3477f
    xor    %eax,%eax
    mov    0x48(%esi),%ax
    cmp    $0x4,%eax
    jge    jump_3477f
    mov    %edx,%ebx
    inc    %ebx
    mov    %bx,0x4e(%esi)
  jump_3477f:
    xor    %eax,%eax
    mov    data_866e4,%ecx
    mov    0x4e(%esi),%ax
    cmp    %ecx,%eax
    jl     jump_3484f
    mov    data_f458e,%dl
    cmp    0x57(%esi),%dl
    jne    jump_347f9
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x11,%eax
    je     jump_347f9
    mov    0x42(%esi),%ax
    cmp    0x4c(%esi),%ax
    jne    jump_347f9
    test   %edi,%edi
    jne    jump_347f9
    cmpl   $0x0,0x5a(%esi)
    jne    jump_347f9
    cmpb   $0xff,0x54(%esi)
    je     jump_347e6
    xor    %edx,%edx
    mov    0x54(%esi),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_f3e46(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x20,%al
    and    $0xffff,%eax
    je     jump_347f9
  jump_347e6:
    mov    $0xf,%edx
    mov    $data_fa35c,%eax
    mov    %esi,%ebx
    xor    %ecx,%ecx
    call   func_50eb0
  jump_347f9:
    mov    0x42(%esi),%di
    mov    $0xf,%edx
    inc    %edi
    mov    %esi,%eax
    mov    %di,0x42(%esi)
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_34838
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    mov    0x2(%edx,%eax,1),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_34838
    incw   0x42(%esi)
  jump_34838:
    mov    0x42(%esi),%ax
    mov    0x4a(%esi),%dx
    cmp    %dx,%ax
    jbe    jump_34849
    mov    %dx,0x42(%esi)
  jump_34849:
    movw   $0x0,0x4e(%esi)
  jump_3484f:
    mov    %esi,%eax
    call   func_33ff4
  jump_34856:
    mov    (%esi),%eax
    mov    %eax,0x18(%esp)
    mov    0x4(%esi),%eax
    mov    %eax,0x1c(%esp)
    flds   0x1c(%esp)
    fmul   %st(0),%st
    flds   0x18(%esp)
    fmul   %st(0),%st
    mov    0x8(%esi),%eax
    faddp  %st,%st(1)
    mov    %eax,0x20(%esp)
    flds   0x20(%esp)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    lea    0x18(%esp),%eax
    fstps  0x30(%esp)
    call   func_4e3f0
    flds   0x30(%esp)
    fmul   %st(0),%st
    fdivrl data_81d45
    sub    $0x4,%esp
    lea    0x1c(%esp),%eax
    fstps  (%esp)
    call   func_4e69c
    flds   0x18(%esp)
    lea    0xc(%esp),%eax
    fmuls  0x30(%esp)
    mov    %eax,0x34(%esp)
    fstps  (%esp)
    flds   0x1c(%esp)
    mov    (%esp),%eax
    fmuls  0x30(%esp)
    mov    %eax,0xc(%esp)
    fstps  0x4(%esp)
    flds   0x20(%esp)
    mov    0x4(%esp),%eax
    fmuls  0x30(%esp)
    mov    %eax,0x10(%esp)
    fstps  0x8(%esp)
    mov    0x8(%esp),%eax
    mov    %eax,0x14(%esp)
    mov    (%esp),%eax
    mov    %eax,0x18(%esp)
    mov    0x4(%esp),%eax
    mov    %eax,0x1c(%esp)
    mov    0x8(%esp),%eax
    mov    %eax,0x20(%esp)
    mov    (%esp),%eax
    mov    %eax,(%esi)
    mov    0x1c(%esp),%eax
    mov    %eax,0x4(%esi)
    mov    0x20(%esp),%eax
    mov    %eax,0x8(%esi)
    add    $0x3c,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_34928:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%esi
    xor    %edi,%edi
    mov    %dx,%di
    mov    $0xffff,%eax
    cmp    $0xffff,%edi
    je     jump_34948
    mov    0x10(%ecx),%ebx
    mov    0x1(%ebx,%edi,4),%bl
  jump_34948:
    cmp    $0xff,%bl
    je     jump_349a3
    cmp    $0x17,%bl
    jne    jump_3497c
    xor    %edi,%edi
    mov    %si,%di
    mov    %ecx,%eax
    mov    %edi,%edx
    call   func_34b1c
    cmpb   $0x2,0x58(%eax)
    jne    jump_3496c
    mov    0x77(%ecx),%ax
    jmp    jump_34995
  jump_3496c:
    mov    %edi,%edx
    mov    %ecx,%eax
    call   func_34b1c
    call   func_4586c
    jmp    jump_34995
  jump_3497c:
    cmp    $0xff,%bl
    je     jump_34995
    movzbl %bl,%edi
    lea    0x0(,%edi,4),%eax
    add    %edi,%eax
    mov    data_f3e48(,%eax,8),%ax
  jump_34995:
    cmp    $0x23,%bl
    jne    jump_349a3
    cmp    0x52(%ecx),%si
    jne    jump_349a3
    imul   $0x3,%eax,%eax
  jump_349a3:
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_349a8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    xor    %esi,%esi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x44(%eax),%si
    mov    0x54(%eax),%bl
    mov    0x52(%eax),%dx
    mov    0x50(%eax),%cx
    call   func_34928
    and    $0xffff,%eax
    mov    %esi,%ebx
    mov    %ecx,%edx
    call   func_42460
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_349dc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ebx
    mov    %dl,%cl
    mov    0x1a(%ebx),%dx
    xor    %eax,%eax
    test   %dx,%dx
    ja     jump_349f9
    jmp    jump_34a0b
  jump_349f0:
    inc    %eax
    cmp    0x1a(%ebx),%ax
    jb     jump_349fc
    jmp    jump_34a0b
  jump_349f9:
    mov    0x10(%ebx),%esi
  jump_349fc:
    xor    %edx,%edx
    mov    %ax,%dx
    cmp    0x1(%esi,%edx,4),%cl
    jne    jump_349f0
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_34a0b:
    mov    $0xffff,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_34a14:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    $0xffff,%edx
    xor    %ebx,%ebx
    mov    %edx,0x4(%esp)
    test   %esi,%esi
    jl     jump_34a9d
    cmp    $0xf,%esi
    jge    jump_34a9d
    test   %edi,%edi
    jl     jump_34a9d
    xor    %edx,%edx
    test   %esi,%esi
    jle    jump_34a64
    xor    %eax,%eax
    mov    0x14(%ebp),%ax
    mov    %eax,(%esp)
    mov    (%esp),%ecx
    shl    $0x4,%eax
    sub    %ecx,%eax
  jump_34a54:
    inc    %eax
    xor    %ch,%ch
    mov    data_f44a7(%eax),%cl
    inc    %edx
    add    %ecx,%ebx
    cmp    %esi,%edx
    jl     jump_34a54
  jump_34a64:
    xor    %edx,%edx
    mov    0x14(%ebp),%dx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    add    %eax,%esi
    xor    %eax,%eax
    mov    data_f445c(%esi),%al
    cmp    %eax,%edi
    jl     jump_34a9d
    xor    %edx,%edx
    mov    data_f44a8(%esi),%dl
    add    %edx,%eax
    cmp    %eax,%edi
    jge    jump_34a9d
    xor    %ah,%ah
    add    %edi,%ebx
    mov    data_f445c(%esi),%al
    sub    %eax,%ebx
    mov    %ebx,0x4(%esp)
  jump_34a9d:
    mov    0x4(%esp),%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_34aac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    %edx,%ebx
    mov    0x18(%eax),%cx
    mov    $0xffffffff,%edi
    cmp    %cx,%dx
    jae    jump_34b14
    mov    %ebp,%edx
    xor    %edi,%edi
    xor    %ecx,%ecx
    mov    0x18(%edx),%si
    xor    %eax,%eax
    test   %si,%si
    jbe    jump_34b0f
    xor    %esi,%esi
    mov    0x14(%edx),%si
    mov    %esi,%edx
    shl    $0x4,%edx
    sub    %esi,%edx
  jump_34ae1:
    xor    %esi,%esi
    movzbl data_f445c(%edx),%edi
    mov    %bx,%si
    add    %edi,%esi
    xor    %edi,%edi
    mov    %ax,%di
    sub    %edi,%esi
    mov    %esi,%edi
    movzbw data_f44a8(%edx),%si
    add    %esi,%eax
    cmp    %bx,%ax
    ja     jump_34b0f
    inc    %edx
    inc    %ecx
    cmp    0x18(%ebp),%ax
    jb     jump_34ae1
  jump_34b0f:
    shl    $0x10,%ecx
    add    %ecx,%edi
  jump_34b14:
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_34b1c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    cmp    0x1a(%eax),%cx
    jb     jump_34b3a
    mov    $0x400,%ebx
    mov    $data_81d4d,%edx
    xor    %eax,%eax
    call   func_25878
  jump_34b3a:
    xor    %eax,%eax
    mov    0x10(%esi),%esi
    mov    %cx,%ax
    mov    0x2(%esi,%eax,4),%ax
    and    $0xffff,%eax
    sar    $0x8,%eax
    and    $0x7f,%eax
    mov    %eax,%ecx
    xor    %eax,%eax
    mov    %cx,%ax
    cmp    $0x6b,%eax
    jl     jump_34b6f
    mov    $0x404,%ebx
    mov    $data_81d5b,%edx
    xor    %eax,%eax
    call   func_25878
  jump_34b6f:
    xor    %eax,%eax
    mov    %cx,%ax
    imul   $0x162,%eax,%eax
    mov    data_ba0e9(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_34b99
    mov    $0x405,%ebx
    mov    $data_81d69,%edx
    xor    %eax,%eax
    call   func_25878
  jump_34b99:
    xor    %eax,%eax
    mov    %cx,%ax
    imul   $0x162,%eax,%eax
    add    $data_ba095,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_34bb0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %ebx,%edi
    cmp    0x1a(%eax),%si
    jb     jump_34bd0
    mov    $0x40e,%ebx
    mov    $data_81d77,%edx
    xor    %eax,%eax
    call   func_25878
  jump_34bd0:
    cmp    0x18(%ecx),%si
    jae    jump_34be7
    mov    $0x40f,%ebx
    mov    $data_81d85,%edx
    xor    %eax,%eax
    call   func_25878
  jump_34be7:
    mov    %edi,%edx
    sub    $data_ba095,%edx
    mov    $0x162,%edi
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %edi
    mov    %eax,%edi
    xor    %eax,%eax
    mov    %di,%ax
    cmp    $0x6b,%eax
    jl     jump_34c18
    mov    $0x413,%ebx
    mov    $data_81d93,%edx
    xor    %eax,%eax
    call   func_25878
  jump_34c18:
    xor    %eax,%eax
    mov    %di,%ax
    imul   $0x162,%eax,%eax
    mov    data_ba0e9(%eax),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_34c42
    mov    $0x414,%ebx
    mov    $data_81da1,%edx
    xor    %eax,%eax
    call   func_25878
  jump_34c42:
    xor    %eax,%eax
    mov    0x10(%ecx),%edx
    mov    %si,%ax
    mov    0x2(%edx,%eax,4),%cx
    shl    $0x8,%edi
    xor    %ch,%ch
    or     %edi,%ecx
    mov    %cx,0x2(%edx,%eax,4)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_34c60:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%edi
    xor    %edx,%edx
    mov    0x57(%eax),%dl
    mov    0x54(%edi),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    je     jump_34c82
    mov    %ecx,%eax
    call   func_34e50
    test   %eax,%eax
    jne    jump_34cdb
  jump_34c82:
    xor    %edx,%edx
    mov    0x18(%ecx),%dx
    lea    0x0(,%edx,4),%eax
    jmp    jump_34c95
  jump_34c91:
    add    $0x4,%eax
    inc    %edx
  jump_34c95:
    xor    %esi,%esi
    mov    0x1a(%ecx),%si
    cmp    %esi,%edx
    jge    jump_34cdb
    mov    0x10(%ecx),%esi
    cmpb   $0xff,0x1(%esi,%eax,1)
    jne    jump_34c91
    movb   $0x3,0x58(%edi)
    mov    %ecx,0x59(%edi)
    mov    0x10(%ecx),%esi
    movb   $0x17,0x1(%esi,%eax,1)
    mov    0x10(%ecx),%esi
    movw   $0x1,0x2(%esi,%eax,1)
    and    $0xffff,%edx
    mov    %edi,%ebx
    mov    %ecx,%eax
    call   func_34bb0
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_34cdb:
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_34ce4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x2c,%esp
    mov    %eax,%ebx
    mov    %edx,%edi
    xor    %ecx,%ecx
    mov    0x18(%eax),%cx
    lea    0x0(,%ecx,4),%esi
    jmp    jump_34d03
  jump_34cff:
    add    $0x4,%esi
    inc    %ecx
  jump_34d03:
    xor    %eax,%eax
    mov    0x1a(%ebx),%ax
    cmp    %eax,%ecx
    jge    jump_34e42
    mov    0x10(%ebx),%eax
    add    %esi,%eax
    cmpw   $0x0,0x2(%eax)
    je     jump_34cff
    cmpb   $0x17,0x1(%eax)
    jne    jump_34cff
    xor    %edx,%edx
    mov    %ebx,%eax
    mov    %cx,%dx
    call   func_34b1c
    cmp    %edi,%eax
    jne    jump_34cff
    mov    0x10(%ebx),%eax
    movb   $0xff,0x1(%esi,%eax,1)
    mov    0x10(%ebx),%eax
    movw   $0x0,0x2(%esi,%eax,1)
    movb   $0x4,0x58(%edi)
    mov    0xa(%ebx),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $data_93bc5,%edx
    shl    $0x5,%eax
    add    %eax,%edx
    mov    %edx,0x59(%edi)
    xor    %edx,%edx
    mov    %edx,(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x8(%esp)
    call   func_7369f
    mov    %eax,%edx
    mov    $0x3e8,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x24(%esp)
    fildl  0x24(%esp)
    fstps  (%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x24(%esp)
    fildl  0x24(%esp)
    fstps  0x4(%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x24(%esp)
    mov    %esp,%eax
    fildl  0x24(%esp)
    fstps  0x8(%esp)
    push   $0x437a0000
    xor    %ebp,%ebp
    call   func_4e444
    lea    0xc(%esp),%eax
    mov    %ebp,0x18(%esp)
    mov    %ebp,0x1c(%esp)
    mov    %ebp,0x20(%esp)
    mov    %eax,0x28(%esp)
    flds   (%ebx)
    fadds  (%esp)
    fstps  0x18(%esp)
    flds   0x4(%ebx)
    fadds  0x4(%esp)
    mov    0x18(%esp),%eax
    fstps  0x1c(%esp)
    flds   0x8(%ebx)
    mov    %eax,0xc(%esp)
    fadds  0x8(%esp)
    mov    0x1c(%esp),%eax
    fstps  0x20(%esp)
    mov    %eax,0x10(%esp)
    mov    0x20(%esp),%eax
    lea    0xc(%esp),%edx
    mov    %eax,0x14(%esp)
    mov    %edi,%eax
    call   func_44ef8
    mov    $0xffffffff,%eax
    add    $0x2c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_34e42:
    xor    %eax,%eax
    add    $0x2c,%esp
  jump_34e47:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_34e50:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    xor    %ecx,%ecx
    mov    0x18(%eax),%cx
    xor    %edi,%edi
    lea    0x0(,%ecx,4),%esi
    jmp    jump_34e6c
  jump_34e68:
    add    $0x4,%esi
    inc    %ecx
  jump_34e6c:
    xor    %eax,%eax
    mov    0x1a(%ebx),%ax
    cmp    %eax,%ecx
    jge    jump_34eca
    mov    0x10(%ebx),%eax
    add    %esi,%eax
    cmpb   $0xff,0x1(%eax)
    je     jump_34e68
    mov    0x2(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_34e68
    cmpb   $0x17,0x1(%eax)
    jne    jump_34eb3
    xor    %edx,%edx
    mov    %ebx,%eax
    mov    %cx,%dx
    call   func_34b1c
    mov    0x54(%eax),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    0x57(%ebx),%al
    cmp    %eax,%edx
    je     jump_34ec5
  jump_34eb3:
    mov    0x10(%ebx),%eax
    add    %esi,%eax
    mov    0x1(%eax),%dl
    cmp    $0x1a,%dl
    je     jump_34ec5
    cmp    $0x1b,%dl
    jne    jump_34e68
  jump_34ec5:
    mov    $0xffffffff,%edi
  jump_34eca:
    mov    %edi,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_34ed4:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
    call   func_4e830
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_34eec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    xor    %eax,%eax
    mov    0x57(%ecx),%al
    test   %eax,%eax
    jl     jump_34f07
    mov    data_93b96,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jl     jump_34f18
  jump_34f07:
    mov    $0x47c,%ebx
    mov    $data_81daf,%edx
    xor    %eax,%eax
    call   func_25878
  jump_34f18:
    mov    $0x16,%edx
    mov    %ecx,%eax
    call   func_349dc
    xor    %ebx,%ebx
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_34f6f
    mov    0x10(%ecx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_34f6f
    mov    0x57(%ecx),%cl
    and    $0xff,%ecx
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    add    %eax,%eax
    add    $data_92e16,%eax
    call   func_3b728
    test   %eax,%eax
    jle    jump_34f6f
    mov    $0xffffffff,%ebx
  jump_34f6f:
    mov    %ebx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_34f78:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    %edx,%ebp
    mov    0x10(%eax),%edx
    xor    %ebx,%ebx
    xor    %eax,%eax
    jmp    jump_34f9a
  jump_34f8a:
    test   %cl,%cl
    je     jump_34f91
    inc    %eax
    jmp    jump_34f96
  jump_34f91:
    test   %ebp,%ebp
    je     jump_34f96
    inc    %eax
  jump_34f96:
    inc    %ebx
    add    $0x4,%edx
  jump_34f9a:
    xor    %esi,%esi
    movswl %bx,%ecx
    mov    0x18(%edi),%si
    cmp    %esi,%ecx
    jge    jump_34e47
    xor    %ecx,%ecx
    mov    (%edx),%cl
    cmp    $0x2,%ecx
    jl     jump_34f8a
    add    $0x2,%eax
    jmp    jump_34f96


/*----------------------------------------------------------------*/
func_34fbc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    0x10(%esp),%edi
    mov    %dl,(%esp)
    mov    %ebx,%esi
    test   %ebx,%ebx
    je     jump_34fd6
    test   %ecx,%ecx
    je     jump_34fd6
    test   %edi,%edi
    jne    jump_34fe7
  jump_34fd6:
    mov    $0x4a4,%ebx
    mov    $data_81dbd,%edx
    xor    %eax,%eax
    call   func_25878
  jump_34fe7:
    mov    (%esp),%ah
    cmp    $0x1c,%ah
    jne    jump_35003
    movl   $0x2d,(%esi)
    movl   $0x7,(%ecx)
    movl   $0x1,(%edi)
    jmp    jump_35058
  jump_35003:
    cmp    $0x1d,%ah
    jne    jump_35022
    movl   $0x2d,(%esi)
    movl   $0x7,(%ecx)
    movl   $0x3,(%edi)
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_35022:
    cmp    $0x1e,%ah
    jne    jump_35041
    movl   $0x5a,(%esi)
    movl   $0x8,(%ecx)
    movl   $0x3,(%edi)
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_35041:
    cmp    $0x11,%ah
    jne    jump_35058
    movl   $0xc8,(%esi)
    movl   $0x0,(%ecx)
    movl   $0x2,(%edi)
  jump_35058:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_35060:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x78,%esp
    mov    %eax,%esi
    mov    %edx,%ebp
    mov    0x6b(%eax),%eax
    xor    %edx,%edx
    mov    $0xffffffff,%ebx
    mov    %edx,0x74(%esp)
    mov    0x1(%eax),%al
    mov    %ebx,0x68(%esp)
    cmp    $0xff,%al
    jne    jump_35096
    mov    $0x4ca,%ebx
    mov    $data_81dcb,%edx
    xor    %eax,%eax
    call   func_25878
  jump_35096:
    mov    $0x1,%edx
    xor    %ecx,%ecx
    mov    0x6f(%esi),%edi
    mov    %ecx,0x5c(%esp)
    mov    %ecx,0x60(%esp)
    mov    %edx,0x50(%esp)
    lea    0x50(%esp),%eax
    mov    0x6b(%esi),%edx
    push   %eax
    mov    0x1(%edx),%dl
    lea    0x64(%esp),%ecx
    lea    0x60(%esp),%ebx
    and    $0xff,%edx
    mov    %esi,%eax
    call   func_34fbc
    test   %edi,%edi
    je     jump_35194
    cmpb   $0x4,0x58(%edi)
    jne    jump_350f8
    mov    0xa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x5,%eax
    mov    0x59(%edi),%ebx
    add    $data_93bc5,%eax
    cmp    %ebx,%eax
    je     jump_350fe
  jump_350f8:
    xor    %ecx,%ecx
    mov    %ecx,0x68(%esp)
  jump_350fe:
    cmpl   $0x0,0x5c(%esp)
    jle    jump_35194
    lea    0x24(%esp),%edx
    mov    %edx,0x48(%esp)
    xor    %edx,%edx
    lea    0x9e(%edi),%eax
    mov    %edx,0x3c(%esp)
    mov    %edx,0x40(%esp)
    mov    %edx,0x44(%esp)
    flds   (%eax)
    fsubs  (%esi)
    fstps  0x3c(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%esi)
    fstps  0x40(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%esi)
    mov    0x3c(%esp),%eax
    fstps  0x44(%esp)
    flds   0x40(%esp)
    fmul   %st(0),%st
    mov    %eax,0x24(%esp)
    mov    0x40(%esp),%eax
    flds   0x3c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x28(%esp)
    faddp  %st,%st(1)
    mov    0x44(%esp),%eax
    flds   0x44(%esp)
    fmul   %st(0),%st
    mov    %eax,0x2c(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    0x5c(%esp),%eax
    shl    $0x5,%eax
    mov    %eax,0x4c(%esp)
    fildl  0x4c(%esp)
    fcompp
    fnstsw %ax
    sahf
    jae    jump_35194
    mov    %edx,0x68(%esp)
  jump_35194:
    mov    $0x1,%edx
    mov    0x50(%esp),%ebx
    mov    %edx,0x70(%esp)
    test   %ebx,%ebx
    je     jump_351b8
    mov    0x6b(%esi),%eax
    mov    0x2(%eax),%ax
    and    $0xffff,%eax
    sar    $0x8,%eax
    mov    %eax,0x70(%esp)
  jump_351b8:
    cmpl   $0x0,0x68(%esp)
    je     jump_351cd
    cmpl   $0x0,0x70(%esp)
    je     jump_351cd
    mov    $0x1,%eax
    jmp    jump_351cf
  jump_351cd:
    xor    %eax,%eax
  jump_351cf:
    or     %eax,0x74(%esp)
    testb  $0x1,0x74(%esp)
    je     jump_3533f
    mov    0x60(%esp),%ebx
    test   %ebx,%ebx
    je     jump_351f8
    mov    %ebp,%edx
    xor    %ecx,%ecx
    mov    %edi,%eax
    mov    0x57(%esi),%cl
    call   func_46b90
    or     %eax,0x74(%esp)
  jump_351f8:
    cmp    $0x1,%ebp
    jne    jump_3533f
    mov    0x6b(%esi),%eax
    cmpb   $0x11,0x1(%eax)
    jne    jump_35314
    lea    0x18(%esp),%edx
    lea    0x9e(%edi),%eax
    xor    %ebp,%ebp
    mov    %edx,0x58(%esp)
    mov    %ebp,(%esp)
    mov    %ebp,0x4(%esp)
    mov    %ebp,0x8(%esp)
    flds   (%eax)
    fsubs  (%esi)
    fstps  (%esp)
    flds   0x4(%eax)
    fsubs  0x4(%esi)
    fstps  0x4(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%esi)
    mov    (%esp),%eax
    fstps  0x8(%esp)
    flds   0x4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x18(%esp)
    mov    0x4(%esp),%eax
    flds   (%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c(%esp)
    faddp  %st,%st(1)
    mov    0x8(%esp),%eax
    flds   0x8(%esp)
    fmul   %st(0),%st
    mov    %eax,0x20(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fadds  data_81dd9
    fsts   0x6c(%esp)
    fcomps data_81ddd
    fnstsw %ax
    sahf
    jae    jump_35298
    movl   $0x42800000,0x6c(%esp)
  jump_35298:
    lea    0x18(%esp),%eax
    push   0x6c(%esp)
    call   func_4e444
    xor    %ebp,%ebp
    lea    0xc(%esp),%eax
    mov    %ebp,0x30(%esp)
    mov    %ebp,0x34(%esp)
    mov    %ebp,0x38(%esp)
    mov    %eax,0x64(%esp)
    flds   (%esi)
    fadds  0x18(%esp)
    fstps  0x30(%esp)
    flds   0x4(%esi)
    fadds  0x1c(%esp)
    mov    0x30(%esp),%eax
    fstps  0x34(%esp)
    flds   0x8(%esi)
    mov    %eax,0xc(%esp)
    fadds  0x20(%esp)
    mov    0x34(%esp),%eax
    fstps  0x38(%esp)
    mov    %eax,0x10(%esp)
    mov    0x38(%esp),%eax
    mov    %eax,0x14(%esp)
    mov    0x30(%esp),%eax
    mov    %eax,0x9e(%edi)
    mov    0x10(%esp),%eax
    mov    %eax,0xa2(%edi)
    add    $0x9e,%edi
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%edi)
  jump_35314:
    cmpl   $0x0,0x50(%esp)
    je     jump_3533f
    mov    0x70(%esp),%ecx
    test   %ecx,%ecx
    jle    jump_3533f
    lea    -0x1(%ecx),%edi
    mov    0x6b(%esi),%eax
    mov    %edi,0x70(%esp)
    movb   $0x0,0x3(%eax)
    mov    0x70(%esp),%edx
    mov    0x6b(%esi),%eax
    shl    $0x8,%edx
    or     %dx,0x2(%eax)
  jump_3533f:
    mov    0x74(%esp),%eax
    mov    %eax,0x73(%esi)
    add    $0x78,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35350:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%esi
    mov    %edx,0x14(%esp)
    mov    %bx,0x1c(%esp)
    cmpl   $0xffffffff,0x62(%eax)
    je     jump_355ba
    xor    %eax,%eax
    mov    0x57(%esi),%al
    test   %eax,%eax
    jl     jump_35382
    mov    data_93b96,%edx
    sar    $0x10,%edx
    cmp    %edx,%eax
    jl     jump_3539f
  jump_35382:
    xor    %eax,%eax
    mov    0x57(%esi),%al
    cmp    $0xff,%eax
    je     jump_3539f
    mov    $0x519,%ebx
    mov    $data_81de1,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3539f:
    mov    0x1a(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_353b7
    mov    0x1c(%esp),%eax
    cmp    data_93b98,%ax
    jl     jump_353c8
  jump_353b7:
    mov    $0x51a,%ebx
    mov    $data_81def,%edx
    xor    %eax,%eax
    call   func_25878
  jump_353c8:
    xor    %edx,%edx
    mov    0x57(%esi),%dl
    cmp    $0xff,%edx
    je     jump_3540f
    mov    0xa(%esi),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    mov    $data_93bc5,%ebx
    shl    $0x5,%eax
    add    %eax,%ebx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    mov    0x1a(%esp),%ecx
    sub    %edx,%eax
    sar    $0x10,%ecx
    add    %eax,%eax
    mov    %ecx,%edx
    add    $data_92e16,%eax
    call   func_3ee9c
  jump_3540f:
    mov    $0xffff,%ebx
    mov    0x18(%esi),%dx
    mov    0x1a(%esi),%cx
    xor    %edi,%edi
    mov    %ebx,0x18(%esp)
    cmp    %cx,%dx
    jae    jump_35473
    xor    %eax,%eax
  jump_35429:
    xor    %ebx,%ebx
    mov    %dx,%bx
    mov    0x10(%esi),%ebp
    shl    $0x2,%ebx
    add    %ebx,%ebp
    cmpb   $0xff,0x1(%ebp)
    je     jump_3546c
    mov    %dx,(%esp,%eax,1)
    mov    0x10(%esi),%ecx
    mov    0x1(%ecx,%ebx,1),%bl
    and    $0xff,%ebx
    imul   $0x28,%ebx,%ebx
    mov    data_f3e46(%ebx),%bx
    xor    %bh,%bh
    and    $0x8,%bl
    and    $0xffff,%ebx
    je     jump_35468
    mov    %edx,0x18(%esp)
  jump_35468:
    add    $0x2,%eax
    inc    %edi
  jump_3546c:
    inc    %edx
    cmp    0x1a(%esi),%dx
    jb     jump_35429
  jump_35473:
    test   %edi,%edi
    je     jump_355ba
    xor    %edx,%edx
    mov    0x18(%esp),%dx
    mov    $0xffffffff,%ecx
    cmp    $0xffff,%edx
    je     jump_354cb
    mov    %edx,%edi
    lea    0x0(,%edx,4),%ebp
    mov    0x10(%esi),%edx
    add    %ebp,%edx
    xor    %eax,%eax
    mov    0x2(%edx),%ax
    mov    0x14(%esp),%ebx
    sar    $0x8,%eax
    sub    %ebx,%eax
    test   %eax,%eax
    jle    jump_354db
    mov    %edi,%ebx
    cmp    0x52(%esi),%bx
    je     jump_354db
    movb   $0x0,0x3(%edx)
    mov    0x10(%esi),%edx
    shl    $0x8,%eax
    or     %ax,0x2(%edx,%ebp,1)
    xor    %ecx,%ecx
    jmp    jump_354db
  jump_354cb:
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %edi
    mov    (%esp,%edx,2),%di
  jump_354db:
    xor    %edx,%edx
    mov    0x10(%esi),%ebx
    mov    %di,%dx
    cmpb   $0x17,0x1(%ebx,%edx,4)
    jne    jump_35512
    mov    0x1a(%esp),%ecx
    mov    %esi,%eax
    mov    0x14(%esp),%ebx
    call   func_34b1c
    mov    $0x1,%edx
    sar    $0x10,%ecx
    add    %ebx,%ebx
    call   func_46b90
    test   $0x4,%al
    sete   %al
    xor    %ecx,%ecx
    mov    %al,%cl
    dec    %ecx
  jump_35512:
    mov    0x4a(%esi),%ax
    cmp    0x42(%esi),%ax
    jae    jump_3552d
    mov    $0x54f,%ebx
    mov    $data_81dfd,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3552d:
    xor    %eax,%eax
    mov    %di,%ax
    mov    0x10(%esi),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    xor    %edx,%edx
    mov    0x1(%eax),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_f3e40(,%eax,8),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    je     jump_35567
    mov    $0x550,%ebx
    mov    $data_81e0b,%edx
    xor    %eax,%eax
    call   func_25878
  jump_35567:
    cmp    $0xffffffff,%ecx
    jne    jump_355b3
    mov    $0x1,%ecx
    mov    $0xff,%ebx
    movzwl %di,%ebp
    mov    %esi,%eax
    mov    %ebp,%edx
    call   func_33c90
    mov    0x10(%esi),%eax
    cmpb   $0xff,0x1(%eax,%ebp,4)
    je     jump_3559d
    mov    $0x555,%ebx
    mov    $data_81e19,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3559d:
    cmp    0x52(%esi),%di
    jne    jump_355b3
    movw   $0xffff,0x52(%esi)
    movb   $0xff,0x54(%esi)
    movw   $0x0,0x50(%esi)
  jump_355b3:
    mov    %esi,%eax
    call   func_33ff4
  jump_355ba:
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_355c4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ecx
    xor    %edx,%edx
    mov    %edx,0xc(%esp)
    cmp    0x1a(%eax),%di
    jb     jump_355ee
    mov    $0x569,%ebx
    mov    $data_81e27,%edx
    xor    %eax,%eax
    call   func_25878
  jump_355ee:
    xor    %eax,%eax
    mov    0x10(%esi),%edx
    mov    %di,%ax
    cmpb   $0x17,0x1(%edx,%eax,4)
    je     jump_3560e
    mov    $0x56a,%ebx
    mov    $data_81e35,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3560e:
    xor    %edx,%edx
    mov    %esi,%eax
    mov    %di,%dx
    call   func_34b1c
    xor    %edx,%edx
    mov    0x57(%esi),%dl
    mov    %eax,%ebp
    cmp    $0xff,%edx
    je     jump_35633
    mov    0x54(%eax),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jne    jump_35644
  jump_35633:
    mov    $0x56e,%ebx
    mov    $data_81e43,%edx
    xor    %eax,%eax
    call   func_25878
  jump_35644:
    mov    0x54(%ebp),%edx
    sar    $0x10,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    xor    %ebx,%ebx
    sub    %edx,%eax
    mov    %ebx,(%esp)
    cmpb   $0x0,data_92fb3(,%eax,2)
    jne    jump_3566c
    movl   $0xffffffff,(%esp)
  jump_3566c:
    mov    0xa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    mov    $data_93bc5,%ebx
    sub    %edx,%eax
    xor    %edx,%edx
    shl    $0x5,%eax
    mov    0x57(%esi),%dl
    add    %eax,%ebx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    mov    0x54(%ebp),%edi
    sub    %edx,%eax
    sar    $0x10,%edi
    add    %eax,%eax
    mov    %edi,%edx
    add    $data_92e16,%eax
    call   func_3ee9c
    cmp    $0xffffffff,%eax
    jne    jump_356e8
    xor    %edx,%edx
    mov    0x57(%esi),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    0x54(%ebp),%edx
    sar    $0x10,%edx
    add    %eax,%eax
    add    %edx,%edx
    add    %eax,%edx
    mov    data_92fdf(%eax),%di
    cmp    data_92fc8(%edx),%di
    jge    jump_356e8
    mov    %edi,%eax
    sub    $0xa,%eax
    mov    %ax,data_92fc8(%edx)
  jump_356e8:
    xor    %eax,%eax
    mov    %eax,0x10(%esp)
    mov    %eax,0x4(%esp)
    xor    %eax,%eax
    jmp    jump_356f7
  jump_356f6:
    inc    %eax
  jump_356f7:
    movswl %ax,%edx
    cmp    0x15a(%ebp),%edx
    jge    jump_35715
    imul   $0x7,%edx,%edx
    cmpb   $0x49,0xab(%edx,%ebp,1)
    jne    jump_356f6
    incl   0x10(%esp)
    jmp    jump_356f6
  jump_35715:
    xor    %eax,%eax
    jmp    jump_35741
  jump_35719:
    movswl %ax,%edx
    mov    0x10(%esi),%edi
    shl    $0x2,%edx
    add    %edi,%edx
    cmpb   $0x13,0x1(%edx)
    jne    jump_35740
    mov    0x2(%edx),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_35740
    addl   $0x2,0x4(%esp)
  jump_35740:
    inc    %eax
  jump_35741:
    xor    %edx,%edx
    movswl %ax,%edi
    mov    0x18(%esi),%dx
    cmp    %edx,%edi
    jge    jump_35777
    lea    0x0(,%edi,4),%edx
    mov    0x10(%esi),%edi
    add    %edi,%edx
    cmpb   $0x12,0x1(%edx)
    jne    jump_35719
    mov    0x2(%edx),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_35719
    incl   0x4(%esp)
    jmp    jump_35740
  jump_35777:
    mov    0x10(%esp),%eax
    mov    0x4(%esp),%edx
    mov    %eax,0x14(%esp)
    cmp    %edx,%eax
    jle    jump_3578e
    lea    0x1(%edx),%eax
    mov    %eax,0x14(%esp)
  jump_3578e:
    mov    0x14(%esp),%eax
    mov    (%esp),%ebx
    mov    %eax,0x8(%esp)
    cmp    $0xffffffff,%ebx
    jne    jump_357a6
    movl   $0x1,0x8(%esp)
  jump_357a6:
    mov    0x8(%esp),%eax
    xor    %edi,%edi
    xor    %ebx,%ebx
    mov    %eax,(%ecx)
    jmp    jump_357b3
  jump_357b2:
    inc    %ebx
  jump_357b3:
    movswl %bx,%eax
    cmp    0x15a(%ebp),%eax
    jge    jump_357dd
    cmp    0x8(%esp),%edi
    jge    jump_357dd
    imul   $0x7,%eax,%edx
    cmpb   $0x49,0xab(%edx,%ebp,1)
    jne    jump_357b2
    mov    %eax,%edx
    mov    %ebp,%eax
    inc    %edi
    call   func_44b34
    jmp    jump_357b2
  jump_357dd:
    mov    %ebp,%eax
    call   func_44f1c
    xor    %eax,%eax
    xor    %edi,%edi
    mov    %ax,0x1c(%esp)
    jmp    jump_357f4
  jump_357ef:
    incw   0x1c(%esp)
  jump_357f4:
    mov    0x1a(%esp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    0x18(%esi),%dx
    cmp    %edx,%eax
    jge    jump_35847
    cmp    0x14(%esp),%edi
    jge    jump_35847
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    add    %edx,%eax
    cmpb   $0x12,0x1(%eax)
    jne    jump_357ef
    mov    0x2(%eax),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_357ef
    mov    $0x1,%ecx
    mov    $0xff,%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0x1c(%esp),%dx
    inc    %edi
    call   func_33c90
    jmp    jump_357ef
  jump_35847:
    xor    %edx,%edx
    mov    %dx,0x18(%esp)
    jmp    jump_35855
  jump_35850:
    incw   0x18(%esp)
  jump_35855:
    mov    0x16(%esp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    0x18(%esi),%dx
    cmp    %edx,%eax
    jge    jump_358ac
    mov    0x14(%esp),%ecx
    cmp    %ecx,%edi
    jge    jump_358ac
    shl    $0x2,%eax
    mov    0x10(%esi),%edx
    add    %edx,%eax
    cmpb   $0x13,0x1(%eax)
    jne    jump_35850
    mov    0x2(%eax),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_35850
    add    $0x2,%edi
    cmp    %ecx,%edi
    jg     jump_35850
    mov    $0x1,%ecx
    mov    $0xff,%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0x18(%esp),%dx
    call   func_33c90
    jmp    jump_35850
  jump_358ac:
    mov    0x10(%esp),%eax
    cmp    0x4(%esp),%eax
    jg     jump_358bc
    cmpl   $0xffffffff,(%esp)
    jne    jump_3591c
  jump_358bc:
    mov    0x57(%esi),%al
    cmp    data_f458e,%al
    jne    jump_358e7
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    je     jump_358e7
    mov    $0xd,%edx
    mov    $data_fa35c,%eax
    mov    %esi,%ebx
    xor    %ecx,%ecx
    call   func_50eb0
  jump_358e7:
    mov    0xa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    mov    0x54(%ebp),%ebx
    sub    %edx,%eax
    sar    $0x10,%ebx
    shl    $0x5,%eax
    mov    %esi,%edx
    add    $data_93bc5,%eax
    call   func_1d1f4
    mov    $0xffffffff,%edx
    mov    data_92e10,%eax
    mov    %edx,0xc(%esp)
    mov    %eax,0x67(%esi)
  jump_3591c:
    mov    %esi,%eax
    call   func_33ff4
    mov    0xc(%esp),%eax
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_35930:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    mov    0xa(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $0xffffffff,%ebx
    shl    $0x5,%eax
    mov    %ecx,%edx
    add    $data_93bc5,%eax
    call   func_1d1f4
    xor    %edx,%edx
    xor    %eax,%eax
    jmp    jump_35963
  jump_3595f:
    add    $0x4,%eax
    inc    %edx
  jump_35963:
    xor    %esi,%esi
    mov    0x1a(%ecx),%si
    cmp    %esi,%edx
    jge    jump_35988
    mov    0x10(%ecx),%esi
    add    %eax,%esi
    cmpb   $0x17,0x1(%esi)
    je     jump_3595f
    movb   $0xff,0x1(%esi)
    mov    0x10(%ecx),%esi
    movw   $0x0,0x2(%esi,%eax,1)
    jmp    jump_3595f
  jump_35988:
    movw   $0x0,0x4c(%ecx)
    mov    0x4c(%ecx),%ax
    mov    %ax,0x42(%ecx)
    mov    %ecx,%eax
    movb   $0xff,0x57(%ecx)
    call   func_33ff4
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_359a8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x7c,%esp
    mov    %eax,%ebp
    mov    %edx,%eax
    cmp    $0xffffffff,%ebx
    jne    jump_35b86
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %edx,(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x8(%esp)
    mov    %ebx,0x10(%esp)
    mov    %ebx,0x5a(%esp)
    xor    %edx,%edx
    mov    $0x7b,%ebx
    mov    %dx,0x1a(%esp)
    mov    %esp,%edx
    call   func_1bf94
    mov    (%esp),%eax
    mov    %eax,0x0(%ebp)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%ebp)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%ebp)
    mov    0xc(%esp),%eax
    mov    %ax,0xc(%ebp)
    mov    0xe(%esp),%eax
    mov    %ax,0xe(%ebp)
    mov    0x10(%esp),%eax
    mov    %eax,0x10(%ebp)
    mov    0x14(%esp),%eax
    mov    %ax,0x14(%ebp)
    mov    0x16(%esp),%eax
    mov    %ax,0x16(%ebp)
    mov    0x18(%esp),%eax
    mov    %ax,0x18(%ebp)
    mov    0x1a(%esp),%eax
    mov    %ax,0x1a(%ebp)
    mov    0x1c(%esp),%eax
    mov    %ax,0x1c(%ebp)
    mov    0x1e(%esp),%eax
    mov    %ax,0x1e(%ebp)
    mov    0x20(%esp),%eax
    mov    $0x7,%ecx
    mov    %ax,0x20(%ebp)
    lea    0x24(%esp),%esi
    mov    0x22(%esp),%eax
    lea    0x24(%ebp),%edi
    mov    %ax,0x22(%ebp)
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x42(%esp),%eax
    mov    %ax,0x42(%ebp)
    mov    0x44(%esp),%eax
    mov    %ax,0x44(%ebp)
    mov    0x46(%esp),%eax
    mov    %ax,0x46(%ebp)
    mov    0x48(%esp),%eax
    mov    %ax,0x48(%ebp)
    mov    0x4a(%esp),%eax
    mov    %ax,0x4a(%ebp)
    mov    0x4c(%esp),%eax
    mov    %ax,0x4c(%ebp)
    mov    0x4e(%esp),%eax
    mov    %ax,0x4e(%ebp)
    mov    0x50(%esp),%eax
    mov    %ax,0x50(%ebp)
    mov    0x52(%esp),%eax
    mov    %ax,0x52(%ebp)
    mov    0x54(%esp),%al
    mov    %al,0x54(%ebp)
    mov    0x55(%esp),%eax
    mov    %ax,0x55(%ebp)
    mov    0x57(%esp),%al
    mov    %al,0x57(%ebp)
    mov    0x58(%esp),%al
    mov    %al,0x58(%ebp)
    mov    0x59(%esp),%al
    mov    %al,0x59(%ebp)
    mov    0x5a(%esp),%eax
    mov    %eax,0x5a(%ebp)
    mov    0x5e(%esp),%eax
    mov    %eax,0x5e(%ebp)
    mov    0x62(%esp),%eax
    mov    %eax,0x62(%ebp)
    mov    0x66(%esp),%al
    mov    %al,0x66(%ebp)
    mov    0x67(%esp),%eax
    mov    %eax,0x67(%ebp)
    mov    0x6b(%esp),%eax
    mov    %eax,0x6b(%ebp)
    mov    0x6f(%esp),%eax
    mov    %eax,0x6f(%ebp)
    mov    0x73(%esp),%eax
    mov    %eax,0x73(%ebp)
    mov    0x77(%esp),%eax
    mov    %eax,0x77(%ebp)
    mov    data_96145,%bx
    cmp    0xc(%ebp),%bx
    jg     jump_35b2a
    mov    $0x5fc,%ebx
    mov    $data_81e51,%edx
    xor    %eax,%eax
    call   func_25878
  jump_35b2a:
    mov    0xc(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x5,%eax
    jl     jump_35b46
    mov    $0x5fd,%ebx
    mov    $data_81e5f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_35b46:
    mov    0xa(%ebp),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%edx
    mov    0xc(%ebp),%eax
    sub    %ebx,%edx
    sar    $0x10,%eax
    shl    $0x5,%edx
    mov    %ebp,data_93c0b(%edx,%eax,4)
    mov    0xa(%ebp),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x5,%eax
    incw   data_93c1f(%eax)
    add    $0x7c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_35b86:
    mov    $0x7b,%ebx
    mov    %ebp,%edx
    call   func_1c098
    add    $0x7c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_35ba0:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85e1c,0xa7(%eax)
    call   func_35c00
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_35bbc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_35bdb
    mov    $data_85df0,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_35bdb:
    mov    $0x1,%edx
    movl   $data_85e1c,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_35bfb
    call   func_72124
  jump_35bfb:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35c00:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x34,%esp
    mov    %eax,%ecx
    movb   $0xff,0xab(%eax)
    movw   $0xffff,0xae(%eax)
    mov    0xae(%eax),%ax
    movb   $0x5,0x18b(%ecx)
    mov    %ax,0xb0(%ecx)
    xor    %ebx,%ebx
    mov    %ax,0xac(%ecx)
  jump_35c36:
    push   %ebx
    push   $data_81e70
    lea    0x8(%esp),%edx
    push   %edx
    add    $0x2,%ecx
    call   func_720c9
    lea    0xc(%esp),%edx
    add    $0xc,%esp
    mov    $data_11f10c,%eax
    inc    %ebx
    call   func_1adac
    mov    %ax,0x173(%ecx)
    cmp    $0xb,%ebx
    jl     jump_35c36
    add    $0x34,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35c70:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %edx,%ebx
    mov    %eax,%ecx
    shl    $0x4,%ecx
    add    %eax,%ecx
    mov    %edx,%eax
    shl    $0x4,%eax
    add    %edx,%eax
    mov    %ecx,%edx
    add    %eax,%eax
    sub    %eax,%edx
    sub    $0xc9e,%edx
    mov    $0xfffffb7c,%esi
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %esi
    mov    %eax,%esi
    mov    %ebx,%eax
    shl    $0x4,%eax
    add    %ebx,%eax
    add    %eax,%eax
    mov    %ecx,%edx
    neg    %eax
    sub    %eax,%edx
    sub    $0x29d6,%edx
    mov    $0x484,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    mov    %esi,%eax
    movswl %dx,%edx
    shl    $0x10,%eax
    or     %edx,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35cd0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %edx,%ebx
    cmp    $0xd,%eax
    jle    jump_35d26
    cmp    $0x99,%eax
    jge    jump_35d26
    cmp    $0x77,%edx
    jle    jump_35d26
    cmp    $0x1d5,%edx
    jge    jump_35d26
    mov    data_c3508,%edx
    xor    %esi,%esi
    mov    0x18(%edx),%si
    lea    -0xd(%eax),%edx
    mov    $0x46,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    %eax,%edx
    shl    $0x2,%eax
    add    %edx,%eax
    lea    -0x77(%ebx),%edx
    lea    (%esi,%eax,1),%ecx
    mov    $0x46,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    add    %eax,%ecx
    jmp    jump_35d44
  jump_35d26:
    mov    %ebx,%edx
    call   func_35c70
    mov    %eax,%edx
    movswl %ax,%ebx
    mov    data_c3508,%eax
    sar    $0x10,%edx
    xor    %ecx,%ecx
    call   func_34a14
    mov    %ax,%cx
  jump_35d44:
    mov    %ecx,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_35d4c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    $0xf2,%eax
    test   %ecx,%ecx
    je     jump_35d64
    mov    $0x96,%eax
  jump_35d64:
    push   %eax
    push   %esi
    call   func_59d90
    add    $0x8,%esp
    mov    (%edi),%al
    mov    %al,0x10(%esp)
    cmp    $0xff,%al
    je     jump_35e10
    mov    $data_81e84,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    lea    0x8(%esp),%ecx
    call   func_5216c
    xor    %edx,%edx
    lea    0xc(%esp),%ebx
    mov    0x10(%esp),%dl
    call   func_37c9c
    mov    0x10(%esp),%dl
    mov    $0x10000,%ebp
    cmp    $0x17,%dl
    jne    jump_35db3
    mov    $0x8000,%ebp
  jump_35db3:
    lea    0x4(%esp),%eax
    mov    %esp,%ecx
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    0xc(%esp),%dx
    push   %eax
    mov    $data_11f10c,%eax
    mov    0xc(%esp),%bx
    call   func_1b084
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_2b320
    push   $0x0
    push   %ebp
    push   %ebp
    push   $0x0
    push   $data_c8c44
    mov    0x18(%esp),%edx
    push   %edx
    xor    %eax,%eax
    push   $0x28
    mov    0x24(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x2c(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_589f1
    add    $0x28,%esp
  jump_35e10:
    push   $0x0
    mov    $data_f3e40,%ecx
    xor    %edx,%edx
    push   $0xff
    xor    %ebx,%ebx
    mov    (%edi),%dl
    push   $0xffffffff
    lea    0x0(,%edx,4),%eax
    mov    $data_fd3aa,%edi
    add    %edx,%eax
    push   $0x1
    shl    $0x3,%eax
    mov    $0x50,%edx
    add    %eax,%ecx
    mov    $data_fd3a2,%eax
    add    $0xa,%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_35e58:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x118,%esp
    mov    %eax,-0x8(%ebp)
    mov    %dx,-0x4(%ebp)
    mov    %ebx,-0x14(%ebp)
    mov    %ecx,-0x1c(%ebp)
    mov    $data_81e90,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    $data_81e99,%edx
    mov    %eax,%ecx
    mov    %eax,-0x18(%ebp)
    xor    %ebx,%ebx
    mov    $data_fa35c,%eax
    call   func_5216c
    mov    -0x4(%ebp),%edx
    mov    %eax,%edi
    cmp    $0x7,%dx
    jb     jump_36d40
    jbe    jump_36002
    cmp    $0x33,%dx
    jb     jump_36d27
    jbe    jump_36b43
    cmp    $0x1c01,%dx
    jb     jump_36d18
    mov    -0x14(%ebp),%edx
    lea    0x0(,%edx,4),%eax
    mov    -0x8(%ebp),%ebx
    add    %edx,%eax
    mov    -0x4(%ebp),%ecx
    add    %eax,%ebx
    cmp    $0x1c01,%cx
    jbe    jump_36806
    cmp    $0x1c02,%cx
    je     jump_3695e
  jump_35ef1:
    mov    -0x6(%ebp),%edx
    mov    -0x1c(%ebp),%ecx
    mov    -0x14(%ebp),%ebx
    mov    -0x8(%ebp),%eax
    sar    $0x10,%edx
    call   func_2eb04
    mov    %eax,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_35f0f:
    mov    -0x8(%ebp),%eax
    movb   $0xff,0xab(%eax)
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    movw   $0xffff,0xae(%eax)
    call   *0xc(%ebx)
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_35f3a:
    lea    -0x34(%ebp),%edi
    mov    $data_866e8,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    xor    %esi,%esi
    mov    $data_fa35c,%edi
    shl    $0x2,%esi
  jump_35f51:
    mov    -0x1c(%ebp),%eax
    mov    -0x6(%ebp),%ebx
    mov    -0x14(%ebp),%ecx
    mov    -0x34(%esi,%ebp,1),%edx
    push   %eax
    sar    $0x10,%ebx
    mov    %edi,%eax
    add    $0x4,%esi
    call   func_52134
    cmp    $0x14,%esi
    jne    jump_35f51
    mov    -0x8(%ebp),%eax
    movl   $0xffffffff,0x35(%eax)
    movl   $0xffffffff,0x39(%eax)
    movb   $0xff,0xab(%eax)
    movw   $0xffff,0xac(%eax)
    mov    -0x8(%ebp),%edx
    mov    0xac(%eax),%ax
    mov    %ax,0xae(%edx)
    xor    %eax,%eax
    mov    0xb0(%edx),%ax
    cmp    $0xffff,%eax
    jge    jump_35fba
    mov    %edx,%eax
    call   func_37dc8
  jump_35fba:
    mov    -0x8(%ebp),%ebx
    mov    0xa7(%ebx),%ebx
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    data_f4520,%edx
    test   %edx,%edx
    je     jump_35ff8
    mov    $0x14,%ecx
    mov    $data_fa35c,%eax
    mov    %edx,%ebx
    mov    data_f4524,%edx
    call   func_50b98
    xor    %ebx,%ebx
    mov    %ebx,data_f4520
  jump_35ff8:
    xor    %edx,%edx
  jump_35ffa:
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36002:
    push   $0x0
    mov    -0x8(%ebp),%edx
    mov    $data_fa35c,%eax
    mov    $0x8,%ecx
    push   $0x0
    mov    $0x4,%ebx
    mov    0x41(%edx),%edx
    call   func_51aec
    mov    -0x8(%ebp),%eax
    mov    -0x8(%ebp),%edx
    mov    0x39(%eax),%eax
    mov    0x35(%edx),%ebx
    mov    0x3d(%edx),%ecx
    and    %ebx,%eax
    and    %ecx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_36045
    mov    0xa7(%edx),%ebx
    mov    %edx,%eax
    xor    %edx,%edx
    call   *0x10(%ebx)
  jump_36045:
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36052:
    cmpl   $0x0,0x35(%ecx)
    jne    jump_35ff8
    cmpl   $0x0,0x35(%eax)
    jne    jump_35ff8
    mov    -0x1c(%ebp),%edx
    mov    -0x14(%ebp),%eax
    call   func_35cd0
    mov    -0x8(%ebp),%edx
    mov    %ax,0xac(%edx)
    mov    data_c3508,%eax
    mov    0x57(%eax),%al
    cmp    data_f458e,%al
    je     jump_360f5
    cmpb   $0x5,0xab(%edx)
    je     jump_360f5
    mov    -0x8(%ebp),%edx
    xor    %eax,%eax
    mov    0xac(%edx),%ax
    cmp    $0xffff,%eax
    je     jump_360f5
    xor    %eax,%eax
    mov    0xac(%edx),%ax
    lea    0x0(,%eax,4),%edx
    mov    data_c3508,%eax
    mov    0x10(%eax),%eax
    cmpb   $0x17,0x1(%edx,%eax,1)
    jne    jump_360e9
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    mov    0xac(%eax),%dx
    mov    data_c3508,%eax
    call   func_34b1c
    mov    0x54(%eax),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    data_f458e,%al
    cmp    %eax,%edx
    je     jump_360f5
  jump_360e9:
    mov    -0x8(%ebp),%eax
    movw   $0xffff,0xac(%eax)
  jump_360f5:
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    mov    0xac(%eax),%dx
    cmp    $0xffff,%edx
    je     jump_3613a
    mov    data_c3508,%eax
    mov    0x10(%eax),%ecx
    cmpb   $0x17,0x1(%ecx,%edx,4)
    jne    jump_3613a
    call   func_34b1c
    mov    0x54(%eax),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    data_f458e,%al
    cmp    %eax,%edx
    je     jump_3613a
    mov    -0x8(%ebp),%eax
    movw   $0xffff,0xac(%eax)
  jump_3613a:
    mov    -0x8(%ebp),%ebx
    mov    0xa7(%ebx),%ebx
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36155:
    mov    %ecx,%eax
    mov    0x35(%eax),%edx
    test   %edx,%edx
    je     jump_3617b
    push   $0x0
    mov    $0x2,%ebx
    mov    %eax,%edx
    xor    %ecx,%ecx
    mov    $data_fa35c,%eax
    mov    0x41(%edx),%edx
    call   func_520f4
    jmp    jump_36341
  jump_3617b:
    mov    0x35(%edi),%ebx
    test   %ebx,%ebx
    je     jump_3619c
    mov    $0x2,%ebx
    mov    $data_fa35c,%eax
    push   %edx
    xor    %ecx,%ecx
    mov    0x41(%edi),%edx
    call   func_520f4
    jmp    jump_36341
  jump_3619c:
    mov    $0x3,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    call   func_51f24
    jmp    jump_36341
  jump_361b2:
    cmpl   $0x0,data_90ba0
    je     jump_36341
    mov    data_c3508,%eax
    addw   $0xc8,0x50(%eax)
    call   func_343b8
    jmp    jump_36341
  jump_361d4:
    cmpl   $0x0,data_c84ac
    je     jump_361fd
    cmpl   $0x0,data_90ba0
    je     jump_36341
    mov    data_c3508,%eax
    incw   0x55(%eax)
    call   func_33ff4
    jmp    jump_36341
  jump_361fd:
    mov    data_c3508,%eax
    mov    0x5a(%eax),%edx
    not    %edx
    mov    %edx,0x5a(%eax)
    jmp    jump_36341
  jump_3620f:
    cmpl   $0x0,data_90ba0
    je     jump_36341
    mov    data_c3508,%eax
    call   func_343b8
    jmp    jump_36341
  jump_3622b:
    cmpl   $0x0,data_90ba0
    je     jump_36341
    mov    data_c3508,%eax
    mov    %eax,%edx
    mov    0x4a(%eax),%ax
    mov    %ax,0x42(%edx)
    jmp    jump_36341
  jump_3624c:
    cmpl   $0x0,data_90ba0
    je     jump_36341
    mov    data_c3508,%eax
    mov    0x57(%eax),%al
    and    $0xff,%eax
    cmp    $0xff,%eax
    jne    jump_36280
    mov    data_c3508,%edx
    mov    data_f458e,%al
    mov    %al,0x57(%edx)
    jmp    jump_36341
  jump_36280:
    mov    data_c3508,%edx
    xor    %eax,%eax
    mov    0xa(%edx),%ecx
    mov    data_f458e,%al
    sar    $0x10,%ecx
    movswl %ax,%ebx
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    mov    $data_93bc5,%ecx
    shl    $0x5,%eax
    add    %ecx,%eax
    call   func_1d1f4
    jmp    jump_36341
  jump_362b3:
    mov    -0x8(%ebp),%eax
    xorb   $0x1,0x18b(%eax)
    jmp    jump_36341
  jump_362c2:
    cmpl   $0x0,data_90ba0
    je     jump_36341
    mov    data_c3508,%eax
    mov    0x42(%eax),%cx
    mov    $0xffffffff,%ebx
    add    $0x2,%ecx
    mov    $0x5,%edx
    mov    %cx,0x42(%eax)
    call   func_33c68
    jmp    jump_36341
  jump_362f0:
    mov    -0x1c(%ebp),%eax
    cmp    $0x17,%eax
    jb     jump_36326
    jbe    jump_361b2
    cmp    $0x1f,%eax
    jb     jump_3631b
    jbe    jump_362b3
    cmp    $0x31,%eax
    jb     jump_36341
    jbe    jump_3620f
    cmp    $0x32,%eax
    je     jump_361d4
    jmp    jump_36341
  jump_3631b:
    cmp    $0x18,%eax
    je     jump_3622b
    jmp    jump_36341
  jump_36326:
    cmp    $0x13,%eax
    jb     jump_36338
    jbe    jump_3624c
    cmp    $0x14,%eax
    je     jump_362c2
    jmp    jump_36341
  jump_36338:
    cmp    $0x1,%eax
    je     jump_36155
  jump_36341:
    mov    -0x8(%ebp),%ebx
    mov    0xa7(%ebx),%ebx
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3635c:
    mov    -0x8(%ebp),%eax
    mov    0x35(%eax),%edx
    test   %edx,%edx
    je     jump_35ffa
    mov    %ecx,%eax
    mov    0x35(%eax),%ebx
    test   %ebx,%ebx
    je     jump_36390
    push   $0x0
    mov    $0x2,%ebx
    mov    %eax,%edx
    xor    %ecx,%ecx
    mov    $data_fa35c,%eax
    mov    0x41(%edx),%edx
    call   func_520f4
    jmp    jump_367ba
  jump_36390:
    cmpl   $0x0,0x35(%edi)
    je     jump_363b0
    mov    $data_fa35c,%eax
    push   %ebx
    mov    0x41(%edi),%edx
    xor    %ecx,%ecx
    mov    $0x2,%ebx
    call   func_520f4
    jmp    jump_367ba
  jump_363b0:
    mov    -0x8(%ebp),%eax
    mov    -0x8(%ebp),%edx
    mov    0xac(%eax),%ax
    mov    %ax,0xae(%edx)
    xor    %eax,%eax
    mov    0xae(%edx),%ax
    cmp    $0xffff,%eax
    jge    jump_367aa
    mov    0x57(%edx),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_363f3
    mov    0x57(%edx),%edx
    mov    $data_f8638,%eax
    sar    $0x10,%edx
    call   func_4af80
  jump_363f3:
    mov    -0x8(%ebp),%eax
    mov    0xab(%eax),%ch
    cmp    $0xff,%ch
    jne    jump_36420
    mov    $0x3,%ebx
    mov    0xa7(%eax),%esi
    mov    $0x32,%edx
    xor    %ecx,%ecx
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36420:
    je     jump_367ba
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ch,%dl
    mov    0xae(%eax),%bx
    mov    data_c3508,%eax
    call   func_3375c
    test   %eax,%eax
    je     jump_367ba
    mov    -0x8(%ebp),%eax
    mov    0xab(%eax),%dh
    cmp    $0x5,%dh
    jne    jump_36740
    xor    %edx,%edx
    mov    data_c3508,%eax
    mov    0xab(%edi),%dx
    call   func_34b1c
    mov    $0x47,%edx
    mov    %eax,%ebx
    mov    %eax,%edi
    call   func_44bb8
    mov    %eax,%edx
    mov    %ebx,%eax
    call   func_44b34
    mov    data_c3508,%edx
    mov    0xa(%edx),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    mov    $data_93bc5,%esi
    shl    $0x5,%eax
    add    %eax,%esi
    xor    %eax,%eax
    mov    0x57(%edx),%al
    cmp    $0xff,%eax
    je     jump_364bd
    mov    $0x1c6,%ebx
    mov    $data_81ea2,%edx
    xor    %eax,%eax
    call   func_25878
  jump_364bd:
    mov    $0x1f,%eax
    mov    $0x14,%ecx
    mov    data_c3508,%ebx
    call   func_1ce70
    add    $0x24,%ebx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_50b98
    mov    0x56(%edi),%al
    mov    data_c3508,%edx
    mov    %al,%cl
    mov    %al,0x57(%edx)
    mov    $0x1,%al
    shl    %cl,%al
    or     %al,0x14(%esi)
    movw   $0x2,0x42(%edx)
    mov    data_92e10,%eax
    xor    %ebx,%ebx
    mov    %eax,0x67(%edx)
    mov    -0x8(%ebp),%eax
    xor    %ecx,%ecx
    xor    %edx,%edx
    mov    0xab(%eax),%bl
    mov    0xae(%eax),%dx
    mov    data_c3508,%eax
    xor    %edi,%edi
    call   func_33c90
    mov    $0x1c,%ebx
    lea    -0x50(%ebp),%eax
    xor    %edx,%edx
    mov    $0xffffffff,%ecx
    call   func_72280
    mov    data_93b98,%ax
    xor    %edx,%edx
    test   %ax,%ax
    jle    jump_365a0
    jmp    jump_36556
  jump_36549:
    mov    data_93b98,%si
    inc    %edx
    cmp    %si,%dx
    jge    jump_365a0
  jump_36556:
    movswl %dx,%ebx
    imul   $0x1ee,%ebx,%esi
    cmpl   $0x0,data_92e19(%esi)
    jne    jump_36549
    mov    $data_92e16,%eax
    add    %esi,%eax
    call   func_3c3cc
    mov    %eax,-0x50(%ebp,%ebx,4)
    cmp    %eax,%edi
    jge    jump_36549
    xor    %eax,%eax
    mov    data_f458e,%al
    cmp    %eax,%ebx
    je     jump_36597
    imul   $0x1ee,%eax,%eax
    cmpb   $0x0,data_92fd6(%ebx,%eax,1)
    je     jump_36549
  jump_36597:
    movswl %dx,%ecx
    mov    -0x50(%ebp,%ecx,4),%edi
    jmp    jump_36549
  jump_365a0:
    test   %ecx,%ecx
    jge    jump_365b5
    mov    $0x1e9,%ebx
    mov    $data_81eb1,%edx
    xor    %eax,%eax
    call   func_25878
  jump_365b5:
    mov    $data_81ec0,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,-0x20(%ebp)
    xor    %eax,%eax
    mov    data_f458e,%al
    mov    $data_81ecb,%ebx
    cmp    %eax,%ecx
    jne    jump_365de
    mov    $data_81ed4,%ebx
  jump_365de:
    mov    $data_81ee0,%edx
    mov    -0x20(%ebp),%eax
    call   func_2f390
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    -0x50(%ebp,%ecx,4),%esi
    shl    $0x2,%eax
    push   %esi
    add    $data_f4590,%eax
    push   %eax
    xor    %eax,%eax
    mov    data_f458e,%al
    cmpl   $0x1,-0x50(%ebp,%eax,4)
    jne    jump_3662c
    mov    $0x20,%eax
    jmp    jump_36631
  jump_3662c:
    mov    $0x21,%eax
  jump_36631:
    call   func_1ce70
    xor    %edx,%edx
    mov    data_f458e,%dl
    push   %eax
    mov    -0x50(%ebp,%edx,4),%eax
    push   %eax
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    mov    -0x20(%ebp),%eax
    mov    0xc9a(%eax),%edx
    push   %edx
    lea    -0x118(%ebp),%eax
    push   %eax
    mov    -0x20(%ebp),%edi
    call   func_720c9
    add    $0x1c,%esp
    lea    -0x118(%ebp),%esi
    mov    0xc9a(%edi),%edi
    push   %edi
  jump_36694:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_366ac
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_36694
  jump_366ac:
    pop    %edi
    mov    -0x20(%ebp),%eax
    movw   $0x1d,0xcb1(%eax)
    mov    data_c3508,%eax
    imul   $0x5,0x16(%eax),%dx
    mov    0x14(%eax),%ax
    add    %eax,%edx
    mov    -0x20(%ebp),%eax
    mov    %dx,0xcb3(%eax)
    mov    data_c3508,%eax
    add    $0x24,%eax
    push   %eax
    mov    -0x20(%ebp),%eax
    mov    0xcd0(%eax),%ebx
    xor    %ecx,%ecx
    push   %ebx
    lea    -0x118(%ebp),%eax
    lea    -0x118(%ebp),%esi
    push   %eax
    mov    -0x20(%ebp),%edi
    mov    $0x5,%edx
    call   func_720c9
    add    $0xc,%esp
    mov    0xcd0(%edi),%edi
    xor    %ebx,%ebx
    push   %edi
  jump_3670e:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_36726
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3670e
  jump_36726:
    pop    %edi
    mov    $data_fa35c,%eax
    call   func_51f24
    mov    -0x8(%ebp),%eax
    movb   $0xff,0xab(%eax)
    jmp    jump_367ba
  jump_36740:
    cmp    $0x17,%dh
    jne    jump_3677b
    mov    -0x8(%ebp),%edx
    xor    %eax,%eax
    mov    0xae(%edx),%ax
    lea    0x0(,%eax,4),%edx
    mov    data_c3508,%eax
    mov    0x10(%eax),%eax
    cmpb   $0xff,0x1(%edx,%eax,1)
    jne    jump_3677b
    mov    -0x8(%ebp),%eax
    mov    -0x8(%ebp),%edx
    mov    0xae(%eax),%ax
    mov    %ax,0xb0(%edx)
  jump_3677b:
    mov    -0x8(%ebp),%eax
    mov    $0x2,%ecx
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0xab(%eax),%bl
    mov    0xae(%eax),%dx
    mov    data_c3508,%eax
    call   func_33c90
    mov    -0x8(%ebp),%eax
    movb   $0xff,0xab(%eax)
    jmp    jump_367ba
  jump_367aa:
    cmpb   $0xff,0xab(%edx)
    je     jump_367ba
    movb   $0xff,0xab(%edx)
  jump_367ba:
    mov    -0x8(%ebp),%eax
    xor    %ebx,%ebx
    mov    0xb0(%eax),%bx
    cmp    $0xffff,%ebx
    jge    jump_367e8
    mov    0xa7(%eax),%esi
    mov    $0x34,%edx
    xor    %ecx,%ecx
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_367e8:
    mov    -0x1c(%ebp),%ecx
    mov    0xa7(%eax),%esi
    mov    -0x14(%ebp),%ebx
    mov    $0x8,%edx
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36806:
    mov    -0x8(%ebp),%edx
    mov    0xb2(%ebx),%al
    xor    %ebx,%ebx
    mov    0xae(%edx),%bx
    mov    %al,0xab(%edx)
    cmp    $0xffff,%ebx
    jne    jump_36875
    cmp    $0xff,%al
    je     jump_368fb
    xor    %ebx,%ebx
    mov    %al,%bl
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    mov    data_f3e46(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    je     jump_368fb
    mov    $0x2,%ecx
    mov    $0xffff,%edx
    mov    data_c3508,%eax
    call   func_33c90
    mov    -0x8(%ebp),%eax
    movb   $0xff,0xab(%eax)
    jmp    jump_368fb
  jump_36875:
    cmp    $0xff,%al
    je     jump_368fb
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    mov    0xab(%eax),%dl
    mov    data_c3508,%eax
    call   func_3375c
    cmp    $0xffffffff,%eax
    jne    jump_368d7
    mov    -0x8(%ebp),%eax
    cmpb   $0x17,0xab(%eax)
    jne    jump_368b4
    mov    -0x8(%ebp),%edx
    mov    0xae(%eax),%ax
    mov    %ax,0xb0(%edx)
  jump_368b4:
    mov    -0x8(%ebp),%eax
    mov    $0x2,%ecx
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0xab(%eax),%bl
    mov    0xae(%eax),%dx
    mov    data_c3508,%eax
    call   func_33c90
  jump_368d7:
    mov    -0x8(%ebp),%eax
    movb   $0xff,0xab(%eax)
    movw   $0xffff,0xac(%eax)
    mov    -0x8(%ebp),%edx
    mov    0xac(%eax),%ax
    mov    %ax,0xae(%edx)
  jump_368fb:
    push   $0x0
    mov    -0x18(%ebp),%edx
    mov    $0x2,%ebx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_520f4
    mov    -0x8(%ebp),%edx
    xor    %eax,%eax
    mov    0xb0(%edx),%ax
    cmp    $0xffff,%eax
    jge    jump_36946
    mov    %eax,%ebx
    mov    0xa7(%edx),%esi
    xor    %ecx,%ecx
    mov    $0x34,%edx
    mov    -0x8(%ebp),%eax
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36946:
    mov    0xa7(%edx),%ebx
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3695e:
    mov    0xb2(%ebx),%bl
    and    $0xff,%ebx
    cmp    $0xff,%ebx
    je     jump_36983
    mov    $0x5,%ecx
    mov    $data_fa35c,%eax
    mov    %ecx,%edx
    call   func_51f24
  jump_36983:
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36990:
    mov    -0x8(%ebp),%eax
    movw   $0xffff,0xac(%eax)
    mov    -0x14(%ebp),%eax
    cmp    $0xa,%eax
    jne    jump_369e1
    push   $0x0
    mov    $0x2,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%edi),%edx
    xor    %ecx,%ecx
    call   func_520f4
    mov    -0x8(%ebp),%eax
    mov    $0x8,%edx
    mov    0xa7(%eax),%esi
    mov    data_c84f0,%ecx
    mov    data_c84ec,%ebx
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_369e1:
    cmp    $0xb,%eax
    jne    jump_36a1b
    push   $0x0
    mov    $0x2,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%edi),%edx
    xor    %ecx,%ecx
    call   func_520f4
    mov    -0x8(%ebp),%eax
    mov    $0x33,%edx
    mov    0xa7(%eax),%esi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36a1b:
    cmp    $0xc,%eax
    jne    jump_36a64
    push   $0x0
    mov    $0x2,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%edi),%edx
    xor    %ecx,%ecx
    call   func_520f4
    mov    -0x8(%ebp),%eax
    mov    $0x8,%edx
    mov    data_c84f0,%ecx
    mov    0xa7(%eax),%esi
    mov    data_c84ec,%ebx
    movb   $0x5,0xab(%eax)
    call   *0x8(%esi)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36a64:
    cmp    $0x4,%eax
    je     jump_36adf
    mov    data_c3508,%eax
    mov    data_f458e,%cl
    cmp    0x57(%eax),%cl
    je     jump_36adf
    mov    -0x8(%ebp),%edx
    xor    %eax,%eax
    mov    0xae(%edx),%ax
    cmp    $0xffff,%eax
    jge    jump_35ff8
    xor    %eax,%eax
    mov    0xae(%edx),%ax
    lea    0x0(,%eax,4),%edx
    mov    data_c3508,%eax
    mov    0x10(%eax),%eax
    cmpb   $0x17,0x1(%edx,%eax,1)
    jne    jump_35ff8
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    mov    0xae(%eax),%dx
    mov    data_c3508,%eax
    call   func_34b1c
    xor    %edx,%edx
    mov    0x54(%eax),%eax
    mov    data_f458e,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    jne    jump_35ff8
  jump_36adf:
    mov    -0x8(%ebp),%edx
    xor    %eax,%eax
    mov    -0x14(%ebp),%ecx
    mov    0xae(%edx),%ax
    mov    $0x32,%ebx
    push   %eax
    mov    0x41(%edi),%edx
    mov    $data_fa35c,%eax
    call   func_520f4
    mov    $0x6,%edx
    mov    -0x8(%ebp),%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_2c938
    push   $0x0
    mov    $0x1,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%edi),%edx
    xor    %ecx,%ecx
    call   func_520f4
    mov    -0x8(%ebp),%ebx
    mov    0xa7(%ebx),%ebx
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36b43:
    mov    data_c3508,%eax
    mov    data_f458e,%bh
    cmp    0x57(%eax),%bh
    jne    jump_36c42
    cmpl   $0x1,-0x14(%ebp)
    jne    jump_36b69
    mov    -0x8(%ebp),%eax
    movw   $0xffff,0xae(%eax)
  jump_36b69:
    mov    -0x18(%ebp),%eax
    mov    $func_35d4c,%edx
    mov    -0x8(%ebp),%esi
    movl   $0x0,0xab(%eax)
    mov    -0x8(%ebp),%edi
    movw   $0x4b,0x8c9(%eax)
    xor    %ecx,%ecx
    movb   $0xf2,0xc6(%eax)
    call   func_2e8a8
    mov    %ecx,-0x10(%ebp)
    mov    %ecx,-0xc(%ebp)
    mov    -0x18(%ebp),%eax
    add    $0xb2,%esi
    call   func_2e42c
    jmp    jump_36bba
  jump_36bae:
    mov    -0xc(%ebp),%ecx
    inc    %ecx
    mov    %ecx,-0xc(%ebp)
    cmp    $0x27,%ecx
    jge    jump_36c12
  jump_36bba:
    cmpb   $0x5,-0xc(%ebp)
    je     jump_36bae
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    -0xc(%ebp),%dl
    mov    0xae(%eax),%bx
    mov    data_c3508,%eax
    call   func_3375c
    test   %eax,%eax
    je     jump_36bae
    mov    -0xc(%ebp),%al
    mov    $0xffffffff,%ebx
    mov    %esi,%edx
    xor    %ecx,%ecx
    mov    %al,0xb2(%edi)
    mov    -0x18(%ebp),%eax
    movl   $0x0,0xb3(%edi)
    call   func_2e16c
    mov    -0x10(%ebp),%ebx
    add    $0x5,%edi
    inc    %ebx
    add    $0x5,%esi
    mov    %ebx,-0x10(%ebp)
    jmp    jump_36bae
  jump_36c12:
    cmpl   $0x0,-0x10(%ebp)
    je     jump_36c42
    mov    $0x6,%edx
    mov    -0x8(%ebp),%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_2c938
    push   $0x0
    mov    -0x18(%ebp),%edx
    mov    $0x1,%ebx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_520f4
  jump_36c42:
    mov    -0x8(%ebp),%ebx
    mov    0xa7(%ebx),%ebx
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36c5d:
    mov    -0x1c(%ebp),%edx
    mov    $0xffffffff,%esi
    test   %edx,%edx
    jne    jump_36cb7
    mov    data_c3508,%edx
    xor    %ebx,%ebx
    mov    0x57(%edx),%bl
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    add    %eax,%eax
    add    $data_92e16,%eax
    call   func_3c230
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_36ca1
    mov    $0x2ad,%ebx
    mov    $data_81ee9,%edx
    call   func_25878
  jump_36ca1:
    mov    data_c3508,%eax
    xor    %edx,%edx
    mov    %ecx,%ebx
    mov    -0x14(%ebp),%dx
    xor    %esi,%esi
    call   func_34bb0
    jmp    jump_36cc8
  jump_36cb7:
    mov    -0x8(%ebp),%edx
    mov    0xab(%eax),%ax
    mov    %ax,0xb0(%edx)
  jump_36cc8:
    mov    $data_81ef8,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    xor    %ecx,%ecx
    xor    %edx,%edx
    mov    %eax,%edi
    mov    -0x14(%ebp),%dx
    mov    data_c3508,%eax
    mov    %esi,%ebx
    call   func_34b1c
    mov    %eax,%edx
    mov    %edi,%eax
    call   func_48e6c
    mov    $0x1,%ecx
    mov    $0x8,%ebx
    mov    $data_fa35c,%eax
    mov    %ecx,%edx
    call   func_51f24
    xor    %edx,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36d18:
    cmp    $0x34,%dx
    je     jump_36c5d
    jmp    jump_35ef1
  jump_36d27:
    cmp    $0x8,%dx
    jbe    jump_36052
    cmp    $0x32,%dx
    je     jump_36990
    jmp    jump_35ef1
  jump_36d40:
    cmp    $0x4,%dx
    jb     jump_36d9d
    jbe    jump_3635c
    cmp    $0x5,%dx
    jbe    jump_35f0f
    mov    -0x8(%ebp),%edx
    mov    $data_fa35c,%eax
    mov    $0x8,%ebx
    mov    0x41(%edx),%edx
    call   func_51b80
    mov    -0x8(%ebp),%eax
    mov    -0x8(%ebp),%edx
    mov    0x39(%eax),%eax
    mov    0x35(%edx),%esi
    mov    0x3d(%edx),%edi
    and    %esi,%eax
    and    %edi,%eax
    cmp    $0xffffffff,%eax
    jne    jump_36d90
    mov    0xa7(%edx),%ebx
    mov    %edx,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_36d90:
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_36d9d:
    cmp    $0x1,%dx
    jb     jump_35ef1
    jbe    jump_35f3a
    cmp    $0x3,%dx
    je     jump_362f0
    jmp    jump_35ef1


/*----------------------------------------------------------------*/
func_36dbc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x380,%esp
    mov    %eax,%ebp
    mov    data_c3508,%eax
    xor    %edx,%edx
    mov    0x14(%eax),%dx
    mov    %edx,0x340(%esp)
    mov    data_efd9c,%dx
    mov    0x16(%eax),%ax
    mov    %edx,0x370(%esp)
    and    $0xffff,%eax
    mov    0x175(%ebp,%eax,2),%ax
    mov    %eax,0x368(%esp)
    mov    0x1c(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_36eae
    push   $0x73
    push   $0x7
    xor    %edx,%edx
    push   $0x4
    mov    $data_11f10c,%eax
    mov    0x37c(%esp),%dx
    call   func_1b084
    push   %eax
    lea    0x4(%ebp),%esi
    push   %esi
    call   func_57efc
    mov    0x18b(%ebp),%al
    add    $0x14,%esp
    and    $0x4,%al
    and    $0xff,%eax
    je     jump_36e76
    push   $0x128
    push   $0x198
    mov    0x348(%esp),%edx
    push   %edx
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    0x374(%esp),%dx
    call   func_1b084
    push   %eax
    push   %esi
    call   func_57efc
    add    $0x14,%esp
  jump_36e76:
    push   $0x0
    mov    0x1c(%ebp),%eax
    push   $0x0
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x37c(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    lea    0x4(%ebp),%esi
    push   %esi
    call   func_57efc
    add    $0x14,%esp
    mov    $data_fa35c,%eax
    mov    %esi,%edx
    call   func_50690
  jump_36eae:
    lea    0x2fc(%esp),%edi
    lea    0x4(%ebp),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0xffff,%edx
    mov    0xab(%ebp),%ah
    mov    %edx,0x36c(%esp)
    cmp    $0xff,%ah
    je     jump_36f1e
    movl   $0xfffe,0x36c(%esp)
    xor    %ebx,%ebx
    mov    0xac(%ebp),%bx
    cmp    $0xffff,%ebx
    jge    jump_36f1e
    mov    data_c3508,%eax
    mov    0x10(%eax),%ecx
    cmpb   $0xff,0x1(%ecx,%ebx,4)
    jne    jump_36f1e
    xor    %edx,%edx
    mov    0xab(%ebp),%dl
    call   func_3375c
    test   %eax,%eax
    je     jump_36f1e
    mov    0xac(%ebp),%ax
    mov    %eax,0x36c(%esp)
  jump_36f1e:
    mov    data_c3508,%eax
    mov    $0xffff,%ecx
    mov    0x10(%eax),%edx
    mov    %ecx,0x378(%esp)
    mov    %edx,0x34c(%esp)
    mov    0x57(%eax),%dl
    xor    %ebx,%ebx
    mov    data_f458e,%dh
    mov    %ebx,0x330(%esp)
    cmp    %dh,%dl
    je     jump_36f69
    mov    $0xb,%edx
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3778a
  jump_36f69:
    mov    0x340(%esp),%edx
    mov    $0x6e,%ecx
    mov    %edx,%eax
    mov    $0x19a,%esi
    shl    $0x4,%eax
    mov    %ecx,0x354(%esp)
    sub    %edx,%eax
    mov    %esi,0x320(%esp)
    mov    %eax,0x358(%esp)
    jmp    jump_36fd5
  jump_36f98:
    mov    0x354(%esp),%edi
    mov    0x320(%esp),%eax
    mov    0x358(%esp),%edx
    add    $0x11,%edi
    sub    $0x22,%eax
    inc    %edx
    mov    %edi,0x354(%esp)
    mov    %eax,0x320(%esp)
    mov    %edx,0x358(%esp)
    cmp    $0x16d,%edi
    je     jump_3778a
  jump_36fd5:
    mov    0x358(%esp),%edx
    xor    %eax,%eax
    mov    data_f445c(%edx),%al
    mov    %eax,0x318(%esp)
    mov    0x320(%esp),%eax
    mov    %eax,0x33c(%esp)
    mov    0x354(%esp),%eax
    mov    %edx,0x328(%esp)
    mov    %eax,0x350(%esp)
    jmp    jump_37632
  jump_37013:
    mov    0x18b(%ebp),%al
    and    $0x1,%al
    and    $0xff,%eax
    je     jump_372a3
    mov    $0xd,%esi
    xor    %eax,%eax
    mov    $0xc,%edi
    mov    0x374(%esp),%ax
    mov    %esi,0x364(%esp)
    test   %eax,%eax
    jne    jump_37052
    movl   $0x7,0x364(%esp)
    xor    %edi,%edi
  jump_37052:
    xor    %eax,%eax
    mov    0x374(%esp),%ax
    cmp    $0x2,%eax
    jne    jump_37074
    mov    $0x8,%ecx
    mov    $0x75,%edi
    mov    %ecx,0x364(%esp)
    jmp    jump_370a2
  jump_37074:
    cmp    $0x3,%eax
    jne    jump_3708c
    mov    $0x9,%ebx
    mov    $0x92,%edi
    mov    %ebx,0x364(%esp)
    jmp    jump_370a2
  jump_3708c:
    cmp    $0x4,%eax
    jne    jump_370a2
    mov    $0xa,%eax
    mov    $0xff,%edi
    mov    %eax,0x364(%esp)
  jump_370a2:
    cmp    $0xffffffff,%edx
    jne    jump_3719d
    mov    0x260(%esp),%eax
    mov    %eax,0x200(%esp)
    mov    0x264(%esp),%eax
    inc    %eax
    mov    %eax,0x204(%esp)
    mov    0x278(%esp),%eax
    sub    $0x2,%eax
    mov    %eax,0x218(%esp)
    mov    0x27c(%esp),%eax
    mov    %eax,0x21c(%esp)
    mov    0x290(%esp),%eax
    mov    %eax,0x230(%esp)
    mov    0x294(%esp),%eax
    dec    %eax
    mov    %eax,0x234(%esp)
    mov    0x2a8(%esp),%eax
    add    $0x2,%eax
    mov    %eax,0x248(%esp)
    mov    0x2ac(%esp),%eax
    xor    %esi,%esi
    mov    %eax,0x24c(%esp)
  jump_37125:
    xor    %eax,%eax
    mov    %di,%ax
    push   %eax
    mov    0x315(%esp,%esi,1),%eax
    sar    $0x18,%eax
    imul   $0x18,%eax,%eax
    mov    0x208(%esp,%eax,1),%ebx
    mov    0x204(%esp,%eax,1),%ecx
    mov    0x311(%esp,%esi,1),%eax
    sar    $0x18,%eax
    imul   $0x18,%eax,%eax
    push   $0x0
    push   %ebx
    push   %ecx
    mov    0x214(%esp,%eax,1),%edx
    push   %edx
    mov    0x214(%esp,%eax,1),%ebx
    push   %ebx
    push   $data_c850c
    inc    %esi
    call   func_573c1
    add    $0x1c,%esp
    cmp    $0x4,%esi
    jl     jump_37125
    mov    0x364(%esp),%edi
    test   %di,%di
    je     jump_372a3
    xor    %eax,%eax
    mov    %di,%ax
    mov    data_c8c33,%edx
    shl    $0x8,%eax
    jmp    jump_37289
  jump_3719d:
    mov    0x260(%esp),%eax
    mov    %eax,0x200(%esp)
    mov    0x264(%esp),%eax
    add    $0xe,%eax
    mov    %eax,0x204(%esp)
    mov    0x278(%esp),%eax
    sub    $0x1c,%eax
    mov    %eax,0x218(%esp)
    mov    0x27c(%esp),%eax
    mov    %eax,0x21c(%esp)
    mov    0x290(%esp),%eax
    mov    %eax,0x230(%esp)
    mov    0x294(%esp),%eax
    sub    $0xe,%eax
    mov    %eax,0x234(%esp)
    mov    0x2a8(%esp),%eax
    add    $0x1c,%eax
    mov    %eax,0x248(%esp)
    mov    0x2ac(%esp),%eax
    xor    %esi,%esi
    mov    %eax,0x24c(%esp)
  jump_3721b:
    xor    %eax,%eax
    mov    %di,%ax
    push   %eax
    mov    0x315(%esp,%esi,1),%eax
    sar    $0x18,%eax
    imul   $0x18,%eax,%eax
    mov    0x208(%esp,%eax,1),%edx
    mov    0x204(%esp,%eax,1),%ebx
    mov    0x311(%esp,%esi,1),%eax
    sar    $0x18,%eax
    imul   $0x18,%eax,%eax
    push   $0x0
    push   %edx
    push   %ebx
    mov    0x214(%esp,%eax,1),%ecx
    push   %ecx
    mov    0x214(%esp,%eax,1),%edx
    push   %edx
    push   $data_c850c
    inc    %esi
    call   func_573c1
    add    $0x1c,%esp
    cmp    $0x4,%esi
    jl     jump_3721b
    mov    0x364(%esp),%esi
    test   %si,%si
    je     jump_372a3
    xor    %edx,%edx
    mov    %si,%dx
    mov    data_c8c33,%eax
    shl    $0x8,%edx
  jump_37289:
    add    %edx,%eax
    push   %eax
    lea    0x204(%esp),%eax
    push   %eax
    push   $0x4
    push   $data_c850c
    call   func_5e165
    add    $0x10,%esp
  jump_372a3:
    xor    %eax,%eax
    mov    0x330(%esp),%ecx
    mov    0xac(%ebp),%ax
    cmp    %ecx,%eax
    jne    jump_37321
    mov    0xab(%ebp),%cl
    cmp    $0xff,%cl
    jne    jump_37321
    cmp    0x37c(%esp),%cl
    jne    jump_37321
    xor    %esi,%esi
  jump_372cd:
    mov    0x311(%esp,%esi,1),%eax
    sar    $0x18,%eax
    imul   $0x18,%eax,%eax
    mov    0x264(%esp,%eax,1),%edi
    mov    0x260(%esp,%eax,1),%edx
    mov    0x30d(%esp,%esi,1),%eax
    sar    $0x18,%eax
    imul   $0x18,%eax,%eax
    push   $0x96
    push   $0x0
    push   %edi
    push   %edx
    mov    0x274(%esp,%eax,1),%ebx
    push   %ebx
    mov    0x274(%esp,%eax,1),%ecx
    push   %ecx
    push   $data_c850c
    inc    %esi
    call   func_573c1
    add    $0x1c,%esp
    cmp    $0x4,%esi
    jl     jump_372cd
  jump_37321:
    cmpb   $0xff,0x37c(%esp)
    jne    jump_37341
    mov    0x374(%esp),%eax
    xor    %ah,%ah
    and    $0x8,%al
    and    $0xffff,%eax
    je     jump_37598
  jump_37341:
    lea    0x378(%esp),%ecx
    xor    %edi,%edi
    lea    0x368(%esp),%ebx
    mov    0x330(%esp),%di
    mov    %ebp,%eax
    mov    %edi,%edx
    call   func_37d00
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    0x368(%esp),%dx
    call   func_1b084
    mov    %eax,%esi
    mov    %eax,0x32c(%esp)
    mov    data_c3508,%eax
    mov    0x52(%eax),%ax
    mov    0x330(%esp),%edx
    and    $0xffff,%eax
    cmp    %edx,%eax
    jne    jump_3751f
    lea    0x260(%esp),%eax
    push   %eax
    push   $0x4
    push   $data_c850c
    call   func_5cbc0
    mov    data_c3508,%eax
    xor    %esi,%esi
    mov    0x50(%eax),%si
    imul   $0x22,%esi,%esi
    add    $0xc,%esp
    mov    $0xff,%ebx
    mov    %edi,%edx
    call   func_34928
    xor    %ebx,%ebx
    mov    %ax,%bx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x330(%esp),%ebx
    xor    %edx,%edx
    mov    %eax,0x360(%esp)
    mov    0xac(%ebp),%dx
    mov    $0xf2,%al
    cmp    %ebx,%edx
    jne    jump_373fa
    mov    $0x96,%al
  jump_373fa:
    xor    %edx,%edx
    mov    $0x100,%ebx
    mov    %al,%dl
    lea    0x100(%esp),%eax
    call   func_72280
    lea    0x100(%esp),%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    mov    0x264(%esp),%ecx
    push   %ecx
    mov    0x264(%esp),%esi
    xor    %eax,%eax
    push   %esi
    mov    0x380(%esp),%ax
    push   %eax
    mov    0x338(%esp),%edi
    push   %edi
    push   $data_c850c
    mov    $data_c850c,%esi
    call   func_583e6
    add    $0x14,%esp
    lea    0x2d4(%esp),%edi
    mov    0x264(%esp),%eax
    mov    0x360(%esp),%edx
    add    $0x22,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    sub    %edx,%eax
    mov    %eax,0x2dc(%esp)
    xor    %eax,%eax
    mov    0x330(%esp),%ebx
    mov    0xac(%ebp),%ax
    cmp    %ebx,%eax
    jne    jump_374e0
    mov    data_c8c33,%eax
    add    $0x1500,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    mov    0x264(%esp),%eax
    sub    0x2dc(%esp),%eax
    push   %eax
    mov    0x264(%esp),%ebx
    xor    %eax,%eax
    push   %ebx
    mov    0x380(%esp),%ax
    push   %eax
    mov    0x338(%esp),%ecx
    push   %ecx
    lea    0x2e4(%esp),%eax
    push   %eax
    call   func_583e6
    add    $0x14,%esp
    jmp    jump_37603
  jump_374e0:
    mov    0x264(%esp),%eax
    sub    0x2dc(%esp),%eax
    push   %eax
    mov    0x264(%esp),%esi
    xor    %eax,%eax
    push   %esi
    mov    0x380(%esp),%ax
    push   %eax
    mov    0x338(%esp),%edi
    push   %edi
    lea    0x2e4(%esp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_37603
  jump_3751f:
    xor    %eax,%eax
    mov    0xac(%ebp),%ax
    cmp    %edx,%eax
    jne    jump_3756d
    mov    data_c8c33,%eax
    add    $0x1500,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    mov    0x264(%esp),%eax
    push   %eax
    mov    0x264(%esp),%edx
    xor    %eax,%eax
    push   %edx
    mov    0x380(%esp),%ax
    push   %eax
    push   %esi
    push   $data_c850c
    call   func_583e6
    add    $0x14,%esp
    jmp    jump_37603
  jump_3756d:
    mov    0x264(%esp),%ecx
    push   %ecx
    mov    0x264(%esp),%edi
    xor    %eax,%eax
    push   %edi
    mov    0x380(%esp),%ax
    push   %eax
    push   %esi
    push   $data_c850c
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_37603
  jump_37598:
    mov    0x36c(%esp),%ax
    cmp    0x330(%esp),%eax
    jne    jump_37603
    lea    0x378(%esp),%ecx
    lea    0x368(%esp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    0xab(%ebp),%dl
    call   func_37c9c
    mov    0x264(%esp),%edi
    push   %edi
    mov    0x264(%esp),%eax
    push   %eax
    xor    %eax,%eax
    mov    0x380(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x374(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   $data_c850c
    call   func_57efc
    add    $0x14,%esp
  jump_37603:
    mov    0x318(%esp),%esi
    mov    0x330(%esp),%edi
    mov    0x34c(%esp),%eax
    inc    %esi
    inc    %edi
    add    $0x4,%eax
    mov    %esi,0x318(%esp)
    mov    %edi,0x330(%esp)
    mov    %eax,0x34c(%esp)
  jump_37632:
    mov    0x328(%esp),%eax
    xor    %edx,%edx
    mov    0x328(%esp),%ebx
    mov    data_f445c(%eax),%dl
    xor    %eax,%eax
    mov    data_f44a8(%ebx),%al
    mov    0x318(%esp),%ecx
    add    %edx,%eax
    cmp    %ecx,%eax
    jle    jump_36f98
    imul   $0x22,%ecx,%eax
    mov    0x33c(%esp),%edx
    add    %eax,%edx
    mov    %edx,0x260(%esp)
    lea    0x22(%edx),%eax
    mov    %eax,0x278(%esp)
    mov    %edx,0x290(%esp)
    lea    -0x22(%edx),%eax
    mov    %eax,0x2a8(%esp)
    imul   $0x11,%ecx,%eax
    mov    0x350(%esp),%edx
    add    %eax,%edx
    mov    %edx,0x264(%esp)
    lea    0x11(%edx),%eax
    mov    %eax,0x27c(%esp)
    lea    0x22(%edx),%eax
    mov    %eax,0x294(%esp)
    mov    0x27c(%esp),%eax
    mov    %eax,0x2ac(%esp)
    mov    $0x960000,%eax
    lea    0x310(%esp),%edi
    mov    %eax,0x2b0(%esp)
    mov    %eax,0x298(%esp)
    mov    %eax,0x280(%esp)
    mov    %eax,0x268(%esp)
    mov    0x34c(%esp),%eax
    mov    $data_866fc,%esi
    xor    %ebx,%ebx
    mov    0x1(%eax),%al
    mov    0x34c(%esp),%edx
    mov    %al,0x37c(%esp)
    xor    %ah,%ah
    mov    0x330(%esp),%bx
    mov    (%edx),%al
    mov    $0xff,%edx
    mov    %eax,0x374(%esp)
    mov    data_c3508,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_3375c
    xor    %ebx,%ebx
    mov    0x330(%esp),%esi
    mov    0xac(%ebp),%bx
    mov    %eax,%edx
    cmp    %esi,%ebx
    jne    jump_37013
    mov    0xab(%ebp),%bl
    cmp    $0xff,%bl
    jne    jump_37013
    cmp    0x37c(%esp),%bl
    jne    jump_37013
    cmp    $0xffffffff,%eax
    jne    jump_37013
    lea    0x260(%esp),%eax
    push   %eax
    push   $0x4
    push   $data_c850c
    call   func_5cbc0
    add    $0xc,%esp
    jmp    jump_372a3
  jump_3778a:
    mov    $0xd,%edx
    mov    $0x77,%ebx
    mov    data_c3508,%eax
    xor    %ecx,%ecx
    mov    %edx,0x324(%esp)
    mov    0x57(%eax),%dl
    mov    %ebx,0x348(%esp)
    mov    data_f458e,%dh
    mov    %ecx,0x334(%esp)
    cmp    %dh,%dl
    je     jump_377de
    mov    $0x19,%edx
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_377de
    movl   $0xffffffff,0x334(%esp)
  jump_377de:
    mov    data_c3508,%eax
    mov    0x18(%eax),%ax
    and    $0xffff,%eax
    mov    %eax,0x330(%esp)
    shl    $0x2,%eax
    mov    %eax,0x31c(%esp)
    mov    0x324(%esp),%eax
    add    $0x23,%eax
    mov    %eax,0x35c(%esp)
    jmp    jump_37929
  jump_37813:
    xor    %eax,%eax
    mov    0x330(%esp),%esi
    mov    0x36c(%esp),%ax
    cmp    %esi,%eax
    jne    jump_378a9
    mov    0xab(%ebp),%bh
    mov    $0x10000,%esi
    cmp    $0x17,%bh
    jne    jump_37841
    mov    $0x8000,%esi
  jump_37841:
    lea    0x378(%esp),%ecx
    lea    0x368(%esp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    0xab(%ebp),%dl
    call   func_37c9c
    push   $0x0
    push   %esi
    push   %esi
    push   $0x0
    mov    0x358(%esp),%eax
    push   $data_c8c44
    add    $0x23,%eax
    push   %eax
    mov    0x374(%esp),%edi
    xor    %eax,%eax
    push   %edi
    mov    0x394(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x388(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   $data_c850c
  jump_378a1:
    call   func_589f1
    add    $0x28,%esp
  jump_378a9:
    mov    data_c3508,%edx
    mov    0x18(%edx),%dx
    mov    0x330(%esp),%eax
    and    $0xffff,%edx
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x5,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    addl   $0x46,0x348(%esp)
    cmp    $0x4,%edx
    jne    jump_37909
    mov    $0x77,%edi
    mov    0x35c(%esp),%eax
    mov    0x324(%esp),%edx
    mov    %edi,0x348(%esp)
    add    $0x46,%eax
    add    $0x46,%edx
    mov    %eax,0x35c(%esp)
    mov    %edx,0x324(%esp)
  jump_37909:
    mov    0x31c(%esp),%ebx
    mov    0x330(%esp),%ecx
    add    $0x4,%ebx
    inc    %ecx
    mov    %ebx,0x31c(%esp)
    mov    %ecx,0x330(%esp)
  jump_37929:
    mov    data_c3508,%eax
    xor    %edx,%edx
    mov    0x330(%esp),%edi
    mov    0x1a(%eax),%dx
    cmp    %edi,%edx
    jle    jump_37c0c
    mov    0x31c(%esp),%ebx
    mov    0x10(%eax),%edx
    xor    %ecx,%ecx
    add    %ebx,%edx
    mov    %ecx,0x338(%esp)
    movzbw 0x1(%edx),%si
    mov    0x1(%edx),%dl
    and    $0xff,%edx
    cmp    $0x17,%edx
    jne    jump_37996
    xor    %edx,%edx
    mov    0x330(%esp),%dx
    call   func_34b1c
    mov    0x54(%eax),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    data_f458e,%al
    cmp    %eax,%edx
    jne    jump_37996
    movl   $0xffffffff,0x338(%esp)
  jump_37996:
    xor    %eax,%eax
    mov    0x330(%esp),%edx
    mov    0xac(%ebp),%ax
    cmp    %edx,%eax
    jne    jump_37a2c
    xor    %edx,%eax
    mov    %si,%ax
    cmp    $0xff,%eax
    jne    jump_37a2c
    cmpl   $0x0,0x334(%esp)
    jne    jump_37a2c
    cmpb   $0xff,0xab(%ebp)
    jne    jump_37a2c
    mov    0x324(%esp),%eax
    push   $0x0
    mov    %eax,0x304(%esp)
    mov    0x34c(%esp),%eax
    mov    $0x45,%ecx
    mov    %eax,0x308(%esp)
    mov    0x328(%esp),%eax
    mov    $0x1,%ebx
    add    $0x46,%eax
    push   $0x96
    mov    %eax,0x310(%esp)
    mov    0x350(%esp),%eax
    mov    %ebx,%edx
    add    $0x46,%eax
    push   $0x45
    mov    %eax,0x318(%esp)
    lea    0x308(%esp),%eax
    call   func_2b254
  jump_37a2c:
    xor    %eax,%eax
    mov    %si,%ax
    mov    %eax,0x344(%esp)
    cmp    $0xff,%eax
    je     jump_37813
    lea    0x378(%esp),%ecx
    lea    0x368(%esp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    0x330(%esp),%dx
    lea    0x2c0(%esp),%edi
    call   func_37d00
    lea    0x4(%ebp),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x344(%esp),%eax
    mov    $0x10000,%esi
    cmp    $0x17,%eax
    jne    jump_37a87
    mov    $0x8000,%esi
  jump_37a87:
    mov    data_c3508,%eax
    xor    %edx,%edx
    mov    0x330(%esp),%ebx
    mov    0x52(%eax),%dx
    cmp    %ebx,%edx
    jne    jump_37b73
    xor    %ecx,%ecx
    mov    0x50(%eax),%cx
    imul   $0x46,%ecx,%ecx
    xor    %ebx,%edx
    mov    0x330(%esp),%dx
    mov    $0xff,%ebx
    call   func_34928
    xor    %ebx,%ebx
    mov    %ax,%bx
    mov    %ecx,%edx
    mov    %ecx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x330(%esp),%ecx
    xor    %edx,%edx
    mov    %eax,%edi
    mov    0xac(%ebp),%dx
    mov    $0xf2,%al
    cmp    %ecx,%edx
    jne    jump_37ae6
    mov    $0x96,%al
  jump_37ae6:
    xor    %edx,%edx
    mov    $0x100,%ebx
    mov    %al,%dl
    mov    %esp,%eax
    call   func_72280
    cmpl   $0x0,0x334(%esp)
    je     jump_37b0a
    cmpl   $0xffffffff,0x338(%esp)
    jne    jump_37b60
  jump_37b0a:
    mov    %esp,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    push   $0x1
    push   %esi
    push   %esi
    push   $0x0
    mov    0x358(%esp),%eax
    push   $data_c8c44
    add    $0x23,%eax
    push   %eax
    mov    0x374(%esp),%ebx
    xor    %eax,%eax
    push   %ebx
    mov    0x394(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x388(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   $data_c850c
    call   func_589f1
    add    $0x28,%esp
  jump_37b60:
    mov    0x348(%esp),%eax
    add    $0x46,%eax
    sub    %edi,%eax
    mov    %eax,0x2c8(%esp)
  jump_37b73:
    cmpl   $0x0,0x334(%esp)
    je     jump_37b8b
    cmpl   $0xffffffff,0x338(%esp)
    jne    jump_378a9
  jump_37b8b:
    xor    %eax,%eax
    mov    0x330(%esp),%edx
    mov    0xac(%ebp),%ax
    xor    %edi,%edi
    cmp    %edx,%eax
    jne    jump_37ba6
    mov    $0x1,%edi
  jump_37ba6:
    mov    data_c8c33,%eax
    add    $0x1500,%eax
    push   %eax
    call   func_583c7
    add    $0x4,%esp
    push   %edi
    push   %esi
    push   %esi
    mov    0x354(%esp),%eax
    push   $0x0
    mov    0x2d8(%esp),%ebx
    add    $0x23,%eax
    push   $data_c8c44
    sub    %ebx,%eax
    push   %eax
    mov    0x374(%esp),%ecx
    xor    %eax,%eax
    push   %ecx
    mov    0x394(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x388(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    lea    0x2e4(%esp),%eax
    push   %eax
    jmp    jump_378a1
  jump_37c0c:
    mov    $data_81f06,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    cmpl   $0xffffffff,0x35(%eax)
    jne    jump_37c85
    mov    $data_c84f8,%ebx
    mov    $0x70,%ecx
    mov    $0x210,%edi
    push   $0x0
    mov    $0x1ac,%eax
    xor    %edx,%edx
    push   $0x0
    mov    0x378(%esp),%dx
    mov    %ebx,0x2f0(%esp)
    mov    %ecx,0x2f4(%esp)
    mov    %ecx,0x2f8(%esp)
    mov    %eax,0x300(%esp)
    push   $0x5
    mov    $data_11f10c,%eax
    mov    %edi,0x300(%esp)
    call   func_1b084
    push   %eax
    lea    0x2f8(%esp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
  jump_37c85:
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_2c8f8
    add    $0x380,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_37c9c:
/*----------------------------------------------------------------*/
    push   %esi
    sub    $0x4,%esp
    mov    %dl,(%esp)
    mov    %ebx,%esi
    cmp    $0x27,%dl
    jb     jump_37cbb
    mov    $0x461,%ebx
    mov    $data_81f0f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_37cbb:
    mov    data_efd80,%ax
    mov    %ax,(%esi)
    mov    (%esp),%dl
    movw   $0x0,(%ecx)
    cmp    $0xff,%dl
    je     jump_37cd8
    xor    %ah,%ah
    mov    %dl,%al
    mov    %ax,(%ecx)
  jump_37cd8:
    cmpb   $0x17,(%esp)
    jne    jump_37cfb
    mov    data_c3508,%eax
    mov    0x57(%eax),%al
    and    $0xff,%eax
    mov    data_efd60(,%eax,2),%ax
    mov    %ax,(%esi)
    movw   $0x0,(%ecx)
  jump_37cfb:
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_37d00:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    data_c3508,%eax
    cmp    0x1a(%eax),%si
    jb     jump_37d22
    mov    $0x476,%ebx
    mov    $data_81f1e,%edx
    xor    %eax,%eax
    call   func_25878
  jump_37d22:
    xor    %edx,%edx
    mov    data_efd80,%ax
    mov    %si,%dx
    mov    %ax,(%edi)
    mov    data_c3508,%eax
    movw   $0x0,(%ecx)
    shl    $0x2,%edx
    mov    0x10(%eax),%eax
    add    %edx,%eax
    xor    %dh,%dh
    xor    %ebx,%ebx
    mov    0x1(%eax),%dl
    mov    %dl,%bl
    cmp    $0xff,%ebx
    je     jump_37d58
    mov    %dx,(%ecx)
    jmp    jump_37d65
  jump_37d58:
    mov    (%eax),%al
    and    $0x8,%al
    and    %ebx,%eax
    je     jump_37d65
    movw   $0x27,(%ecx)
  jump_37d65:
    xor    %eax,%eax
    mov    %dx,%ax
    cmp    $0x17,%eax
    jne    jump_37dc3
    xor    %edx,%edx
    mov    data_c3508,%eax
    mov    %si,%dx
    call   func_34b1c
    mov    %eax,%esi
    mov    0x54(%eax),%eax
    sar    $0x10,%eax
    mov    data_efd60(,%eax,2),%ax
    mov    %ax,(%edi)
    mov    0xa7(%esi),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    jl     jump_37da7
    cmpb   $0x4,0xaa(%esi)
    jl     jump_37db8
  jump_37da7:
    mov    $0x48a,%ebx
    mov    $data_81f3c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_37db8:
    movsbw 0xaa(%esi),%ax
    mov    %ax,(%ecx)
  jump_37dc3:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_37dc8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    $data_81f4b,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,%esi
    mov    0xab(%eax),%eax
    add    $0x34,%eax
    mov    %eax,data_f4520
    mov    $0x22,%eax
    call   func_1ce70
    mov    0xab(%esi),%edx
    mov    %eax,data_f4524
    test   %edx,%edx
    jne    jump_37e53
    mov    0xc9(%esi),%ebp
    mov    %edx,data_f4520
    test   %ebp,%ebp
    jne    jump_37ebd
    mov    $0x1,%ecx
    mov    data_c3508,%eax
    mov    0xb0(%edi),%dx
    mov    $0xff,%ebx
    call   func_34b1c
    call   func_4517c
    xor    %edx,%edx
    mov    data_c3508,%eax
    mov    0xb0(%edi),%dx
    call   func_33c90
    jmp    jump_37ebd
  jump_37e53:
    cmpl   $0xffffffff,0xc9(%esi)
    jne    jump_37ebd
    mov    $0x23,%eax
    call   func_1ce70
    xor    %edx,%edx
    mov    %eax,data_f4524
    mov    data_c3508,%eax
    mov    0xb0(%edi),%dx
    mov    0x10(%eax),%ebx
    andb   $0xfe,0x2(%ebx,%edx,4)
    mov    $0x3,%ecx
    xor    %edx,%edx
    mov    $0x17,%ebx
    mov    0xb0(%edi),%dx
    call   func_33c90
    mov    %esi,%eax
    call   func_4a1f0
    mov    %eax,%edx
    mov    data_c3508,%eax
    mov    %edx,0x77(%eax)
    mov    0xab(%esi),%edx
    movb   $0x2,0x58(%edx)
    mov    0xab(%esi),%edx
    mov    %eax,0x59(%edx)
  jump_37ebd:
    movw   $0xffff,0xb0(%edi)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_37ed0:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    mov    %edx,%eax
    lea    0x18b(%ecx),%edx
    cmp    $0xffffffff,%ebx
    jne    jump_37eec
    mov    $0x1,%ebx
    call   func_1bf94
    pop    %ecx
    ret
  jump_37eec:
    mov    $0x1,%ebx
    call   func_1c098
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_37ef8:
/*----------------------------------------------------------------*/
    call   func_2bf10
    movl   $data_85e04,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_37f08:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_37f27
    mov    $data_85ddc,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_37f27:
    mov    $0x1,%edx
    movl   $data_85e04,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_37f47
    call   func_72124
  jump_37f47:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_37f50:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    mov    $data_81f59,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    $data_81f62,%edx
    mov    %eax,(%esp)
    xor    %ebx,%ebx
    mov    $data_fa35c,%eax
    call   func_5216c
    mov    (%esp),%edx
    cmpl   $0x0,0x35(%edx)
    jne    jump_37f90
    cmpl   $0x0,0x35(%eax)
    je     jump_37fc3
  jump_37f90:
    movswl %di,%eax
    cmp    $0xf,%eax
    je     jump_37fc3
    cmp    $0xe,%eax
    je     jump_37fc3
    jmp    jump_37fdf
  jump_37f9f:
    mov    0xa7(%esi),%ecx
    mov    $0x1,%edx
    mov    %esi,%eax
    call   *0xc(%ecx)
    jmp    jump_37fdf
  jump_37fb1:
    mov    0xa7(%esi),%ecx
    mov    $0x2,%edx
    mov    %esi,%eax
    call   *0xc(%ecx)
    jmp    jump_37fdf
  jump_37fc3:
    cmp    $0x6,%di
    jb     jump_37fd1
    jbe    jump_37fb1
    cmp    $0x7,%di
    je     jump_37f9f
  jump_37fd1:
    movswl %di,%edx
    mov    %ebp,%ebx
    mov    %esi,%eax
    call   func_2eb04
    jmp    jump_37fe1
  jump_37fdf:
    xor    %eax,%eax
  jump_37fe1:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret

vtable_37fe8:
    .long   func_380f7
    .long   func_3818b
    .long   func_3821f
    .long   func_38289
    .long   func_3834d


/*----------------------------------------------------------------*/
func_37ffc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x6c,%esp
    mov    %eax,0x50(%esp)
    xor    %ebx,%ebx
    mov    %ebx,0x48(%esp)
    cmp    $0x2,%edx
    je     jump_3802b
    mov    data_fd35e,%ecx
    cmp    0x41(%eax),%ecx
    je     jump_38023
    cmp    $0x1,%edx
    jne    jump_3802b
  jump_38023:
    movl   $0xffffffff,0x48(%esp)
  jump_3802b:
    mov    $data_81f6b,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    $data_81f74,%edx
    mov    %eax,%esi
    xor    %ebx,%ebx
    mov    $data_fa35c,%eax
    call   func_5216c
    cmpl   $0x0,0x35(%esi)
    jne    jump_3805b
    cmpl   $0x0,0x35(%eax)
    je     jump_38061
  jump_3805b:
    xor    %eax,%eax
    mov    %eax,0x48(%esp)
  jump_38061:
    mov    0x50(%esp),%eax
    mov    0x47(%eax),%eax
    mov    %eax,0x4c(%esp)
    cmp    $0x4,%eax
    jne    jump_38079
    movl   $0x3,0x4c(%esp)
  jump_38079:
    mov    0x50(%esp),%eax
    mov    0x43(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x33,%eax
    jne    jump_38090
    movl   $0x4,0x4c(%esp)
  jump_38090:
    mov    $data_81f7d,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,%ebp
    mov    data_c8c33,%eax
    add    $0x1500,%eax
    mov    $0xffff,%edx
    push   %eax
    mov    %edx,0x64(%esp)
    mov    %edx,0x68(%esp)
    call   func_583c7
    add    $0x4,%esp
    cmpl   $0x2,0x4c(%esp)
    jg     jump_380e0
    mov    0x50(%esp),%eax
    push   $0x0
    add    $0x4,%eax
    push   %eax
    call   func_59d90
    add    $0x8,%esp
  jump_380e0:
    mov    0x4c(%esp),%edi
    cmp    $0x4,%edi
    ja     jump_3860c
    mov    %edi,%eax
    jmp    *%cs:vtable_37fe8(,%eax,4)


/*----------------------------------------------------------------*/
func_380f7:
/*----------------------------------------------------------------*/
    mov    data_efd90,%ax
    mov    data_c3508,%edx
    mov    %eax,0x60(%esp)
    xor    %eax,%eax
    mov    0x46(%edx),%ax
    push   $0x3fe80000
    mov    %eax,0x60(%esp)
    push   $0x0
    fildl  0x64(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_73ee0
    call   func_72258
    fistpl 0x5c(%esp)
    mov    0x5c(%esp),%eax
    mov    %eax,0x64(%esp)
    xor    %eax,%eax
    mov    0x64(%esp),%ax
    test   %eax,%eax
    jge    jump_3814b
    xor    %esi,%esi
    mov    %esi,0x64(%esp)
    jmp    jump_38158
  jump_3814b:
    cmp    $0x14,%eax
    jle    jump_38158
    movl   $0x14,0x64(%esp)
  jump_38158:
    push   $0x0
    xor    %eax,%eax
    push   $0x0
    mov    0x6c(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x6c(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    0x60(%esp),%eax
    add    $0x4,%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_3860c


/*----------------------------------------------------------------*/
func_3818b:
/*----------------------------------------------------------------*/
    mov    data_efd92,%ax
    mov    data_c3508,%edx
    mov    %eax,0x60(%esp)
    xor    %eax,%eax
    mov    0x44(%edx),%ax
    push   $0x3fe80000
    mov    %eax,0x60(%esp)
    push   $0x0
    fildl  0x64(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_73ee0
    call   func_72258
    fistpl 0x5c(%esp)
    mov    0x5c(%esp),%eax
    mov    %eax,0x64(%esp)
    xor    %eax,%eax
    mov    0x64(%esp),%ax
    test   %eax,%eax
    jge    jump_381df
    xor    %ebx,%ebx
    mov    %ebx,0x64(%esp)
    jmp    jump_381ec
  jump_381df:
    cmp    $0x14,%eax
    jle    jump_381ec
    movl   $0x14,0x64(%esp)
  jump_381ec:
    push   $0x0
    xor    %eax,%eax
    push   $0x0
    mov    0x6c(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x6c(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    0x60(%esp),%eax
    add    $0x4,%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_3860c


/*----------------------------------------------------------------*/
func_3821f:
/*----------------------------------------------------------------*/
    mov    data_efd94,%ax
    mov    %eax,0x60(%esp)
    mov    data_c3508,%eax
    mov    0x48(%eax),%ax
    mov    %eax,0x64(%esp)
    xor    %eax,%eax
    mov    0x64(%esp),%ax
    test   %eax,%eax
    jge    jump_38249
    xor    %eax,%eax
    mov    %eax,0x64(%esp)
    jmp    jump_38256
  jump_38249:
    cmp    $0x14,%eax
    jle    jump_38256
    movl   $0x14,0x64(%esp)
  jump_38256:
    push   $0x0
    xor    %eax,%eax
    push   $0x0
    mov    0x6c(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x6c(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    0x60(%esp),%eax
    add    $0x4,%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_3860c


/*----------------------------------------------------------------*/
func_38289:
/*----------------------------------------------------------------*/
    mov    0x48(%esp),%esi
    mov    $0xf2,%eax
    test   %esi,%esi
    je     jump_3829b
    mov    $0x96,%eax
  jump_3829b:
    push   %eax
    mov    0x54(%esp),%eax
    add    $0x4,%eax
    mov    $0x1,%esi
    push   %eax
    xor    %ebp,%ebp
    mov    %eax,0x64(%esp)
    call   func_59d90
    add    $0x8,%esp
    xor    %edi,%edi
    mov    0x5c(%esp),%eax
    mov    %esi,0x64(%esp)
    mov    %eax,0x54(%esp)
    xor    %esi,%esi
    jmp    jump_382ca
  jump_382c9:
    inc    %esi
  jump_382ca:
    mov    data_c3508,%eax
    xor    %edx,%edx
    mov    0x4a(%eax),%dx
    cmp    %edx,%esi
    jge    jump_3860c
    mov    0x4c(%eax),%ax
    and    $0xffff,%eax
    cmp    %eax,%esi
    jne    jump_382ee
    incl   0x64(%esp)
  jump_382ee:
    mov    data_c3508,%eax
    mov    0x42(%eax),%ax
    and    $0xffff,%eax
    cmp    %eax,%esi
    jne    jump_38304
    incl   0x64(%esp)
  jump_38304:
    push   %ebp
    xor    %eax,%eax
    push   %edi
    mov    0x6c(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    data_efd9c,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    0x64(%esp),%eax
    push   %eax
    call   func_57efc
    mov    $0xa,%ebx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x14,%esp
    add    %ebx,%edi
    cmp    $0x9,%edx
    jne    jump_382c9
    xor    %edi,%edi
    add    %ebx,%ebp
    jmp    jump_382c9


/*----------------------------------------------------------------*/
func_3834d:
/*----------------------------------------------------------------*/
    mov    0x48(%esp),%edx
    mov    $0xf2,%eax
    test   %edx,%edx
    je     jump_38370
    mov    data_c3508,%edx
    mov    0x57(%edx),%dl
    cmp    data_f458e,%dl
    jne    jump_38370
    mov    $0x96,%eax
  jump_38370:
    push   %eax
    mov    0x54(%esp),%eax
    add    $0x4,%eax
    push   %eax
    lea    0x8(%esp),%edi
    mov    $data_86704,%esi
    call   func_59d90
    mov    $0xf,%ecx
    mov    $0xff,%bl
    add    $0x8,%esp
    mov    $0x24,%eax
    mov    %bl,0x68(%esp)
    rep movsl %ds:(%esi),%es:(%edi)
    call   func_1ce70
    mov    $0xffff,%ebx
    mov    0xab(%ebp),%cl
    mov    %eax,0x44(%esp)
    cmp    $0xff,%cl
    je     jump_383e6
    mov    $0x25,%eax
    mov    %esp,%edi
    call   func_1ce70
    mov    %eax,%esi
    mov    %cl,0x68(%esp)
    push   %edi
  jump_383c8:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_383e0
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_383c8
  jump_383e0:
    pop    %edi
    jmp    jump_38495
  jump_383e6:
    mov    data_c3508,%eax
    mov    0x54(%eax),%ch
    cmp    %cl,%ch
    je     jump_38495
    call   func_349a8
    xor    %edx,%edx
    xor    %esi,%esi
    mov    %ch,%dl
    mov    %ax,%si
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_f3e46(,%eax,8),%ax
    xor    %ah,%ah
    mov    %ch,0x68(%esp)
    and    $0x20,%al
    and    $0xffff,%eax
    jne    jump_38486
    cmp    $0xffff,%esi
    je     jump_3845e
    cmp    $0x1,%esi
    jne    jump_38438
    mov    $0x1c,%eax
    jmp    jump_3843d
  jump_38438:
    mov    $0x1d,%eax
  jump_3843d:
    call   func_1ce70
    push   %eax
    push   %esi
    mov    $0x26,%eax
    call   func_1ce70
    push   %eax
    lea    0xc(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
    jmp    jump_38486
  jump_3845e:
    mov    $0x27,%eax
    mov    %esp,%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_3846d:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_38485
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3846d
  jump_38485:
    pop    %edi
  jump_38486:
    mov    data_c3508,%eax
    cmpb   $0x23,0x54(%eax)
    je     jump_38495
    mov    0x52(%eax),%bx
  jump_38495:
    cmpb   $0xff,0x68(%esp)
    je     jump_38593
    xor    %edx,%edx
    mov    %bx,%dx
    cmp    $0xffff,%edx
    jne    jump_384c4
    lea    0x64(%esp),%ecx
    lea    0x60(%esp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    0x68(%esp),%dl
    call   func_37c9c
    jmp    jump_384d3
  jump_384c4:
    lea    0x64(%esp),%ecx
    lea    0x60(%esp),%ebx
    mov    %ebp,%eax
    call   func_37d00
  jump_384d3:
    mov    0x68(%esp),%bl
    mov    $0x10000,%edi
    cmp    $0x17,%bl
    jne    jump_384e6
    mov    $0x8000,%edi
  jump_384e6:
    xor    %edx,%edx
    mov    0x68(%esp),%dl
    lea    0x0(,%edx,4),%eax
    mov    0x50(%esp),%esi
    add    %edx,%eax
    lea    0x3c(%esp),%ecx
    shl    $0x3,%eax
    xor    %ebx,%ebx
    add    $data_f3e40,%eax
    mov    0x64(%esp),%bx
    add    $0xa,%eax
    xor    %edx,%edx
    mov    %eax,0x44(%esp)
    lea    0x40(%esp),%eax
    mov    0x60(%esp),%dx
    push   %eax
    mov    $data_11f10c,%eax
    add    $0x4,%esi
    call   func_1b084
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_2b320
    push   $0x0
    push   %edi
    push   %edi
    push   $0x0
    push   $data_c8c44
    mov    0x54(%esp),%ebx
    push   %ebx
    mov    0x54(%esp),%ecx
    xor    %eax,%eax
    push   %ecx
    mov    0x80(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0x80(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_589f1
    add    $0x28,%esp
    push   $0x0
    mov    $data_fd3aa,%edi
    push   $0xff
    lea    0x8(%esp),%ecx
    mov    $0x50,%ebx
    push   $0xffffffff
    mov    $data_fd3a2,%eax
    xor    %edx,%edx
    jmp    jump_385cf
  jump_38593:
    mov    data_c3508,%eax
    mov    0x42(%eax),%dx
    cmp    0x4c(%eax),%dx
    jne    jump_385db
    mov    $0x28,%eax
    mov    0x50(%esp),%esi
    call   func_1ce70
    push   $0x0
    mov    $0x19,%ebx
    mov    $data_fd3aa,%edi
    push   $0xff
    xor    %edx,%edx
    add    $0x4,%esi
    push   $0xffffffff
    mov    %eax,%ecx
    mov    $data_fd3a2,%eax
  jump_385cf:
    push   $0x2
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_385db:
    mov    0x50(%esp),%esi
    push   $0x0
    mov    0x48(%esp),%ecx
    mov    $0xa,%ebx
    push   $0xff
    mov    $data_fd3a2,%eax
    mov    $data_fd3aa,%edi
    push   $0xffffffff
    add    $0x4,%esi
    xor    %edx,%edx
    push   $0x2
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_3860c:
    cmpl   $0x2,0x4c(%esp)
    jg     jump_3866a
    cmpl   $0x0,0x48(%esp)
    je     jump_3866a
    mov    data_c3508,%eax
    mov    data_f458e,%bh
    cmp    0x57(%eax),%bh
    jne    jump_3866a
    mov    0x50(%esp),%edx
    mov    0x50(%esp),%edi
    add    $0x4,%edx
    mov    0x10(%edi),%edi
    mov    0x4(%edx),%ecx
    mov    0x10(%edx),%ebp
    mov    0x8(%edx),%esi
    mov    %edx,0x58(%esp)
    sub    %ecx,%edi
    sub    %esi,%ebp
    xor    %esi,%esi
  jump_3864b:
    push   $0x0
    mov    0x5c(%esp),%eax
    mov    %edi,%ecx
    push   $0x96
    mov    %esi,%ebx
    mov    %esi,%edx
    push   %ebp
    dec    %edi
    inc    %esi
    call   func_2b254
    dec    %ebp
    cmp    $0x3,%esi
    jl     jump_3864b
  jump_3866a:
    mov    0x50(%esp),%edx
    mov    $data_fa35c,%eax
    add    $0x4,%edx
    call   func_50690
    add    $0x6c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_38690:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85e50,0xa7(%eax)
    call   func_386f0
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_386ac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_386cb
    mov    $data_85e3c,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_386cb:
    mov    $0x1,%edx
    movl   $data_85e50,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_386eb
    call   func_72124
  jump_386eb:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_386f0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    $0x29,%ebx
    xor    %edx,%edx
  jump_386f9:
    mov    %ebx,%eax
    add    $0x4,%edx
    call   func_1ce70
    inc    %ebx
    mov    %eax,data_f4528(%edx)
    cmp    $0x14,%edx
    jne    jump_386f9
    mov    $0x2e,%edx
    xor    %ebx,%ebx
  jump_38716:
    mov    %edx,%eax
    add    $0x4,%ebx
    call   func_1ce70
    inc    %edx
    mov    %eax,data_f453c(%ebx)
    cmp    $0x2c,%ebx
    jne    jump_38716
    mov    $0x39,%ebx
    xor    %edx,%edx
  jump_38733:
    mov    %ebx,%eax
    add    $0x4,%edx
    call   func_1ce70
    inc    %ebx
    mov    %eax,data_f4568(%edx)
    cmp    $0x20,%edx
    jne    jump_38733
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3874c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x140,%esp
    mov    %eax,-0x10(%ebp)
    mov    %dx,-0x4(%ebp)
    mov    %ebx,-0x28(%ebp)
    mov    %ecx,-0x1c(%ebp)
    mov    -0x10(%ebp),%edx
    xor    %eax,%eax
    mov    0xab(%edx),%ax
    mov    $0xff,%cl
    cmp    $0xffff,%eax
    jge    jump_38790
    lea    0x0(,%eax,4),%edx
    mov    data_c3508,%eax
    mov    0x10(%eax),%eax
    mov    0x1(%edx,%eax,1),%cl
  jump_38790:
    mov    -0x4(%ebp),%edx
    cmp    $0x33,%dx
    jb     jump_38f56
    jbe    jump_38efe
    cmp    $0x37,%dx
    jb     jump_38f22
    jbe    jump_38d00
    cmp    $0x39,%dx
    jb     jump_38d49
    jbe    jump_38d8d
    cmp    $0x3a,%dx
    je     jump_38ede
  jump_387cd:
    mov    -0x6(%ebp),%edx
    mov    -0x1c(%ebp),%ecx
    mov    -0x28(%ebp),%ebx
    mov    -0x10(%ebp),%eax
    sar    $0x10,%edx
    call   func_2eb04
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_387e7:
    mov    -0x10(%ebp),%eax
    movl   $0xffffffff,0x39(%eax)
    mov    data_f4528,%esi
    movl   $0xffffffff,0x35(%eax)
    cmp    $0x3,%esi
    jne    jump_38b11
    xor    %eax,%eax
    mov    %eax,-0x18(%ebp)
    cmp    $0xff,%cl
    je     jump_389a0
    cmp    $0x17,%cl
    jne    jump_38956
    mov    -0x10(%ebp),%edx
    mov    0xab(%edx),%ax
    lea    0x0(,%eax,4),%edx
    mov    data_c3508,%eax
    mov    0x10(%eax),%eax
    mov    0x2(%edx,%eax,1),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_38956
    mov    -0x10(%ebp),%eax
    xor    %edx,%edx
    mov    0xab(%eax),%dx
    mov    data_c3508,%eax
    call   func_34b1c
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_38876
    mov    $0x79,%ebx
    mov    $data_81fac,%edx
    call   func_25878
  jump_38876:
    mov    $0x47,%edx
    mov    %esi,%eax
    call   func_44bb8
    cmp    $0xffffffff,%eax
    je     jump_388ad
    mov    data_c3508,%eax
    mov    0x57(%eax),%al
    and    $0xff,%eax
    cmp    $0xff,%eax
    jne    jump_388ad
    mov    -0x18(%ebp),%eax
    mov    $0x34,%edx
    lea    0x1(%eax),%ebx
    mov    %edx,-0x78(%ebp,%eax,4)
    mov    %ebx,-0x18(%ebp)
  jump_388ad:
    mov    $0x49,%edx
    mov    %esi,%eax
    call   func_44bb8
    cmp    $0xffffffff,%eax
    je     jump_388ea
    mov    data_c3508,%eax
    xor    %edx,%edx
    mov    0x57(%eax),%dl
    cmp    $0xff,%edx
    je     jump_388ea
    cmp    data_f458e,%dl
    je     jump_388ea
    mov    -0x18(%ebp),%eax
    mov    $0x39,%esi
    lea    0x1(%eax),%edi
    mov    %esi,-0x78(%ebp,%eax,4)
    mov    %edi,-0x18(%ebp)
  jump_388ea:
    mov    -0x18(%ebp),%eax
    movl   $0x37,-0x78(%ebp,%eax,4)
    mov    $0x18,%edx
    mov    data_c3508,%eax
    mov    -0x18(%ebp),%ebx
    call   func_349dc
    xor    %edx,%edx
    inc    %ebx
    mov    %ax,%dx
    mov    %ebx,-0x18(%ebp)
    cmp    $0xffff,%edx
    jge    jump_38956
    mov    data_c3508,%eax
    lea    0x0(,%edx,4),%ebx
    mov    0x10(%eax),%edx
    mov    0x2(%edx,%ebx,1),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_38956
    mov    data_f458e,%dl
    cmp    0x57(%eax),%dl
    jne    jump_38956
    mov    -0x18(%ebp),%eax
    mov    $0x38,%esi
    lea    0x1(%eax),%edi
    mov    %esi,-0x78(%ebp,%eax,4)
    mov    %edi,-0x18(%ebp)
  jump_38956:
    cmp    $0x5,%cl
    je     jump_3896d
    mov    -0x18(%ebp),%eax
    mov    $0x35,%edx
    lea    0x1(%eax),%ebx
    mov    %edx,-0x78(%ebp,%eax,4)
    mov    %ebx,-0x18(%ebp)
  jump_3896d:
    mov    -0x10(%ebp),%eax
    xor    %ebx,%ebx
    mov    $0x23,%edx
    mov    0xab(%eax),%bx
    mov    data_c3508,%eax
    call   func_3375c
    test   %eax,%eax
    je     jump_389e1
    mov    -0x18(%ebp),%eax
    mov    $0x3a,%ecx
    lea    0x1(%eax),%esi
    mov    %ecx,-0x78(%ebp,%eax,4)
    mov    %esi,-0x18(%ebp)
    jmp    jump_389e1
  jump_389a0:
    xor    %ecx,%ecx
    cmp    $0x27,%eax
    jl     jump_389af
    jmp    jump_389e1
  jump_389a9:
    inc    %ecx
    cmp    $0x27,%ecx
    jge    jump_389e1
  jump_389af:
    cmp    $0x5,%cl
    je     jump_389a9
    mov    -0x10(%ebp),%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %cl,%dl
    mov    0xab(%eax),%bx
    mov    data_c3508,%eax
    call   func_3375c
    test   %eax,%eax
    je     jump_389a9
    mov    -0x18(%ebp),%eax
    inc    %eax
    movl   $0x36,-0x7c(%ebp,%eax,4)
    mov    %eax,-0x18(%ebp)
  jump_389e1:
    mov    -0x18(%ebp),%eax
    mov    $0xa0,%ebx
    mov    $0x33,%edx
    mov    %ebx,-0x8(%ebp)
    lea    0x1(%eax),%ecx
    mov    %edx,-0x78(%ebp,%eax,4)
    mov    %ecx,-0x18(%ebp)
    test   %ecx,%ecx
    jle    jump_38ad4
    mov    %ecx,%eax
    xor    %ecx,%eax
    mov    %ecx,-0x14(%ebp)
    mov    %eax,-0xc(%ebp)
    lea    0x0(,%ecx,4),%eax
    mov    %eax,-0x20(%ebp)
  jump_38a17:
    mov    -0x10(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    0x67(%eax),%eax
    add    %edx,%eax
    mov    -0x78(%edx,%ebp,1),%esi
    mov    (%eax),%ecx
    mov    data_f44a0(,%esi,4),%esi
    lea    0x20(%ecx),%edi
    push   %edi
  jump_38a33:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_38a4b
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_38a33
  jump_38a4b:
    pop    %edi
    mov    -0x14(%ebp),%edi
    mov    -0x78(%edx,%ebp,1),%ax
    lea    0x4(%ecx),%esi
    mov    %ax,0x45(%ecx)
    mov    -0x8(%ebp),%eax
    mov    $0x1df,%edx
    mov    %eax,%ebx
    sub    %eax,%edx
    mov    %eax,0x4(%esi)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %edi
    mov    %ebx,%edx
    movl   $0x151,0x8(%esi)
    add    %eax,%edx
    movl   $0x16f,0x10(%esi)
    mov    %edx,-0x8(%ebp)
    cmp    $0x1df,%edx
    jle    jump_38a95
    movl   $0x1df,-0x8(%ebp)
  jump_38a95:
    mov    -0x8(%ebp),%eax
    mov    -0x1c(%ebp),%edi
    mov    -0x6(%ebp),%ebx
    push   %edi
    sar    $0x10,%ebx
    mov    %eax,0xc(%esi)
    inc    %eax
    mov    0x41(%ecx),%edx
    mov    -0x28(%ebp),%ecx
    mov    %eax,-0x8(%ebp)
    mov    $data_fa35c,%eax
    call   func_520f4
    mov    -0x14(%ebp),%edx
    mov    -0xc(%ebp),%ebx
    mov    -0x20(%ebp),%ecx
    dec    %edx
    add    $0x4,%ebx
    mov    %edx,-0x14(%ebp)
    mov    %ebx,-0xc(%ebp)
    cmp    %ecx,%ebx
    jl     jump_38a17
  jump_38ad4:
    cmpl   $0x1,-0x18(%ebp)
    jne    jump_38b7e
    mov    $0x1e,%eax
    mov    -0x10(%ebp),%edi
    call   func_1ce70
    mov    0x67(%edi),%edi
    mov    (%edi),%edi
    mov    %eax,%esi
    add    $0x20,%edi
    push   %edi
  jump_38af6:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_38b0e
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_38af6
  jump_38b0e:
    pop    %edi
    jmp    jump_38b7e
  jump_38b11:
    mov    0x67(%eax),%edx
    mov    (%edx),%edx
    lea    0x4(%edx),%eax
    movl   $0xa0,0x4(%eax)
    movl   $0x151,0x8(%eax)
    mov    -0x28(%ebp),%ecx
    movl   $0x1df,0xc(%eax)
    mov    -0x6(%ebp),%ebx
    movl   $0x16f,0x10(%eax)
    mov    $0x1e,%eax
    lea    0x20(%edx),%edi
    call   func_1ce70
    mov    %eax,%esi
    sar    $0x10,%ebx
    push   %edi
  jump_38b4e:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_38b66
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_38b4e
  jump_38b66:
    pop    %edi
    mov    -0x1c(%ebp),%edi
    movw   $0x33,0x45(%edx)
    push   %edi
    mov    $data_fa35c,%eax
    mov    0x41(%edx),%edx
    call   func_520f4
  jump_38b7e:
    mov    -0x10(%ebp),%ebx
    mov    0xa7(%ebx),%ebx
    mov    -0x10(%ebp),%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38b97:
    mov    -0x6(%ebp),%edx
    mov    -0x1c(%ebp),%ecx
    mov    -0x28(%ebp),%ebx
    mov    -0x10(%ebp),%eax
    sar    $0x10,%edx
    call   func_2c938
    mov    -0x10(%ebp),%eax
    movl   $0x0,0x39(%eax)
    movl   $0x0,0x35(%eax)
    mov    -0x10(%ebp),%edx
    mov    data_fd35e,%eax
    cmp    0x41(%edx),%eax
    jne    jump_38bd3
    movl   $0xffffffff,data_fd35e
  jump_38bd3:
    mov    -0x10(%ebp),%edx
    mov    $0xffffffff,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%edx),%edx
    call   func_51b80
    mov    -0x10(%ebp),%edx
    mov    $0xffffffff,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%edx),%edx
    call   func_51884
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38c05:
    mov    -0x10(%ebp),%eax
    cmpl   $0x0,0x39(%eax)
    je     jump_38c25
    cmpl   $0x0,0x35(%eax)
    je     jump_38c25
    cmpl   $0x0,0x3d(%eax)
    je     jump_38c25
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0x10(%ebx)
  jump_38c25:
    mov    $0xffffffff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38c30:
    mov    -0x10(%ebp),%eax
    cmpl   $0x0,0x39(%eax)
    je     jump_38c50
    cmpl   $0x0,0x35(%eax)
    je     jump_38c50
    cmpl   $0x0,0x3d(%eax)
    je     jump_38c50
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_38c50:
    mov    $0xffffffff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38c5b:
    mov    -0x28(%ebp),%eax
    mov    -0x10(%ebp),%edx
    mov    %eax,data_f4528
    mov    -0x1c(%ebp),%eax
    mov    %ax,0xab(%edx)
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38c78:
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    $0xc,%ecx
    mov    $0x32,%ebx
    mov    $data_fa35c,%eax
    mov    0x63(%edx),%edx
    call   func_520f4
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38c9c:
    cmp    $0x17,%cl
    jne    jump_38cbc
    mov    -0x10(%ebp),%eax
    xor    %edx,%edx
    mov    0xab(%eax),%dx
    mov    data_c3508,%eax
    call   func_34b1c
    call   func_4517c
  jump_38cbc:
    mov    -0x10(%ebp),%eax
    mov    $0x1,%ecx
    xor    %edx,%edx
    mov    $0xff,%ebx
    mov    0xab(%eax),%dx
    mov    data_c3508,%eax
    call   func_33c90
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    $0xa,%ecx
    mov    $0x32,%ebx
    mov    $data_fa35c,%eax
    mov    0x63(%edx),%edx
    call   func_520f4
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38d00:
    mov    -0x10(%ebp),%eax
    xor    %edx,%edx
    mov    0xab(%eax),%dx
    mov    data_c3508,%eax
    call   func_34b1c
    mov    data_c3508,%ebx
    mov    %eax,%edx
    mov    %ebx,%eax
    mov    $0xa,%ecx
    call   func_34ce4
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    $0x32,%ebx
    mov    $data_fa35c,%eax
    mov    0x63(%edx),%edx
    call   func_520f4
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38d49:
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    $0xa,%ecx
    mov    $0x32,%ebx
    mov    $data_fa35c,%eax
    mov    0x63(%edx),%edx
    call   func_520f4
    push   $0x1
    mov    -0x10(%ebp),%eax
    xor    %ecx,%ecx
    mov    $0x34,%ebx
    mov    0xab(%eax),%cx
    mov    0x63(%eax),%edx
    mov    $data_fa35c,%eax
    call   func_520f4
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38d8d:
    mov    -0x10(%ebp),%eax
    xor    %edx,%edx
    lea    -0x24(%ebp),%ebx
    mov    0xab(%eax),%dx
    mov    data_c3508,%eax
    call   func_355c4
    mov    $data_81fba,%edx
    mov    %eax,%esi
    xor    %ebx,%ebx
    mov    $data_fa35c,%eax
    call   func_5216c
    mov    $data_81fc5,%ebx
    mov    %eax,%ecx
    cmp    $0xffffffff,%esi
    jne    jump_38dca
    mov    $data_81fd3,%ebx
  jump_38dca:
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    $data_92e16,%eax
    mov    $data_81fe1,%edx
    call   func_3c3cc
    mov    %eax,%esi
    mov    %eax,%edi
    mov    %ecx,%eax
    call   func_2f390
    cmp    $0x1,%esi
    jne    jump_38e06
    mov    $0x20,%eax
    jmp    jump_38e0b
  jump_38e06:
    mov    $0x21,%eax
  jump_38e0b:
    call   func_1ce70
    push   %eax
    mov    -0x24(%ebp),%edx
    push   %edi
    cmp    $0x1,%edx
    jne    jump_38e21
    mov    $0x1c,%eax
    jmp    jump_38e26
  jump_38e21:
    mov    $0x1d,%eax
  jump_38e26:
    call   func_1ce70
    push   %eax
    mov    -0x24(%ebp),%ebx
    mov    data_c3508,%eax
    push   %ebx
    add    $0x24,%eax
    push   %eax
    mov    0xc9a(%ecx),%esi
    push   %esi
    lea    -0x140(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0x1c,%esp
    lea    -0x140(%ebp),%esi
    mov    0xc9a(%ecx),%edi
    push   %edi
  jump_38e5c:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_38e74
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_38e5c
  jump_38e74:
    pop    %edi
    movw   $0x1c,0xcb1(%ecx)
    movw   $0x49,0xcb3(%ecx)
    movw   $0x1d,0xccc(%ecx)
    mov    data_c3508,%eax
    imul   $0x5,0x16(%eax),%dx
    mov    0x14(%eax),%ax
    mov    $0x32,%ebx
    add    %eax,%edx
    push   $0x0
    mov    %dx,0xcce(%ecx)
    mov    -0x10(%ebp),%edx
    mov    $data_fa35c,%eax
    mov    $0xa,%ecx
    mov    0x63(%edx),%edx
    call   func_520f4
    mov    $0x5,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_51f24
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38ede:
    mov    -0x10(%ebp),%eax
    mov    $0x2,%ecx
    xor    %edx,%edx
    mov    $0x23,%ebx
    mov    0xab(%eax),%dx
    mov    data_c3508,%eax
    call   func_33c90
  jump_38efe:
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    $0xa,%ecx
    mov    $0x32,%ebx
    mov    $data_fa35c,%eax
    mov    0x63(%edx),%edx
    call   func_520f4
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38f22:
    cmp    $0x35,%dx
    jb     jump_38c78
    jbe    jump_38c9c
    push   $0x0
    mov    -0x10(%ebp),%edx
    mov    $0xb,%ecx
    mov    $0x32,%ebx
    mov    $data_fa35c,%eax
    mov    0x63(%edx),%edx
    call   func_520f4
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_38f56:
    cmp    $0x4,%dx
    jb     jump_38f85
    cmp    $0x5,%dx
    jbe    jump_38c50
    cmp    $0x7,%dx
    jb     jump_38c30
    jbe    jump_38c05
    cmp    $0x32,%dx
    je     jump_38c5b
    jmp    jump_387cd
  jump_38f85:
    cmp    $0x1,%dx
    jb     jump_387cd
    jbe    jump_387e7
    cmp    $0x2,%dx
    je     jump_38b97
    jmp    jump_387cd

vtable_38fa4:
    .long   func_392c2
    .long   func_3936f
    .long   func_392d4
    .long   func_392f3
    .long   func_3930f

vtable_38fb8:
    .long   func_390b1
    .long   func_39167
    .long   func_39210
    .long   func_392aa
    .long   func_39718


/*----------------------------------------------------------------*/
func_38fcc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x21c,%esp
    sub    $0x82,%ebp
    mov    %eax,0x76(%ebp)
    lea    0x4(%eax),%esi
    mov    $data_fa35c,%eax
    mov    %esi,%edx
    call   func_50690
    push   $0xf2
    push   %esi
    call   func_59d90
    add    $0x8,%esp
    push   $0x0
    push   $0x0
    mov    $data_11f10c,%eax
    xor    %edx,%edx
    push   $0x0
    mov    data_efd8e,%dx
    xor    %edi,%edi
    call   func_1b084
    push   %eax
    mov    %edi,0x6e(%ebp)
    push   %esi
    mov    0x76(%ebp),%esi
    lea    0x2e(%ebp),%edi
    call   func_57efc
    lea    0x4(%esi),%esi
    mov    0x76(%ebp),%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0x8(%eax),%eax
    add    $0xa,%eax
    mov    %eax,0x32(%ebp)
    mov    0x76(%ebp),%eax
    mov    0xc(%eax),%eax
    mov    $0xffff,%ebx
    add    $0xa,%eax
    xor    %edx,%edx
    mov    %eax,0x36(%ebp)
    mov    0x76(%ebp),%eax
    add    $0x14,%esp
    mov    %edx,0x72(%ebp)
    mov    0x8(%eax),%eax
    mov    %edx,0x5a(%ebp)
    add    $0x145,%eax
    mov    %edx,0x6a(%ebp)
    mov    %eax,0x3a(%ebp)
    mov    0x76(%ebp),%eax
    mov    %edx,0x62(%ebp)
    mov    %ebx,0x7a(%ebp)
    mov    0xc(%eax),%eax
    lea    0x2e(%ebp),%esi
    add    $0xcf,%eax
    mov    $data_fd3aa,%edi
    mov    %eax,0x3e(%ebp)
    mov    $0xff,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    xor    %edx,%edx
    mov    %eax,data_fd3be
    mov    data_f4528,%eax
    mov    %edx,0x7e(%ebp)
    cmp    $0x4,%eax
    ja     jump_3992b
    jmp    *%cs:vtable_38fb8(,%eax,4)


/*----------------------------------------------------------------*/
func_390b1:
/*----------------------------------------------------------------*/
    mov    $0x41,%eax
    call   func_1ce70
    mov    data_c3508,%esi
    mov    %eax,0x72(%ebp)
    mov    0x46(%esi),%ax
    movzbl 0x57(%esi),%esi
    mov    %eax,0x7e(%ebp)
    mov    data_f6492(,%esi,2),%dx
    and    $0xffff,%edx
    cmp    $0xffff,%edx
    jge    jump_39148
    movl   $0xffffffff,0x6e(%ebp)
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%ecx
    shl    $0x4,%ecx
    sub    %eax,%ecx
    mov    $data_f4746,%eax
    add    %ecx,%eax
    mov    %esi,%edx
    mov    %eax,0x5a(%ebp)
    mov    $data_f4744,%eax
    call   func_42230
    mov    data_c3508,%edx
    mov    0x57(%edx),%dl
    and    $0xff,%edx
    mov    data_f64a0(,%edx,2),%dx
    and    $0xffff,%edx
    mov    data_f4782(%ecx),%cx
    and    $0xffff,%ecx
    mov    %eax,%ebx
    mov    %ecx,%eax
    call   func_42460
    mov    %eax,0x7a(%ebp)
  jump_39148:
    mov    $0x42,%eax
    call   func_1ce70
    mov    %eax,0x6a(%ebp)
    mov    $0x43,%eax
    call   func_1ce70
    mov    %eax,0x62(%ebp)
    jmp    jump_3992b


/*----------------------------------------------------------------*/
func_39167:
/*----------------------------------------------------------------*/
    mov    $0x44,%eax
    call   func_1ce70
    mov    data_c3508,%ebx
    xor    %edx,%edx
    mov    %eax,0x72(%ebp)
    mov    0x44(%ebx),%ax
    mov    0x52(%ebx),%dx
    mov    %eax,0x7e(%ebp)
    mov    $0xff,%al
    cmp    $0xffff,%edx
    jge    jump_39198
    mov    0x10(%ebx),%ebx
    mov    0x1(%ebx,%edx,4),%al
  jump_39198:
    cmp    $0xff,%al
    je     jump_391f1
    xor    %ebx,%ebx
    mov    %al,%bl
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    shl    $0x3,%eax
    add    $data_f3e40,%eax
    mov    $0xffffffff,%edi
    add    $0xa,%eax
    xor    %ecx,%ecx
    mov    %eax,0x5a(%ebp)
    mov    data_c3508,%eax
    xor    %esi,%esi
    mov    %edi,0x6e(%ebp)
    mov    0x44(%eax),%cx
    mov    0x50(%eax),%si
    mov    $0xff,%ebx
    and    $0xffff,%edx
    call   func_34928
    and    $0xffff,%eax
    mov    %ecx,%ebx
    mov    %esi,%edx
    call   func_42460
    mov    %eax,0x7a(%ebp)
  jump_391f1:
    mov    $0x45,%eax
    call   func_1ce70
    mov    %eax,0x6a(%ebp)
    mov    $0x43,%eax
    call   func_1ce70
    mov    %eax,0x62(%ebp)
    jmp    jump_3992b


/*----------------------------------------------------------------*/
func_39210:
/*----------------------------------------------------------------*/
    mov    $0x46,%eax
    call   func_1ce70
    mov    %eax,0x72(%ebp)
    mov    data_c3508,%eax
    mov    0x48(%eax),%ax
    mov    %eax,0x7e(%ebp)
    mov    $0x47,%eax
    call   func_1ce70
    mov    %eax,0x5a(%ebp)
    mov    $0x48,%eax
    call   func_1ce70
    mov    %eax,0x6a(%ebp)
    mov    data_c3508,%eax
    mov    $0xffffffff,%esi
    mov    0x42(%eax),%dx
    mov    0x4a(%eax),%bx
    mov    %esi,0x6e(%ebp)
    cmp    %bx,%dx
    jae    jump_39298
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x48(%eax),%bx
    mov    0x4e(%eax),%dx
    mov    data_866e4,%eax
    call   func_42460
    mov    %eax,0x7a(%ebp)
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3992b
    mov    $0x49,%eax
    call   func_1ce70
    mov    %eax,0x62(%ebp)
    jmp    jump_3992b
  jump_39298:
    mov    $0x4a,%eax
    call   func_1ce70
    mov    %eax,0x62(%ebp)
    jmp    jump_3992b


/*----------------------------------------------------------------*/
func_392aa:
/*----------------------------------------------------------------*/
    mov    0x76(%ebp),%edx
    xor    %eax,%eax
    mov    0xab(%edx),%ax
    cmp    $0xffff,%eax
    jl     jump_3932b
    jmp    jump_3992b


/*----------------------------------------------------------------*/
func_392c2:
/*----------------------------------------------------------------*/
    mov    $0x4c,%eax
    call   func_1ce70
    mov    %eax,0x66(%ebp)
    jmp    func_3936f


/*----------------------------------------------------------------*/
func_392d4:
/*----------------------------------------------------------------*/
    mov    $0x4d,%eax
    call   func_1ce70
    mov    %eax,0x66(%ebp)
    mov    $0x4e,%eax
    call   func_1ce70
    mov    %eax,0x56(%ebp)
    jmp    func_3936f


/*----------------------------------------------------------------*/
func_392f3:
/*----------------------------------------------------------------*/
    mov    $0x4f,%eax
    call   func_1ce70
    mov    %eax,0x66(%ebp)
    mov    $0x50,%eax
    call   func_1ce70
    mov    %eax,0x56(%ebp)
    jmp    func_3936f


/*----------------------------------------------------------------*/
func_3930f:
/*----------------------------------------------------------------*/
    mov    $0x51,%eax
    call   func_1ce70
    mov    %eax,0x66(%ebp)
    mov    $0x52,%eax
    call   func_1ce70
    mov    %eax,0x56(%ebp)
    jmp    func_3936f
  jump_3932b:
    lea    0x0(,%eax,4),%edx
    mov    data_c3508,%eax
    mov    0x10(%eax),%eax
    add    %edx,%eax
    xor    %bh,%bh
    mov    %eax,0x5e(%ebp)
    mov    0x1(%eax),%bl
    mov    $0x4b,%eax
    call   func_1ce70
    mov    %eax,0x66(%ebp)
    mov    0x5e(%ebp),%eax
    xor    %edi,%edi
    mov    (%eax),%al
    mov    %edi,0x56(%ebp)
    and    $0x7,%al
    and    $0xff,%eax
    cmp    $0x4,%eax
    ja     func_3936f
    jmp    *%cs:vtable_38fa4(,%eax,4)


/*----------------------------------------------------------------*/
func_3936f:
/*----------------------------------------------------------------*/
    mov    0x76(%ebp),%edx
    mov    data_c3508,%eax
    mov    0xab(%edx),%dx
    cmp    0x18(%eax),%dx
    jb     jump_39391
    mov    $0x53,%eax
    call   func_1ce70
    mov    %eax,0x66(%ebp)
  jump_39391:
    xor    %ecx,%ecx
    mov    %bx,%cx
    cmp    $0xff,%ecx
    je     jump_3957f
    lea    0x0(,%ecx,4),%eax
    add    %ecx,%eax
    shl    $0x3,%eax
    add    $data_f3e40,%eax
    lea    0xa(%eax),%ebx
    lea    -0x3a(%ebp),%edi
    mov    %ebx,%esi
    push   %edi
  jump_393bc:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_393d4
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_393bc
  jump_393d4:
    pop    %edi
    cmp    $0x17,%ecx
    jne    jump_39406
    mov    0x76(%ebp),%eax
    xor    %edx,%edx
    mov    0xab(%eax),%dx
    mov    data_c3508,%eax
    call   func_34b1c
    add    $0x34,%eax
    push   %eax
    push   %ebx
    push   $data_81fea
    lea    -0x3a(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
  jump_39406:
    mov    0x5e(%ebp),%eax
    mov    0x2(%eax),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    je     jump_39424
    mov    $0x54,%eax
    call   func_1ce70
    jmp    jump_39429
  jump_39424:
    mov    $data_81ff2,%eax
  jump_39429:
    mov    $0xc,%ecx
    lea    -0x6(%ebp),%edi
    mov    $data_86740,%esi
    mov    %eax,%ebx
    mov    0x76(%ebp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    data_c3508,%edx
    mov    0xab(%eax),%ax
    cmp    0x18(%edx),%ax
    jae    jump_3946d
    mov    0x66(%ebp),%ecx
    push   %ecx
    mov    $0x55,%eax
    call   func_1ce70
    push   %eax
    lea    -0x6(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
  jump_3946d:
    lea    -0x6(%ebp),%eax
    push   %eax
    lea    -0x3a(%ebp),%eax
    push   %eax
    push   %ebx
    push   $data_81ff3
    lea    -0x102(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0x14,%esp
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x102(%ebp),%ecx
    xor    %edx,%edx
    push   $0x2
    mov    $0xf,%ebx
    mov    $data_fd3a2,%eax
    call   func_2af88
    mov    0x76(%ebp),%eax
    xor    %edx,%edx
    mov    0xab(%eax),%dx
    mov    data_c3508,%eax
    mov    0x10(%eax),%ebx
    mov    0x2(%ebx,%edx,4),%bx
    and    $0xffff,%ebx
    jne    jump_3992b
    mov    $0xff,%ebx
    xor    %ecx,%ecx
    xor    %esi,%esi
    mov    0x44(%eax),%cx
    mov    0x50(%eax),%si
    call   func_34928
    and    $0xffff,%eax
    mov    %ecx,%ebx
    mov    %esi,%edx
    call   func_42460
    mov    %eax,%edx
    cmp    $0xffff,%eax
    jne    jump_39529
    mov    $0x56,%eax
    lea    -0x102(%ebp),%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_3950e:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_39526
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_3950e
  jump_39526:
    pop    %edi
    jmp    jump_3955b
  jump_39529:
    cmp    $0x1,%eax
    jne    jump_39535
    mov    $0x1c,%eax
    jmp    jump_3953a
  jump_39535:
    mov    $0x1d,%eax
  jump_3953a:
    call   func_1ce70
    push   %eax
    push   %edx
    mov    $0x57,%eax
    call   func_1ce70
    push   %eax
    lea    -0x102(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
  jump_3955b:
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x102(%ebp),%ecx
    mov    $0x32,%ebx
    push   $0x2
    mov    $data_fd3a2,%eax
    xor    %edx,%edx
    call   func_2af88
    jmp    jump_3992b
  jump_3957f:
    mov    0x5e(%ebp),%eax
    mov    (%eax),%al
    and    $0x8,%al
    and    %ecx,%eax
    je     jump_395c8
    mov    data_c3508,%eax
    mov    data_f458e,%bl
    cmp    0x57(%eax),%bl
    jne    jump_395c8
    mov    $0x58,%eax
    lea    -0x9e(%ebp),%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_395ad:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_395c5
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_395ad
  jump_395c5:
    pop    %edi
    jmp    jump_395e6
  jump_395c8:
    mov    0x66(%ebp),%eax
    push   %eax
    mov    $0x59,%eax
    call   func_1ce70
    push   %eax
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
  jump_395e6:
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x9e(%ebp),%ecx
    mov    $0x14,%ebx
    push   $0x2
    mov    $data_fd3a2,%eax
    xor    %edx,%edx
    call   func_2af88
    mov    0x5e(%ebp),%eax
    mov    (%eax),%al
    and    $0x8,%al
    and    $0xff,%eax
    jne    jump_3992b
    mov    0x76(%ebp),%eax
    mov    data_c3508,%edx
    mov    0xab(%eax),%ax
    cmp    0x18(%edx),%ax
    jb     jump_3965e
    mov    $0x5a,%eax
    lea    -0x19a(%ebp),%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_39640:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_39658
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_39640
  jump_39658:
    pop    %edi
    jmp    jump_396f1
  jump_3965e:
    mov    0x5e(%ebp),%eax
    mov    (%eax),%al
    and    $0x7,%al
    and    $0xff,%eax
    cmp    $0x1,%eax
    jne    jump_3969d
    mov    $0x5b,%eax
    lea    -0x19a(%ebp),%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_39682:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3969a
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_39682
  jump_3969a:
    pop    %edi
    jmp    jump_396f1
  jump_3969d:
    test   %eax,%eax
    jne    jump_396cf
    mov    $0x5c,%eax
    lea    -0x19a(%ebp),%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_396b4:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_396cc
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_396b4
  jump_396cc:
    pop    %edi
    jmp    jump_396f1
  jump_396cf:
    mov    0x56(%ebp),%edx
    push   %edx
    mov    0x66(%ebp),%ebx
    push   %ebx
    mov    $0x5d,%eax
    call   func_1ce70
    push   %eax
    lea    -0x19a(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
  jump_396f1:
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x19a(%ebp),%ecx
    mov    $0x50,%ebx
    push   $0x2
    mov    $0xa,%edx
    mov    $data_fd3a2,%eax
    call   func_2af88
    jmp    jump_3992b


/*----------------------------------------------------------------*/
func_39718:
/*----------------------------------------------------------------*/
    push   $0x0
    push   $0xffffffff
    mov    $0xf,%ebx
    push   $0xffffffff
    mov    $data_fd3a2,%eax
    mov    data_c3508,%ecx
    push   $0x2
    xor    %edx,%edx
    add    $0x24,%ecx
    call   func_2af88
    mov    data_c3508,%eax
    xor    %edx,%edx
    mov    0x16(%eax),%dx
    mov    data_f4540(,%edx,4),%ebx
    mov    0x14(%eax),%ax
    push   %ebx
    and    $0xffff,%eax
    mov    data_f452c(,%eax,4),%ecx
    push   %ecx
    mov    $0x5e,%eax
    call   func_1ce70
    push   %eax
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    mov    $0x3c,%ebx
    xor    %edx,%edx
    push   $0x2
    lea    -0x9e(%ebp),%ecx
    mov    $data_fd3a2,%eax
    call   func_2af88
    mov    $0x5f,%eax
    lea    0x42(%ebp),%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_397a7:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_397bf
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_397a7
  jump_397bf:
    pop    %edi
    mov    data_c3508,%edx
    mov    0x57(%edx),%dl
    and    $0xff,%edx
    cmp    $0xff,%edx
    jge    jump_3981c
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    $data_f4590,%esi
    shl    $0x2,%eax
    lea    0x42(%ebp),%edi
    add    %eax,%esi
    push   %edi
  jump_39803:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_3981b
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_39803
  jump_3981b:
    pop    %edi
  jump_3981c:
    lea    0x42(%ebp),%eax
    push   %eax
    mov    data_c3508,%eax
    xor    %edx,%edx
    mov    0x57(%eax),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e18(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    push   %eax
    mov    $0x60,%eax
    call   func_1ce70
    push   %eax
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x9e(%ebp),%ecx
    mov    $0x5a,%ebx
    push   $0x2
    xor    %edx,%edx
    mov    $data_fd3a2,%eax
    call   func_2af88
    mov    data_c3508,%eax
    mov    0x4a(%eax),%ax
    and    $0xffff,%eax
    push   %eax
    mov    $0x61,%eax
    call   func_1ce70
    push   %eax
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x9e(%ebp),%ecx
    mov    $0x78,%ebx
    push   $0x2
    xor    %edx,%edx
    mov    $data_fd3a2,%eax
    call   func_2af88
    mov    data_c3508,%eax
    mov    0x57(%eax),%dl
    cmp    data_f458e,%dl
    jne    jump_3992b
    mov    0x5a(%eax),%esi
    cmp    $0xffffffff,%esi
    jne    jump_3992b
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    push   $0x0
    sub    %edx,%eax
    push   %esi
    mov    data_92e18(,%eax,2),%al
    xor    %ah,%ah
    shl    $0x2,%eax
    add    $0x13,%eax
    cwtl
    push   %eax
    mov    $0x96,%ebx
    push   $0x2
    mov    $0x62,%eax
    xor    %edx,%edx
    call   func_1ce70
    mov    %eax,%ecx
    mov    $data_fd3a2,%eax
    call   func_2af88
  jump_3992b:
    mov    0x72(%ebp),%edx
    test   %edx,%edx
    je     jump_39a0f
    xor    %eax,%eax
    mov    0x7e(%ebp),%ax
    push   %eax
    mov    data_c3508,%eax
    push   %edx
    add    $0x24,%eax
    push   %eax
    mov    $0x63,%eax
    call   func_1ce70
    push   %eax
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0x14,%esp
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x9e(%ebp),%ecx
    mov    $0xf,%ebx
    push   $0x2
    xor    %edx,%edx
    mov    $data_fd3a2,%eax
    call   func_2af88
    cmpl   $0x0,0x6e(%ebp)
    je     jump_39a0f
    xor    %eax,%eax
    mov    0x7a(%ebp),%ax
    cmp    $0xffff,%eax
    jne    jump_399b0
    mov    0x5a(%ebp),%eax
    push   %eax
    mov    0x62(%ebp),%edx
    push   %edx
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    jmp    jump_399f0
  jump_399b0:
    cmp    $0x1,%eax
    jne    jump_399bc
    mov    $0x1c,%eax
    jmp    jump_399c1
  jump_399bc:
    mov    $0x1d,%eax
  jump_399c1:
    call   func_1ce70
    push   %eax
    xor    %eax,%eax
    mov    0x7a(%ebp),%ax
    push   %eax
    mov    0x6a(%ebp),%esi
    push   %esi
    mov    0x5a(%ebp),%edi
    push   %edi
    mov    $0x64,%eax
    call   func_1ce70
    push   %eax
    lea    -0x9e(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0x18,%esp
  jump_399f0:
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x9e(%ebp),%ecx
    mov    $0x50,%ebx
    push   $0x2
    mov    $data_fd3a2,%eax
    xor    %edx,%edx
    call   func_2af88
  jump_39a0f:
    mov    0x76(%ebp),%eax
    cmpw   $0x0,0x6b(%eax)
    je     jump_39a20
    xor    %edx,%edx
    call   func_2c8f8
  jump_39a20:
    lea    0x82(%ebp),%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_39a30:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    $data_f4590,%edx
    mov    $0x65,%ebx
    lea    0x1a4(%edx),%ecx
  jump_39a48:
    mov    %ebx,%eax
    call   func_1ce70
    mov    %edx,%edi
    mov    %eax,%esi
    push   %edi
  jump_39a54:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_39a6c
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_39a54
  jump_39a6c:
    pop    %edi
    add    $0x14,%edx
    inc    %ebx
    cmp    %ecx,%edx
    jne    jump_39a48
    movb   $0xff,0x1(%ebp)
    movb   $0xff,0x0(%ebp)
    mov    %ebp,%eax
    movl   $0x0,0x7(%ebp)
    call   func_39a98
    mov    %ebp,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_39a98:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    push   %esi
    mov    %eax,%esi
    movw   $0x12,0x1aa(%eax)
    movw   $0x16,0x1ac(%eax)
    movw   $0x0,0x1ae(%eax)
    movw   $0x0,0x19b(%eax)
    movw   $0x0,0x1d9(%eax)
    movw   $0x0,0x1db(%eax)
    movb   $0xe,0x1e9(%eax)
    mov    %eax,%edx
    movl   $0x0,0x1ea(%eax)
    lea    0xe(%eax),%ebx
  jump_39ae9:
    add    $0x2,%eax
    movb   $0x0,0x1c0(%edx)
    inc    %edx
    movw   $0x0,0x1b0(%eax)
    cmp    %ebx,%eax
    jne    jump_39ae9
    movl   $0x0,0x3(%esi)
    pop    %esi
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_39b0c:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    call   func_39a98
    xor    %eax,%eax
    mov    %dl,(%ecx)
    movswl %bx,%edx
    mov    0x1(%ecx),%al
    cmp    %edx,%eax
    je     jump_39b2c
    mov    %ecx,%eax
    mov    %bl,0x1(%ecx)
    call   func_3f6e0
  jump_39b2c:
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_39b30:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1b4,%esp
    mov    %eax,%ebp
    cmpl   $0xffffffff,0x3(%eax)
    je     jump_39c6a
    call   func_3b728
    mov    %eax,0x1b0(%esp)
    test   %eax,%eax
    jge    jump_39bba
    mov    %esp,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_3c310
    dec    %eax
    xor    %edi,%edi
    mov    %eax,0x1ac(%esp)
    jmp    jump_39b77
  jump_39b6f:
    mov    %esi,%eax
    call   func_4517c
    inc    %edi
  jump_39b77:
    mov    0x1b0(%esp),%eax
    movswl %di,%edx
    neg    %eax
    cmp    %eax,%edx
    jge    jump_39bba
    mov    0x1ac(%esp),%eax
    sub    %edx,%eax
    mov    (%esp,%eax,4),%esi
    mov    0x0(%ebp),%al
    cmp    data_f458e,%al
    jne    jump_39b6f
    mov    $0xb,%edx
    mov    $data_fa35c,%eax
    mov    0xa7(%esi),%ebx
    xor    %ecx,%ecx
    sar    $0x18,%ebx
    call   func_50eb0
    jmp    jump_39b6f
  jump_39bba:
    mov    %esp,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_3c310
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_39bf1
    mov    %ebp,%eax
    call   func_3c3cc
    test   %eax,%eax
    jne    jump_39bf1
    mov    $0xa,%edx
    mov    $data_fa35c,%eax
    mov    0x0(%ebp),%bl
    xor    %ecx,%ecx
    movl   $0xffffffff,0x3(%ebp)
    jmp    jump_39c65
  jump_39bf1:
    test   %ebx,%ebx
    jle    jump_39c09
    shl    $0x2,%ebx
    xor    %edx,%edx
  jump_39bfa:
    mov    (%esp,%edx,1),%eax
    add    $0x4,%edx
    call   func_45b9c
    cmp    %ebx,%edx
    jl     jump_39bfa
  jump_39c09:
    mov    %ebp,%eax
    call   func_39ea4
    mov    0x7(%ebp),%eax
    mov    0x14(%eax),%al
    and    $0x80,%al
    and    $0xff,%eax
    je     jump_39c6a
    mov    0x19e(%ebp),%ebx
    mov    data_f458e,%dl
    inc    %ebx
    mov    0x0(%ebp),%al
    mov    %ebx,0x19e(%ebp)
    cmp    %dl,%al
    jne    jump_39c6a
    test   %ebx,%ebx
    je     jump_39c6a
    mov    0x19a(%ebp),%eax
    sar    $0x18,%eax
    mov    data_86780(,%eax,2),%ax
    and    $0xffff,%eax
    cmp    %ebx,%eax
    jne    jump_39c6a
    mov    $0x18,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
  jump_39c65:
    call   func_50eb0
  jump_39c6a:
    add    $0x1b4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_39e58:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x1ac,%esp
    mov    %eax,%esi
    mov    %edx,%eax
    mov    %esp,%edx
    call   func_1d754
    mov    %eax,%edi
    xor    %edx,%edx
    jmp    jump_39e74
  jump_39e73:
    inc    %edx
  jump_39e74:
    movswl %dx,%eax
    cmp    %edi,%eax
    jge    jump_39e97
    mov    (%esp,%eax,4),%eax
    test   %eax,%eax
    je     jump_39e73
    mov    0x54(%eax),%ecx
    xor    %ebx,%ebx
    sar    $0x10,%ecx
    mov    (%esi),%bl
    cmp    %ebx,%ecx
    jne    jump_39e73
    call   func_45aa8
    jmp    jump_39e73
  jump_39e97:
    add    $0x1ac,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_39ea4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x1ac,%esp
    mov    %eax,%ecx
    mov    (%eax),%al
    cmp    data_f458e,%al
    jne    jump_39ec3
    cmpl   $0xffffffff,data_90ba4
    jne    jump_39edf
  jump_39ec3:
    mov    %ecx,%eax
    call   func_3a108
    mov    %ecx,%eax
    call   func_3a37c
    mov    %ecx,%eax
    call   func_3fae0
    mov    %ecx,%eax
    call   func_39fd8
  jump_39edf:
    mov    data_ba093,%dx
    xor    %ebx,%ebx
    test   %dx,%dx
    jle    jump_39f35
    jmp    jump_39efc
  jump_39eef:
    mov    data_ba093,%si
    inc    %ebx
    cmp    %si,%bx
    jge    jump_39f35
  jump_39efc:
    movswl %bx,%edx
    imul   $0x7b,%edx,%edx
    add    $data_ab057,%edx
    mov    0x57(%edx),%al
    cmp    (%ecx),%al
    jne    jump_39eef
    cmp    data_f458e,%al
    jne    jump_39f26
    cmpl   $0x0,0x5a(%edx)
    jne    jump_39f26
    cmpl   $0x0,data_90ba4
    je     jump_39eef
  jump_39f26:
    cmpb   $0xff,0x54(%edx)
    jne    jump_39eef
    mov    %ecx,%eax
    call   func_3a580
    jmp    jump_39eef
  jump_39f35:
    mov    data_f458e,%dl
    cmp    (%ecx),%dl
    jne    jump_39f51
    cmpl   $0x0,data_90ba4
    jne    jump_39f51
    cmpl   $0xffffffff,data_f64ae
    jne    jump_39f72
  jump_39f51:
    xor    %edx,%edx
    mov    (%ecx),%dl
    mov    data_f6492(,%edx,2),%dx
    and    $0xffff,%edx
    cmp    $0xffff,%edx
    jne    jump_39f72
    mov    %ecx,%eax
    call   func_3b468
  jump_39f72:
    mov    data_f458e,%dh
    cmp    (%ecx),%dh
    jne    jump_39f85
    cmpl   $0xffffffff,data_90ba4
    jne    jump_39f91
  jump_39f85:
    mov    $0x1,%edx
    mov    %ecx,%eax
    call   func_3efa0
  jump_39f91:
    mov    %esp,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_3c310
    mov    %eax,%esi
    xor    %ebx,%ebx
    jmp    jump_39fa3
  jump_39fa2:
    inc    %ebx
  jump_39fa3:
    movswl %bx,%edx
    cmp    %esi,%edx
    jge    jump_39fcc
    mov    (%ecx),%al
    cmp    data_f458e,%al
    jne    jump_39fbd
    cmpl   $0xffffffff,data_90ba4
    jne    jump_39fa2
  jump_39fbd:
    movswl %bx,%edx
    mov    %ecx,%eax
    mov    (%esp,%edx,4),%edx
    call   func_3b5c8
    jmp    jump_39fa2
  jump_39fcc:
    add    $0x1ac,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_39fd8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%edx
    movw   $0x0,0x19b(%eax)
    call   func_3ee44
    mov    %al,(%esp)
    mov    0x7(%edx),%eax
    xor    %ebx,%ebx
    mov    (%edx),%cl
    mov    0x14(%eax),%bl
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%ebx
    jne    jump_3a026
    mov    0x19b(%edx),%ax
    movswl %ax,%ebx
    inc    %eax
    mov    %ax,0x19b(%edx)
    mov    0x7(%edx),%eax
    mov    %eax,0xb(%edx,%ebx,4)
    jmp    jump_3a0fd
  jump_3a026:
    mov    data_96145,%cx
    xor    %ebx,%ebx
    test   %cx,%cx
    jle    jump_3a094
    jmp    jump_3a043
  jump_3a036:
    mov    data_96145,%si
    inc    %ebx
    cmp    %si,%bx
    jge    jump_3a094
  jump_3a043:
    movswl %bx,%eax
    imul   $0x60,%eax,%eax
    mov    $0x1,%edi
    mov    (%edx),%cl
    add    $data_93bc5,%eax
    shl    %cl,%edi
    movzbl 0x16(%eax),%esi
    mov    %edi,%ecx
    test   %edi,%esi
    je     jump_3a036
    movzbl 0x17(%eax),%esi
    test   %edi,%esi
    je     jump_3a07c
    xor    %edi,%ecx
    movzbl 0x14(%eax),%esi
    mov    0x15(%eax),%cl
    or     %esi,%ecx
    movzbl (%esp),%esi
    test   %ecx,%esi
    je     jump_3a036
  jump_3a07c:
    mov    0x19b(%edx),%cx
    movswl %cx,%esi
    inc    %ecx
    mov    %cx,0x19b(%edx)
    mov    %eax,0xb(%edx,%esi,4)
    jmp    jump_3a036
  jump_3a094:
    mov    0x199(%edx),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_3a0fd
    mov    data_96145,%di
    xor    %eax,%eax
    test   %di,%di
    jle    jump_3a0fd
    jmp    jump_3a0be
  jump_3a0b1:
    mov    data_96145,%bx
    inc    %eax
    cmp    %bx,%ax
    jge    jump_3a0fd
  jump_3a0be:
    movswl %ax,%ebx
    imul   $0x60,%ebx,%ebx
    mov    $0x1,%edi
    mov    (%edx),%cl
    add    $data_93bc5,%ebx
    shl    %cl,%edi
    movzbl 0x14(%ebx),%esi
    mov    %edi,%ecx
    test   %edi,%esi
    je     jump_3a0b1
    movzbl 0x15(%ebx),%esi
    test   %edi,%esi
    jne    jump_3a0b1
    mov    0x19b(%edx),%cx
    movswl %cx,%esi
    inc    %ecx
    mov    %cx,0x19b(%edx)
    mov    %ebx,0xb(%edx,%esi,4)
    jmp    jump_3a0b1
  jump_3a0fd:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3a108:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    %eax,%ebp
    xor    %edx,%edx
    mov    data_93b98,%bx
    mov    %dx,0x8(%esp)
    test   %bx,%bx
    jle    jump_3a372
    jmp    jump_3a328
  jump_3a12f:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    cmpb   $0x1,0x1c0(%eax,%ebp,1)
    jne    jump_3a19b
    mov    $data_93bc5,%eax
    xor    %edx,%edx
    jmp    jump_3a14d
  jump_3a149:
    inc    %edx
    add    $0x60,%eax
  jump_3a14d:
    mov    data_96143,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%edx
    jge    jump_3a19b
    mov    $0x1,%edi
    mov    0x0(%ebp),%cl
    movzbl 0x14(%eax),%esi
    shl    %cl,%edi
    test   %edi,%esi
    je     jump_3a149
    mov    0x6(%esp),%ecx
    mov    $0x1,%edi
    sar    $0x10,%ecx
    movzbl 0x15(%eax),%esi
    shl    %cl,%edi
    test   %edi,%esi
    je     jump_3a149
    mov    %esp,%edi
    mov    data_93bc1,%ecx
    mov    $data_867aa,%esi
    sar    $0x18,%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    add    (%esp,%ecx,2),%bx
    jmp    jump_3a149
  jump_3a19b:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    imul   $0x1ee,%eax,%eax
    mov    $data_92e16,%edx
    add    %eax,%edx
    mov    %edx,%eax
    call   func_3ee44
    mov    %al,%cl
    mov    %al,0x10(%esp)
    mov    %edx,%eax
    call   func_3ee44
    mov    %al,0x14(%esp)
    cmp    %cl,%al
    je     jump_3a2d1
    xor    %edi,%edi
    xor    %esi,%esi
    xor    %eax,%eax
    xor    %edx,%edx
    mov    %edi,0xc(%esp)
    jmp    jump_3a1e1
  jump_3a1dd:
    add    $0x6,%edx
    inc    %eax
  jump_3a1e1:
    mov    data_93b96,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_3a244
    mov    0x6(%esp),%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    je     jump_3a1dd
    xor    %ecx,%ecx
    mov    0x0(%ebp),%cl
    cmp    %ecx,%eax
    je     jump_3a1dd
    mov    $0x1,%edi
    mov    %al,%cl
    shl    %cl,%edi
    mov    %edi,%ecx
    movzbl 0x10(%esp),%edi
    test   %edi,%ecx
    je     jump_3a21d
    add    data_93b9c(%edx),%si
  jump_3a21d:
    mov    $0x1,%edi
    mov    %al,%cl
    shl    %cl,%edi
    mov    %edi,%ecx
    movzbl 0x14(%esp),%edi
    test   %edi,%ecx
    je     jump_3a1dd
    mov    0xc(%esp),%edi
    mov    data_93b9c(%edx),%cx
    add    %ecx,%edi
    mov    %edi,0xc(%esp)
    jmp    jump_3a1dd
  jump_3a244:
    cmp    0xc(%esp),%si
    jle    jump_3a24e
    dec    %ebx
    jmp    jump_3a251
  jump_3a24e:
    add    $0x3,%ebx
  jump_3a251:
    mov    0x6(%esp),%edx
    sar    $0x10,%edx
    cmpb   $0x1,0x1c0(%edx,%ebp,1)
    jne    jump_3a2d1
    imul   $0x6,%edx,%edx
    xor    %eax,%eax
    mov    0x0(%ebp),%al
    imul   $0x6,%eax,%eax
    mov    data_93b98(%edx),%edx
    sar    $0x10,%edx
    mov    data_93b98(%eax),%eax
    mov    %edx,%ecx
    sar    $0x10,%eax
    sub    %eax,%ecx
    cmp    $0x1,%ecx
    jle    jump_3a291
    sub    $0x2,%ebx
    jmp    jump_3a2d1
  jump_3a291:
    sub    %edx,%eax
    cmp    $0x1,%eax
    jle    jump_3a2d1
    add    $0x4,%ebx
    jmp    jump_3a2d1
  jump_3a29d:
    imul   $0x6,%eax,%eax
    imul   $0x6,%ecx,%ecx
    mov    data_93b9a(%eax),%bx
    sub    data_93b9a(%ecx),%bx
    movswl %bx,%eax
    test   %eax,%eax
    jge    jump_3a2bc
    xor    %ebx,%ebx
    jmp    jump_3a2d1
  jump_3a2bc:
    cmp    $0x3,%eax
    jle    jump_3a2d1
    mov    $0x3,%ebx
    jmp    jump_3a2d1
  jump_3a2c8:
    cmp    $0x1,%dl
  jump_3a2cb:
    je     jump_3a12f
  jump_3a2d1:
    test   %bx,%bx
    je     jump_3a312
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    add    %eax,%eax
    add    %ebp,%eax
    add    %bx,0x1b2(%eax)
    mov    0x1b0(%eax),%edx
    sar    $0x10,%edx
    cmp    $0x32,%edx
    jge    jump_3a301
    movw   $0x32,0x1b2(%eax)
    jmp    jump_3a312
  jump_3a301:
    cmp    $0x3b6,%edx
    jle    jump_3a312
    movw   $0x3b6,0x1b2(%eax)
  jump_3a312:
    mov    0x8(%esp),%ecx
    inc    %ecx
    mov    data_93b98,%si
    mov    %cx,0x8(%esp)
    cmp    %si,%cx
    jge    jump_3a372
  jump_3a328:
    mov    0x6(%esp),%eax
    xor    %ecx,%ecx
    sar    $0x10,%eax
    mov    0x0(%ebp),%cl
    cmp    %ecx,%eax
    je     jump_3a312
    lea    (%eax,%ebp,1),%edx
    cmpb   $0x0,0x1c0(%edx)
    je     jump_3a312
    imul   $0x1ee,%eax,%esi
    cmpl   $0xffffffff,data_92e19(%esi)
    je     jump_3a312
    mov    0x1c0(%edx),%dl
    xor    %ebx,%ebx
    cmp    $0x2,%dl
    jb     jump_3a2c8
    jbe    jump_3a29d
    cmp    $0x3,%dl
    jmp    jump_3a2cb
  jump_3a372:
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3a37c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x24,%esp
    mov    %eax,%ebx
    mov    data_92e10,%eax
    mov    %eax,%edx
    mov    $0xa,%esi
    sar    $0x1f,%edx
    idiv   %esi
    test   %edx,%edx
    jne    jump_3a566
    mov    data_92e10,%eax
    mov    0x1d5(%ebx),%esi
    mov    %eax,%edx
    sar    $0x10,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %edx,0x20(%esp)
    fildl  0x20(%esp)
    filds  0x1d7(%ebx)
    fdivrp %st,%st(1)
    fld    %st(0)
    fmull  data_81ffc
    fstp   %st(1)
    fstps  0x18(%esp)
    testl  $0x7fffffff,0x18(%esp)
    jne    jump_3a3e3
    movl   $0x3c23d70a,0x18(%esp)
  jump_3a3e3:
    flds   0x1dd(%ebx)
    fstpl  (%esp)
    flds   0x18(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_729a6
    fmull  (%esp)
    fstpl  (%esp)
    flds   0x1e1(%ebx)
    fstpl  0x8(%esp)
    flds   0x18(%esp)
    fmuls  data_82004
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_729a6
    fmull  0x8(%esp)
    faddl  (%esp)
    fstpl  0x8(%esp)
    flds   0x1e5(%ebx)
    fstpl  (%esp)
    flds   0x18(%esp)
    fmuls  data_82008
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_729a6
    fmull  (%esp)
    faddl  0x8(%esp)
    fstps  0x1c(%esp)
    fldz
    fcomps 0x1c(%esp)
    fnstsw %ax
    sahf
    jbe    jump_3a46b
    flds   0x1c(%esp)
    fadds  data_8200c
    jmp    jump_3a475
  jump_3a46b:
    flds   0x1c(%esp)
    fadds  data_82004
  jump_3a475:
    fstps  0x1c(%esp)
    filds  0x1d9(%ebx)
    fstps  0x10(%esp)
    flds   0x1c(%esp)
    fcomps 0x10(%esp)
    fnstsw %ax
    sahf
    jbe    jump_3a496
    mov    0x10(%esp),%edx
    jmp    jump_3a4b1
  jump_3a496:
    filds  0x1db(%ebx)
    fstps  0x14(%esp)
    flds   0x1c(%esp)
    fcomps 0x14(%esp)
    fnstsw %ax
    sahf
    jae    jump_3a4b5
    mov    0x14(%esp),%edx
  jump_3a4b1:
    mov    %edx,0x1c(%esp)
  jump_3a4b5:
    mov    (%ebx),%al
    cmp    data_f458e,%al
    jne    jump_3a4d6
    flds   0x1c(%esp)
    call   func_72258
    fistpl 0x20(%esp)
    mov    0x20(%esp),%eax
    mov    %ax,data_f458c
  jump_3a4d6:
    mov    data_93bc4,%dl
    cmp    $0x2,%dl
    jne    jump_3a4ed
    flds   0x1c(%esp)
    fadds  data_82010
    jmp    jump_3a503
  jump_3a4ed:
    test   %dl,%dl
    jne    jump_3a4fd
    flds   0x1c(%esp)
    fadds  data_82008
    jmp    jump_3a503
  jump_3a4fd:
    fld1
    fadds  0x1c(%esp)
  jump_3a503:
    fstps  0x1c(%esp)
    mov    data_93b98,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_3a566
    jmp    jump_3a524
  jump_3a517:
    mov    data_93b98,%cx
    inc    %eax
    cmp    %cx,%ax
    jge    jump_3a566
  jump_3a524:
    movswl %ax,%edx
    cmpb   $0x0,0x1c0(%edx,%ebx,1)
    je     jump_3a517
    imul   $0x1ee,%edx,%esi
    cmpl   $0x0,data_92e19(%esi)
    jne    jump_3a517
    filds  0x1b2(%ebx,%edx,2)
    fld    %st(0)
    fadds  0x1c(%esp)
    fstp   %st(1)
    call   func_72258
    fistpl 0x20(%esp)
    mov    0x20(%esp),%esi
    mov    %si,0x1b2(%ebx,%edx,2)
    jmp    jump_3a517
  jump_3a566:
    add    $0x24,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_3a570:
    .long   func_3aa13
    .long   func_3aa25
    .long   func_3a9ff
    .long   func_3a9ea


/*----------------------------------------------------------------*/
func_3a580:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xf0,%esp
    mov    %eax,0xc4(%esp)
    mov    %edx,%esi
    xor    %eax,%eax
    mov    0x44(%edx),%ax
    test   %eax,%eax
    je     jump_3ab9c
    mov    0xc4(%esp),%eax
    call   func_3aba8
    cwtl
    cmp    $0x1,%eax
    je     jump_3ab9c
    mov    $0xffffffff,%edx
    mov    0x4a(%esi),%bx
    mov    %edx,0xd0(%esp)
    mov    0x4c(%esi),%dx
    xor    %ebp,%ebp
    cmp    %bx,%dx
    jb     jump_3a66c
    xor    %eax,%eax
    xor    %edx,%edx
    jmp    jump_3a5e1
  jump_3a5dd:
    add    $0x4,%edx
    inc    %eax
  jump_3a5e1:
    xor    %ebx,%ebx
    mov    0x18(%esi),%bx
    cmp    %ebx,%eax
    jge    jump_3a626
    mov    0x10(%esi),%edi
    add    %edx,%edi
    mov    0x1(%edi),%bl
    cmp    $0xff,%bl
    je     jump_3a5dd
    cmp    $0x5,%bl
    je     jump_3a5dd
    xor    %ebx,%ebx
    mov    0x1(%edi),%bl
    imul   $0x28,%ebx,%ebx
    add    $data_f3e40,%ebx
    cmpb   $0x0,0x3(%ebx)
    jne    jump_3a5dd
    mov    0x1(%ebx),%ebx
    sar    $0x18,%ebx
    cmp    %ebp,%ebx
    jle    jump_3a5dd
    mov    %ebx,%ebp
    mov    %eax,0xd0(%esp)
    jmp    jump_3a5dd
  jump_3a626:
    cmpl   $0xffffffff,0xd0(%esp)
    je     jump_3a65b
    mov    $0x1,%ecx
    mov    %esi,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    0xd0(%esp),%dx
    mov    0x1(%edi),%bl
    call   func_33c90
    mov    0x4c(%esi),%ax
    cmp    0x42(%esi),%ax
    jae    jump_3ab9c
    jmp    jump_3a67f
  jump_3a65b:
    call   func_25874
    mov    %esi,%eax
    call   func_35930
    jmp    jump_3ab9c
  jump_3a66c:
    cmp    0x42(%esi),%dx
    jae    jump_3ab9c
    cmp    $0x2,%eax
    je     jump_3ab9c
  jump_3a67f:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x42(%esi),%dx
    mov    0x4c(%esi),%ax
    sub    %eax,%edx
    test   %edx,%edx
    jg     jump_3a6a2
    mov    $0x2ba,%ebx
    mov    $data_82014,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3a6a2:
    mov    0x1c(%esi),%ax
    cmp    0x20(%esi),%ax
    setne  %al
    and    $0xff,%eax
    xor    %edx,%edx
    lea    -0x1(%eax),%ebx
    mov    0x57(%esi),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmpb   $0x2,data_92fb3(,%eax,2)
    jne    jump_3a6d2
    xor    %ebx,%ebx
  jump_3a6d2:
    xor    %eax,%eax
    mov    0x1c(%esi),%ax
    cmp    $0x2,%eax
    jl     jump_3a6e5
    test   %ebx,%ebx
    je     jump_3a86e
  jump_3a6e5:
    xor    %edx,%edx
    mov    data_f43e5,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    0x57(%esi),%cl
    mov    data_f478b(%eax),%edx
    mov    $0x1,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_3a7a4
    mov    $0x15,%edx
    mov    %esi,%eax
    call   func_349dc
    and    $0xffff,%eax
    mov    %eax,0xd0(%esp)
    cmp    $0xffff,%eax
    je     jump_3a78b
    mov    $0x1,%ecx
    xor    %edi,%edi
    mov    $0x15,%ebx
    mov    0xd0(%esp),%di
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_33c90
    mov    $0x24,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_3375c
    test   %eax,%eax
    je     jump_3ab9c
    mov    0xd0(%esp),%ebx
    mov    $0x24,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_33b68
    add    $0xf0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3a78b:
    mov    $0x24,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    call   func_33c68
    cmp    $0xffff,%eax
    jne    jump_3ab9c
  jump_3a7a4:
    mov    $0xffffffff,%ebp
    mov    $0x1869f,%ecx
    xor    %eax,%eax
    xor    %edx,%edx
    mov    %ebp,0xd0(%esp)
    jmp    jump_3a7bf
  jump_3a7bb:
    add    $0x4,%edx
    inc    %eax
  jump_3a7bf:
    xor    %ebx,%ebx
    mov    0x18(%esi),%bx
    cmp    %ebx,%eax
    jge    jump_3a833
    mov    0x10(%esi),%edi
    add    %edx,%edi
    cmpb   $0xff,0x1(%edi)
    je     jump_3a7bb
    xor    %ebx,%ebx
    mov    0x1(%edi),%bl
    imul   $0x28,%ebx,%ebx
    movzwl 0x4a(%esi),%ebp
    mov    %ebp,0xc8(%esp)
    movzwl 0x42(%esi),%ebp
    mov    %ebp,0xcc(%esp)
    mov    0xc8(%esp),%ebp
    sub    0xcc(%esp),%ebp
    add    $data_f3e40,%ebx
    mov    %ebp,0xcc(%esp)
    mov    (%ebx),%ebp
    sar    $0x18,%ebp
    cmp    0xcc(%esp),%ebp
    jge    jump_3a7bb
    mov    0x5(%ebx),%bl
    and    $0xff,%ebx
    cmp    %ecx,%ebx
    jge    jump_3a7bb
    mov    %ebx,%ecx
    mov    %eax,0xd0(%esp)
    jmp    jump_3a7bb
  jump_3a833:
    cmpl   $0xffffffff,0xd0(%esp)
    je     jump_3a86e
    mov    $0x1,%ecx
    mov    %esi,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    0xd0(%esp),%dx
    mov    0x1(%edi),%bl
    call   func_33c90
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x42(%esi),%dx
    mov    0x4c(%esi),%ax
    sub    %eax,%edx
    test   %edx,%edx
    jle    jump_3ab9c
  jump_3a86e:
    xor    %eax,%eax
    mov    0x1c(%esi),%ax
    test   %eax,%eax
    je     jump_3ab9c
    mov    0x20(%esi),%ax
    cmp    0x1c(%esi),%ax
    jne    jump_3a8a5
    xor    %edx,%edx
    mov    0x57(%esi),%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmpb   $0x2,data_92fb3(,%eax,2)
    jne    jump_3ab9c
  jump_3a8a5:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x42(%esi),%dx
    mov    0x4c(%esi),%ax
    sub    %eax,%edx
    test   %edx,%edx
    jg     jump_3a8c8
    mov    $0x30c,%ebx
    mov    $data_82020,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3a8c8:
    mov    $0xffffffff,%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   func_33c68
    mov    %eax,%edx
    cmp    $0xffff,%eax
    jne    jump_3a908
    xor    %eax,%eax
    mov    0x1c(%esi),%ax
    test   %eax,%eax
    jg     jump_3a8fa
    mov    $0x311,%ebx
    mov    $data_8202c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3a8fa:
    mov    $0x15,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    jmp    jump_3ab97
  jump_3a908:
    mov    $0x1,%ecx
    and    $0xffff,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    call   func_33c90
    mov    0xc4(%esp),%eax
    mov    %esi,%edx
    call   func_3b09c
    cmp    $0xffffffff,%eax
    je     jump_3ab9c
    mov    0xc4(%esp),%eax
    mov    %esi,%edx
    call   func_3b314
    cwtl
    mov    %eax,0xdc(%esp)
    cmp    $0xffffffff,%eax
    jne    jump_3a95f
    mov    $0x32a,%ebx
    mov    $data_82038,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3a95f:
    mov    0xdc(%esp),%eax
    xor    %ebx,%ebx
    xor    %ebp,%ebp
    xor    %edi,%edi
    shl    $0x2,%eax
    xor    %edx,%edx
    mov    %eax,0xd4(%esp)
  jump_3a978:
    cmp    $0x5,%bl
    je     jump_3a9db
    xor    %eax,%eax
    mov    data_f3e3c,%ax
    cmp    %eax,%ebx
    jge    jump_3a9db
    xor    %eax,%eax
    mov    data_f3e45(%edi),%al
    cmp    $0xff,%eax
    je     jump_3a9c0
    imul   $0x4b,%eax,%eax
    mov    data_f478b(%eax),%eax
    sar    $0x18,%eax
    mov    0x57(%esi),%cl
    mov    %eax,0xcc(%esp)
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    %eax,%ecx
    test   %ecx,0xcc(%esp)
    je     jump_3a9db
  jump_3a9c0:
    xor    %ecx,%ecx
    xor    %eax,%eax
    mov    0x4c(%esi),%cx
    mov    0x4a(%esi),%ax
    sub    %ecx,%eax
    mov    data_f3e41(%edi),%ecx
    sar    $0x18,%ecx
    cmp    %ecx,%eax
    jge    jump_3aa39
  jump_3a9db:
    inc    %ebx
    add    $0x28,%edi
    cmp    $0x27,%ebx
    jge    jump_3aac2
    jmp    jump_3a978


/*----------------------------------------------------------------*/
func_3a9ea:
/*----------------------------------------------------------------*/
    mov    (%eax),%ecx
    sar    $0x18,%ecx
    test   %ecx,%ecx
    je     jump_3a9db
    movsbw 0x3(%eax),%cx
    mov    %cx,0x1(%esp,%edx,1)
    jmp    jump_3aa5a


/*----------------------------------------------------------------*/
func_3a9ff:
/*----------------------------------------------------------------*/
    movsbl 0x2(%eax),%ecx
    test   %ecx,%ecx
    je     jump_3a9db
    movsbw 0x2(%eax),%cx
    mov    %cx,0x1(%esp,%edx,1)
    jmp    jump_3aa5a


/*----------------------------------------------------------------*/
func_3aa13:
/*----------------------------------------------------------------*/
    movsbl (%eax),%ecx
    test   %ecx,%ecx
    je     jump_3a9db
    movsbw (%eax),%cx
    mov    %cx,0x1(%esp,%edx,1)
    jmp    jump_3aa5a


/*----------------------------------------------------------------*/
func_3aa25:
/*----------------------------------------------------------------*/
    movsbl 0x1(%eax),%ecx
    test   %ecx,%ecx
    je     jump_3a9db
    movsbw 0x1(%eax),%cx
    mov    %cx,0x1(%esp,%edx,1)
    jmp    jump_3aa5a
  jump_3aa39:
    mov    $data_f3e40,%eax
    mov    0xdc(%esp),%ecx
    add    %edi,%eax
    cmp    $0x3,%ecx
    ja     jump_3aa5a
    mov    0xd4(%esp),%ecx
    jmp    *%cs:vtable_3a570(%ecx)
  jump_3aa5a:
    movsbw 0x3(%eax),%cx
    mov    %ecx,0xe4(%esp)
    movsbw 0x2(%eax),%cx
    mov    %ecx,0xe8(%esp)
    mov    0xe4(%esp),%ecx
    add    0xe8(%esp),%ecx
    add    $0x5,%edx
    mov    %ecx,0xe4(%esp)
    movsbw 0x1(%eax),%cx
    inc    %ebp
    mov    %ecx,0xe8(%esp)
    mov    0xe4(%esp),%ecx
    movsbw (%eax),%ax
    add    0xe8(%esp),%ecx
    mov    %bl,-0x5(%esp,%edx,1)
    add    %ecx,%eax
    mov    %ax,-0x2(%esp,%edx,1)
    inc    %ebx
    add    $0x28,%edi
    cmp    $0x27,%ebx
    jge    jump_3aac2
    jmp    jump_3a978
  jump_3aac2:
    test   %ebp,%ebp
    je     jump_3ab9c
    call   func_7369f
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    movb   $0xff,0xec(%esp)
    xor    %ecx,%ecx
    mov    %edx,0xd8(%esp)
    xor    %ebx,%ebx
    test   %ebp,%ebp
    jg     jump_3aaf7
    jmp    jump_3ab83
  jump_3aaf7:
    mov    %esp,%edi
  jump_3aaf9:
    xor    %edx,%edx
    mov    %esi,%eax
    mov    (%edi),%dl
    mov    %edi,0xe0(%esp)
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3ab4b
    xor    %edx,%edx
    mov    (%edi),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    data_f3e48(,%eax,8),%dx
    mov    0x44(%esi),%bx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x46,%eax
    jge    jump_3ab83
    mov    (%edi),%al
    mov    %al,0xec(%esp)
    jmp    jump_3ab83
  jump_3ab4b:
    cmpl   $0x41,0xd8(%esp)
    jle    jump_3ab5d
    mov    0x1(%edi),%eax
    sar    $0x10,%eax
    jmp    jump_3ab61
  jump_3ab5d:
    movswl 0x1(%edi),%eax
  jump_3ab61:
    cmp    %ecx,%eax
    jle    jump_3ab77
    mov    %eax,%ecx
    mov    0xe0(%esp),%eax
    mov    (%eax),%al
    mov    %al,0xec(%esp)
  jump_3ab77:
    inc    %ebx
    add    $0x5,%edi
    cmp    %ebp,%ebx
    jl     jump_3aaf9
  jump_3ab83:
    mov    0xec(%esp),%ch
    cmp    $0xff,%ch
    je     jump_3ab9c
    mov    %esi,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ch,%dl
  jump_3ab97:
    call   func_33c68
  jump_3ab9c:
    add    $0xf0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3aba8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,0x4(%esp)
    mov    %edx,%ebp
    mov    $0x16,%edx
    mov    %ebp,%eax
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3ac5b
    xor    %eax,%eax
    mov    0x44(%ebp),%ax
    cmp    $0x4,%eax
    jge    jump_3abf0
    xor    %edx,%edx
    xor    %eax,%eax
    mov    0x1c(%ebp),%dx
    mov    0x20(%ebp),%ax
    sub    %eax,%edx
    cmp    $0x5,%edx
    jge    jump_3ac5b
  jump_3abf0:
    cmpl   $0xaa,data_92e10
    jg     jump_3ac09
    mov    data_93bc1,%eax
    sar    $0x18,%eax
    cmp    $0x2,%eax
    jne    jump_3ac5b
  jump_3ac09:
    xor    %edx,%edx
    mov    data_f41b5,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    mov    0x4(%esp),%ecx
    sub    %edx,%eax
    mov    (%ecx),%cl
    mov    data_f478b(%eax),%eax
    mov    $0x1,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_3ac5b
    mov    $0x16,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_33c68
    test   %eax,%eax
    jne    jump_3b082
    mov    $0x2,%eax
    jmp    jump_3b092
  jump_3ac5b:
    mov    %ebp,%eax
    call   func_34eec
    test   %eax,%eax
    je     jump_3acde
    mov    0x57(%ebp),%al
    cmp    data_f458e,%al
    jne    jump_3ac7e
    cmpl   $0xffffffff,data_90ba4
    jne    jump_3acde
  jump_3ac7e:
    mov    $0x17,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_33c68
    mov    %eax,%esi
    cmp    $0xffff,%eax
    je     jump_3acde
    mov    0x4(%esp),%eax
    mov    %ebp,%edx
    call   func_3c230
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_3acb5
    mov    $0x3b9,%ebx
    mov    $data_82044,%edx
    call   func_25878
  jump_3acb5:
    mov    0x4(%esp),%eax
    mov    %ebp,%ebx
    mov    %ecx,%edx
    call   func_3b7a8
    mov    %ecx,%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    %si,%dx
    call   func_34bb0
    mov    $0x1,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3acde:
    xor    %eax,%eax
    mov    0x1e(%ebp),%ax
    cmp    $0x2,%eax
    jle    jump_3ad6c
    xor    %edx,%edx
    mov    0x57(%ebp),%dl
    mov    $0x2,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    test   %edx,%edx
    jne    jump_3ad6c
    xor    %eax,%eax
    mov    0x44(%ebp),%ax
    cmp    $0x14,%eax
    jle    jump_3ad6c
    call   func_7369f
    mov    %eax,%edx
    mov    $0x64,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    cmp    $0x3,%edx
    jge    jump_3ad6c
    mov    $0xffff,%ebx
    mov    $0x19,%edx
    mov    %ebp,%eax
    call   func_3375c
    test   %eax,%eax
    je     jump_3ad6c
    mov    $0x19,%edx
    mov    %ebp,%eax
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3ad6c
    mov    $0x19,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_33c68
    mov    $0x1,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3ad6c:
    xor    %eax,%eax
    mov    0x1e(%ebp),%ax
    cmp    $0x2,%eax
    jle    jump_3adfa
    xor    %edx,%edx
    mov    0x57(%ebp),%dl
    mov    $0x3,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    test   %edx,%edx
    je     jump_3adfa
    xor    %eax,%eax
    mov    0x44(%ebp),%ax
    cmp    $0x19,%eax
    jle    jump_3adfa
    call   func_7369f
    mov    %eax,%edx
    mov    $0x64,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    cmp    $0x2,%edx
    jge    jump_3adfa
    mov    $0xffff,%ebx
    mov    $0x18,%edx
    mov    %ebp,%eax
    call   func_3375c
    test   %eax,%eax
    je     jump_3adfa
    mov    $0x18,%edx
    mov    %ebp,%eax
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3adfa
    mov    $0x18,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_33c68
    mov    $0x1,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3adfa:
    xor    %eax,%eax
    mov    0x1e(%ebp),%ax
    cmp    $0x2,%eax
    jl     jump_3b090
    lea    0xc(%esp),%edi
    mov    data_867b4,%ax
    mov    $data_867b0,%esi
    mov    %eax,0x10(%esp)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    mov    0xa(%ebp),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x5,%eax
    mov    data_93bc7(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %eax,%edx
    mov    0x4(%esp),%eax
    mov    0x7(%eax),%eax
    xor    %ecx,%ecx
    mov    0x2(%eax),%eax
    shl    $0x2,%edx
    sar    $0x10,%eax
    mov    %ecx,(%esp)
    mov    data_c5beb(%edx,%eax,1),%al
    and    $0xff,%eax
    cmp    $0x3,%eax
    jge    jump_3ae7b
    mov    $0x3,%edx
    sub    %eax,%edx
    lea    (%edx,%edx,1),%eax
    mov    %eax,(%esp)
  jump_3ae7b:
    xor    %eax,%eax
    mov    0x59(%ebp),%al
    xor    %ebx,%ebx
    test   %eax,%eax
    jne    jump_3ae8a
    movb   $0x1,0x59(%ebp)
  jump_3ae8a:
    xor    %eax,%eax
    xor    %edx,%edx
    mov    0x44(%ebp),%ax
    mov    0x46(%ebp),%dx
    xor    %ecx,%ecx
    add    %eax,%edx
    mov    0x59(%ebp),%cl
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    0x4(%esp),%edx
    mov    0x1a8(%edx),%edx
    mov    (%esp),%esi
    sar    $0x10,%edx
    sub    %esi,%edx
    cmp    %edx,%eax
    jle    jump_3af83
    xor    %edx,%edx
    jmp    jump_3aec3
  jump_3aec2:
    inc    %edx
  jump_3aec3:
    movswl %dx,%eax
    cmp    $0x2,%eax
    jge    jump_3af06
    xor    %ecx,%ecx
    mov    0x10(%esp,%eax,1),%cl
    imul   $0x28,%ecx,%ecx
    movzbl data_f3e45(%ecx),%esi
    imul   $0x4b,%esi,%esi
    mov    0x4(%esp),%ecx
    mov    $0x1,%edi
    mov    (%ecx),%cl
    mov    data_f478b(%esi),%esi
    shl    %cl,%edi
    sar    $0x18,%esi
    test   %edi,%esi
    je     jump_3aec2
    movswl %bx,%esi
    mov    0x10(%esp,%eax,1),%al
    inc    %ebx
    mov    %al,0x8(%esp,%esi,1)
    jmp    jump_3aec2
  jump_3af06:
    xor    %ecx,%ecx
    test   %bx,%bx
    jg     jump_3af15
    jmp    jump_3af4e
  jump_3af0f:
    inc    %ecx
    cmp    %bx,%cx
    jge    jump_3af4e
  jump_3af15:
    movswl %cx,%esi
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    0x8(%esp,%esi,1),%dl
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3af0f
    mov    %ebp,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    0x8(%esp,%esi,1),%dl
    call   func_33c68
    mov    $0x1,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3af4e:
    test   %bx,%bx
    je     jump_3af83
    call   func_7369f
    mov    %eax,%edx
    movswl %bx,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    mov    0x8(%esp,%edx,1),%dl
    and    $0xff,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_33c68
    mov    $0x1,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3af83:
    xor    %eax,%eax
    mov    0x58(%ebp),%al
    xor    %ebx,%ebx
    test   %eax,%eax
    jne    jump_3af92
    movb   $0x1,0x58(%ebp)
  jump_3af92:
    xor    %eax,%eax
    xor    %edx,%edx
    mov    0x44(%ebp),%ax
    mov    0x46(%ebp),%dx
    xor    %ecx,%ecx
    add    %eax,%edx
    mov    0x58(%ebp),%cl
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    0x4(%esp),%edx
    mov    0x1aa(%edx),%edx
    mov    (%esp),%edi
    sar    $0x10,%edx
    sub    %edi,%edx
    cmp    %edx,%eax
    jle    jump_3b090
    xor    %edx,%edx
    jmp    jump_3afcb
  jump_3afca:
    inc    %edx
  jump_3afcb:
    movswl %dx,%eax
    cmp    $0x3,%eax
    jge    jump_3b013
    xor    %ecx,%ecx
    mov    0xc(%esp,%eax,1),%cl
    imul   $0x28,%ecx,%ecx
    mov    data_f3e45(%ecx),%cl
    and    $0xff,%ecx
    imul   $0x4b,%ecx,%ecx
    mov    data_f478b(%ecx),%esi
    mov    0x4(%esp),%ecx
    mov    $0x1,%edi
    mov    (%ecx),%cl
    sar    $0x18,%esi
    shl    %cl,%edi
    test   %edi,%esi
    je     jump_3afca
    movswl %bx,%ecx
    mov    0xc(%esp,%eax,1),%al
    inc    %ebx
    mov    %al,0x8(%esp,%ecx,1)
    jmp    jump_3afca
  jump_3b013:
    xor    %ecx,%ecx
    test   %bx,%bx
    jg     jump_3b022
    jmp    jump_3b05b
  jump_3b01c:
    inc    %ecx
    cmp    %bx,%cx
    jge    jump_3b05b
  jump_3b022:
    movswl %cx,%esi
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    0x8(%esp,%esi,1),%dl
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3b01c
    mov    %ebp,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    0x8(%esp,%esi,1),%dl
    call   func_33c68
    mov    $0x1,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b05b:
    test   %bx,%bx
    je     jump_3b090
    call   func_7369f
    mov    %eax,%edx
    movswl %bx,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    mov    0x8(%esp,%edx,1),%dl
    and    $0xff,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_33c68
  jump_3b082:
    mov    $0x1,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b090:
    xor    %eax,%eax
  jump_3b092:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3b09c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    0x66(%edx),%al
    and    $0x2,%al
    and    $0xff,%eax
    je     jump_3b0d6
    mov    $0x26,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_33c68
    cmp    $0xffff,%eax
    je     jump_3b0d6
    andb   $0xfd,0x66(%ecx)
    mov    $0xffffffff,%eax
    jmp    jump_3b30b
  jump_3b0d6:
    xor    %eax,%eax
    mov    0x44(%ecx),%ax
    cmp    $0x4,%eax
    jl     jump_3b309
    xor    %eax,%eax
    mov    0x48(%ecx),%ax
    test   %eax,%eax
    je     jump_3b309
    mov    $0x16,%edx
    mov    %ecx,%eax
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_3b309
    xor    %eax,%eax
    xor    %edx,%edx
    mov    0x1c(%ecx),%ax
    mov    0x20(%ecx),%dx
    sub    %edx,%eax
    cmp    $0x3,%eax
    jl     jump_3b309
    xor    %eax,%eax
    mov    0x59(%ecx),%al
    cmp    $0x6,%eax
    jge    jump_3b230
    mov    $0xffff,%ebx
    mov    $0x12,%edx
    mov    %ecx,%eax
    call   func_3375c
    test   %eax,%eax
    je     jump_3b230
    mov    $0x12,%edx
    mov    %ecx,%eax
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3b180
  jump_3b165:
    mov    $0x12,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_33c68
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b180:
    mov    0xa(%ecx),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x5,%eax
    mov    data_93bc7(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %eax,%edx
    mov    0x7(%esi),%eax
    mov    0x2(%eax),%eax
    shl    $0x2,%edx
    sar    $0x10,%eax
    mov    data_c5beb(%edx,%eax,1),%al
    and    $0xff,%eax
    jne    jump_3b1ca
    mov    $0xc8,%esi
    jmp    jump_3b1e7
  jump_3b1ca:
    cmp    $0x1,%eax
    jne    jump_3b1d6
    mov    $0xe1,%esi
    jmp    jump_3b1e7
  jump_3b1d6:
    cmp    $0x4,%eax
    jge    jump_3b1e2
    mov    $0x12c,%esi
    jmp    jump_3b1e7
  jump_3b1e2:
    mov    $0x190,%esi
  jump_3b1e7:
    mov    data_92e10,%eax
    sub    0x67(%ecx),%eax
    xor    %edx,%edx
    div    %esi
    xor    %edx,%edx
    mov    0x59(%ecx),%dl
    cmp    %edx,%eax
    jbe    jump_3b230
    mov    $0xffff,%ebx
    mov    $0x13,%edx
    mov    %ecx,%eax
    call   func_3375c
    test   %eax,%eax
    je     jump_3b165
    mov    $0x13,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_33c68
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b230:
    xor    %edx,%edx
    mov    0x57(%ecx),%dl
    mov    $0x2,%esi
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %esi
    test   %edx,%edx
    je     jump_3b2ae
    xor    %eax,%eax
    mov    0x44(%ecx),%ax
    cmp    $0x14,%eax
    jle    jump_3b2ae
    call   func_7369f
    mov    %eax,%edx
    mov    $0x64,%esi
    sar    $0x1f,%edx
    idiv   %esi
    cmp    $0x4,%edx
    jge    jump_3b2ae
    mov    $0xffff,%ebx
    mov    $0xb,%edx
    mov    %ecx,%eax
    call   func_3375c
    test   %eax,%eax
    je     jump_3b2ae
    mov    $0xb,%edx
    mov    %ecx,%eax
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3b2ae
    mov    $0xb,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_33c68
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b2ae:
    mov    %esp,%edi
    mov    $data_867b8,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    xor    %edi,%edi
    jmp    jump_3b2bc
  jump_3b2bb:
    inc    %edi
  jump_3b2bc:
    movswl %di,%esi
    cmp    $0x5,%esi
    jge    jump_3b309
    mov    (%esp,%esi,1),%al
    movzbl %al,%esi
    mov    $0xffff,%ebx
    mov    %esi,%edx
    mov    %ecx,%eax
    call   func_3375c
    test   %eax,%eax
    je     jump_3b2bb
    mov    %esi,%edx
    mov    %ecx,%eax
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_3b2bb
    mov    %esi,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_33c68
    mov    $0xffffffff,%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b309:
    xor    %eax,%eax
  jump_3b30b:
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3b314:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %edx,%ebx
    xor    %ecx,%ecx
    xor    %eax,%eax
    mov    0x4a(%edx),%cx
    mov    0x42(%edx),%ax
    sub    %eax,%ecx
    cmp    $0x2,%ecx
    jge    jump_3b342
    xor    %ecx,%ecx
    mov    0x4c(%edx),%cx
    sub    %ecx,%eax
    cmp    $0x2,%eax
    jge    jump_3b342
    mov    $0x3,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b342:
    xor    %eax,%eax
    mov    0x48(%ebx),%ax
    cmp    $0x2,%eax
    jge    jump_3b356
    mov    $0x2,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b356:
    xor    %ecx,%ecx
    mov    0x44(%ebx),%cx
    cmp    $0x2,%ecx
    jl     jump_3b45f
    xor    %esi,%esi
    mov    0x46(%ebx),%si
    cmp    $0x1,%esi
    jge    jump_3b379
    mov    $0x1,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b379:
    cmp    $0x4,%ecx
    jl     jump_3b45f
    test   %eax,%eax
    jne    jump_3b399
    mov    0x42(%ebx),%ax
    cmp    0x4a(%ebx),%ax
    jae    jump_3b399
    mov    $0x2,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b399:
    mov    data_866e4,%eax
    xor    %ecx,%ecx
    mov    %eax,%edx
    mov    0x48(%ebx),%cx
    sar    $0x1f,%edx
    idiv   %ecx
    cmp    $0xf,%eax
    jle    jump_3b3d9
    xor    %ecx,%ecx
    xor    %eax,%eax
    mov    0x4a(%ebx),%cx
    mov    0x42(%ebx),%ax
    sub    %eax,%ecx
    cmp    $0x3,%ecx
    jle    jump_3b3d9
    xor    %ecx,%ecx
    mov    0x4c(%ebx),%cx
    sub    %ecx,%eax
    cmp    $0x1,%eax
    je     jump_3b3d9
    mov    $0x2,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b3d9:
    xor    %ecx,%ecx
    mov    data_f4744,%cx
    dec    %ecx
    lea    0x0(,%ecx,4),%eax
    add    %ecx,%eax
    mov    %eax,%ecx
    shl    $0x4,%eax
    sub    %ecx,%eax
    mov    data_f478b(%eax),%esi
    mov    0x57(%ebx),%cl
    mov    $0x1,%eax
    sar    $0x18,%esi
    shl    %cl,%eax
    test   %eax,%esi
    jne    jump_3b45f
    mov    $0xc,%edx
    mov    %ebx,%eax
    xor    %ecx,%ecx
    xor    %esi,%esi
    mov    0x44(%ebx),%cx
    mov    0x46(%ebx),%si
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_3b434
    mov    %ecx,%eax
    sar    %eax
    add    %eax,%esi
  jump_3b434:
    mov    $0xe,%edx
    mov    %ebx,%eax
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xfff,%eax
    je     jump_3b452
    mov    %esi,%eax
    sar    %eax
    add    %eax,%ecx
  jump_3b452:
    cmp    %esi,%ecx
    jle    jump_3b45f
    mov    $0x1,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b45f:
    xor    %eax,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3b468:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x78,%esp
    mov    %eax,%ebp
    xor    %edx,%edx
    xor    %esi,%esi
    mov    %edx,0x70(%esp)
    jmp    jump_3b47e
  jump_3b47d:
    inc    %esi
  jump_3b47e:
    xor    %eax,%eax
    movswl %si,%edx
    mov    data_f4744,%ax
    cmp    %eax,%edx
    jge    jump_3b4d5
    xor    %edi,%edi
    mov    0x70(%esp),%di
    cmp    $0x20,%edi
    jge    jump_3b4d5
    imul   $0x4b,%edx,%eax
    mov    0x0(%ebp),%cl
    mov    data_f478b(%eax),%eax
    mov    $0x1,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    jne    jump_3b47d
    mov    $data_f4744,%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    %cl,%bl
    mov    %si,%dx
    call   func_4218c
    test   %eax,%eax
    je     jump_3b47d
    mov    %si,(%esp,%edi,2)
    inc    %edi
    mov    %edi,0x70(%esp)
    jmp    jump_3b47d
  jump_3b4d5:
    mov    $0xffffffff,%ebx
    mov    0x70(%esp),%ecx
    mov    %bx,0x74(%esp)
    test   %cx,%cx
    je     jump_3b5bc
    mov    $0xb,%ecx
    lea    0x40(%esp),%edi
    mov    $data_867be,%esi
    mov    $0x1,%edx
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    data_f4902,%eax
    mov    0x0(%ebp),%cl
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_3b531
    call   func_7369f
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    cmp    $0x2d,%edx
    jge    jump_3b531
    movw   $0xfffe,0x74(%esp)
  jump_3b531:
    xor    %esi,%esi
    jmp    jump_3b536
  jump_3b535:
    inc    %esi
  jump_3b536:
    xor    %eax,%eax
    movswl %si,%edx
    mov    0x70(%esp),%ax
    cmp    %eax,%edx
    jge    jump_3b584
    mov    0x72(%esp),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_3b584
    xor    %eax,%eax
    jmp    jump_3b555
  jump_3b554:
    inc    %eax
  jump_3b555:
    movswl %ax,%edx
    cmp    $0x17,%edx
    jge    jump_3b535
    mov    0x72(%esp),%ebx
    sar    $0x10,%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_3b535
    movswl %si,%ebx
    add    %ebx,%ebx
    mov    0x40(%esp,%edx,2),%di
    cmp    (%esp,%ebx,1),%di
    jne    jump_3b554
    mov    (%esp,%ebx,1),%dx
    mov    %dx,0x74(%esp)
    jmp    jump_3b554
  jump_3b584:
    mov    0x72(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jge    jump_3b5ab
    call   func_7369f
    xor    %ebx,%ebx
    mov    %eax,%edx
    mov    0x70(%esp),%bx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    (%esp,%edx,2),%ax
    mov    %ax,0x74(%esp)
  jump_3b5ab:
    xor    %eax,%eax
    mov    0x0(%ebp),%al
    mov    0x74(%esp),%edx
    mov    %dx,data_f6492(,%eax,2)
  jump_3b5bc:
    add    $0x78,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3b5c8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %eax,%edi
    mov    %edx,%ecx
    mov    0x58(%edx),%ah
    cmp    $0x1,%ah
    je     jump_3b71f
    cmp    $0x2,%ah
    je     jump_3b71f
    cmp    $0x5,%ah
    je     jump_3b71f
    xor    %eax,%eax
    mov    0x54(%edx),%edx
    mov    data_f458e,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    jne    jump_3b714
    mov    data_90ba4,%edx
    test   %edx,%edx
    jne    jump_3b714
    movb   $0x0,0x5d(%ecx)
    mov    %edx,0x5e(%ecx)
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b623:
    cmpb   $0x3,0x58(%ecx)
    jne    jump_3b649
    mov    %ecx,%edx
    mov    0x59(%ecx),%eax
    call   func_34ce4
    cmp    $0xffffffff,%eax
    je     jump_3b649
    mov    $0x54f,%ebx
    mov    $data_82050,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3b649:
    cmpb   $0x4,0x58(%ecx)
    je     jump_3b660
    mov    $0x553,%ebx
    mov    $data_8205c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3b660:
    cmpl   $0xffffffff,0x28(%ecx)
    jne    jump_3b683
    mov    %edi,%eax
    mov    0x59(%ecx),%edx
    call   func_3c4ac
    test   %eax,%eax
    je     jump_3b683
    movb   $0x2,0x5d(%ecx)
    mov    %eax,0x5e(%ecx)
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b683:
    cmpw   $0x0,0x19b(%edi)
    je     jump_3b71f
    cmpl   $0x0,0x8(%ecx)
    jg     jump_3b6a1
    cmpl   $0x0,0xc(%ecx)
    jle    jump_3b71f
  jump_3b6a1:
    mov    $0x64,%ebx
    mov    0x19b(%edi),%si
    xor    %eax,%eax
    mov    %ebx,0x4(%esp)
    mov    %eax,(%esp)
    xor    %ebx,%ebx
    test   %si,%si
    jg     jump_3b6c9
    jmp    jump_3b6fe
  jump_3b6bf:
    inc    %ebx
    cmp    0x19b(%edi),%bx
    jge    jump_3b6fe
  jump_3b6c9:
    movswl %bx,%eax
    shl    $0x2,%eax
    lea    (%edi,%eax,1),%esi
    mov    %ecx,%eax
    mov    0xb(%esi),%edx
    call   func_45e60
    movswl %ax,%edx
    test   %edx,%edx
    jne    jump_3b6eb
    mov    0xb(%esi),%eax
    mov    %eax,(%esp)
    jmp    jump_3b6fe
  jump_3b6eb:
    cmp    0x4(%esp),%ax
    jge    jump_3b6bf
    mov    %eax,0x4(%esp)
    mov    0xb(%esi),%eax
    mov    %eax,(%esp)
    jmp    jump_3b6bf
  jump_3b6fe:
    mov    (%esp),%edx
    test   %edx,%edx
    je     jump_3b71f
    mov    %ecx,%eax
    call   func_45e60
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_3b714:
    mov    0x5d(%ecx),%al
    test   %al,%al
    je     jump_3b623
  jump_3b71f:
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3b728:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_3c310
    mov    $0x1,%ebx
    mov    $data_93bc5,%edx
    mov    data_96145,%cx
    mov    %eax,%ebp
    xor    %eax,%eax
    test   %cx,%cx
    jle    jump_3b773
    mov    %ebx,%esi
    mov    (%edi),%cl
    shl    %cl,%esi
  jump_3b759:
    xor    %ecx,%ecx
    mov    0x14(%edx),%cl
    cmp    %esi,%ecx
    jne    jump_3b763
    inc    %ebx
  jump_3b763:
    mov    data_96145,%cx
    inc    %eax
    add    $0x60,%edx
    cmp    %cx,%ax
    jl     jump_3b759
  jump_3b773:
    mov    %ebx,%eax
    mov    0x7(%edi),%ebx
    sub    %ebp,%eax
    mov    0x14(%ebx),%bl
    mov    $0x1,%edx
    mov    (%edi),%cl
    and    $0xff,%ebx
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_3b791
    inc    %eax
  jump_3b791:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_3b798:
    .long   func_3b991
    .long   func_3b9be
    .long   func_3b9eb
    .long   func_3ba18


/*----------------------------------------------------------------*/
func_3b7a8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ebx,%edi
    test   %ebx,%ebx
    jne    jump_3b7ca
    mov    $0x5ad,%ebx
    mov    $data_82068,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3b7ca:
    mov    $0x1,%eax
    xor    %edx,%edx
    mov    0x0(%ebp),%cl
    mov    %edx,0x4(%esp)
    mov    data_f47d6,%edx
    shl    %cl,%eax
    sar    $0x18,%edx
    test   %eax,%edx
    je     jump_3b81b
    mov    data_f4d1c,%edx
    mov    $0x1,%ebx
    sar    $0x18,%edx
    mov    %ebx,0x4(%esp)
    test   %eax,%edx
    je     jump_3b81b
    mov    data_f50a0,%edx
    mov    $0x2,%ecx
    sar    $0x18,%edx
    mov    %ecx,0x4(%esp)
    test   %eax,%edx
    je     jump_3b81b
    movl   $0x3,0x4(%esp)
  jump_3b81b:
    cmpw   $0x0,0x4(%esp)
    jne    jump_3b834
    mov    $0x5c3,%ebx
    mov    $data_82074,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3b834:
    cmpw   $0x4,0x4(%esp)
    jl     jump_3b84d
    mov    $0x5ca,%ebx
    mov    $data_82080,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3b84d:
    mov    data_92e10,%eax
    mov    %eax,%edx
    mov    $0xfa,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %ax,(%esp)
    mov    -0x2(%esp),%eax
    sar    $0x10,%eax
    mov    0x4(%esp),%ecx
    cmp    $0x1,%eax
    jge    jump_3b87a
    movw   $0x1,(%esp)
    jmp    jump_3b885
  jump_3b87a:
    cmp    $0x8,%eax
    jle    jump_3b885
    movw   $0x8,(%esp)
  jump_3b885:
    movswl %cx,%eax
    test   %eax,%eax
    jl     jump_3b8dd
    movsbl %cl,%edx
    mov    %esi,%eax
    call   func_44984
    mov    %esi,%eax
    mov    -0x2(%esp),%edx
    call   func_4586c
    sar    $0x10,%edx
    imul   0x15a(%esi),%edx
    add    %eax,%edx
    xor    %eax,%eax
    mov    0x44(%edi),%ax
    test   %eax,%eax
    jne    jump_3b8bd
    movw   $0x1,0x44(%edi)
  jump_3b8bd:
    mov    %edx,%eax
    xor    %ebx,%ebx
    sar    $0x1f,%edx
    mov    0x44(%edi),%bx
    idiv   %ebx
    lea    0x1(%eax),%edx
    mov    0x1ae(%ebp),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jl     jump_3b8dd
    dec    %ecx
    jmp    jump_3b885
  jump_3b8dd:
    movsbl %cl,%edx
    mov    %esi,%eax
    call   func_44984
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    0x0(%ebp),%bl
    xor    %edx,%edx
    call   func_45898
    mov    $0x4,%edx
    mov    %al,0xc(%esp)
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    0x0(%ebp),%bl
    call   func_45898
    mov    $0x2,%edx
    mov    %al,0x10(%esp)
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    0x0(%ebp),%bl
    call   func_45898
    mov    $0x1,%edx
    mov    %al,0x8(%esp)
    xor    %ebx,%ebx
    mov    %esi,%eax
    mov    0x0(%ebp),%bl
    call   func_45898
    mov    $0x2c,%edx
    mov    %al,%bl
    mov    %esi,%eax
    mov    $0x2b,%bh
    call   func_45930
    test   %eax,%eax
    je     jump_3b94a
    mov    $0x2c,%bh
  jump_3b94a:
    cmpb   $0xff,0x10(%esp)
    jne    jump_3b956
    movb   $0x1b,0x10(%esp)
  jump_3b956:
    cmpb   $0xff,0x8(%esp)
    jne    jump_3b962
    movb   $0x10,0x8(%esp)
  jump_3b962:
    cmpb   $0xff,0xc(%esp)
    jne    jump_3b96f
    xor    %dl,%dl
    mov    %dl,0xc(%esp)
  jump_3b96f:
    cmp    $0xff,%bl
    jne    jump_3b97a
    mov    $0xa,%bl
  jump_3b97a:
    cmp    $0x3,%cx
    ja     jump_3ba3d
    xor    %eax,%eax
    mov    %cx,%ax
    jmp    *%cs:vtable_3b798(,%eax,4)


/*----------------------------------------------------------------*/
func_3b991:
/*----------------------------------------------------------------*/
    mov    0x9(%esp),%ecx
    push   %esi
    movsbl %bh,%eax
    mov    0x11(%esp),%edx
    push   %eax
    sar    $0x18,%ecx
    sar    $0x18,%edx
    movsbl %bl,%eax
    mov    0xd(%esp),%ebx
    push   %eax
    sar    $0x18,%ebx
    mov    %ebp,%eax
    call   func_3ba48
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3b9be:
/*----------------------------------------------------------------*/
    mov    0x9(%esp),%ecx
    push   %esi
    movsbl %bh,%eax
    mov    0x11(%esp),%edx
    push   %eax
    sar    $0x18,%ecx
    sar    $0x18,%edx
    movsbl %bl,%eax
    mov    0xd(%esp),%ebx
    push   %eax
    sar    $0x18,%ebx
    mov    %ebp,%eax
    call   func_3bac4
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3b9eb:
/*----------------------------------------------------------------*/
    mov    0x9(%esp),%ecx
    push   %esi
    movsbl %bh,%eax
    mov    0x11(%esp),%edx
    push   %eax
    sar    $0x18,%ecx
    sar    $0x18,%edx
    movsbl %bl,%eax
    mov    0xd(%esp),%ebx
    push   %eax
    sar    $0x18,%ebx
    mov    %ebp,%eax
    call   func_3bc44
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3ba18:
/*----------------------------------------------------------------*/
    mov    0x9(%esp),%ecx
    push   %esi
    movsbl %bh,%eax
    mov    0x11(%esp),%edx
    push   %eax
    sar    $0x18,%ecx
    sar    $0x18,%edx
    movsbl %bl,%eax
    mov    0xd(%esp),%ebx
    push   %eax
    sar    $0x18,%ebx
    mov    %ebp,%eax
    call   func_3bebc
  jump_3ba3d:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3ba48:
/*----------------------------------------------------------------*/
    push   %esi
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %bl,0x4(%esp)
    mov    %cl,(%esp)
    mov    0x18(%esp),%ecx
    movsbl %dl,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_44ae8
    mov    0x1(%esp),%edx
    mov    $0x1,%ebx
    mov    %ecx,%eax
    sar    $0x18,%edx
    call   func_44ae8
    mov    0x11(%esp),%edx
    mov    $0x2,%ebx
    mov    %ecx,%eax
    sar    $0x18,%edx
    call   func_44ae8
    mov    %esi,%eax
    mov    (%esp),%dl
    call   func_3c400
    test   %eax,%eax
    je     jump_3ba9b
    mov    $0x47,%dl
  jump_3ba9b:
    mov    $0x3,%ebx
    movsbl %dl,%esi
    mov    %ecx,%eax
    mov    %esi,%edx
    call   func_44ae8
    mov    $0x4,%ebx
    mov    %esi,%edx
    mov    %ecx,%eax
    call   func_44ae8
    add    $0x8,%esp
    pop    %esi
    ret    $0xc


/*----------------------------------------------------------------*/
func_3bac4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    0x1c(%esp),%esi
    mov    %eax,%edi
    mov    %bl,(%esp)
    mov    %cl,0x4(%esp)
    movsbl %dl,%ecx
    mov    %esi,%eax
    xor    %ebx,%ebx
    mov    %ecx,%edx
    call   func_44ae8
    mov    $0x1,%ebx
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_44ae8
    mov    -0x3(%esp),%edx
    mov    $0x2,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    call   func_44ae8
    mov    0x15(%esp),%edx
    mov    $0x3,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    call   func_44ae8
    mov    0x1(%esp),%edx
    mov    $0x4,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    call   func_44ae8
    mov    %edi,%eax
    mov    $0x5,%ecx
    call   func_3c400
    test   %eax,%eax
    je     jump_3bb83
    mov    $0x47,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_44ae8
    mov    $0x6,%ebx
    mov    $0x47,%edx
    mov    %esi,%eax
    call   func_44ae8
    mov    data_92e10,%edx
    mov    $0x7,%ecx
    cmp    $0x190,%edx
    jle    jump_3bb83
    mov    $0x7,%ebx
    mov    $0x49,%edx
    mov    %esi,%eax
    mov    $0x8,%ecx
    call   func_44ae8
  jump_3bb83:
    mov    $0x24,%edx
    mov    %esi,%eax
    call   func_45930
    test   %eax,%eax
    je     jump_3bba2
    mov    $0x24,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_44ae8
    inc    %ecx
  jump_3bba2:
    cmpl   $0x320,data_92e10
    jle    jump_3bbbd
    mov    $0x49,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_44ae8
    inc    %ecx
  jump_3bbbd:
    cmpb   $0x2b,0x18(%esp)
    je     jump_3bbec
    cmpl   $0x320,data_92e10
    jg     jump_3bbec
    xor    %edx,%edx
    mov    (%edi),%dl
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_93b98(,%eax,2),%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jl     jump_3bbfd
  jump_3bbec:
    mov    0x15(%esp),%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    inc    %ecx
  jump_3bbf8:
    call   func_44ae8
  jump_3bbfd:
    cmp    $0xa,%ecx
    jge    jump_3bc39
    call   func_7369f
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    lea    0x1(%ecx),%eax
    cmp    $0x23,%edx
    jle    jump_3bc2a
    mov    0x1(%esp),%edx
    mov    %ecx,%ebx
    sar    $0x18,%edx
    mov    %eax,%ecx
    mov    %esi,%eax
    jmp    jump_3bbf8
  jump_3bc2a:
    mov    0x11(%esp),%edx
    mov    %ecx,%ebx
    sar    $0x18,%edx
    mov    %eax,%ecx
    mov    %esi,%eax
    jmp    jump_3bbf8
  jump_3bc39:
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret    $0xc


/*----------------------------------------------------------------*/
func_3bc44:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x20(%esp),%ch
    mov    0x24(%esp),%esi
    mov    %eax,%ebp
    mov    %dl,0x8(%esp)
    mov    %bl,0x4(%esp)
    mov    0x5(%esp),%edi
    mov    %esi,%eax
    sar    $0x18,%edi
    xor    %ebx,%ebx
    mov    %edi,%edx
    call   func_44ae8
    mov    $0x1,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_44ae8
    mov    $0x2,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_44ae8
    mov    0x1(%esp),%edx
    mov    $0x3,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    call   func_44ae8
    mov    $0x4,%ebx
    movsbl %ch,%edx
    mov    %esi,%eax
    call   func_44ae8
    mov    $0x5,%ebx
    movsbl %cl,%edx
    mov    %esi,%eax
    mov    $0x6,%edi
    call   func_44ae8
    cmp    $0x8,%cl
    je     jump_3bced
    mov    $0x8,%edx
    mov    %esi,%eax
    call   func_45930
    test   %eax,%eax
    je     jump_3bced
    mov    $0x6,%ebx
    mov    $0x8,%edx
    mov    %esi,%eax
    mov    $0x7,%edi
    call   func_44ae8
    jmp    jump_3bd18
  jump_3bced:
    cmp    $0x5,%cl
    je     jump_3bd0b
    mov    $0x5,%edx
    mov    %esi,%eax
    call   func_45930
    test   %eax,%eax
    je     jump_3bd0b
    mov    $0x5,%edx
    mov    %edi,%ebx
    jmp    jump_3bd10
  jump_3bd0b:
    mov    %edi,%ebx
    movsbl %cl,%edx
  jump_3bd10:
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3bd18:
    call   func_7369f
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    lea    0x1(%edi),%eax
    mov    %eax,(%esp)
    cmp    $0x32,%edx
    jle    jump_3bd48
    mov    0x19(%esp),%edx
    mov    %edi,%ebx
    sar    $0x18,%edx
    mov    %eax,%edi
    mov    %esi,%eax
    call   func_44ae8
    jmp    jump_3bd7d
  jump_3bd48:
    cmp    $0x7,%cl
    je     jump_3bd70
    mov    $0x7,%edx
    mov    %esi,%eax
    call   func_45930
    test   %eax,%eax
    je     jump_3bd70
    mov    $0x7,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    mov    (%esp),%edi
    jmp    jump_3bd7d
  jump_3bd70:
    mov    %edi,%ebx
    movsbl %cl,%edx
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3bd7d:
    mov    %ebp,%eax
    call   func_3c400
    test   %eax,%eax
    je     jump_3bddb
    mov    $0x47,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    mov    $0x47,%edx
    inc    %edi
    mov    %esi,%eax
    mov    %edi,%ebx
    call   func_44ae8
    mov    data_93bc4,%ah
    inc    %edi
    cmp    $0x2,%ah
    jne    jump_3bdc0
    mov    $0x49,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3bdc0:
    cmpl   $0x190,data_92e10
    jle    jump_3bddb
    mov    $0x49,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3bddb:
    cmpl   $0x3e8,data_92e10
    jle    jump_3bdf6
    mov    $0x49,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3bdf6:
    lea    0x1(%edi),%eax
    cmp    $0x2b,%ch
    je     jump_3be0a
    cmpl   $0x320,data_92e10
    jle    jump_3be18
  jump_3be0a:
    mov    %edi,%ebx
    movsbl %ch,%edx
    mov    %eax,%edi
    mov    %esi,%eax
    call   func_44ae8
  jump_3be18:
    mov    $0x24,%edx
    mov    %esi,%eax
    call   func_45930
    test   %eax,%eax
    je     jump_3be37
    mov    $0x24,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3be37:
    mov    $0x39,%edx
    mov    %esi,%eax
    call   func_45930
    test   %eax,%eax
    je     jump_3be56
    mov    $0x39,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3be56:
    xor    %edx,%edx
    mov    0x0(%ebp),%dl
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_93b98(,%eax,2),%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jle    jump_3be80
    mov    %edi,%ebx
    movsbl %ch,%edx
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3be80:
    mov    $0x41,%edx
    mov    %esi,%eax
    call   func_45930
    test   %eax,%eax
    je     jump_3be9f
    mov    $0x41,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3be9f:
    mov    0x5(%esp),%ecx
    mov    %edi,%ebx
    mov    %esi,%edx
    mov    %ebp,%eax
    sar    $0x18,%ecx
    call   func_3c16c
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0xc


/*----------------------------------------------------------------*/
func_3bebc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x24(%esp),%esi
    mov    %eax,%ebp
    mov    %dl,0x8(%esp)
    mov    %bl,0x4(%esp)
    mov    0x5(%esp),%edi
    mov    %esi,%eax
    sar    $0x18,%edi
    xor    %ebx,%ebx
    mov    %edi,%edx
    call   func_44ae8
    mov    $0x1,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_44ae8
    mov    $0x2,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_44ae8
    mov    $0x3,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_44ae8
    mov    0x1(%esp),%edi
    mov    $0x4,%ebx
    sar    $0x18,%edi
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_44ae8
    mov    $0x5,%ebx
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_44ae8
    mov    0x1d(%esp),%edx
    mov    $0x6,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    call   func_44ae8
    mov    $0x7,%ebx
    movsbl %cl,%edx
    mov    %esi,%eax
    call   func_44ae8
    mov    0x19(%esp),%edx
    mov    $0x8,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    call   func_44ae8
    mov    $0x8,%edx
    mov    %esi,%eax
    mov    $0x9,%edi
    call   func_45930
    test   %eax,%eax
    je     jump_3bf8f
    mov    $0x9,%ebx
    mov    $0x8,%edx
    mov    %esi,%eax
    mov    $0xa,%edi
    call   func_44ae8
  jump_3bf8f:
    mov    $0x7,%edx
    mov    %esi,%eax
    call   func_45930
    lea    0x1(%edi),%edx
    test   %eax,%eax
    je     jump_3bfaf
    mov    %edi,%ebx
    mov    %esi,%eax
    mov    %edx,%edi
    mov    $0x7,%edx
    jmp    jump_3bfba
  jump_3bfaf:
    mov    %edi,%ebx
    movsbl %cl,%eax
    mov    %edx,%edi
    mov    %eax,%edx
    mov    %esi,%eax
  jump_3bfba:
    call   func_44ae8
    mov    $0x5,%edx
    mov    %esi,%eax
    call   func_45930
    lea    0x1(%edi),%ebx
    test   %eax,%eax
    je     jump_3bfdb
    mov    $0x5,%edx
    mov    %edi,%eax
    jmp    jump_3bfe0
  jump_3bfdb:
    mov    %edi,%eax
    movsbl %cl,%edx
  jump_3bfe0:
    mov    %ebx,%edi
    mov    %eax,%ebx
    mov    %esi,%eax
    call   func_44ae8
    mov    %ebp,%eax
    lea    0x1(%edi),%edx
    call   func_3c400
    mov    %edx,(%esp)
    lea    0x2(%edi),%ecx
    test   %eax,%eax
    je     jump_3c071
    mov    $0x47,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    mov    (%esp),%ebx
    mov    $0x47,%edx
    mov    %esi,%eax
    call   func_44ae8
    lea    0x1(%ecx),%edi
    mov    $0x47,%edx
    mov    %ecx,%ebx
    mov    %esi,%eax
    call   func_44ae8
    cmpb   $0x2,data_93bc4
    jne    jump_3c045
    mov    $0x49,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3c045:
    cmpl   $0x190,data_92e10
    jle    jump_3c09c
    mov    $0x49,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    mov    $0x49,%edx
    inc    %edi
    mov    %esi,%eax
    mov    %edi,%ebx
    call   func_44ae8
    inc    %edi
    jmp    jump_3c09c
  jump_3c071:
    cmpl   $0x3e8,data_92e10
    jle    jump_3c09c
    mov    $0x49,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    mov    (%esp),%ebx
    mov    $0x49,%edx
    mov    %esi,%eax
    mov    %ecx,%edi
    call   func_44ae8
  jump_3c09c:
    mov    0x20(%esp),%dl
    lea    0x1(%edi),%eax
    cmp    $0x2b,%dl
    je     jump_3c0b4
    cmpl   $0x320,data_92e10
    jle    jump_3c0c6
  jump_3c0b4:
    mov    0x1d(%esp),%edx
    mov    %edi,%ebx
    sar    $0x18,%edx
    mov    %eax,%edi
    mov    %esi,%eax
    call   func_44ae8
  jump_3c0c6:
    mov    $0x24,%edx
    mov    %esi,%eax
    call   func_45930
    test   %eax,%eax
    je     jump_3c0e5
    mov    $0x24,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3c0e5:
    mov    $0x39,%edx
    mov    %esi,%eax
    call   func_45930
    test   %eax,%eax
    je     jump_3c104
    mov    $0x39,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3c104:
    mov    $0x41,%edx
    mov    %esi,%eax
    call   func_45930
    test   %eax,%eax
    je     jump_3c123
    mov    $0x41,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    call   func_44ae8
    inc    %edi
  jump_3c123:
    xor    %ebx,%ebx
    mov    0x0(%ebp),%bl
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    mov    data_93b98(,%eax,2),%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jle    jump_3c151
    mov    0x1d(%esp),%edx
    mov    %edi,%ebx
    mov    %esi,%eax
    sar    $0x18,%edx
    inc    %edi
    call   func_44ae8
  jump_3c151:
    mov    0x5(%esp),%ecx
    mov    %edi,%ebx
    mov    %esi,%edx
    mov    %ebp,%eax
    sar    $0x18,%ecx
    call   func_3c16c
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0xc


/*----------------------------------------------------------------*/
func_3c16c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3c,%esp
    mov    %edx,%ebp
    mov    %ebx,0x34(%esp)
    mov    %cl,0x38(%esp)
    lea    0x1c(%esp),%edi
    mov    $data_867ec,%esi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    jmp    jump_3c193
  jump_3c192:
    inc    %ebx
  jump_3c193:
    movswl %bx,%esi
    cmp    $0x16,%esi
    jge    jump_3c1ba
    mov    0x19(%esp,%esi,1),%edx
    mov    %ebp,%eax
    sar    $0x18,%edx
    call   func_45930
    test   %eax,%eax
    je     jump_3c192
    movswl %cx,%eax
    mov    0x1c(%esp,%esi,1),%dl
    inc    %ecx
    mov    %dl,(%esp,%eax,1)
    jmp    jump_3c192
  jump_3c1ba:
    mov    0x34(%esp),%eax
    cmp    0x15a(%ebp),%eax
    jge    jump_3c201
    test   %cx,%cx
    je     jump_3c201
    call   func_7369f
    mov    %eax,%edx
    movswl %cx,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x34(%esp),%ebx
    mov    %edx,%esi
    mov    %ebp,%eax
    mov    -0x3(%esp,%edx,1),%edx
    lea    0x1(%ebx),%edi
    sar    $0x18,%edx
    dec    %ecx
    call   func_44ae8
    movswl %cx,%eax
    mov    (%esp,%eax,1),%al
    mov    %edi,0x34(%esp)
    mov    %al,(%esp,%esi,1)
    jmp    jump_3c1ba
  jump_3c201:
    mov    0x34(%esp),%eax
    cmp    0x15a(%ebp),%eax
    jge    jump_3c226
    mov    0x35(%esp),%edx
    mov    %eax,%ebx
    lea    0x1(%eax),%ecx
    sar    $0x18,%edx
    mov    %ebp,%eax
    mov    %ecx,0x34(%esp)
    call   func_44ae8
    jmp    jump_3c201
  jump_3c226:
    add    $0x3c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_3c230:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    test   %edx,%edx
    jne    jump_3c250
    mov    $0x73d,%ebx
    mov    $data_8208c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3c250:
    mov    %ecx,%eax
    call   func_3b728
    test   %eax,%eax
    jg     jump_3c273
    mov    $0x741,%ebx
    mov    $data_82098,%edx
    xor    %eax,%eax
    call   func_25888
    xor    %eax,%eax
    jmp    jump_3c2fb
  jump_3c273:
    xor    %edx,%edx
    mov    $data_92e10,%eax
    mov    (%ecx),%dl
    call   func_1fd68
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_3c296
    mov    $0x746,%ebx
    mov    $data_820a4,%edx
    call   func_25878
  jump_3c296:
    test   %ecx,%ecx
    je     jump_3c2f9
    mov    %ecx,%eax
    call   func_4586c
    mov    %eax,(%esp)
    test   %ax,%ax
    jne    jump_3c2ba
    mov    $0x752,%ebx
    mov    $data_820b0,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3c2ba:
    mov    0x44(%esi),%di
    test   %di,%di
    jne    jump_3c2d4
    mov    $0x755,%ebx
    mov    $data_820bc,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3c2d4:
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    (%esp),%dx
    mov    %di,%bx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    data_92e10,%edx
    movb   $0x1,0x58(%ecx)
    add    %edx,%eax
    mov    %esi,0x59(%ecx)
    inc    %eax
    mov    %eax,0x52(%ecx)
  jump_3c2f9:
    mov    %ecx,%eax
  jump_3c2fb:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3c304:
/*----------------------------------------------------------------*/
    mov    (%eax),%eax
    mov    (%edx),%edx
    mov    0x52(%eax),%eax
    sub    0x52(%edx),%eax
    ret


/*----------------------------------------------------------------*/
func_3c310:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%ebp
    mov    %edx,0x4(%esp)
    mov    $data_ba095,%eax
    xor    %edx,%edx
    xor    %esi,%esi
    mov    %edx,0x8(%esp)
    test   %ebx,%ebx
    je     jump_3c330
    mov    %edx,(%ebx)
  jump_3c330:
    mov    0x8(%esp),%edx
    mov    0x4(%esp),%edi
    shl    $0x2,%edx
    xor    %ecx,%ecx
    add    %edi,%edx
    jmp    jump_3c347
  jump_3c341:
    inc    %ecx
    add    $0x162,%eax
  jump_3c347:
    movswl %cx,%edi
    cmp    $0x6b,%edi
    jge    jump_3c3a3
    mov    data_c3489,%edi
    sar    $0x10,%edi
    cmp    %edi,%esi
    jge    jump_3c3a3
    mov    0x54(%eax),%edi
    sar    $0x10,%edi
    mov    %edi,0xc(%esp)
    cmp    $0xffffffff,%edi
    je     jump_3c341
    movzbl 0x0(%ebp),%edi
    mov    %edi,(%esp)
    mov    0xc(%esp),%edi
    inc    %esi
    cmp    (%esp),%edi
    jne    jump_3c341
    cmpl   $0x0,0x4(%esp)
    je     jump_3c385
    mov    %eax,(%edx)
  jump_3c385:
    mov    0x8(%esp),%edi
    inc    %edi
    add    $0x4,%edx
    mov    %edi,0x8(%esp)
    test   %ebx,%ebx
    je     jump_3c341
    mov    0xa7(%eax),%edi
    sar    $0x18,%edi
    inc    %edi
    add    %edi,(%ebx)
    jmp    jump_3c341
  jump_3c3a3:
    mov    0x4(%esp),%ebp
    test   %ebp,%ebp
    je     jump_3c3c0
    mov    $func_3c304,%ecx
    mov    $0x4,%ebx
    mov    0x8(%esp),%edx
    mov    %ebp,%eax
    call   func_72316
  jump_3c3c0:
    mov    0x8(%esp),%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3c3cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    xor    %ebx,%ebx
    xor    %eax,%eax
    xor    %edx,%edx
    jmp    jump_3c3de
  jump_3c3da:
    add    $0x7b,%edx
    inc    %eax
  jump_3c3de:
    mov    data_ba091,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_3c3f8
    mov    data_ab0ae(%edx),%cl
    cmp    (%esi),%cl
    jne    jump_3c3da
    inc    %ebx
    jmp    jump_3c3da
  jump_3c3f8:
    mov    %ebx,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3c400:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    xor    %edx,%edx
    mov    (%eax),%dl
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_93b9a(,%eax,2),%cx
    mov    data_93b9e(,%eax,2),%bx
    movswl %cx,%eax
    test   %eax,%eax
    jne    jump_3c440
    movswl %bx,%eax
    cmp    $0x5,%eax
    jle    jump_3c440
    cmpl   $0x258,data_92e10
    jl     jump_3c4a3
  jump_3c440:
    cmpl   $0x708,data_92e10
    jle    jump_3c456
  jump_3c44c:
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_3c456:
    call   func_7369f
    mov    %eax,%edx
    mov    $0x64,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    %edx,%eax
    movswl %cx,%edx
    cmp    $0x1,%edx
    jne    jump_3c48c
    movswl %bx,%edx
    cmp    $0x8,%edx
    jle    jump_3c48c
    cmpl   $0x3e8,data_92e10
    jge    jump_3c48c
    cmp    $0x32,%eax
    jle    jump_3c44c
    jmp    jump_3c4a3
  jump_3c48c:
    cmp    $0x14,%eax
    jg     jump_3c499
    movswl %bx,%eax
    cmp    $0xa,%eax
    jge    jump_3c4a3
  jump_3c499:
    mov    $0xffffffff,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_3c4a3:
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3c4ac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    xor    %edx,%edx
    mov    data_93b98,%bx
    mov    %edx,0x4(%esp)
    xor    %edx,%edx
    xor    %eax,%eax
    mov    %edx,(%esp)
    test   %bx,%bx
    jg     jump_3c4e0
    jmp    jump_3c51a
  jump_3c4d3:
    mov    data_93b98,%cx
    inc    %eax
    cmp    %cx,%ax
    jge    jump_3c51a
  jump_3c4e0:
    movswl %ax,%ecx
    imul   $0x1ee,%ecx,%ebp
    cmpl   $0xffffffff,data_92e19(%ebp)
    je     jump_3c4d3
    movzbl (%edi),%ebp
    cmp    %ebp,%ecx
    je     jump_3c4d3
    cmpb   $0x3,0x1c0(%ecx,%edi,1)
    jne    jump_3c4d3
    mov    $0x1,%edx
    movswl %ax,%ecx
    movzbl 0x14(%esi),%ebp
    shl    %cl,%edx
    test   %edx,%ebp
    je     jump_3c4d3
    jmp    jump_3c644
  jump_3c51a:
    cmpb   $0x2,0x19d(%edi)
    setne  %al
    xor    %ebx,%ebx
    movzbl %al,%ebp
    mov    0x5a(%esi),%ax
    dec    %ebp
    test   %ax,%ax
    jle    jump_3c568
    jmp    jump_3c53c
  jump_3c535:
    inc    %ebx
    cmp    0x5a(%esi),%bx
    jge    jump_3c568
  jump_3c53c:
    movswl %bx,%eax
    mov    0x46(%esi,%eax,4),%ecx
    xor    %eax,%eax
    mov    0x57(%ecx),%al
    cmp    $0xff,%eax
    jne    jump_3c535
    mov    %ebp,%edx
    mov    %ecx,%eax
    call   func_34f78
    cmp    0x4(%esp),%ax
    jbe    jump_3c535
    mov    %eax,0x4(%esp)
    mov    %ecx,(%esp)
    jmp    jump_3c535
  jump_3c568:
    mov    $0x1e,%ebx
    mov    $0x1,%ebp
    xor    %eax,%eax
    mov    (%edi),%cl
    mov    0x14(%esi),%al
    shl    %cl,%ebp
    mov    %ebx,0xc(%esp)
    test   %ebp,%eax
    jne    jump_3c5f3
    xor    %ecx,%ecx
    mov    0x44(%esi),%ax
    mov    %cx,0x8(%esp)
    test   %ax,%ax
    jg     jump_3c5b3
    jmp    jump_3c634
  jump_3c59c:
    mov    0x8(%esp),%ebx
    inc    %ebx
    mov    0x44(%esi),%cx
    mov    %bx,0x8(%esp)
    cmp    %cx,%bx
    jge    jump_3c634
  jump_3c5b3:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    mov    0x2c(%esi,%eax,4),%ecx
    test   %ecx,%ecx
    jne    jump_3c5d3
    mov    $0x808,%ebx
    mov    $data_820c8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3c5d3:
    mov    (%ecx),%ebp
    cmp    %ebp,%esi
    jne    jump_3c5de
    mov    0x4(%ecx),%ecx
    jmp    jump_3c5e0
  jump_3c5de:
    mov    %ebp,%ecx
  jump_3c5e0:
    mov    $0x1,%eax
    movzbl 0x14(%ecx),%ebp
    mov    (%edi),%cl
    shl    %cl,%eax
    test   %eax,%ebp
    je     jump_3c59c
    jmp    jump_3c62f
  jump_3c5f3:
    mov    data_93b98,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jg     jump_3c610
    jmp    jump_3c634
  jump_3c603:
    mov    data_93b98,%dx
    inc    %eax
    cmp    %dx,%ax
    jge    jump_3c634
  jump_3c610:
    movswl %ax,%ecx
    cmpb   $0x2,0x1c0(%ecx,%edi,1)
    jne    jump_3c603
    mov    $0x1,%edx
    movswl %ax,%ecx
    movzbl 0x14(%esi),%ebp
    shl    %cl,%edx
    cmp    %edx,%ebp
    jne    jump_3c603
  jump_3c62f:
    shrw   0xc(%esp)
  jump_3c634:
    mov    0x4(%esp),%eax
    cmp    0xc(%esp),%ax
    jbe    jump_3c644
    mov    (%esp),%eax
    jmp    jump_3c646
  jump_3c644:
    xor    %eax,%eax
  jump_3c646:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3c650:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    xor    %ebx,%ebx
    xor    %edx,%edx
    xor    %eax,%eax
    jmp    jump_3c664
  jump_3c660:
    add    $0x4b,%eax
    inc    %edx
  jump_3c664:
    xor    %ecx,%ecx
    mov    data_f4744,%cx
    cmp    %ecx,%edx
    jge    jump_3c68a
    mov    $0x1,%ebp
    mov    data_f478b(%eax),%esi
    mov    (%edi),%cl
    sar    $0x18,%esi
    shl    %cl,%ebp
    test   %ebp,%esi
    je     jump_3c660
    inc    %ebx
    jmp    jump_3c660
  jump_3c68a:
    mov    %ebx,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_3c694:
    .long   func_3ce1f
    .long   func_3d116
    .long   func_3d003
    .long   func_3d23d
    .long   func_3d23d
    .long   func_3d23d
    .long   func_3d0a6


/*----------------------------------------------------------------*/
func_3c6b0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3c0,%esp
    mov    %eax,%edi
    mov    %edx,0x39c(%esp)
    mov    %ebx,0x394(%esp)
    test   %ebx,%ebx
    jne    jump_3c6df
    mov    $0x840,%ebx
    mov    $data_820d4,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3c6df:
    mov    0x39c(%esp),%eax
    mov    0x39c(%esp),%edx
    mov    0x15(%eax),%al
    mov    0x14(%edx),%ah
    mov    (%edi),%cl
    or     %ah,%al
    xor    %edx,%edx
    mov    %al,0x3bc(%esp)
    mov    $0x1,%eax
    mov    0x3bc(%esp),%dl
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_3ce10
    mov    0x39c(%esp),%edx
    mov    %edi,%eax
    call   func_39e58
    xor    %esi,%esi
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x39c(%esp),%eax
    mov    %dx,0x3a4(%esp)
    mov    %dx,0x3b4(%esp)
    mov    %dx,0x3a0(%esp)
    mov    %dx,0x3ac(%esp)
    lea    0x1ac(%esp),%edx
    mov    %ebx,0x38c(%esp)
    call   func_1d754
    mov    %eax,%ebp
    jmp    jump_3c769
  jump_3c768:
    inc    %esi
  jump_3c769:
    movswl %si,%eax
    cmp    %ebp,%eax
    jge    jump_3c813
    mov    0x1ac(%esp,%eax,4),%ecx
    test   %ecx,%ecx
    jne    jump_3c790
    mov    $0x86b,%ebx
    mov    $data_820e0,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3c790:
    mov    0x54(%ecx),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    (%edi),%al
    cmp    %eax,%edx
    jne    jump_3c768
    cmpl   $0x0,0x88(%ecx)
    jle    jump_3c768
    cmpb   $0x1,0x58(%ecx)
    je     jump_3c768
    mov    0x3a0(%esp),%edx
    mov    0x88(%ecx),%ax
    mov    0x3ac(%esp),%ebx
    add    %eax,%edx
    add    0x94(%ecx),%bx
    mov    0x3a2(%esp),%eax
    sar    $0x10,%eax
    mov    %dx,0x3a0(%esp)
    mov    %ecx,(%esp,%eax,4)
    mov    0x3a4(%esp),%eax
    mov    %bx,0x3ac(%esp)
    inc    %eax
    mov    0x5d(%ecx),%dh
    mov    %ax,0x3a4(%esp)
    test   %dh,%dh
    je     jump_3c768
    movl   $0xffffffff,0x38c(%esp)
    jmp    jump_3c768
  jump_3c813:
    mov    0x39c(%esp),%edx
    mov    0x5a(%edx),%bx
    xor    %eax,%eax
    test   %bx,%bx
    jle    jump_3c869
    jmp    jump_3c835
  jump_3c827:
    mov    0x39c(%esp),%edx
    inc    %eax
    cmp    0x5a(%edx),%ax
    jge    jump_3c869
  jump_3c835:
    movswl %ax,%edx
    mov    0x39c(%esp),%ecx
    shl    $0x2,%edx
    add    %ecx,%edx
    mov    0x46(%edx),%edx
    mov    (%edi),%cl
    cmp    0x57(%edx),%cl
    jne    jump_3c827
    mov    0x3b2(%esp),%ebx
    sar    $0x10,%ebx
    mov    %edx,0x358(%esp,%ebx,4)
    incw   0x3b4(%esp)
    jmp    jump_3c827
  jump_3c869:
    mov    0x3a2(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_3c889
    mov    0x3b2(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_3ce10
  jump_3c889:
    mov    0x39c(%esp),%eax
    cmp    0x7(%edi),%eax
    je     jump_3ca3f
    mov    0x3a2(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_3ca3f
    mov    data_f458e,%bl
    cmp    (%edi),%bl
    je     jump_3ca3f
    xor    %edx,%edx
    mov    data_f7429,%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    (%edi),%cl
    mov    data_f478b(%eax),%edx
    mov    $0x1,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_3ca3f
    mov    %edi,%eax
    call   func_3ee44
    mov    %al,%bl
    mov    0x7(%edi),%eax
    xor    %esi,%esi
    mov    0x14(%eax),%bh
    mov    0x15(%eax),%dl
    mov    %bh,%al
    or     %bh,%dl
    and    $0x7f,%al
    and    $0xff,%eax
    jne    jump_3c911
    mov    $0xffffffff,%esi
  jump_3c911:
    test   %esi,%esi
    jne    jump_3c9aa
    xor    %eax,%eax
    and    $0xff,%edx
    mov    %bl,%al
    test   %eax,%edx
    je     jump_3c9aa
    lea    0x384(%esp),%ecx
    mov    0x39c(%esp),%ebx
    mov    $0x2,%edx
    mov    %edi,%eax
    call   func_4119c
    lea    0x388(%esp),%ecx
    mov    0x39c(%esp),%ebx
    mov    $0x3,%edx
    mov    %eax,%ebp
    mov    %edi,%eax
    call   func_4119c
    mov    0x384(%esp),%ecx
    cmp    $0x1,%ecx
    jge    jump_3c97a
    movl   $0x1,0x384(%esp)
    jmp    jump_3c98d
  jump_3c97a:
    cmp    $0x1869f,%ecx
    jle    jump_3c98d
    movl   $0x1869f,0x384(%esp)
  jump_3c98d:
    mov    0x384(%esp),%edx
    mov    0x388(%esp),%ebx
    add    %edx,%edx
    cmp    %ebx,%edx
    jg     jump_3c9a5
    cmp    %eax,%ebp
    jle    jump_3c9aa
  jump_3c9a5:
    mov    $0xffffffff,%esi
  jump_3c9aa:
    test   %esi,%esi
    je     jump_3ca3f
    mov    0x3a4(%esp),%esi
    xor    %ecx,%ecx
    test   %si,%si
    jg     jump_3c9d2
    jmp    jump_3ca3f
  jump_3c9c5:
    mov    0x3a4(%esp),%ebx
    inc    %ecx
    cmp    %bx,%cx
    jge    jump_3ca3f
  jump_3c9d2:
    movswl %cx,%esi
    shl    $0x2,%esi
    mov    (%esp,%esi,1),%ebx
    cmpb   $0x4,0x58(%ebx)
    jne    jump_3c9c5
    cmpl   $0x0,0x88(%ebx)
    je     jump_3c9c5
    mov    $0x24,%edx
    mov    %ebx,%eax
    call   func_44bb8
    cmp    $0xffffffff,%eax
    je     jump_3c9c5
    imul   $0x7,%eax,%eax
    lea    0xab(%ebx),%edx
    movb   $0x1,0x62(%ebx)
    add    %eax,%edx
    mov    %ebx,%eax
    mov    %edx,0x63(%ebx)
    xor    %edx,%edx
    movb   $0x5,0x67(%ebx)
    call   func_45378
    test   $0x1,%al
    je     jump_3c9c5
    mov    0x394(%esp),%eax
    movb   $0x3,(%eax)
    mov    0x394(%esp),%edx
    mov    (%esp,%esi,1),%eax
    mov    $0xffffffff,%ebx
    mov    %eax,0x1(%edx)
    jmp    jump_3ce12
  jump_3ca3f:
    xor    %ecx,%ecx
    xor    %eax,%eax
    xor    %ebp,%ebp
    xor    %edx,%edx
    mov    %cx,0x3b0(%esp)
    mov    %eax,0x37c(%esp)
    mov    $0x1,%al
    jmp    jump_3cac3
  jump_3ca5a:
    mov    data_f458e,%cl
    mov    (%edi),%ah
    cmp    %cl,%ah
    je     jump_3cab8
    xor    %ecx,%ecx
    mov    data_f458e,%cl
    cmp    %ecx,%ebx
    jne    jump_3cab8
    mov    0x39c(%esp),%ebx
    mov    0x2(%ebx),%ebx
    sar    $0x10,%ebx
    mov    data_c8304(%ebx),%bl
    mov    $0x1,%esi
    mov    %ah,%cl
    and    $0xff,%ebx
    shl    %cl,%esi
    test   %esi,%ebx
    je     jump_3cab8
    mov    0x3ae(%esp),%ebx
    sar    $0x10,%ebx
    mov    0x36c(%esp,%ebx,2),%ch
    or     $0x20,%ch
    mov    $0xffffffff,%ebp
    mov    %ch,0x36c(%esp,%ebx,2)
  jump_3cab8:
    incw   0x3b0(%esp)
  jump_3cac0:
    inc    %edx
    add    %al,%al
  jump_3cac3:
    movswl %dx,%ebx
    cmp    $0x7,%ebx
    jge    jump_3cba1
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    %al,%cl
    mov    0x3bc(%esp),%bl
    mov    %ecx,0x398(%esp)
    test   %ecx,%ebx
    je     jump_3cac0
    mov    0x3ae(%esp),%ebx
    sar    $0x10,%ebx
    add    %ebx,%ebx
    mov    0x39c(%esp),%esi
    xor    %ecx,%ecx
    mov    %dx,0x36c(%esp,%ebx,1)
    mov    0x15(%esi),%cl
    mov    0x398(%esp),%esi
    test   %esi,%ecx
    je     jump_3cb1a
    orb    $0x8,0x36c(%esp,%ebx,1)
  jump_3cb1a:
    mov    0x39c(%esp),%ebx
    xor    %ecx,%ecx
    mov    0x14(%ebx),%cl
    xor    %ebx,%ebx
    mov    %al,%bl
    test   %ebx,%ecx
    je     jump_3cb40
    mov    0x3ae(%esp),%ebx
    sar    $0x10,%ebx
    orb    $0x10,0x36c(%esp,%ebx,2)
  jump_3cb40:
    movswl %dx,%ebx
    cmpb   $0x2,0x1c0(%edi,%ebx,1)
    jne    jump_3ca5a
    mov    data_f458e,%bl
    cmp    (%edi),%bl
    jne    jump_3cb7c
    cmpl   $0xffffffff,data_90ba4
    je     jump_3cb7c
    mov    0x39c(%esp),%ecx
    xor    %ebx,%ebx
    mov    0x15(%ecx),%bl
    xor    %ecx,%ecx
    mov    %al,%cl
    test   %ebx,%ecx
    je     jump_3cab8
  jump_3cb7c:
    mov    0x3ae(%esp),%ebx
    sar    $0x10,%ebx
    mov    0x36c(%esp,%ebx,2),%cl
    or     $0x20,%cl
    mov    $0xffffffff,%ebp
    mov    %cl,0x36c(%esp,%ebx,2)
    jmp    jump_3cab8
  jump_3cba1:
    mov    0x3ae(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jg     jump_3cbc0
    mov    $0x8e9,%ebx
    mov    $data_820ec,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3cbc0:
    mov    0x3ae(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_3cbda
    movl   $0xffffffff,0x37c(%esp)
  jump_3cbda:
    cmpl   $0x0,0x37c(%esp)
    jne    jump_3ccdd
    test   %ebp,%ebp
    jne    jump_3ccdd
    mov    (%edi),%al
    cmp    data_f458e,%al
    jne    jump_3cc07
    cmpl   $0xffffffff,data_90ba4
    jne    jump_3ccdd
  jump_3cc07:
    xor    %esi,%esi
    mov    0x3b0(%esp),%eax
    mov    %si,0x3b8(%esp)
    test   %ax,%ax
    jle    jump_3ccdd
    mov    0x3b0(%esp),%esi
  jump_3cc28:
    mov    0x3b6(%esp),%eax
    sar    $0x10,%eax
    mov    0x36c(%esp,%eax,2),%ax
    xor    %ah,%ah
    and    $0x7,%al
    mov    %ax,0x3a8(%esp)
    mov    0x3a6(%esp),%eax
    sar    $0x10,%eax
    cmpb   $0x3,0x1c0(%edi,%eax,1)
    jne    jump_3cc68
    mov    0x3b0(%esp),%edx
    xor    %eax,%eax
    test   %dx,%dx
    jg     jump_3cc8c
  jump_3cc68:
    mov    0x3b8(%esp),%ecx
    inc    %ecx
    mov    %cx,0x3b8(%esp)
    cmp    %si,%cx
    jge    jump_3ccdd
    jmp    jump_3cc28
  jump_3cc7f:
    mov    0x3b0(%esp),%ebx
    inc    %eax
    cmp    %bx,%ax
    jge    jump_3cc68
  jump_3cc8c:
    mov    0x3a6(%esp),%ecx
    sar    $0x10,%ecx
    imul   $0x1ee,%ecx,%ecx
    movswl %ax,%edx
    add    %edx,%edx
    mov    0x36c(%esp,%edx,1),%bx
    xor    %bh,%bh
    and    $0x7,%bl
    movswl %bx,%ebx
    cmpb   $0x2,data_92fd6(%ecx,%ebx,1)
    jne    jump_3cc7f
    cmpb   $0x3,0x1c0(%edi,%ebx,1)
    je     jump_3cc7f
    mov    0x36c(%esp,%edx,1),%ch
    or     $0x20,%ch
    mov    $0xffffffff,%ebp
    mov    %ch,0x36c(%esp,%edx,1)
    jmp    jump_3cc7f
  jump_3ccdd:
    cmp    $0xffffffff,%ebp
    jne    jump_3cd78
    mov    (%edi),%al
    cmp    data_f458e,%al
    jne    jump_3cd05
    cmp    data_90ba4,%ebp
    je     jump_3cd05
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    jne    jump_3cd78
  jump_3cd05:
    mov    0x394(%esp),%esi
    push   %esi
    mov    0x3a0(%esp),%ebp
    mov    0x3ae(%esp),%eax
    push   %ebp
    sar    $0x10,%eax
    push   %eax
    mov    0x3aa(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    lea    0x368(%esp),%eax
    mov    0x3b2(%esp),%ecx
    push   %eax
    mov    0x3c6(%esp),%eax
    mov    0x3c2(%esp),%edx
    sar    $0x10,%eax
    lea    0x380(%esp),%ebx
    push   %eax
    lea    0x18(%esp),%eax
    sar    $0x10,%ecx
    push   %eax
    sar    $0x10,%edx
    mov    %edi,%eax
    call   func_3d284
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_3ce12
    test   %eax,%eax
    je     jump_3ce12
  jump_3cd78:
    mov    data_f458e,%dl
    cmp    (%edi),%dl
    jne    jump_3cd99
    cmpl   $0x0,0x38c(%esp)
    jne    jump_3cd99
    cmpl   $0x0,data_90ba4
    je     jump_3ce10
  jump_3cd99:
    mov    0x3a4(%esp),%eax
    xor    %esi,%esi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    test   %ax,%ax
    jle    jump_3ce08
    jmp    jump_3cdba
  jump_3cdad:
    mov    0x3a4(%esp),%edx
    inc    %ebx
    cmp    %dx,%bx
    jge    jump_3ce08
  jump_3cdba:
    movswl %bx,%eax
    mov    (%esp,%eax,4),%eax
    cmpb   $0x0,0x5d(%eax)
    jne    jump_3cde6
    mov    data_f458e,%dh
    cmp    (%edi),%dh
    jne    jump_3cdd9
    cmpl   $0xffffffff,data_90ba4
    jne    jump_3cde6
  jump_3cdd9:
    movswl %bx,%edx
    mov    %edi,%eax
    mov    (%esp,%edx,4),%edx
    call   func_3b5c8
  jump_3cde6:
    movswl %bx,%eax
    mov    (%esp,%eax,4),%edx
    movswl %cx,%eax
    cmp    0x88(%edx),%eax
    jge    jump_3cdad
    cmpb   $0x0,0x5d(%edx)
    je     jump_3cdad
    mov    %edx,%esi
    mov    0x88(%edx),%cx
    jmp    jump_3cdad
  jump_3ce08:
    test   %esi,%esi
    jne    jump_3d26e
  jump_3ce10:
    xor    %ebx,%ebx
  jump_3ce12:
    mov    %ebx,%eax
    add    $0x3c0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3ce1f:
/*----------------------------------------------------------------*/
    cmpb   $0x3,0x58(%esi)
    jne    jump_3ce2f
    mov    %esi,%edx
    mov    0x59(%esi),%eax
    call   func_34ce4
  jump_3ce2f:
    cmpb   $0x4,0x58(%esi)
    je     jump_3ce46
    mov    $0x93e,%ebx
    mov    $data_820f8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3ce46:
    mov    (%edi),%al
    cmp    data_f458e,%al
    je     jump_3ce65
    xor    %edx,%edx
    mov    %al,%dl
    mov    0x39c(%esp),%eax
    call   func_1d7f4
    cmp    $0xffffffff,%eax
    je     jump_3ce10
  jump_3ce65:
    mov    0x39c(%esp),%ebx
    mov    0x5e(%esi),%eax
    cmp    %ebx,%eax
    jne    jump_3ceac
    xor    %ebx,%eax
    mov    0x54(%esi),%edx
    mov    data_f458e,%al
    sar    $0x10,%edx
    movb   $0x0,0x5d(%esi)
    cmp    %eax,%edx
    jne    jump_3ce91
    cmpl   $0xffffffff,data_90ba4
    jne    jump_3ce9a
  jump_3ce91:
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_3b5c8
  jump_3ce9a:
    mov    $0xffffffff,%ebx
    mov    %ebx,%eax
    add    $0x3c0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_3ceac:
    mov    0x39c(%esp),%edx
    mov    0x2(%edx),%edx
    sar    $0x10,%edx
    mov    %eax,%ebx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %eax,%edx
    mov    0x2(%ebx),%eax
    shl    $0x2,%edx
    sar    $0x10,%eax
    xor    %ecx,%ecx
    movzbw data_c5beb(%edx,%eax,1),%di
    mov    0x39c(%esp),%eax
    mov    %ecx,0x380(%esp)
    mov    0x44(%eax),%cx
    xor    %edx,%edx
    test   %cx,%cx
    jg     jump_3cf09
    jmp    jump_3cf70
  jump_3cefb:
    mov    0x39c(%esp),%eax
    inc    %edx
    cmp    0x44(%eax),%dx
    jge    jump_3cf70
  jump_3cf09:
    movswl %dx,%eax
    mov    0x39c(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    0x2c(%eax),%eax
    mov    %eax,0x390(%esp)
    cmp    (%eax),%ecx
    je     jump_3cf3a
    mov    0x390(%esp),%eax
    mov    (%eax),%eax
    mov    0x2(%eax),%eax
    sar    $0x10,%eax
    imul   $0x64,%eax,%ecx
    jmp    jump_3cf4d
  jump_3cf3a:
    mov    0x390(%esp),%eax
    mov    0x4(%eax),%eax
    mov    0x2(%eax),%ecx
    sar    $0x10,%ecx
    imul   $0x64,%ecx,%ecx
  jump_3cf4d:
    mov    0x2(%ebx),%eax
    sar    $0x10,%eax
    mov    data_c5beb(%ecx,%eax,1),%al
    xor    %ah,%ah
    movswl %di,%ecx
    cwtl
    dec    %ecx
    cmp    %ecx,%eax
    jne    jump_3cefb
    movl   $0xffffffff,0x380(%esp)
  jump_3cf70:
    cmpl   $0xffffffff,0x380(%esp)
    je     jump_3cf8b
    mov    $0x97f,%ebx
    mov    $data_82104,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3cf8b:
    mov    0x390(%esp),%eax
    testb  $0x2,0x23(%eax)
    je     jump_3cfb9
    mov    %eax,%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    call   func_459ac
    test   %eax,%eax
    je     jump_3cfb9
    mov    0x394(%esp),%eax
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
    jmp    jump_3cfdf
  jump_3cfb9:
    movb   $0x0,0x62(%esi)
    mov    0x390(%esp),%eax
    movl   $0x0,0x63(%esi)
    mov    %eax,0x68(%esi)
    mov    0x394(%esp),%eax
    movb   $0x2,0x67(%esi)
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
  jump_3cfdf:
    mov    0x39e(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_3ce10
    mov    $0xffffffff,%ebx
    mov    %ebx,%eax
    add    $0x3c0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3d003:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    0x54(%esi),%eax
    mov    data_f458e,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    je     jump_3d026
    mov    $0x9a6,%ebx
    mov    $data_82110,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3d026:
    mov    0x58(%esi),%cl
    cmp    $0x3,%cl
    jne    jump_3d071
    mov    0x59(%esi),%eax
    cmp    0x5e(%esi),%eax
    je     jump_3d047
    mov    $0x9aa,%ebx
    mov    $data_8211c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3d047:
    mov    data_fe582,%eax
    sar    $0x10,%eax
    movb   $0x0,0x5d(%esi)
    cmp    $0x10,%eax
    je     jump_3cfdf
    mov    $0x10,%edx
    mov    $data_fa35c,%eax
    mov    %esi,%ebx
    mov    0x5e(%esi),%ecx
    call   func_50eb0
    jmp    jump_3cfdf
  jump_3d071:
    cmp    $0x4,%cl
    je     jump_3d07f
    movb   $0x0,0x5d(%esi)
    jmp    jump_3cfdf
  jump_3d07f:
    movb   $0x0,0x62(%esi)
    movl   $0x0,0x63(%esi)
    mov    0x5e(%esi),%eax
    mov    %eax,0x68(%esi)
    mov    0x394(%esp),%eax
    movb   $0x1,0x67(%esi)
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
    jmp    jump_3cfdf


/*----------------------------------------------------------------*/
func_3d0a6:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    mov    0x54(%esi),%edx
    mov    data_f458e,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    je     jump_3d0c8
    mov    $0x9d0,%ebx
    mov    $data_82128,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3d0c8:
    cmpb   $0x4,0x58(%esi)
    je     jump_3d0df
    mov    $0x9d1,%ebx
    mov    $data_82134,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3d0df:
    testb  $0x8,0x84(%esi)
    je     jump_3d0f1
    movb   $0x0,0x5d(%esi)
    jmp    jump_3cfdf
  jump_3d0f1:
    cmpb   $0x0,0x62(%esi)
    je     jump_3d100
    movb   $0x0,0x5d(%esi)
    jmp    jump_3cfdf
  jump_3d100:
    mov    0x394(%esp),%eax
    movb   $0x3,0x67(%esi)
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
    jmp    jump_3cfdf


/*----------------------------------------------------------------*/
func_3d116:
/*----------------------------------------------------------------*/
    mov    0x28(%esi),%ebp
    mov    0x5e(%esi),%ecx
    test   %ebp,%ebp
    jne    jump_3d131
    mov    $0x9f2,%ebx
    mov    $data_82140,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3d131:
    xor    %eax,%eax
    mov    0x57(%ecx),%al
    cmp    $0xff,%eax
    je     jump_3d146
    movb   $0x0,0x5d(%esi)
    jmp    jump_3cfdf
  jump_3d146:
    mov    0x58(%esi),%al
    cmp    $0x3,%al
    jne    jump_3d204
    mov    0x59(%esi),%eax
    cmp    %eax,%ecx
    je     jump_3d17f
    mov    %esi,%edx
    call   func_34ce4
    cmpb   $0x4,0x58(%esi)
    je     jump_3cfdf
    mov    $0xa05,%ebx
    mov    $data_8214c,%edx
    xor    %eax,%eax
    call   func_25878
    jmp    jump_3cfdf
  jump_3d17f:
    mov    $0x47,%edx
    mov    %esi,%eax
    call   func_44bb8
    mov    %eax,%ebp
    cmp    $0xffffffff,%eax
    jne    jump_3d1a3
    mov    $0xa0d,%ebx
    mov    $data_82158,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3d1a3:
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_44b34
    mov    (%edi),%al
    movw   $0x2,0x42(%ecx)
    mov    %al,0x57(%ecx)
    mov    $0xffffffff,%ebx
    mov    data_92e10,%eax
    mov    $0x5,%edx
    mov    %eax,0x67(%ecx)
    mov    %ecx,%eax
    call   func_33c68
    decl   0x88(%esi)
    mov    0x39c(%esp),%edx
    mov    $0x1,%al
    mov    (%edi),%cl
    mov    0x14(%edx),%bl
    shl    %cl,%al
    mov    0x3a0(%esp),%ecx
    or     %al,%bl
    dec    %ecx
    mov    %bl,0x14(%edx)
    mov    %cx,0x3a0(%esp)
    movb   $0x0,0x5d(%esi)
    jmp    jump_3cfdf
  jump_3d204:
    cmp    $0x4,%al
    je     jump_3d219
    mov    $0xa1f,%ebx
    mov    $data_82164,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3d219:
    movb   $0x0,0x62(%esi)
    movl   $0x0,0x63(%esi)
    movb   $0x1,0x67(%esi)
    mov    0x394(%esp),%eax
    mov    %ecx,0x68(%esi)
    movb   $0x3,(%eax)
    mov    %esi,0x1(%eax)
    jmp    jump_3cfdf


/*----------------------------------------------------------------*/
func_3d23d:
/*----------------------------------------------------------------*/
    mov    0x3a0(%esp),%ebx
    mov    0x88(%esi),%ax
    movl   $0x0,0x94(%esi)
    sub    %eax,%ebx
    movl   $0x0,0x88(%esi)
    mov    %bx,0x3a0(%esp)
    jmp    jump_3cfdf
  jump_3d26e:
    mov    0x5d(%esi),%al
    dec    %al
    cmp    $0x6,%al
    ja     func_3d23d
    and    $0xff,%eax
    jmp    *%cs:vtable_3c694(,%eax,4)


/*----------------------------------------------------------------*/
func_3d284:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x370,%esp
    mov    %eax,0x2c4(%esp)
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    %ecx,0x354(%esp)
    xor    %edx,%edx
    mov    0x7(%eax),%eax
    mov    %edx,0x2cc(%esp)
    mov    0x2(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %eax,%edx
    mov    0x394(%esp),%eax
    mov    0x2(%eax),%eax
    shl    $0x2,%edx
    sar    $0x10,%eax
    mov    data_c5beb(%edx,%eax,1),%dl
    and    $0xff,%edx
    cmp    $0x2,%edx
    jge    jump_3d2ee
    movl   $0x1869f,0x2cc(%esp)
    jmp    jump_3d30a
  jump_3d2ee:
    cmp    $0x4,%edx
    jge    jump_3d30a
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    %eax,0x2cc(%esp)
  jump_3d30a:
    mov    0x382(%esp),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    mov    0x2cc(%esp),%ecx
    add    %edx,%eax
    mov    0x394(%esp),%ebx
    shl    $0x2,%eax
    mov    $0x2,%edx
    add    %eax,%ecx
    mov    0x2c4(%esp),%eax
    mov    %ecx,0x2cc(%esp)
    lea    0x2c8(%esp),%ecx
    call   func_4119c
    lea    0x330(%esp),%ecx
    mov    0x394(%esp),%ebx
    mov    $0x3,%edx
    mov    0x2c4(%esp),%eax
    call   func_4119c
    mov    0x330(%esp),%eax
    mov    0x2cc(%esp),%edx
    mov    0x2c8(%esp),%ebx
    add    %edx,%eax
    cmp    %ebx,%eax
    setg   %al
    xor    %ah,%ah
    mov    %ax,0x348(%esp)
    mov    0x394(%esp),%eax
    xor    %edx,%edx
    mov    0x394(%esp),%ebx
    mov    0x15(%eax),%dl
    xor    %eax,%eax
    mov    0x14(%ebx),%al
    mov    data_f458e,%cl
    or     %eax,%edx
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    jne    jump_3d3c9
    movw   $0x1,0x348(%esp)
  jump_3d3c9:
    mov    0x2c4(%esp),%eax
    mov    (%eax),%al
    cmp    data_f458e,%al
    jne    jump_3d3ed
    cmpl   $0x0,data_90ba4
    jne    jump_3d3ed
    movw   $0x1,0x348(%esp)
  jump_3d3ed:
    xor    %dl,%dl
    xor    %eax,%eax
    mov    %dl,0x36c(%esp)
    test   %si,%si
    jle    jump_3d42b
    mov    $0x1,%ch
  jump_3d3ff:
    movswl %ax,%edx
    add    %edx,%edx
    add    %edi,%edx
    mov    (%edx),%bx
    xor    %bh,%bh
    and    $0x20,%bl
    movswl %bx,%ebx
    test   %ebx,%ebx
    je     jump_3d425
    mov    (%edx),%cl
    and    $0x7,%cl
    mov    %ch,%dl
    shl    %cl,%dl
    or     %dl,0x36c(%esp)
  jump_3d425:
    inc    %eax
    cmp    %si,%ax
    jl     jump_3d3ff
  jump_3d42b:
    mov    %esp,%edx
    mov    0x394(%esp),%eax
    call   func_1d754
    xor    %esi,%esi
    mov    %eax,%edi
    xor    %eax,%eax
    jmp    jump_3d442
  jump_3d441:
    inc    %eax
  jump_3d442:
    movswl %ax,%edx
    cmp    %edi,%edx
    jge    jump_3d471
    mov    (%esp,%edx,4),%edx
    cmpb   $0x4,0x58(%edx)
    jne    jump_3d441
    mov    0x54(%edx),%ecx
    xor    %ebx,%ebx
    mov    $0x1,%edx
    sar    $0x10,%ecx
    mov    0x36c(%esp),%bl
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_3d441
    mov    $0xffffffff,%esi
  jump_3d471:
    test   %esi,%esi
    jne    jump_3d499
    mov    0x2c4(%esp),%eax
    mov    data_f458e,%bh
    cmp    (%eax),%bh
    jne    jump_3d499
    cmpl   $0x0,data_90ba4
    jne    jump_3d499
    mov    $0x2,%edx
    jmp    jump_3ec40
  jump_3d499:
    mov    0x354(%esp),%ecx
    test   %cx,%cx
    je     jump_3e97c
    xor    %ebp,%ebp
    mov    0x346(%esp),%eax
    mov    %ebp,0x2d0(%esp)
    mov    %ebp,0x2d4(%esp)
    sar    $0x10,%eax
    mov    %ebp,0x2d8(%esp)
    cmp    $0x1,%eax
    jne    jump_3e44e
    test   %esi,%esi
    je     jump_3dfb1
    lea    0x1d4(%esp),%eax
    add    $0x16,%eax
    mov    %ebp,-0xc(%eax)
    mov    %ebp,-0x8(%eax)
    mov    %ebp,-0x4(%eax)
    mov    %ebp,(%eax)
    mov    %ebp,0x4(%eax)
    mov    %ebp,0x318(%esp)
    mov    %ebp,0x8(%eax)
    xor    %eax,%eax
    mov    %ebp,0x2dc(%esp)
    mov    %ax,0x34c(%esp)
    test   %cx,%cx
    jg     jump_3d538
    jmp    jump_3d6ef
  jump_3d518:
    mov    0x34c(%esp),%ecx
    inc    %ecx
    mov    0x354(%esp),%esi
    mov    %cx,0x34c(%esp)
    cmp    %si,%cx
    jge    jump_3d6ef
  jump_3d538:
    mov    0x34a(%esp),%eax
    sar    $0x10,%eax
    mov    0x380(%esp),%ebp
    shl    $0x2,%eax
    add    %ebp,%eax
    mov    (%eax),%esi
    cmpb   $0x4,0x58(%esi)
    jne    jump_3d518
    xor    %edx,%edx
    mov    %dx,0x360(%esp)
    jmp    jump_3d56a
  jump_3d562:
    incw   0x360(%esp)
  jump_3d56a:
    mov    0x35e(%esp),%eax
    sar    $0x10,%eax
    cmp    %edi,%eax
    jge    jump_3d6d4
    shl    $0x2,%eax
    mov    (%esp,%eax,1),%ebp
    xor    %edx,%edx
    mov    %eax,0x2ec(%esp)
    mov    0x54(%ebp),%ecx
    mov    $0x1,%eax
    sar    $0x10,%ecx
    mov    0x36c(%esp),%dl
    shl    %cl,%eax
    test   %edx,%eax
    je     jump_3d562
    lea    0x62(%ebp),%edx
    mov    (%edx),%al
    mov    %al,0x1d4(%esp)
    mov    0x1(%edx),%eax
    mov    %eax,0x1d5(%esp)
    mov    0x5(%edx),%al
    mov    %al,0x1d9(%esp)
    mov    0x6(%edx),%eax
    lea    0xa(%edx),%ecx
    mov    %eax,0x1da(%esp)
    mov    (%ecx),%eax
    mov    %eax,0x1de(%esp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x1e2(%esp)
    mov    0x8(%ecx),%eax
    lea    0x16(%edx),%ecx
    mov    %eax,0x1e6(%esp)
    mov    (%ecx),%eax
    mov    %eax,0x1ea(%esp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x1ee(%esp)
    mov    0x8(%ecx),%eax
    mov    %eax,0x1f2(%esp)
    mov    %esi,%ebx
    mov    0x22(%edx),%eax
    mov    $0x3,%edx
    mov    %eax,0x1f6(%esp)
    mov    %ebp,%eax
    call   func_459ac
    test   %eax,%eax
    je     jump_3d64d
    mov    $0xffffffff,%edx
    mov    %esi,%eax
    call   func_4527c
    mov    0x2ec(%esp),%eax
    mov    (%esp,%eax,1),%eax
    mov    %esi,0x2dc(%esp)
    mov    %eax,0x318(%esp)
  jump_3d64d:
    mov    0x35e(%esp),%eax
    sar    $0x10,%eax
    mov    (%esp,%eax,4),%edx
    mov    0x1d4(%esp),%al
    mov    %al,0x62(%edx)
    mov    0x1d5(%esp),%eax
    mov    %eax,0x63(%edx)
    mov    0x1d9(%esp),%al
    mov    %al,0x67(%edx)
    add    $0x62,%edx
    mov    0x1da(%esp),%eax
    mov    %eax,0x6(%edx)
    lea    0xa(%edx),%ecx
    mov    0x1de(%esp),%eax
    mov    %eax,(%ecx)
    mov    0x1e2(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x1e6(%esp),%eax
    mov    %eax,0x8(%ecx)
    lea    0x16(%edx),%ecx
    mov    0x1ea(%esp),%eax
    mov    %eax,(%ecx)
    mov    0x1ee(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x1f2(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    0x1f6(%esp),%eax
    mov    %eax,0x22(%edx)
    jmp    jump_3d562
  jump_3d6d4:
    cmp    0x2dc(%esp),%esi
    je     jump_3d518
    mov    %esi,%eax
    xor    %edx,%edx
    call   func_4527c
    jmp    jump_3d518
  jump_3d6ef:
    xor    %eax,%eax
    mov    0x354(%esp),%edx
    mov    %ax,0x344(%esp)
    test   %dx,%dx
    jg     jump_3d70a
    jmp    jump_3d7f1
  jump_3d70a:
    mov    $0x3,%ebp
  jump_3d70f:
    cmpl   $0x0,0x2d0(%esp)
    jne    jump_3d7f1
    mov    0x342(%esp),%eax
    mov    0x380(%esp),%esi
    sar    $0x10,%eax
    mov    (%esi,%eax,4),%esi
    cmpb   $0x4,0x58(%esi)
    jne    jump_3d7d1
    cmpl   $0x0,0x88(%esi)
    je     jump_3d7d1
    mov    %esi,%eax
    call   func_45a54
    test   %eax,%eax
    je     jump_3d7ca
    xor    %ebx,%ebx
    mov    %bx,0x33c(%esp)
    jmp    jump_3d772
  jump_3d763:
    mov    %esi,0x2d8(%esp)
  jump_3d76a:
    incw   0x33c(%esp)
  jump_3d772:
    mov    0x33a(%esp),%eax
    sar    $0x10,%eax
    cmp    %edi,%eax
    jge    jump_3d7d1
    mov    (%esp,%eax,4),%ebx
    mov    $0x1,%edx
    mov    0x54(%ebx),%ecx
    xor    %eax,%eax
    sar    $0x10,%ecx
    mov    0x36c(%esp),%al
    shl    %cl,%edx
    test   %eax,%edx
    je     jump_3d76a
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_459ac
    test   %eax,%eax
    je     jump_3d763
    mov    0x398(%esp),%eax
    movb   $0x3,(%eax)
    mov    $0xffffffff,%edx
    mov    %esi,0x1(%eax)
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3d7ca:
    mov    %esi,0x2d4(%esp)
  jump_3d7d1:
    mov    0x344(%esp),%esi
    inc    %esi
    mov    0x354(%esp),%edx
    mov    %si,0x344(%esp)
    cmp    %dx,%si
    jl     jump_3d70f
  jump_3d7f1:
    mov    0x2d8(%esp),%ecx
    test   %ecx,%ecx
    je     jump_3d87b
    mov    $0x39,%edx
    mov    %ecx,%eax
    call   func_44bb8
    cmp    $0xffffffff,%eax
    je     jump_3d87b
    mov    0x9c(%ecx),%dx
    xor    %dh,%dh
    and    $0x4,%dl
    movswl %dx,%edx
    test   %edx,%edx
    jne    jump_3d87b
    cmpl   $0xc,0x88(%ecx)
    jle    jump_3d87b
    mov    %eax,%edx
    shl    $0x3,%eax
    movb   $0x1,0x62(%ecx)
    sub    %edx,%eax
    lea    0xab(%ecx),%edx
    movb   $0x5,0x67(%ecx)
    add    %eax,%edx
    mov    0x398(%esp),%eax
    mov    %edx,0x63(%ecx)
    movb   $0x3,(%eax)
    mov    %ecx,%edx
    mov    %ecx,0x1(%eax)
    mov    %ecx,%eax
    xor    %ecx,%edx
    call   func_45378
    testb  $0x1,0x84(%ecx)
    je     jump_3d87b
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3d87b:
    mov    0x2d4(%esp),%ebp
    test   %ebp,%ebp
    je     jump_3d8f0
    mov    $0x41,%edx
    mov    %ebp,%eax
    call   func_44bb8
    cmp    $0xffffffff,%eax
    je     jump_3d8f0
    cmpl   $0xd,0x88(%ebp)
    jle    jump_3d8f0
    mov    %eax,%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    lea    0xab(%ebp),%eax
    movb   $0x1,0x62(%ebp)
    add    %edx,%eax
    mov    %eax,0x63(%ebp)
    mov    0x398(%esp),%eax
    movb   $0x5,0x67(%ebp)
    mov    %ebp,%edx
    movb   $0x3,(%eax)
    xor    %ebp,%edx
    mov    %ebp,0x1(%eax)
    mov    %ebp,%eax
    call   func_45378
    testb  $0x1,0x84(%ebp)
    je     jump_3d8f0
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3d8f0:
    mov    0x2dc(%esp),%ebp
    test   %ebp,%ebp
    je     jump_3d934
    mov    0x318(%esp),%ebx
    mov    0x2c4(%esp),%eax
    mov    %ebp,%edx
    call   func_3ec50
    test   %eax,%eax
    je     jump_3d934
    mov    0x398(%esp),%eax
    movb   $0x3,(%eax)
    mov    $0xffffffff,%edx
    mov    %ebp,0x1(%eax)
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3d934:
    mov    0x354(%esp),%ebx
    xor    %ecx,%ecx
    xor    %edx,%edx
    test   %bx,%bx
    jle    jump_3d984
    jmp    jump_3d953
  jump_3d946:
    mov    0x354(%esp),%esi
    inc    %edx
    cmp    %si,%dx
    jge    jump_3d984
  jump_3d953:
    movswl %dx,%eax
    mov    0x380(%esp),%esi
    shl    $0x2,%eax
    add    %esi,%eax
    mov    (%eax),%eax
    cmpb   $0x4,0x58(%eax)
    jne    jump_3d946
    mov    0x8c(%eax),%ebx
    imul   (%eax),%ebx
    imul   0x88(%eax),%ebx
    cmp    %ecx,%ebx
    jle    jump_3d946
    mov    %ebx,%ecx
    mov    %eax,%ebp
    jmp    jump_3d946
  jump_3d984:
    test   %ebp,%ebp
    je     jump_3ec3e
    cmpw   $0x0,0x384(%esp)
    je     jump_3dc50
    mov    0x384(%esp),%ebx
    xor    %eax,%eax
    xor    %edx,%edx
    mov    %eax,0x208(%esp)
    mov    %eax,0x20c(%esp)
    xor    %eax,%edx
    mov    %eax,0x210(%esp)
    mov    %dx,0x338(%esp)
    test   %bx,%bx
    jg     jump_3d9ef
    jmp    jump_3dc50
  jump_3d9cf:
    mov    0x338(%esp),%edx
    inc    %edx
    mov    0x384(%esp),%ebx
    mov    %dx,0x338(%esp)
    cmp    %bx,%dx
    jge    jump_3dc50
  jump_3d9ef:
    mov    0x336(%esp),%eax
    sar    $0x10,%eax
    mov    0x388(%esp),%esi
    shl    $0x2,%eax
    add    %esi,%eax
    mov    (%eax),%esi
    mov    0x18(%esi),%ax
    mov    %ax,0x340(%esp)
    jmp    jump_3da1d
  jump_3da15:
    incw   0x340(%esp)
  jump_3da1d:
    mov    0x33e(%esp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    0x1a(%esi),%dx
    cmp    %edx,%eax
    jge    jump_3d9cf
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    add    %edx,%eax
    cmpb   $0xff,0x1(%eax)
    je     jump_3da15
    mov    0x2(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_3da15
    mov    0x1(%eax),%al
    and    $0xff,%eax
    imul   $0x28,%eax,%eax
    mov    data_f3e46(%eax),%ax
    xor    %ah,%ah
    and    $0x4,%al
    and    $0xffff,%eax
    je     jump_3da15
    mov    $0x47c34f80,%eax
    xor    %ebx,%ebx
    mov    %eax,0x2f4(%esp)
    jmp    jump_3da82
  jump_3da81:
    inc    %ebx
  jump_3da82:
    movswl %bx,%eax
    cmp    %edi,%eax
    jge    jump_3dbdf
    mov    (%esp,%eax,4),%edx
    mov    0x54(%edx),%ecx
    mov    $0x1,%eax
    sar    $0x10,%ecx
    shl    %cl,%eax
    xor    %ecx,%ecx
    mov    0x36c(%esp),%cl
    test   %ecx,%eax
    je     jump_3da81
    lea    0x28c(%esp),%ecx
    mov    %ecx,0x2fc(%esp)
    xor    %ecx,%ecx
    mov    %ecx,0x238(%esp)
    mov    %ecx,0x23c(%esp)
    mov    %ecx,0x240(%esp)
    lea    0x9e(%edx),%eax
    flds   (%esi)
    fsubs  (%eax)
    fstps  0x238(%esp)
    flds   0x4(%esi)
    fsubs  0x4(%eax)
    fstps  0x23c(%esp)
    flds   0x8(%esi)
    fsubs  0x8(%eax)
    fstps  0x240(%esp)
    mov    0x238(%esp),%eax
    flds   0x23c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x28c(%esp)
    mov    0x23c(%esp),%eax
    flds   0x238(%esp)
    fmul   %st(0),%st
    mov    %eax,0x290(%esp)
    mov    0x240(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x294(%esp)
    flds   0x240(%esp)
    mov    0x238(%esp),%eax
    fmuls  0x240(%esp)
    mov    %eax,0x208(%esp)
    mov    0x23c(%esp),%eax
    mov    %eax,0x20c(%esp)
    mov    0x240(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x210(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fstps  0x300(%esp)
    mov    0x300(%esp),%eax
    mov    0x58(%edx),%cl
    mov    %eax,0x2f8(%esp)
    cmp    $0x4,%cl
    je     jump_3dbae
    flds   0x300(%esp)
    fadds  data_821d0
    fstps  0x2f8(%esp)
  jump_3dbae:
    flds   0x2f8(%esp)
    fcomps 0x2f4(%esp)
    fnstsw %ax
    sahf
    jae    jump_3da81
    mov    0x2f8(%esp),%eax
    mov    %edx,0x2f0(%esp)
    mov    %eax,0x2f4(%esp)
    jmp    jump_3da81
  jump_3dbdf:
    cmpl   $0x0,0x2f0(%esp)
    jne    jump_3dbfa
    mov    $0xb5e,%ebx
    mov    $data_82170,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3dbfa:
    mov    0x33e(%esp),%eax
    sar    $0x10,%eax
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    add    %edx,%eax
    mov    %eax,0x6b(%esi)
    mov    0x2f0(%esp),%eax
    xor    %edx,%edx
    mov    %eax,0x6f(%esi)
    mov    %esi,%eax
    call   func_35060
    testb  $0x1,0x73(%esi)
    je     jump_3da15
    mov    0x398(%esp),%eax
    movb   $0x2,(%eax)
    mov    $0xffffffff,%edx
    mov    %esi,0x1(%eax)
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3dc50:
    xor    %esi,%esi
    mov    $0x47c34f80,%ebx
    mov    %esi,0x268(%esp)
    mov    %esi,0x26c(%esp)
    mov    %esi,0x270(%esp)
    mov    %ebx,0x2e4(%esp)
    mov    %esi,0x2e8(%esp)
    lea    0x9e(%ebp),%ebx
    xor    %esi,%esi
    jmp    jump_3dc85
  jump_3dc84:
    inc    %esi
  jump_3dc85:
    movswl %si,%eax
    cmp    %edi,%eax
    jge    jump_3ddff
    mov    (%esp,%eax,4),%edx
    mov    0x54(%edx),%ecx
    mov    $0x1,%eax
    sar    $0x10,%ecx
    shl    %cl,%eax
    mov    %eax,%ecx
    xor    %eax,%eax
    mov    0x36c(%esp),%al
    test   %eax,%ecx
    je     jump_3dc84
    lea    0x2a4(%esp),%ecx
    mov    %ecx,0x304(%esp)
    xor    %ecx,%ecx
    lea    0x9e(%edx),%eax
    mov    %ecx,0x220(%esp)
    mov    %ecx,0x224(%esp)
    mov    %ecx,0x228(%esp)
    flds   (%eax)
    fsubs  (%ebx)
    fstps  0x220(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%ebx)
    fstps  0x224(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%ebx)
    mov    0x220(%esp),%eax
    fstps  0x228(%esp)
    flds   0x224(%esp)
    fmul   %st(0),%st
    mov    %eax,0x2a4(%esp)
    mov    0x224(%esp),%eax
    flds   0x220(%esp)
    mov    %eax,0x2a8(%esp)
    mov    0x228(%esp),%eax
    fmuls  0x220(%esp)
    mov    %eax,0x2ac(%esp)
    faddp  %st,%st(1)
    mov    0x220(%esp),%eax
    flds   0x228(%esp)
    mov    %eax,0x268(%esp)
    mov    0x224(%esp),%eax
    fmuls  0x228(%esp)
    mov    %eax,0x26c(%esp)
    mov    0x228(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x270(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fstps  0x308(%esp)
    mov    0x308(%esp),%eax
    mov    0x58(%edx),%ch
    mov    %eax,0x2e0(%esp)
    cmp    $0x4,%ch
    je     jump_3ddb8
    flds   0x308(%esp)
    fadds  data_821d0
    fstps  0x2e0(%esp)
  jump_3ddb8:
    flds   0x2e0(%esp)
    fcomps 0x2e4(%esp)
    fnstsw %ax
    sahf
    jae    jump_3dc84
    flds   0x2e0(%esp)
    fcomps data_821d4
    fnstsw %ax
    sahf
    jbe    jump_3dc84
    mov    0x2e0(%esp),%eax
    mov    %edx,0x2e8(%esp)
    mov    %eax,0x2e4(%esp)
    jmp    jump_3dc84
  jump_3ddff:
    test   %ebp,%ebp
    je     jump_3ec3e
    mov    0x2e8(%esp),%esi
    test   %esi,%esi
    je     jump_3ec3e
    lea    0x9e(%esi),%edx
    mov    (%edx),%eax
    mov    %eax,0x268(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x26c(%esp)
    mov    0x8(%edx),%eax
    xor    %edi,%edi
    mov    %eax,0x270(%esp)
    mov    %edi,0x274(%esp)
    mov    %edi,0x278(%esp)
    mov    %edi,0x27c(%esp)
    call   func_7369f
    mov    %eax,%edx
    mov    $0xc8,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x64,%edx
    mov    %edx,0x310(%esp)
    fildl  0x310(%esp)
    fstps  0x274(%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x64,%edx
    mov    %edx,0x310(%esp)
    fildl  0x310(%esp)
    fstps  0x278(%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x64,%edx
    mov    %edx,0x310(%esp)
    lea    0x2b0(%esp),%eax
    fildl  0x310(%esp)
    fstps  0x27c(%esp)
    flds   0x268(%esp)
    fadds  0x274(%esp)
    mov    %eax,0x2c0(%esp)
    fstps  0x298(%esp)
    flds   0x26c(%esp)
    mov    0x298(%esp),%eax
    fadds  0x278(%esp)
    mov    %eax,0x2b0(%esp)
    fstps  0x29c(%esp)
    flds   0x270(%esp)
    mov    0x29c(%esp),%eax
    fadds  0x27c(%esp)
    mov    %eax,0x2b4(%esp)
    fstps  0x2a0(%esp)
    mov    0x2a0(%esp),%eax
    mov    %eax,0x2b8(%esp)
    mov    0x298(%esp),%eax
    mov    %eax,0x268(%esp)
    mov    0x29c(%esp),%eax
    mov    %eax,0x26c(%esp)
    mov    0x2a0(%esp),%eax
    mov    %eax,0x270(%esp)
    mov    0x398(%esp),%eax
    movb   $0x3,(%eax)
    mov    %ebp,0x1(%eax)
    movb   $0x0,0x62(%ebp)
    movb   $0x3,0x67(%ebp)
    mov    %edi,0x63(%ebp)
    mov    %edi,0x68(%ebp)
    mov    0x268(%esp),%eax
    mov    %eax,0x6c(%ebp)
    mov    0x26c(%esp),%eax
    mov    %eax,0x70(%ebp)
    add    $0x6c,%ebp
    mov    0x270(%esp),%eax
    mov    $0xffffffff,%edx
    mov    %eax,0x8(%ebp)
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3dfb1:
    mov    0x394(%esp),%eax
    mov    0x5a(%eax),%di
    xor    %edx,%edx
    test   %di,%di
    jg     jump_3dfc8
    jmp    jump_3e048
  jump_3dfc8:
    mov    $0x1,%ebp
  jump_3dfcd:
    test   %esi,%esi
    jne    jump_3e048
    movswl %dx,%eax
    mov    0x394(%esp),%edi
    shl    $0x2,%eax
    add    %edi,%eax
    mov    0x46(%eax),%eax
    xor    %ebx,%ebx
    mov    0x57(%eax),%bl
    cmp    $0xff,%ebx
    je     jump_3e03a
    mov    0x2c4(%esp),%edi
    cmp    (%edi),%bl
    je     jump_3e03a
    add    %edi,%ebx
    cmpb   $0x2,0x1c0(%ebx)
    je     jump_3e038
    mov    data_f458e,%ch
    cmp    0x57(%eax),%ch
    jne    jump_3e03a
    mov    0x394(%esp),%ebx
    mov    0x2(%ebx),%ebx
    sar    $0x10,%ebx
    mov    data_c8304(%ebx),%bl
    mov    (%edi),%cl
    mov    %ebp,%edi
    and    $0xff,%ebx
    shl    %cl,%edi
    test   %edi,%ebx
    je     jump_3e03a
  jump_3e038:
    mov    %eax,%esi
  jump_3e03a:
    mov    0x394(%esp),%eax
    inc    %edx
    cmp    0x5a(%eax),%dx
    jl     jump_3dfcd
  jump_3e048:
    test   %esi,%esi
    je     jump_3ec3e
    mov    0x2c4(%esp),%edi
    mov    0x18(%esi),%cx
    jmp    jump_3e05e
  jump_3e05d:
    inc    %ecx
  jump_3e05e:
    xor    %edx,%edx
    movswl %cx,%eax
    mov    0x1a(%esi),%dx
    cmp    %edx,%eax
    jge    jump_3e13a
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    cmpb   $0x17,0x1(%edx,%eax,1)
    jne    jump_3e05d
    xor    %ebx,%ebx
    mov    %cx,%bx
    mov    %esi,%eax
    mov    %ebx,%edx
    call   func_34b1c
    mov    0x54(%eax),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    (%edi),%al
    cmp    %eax,%edx
    jne    jump_3e05d
    mov    %ebx,%edx
    mov    %esi,%eax
    call   func_34b1c
    mov    0x2c4(%esp),%ebx
    mov    %eax,%edi
    mov    0x54(%eax),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    (%ebx),%al
    cmp    %eax,%edx
    je     jump_3e0cd
    mov    $0xbc0,%ebx
    mov    $data_8217c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3e0cd:
    lea    0x30c(%esp),%ebx
    and    $0xffff,%ecx
    mov    %esi,%eax
    mov    %ecx,%edx
    call   func_355c4
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_34b1c
    cmp    %eax,%edi
    je     jump_3e101
    mov    $0xbc4,%ebx
    mov    $data_82188,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3e101:
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_34ce4
    mov    %eax,0x30c(%esp)
    cmp    $0xffffffff,%eax
    je     jump_3e127
    mov    $0xbc6,%ebx
    mov    $data_82194,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3e127:
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3e13a:
    mov    %esi,%eax
    call   func_34e50
    test   %eax,%eax
    jne    jump_3e21e
    mov    0x354(%esp),%eax
    xor    %edi,%edi
    test   %ax,%ax
    jg     jump_3e166
    jmp    jump_3e1ad
  jump_3e159:
    mov    0x354(%esp),%eax
    inc    %edi
    cmp    %ax,%di
    jge    jump_3e1ad
  jump_3e166:
    cmpl   $0x0,0x2d0(%esp)
    jne    jump_3e1ad
    movswl %di,%eax
    mov    0x380(%esp),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    (%eax),%ebx
    cmpb   $0x4,0x58(%ebx)
    jne    jump_3e159
    xor    %eax,%eax
    jmp    jump_3e18c
  jump_3e18b:
    inc    %eax
  jump_3e18c:
    movswl %ax,%edx
    cmp    0x15a(%ebx),%edx
    jge    jump_3e159
    imul   $0x7,%edx,%edx
    cmpb   $0x49,0xab(%edx,%ebx,1)
    jne    jump_3e18b
    mov    %ebx,0x2d0(%esp)
    jmp    jump_3e159
  jump_3e1ad:
    mov    0x2d0(%esp),%edi
    test   %edi,%edi
    jne    jump_3e1ec
    mov    0x394(%esp),%eax
    xor    %edx,%edx
    mov    data_f458e,%cl
    mov    0x15(%eax),%dl
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    jne    jump_3ec3e
    mov    $0x2,%edx
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3e1ec:
    mov    0x398(%esp),%eax
    movb   $0x3,(%eax)
    mov    %edi,0x1(%eax)
    movb   $0x0,0x62(%edi)
    movl   $0x0,0x63(%edi)
    movb   $0x1,0x67(%edi)
    mov    $0xffffffff,%edx
    mov    %esi,0x68(%edi)
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3e21e:
    mov    0x354(%esp),%ecx
    xor    %ebp,%ebp
    xor    %edi,%edi
    test   %cx,%cx
    jg     jump_3e23d
    jmp    jump_3e286
  jump_3e230:
    mov    0x354(%esp),%edx
    inc    %edi
    cmp    %dx,%di
    jge    jump_3e286
  jump_3e23d:
    cmpl   $0x0,0x2d0(%esp)
    jne    jump_3e286
    movswl %di,%ecx
    mov    0x380(%esp),%edx
    shl    $0x2,%ecx
    add    %edx,%ecx
    mov    (%ecx),%ecx
    cmpb   $0x4,0x58(%ecx)
    jne    jump_3e230
    mov    %ecx,%eax
    call   func_45a54
    test   %eax,%eax
    je     jump_3e230
    mov    $0x1,%edx
    mov    %esi,%ebx
    mov    %ecx,%eax
    mov    %ecx,%ebp
    call   func_459ac
    test   %eax,%eax
    je     jump_3e230
    mov    %ecx,0x2d0(%esp)
    jmp    jump_3e230
  jump_3e286:
    mov    0x2d0(%esp),%ebx
    test   %ebx,%ebx
    je     jump_3e2b1
    mov    0x398(%esp),%eax
    movb   $0x3,(%eax)
    mov    $0xffffffff,%edx
    mov    %ebx,0x1(%eax)
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3e2b1:
    test   %ebp,%ebp
    je     jump_3ec3e
    mov    (%esi),%eax
    mov    %eax,0x280(%esp)
    mov    0x4(%esi),%eax
    mov    %eax,0x284(%esp)
    mov    0x8(%esi),%eax
    mov    %eax,0x288(%esp)
    mov    %ebx,0x214(%esp)
    mov    %ebx,0x218(%esp)
    mov    %ebx,0x21c(%esp)
    call   func_7369f
    mov    %eax,%edx
    mov    $0x64,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x14,%edx
    mov    %edx,0x310(%esp)
    fildl  0x310(%esp)
    fstps  0x214(%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x14,%edx
    mov    %edx,0x310(%esp)
    fildl  0x310(%esp)
    fstps  0x218(%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x14,%edx
    mov    %edx,0x310(%esp)
    lea    0x1fc(%esp),%eax
    fildl  0x310(%esp)
    fstps  0x21c(%esp)
    flds   0x280(%esp)
    fadds  0x214(%esp)
    mov    %eax,0x314(%esp)
    fstps  0x250(%esp)
    flds   0x284(%esp)
    mov    0x250(%esp),%eax
    fadds  0x218(%esp)
    mov    %eax,0x1fc(%esp)
    fstps  0x254(%esp)
    flds   0x288(%esp)
    mov    0x254(%esp),%eax
    fadds  0x21c(%esp)
    mov    %eax,0x200(%esp)
    fstps  0x258(%esp)
    mov    0x258(%esp),%eax
    mov    %eax,0x204(%esp)
    mov    0x250(%esp),%eax
    mov    %eax,0x280(%esp)
    mov    0x254(%esp),%eax
    mov    %eax,0x284(%esp)
    mov    0x258(%esp),%eax
    mov    %eax,0x288(%esp)
    mov    0x398(%esp),%eax
    movb   $0x3,(%eax)
    mov    %ebp,0x1(%eax)
    movb   $0x0,0x62(%ebp)
    xor    %ecx,%ecx
    movb   $0x3,0x67(%ebp)
    mov    %ecx,0x63(%ebp)
    mov    %ecx,0x68(%ebp)
    mov    0x280(%esp),%eax
    mov    %eax,0x6c(%ebp)
    mov    0x284(%esp),%eax
    mov    %eax,0x70(%ebp)
    add    $0x6c,%ebp
    mov    0x288(%esp),%eax
    mov    $0xffffffff,%edx
    mov    %eax,0x8(%ebp)
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3e44e:
    lea    0x1ac(%esp),%eax
    add    $0xa,%eax
    mov    %ebp,(%eax)
    mov    %ebp,0x4(%eax)
    mov    %ebp,0x8(%eax)
    mov    0x354(%esp),%esi
    mov    %ebp,0xc(%eax)
    xor    %ecx,%ecx
    mov    %ebp,0x10(%eax)
    mov    %cx,0x35c(%esp)
    mov    %ebp,0x14(%eax)
    add    $0xc,%eax
    test   %si,%si
    jg     jump_3e4a7
    jmp    jump_3e64b
  jump_3e487:
    mov    0x35c(%esp),%esi
    inc    %esi
    mov    0x354(%esp),%edx
    mov    %si,0x35c(%esp)
    cmp    %dx,%si
    jge    jump_3e64b
  jump_3e4a7:
    cmpl   $0x0,0x2d0(%esp)
    jne    jump_3e64b
    mov    0x35a(%esp),%eax
    sar    $0x10,%eax
    mov    0x380(%esp),%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    (%eax),%ebp
    cmpb   $0x4,0x58(%ebp)
    jne    jump_3e487
    xor    %ebx,%ebx
    mov    %bx,0x368(%esp)
    jmp    jump_3e4e7
  jump_3e4df:
    incw   0x368(%esp)
  jump_3e4e7:
    mov    0x366(%esp),%eax
    sar    $0x10,%eax
    cmp    %edi,%eax
    jge    jump_3e487
    cmpl   $0x0,0x2d0(%esp)
    jne    jump_3e487
    shl    $0x2,%eax
    mov    (%esp,%eax,1),%esi
    mov    $0x1,%edx
    mov    %eax,0x320(%esp)
    mov    0x54(%esi),%ecx
    xor    %eax,%eax
    sar    $0x10,%ecx
    mov    0x36c(%esp),%al
    shl    %cl,%edx
    test   %eax,%edx
    je     jump_3e4df
    lea    0x62(%esi),%edx
    mov    (%edx),%al
    mov    %al,0x1ac(%esp)
    mov    0x1(%edx),%eax
    mov    %eax,0x1ad(%esp)
    mov    0x5(%edx),%al
    mov    %al,0x1b1(%esp)
    mov    0x6(%edx),%eax
    lea    0xa(%edx),%ecx
    mov    %eax,0x1b2(%esp)
    mov    (%ecx),%eax
    mov    %eax,0x1b6(%esp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x1ba(%esp)
    mov    0x8(%ecx),%eax
    lea    0x16(%edx),%ecx
    mov    %eax,0x1be(%esp)
    mov    (%ecx),%eax
    mov    %eax,0x1c2(%esp)
    mov    0x4(%ecx),%eax
    mov    %eax,0x1c6(%esp)
    mov    0x8(%ecx),%eax
    mov    %eax,0x1ca(%esp)
    mov    %ebp,%ebx
    mov    0x22(%edx),%eax
    mov    $0x3,%edx
    mov    %eax,0x1ce(%esp)
    mov    %esi,%eax
    call   func_459ac
    test   %eax,%eax
    je     jump_3e5c4
    mov    0x320(%esp),%eax
    mov    (%esp,%eax,1),%eax
    mov    %ebp,0x2d0(%esp)
    mov    %eax,0x31c(%esp)
  jump_3e5c4:
    mov    0x366(%esp),%eax
    sar    $0x10,%eax
    mov    (%esp,%eax,4),%edx
    mov    0x1ac(%esp),%al
    mov    %al,0x62(%edx)
    mov    0x1ad(%esp),%eax
    mov    %eax,0x63(%edx)
    mov    0x1b1(%esp),%al
    mov    %al,0x67(%edx)
    add    $0x62,%edx
    mov    0x1b2(%esp),%eax
    mov    %eax,0x6(%edx)
    lea    0xa(%edx),%ecx
    mov    0x1b6(%esp),%eax
    mov    %eax,(%ecx)
    mov    0x1ba(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x1be(%esp),%eax
    mov    %eax,0x8(%ecx)
    lea    0x16(%edx),%ecx
    mov    0x1c2(%esp),%eax
    mov    %eax,(%ecx)
    mov    0x1c6(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x1ca(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    0x1ce(%esp),%eax
    mov    %eax,0x22(%edx)
    jmp    jump_3e4df
  jump_3e64b:
    mov    0x2d0(%esp),%ecx
    test   %ecx,%ecx
    je     jump_3e69b
    mov    $0xffffffff,%edx
    mov    %ecx,%eax
    mov    0x31c(%esp),%ebx
    call   func_4527c
    mov    0x2c4(%esp),%eax
    mov    %ecx,%edx
    call   func_3ec50
    test   %eax,%eax
    je     jump_3e69b
    mov    0x398(%esp),%eax
    movb   $0x3,(%eax)
    mov    $0xffffffff,%edx
    mov    %ecx,0x1(%eax)
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3e69b:
    xor    %ebx,%ebx
    mov    0x354(%esp),%ecx
    mov    %bx,0x364(%esp)
    test   %cx,%cx
    jg     jump_3e6b6
    jmp    jump_3e7a1
  jump_3e6b6:
    mov    $0x3,%ebp
  jump_3e6bb:
    cmpl   $0x0,0x2d0(%esp)
    jne    jump_3e7a1
    mov    0x362(%esp),%esi
    sar    $0x10,%esi
    mov    0x380(%esp),%eax
    shl    $0x2,%esi
    add    %eax,%esi
    mov    (%esi),%esi
    cmpb   $0x4,0x58(%esi)
    jne    jump_3e781
    cmpl   $0x0,0x88(%esi)
    je     jump_3e781
    mov    %esi,%eax
    call   func_45a54
    test   %eax,%eax
    je     jump_3e77a
    xor    %eax,%eax
    mov    %ax,0x334(%esp)
    jmp    jump_3e722
  jump_3e713:
    mov    %esi,0x2d8(%esp)
  jump_3e71a:
    incw   0x334(%esp)
  jump_3e722:
    mov    0x332(%esp),%eax
    sar    $0x10,%eax
    cmp    %edi,%eax
    jge    jump_3e781
    mov    (%esp,%eax,4),%ebx
    xor    %edx,%edx
    mov    0x54(%ebx),%ecx
    mov    $0x1,%eax
    sar    $0x10,%ecx
    mov    0x36c(%esp),%dl
    shl    %cl,%eax
    test   %edx,%eax
    je     jump_3e71a
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_459ac
    test   %eax,%eax
    je     jump_3e713
    mov    0x398(%esp),%eax
    movb   $0x3,(%eax)
    mov    $0xffffffff,%edx
    mov    %esi,0x1(%eax)
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3e77a:
    mov    %esi,0x2d4(%esp)
  jump_3e781:
    mov    0x364(%esp),%ebx
    inc    %ebx
    mov    0x354(%esp),%ecx
    mov    %bx,0x364(%esp)
    cmp    %cx,%bx
    jl     jump_3e6bb
  jump_3e7a1:
    mov    0x2d8(%esp),%ebx
    test   %ebx,%ebx
    je     jump_3e82b
    mov    $0x39,%edx
    mov    %ebx,%eax
    call   func_44bb8
    cmp    $0xffffffff,%eax
    je     jump_3e82b
    mov    0x9c(%ebx),%dx
    xor    %dh,%dh
    and    $0x4,%dl
    movswl %dx,%edx
    test   %edx,%edx
    jne    jump_3e82b
    cmpl   $0xc,0x88(%ebx)
    jle    jump_3e82b
    mov    %eax,%edx
    shl    $0x3,%eax
    movb   $0x1,0x62(%ebx)
    sub    %edx,%eax
    lea    0xab(%ebx),%edx
    movb   $0x5,0x67(%ebx)
    add    %eax,%edx
    mov    0x398(%esp),%eax
    mov    %edx,0x63(%ebx)
    movb   $0x3,(%eax)
    mov    %ebx,%edx
    mov    %ebx,0x1(%eax)
    mov    %ebx,%eax
    xor    %ebx,%edx
    call   func_45378
    testb  $0x1,0x84(%ebx)
    je     jump_3e82b
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3e82b:
    mov    0x2d4(%esp),%esi
    test   %esi,%esi
    je     jump_3e8a0
    mov    $0x41,%edx
    mov    %esi,%eax
    call   func_44bb8
    cmp    $0xffffffff,%eax
    je     jump_3e8a0
    cmpl   $0xd,0x88(%esi)
    jle    jump_3e8a0
    mov    %eax,%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    lea    0xab(%esi),%eax
    movb   $0x1,0x62(%esi)
    add    %edx,%eax
    mov    %eax,0x63(%esi)
    mov    0x398(%esp),%eax
    movb   $0x5,0x67(%esi)
    mov    %esi,%edx
    movb   $0x3,(%eax)
    xor    %esi,%edx
    mov    %esi,0x1(%eax)
    mov    %esi,%eax
    call   func_45378
    testb  $0x1,0x84(%esi)
    je     jump_3e8a0
    mov    $0xffffffff,%edx
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3e8a0:
    mov    0x394(%esp),%eax
    mov    0x2c(%eax),%eax
    mov    0x394(%esp),%ebp
    mov    (%eax),%edx
    cmp    %ebp,%edx
    jne    jump_3e8bc
    mov    0x4(%eax),%eax
    jmp    jump_3e8be
  jump_3e8bc:
    mov    %edx,%eax
  jump_3e8be:
    mov    0x354(%esp),%esi
    mov    %eax,%ecx
    xor    %eax,%eax
    test   %si,%si
    jg     jump_3e8e1
    jmp    jump_3e935
  jump_3e8d0:
    xor    %esi,%esi
    inc    %eax
    mov    %esi,0x2d0(%esp)
    cmp    %di,%ax
    jl     jump_3e8e8
    jmp    jump_3e935
  jump_3e8e1:
    mov    0x354(%esp),%edi
  jump_3e8e8:
    movswl %ax,%edx
    mov    0x380(%esp),%ebx
    shl    $0x2,%edx
    add    %ebx,%edx
    mov    (%edx),%edx
    mov    0x58(%edx),%bl
    mov    %edx,0x2d0(%esp)
    cmp    $0x3,%bl
    jne    jump_3e930
    mov    0x59(%edx),%eax
    call   func_34ce4
    mov    0x2d0(%esp),%eax
    cmpb   $0x4,0x58(%eax)
    je     jump_3e935
    mov    $0xcbf,%ebx
    mov    $data_821a0,%edx
    xor    %eax,%eax
    call   func_25878
    jmp    jump_3e935
  jump_3e930:
    cmp    $0x4,%bl
    jne    jump_3e8d0
  jump_3e935:
    mov    0x2d0(%esp),%edi
    test   %edi,%edi
    je     jump_3ec3e
    cmpb   $0x4,0x58(%edi)
    je     jump_3e95b
    mov    $0xcca,%ebx
    mov    $data_821ac,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3e95b:
    mov    0x2d0(%esp),%eax
    movb   $0x1,0x5d(%eax)
    mov    $0x2,%edx
    mov    %ecx,0x5e(%eax)
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3e97c:
    cmpw   $0x0,0x384(%esp)
    jne    jump_3e998
    mov    $0xcd8,%ebx
    mov    $data_821b8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3e998:
    test   %esi,%esi
    je     jump_3ec3e
    xor    %edx,%edx
    mov    %edx,0x244(%esp)
    mov    %edx,0x248(%esp)
    mov    %edx,0x24c(%esp)
    xor    %edx,%edx
    mov    0x384(%esp),%ebx
    mov    %dx,0x358(%esp)
    test   %bx,%bx
    jg     jump_3e9f2
    jmp    jump_3ec3e
  jump_3e9d2:
    mov    0x358(%esp),%ecx
    inc    %ecx
    mov    0x384(%esp),%esi
    mov    %cx,0x358(%esp)
    cmp    %si,%cx
    jge    jump_3ec3e
  jump_3e9f2:
    mov    0x356(%esp),%eax
    sar    $0x10,%eax
    mov    0x388(%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    mov    (%eax),%esi
    mov    0x18(%esi),%ax
    mov    %ax,0x350(%esp)
    jmp    jump_3ea20
  jump_3ea18:
    incw   0x350(%esp)
  jump_3ea20:
    mov    0x34e(%esp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    0x1a(%esi),%dx
    cmp    %edx,%eax
    jge    jump_3e9d2
    lea    0x0(,%eax,4),%edx
    mov    0x10(%esi),%eax
    add    %edx,%eax
    mov    0x1(%eax),%bh
    cmp    $0xff,%bh
    je     jump_3ea18
    mov    0x2(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    and    $0xffff,%edx
    je     jump_3ea18
    mov    %bh,%al
    and    $0xff,%eax
    imul   $0x28,%eax,%eax
    mov    data_f3e46(%eax),%ax
    xor    %ah,%ah
    and    $0x4,%al
    and    $0xffff,%eax
    je     jump_3ea18
    mov    $0x47c34f80,%eax
    xor    %ebx,%ebx
    mov    %eax,0x324(%esp)
    jmp    jump_3ea86
  jump_3ea85:
    inc    %ebx
  jump_3ea86:
    movswl %bx,%eax
    cmp    %edi,%eax
    jge    jump_3ebde
    mov    (%esp,%eax,4),%edx
    mov    0x54(%edx),%ecx
    mov    $0x1,%eax
    sar    $0x10,%ecx
    shl    %cl,%eax
    xor    %ecx,%ecx
    mov    0x36c(%esp),%cl
    test   %ecx,%eax
    je     jump_3ea85
    lea    0x25c(%esp),%ecx
    mov    %ecx,0x32c(%esp)
    xor    %ecx,%ecx
    mov    %ecx,0x22c(%esp)
    mov    %ecx,0x230(%esp)
    mov    %ecx,0x234(%esp)
    lea    0x9e(%edx),%eax
    flds   (%esi)
    fsubs  (%eax)
    fstps  0x22c(%esp)
    flds   0x4(%esi)
    fsubs  0x4(%eax)
    fstps  0x230(%esp)
    flds   0x8(%esi)
    fsubs  0x8(%eax)
    fstps  0x234(%esp)
    mov    0x22c(%esp),%eax
    flds   0x230(%esp)
    fmul   %st(0),%st
    mov    %eax,0x25c(%esp)
    mov    0x230(%esp),%eax
    flds   0x22c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x260(%esp)
    mov    0x234(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x264(%esp)
    flds   0x234(%esp)
    mov    0x22c(%esp),%eax
    fmuls  0x234(%esp)
    mov    %eax,0x244(%esp)
    mov    0x230(%esp),%eax
    mov    %eax,0x248(%esp)
    mov    0x234(%esp),%eax
    faddp  %st,%st(1)
    mov    %eax,0x24c(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fstps  0x2bc(%esp)
    mov    0x2bc(%esp),%eax
    mov    0x58(%edx),%ch
    mov    %eax,0x328(%esp)
    cmp    $0x4,%ch
    je     jump_3ebb2
    flds   0x2bc(%esp)
    fadds  data_821d0
    fstps  0x328(%esp)
  jump_3ebb2:
    flds   0x328(%esp)
    fcomps 0x324(%esp)
    fnstsw %ax
    sahf
    jae    jump_3ea85
    mov    0x328(%esp),%eax
    mov    %edx,%ebp
    mov    %eax,0x324(%esp)
    jmp    jump_3ea85
  jump_3ebde:
    test   %ebp,%ebp
    jne    jump_3ebf3
    mov    $0xd01,%ebx
    mov    $data_821c4,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3ebf3:
    mov    0x34e(%esp),%eax
    sar    $0x10,%eax
    mov    0x10(%esi),%edx
    shl    $0x2,%eax
    add    %eax,%edx
    mov    %esi,%eax
    mov    %edx,0x6b(%esi)
    xor    %edx,%edx
    mov    %ebp,0x6f(%esi)
    call   func_35060
    testb  $0x1,0x73(%esi)
    je     jump_3ea18
    mov    0x398(%esp),%eax
    movb   $0x2,(%eax)
    mov    $0xffffffff,%edx
    mov    %esi,0x1(%eax)
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c
  jump_3ec3e:
    xor    %edx,%edx
  jump_3ec40:
    mov    %edx,%eax
    add    $0x370,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x1c


/*----------------------------------------------------------------*/
func_3ec50:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %edx,%ecx
    mov    %ebx,%ebp
    mov    %esp,%edi
    mov    $data_86804,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    lea    0xc(%esp),%edi
    mov    $data_86810,%esi
    mov    %edx,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    call   func_45dec
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    cmp    0x88(%ecx),%eax
    jge    jump_3ed14
    mov    %ecx,%eax
    movb   $0x1,0x62(%ecx)
    add    $0xab,%eax
    xor    %edi,%edi
    mov    %eax,0x18(%esp)
    jmp    jump_3eca5
  jump_3eca4:
    inc    %edi
  jump_3eca5:
    movswl %di,%eax
    cmp    0x15a(%ecx),%eax
    jge    jump_3ed14
    imul   $0x7,%eax,%eax
    mov    0xa8(%ecx,%eax,1),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    cmpb   $0x5,data_f653e(%eax)
    jne    jump_3eca4
    xor    %ebx,%ebx
    jmp    jump_3ecce
  jump_3eccd:
    inc    %ebx
  jump_3ecce:
    movswl %bx,%eax
    cmp    $0xb,%eax
    jge    jump_3eca4
    movswl %di,%esi
    imul   $0x7,%esi,%esi
    mov    0xab(%ecx,%esi,1),%dl
    cmp    (%esp,%eax,1),%dl
    jne    jump_3eccd
    mov    0x18(%esp),%edx
    add    %esi,%edx
    mov    %edx,0x63(%ecx)
    mov    0xc(%esp,%eax,1),%al
    xor    %edx,%edx
    mov    %al,0x67(%ecx)
    mov    %ecx,%eax
    mov    %ebp,0x68(%ecx)
    call   func_45378
    testb  $0x1,0x84(%ecx)
    je     jump_3eccd
    mov    $0xffffffff,%eax
    jmp    jump_3ed16
  jump_3ed14:
    xor    %eax,%eax
  jump_3ed16:
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3ee44:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    data_93b98,%dx
    xor    %bl,%bl
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_3ee93
    movzbl (%esi),%edi
  jump_3ee5e:
    movswl %ax,%edx
    cmp    %edi,%edx
    je     jump_3ee86
    imul   $0x1ee,%edx,%ecx
    cmpl   $0xffffffff,data_92e19(%ecx)
    je     jump_3ee86
    cmpb   $0x2,0x1c0(%edx,%esi,1)
    jne    jump_3ee86
    mov    $0x1,%dl
    mov    %al,%cl
    shl    %cl,%dl
    or     %dl,%bl
  jump_3ee86:
    mov    data_93b98,%cx
    inc    %eax
    cmp    %cx,%ax
    jl     jump_3ee5e
  jump_3ee93:
    mov    %bl,%al
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3ee9c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %ebx,%edi
    movswl %dx,%eax
    test   %eax,%eax
    jl     jump_3eeb5
    cmp    data_93b98,%si
    jl     jump_3eec6
  jump_3eeb5:
    mov    $0xdce,%ebx
    mov    $data_821d8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3eec6:
    test   %edi,%edi
    jne    jump_3eedb
    mov    $0xdcf,%ebx
    mov    $data_821e4,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3eedb:
    movswl %si,%eax
    add    %ecx,%eax
    cmpb   $0x2,0x1c0(%eax)
    je     jump_3ef59
    movsbw data_93bc4,%dx
    inc    %edx
    imul   $0xa,%edx,%edx
    cmpb   $0x3,0x1c0(%eax)
    jne    jump_3ef00
    add    %edx,%edx
  jump_3ef00:
    movswl %si,%ebx
    lea    0x0(,%ebx,2),%eax
    add    %ecx,%eax
    mov    0x1b2(%eax),%si
    sub    %edx,%esi
    mov    %si,0x1b2(%eax)
    cmpb   $0x3,0x1c0(%ecx,%ebx,1)
    jne    jump_3ef3e
    mov    0x1cf(%ecx),%bx
    cmp    %bx,%si
    jle    jump_3ef3e
    mov    %ebx,%edx
    sub    $0xa,%edx
    mov    %dx,0x1b2(%eax)
  jump_3ef3e:
    mov    $0x1,%dl
    mov    0x2(%edi),%eax
    mov    (%ecx),%cl
    sar    $0x10,%eax
    shl    %cl,%dl
    or     %dl,data_c8304(%eax)
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_3ef59:
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret

vtable_3ef60:
    .long   func_3efff
    .long   func_3f040
    .long   func_3f08f
    .long   func_3f0c9
    .long   func_3f183
    .long   func_3f234
    .long   func_3f2e8
    .long   func_3f33c
    .long   func_3f40a
    .long   func_3f47a
    .long   func_3f45a
    .long   func_3f4af
    .long   func_3f505
    .long   func_3f45a
    .long   func_3f59e
    .long   func_3f5de


/*----------------------------------------------------------------*/
func_3efa0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x6e4,%esp
    mov    %eax,%ebp
    mov    0x19a(%eax),%eax
    xor    %ebx,%ebx
    sar    $0x18,%eax
    mov    %ebx,0x6c4(%esp)
    mov    data_86780(,%eax,2),%ax
    and    $0xffff,%eax
    cmp    0x19e(%ebp),%eax
    jg     jump_3f467
    movl   $0xffffffff,0x6c4(%esp)
    cmp    $0x1,%edx
    je     jump_3f611
    mov    0x6c4(%esp),%eax
    add    $0x6e4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3efff:
/*----------------------------------------------------------------*/
    lea    0x358(%esp),%edx
    mov    %ebp,%eax
    call   func_3c310
    mov    %eax,%ebx
    test   %eax,%eax
    jle    func_3f45a
    lea    0x0(,%ebx,4),%ecx
    xor    %eax,%eax
  jump_3f020:
    mov    0x358(%esp,%eax,1),%edx
    mov    0x98(%edx),%ebx
    add    $0x4,%eax
    mov    %ebx,0x8c(%edx)
    cmp    %ecx,%eax
    jge    func_3f45a
    jmp    jump_3f020


/*----------------------------------------------------------------*/
func_3f040:
/*----------------------------------------------------------------*/
    mov    $data_92e16,%eax
    xor    %edx,%edx
    jmp    jump_3f04f
  jump_3f049:
    inc    %edx
    add    $0x1ee,%eax
  jump_3f04f:
    mov    data_93b96,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jge    func_3f45a
    cmp    %ebp,%eax
    je     jump_3f049
    xor    %ecx,%ecx
    mov    0x0(%ebp),%cl
    add    %ecx,%ecx
    mov    0x1cb(%eax),%ebx
    add    %eax,%ecx
    sar    $0x10,%ebx
    mov    0x1b0(%ecx),%esi
    add    $0x14,%ebx
    sar    $0x10,%esi
    cmp    %ebx,%esi
    jge    jump_3f049
    mov    %bx,0x1b2(%ecx)
    jmp    jump_3f049


/*----------------------------------------------------------------*/
func_3f08f:
/*----------------------------------------------------------------*/
    mov    %esp,%edx
    mov    %ebp,%eax
    call   func_3c310
    mov    %eax,%edx
    test   %eax,%eax
    jle    func_3f45a
    lea    0x0(,%edx,4),%ebx
    xor    %eax,%eax
  jump_3f0ab:
    mov    (%esp,%eax,1),%edx
    mov    0x88(%edx),%esi
    add    %esi,%esi
    add    $0x4,%eax
    mov    %esi,0x88(%edx)
    cmp    %ebx,%eax
    jge    func_3f45a
    jmp    jump_3f0ab


/*----------------------------------------------------------------*/
func_3f0c9:
/*----------------------------------------------------------------*/
    mov    $data_93bc5,%edi
    mov    %ebx,0x6bc(%esp)
    jmp    jump_3f0e9
  jump_3f0d7:
    mov    0x6bc(%esp),%eax
    inc    %eax
    add    $0x60,%edi
    mov    %eax,0x6bc(%esp)
  jump_3f0e9:
    mov    data_96143,%eax
    mov    0x6bc(%esp),%ebx
    sar    $0x10,%eax
    cmp    %ebx,%eax
    jle    func_3f45a
    mov    $0x1,%eax
    xor    %edx,%edx
    mov    0x0(%ebp),%cl
    mov    0x14(%edi),%dl
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_3f0d7
    lea    0x1ac(%esp),%edx
    mov    %edi,%eax
    call   func_1d754
    test   %eax,%eax
    jle    jump_3f0d7
    shl    $0x2,%eax
    xor    %ecx,%ecx
    mov    %eax,0x6e0(%esp)
  jump_3f131:
    mov    0x1ac(%esp,%ecx,1),%edx
    mov    0x54(%edx),%eax
    movzbl 0x0(%ebp),%esi
    sar    $0x10,%eax
    cmp    %esi,%eax
    je     jump_3f16f
    cmpb   $0x4,0x58(%edx)
    jne    jump_3f16f
    imul   $0x1ee,%eax,%eax
    mov    data_92e1d(%eax),%esi
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_1d4f8
    mov    %esi,%eax
    mov    0x1ac(%esp,%ecx,1),%edx
    call   func_1d3a8
  jump_3f16f:
    mov    0x6e0(%esp),%esi
    add    $0x4,%ecx
    cmp    %esi,%ecx
    jge    jump_3f0d7
    jmp    jump_3f131


/*----------------------------------------------------------------*/
func_3f183:
/*----------------------------------------------------------------*/
    mov    $data_93bc5,%ecx
    mov    %ebx,0x6d8(%esp)
    mov    %ecx,0x6dc(%esp)
    jmp    jump_3f1b8
  jump_3f198:
    mov    0x6d8(%esp),%eax
    mov    0x6dc(%esp),%edx
    inc    %eax
    add    $0x60,%edx
    mov    %eax,0x6d8(%esp)
    mov    %edx,0x6dc(%esp)
  jump_3f1b8:
    mov    data_96143,%eax
    mov    0x6d8(%esp),%edi
    sar    $0x10,%eax
    cmp    %edi,%eax
    jle    func_3f45a
    mov    0x6dc(%esp),%eax
    xor    %edx,%edx
    mov    0x0(%ebp),%cl
    mov    0x15(%eax),%dl
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_3f198
    lea    0x504(%esp),%edx
    mov    0x6dc(%esp),%eax
    call   func_1d754
    mov    %eax,%edi
    test   %eax,%eax
    jle    jump_3f198
    shl    $0x2,%edi
    xor    %eax,%eax
  jump_3f207:
    mov    0x504(%esp,%eax,1),%edx
    xor    %ecx,%ecx
    mov    0x54(%edx),%esi
    mov    0x0(%ebp),%cl
    sar    $0x10,%esi
    cmp    %ecx,%esi
    je     jump_3f227
    movl   $0x0,0x88(%edx)
  jump_3f227:
    add    $0x4,%eax
    cmp    %edi,%eax
    jge    jump_3f198
    jmp    jump_3f207


/*----------------------------------------------------------------*/
func_3f234:
/*----------------------------------------------------------------*/
    mov    $data_ab057,%eax
    mov    $0xffff,%ecx
    mov    %ebx,0x6d0(%esp)
    xor    %edx,%edx
    jmp    jump_3f24d
  jump_3f249:
    inc    %edx
    add    $0x7b,%eax
  jump_3f24d:
    mov    data_ba091,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jge    jump_3f281
    mov    0x57(%eax),%bl
    cmp    0x0(%ebp),%bl
    jne    jump_3f249
    xor    %ebx,%ebx
    mov    0x16(%eax),%bx
    cmp    $0xa,%ebx
    je     jump_3f249
    mov    0x42(%eax),%si
    cmp    %si,%cx
    jbe    jump_3f249
    mov    %eax,0x6d0(%esp)
    mov    %esi,%ecx
    jmp    jump_3f249
  jump_3f281:
    mov    0x6d0(%esp),%ecx
    test   %ecx,%ecx
    je     func_3f45a
    mov    0x10(%ecx),%ecx
    xor    %ebx,%ebx
    jmp    jump_3f29b
  jump_3f297:
    inc    %ebx
    add    $0x4,%ecx
  jump_3f29b:
    mov    0x6d0(%esp),%edx
    xor    %eax,%eax
    mov    0x18(%edx),%ax
    cmp    %eax,%ebx
    jge    func_3f45a
    xor    %eax,%eax
    mov    (%ecx),%al
    test   %eax,%eax
    je     jump_3f2bd
    cmp    $0x1,%eax
    jne    jump_3f297
  jump_3f2bd:
    lea    0x6b0(%esp),%edi
    mov    $data_86838,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_7369f
    mov    %eax,%edx
    mov    $0x3,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    0x6b0(%esp,%edx,4),%al
    mov    %al,(%ecx)
    jmp    jump_3f297


/*----------------------------------------------------------------*/
func_3f2e8:
/*----------------------------------------------------------------*/
    mov    $data_ba095,%edi
    xor    %esi,%esi
    jmp    jump_3f2f8
  jump_3f2f1:
    inc    %esi
    add    $0x162,%edi
  jump_3f2f8:
    mov    data_c3489,%eax
    sar    $0x10,%eax
    cmp    %eax,%esi
    jge    func_3f45a
    mov    0x54(%edi),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_3f2f1
    cmpb   $0x5,0x58(%edi)
    jne    jump_3f2f1
    mov    0x59(%edi),%edx
    mov    0xa2(%edi),%ebx
    mov    (%edx),%ecx
    test   $0x7fffffff,%ebx
    jne    jump_3f32f
    mov    0x4(%edx),%ecx
  jump_3f32f:
    mov    %edi,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_1d3a8
    jmp    jump_3f2f1


/*----------------------------------------------------------------*/
func_3f33c:
/*----------------------------------------------------------------*/
    mov    %ebx,0x6cc(%esp)
    mov    %ebx,0x6d4(%esp)
    jmp    jump_3f3e3
  jump_3f34f:
    inc    %eax
  jump_3f350:
    mov    data_93b96,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_3f376
    mov    $0x1,%ebx
    mov    data_f478b(%edi),%esi
    mov    %al,%cl
    sar    $0x18,%esi
    shl    %cl,%ebx
    test   %ebx,%esi
    je     jump_3f34f
    inc    %edx
    jmp    jump_3f34f
  jump_3f376:
    cmp    $0x2,%edx
    jl     jump_3f3c3
    mov    $0x1,%al
    mov    0x0(%ebp),%cl
    mov    data_f478e(%edi),%bh
    shl    %cl,%al
    or     %al,%bh
    xor    %eax,%eax
    mov    %bh,data_f478e(%edi)
    mov    0x0(%ebp),%al
    add    %eax,%eax
    xor    %edx,%edx
    mov    0x6cc(%esp),%ebx
    mov    data_f6492(%eax),%dx
    cmp    %ebx,%edx
    jne    jump_3f3c3
    movw   $0xffff,data_f6492(%eax)
    xor    %eax,%eax
    mov    0x0(%ebp),%al
    xor    %ebx,%edx
    mov    %dx,data_f64a0(,%eax,2)
  jump_3f3c3:
    mov    0x6d4(%esp),%ecx
    mov    0x6cc(%esp),%esi
    add    $0x4b,%ecx
    inc    %esi
    mov    %ecx,0x6d4(%esp)
    mov    %esi,0x6cc(%esp)
  jump_3f3e3:
    xor    %eax,%eax
    mov    0x6cc(%esp),%edx
    mov    data_f4744,%ax
    cmp    %edx,%eax
    jle    func_3f45a
    mov    0x6d4(%esp),%edi
    xor    %edx,%edx
    xor    %eax,%eax
    jmp    jump_3f350


/*----------------------------------------------------------------*/
func_3f40a:
/*----------------------------------------------------------------*/
    mov    $data_ab057,%eax
    xor    %edx,%edx
    jmp    jump_3f417
  jump_3f413:
    inc    %edx
    add    $0x7b,%eax
  jump_3f417:
    mov    data_ba091,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jge    jump_3f435
    mov    0x57(%eax),%bl
    cmp    0x0(%ebp),%bl
    jne    jump_3f413
    movl   $0xffffffff,0x62(%eax)
    jmp    jump_3f413
  jump_3f435:
    mov    0x19a(%ebp),%eax
    sar    $0x18,%eax
    mov    data_86780(,%eax,2),%ax
    and    $0xffff,%eax
    mov    0x19e(%ebp),%edx
    sub    %eax,%edx
    mov    %edx,0x6c8(%esp)


/*----------------------------------------------------------------*/
func_3f45a:
/*----------------------------------------------------------------*/
    mov    0x6c8(%esp),%eax
    mov    %eax,0x19e(%ebp)
  jump_3f467:
    mov    0x6c4(%esp),%eax
    add    $0x6e4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3f47a:
/*----------------------------------------------------------------*/
    mov    $data_ab057,%edx
    xor    %edi,%edi
    jmp    jump_3f487
  jump_3f483:
    inc    %edi
    add    $0x7b,%edx
  jump_3f487:
    mov    data_ba091,%eax
    sar    $0x10,%eax
    cmp    %eax,%edi
    jge    func_3f45a
    mov    0x57(%edx),%al
    cmp    0x0(%ebp),%al
    jne    jump_3f483
    mov    0x55(%edx),%cx
    add    $0x2,%ecx
    mov    %edx,%eax
    mov    %cx,0x55(%edx)
    call   func_33ff4
    jmp    jump_3f483


/*----------------------------------------------------------------*/
func_3f4af:
/*----------------------------------------------------------------*/
    mov    $data_93bc5,%esi
    xor    %edi,%edi
    jmp    jump_3f4bc
  jump_3f4b8:
    inc    %edi
    add    $0x60,%esi
  jump_3f4bc:
    mov    data_96143,%eax
    sar    $0x10,%eax
    cmp    %eax,%edi
    jge    func_3f45a
    mov    $0x1,%edx
    xor    %eax,%eax
    mov    0x0(%ebp),%cl
    mov    0x14(%esi),%al
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_3f4b8
    mov    %esi,%edx
    xor    %eax,%eax
    mov    0x42(%esi),%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_3f4b8
  jump_3f4e9:
    mov    0x2c(%edx),%ecx
    mov    0x23(%ecx),%bl
    add    $0x4,%edx
    or     $0x2,%bl
    inc    %eax
    mov    %bl,0x23(%ecx)
    mov    0x42(%esi),%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jge    jump_3f4b8
    jmp    jump_3f4e9


/*----------------------------------------------------------------*/
func_3f505:
/*----------------------------------------------------------------*/
    mov    %ebp,0x6c0(%esp)
    xor    %edi,%edi
    jmp    jump_3f523
  jump_3f510:
    mov    0x6c0(%esp),%eax
    add    $0x2,%ebx
    inc    %eax
    inc    %edi
    mov    %eax,0x6c0(%esp)
  jump_3f523:
    mov    data_93b96,%eax
    sar    $0x10,%eax
    cmp    %eax,%edi
    jge    func_3f45a
    xor    %eax,%eax
    mov    0x0(%ebp),%al
    cmp    %eax,%edi
    je     jump_3f510
    mov    0x6c0(%esp),%eax
    cmpb   $0x2,0x1c0(%eax)
    jne    jump_3f510
    mov    $data_92e16,%edx
    xor    %eax,%eax
    lea    (%edx,%ebx,1),%ecx
    jmp    jump_3f565
  jump_3f558:
    inc    %eax
    add    $0x1ee,%ecx
    add    $0x1ee,%edx
  jump_3f565:
    mov    data_93b96,%esi
    sar    $0x10,%esi
    cmp    %esi,%eax
    jge    jump_3f510
    cmp    %edi,%eax
    je     jump_3f558
    movzbl 0x0(%ebp),%esi
    cmp    %esi,%eax
    je     jump_3f558
    mov    0x1b2(%ecx),%si
    cmp    0x1c9(%edx),%si
    jle    jump_3f558
    mov    0x1c9(%edx),%si
    mov    %si,0x1b2(%ecx)
    jmp    jump_3f558


/*----------------------------------------------------------------*/
func_3f59e:
/*----------------------------------------------------------------*/
    mov    0x0(%ebp),%bl
    add    %ebx,%ebx
    xor    %edx,%edx
    mov    data_f6492(%ebx),%ax
    mov    %ax,%dx
    cmp    $0xffff,%edx
    je     func_3f45a
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    data_f4782(%eax),%ax
    mov    %ax,data_f64a0(%ebx)
    jmp    func_3f45a


/*----------------------------------------------------------------*/
func_3f5de:
/*----------------------------------------------------------------*/
    mov    $data_ab057,%eax
    xor    %edx,%edx
    jmp    jump_3f5eb
  jump_3f5e7:
    inc    %edx
    add    $0x7b,%eax
  jump_3f5eb:
    mov    data_ba091,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jge    func_3f45a
    mov    0x57(%eax),%bl
    cmp    0x0(%ebp),%bl
    jne    jump_3f5e7
    cmpb   $0xff,0x54(%eax)
    je     jump_3f5e7
    addw   $0x64,0x50(%eax)
    jmp    jump_3f5e7
  jump_3f611:
    mov    0x19d(%ebp),%al
    sub    $0x5,%al
    mov    %ebx,0x6c8(%esp)
    cmp    $0xf,%al
    ja     func_3f45a
    and    $0xff,%eax
    jmp    *%cs:vtable_3ef60(,%eax,4)


/*----------------------------------------------------------------*/
func_3f638:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1f4,%esp
    mov    %eax,%ebp
    mov    %edx,0x1f0(%esp)
    mov    %esp,%eax
    call   func_39a30
    cmp    $0xffffffff,%ebx
    jne    jump_3f69b
    mov    $0x1ee,%ebx
    mov    %esp,%edx
    mov    0x1f0(%esp),%eax
    mov    $0x7b,%ecx
    mov    %esp,%esi
    mov    %ebp,%edi
    call   func_1bf94
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x7(%ebp),%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $data_93bc5,%edx
    shl    $0x5,%eax
    movw   $0x0,0x19b(%ebp)
    add    %eax,%edx
    mov    %edx,0x7(%ebp)
    jmp    jump_3f6c9
  jump_3f69b:
    mov    $0x7b,%ecx
    mov    %esp,%edi
    mov    %ebp,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x7(%esp),%eax
    mov    0x2(%eax),%eax
    mov    $0x1ee,%ebx
    sar    $0x10,%eax
    mov    %esp,%edx
    mov    %eax,0x7(%esp)
    mov    0x1f0(%esp),%eax
    call   func_1c098
  jump_3f6c9:
    mov    %esp,%eax
    xor    %edx,%edx
    add    $0x1f4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_3f6e0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x104,%esp
    mov    %eax,%esi
    xor    %eax,%eax
    mov    0x1(%esi),%al
    push   %eax
    mov    $0xfffffff6,%edx
    push   $data_821f0
    lea    0xd4(%esp),%eax
    mov    %edx,data_f4734
    push   %eax
    mov    %edx,data_f4738
    mov    %edx,data_f473c
    call   func_720c9
    add    $0xc,%esp
    xor    %edx,%edx
    lea    0xcc(%esp),%eax
    call   func_1bb10
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_3f742
    mov    $0x55,%ebx
    mov    $data_821fd,%edx
    call   func_25888
  jump_3f742:
    xor    %ah,%ah
    mov    %ah,(%esp)
  jump_3f747:
    mov    $0x9,%ebx
    mov    $data_8220c,%edx
    mov    %esp,%eax
    call   func_73d7a
    test   %eax,%eax
    je     jump_3f767
    mov    %esp,%edx
    mov    %ecx,%eax
    call   func_2f538
    jmp    jump_3f747
  jump_3f767:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_82216
    push   %ecx
    call   func_73431
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1c9(%esi)
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_8221c
    push   %ecx
    call   func_73431
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    0x1c9(%esi),%dx
    mov    %ax,0x1cb(%esi)
    cmp    %dx,%ax
    jg     jump_3f7d6
    mov    $0x64,%ebx
    mov    $data_82222,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3f7d6:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_82231
    push   %ecx
    call   func_73431
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    0x1cb(%esi),%bx
    mov    %ax,0x1cd(%esi)
    cmp    %bx,%ax
    jg     jump_3f81c
    mov    $0x68,%ebx
    mov    $data_82237,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3f81c:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_82246
    push   %ecx
    call   func_73431
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    0x1cd(%esi),%di
    mov    %ax,0x1cf(%esi)
    cmp    %di,%ax
    jg     jump_3f862
    mov    $0x6c,%ebx
    mov    $data_8224c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3f862:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_8225b
    push   %ecx
    call   func_73431
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    0x1cf(%esi),%dx
    mov    %ax,0x1d1(%esi)
    cmp    %dx,%ax
    jg     jump_3f8a8
    mov    $0x70,%ebx
    mov    $data_82261,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3f8a8:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_82270
    push   %ecx
    call   func_73431
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    0x1d1(%esi),%bx
    mov    %ax,0x1d3(%esi)
    cmp    %bx,%ax
    jg     jump_3f8ee
    mov    $0x74,%ebx
    mov    $data_82276,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3f8ee:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_82285
    push   %ecx
    call   func_73431
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1d5(%esi)
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_8228b
    push   %ecx
    call   func_73431
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1b0(%esi)
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_82291
    push   %ecx
    call   func_73431
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1d7(%esi)
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_82297
    push   %ecx
    call   func_73431
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1d9(%esi)
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_8229d
    push   %ecx
    call   func_73431
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1db(%esi)
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_822a3
    push   %ecx
    call   func_73431
    add    $0x10,%esp
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_822a9
    filds  0x10c(%esp)
    push   %ecx
    fstps  0x1dd(%esi)
    call   func_73431
    add    $0x10,%esp
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_822af
    filds  0x10c(%esp)
    push   %ecx
    fstps  0x1e1(%esi)
    call   func_73431
    add    $0x10,%esp
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_822b5
    filds  0x10c(%esp)
    push   %ecx
    fstps  0x1e5(%esi)
    call   func_73431
    add    $0x10,%esp
    mov    0x100(%esp),%eax
    mov    %ax,0x1c7(%esi)
    mov    0x1(%esi),%al
    mov    %al,0x19d(%esi)
    mov    %ecx,%eax
    movl   $0x0,0x19e(%esi)
    call   func_7280e
    add    $0x104,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3fa84:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    $0x1,%edi
    xor    %edx,%edx
    xor    %eax,%eax
    mov    %edx,(%esp)
    shl    %cl,%edi
    mov    $data_93bc5,%edx
    jmp    jump_3faa9
  jump_3faa5:
    inc    %eax
    add    $0x60,%edx
  jump_3faa9:
    mov    data_96143,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jge    jump_3fad3
    mov    $0x1,%ebp
    xor    %ebx,%ebx
    mov    (%esi),%cl
    mov    0x17(%edx),%bl
    shl    %cl,%ebp
    test   %ebp,%ebx
    je     jump_3faa5
    test   %edi,%ebx
    je     jump_3faa5
    movl   $0xffffffff,(%esp)
  jump_3fad3:
    mov    (%esp),%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_3fae0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    mov    (%eax),%al
    cmp    data_f458e,%al
    jne    jump_3fb0f
    cmpl   $0xffffffff,data_90ba4
    je     jump_3fb0f
    mov    $0xcd,%ebx
    mov    $data_822bb,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3fb0f:
    mov    $data_92e16,%ebx
    mov    %esi,0x10(%esp)
    mov    %esi,%ebp
    movb   $0xe,0x1e9(%esi)
    xor    %edi,%edi
    mov    %ebx,0xc(%esp)
    jmp    jump_3fb86
  jump_3fb29:
    lea    0x8(%esp),%eax
    mov    0x4(%esp),%ecx
    xor    %edx,%edx
    push   %eax
    movsbl %bl,%eax
    mov    (%esi),%dl
    mov    %eax,0x4(%esp)
    mov    %eax,%ebx
    mov    0x10(%esp),%eax
    call   func_40410
    mov    0x8(%esp),%edx
    mov    0x4(%esp),%ebx
    push   %edx
    movsbl %al,%ecx
    mov    %esi,%eax
    push   %ebx
    movswl %di,%edx
    mov    0x8(%esp),%ebx
    call   func_408f4
  jump_3fb63:
    mov    0x10(%esp),%ecx
    mov    0xc(%esp),%eax
    inc    %ebp
    inc    %edi
    add    $0x2,%ecx
    add    $0x1ee,%eax
    mov    %ecx,0x10(%esp)
    mov    %eax,0xc(%esp)
    cmp    $0x7,%edi
    jge    jump_3fc7d
  jump_3fb86:
    xor    %eax,%eax
    mov    (%esi),%al
    cmp    %eax,%edi
    je     jump_3fb63
    imul   $0x1ee,%edi,%eax
    cmpl   $0xffffffff,data_92e19(%eax)
    je     jump_3fb63
    xor    %eax,%eax
    mov    data_f458e,%al
    cmp    %eax,%edi
    jne    jump_3fbb1
    cmpl   $0xffffffff,data_90ba4
    jne    jump_3fc0a
  jump_3fbb1:
    cmpb   $0x0,0x1c0(%ebp)
    jne    jump_3fc0a
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_3fa84
    cmp    $0xffffffff,%eax
    jne    jump_3fc0a
    mov    0x10(%esp),%edx
    mov    0x1d5(%esi),%ax
    mov    %ax,0x1b2(%edx)
    imul   $0x1ee,%edi,%eax
    xor    %edx,%edx
    mov    (%esi),%dl
    add    %edx,%edx
    lea    (%eax,%edx,1),%ebx
    mov    data_92feb(%eax),%dx
    mov    %dx,data_92fc8(%ebx)
    xor    %edx,%edx
    mov    (%esi),%dl
    mov    $0x1,%bl
    mov    %bl,data_92fd6(%edx,%eax,1)
    mov    %bl,0x1c0(%ebp)
  jump_3fc0a:
    cmpb   $0x0,0x1c0(%ebp)
    je     jump_3fb63
    lea    0x4(%esp),%ebx
    movswl %di,%edx
    mov    %esi,%eax
    call   func_3fe94
    mov    %al,%bl
    cmp    $0xe,%al
    je     jump_3fb63
    xor    %edx,%edx
    mov    data_f458e,%dl
    cmp    %edx,%edi
    jne    jump_3fb29
    cmpl   $0x0,data_90ba4
    jne    jump_3fb29
    mov    $0x2,%edx
    mov    %al,0x1e9(%esi)
    xor    %ebx,%ebx
    mov    0x4(%esp),%eax
    mov    0x1e6(%esi),%ecx
    mov    (%esi),%bl
    sar    $0x18,%ecx
    mov    %eax,0x1ea(%esi)
    mov    $data_fa35c,%eax
    call   func_50eb0
    jmp    jump_3fb63
  jump_3fc7d:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_3fc88:
    .long   func_3fcf2
    .long   func_3fd1d
    .long   func_3fd0c
    .long   func_3fda9


/*----------------------------------------------------------------*/
func_3fc98:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %edx,%eax
    mov    %ecx,%edx
    movswl %ax,%ebp
    mov    %ebp,%eax
    shl    $0x5,%eax
    sub    %ebp,%eax
    shl    $0x3,%eax
    sub    %ebp,%eax
    mov    $data_92e16,%edi
    add    %eax,%eax
    movb   $0xe,(%ebx)
    add    %eax,%edi
    mov    0x1c0(%esi,%ebp,1),%al
    mov    $0x1,%ecx
    cmp    $0x3,%al
    ja     jump_3fe79
    and    $0xff,%eax
    shl    $0x2,%eax
    mov    %eax,(%esp)
    lea    0x2(%ebx),%eax
    mov    (%esp),%ebp
    mov    %eax,0x4(%esp)
    lea    0x1(%ebx),%eax
    jmp    *%cs:vtable_3fc88(%ebp)


/*----------------------------------------------------------------*/
func_3fcf2:
/*----------------------------------------------------------------*/
    mov    $0x126,%ebx
    mov    $data_822ca,%edx
    xor    %eax,%eax
    call   func_25888
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_3fd0c:
/*----------------------------------------------------------------*/
    mov    $0x2,%ecx
    movb   $0xd,(%eax)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_3fd1d:
/*----------------------------------------------------------------*/
    movb   $0x2,(%eax)
    mov    0x4(%esp),%eax
    movb   $0x3,(%eax)
    mov    data_f4734,%ebp
    mov    data_92e10,%eax
    sub    %ebp,%eax
    mov    $0x3,%ecx
    cmp    $0x5,%eax
    jl     jump_3fd49
    lea    0x3(%ebx),%eax
    mov    $0x4,%ecx
    movb   $0x4,(%eax)
  jump_3fd49:
    mov    data_92e10,%eax
    sub    data_f4738,%eax
    cmp    $0x5,%eax
    jl     jump_3fd61
    movswl %cx,%eax
    inc    %ecx
    movb   $0x5,(%ebx,%eax,1)
  jump_3fd61:
    mov    data_92e10,%eax
    sub    data_f473c,%eax
    cmp    $0x5,%eax
    jl     jump_3fd79
    movswl %cx,%eax
    inc    %ecx
    movb   $0x6,(%ebx,%eax,1)
  jump_3fd79:
    movswl %dx,%eax
    cmpb   $0x0,0x1c0(%esi,%eax,1)
    je     jump_3fe8a
    cmpb   $0x2,0x1c0(%edi,%eax,1)
    jne    jump_3fe8a
    movswl %cx,%eax
    inc    %ecx
    movb   $0x7,(%ebx,%eax,1)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_3fda9:
/*----------------------------------------------------------------*/
    movb   $0x8,(%eax)
    mov    data_f4734,%ebp
    mov    data_92e10,%eax
    sub    %ebp,%eax
    mov    $0x2,%ecx
    cmp    $0x5,%eax
    jl     jump_3fdcf
    mov    0x4(%esp),%eax
    mov    $0x3,%ecx
    movb   $0x4,(%eax)
  jump_3fdcf:
    mov    data_92e10,%eax
    sub    data_f4738,%eax
    cmp    $0x5,%eax
    jl     jump_3fde7
    movswl %cx,%eax
    inc    %ecx
    movb   $0x5,(%ebx,%eax,1)
  jump_3fde7:
    mov    data_92e10,%eax
    sub    data_f473c,%eax
    cmp    $0x5,%eax
    jl     jump_3fdff
    movswl %cx,%eax
    inc    %ecx
    movb   $0x6,(%ebx,%eax,1)
  jump_3fdff:
    movswl %cx,%eax
    movb   $0xc,(%ebx,%eax,1)
    movswl %dx,%eax
    lea    (%esi,%eax,1),%ebp
    inc    %ecx
    cmpb   $0x0,0x1c0(%ebp)
    je     jump_3fe28
    cmpb   $0x2,0x1c0(%edi,%eax,1)
    jne    jump_3fe28
    movswl %cx,%eax
    inc    %ecx
    movb   $0x7,(%ebx,%eax,1)
  jump_3fe28:
    movswl %dx,%eax
    lea    (%esi,%eax,1),%ebp
    cmpb   $0x0,0x1c0(%ebp)
    je     jump_3fe51
    cmpb   $0x1,0x1c0(%edi,%eax,1)
    jne    jump_3fe51
    movswl %cx,%eax
    inc    %ecx
    movb   $0x9,(%ebx,%eax,1)
    movswl %cx,%eax
    inc    %ecx
    movb   $0xb,(%ebx,%eax,1)
  jump_3fe51:
    movswl %dx,%eax
    cmpb   $0x0,0x1c0(%esi,%eax,1)
    je     jump_3fe8a
    cmpb   $0x3,0x1c0(%edi,%eax,1)
    jne    jump_3fe8a
    movswl %cx,%eax
    inc    %ecx
    movb   $0xa,(%ebx,%eax,1)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_3fe79:
    mov    $0x17e,%ebx
    mov    $data_822d9,%edx
    xor    %eax,%eax
    call   func_25888
  jump_3fe8a:
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_3fe94:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %ebx,0x4(%esp)
    mov    (%eax),%al
    cmp    data_f458e,%al
    jne    jump_3fecf
    cmpl   $0xffffffff,data_90ba4
    je     jump_3fecf
    mov    $0x18d,%ebx
    mov    $data_822e8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3fecf:
    movswl %si,%eax
    mov    0x1c0(%ecx,%eax,1),%dl
    add    %eax,%eax
    add    %ecx,%eax
    cmp    $0x2,%dl
    jb     jump_3ff84
    jbe    jump_3ff40
    cmp    $0x3,%dl
    je     jump_3ff57
    jmp    jump_3ff8d
  jump_3fef2:
    mov    0x1b2(%eax),%ax
    cmp    0x1c9(%ecx),%ax
    jge    jump_3ff25
    xor    %eax,%eax
    mov    (%ecx),%al
    lea    0x0(,%eax,4),%edx
    sub    %eax,%edx
    mov    data_93b9c(,%edx,2),%eax
    sar    $0x10,%eax
    cmp    $0x2,%eax
    jle    jump_3ff25
    mov    $0x2,%al
    jmp    jump_40229
  jump_3ff25:
    movswl %si,%eax
    mov    0x1d3(%ecx),%di
    cmp    0x1b2(%ecx,%eax,2),%di
    jge    jump_3ff8d
    mov    $0x3,%al
    jmp    jump_40229
  jump_3ff40:
    mov    0x1b2(%eax),%ax
    cmp    0x1cd(%ecx),%ax
    jle    jump_3ff8d
    mov    $0xd,%al
    jmp    jump_40229
  jump_3ff57:
    mov    0x1b2(%eax),%dx
    cmp    0x1c9(%ecx),%dx
    jge    jump_3ff71
    mov    $0x2,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_3ff71:
    cmp    0x1cf(%ecx),%dx
    jge    jump_3ff8d
    mov    $0x8,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_3ff84:
    cmp    $0x1,%dl
    je     jump_3fef2
  jump_3ff8d:
    mov    data_92e10,%eax
    mov    0x1c5(%ecx),%ebx
    mov    %eax,%edx
    sar    $0x10,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    test   %edx,%edx
    jne    jump_40227
    xor    %eax,%eax
    movswl %si,%ebx
    mov    data_f458e,%al
    cmp    %eax,%ebx
    jne    jump_40227
    cmpb   $0x2,0x1c0(%ecx,%ebx,1)
    je     jump_40227
    call   func_7369f
    mov    %eax,%edx
    mov    $0x64,%edi
    sar    $0x1f,%edx
    idiv   %edi
    xor    %eax,%eax
    mov    data_f458e,%al
    mov    %edx,(%esp)
    cmp    %eax,%ebx
    je     jump_3fffa
    mov    $0x1bc,%ebx
    mov    $data_822f7,%edx
    xor    %eax,%eax
    call   func_25878
  jump_3fffa:
    movswl %si,%eax
    cmpb   $0x3,0x1c0(%ecx,%eax,1)
    jne    jump_40162
    cmpl   $0x50,(%esp)
    jge    jump_40162
    mov    data_93b98,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jg     jump_40034
    jmp    jump_40084
  jump_40025:
    mov    data_93b98,%bx
    inc    %eax
    cmp    %bx,%ax
    jl     jump_40037
    jmp    jump_40084
  jump_40034:
    movzbl (%ecx),%ebp
  jump_40037:
    movswl %ax,%edx
    cmp    %ebp,%edx
    je     jump_40025
    cmp    %si,%ax
    je     jump_40025
    imul   $0x1ee,%edx,%ebx
    cmpl   $0xffffffff,data_92e19(%ebx)
    je     jump_40025
    cmpb   $0x2,0x1c0(%ecx,%edx,1)
    jne    jump_40025
    xor    %ebx,%ebx
    mov    data_f458e,%bl
    imul   $0x1ee,%ebx,%ebx
    cmpb   $0x3,data_92fd6(%edx,%ebx,1)
    jne    jump_40025
    mov    0x4(%esp),%eax
    mov    %edx,(%eax)
    mov    $0xa,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_40084:
    mov    data_93b98,%di
    xor    %eax,%eax
    test   %di,%di
    jg     jump_400a3
    jmp    jump_400f3
  jump_40094:
    mov    data_93b98,%dx
    inc    %eax
    cmp    %dx,%ax
    jl     jump_400a6
    jmp    jump_400f3
  jump_400a3:
    movzbl (%ecx),%ebp
  jump_400a6:
    movswl %ax,%edx
    cmp    %ebp,%edx
    je     jump_40094
    cmp    %si,%ax
    je     jump_40094
    imul   $0x1ee,%edx,%ebx
    cmpl   $0xffffffff,data_92e19(%ebx)
    je     jump_40094
    cmpb   $0x3,0x1c0(%ecx,%edx,1)
    jne    jump_40094
    xor    %ebx,%ebx
    mov    data_f458e,%bl
    imul   $0x1ee,%ebx,%ebx
    cmpb   $0x2,data_92fd6(%edx,%ebx,1)
    jne    jump_40094
    mov    0x4(%esp),%eax
    mov    %edx,(%eax)
    mov    $0x7,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_400f3:
    mov    data_93b98,%bx
    xor    %eax,%eax
    test   %bx,%bx
    jg     jump_40112
    jmp    jump_40162
  jump_40103:
    mov    data_93b98,%di
    inc    %eax
    cmp    %di,%ax
    jl     jump_40115
    jmp    jump_40162
  jump_40112:
    movzbl (%ecx),%ebp
  jump_40115:
    movswl %ax,%edx
    cmp    %ebp,%edx
    je     jump_40103
    cmp    %si,%ax
    je     jump_40103
    imul   $0x1ee,%edx,%ebx
    cmpl   $0xffffffff,data_92e19(%ebx)
    je     jump_40103
    cmpb   $0x2,0x1c0(%ecx,%edx,1)
    jne    jump_40103
    xor    %ebx,%ebx
    mov    data_f458e,%bl
    imul   $0x1ee,%ebx,%ebx
    cmpb   $0x1,data_92fd6(%edx,%ebx,1)
    jne    jump_40103
    mov    0x4(%esp),%eax
    mov    %edx,(%eax)
    mov    $0x9,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_40162:
    movswl %si,%eax
    mov    0x1c9(%ecx),%bx
    cmp    0x1b2(%ecx,%eax,2),%bx
    jg     jump_40227
    cmpb   $0x3,0x1c0(%ecx,%eax,1)
    jne    jump_40188
    addl   $0xf,(%esp)
  jump_40188:
    movswl %si,%edx
    mov    0x1cd(%ecx),%eax
    mov    0x1b0(%ecx,%edx,2),%ebx
    sar    $0x10,%eax
    sar    $0x10,%ebx
    add    $0xa,%eax
    cmp    %eax,%ebx
    jle    jump_401c0
    cmpl   $0x5d,(%esp)
    jl     jump_401c0
    mov    %ecx,%eax
    call   func_41a4c
    test   %eax,%eax
    je     jump_401c0
    mov    $0x6,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_401c0:
    movswl %si,%edx
    mov    0x1cf(%ecx),%di
    cmp    0x1b2(%ecx,%edx,2),%di
    jge    jump_401ef
    cmpl   $0x58,(%esp)
    jl     jump_401ef
    mov    %ecx,%eax
    call   func_41878
    test   %eax,%eax
    je     jump_401ef
    mov    $0x5,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_401ef:
    movswl %si,%edx
    mov    0x1d3(%ecx),%eax
    mov    0x1b0(%ecx,%edx,2),%ebx
    sar    $0x10,%eax
    sar    $0x10,%ebx
    add    $0x14,%eax
    cmp    %eax,%ebx
    jle    jump_40227
    cmpl   $0x50,(%esp)
    jl     jump_40227
    mov    %ecx,%eax
    call   func_416a8
    test   %eax,%eax
    je     jump_40227
    mov    $0x4,%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_40227:
    mov    $0xe,%al
  jump_40229:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret

vtable_40234:
    .long   func_402b4
    .long   func_402c3
    .long   func_402d5
    .long   func_402e4
    .long   func_40317
    .long   func_40329
    .long   func_4033b
    .long   func_4034d
    .long   func_40308
    .long   func_4035f
    .long   func_40371
    .long   func_40383
    .long   func_40395
    .long   func_402f6
    .long   func_403a7


/*----------------------------------------------------------------*/
func_40270:
/*----------------------------------------------------------------*/
    push   %esi
    sub    $0x4,%esp
    mov    %bl,(%esp)
    mov    (%eax),%al
    cmp    data_f458e,%al
    je     jump_40296
    mov    $0x20d,%ebx
    mov    $data_82306,%edx
    xor    %eax,%eax
    call   func_25878
  jump_40296:
    mov    (%esp),%dl
    xor    %esi,%esi
    cmp    $0xe,%dl
    ja     jump_403c4
    xor    %edx,%edx
    mov    (%esp),%dl
    lea    0x1(%ecx),%eax
    jmp    *%cs:vtable_40234(,%edx,4)


/*----------------------------------------------------------------*/
func_402b4:
/*----------------------------------------------------------------*/
    mov    $0x1,%esi
    movb   $0x0,(%ecx)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_402c3:
/*----------------------------------------------------------------*/
    movb   $0x1,(%ecx)
    mov    $0x2,%esi
    movb   $0x2,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_402d5:
/*----------------------------------------------------------------*/
    mov    $0x1,%esi
    movb   $0x3,(%ecx)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_402e4:
/*----------------------------------------------------------------*/
    movb   $0x4,(%ecx)
    mov    $0x2,%esi
    movb   $0x5,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_402f6:
/*----------------------------------------------------------------*/
    movb   $0x1b,(%ecx)
    mov    $0x2,%esi
    movb   $0x1c,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_40308:
/*----------------------------------------------------------------*/
    mov    $0x1,%esi
    movb   $0xe,(%ecx)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_40317:
/*----------------------------------------------------------------*/
    movb   $0x6,(%ecx)
    mov    $0x2,%esi
    movb   $0x7,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_40329:
/*----------------------------------------------------------------*/
    movb   $0x8,(%ecx)
    mov    $0x2,%esi
    movb   $0x9,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4033b:
/*----------------------------------------------------------------*/
    movb   $0xa,(%ecx)
    mov    $0x2,%esi
    movb   $0xb,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4034d:
/*----------------------------------------------------------------*/
    movb   $0xc,(%ecx)
    mov    $0x2,%esi
    movb   $0xd,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4035f:
/*----------------------------------------------------------------*/
    movb   $0xf,(%ecx)
    mov    $0x2,%esi
    movb   $0x10,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_40371:
/*----------------------------------------------------------------*/
    movb   $0x11,(%ecx)
    mov    $0x2,%esi
    movb   $0x12,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_40383:
/*----------------------------------------------------------------*/
    movb   $0x13,(%ecx)
    mov    $0x2,%esi
    movb   $0x14,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_40395:
/*----------------------------------------------------------------*/
    movb   $0x15,(%ecx)
    mov    $0x2,%esi
    movb   $0x16,(%eax)
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_403a7:
/*----------------------------------------------------------------*/
    mov    $0x279,%ebx
    mov    $data_82315,%edx
    xor    %eax,%eax
    mov    $0xe,%esi
    call   func_25888
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret
  jump_403c4:
    mov    $0x27e,%ebx
    mov    $data_82324,%edx
    xor    %eax,%eax
    call   func_25888
    mov    %esi,%eax
    add    $0x4,%esp
    pop    %esi
    ret

vtable_403dc:
    .long   func_4043e
    .long   func_4044c
    .long   func_404ba
    .long   func_404fe
    .long   func_40539
    .long   func_4057d
    .long   func_404ac
    .long   func_405f2
    .long   func_40668
    .long   func_40729
    .long   func_407ba
    .long   func_4047c
    .long   func_4088c


/*----------------------------------------------------------------*/
func_40410:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1ac,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ecx,0x1ea(%eax)
    mov    %bl,%al
    sub    $0x2,%al
    mov    %ecx,%ebp
    cmp    $0xc,%al
    ja     jump_40898
    and    $0xff,%eax
    jmp    *%cs:vtable_403dc(,%eax,4)


/*----------------------------------------------------------------*/
func_4043e:
/*----------------------------------------------------------------*/
    mov    $0x3,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_4044c:
/*----------------------------------------------------------------*/
    movswl %dx,%eax
    mov    0x1b2(%esi,%eax,2),%ax
    cmp    0x1d1(%esi),%ax
    jle    jump_4046e
    mov    $0x4,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_4046e:
    mov    $0x5,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_4047c:
/*----------------------------------------------------------------*/
    movswl %dx,%eax
    mov    0x1b2(%esi,%eax,2),%ax
    cmp    0x1cb(%esi),%ax
    jl     jump_4049e
    mov    $0x1b,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_4049e:
    mov    $0x1c,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_404ac:
/*----------------------------------------------------------------*/
    mov    $0xe,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_404ba:
/*----------------------------------------------------------------*/
    movswl %dx,%edx
    mov    0x1d3(%esi),%eax
    mov    0x1b0(%esi,%edx,2),%ebx
    sar    $0x10,%eax
    sar    $0x10,%ebx
    add    $0x14,%eax
    cmp    %eax,%ebx
    jle    jump_404f0
    mov    %esi,%eax
    call   func_416a8
    test   %eax,%eax
    je     jump_404f0
    mov    $0x6,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_404f0:
    mov    $0x7,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_404fe:
/*----------------------------------------------------------------*/
    movswl %dx,%edx
    mov    0x1cf(%esi),%di
    cmp    0x1b2(%esi,%edx,2),%di
    jge    jump_4052b
    mov    %esi,%eax
    call   func_41878
    test   %eax,%eax
    je     jump_4052b
    mov    $0x8,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_4052b:
    mov    $0x9,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_40539:
/*----------------------------------------------------------------*/
    movswl %dx,%edx
    mov    0x1cd(%esi),%eax
    mov    0x1b0(%esi,%edx,2),%ebx
    sar    $0x10,%eax
    sar    $0x10,%ebx
    add    $0xa,%eax
    cmp    %eax,%ebx
    jle    jump_4056f
    mov    %esi,%eax
    call   func_41a4c
    test   %eax,%eax
    je     jump_4056f
    mov    $0xa,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_4056f:
    mov    $0xb,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_4057d:
/*----------------------------------------------------------------*/
    cmpb   $0x2,0x1c0(%ecx,%esi,1)
    je     jump_40598
    mov    $0x2e0,%ebx
    mov    $data_82333,%edx
    xor    %eax,%eax
    call   func_25878
  jump_40598:
    movswl %di,%edx
    mov    %edx,%ebx
    shl    $0x5,%ebx
    sub    %edx,%ebx
    shl    $0x3,%ebx
    sub    %edx,%ebx
    add    %ebx,%ebx
    mov    0x1b2(%esi,%edx,2),%dx
    mov    data_92fe7(%ebx),%cx
    mov    0x1b0(%esi,%ebp,2),%eax
    sub    %ecx,%edx
    sar    $0x10,%eax
    movswl %dx,%edx
    add    %eax,%edx
    mov    0x1cb(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jle    jump_405e4
    mov    $0xc,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_405e4:
    mov    $0xd,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_405f2:
/*----------------------------------------------------------------*/
    movswl %dx,%eax
    cmpb   $0x3,0x1c0(%esi,%eax,1)
    je     jump_40610
    mov    $0x2f4,%ebx
    mov    $data_82342,%edx
    xor    %eax,%eax
    call   func_25878
  jump_40610:
    cmpb   $0x1,0x1c0(%esi,%ebp,1)
    je     jump_4062b
    mov    $0x2f5,%ebx
    mov    $data_82351,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4062b:
    movswl %di,%eax
    mov    0x1b2(%esi,%eax,2),%ax
    mov    0x1b2(%esi,%ecx,2),%di
    mov    0x1d5(%esi),%dx
    sub    %edi,%eax
    cmp    %dx,%ax
    jle    jump_4065a
    mov    $0xf,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_4065a:
    mov    $0x10,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_40668:
/*----------------------------------------------------------------*/
    movswl %dx,%eax
    cmpb   $0x3,0x1c0(%esi,%eax,1)
    je     jump_40686
    mov    $0x30b,%ebx
    mov    $data_82360,%edx
    xor    %eax,%eax
    call   func_25878
  jump_40686:
    cmpb   $0x3,0x1c0(%esi,%ebp,1)
    je     jump_406a1
    mov    $0x30c,%ebx
    mov    $data_8236f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_406a1:
    movswl %di,%edx
    lea    0x0(,%edx,2),%ebx
    lea    0x0(,%ebp,2),%eax
    add    %esi,%ebx
    add    %eax,%esi
    mov    0x1b2(%ebx),%ax
    mov    0x1b2(%esi),%di
    sub    %edi,%eax
    cwtl
    test   %eax,%eax
    jle    jump_4071b
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    lea    (%eax,%eax,1),%edx
    mov    0x1b2(%ebx),%ax
    mov    data_92fe7(%edx),%bx
    mov    %ebp,%edx
    shl    $0x5,%edx
    sub    %ebp,%edx
    shl    $0x3,%edx
    sub    %ebp,%edx
    sub    %ebx,%eax
    add    %edx,%edx
    mov    %eax,%ebx
    mov    %edi,%eax
    sub    data_92fe7(%edx),%ax
    movswl %bx,%edx
    cwtl
    sub    %eax,%edx
    test   %edx,%edx
    jle    jump_4071b
    mov    $0x11,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_4071b:
    mov    $0x12,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_40729:
/*----------------------------------------------------------------*/
    movswl %dx,%eax
    cmpb   $0x3,0x1c0(%esi,%eax,1)
    je     jump_40747
    mov    $0x32e,%ebx
    mov    $data_8237e,%edx
    xor    %eax,%eax
    call   func_25878
  jump_40747:
    cmpb   $0x1,0x1c0(%esi,%ebp,1)
    je     jump_40762
    mov    $0x32f,%ebx
    mov    $data_8238d,%edx
    xor    %eax,%eax
    call   func_25878
  jump_40762:
    movswl %di,%edx
    mov    %edx,%ebx
    shl    $0x5,%ebx
    sub    %edx,%ebx
    shl    $0x3,%ebx
    sub    %edx,%ebx
    add    %ebx,%ebx
    mov    0x1b2(%esi,%edx,2),%ax
    mov    data_92fe7(%ebx),%cx
    mov    0x1b0(%esi,%ebp,2),%edx
    sub    %ecx,%eax
    sar    $0x10,%edx
    cwtl
    sub    %eax,%edx
    mov    0x1c7(%esi),%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jge    jump_407ac
    mov    $0x13,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_407ac:
    mov    $0x14,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_407ba:
/*----------------------------------------------------------------*/
    test   %ecx,%ecx
    jne    jump_407cf
    mov    $0x347,%ebx
    mov    $data_8239c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_407cf:
    mov    0x1bc(%esp),%edx
    test   %edx,%edx
    je     jump_407dc
    mov    %ebp,(%edx)
  jump_407dc:
    mov    $0x2,%edx
    mov    %ebp,%ebx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_4119c
    test   %eax,%eax
    jne    jump_407fe
    mov    $0x18,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_407fe:
    mov    %esp,%ebx
    mov    %ebp,%edx
    mov    %esi,%eax
    call   func_4108c
    test   %ax,%ax
    je     jump_4085e
    mov    $0x1,%eax
    xor    %edx,%edx
    mov    (%esi),%cl
    mov    0x15(%ebp),%dl
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_4082e
    mov    $0x1a,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_4082e:
    movswl %di,%eax
    mov    0x1d3(%esi),%bx
    cmp    0x1b2(%esi,%eax,2),%bx
    jge    jump_40850
    mov    $0x15,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_40850:
    mov    $0x16,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_4085e:
    mov    $0x1,%eax
    xor    %edx,%edx
    mov    (%esi),%cl
    mov    0x15(%ebp),%dl
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_4087e
    mov    $0x19,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_4087e:
    mov    $0x17,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_4088c:
/*----------------------------------------------------------------*/
    mov    $0x378,%ebx
    mov    $data_823ab,%edx
    jmp    jump_408a2
  jump_40898:
    mov    $0x37d,%ebx
    mov    $data_823ba,%edx
  jump_408a2:
    xor    %eax,%eax
    call   func_25888
    mov    $0x1d,%al
    add    $0x1ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4

vtable_408b8:
    .long   func_409b7
    .long   func_4104b
    .long   func_40a1b
    .long   func_40a58
    .long   func_40b92
    .long   func_40c39
    .long   func_40cd3
    .long   func_40d6d
    .long   func_40b58
    .long   func_40e0f
    .long   func_40e81
    .long   func_40ef3
    .long   func_40f9f
    .long   func_40ae9
    .long   func_4106f


/*----------------------------------------------------------------*/
func_408f4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c8,%esp
    mov    %eax,%esi
    mov    %dx,0x1c4(%esp)
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    mov    %eax,0x1b8(%esp)
    mov    %eax,%edx
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    $data_92e16,%edi
    add    %eax,%eax
    add    %eax,%edi
    cmp    $0xe,%bl
    ja     jump_41080
    xor    %eax,%eax
    mov    %bl,%al
    lea    0x0(,%eax,4),%ebp
    mov    0x1d8(%esp),%eax
    add    %edi,%eax
    mov    0x1d8(%esp),%edx
    mov    %eax,0x1b4(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    lea    (%edx,%edx,1),%ebx
    mov    %eax,0x1b0(%esp)
    mov    $data_92e16,%eax
    mov    0x1b0(%esp),%edx
    add    %edx,%eax
    mov    %eax,0x1c0(%esp)
    mov    0x1c0(%esp),%edx
    mov    0x1b8(%esp),%eax
    add    0x1b8(%esp),%edx
    add    %eax,%eax
    mov    %edx,0x1bc(%esp)
    mov    0x1c0(%esp),%edx
    add    %edi,%ebx
    add    %eax,%edx
    add    %esi,%eax
    jmp    *%cs:vtable_408b8(%ebp)


/*----------------------------------------------------------------*/
func_409b7:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    mov    (%esi),%al
    mov    0x1c2(%esp),%edx
    movb   $0x1,0x1c0(%edi,%eax,1)
    sar    $0x10,%edx
    mov    0x1c0(%edi,%eax,1),%al
    mov    %al,0x1c0(%edx,%esi,1)
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    add    %eax,%eax
    lea    (%esi,%eax,1),%edx
    mov    0x1d5(%esi),%ax
    mov    %ax,0x1b2(%edx)
    xor    %eax,%eax
    mov    (%esi),%al
    add    %eax,%eax
    lea    (%edi,%eax,1),%edx
    mov    0x1d5(%edi),%ax
    mov    %ax,0x1b2(%edx)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_40a1b:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    mov    (%esi),%al
    mov    0x1c2(%esp),%edx
    movb   $0x2,0x1c0(%edi,%eax,1)
    sar    $0x10,%edx
    mov    0x1c0(%edi,%eax,1),%al
    mov    %al,0x1c0(%edx,%esi,1)
    xor    %eax,%eax
    mov    (%esi),%al
    subw   $0x28,0x1b2(%edi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_40a58:
/*----------------------------------------------------------------*/
    mov    data_f458e,%bh
    cmp    (%esi),%bh
    jne    jump_40a6f
    xor    %eax,%eax
    mov    %bh,%al
    addw   $0x3,0x1b2(%edi,%eax,2)
  jump_40a6f:
    cmp    $0x4,%cl
    jne    jump_40ac4
    xor    %eax,%eax
    mov    (%esi),%al
    mov    0x1c2(%esp),%edx
    movb   $0x3,0x1c0(%edi,%eax,1)
    sar    $0x10,%edx
    mov    0x1c0(%edi,%eax,1),%al
    mov    %al,0x1c0(%edx,%esi,1)
    mov    0x1b2(%esi,%edx,2),%cx
    add    $0xa,%ecx
    xor    %eax,%eax
    mov    %cx,0x1b2(%esi,%edx,2)
    mov    (%esi),%al
    addw   $0xa,0x1b2(%edi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8
  jump_40ac4:
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    mov    0x1d1(%esi),%dx
    mov    %dx,0x1b2(%esi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_40ae9:
/*----------------------------------------------------------------*/
    mov    (%esi),%al
    cmp    data_f458e,%al
    jne    jump_40b03
    xor    %eax,%eax
    mov    data_f458e,%al
    addw   $0x3,0x1b2(%edi,%eax,2)
  jump_40b03:
    cmp    $0x1b,%cl
    jne    jump_40b39
    xor    %eax,%eax
    mov    (%esi),%al
    add    %eax,%edi
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    movb   $0x1,0x1c0(%edi)
    add    %eax,%esi
    mov    0x1c0(%edi),%al
    mov    %al,0x1c0(%esi)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8
  jump_40b39:
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    subw   $0x19,0x1b2(%esi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_40b58:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    mov    (%esi),%al
    movb   $0x1,0x1c0(%edi,%eax,1)
    mov    0x1b8(%esp),%edx
    mov    0x1c0(%edi,%eax,1),%al
    mov    %al,0x1c0(%edx,%esi,1)
    xor    %eax,%eax
    mov    (%esi),%al
    subw   $0x1e,0x1b2(%edi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_40b92:
/*----------------------------------------------------------------*/
    mov    data_f458e,%ch
    cmp    (%esi),%ch
    jne    jump_40bb3
    xor    %eax,%eax
    mov    %ch,%al
    addw   $0x5,0x1b2(%edi,%eax,2)
    mov    data_92e10,%eax
    mov    %eax,data_f4734
  jump_40bb3:
    cmp    $0x6,%cl
    jne    jump_40bef
    mov    0x1c2(%esp),%ebp
    mov    %esi,%eax
    sar    $0x10,%ebp
    xor    %ebx,%ebx
    mov    %ebp,%edx
    call   func_417a4
    addw   $0xa,0x1b2(%esi,%ebp,2)
    xor    %eax,%eax
    mov    (%esi),%al
    addw   $0x5,0x1b2(%edi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8
  jump_40bef:
    mov    0x1c2(%esp),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,2),%eax
    add    %esi,%eax
    mov    0x1b2(%eax),%cx
    sub    $0x2,%ecx
    mov    %cx,0x1b2(%eax)
    cmpb   $0x3,0x1c0(%edx,%esi,1)
    jne    jump_41080
    mov    %ecx,%esi
    sub    $0x2,%esi
    mov    %si,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_40c39:
/*----------------------------------------------------------------*/
    mov    data_f458e,%bh
    cmp    (%esi),%bh
    jne    jump_40c5a
    xor    %eax,%eax
    mov    %bh,%al
    addw   $0x8,0x1b2(%edi,%eax,2)
    mov    data_92e10,%eax
    mov    %eax,data_f4738
  jump_40c5a:
    cmp    $0x8,%cl
    jne    jump_40c96
    mov    0x1c2(%esp),%ebp
    mov    %esi,%eax
    sar    $0x10,%ebp
    xor    %ebx,%ebx
    mov    %ebp,%edx
    call   func_41974
    addw   $0xa,0x1b2(%esi,%ebp,2)
    xor    %eax,%eax
    mov    (%esi),%al
    addw   $0x5,0x1b2(%edi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8
  jump_40c96:
    mov    0x1c2(%esp),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,2),%eax
    add    %esi,%eax
    subw   $0x3,0x1b2(%eax)
    cmpb   $0x3,0x1c0(%edx,%esi,1)
    jne    jump_41080
    subw   $0x3,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_40cd3:
/*----------------------------------------------------------------*/
    mov    data_f458e,%dl
    cmp    (%esi),%dl
    jne    jump_40cf4
    xor    %eax,%eax
    mov    %dl,%al
    addw   $0x8,0x1b2(%edi,%eax,2)
    mov    data_92e10,%eax
    mov    %eax,data_f473c
  jump_40cf4:
    cmp    $0xa,%cl
    jne    jump_40d30
    mov    0x1c2(%esp),%ebp
    mov    %esi,%eax
    sar    $0x10,%ebp
    xor    %ebx,%ebx
    mov    %ebp,%edx
    call   func_41b48
    addw   $0xa,0x1b2(%esi,%ebp,2)
    xor    %eax,%eax
    mov    (%esi),%al
    addw   $0xa,0x1b2(%edi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8
  jump_40d30:
    mov    0x1c2(%esp),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,2),%eax
    add    %esi,%eax
    subw   $0x2,0x1b2(%eax)
    cmpb   $0x3,0x1c0(%edx,%esi,1)
    jne    jump_41080
    subw   $0x2,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_40d6d:
/*----------------------------------------------------------------*/
    cmp    $0xc,%cl
    jne    jump_41037
    addw   $0x5,0x1b2(%eax)
    mov    0x1b0(%esp),%ecx
    mov    data_92fdf(%ecx),%ecx
    mov    0x1b0(%edx),%ebp
    sar    $0x10,%ecx
    sar    $0x10,%ebp
    sub    $0xa,%ecx
    cmp    %ecx,%ebp
    jle    jump_41080
    addw   $0x5,0x1b2(%eax)
    mov    0x1b4(%esp),%eax
    movb   $0x1,0x1c0(%eax)
    mov    0x1bc(%esp),%eax
    movb   $0x1,0x1c0(%eax)
    addw   $0xa,0x1b2(%ebx)
    xor    %eax,%eax
    mov    (%esi),%al
    addw   $0x5,0x1b2(%edi,%eax,2)
    mov    0x1b2(%edx),%cx
    add    $0xa,%ecx
    xor    %eax,%eax
    mov    %cx,0x1b2(%edx)
    mov    (%esi),%al
    mov    0x1c0(%esp),%esi
    add    %eax,%eax
    add    %esi,%eax
    addw   $0xf,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_40e0f:
/*----------------------------------------------------------------*/
    cmp    $0xf,%cl
    jne    jump_40e6d
    addw   $0xa,0x1b2(%eax)
    mov    0x1b4(%esp),%eax
    movb   $0x2,0x1c0(%eax)
    mov    0x1bc(%esp),%eax
    movb   $0x2,0x1c0(%eax)
    subw   $0xf,0x1b2(%ebx)
    xor    %eax,%eax
    mov    (%esi),%al
    addw   $0xa,0x1b2(%edi,%eax,2)
    mov    0x1b2(%edx),%cx
    sub    $0x14,%ecx
    xor    %eax,%eax
    mov    %cx,0x1b2(%edx)
    mov    (%esi),%al
    mov    0x1c0(%esp),%ecx
    add    %eax,%eax
    add    %ecx,%eax
  jump_40e6d:
    subw   $0xa,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_40e81:
/*----------------------------------------------------------------*/
    cmp    $0x11,%cl
    jne    jump_40e6d
    addw   $0xf,0x1b2(%eax)
    mov    0x1b4(%esp),%eax
    movb   $0x1,0x1c0(%eax)
    mov    0x1bc(%esp),%eax
    movb   $0x1,0x1c0(%eax)
    subw   $0x5,0x1b2(%ebx)
    xor    %eax,%eax
    mov    (%esi),%al
    subw   $0x5,0x1b2(%edi,%eax,2)
    mov    0x1b2(%edx),%cx
    sub    $0xa,%ecx
    xor    %eax,%eax
    mov    %cx,0x1b2(%edx)
    mov    (%esi),%al
    mov    0x1c0(%esp),%ebx
    add    %eax,%eax
    add    %ebx,%eax
  jump_40edf:
    subw   $0x5,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_40ef3:
/*----------------------------------------------------------------*/
    cmp    $0x13,%cl
    jne    jump_40edf
    addw   $0x5,0x1b2(%eax)
    mov    0x1b0(%esp),%ecx
    mov    data_92fe5(%ecx),%ecx
    sar    $0x10,%ecx
    mov    %ecx,0x1ac(%esp)
    mov    0x1ac(%esp),%ebp
    mov    0x1b0(%edx),%ecx
    sub    $0xa,%ebp
    sar    $0x10,%ecx
    cmp    %ebp,%ecx
    jle    jump_41080
    addw   $0x5,0x1b2(%eax)
    mov    0x1b4(%esp),%eax
    movb   $0x3,0x1c0(%eax)
    mov    0x1bc(%esp),%eax
    movb   $0x3,0x1c0(%eax)
    addw   $0xa,0x1b2(%ebx)
    xor    %eax,%eax
    mov    (%esi),%al
    addw   $0x5,0x1b2(%edi,%eax,2)
    mov    0x1b2(%edx),%cx
    add    $0xf,%ecx
    xor    %eax,%eax
    mov    %cx,0x1b2(%edx)
    mov    (%esi),%al
    mov    0x1c0(%esp),%edx
    add    %eax,%eax
    add    %edx,%eax
    addw   $0xa,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_40f9f:
/*----------------------------------------------------------------*/
    mov    0x1d8(%esp),%ebp
    cmp    $0x15,%cl
    je     jump_40fb4
    cmp    $0x1a,%cl
    jne    jump_41032
  jump_40fb4:
    xor    %eax,%eax
    mov    0x1c2(%esp),%edx
    mov    data_f458e,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    je     jump_41080
    test   %ebp,%ebp
    jne    jump_40fe2
    mov    $0x4a4,%ebx
    mov    $data_823c9,%edx
    xor    %eax,%eax
    call   func_25878
  jump_40fe2:
    mov    %esp,%ebx
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_4108c
    mov    %eax,%ecx
    test   %ax,%ax
    jne    jump_41005
    mov    $0x4a7,%ebx
    mov    $data_823d8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_41005:
    mov    %esp,%ebx
    movswl %cx,%ecx
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_41250
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    addw   $0xa,0x1b2(%esi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8
  jump_41032:
    cmp    $0x16,%cl
    jne    jump_41080
  jump_41037:
    subw   $0x5,0x1b2(%eax)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_4104b:
/*----------------------------------------------------------------*/
    cmp    $0x1,%cl
    jne    jump_41080
    mov    0x1c2(%esp),%eax
    sar    $0x10,%eax
    addw   $0x28,0x1b2(%esi,%eax,2)
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_4106f:
/*----------------------------------------------------------------*/
    mov    $0x4bf,%ebx
    mov    $data_823e7,%edx
    xor    %eax,%eax
    call   func_25888
  jump_41080:
    add    $0x1c8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_4108c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1bc,%esp
    mov    %eax,%ebp
    mov    %edx,0x1ac(%esp)
    mov    %ebx,0x1b0(%esp)
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %dx,0x1b4(%esp)
    mov    %esp,%edx
    xor    %esi,%esi
    call   func_3c310
    mov    %eax,0x1b8(%esp)
    test   %ax,%ax
    jle    jump_4118a
    jmp    jump_41159
  jump_410d0:
    cmp    $0x4,%al
    jne    jump_410ea
    mov    $0x2,%edx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    mov    %ebx,%edi
    call   func_4119c
    test   %eax,%eax
    jne    jump_4114c
    jmp    jump_410f0
  jump_410ea:
    cmp    $0x5,%al
    jne    jump_410f0
    mov    (%ebx),%edi
  jump_410f0:
    mov    0x2(%edi),%eax
    sar    $0x10,%eax
    imul   $0x64,%eax,%eax
    mov    0x1ac(%esp),%ebx
    mov    0x2(%ebx),%ebx
    sar    $0x10,%ebx
    mov    data_c5beb(%ebx,%eax,1),%al
    and    $0xff,%eax
    cmp    $0x3,%eax
    jge    jump_4114c
    movswl %si,%eax
    lea    0x0(,%eax,4),%ebx
    mov    0x1b2(%esp),%eax
    mov    0x1b4(%esp),%ecx
    sar    $0x10,%eax
    mov    0x1b0(%esp),%edx
    shl    $0x2,%eax
    inc    %ecx
    add    %edx,%eax
    mov    (%esp,%ebx,1),%ebx
    mov    %cx,0x1b4(%esp)
    mov    %ebx,(%eax)
  jump_4114c:
    mov    0x1b8(%esp),%ebx
    inc    %esi
    cmp    %bx,%si
    jge    jump_4118a
  jump_41159:
    movswl %si,%eax
    mov    (%esp,%eax,4),%ebx
    mov    0x58(%ebx),%al
    mov    0x59(%ebx),%ebx
    cmp    $0x1,%al
    je     jump_4114c
    cmp    $0x2,%al
    je     jump_4114c
    cmp    $0x3,%al
    jne    jump_410d0
    mov    0xa(%ebx),%eax
    sar    $0x10,%eax
    imul   $0x60,%eax,%eax
    mov    $data_93bc5,%edi
    add    %eax,%edi
    jmp    jump_410f0
  jump_4118a:
    mov    0x1b4(%esp),%eax
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4119c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1b8,%esp
    mov    %eax,%esi
    mov    %dl,0x1b4(%esp)
    mov    %ebx,%ebp
    mov    %ecx,0x1b0(%esp)
    test   %ebx,%ebx
    jne    jump_411cc
    mov    $0x4f8,%ebx
    mov    $data_823f6,%edx
    xor    %eax,%eax
    call   func_25878
  jump_411cc:
    mov    %esp,%edx
    mov    %ebp,%eax
    call   func_1d754
    xor    %edi,%edi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    %eax,0x1ac(%esp)
    jmp    jump_411e5
  jump_411e4:
    inc    %ebx
  jump_411e5:
    mov    0x1ac(%esp),%edx
    movswl %bx,%eax
    cmp    %edx,%eax
    jge    jump_41236
    mov    (%esp,%eax,4),%eax
    test   %eax,%eax
    je     jump_411e4
    mov    0x54(%eax),%ebp
    xor    %edx,%edx
    sar    $0x10,%ebp
    mov    (%esi),%dl
    cmp    %edx,%ebp
    jne    jump_41212
    cmpb   $0x3,0x1b4(%esp)
    je     jump_41228
  jump_41212:
    mov    0x54(%eax),%edx
    sar    $0x10,%edx
    mov    0x1c0(%edx,%esi,1),%dl
    cmp    0x1b4(%esp),%dl
    jne    jump_411e4
  jump_41228:
    mov    0x8c(%eax),%edx
    imul   (%eax),%edx
    inc    %edi
    add    %edx,%ecx
    jmp    jump_411e4
  jump_41236:
    mov    0x1b0(%esp),%ebx
    test   %ebx,%ebx
    je     jump_41243
    mov    %ecx,(%ebx)
  jump_41243:
    movswl %di,%eax
    add    $0x1b8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_41250:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %edx,%ebp
    mov    %ebx,%edi
    mov    %ecx,%esi
    mov    (%eax),%al
    cmp    data_f458e,%al
    jne    jump_41274
    mov    $0x51e,%ebx
    mov    $data_82405,%edx
    xor    %eax,%eax
    call   func_25878
  jump_41274:
    xor    %eax,%eax
    test   %si,%si
    jle    jump_41291
  jump_4127b:
    movswl %ax,%edx
    mov    (%edi,%edx,4),%ebx
    movb   $0x1,0x5d(%ebx)
    mov    (%edi,%edx,4),%edx
    inc    %eax
    mov    %ebp,0x5e(%edx)
    cmp    %si,%ax
    jl     jump_4127b
  jump_41291:
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_41298:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%edi
    mov    %edx,%ebp
    mov    %ebx,0x10(%esp)
    mov    (%eax),%al
    cmp    data_f458e,%al
    je     jump_412c2
    mov    $0x534,%ebx
    mov    $data_82414,%edx
    xor    %eax,%eax
    call   func_25878
  jump_412c2:
    xor    %edx,%edx
    mov    %edx,0x14(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,0x8(%esp)
    mov    %edx,(%esp)
    mov    %edx,0x18(%esp)
    mov    0x2(%ebp),%edx
    sar    $0x10,%edx
    mov    data_c8304(%edx),%al
    and    $0x1,%al
    xor    %edx,%edx
    mov    %al,%dl
    test   %edx,%edx
    jne    jump_41586
    mov    data_93b98,%dx
    xor    %eax,%eax
    test   %dx,%dx
    jg     jump_41315
    jmp    jump_413aa
  jump_41304:
    mov    data_93b98,%bx
    inc    %eax
    cmp    %bx,%ax
    jge    jump_413aa
  jump_41315:
    xor    %ebx,%ebx
    movswl %ax,%edx
    mov    data_f458e,%bl
    cmp    %ebx,%edx
    je     jump_41304
    lea    (%edi,%edx,1),%ebx
    cmpb   $0x0,0x1c0(%ebx)
    jne    jump_41304
    xor    %ecx,%ecx
    mov    0x15(%ebp),%cl
    mov    %ecx,0xc(%esp)
    xor    %ecx,%ecx
    mov    0xc(%esp),%esi
    mov    0x14(%ebp),%cl
    or     %ecx,%esi
    mov    %esi,0xc(%esp)
    movswl %ax,%ecx
    mov    $0x1,%esi
    shl    %cl,%esi
    mov    %esi,%ecx
    test   %ecx,0xc(%esp)
    je     jump_41304
    mov    $0xffffffff,%eax
    mov    %edx,0x18(%esp)
    movb   $0x1,0x1c0(%ebx)
    mov    %eax,(%esp)
    mov    0x1d5(%edi),%ax
    mov    %edx,%ebx
    mov    %ax,0x1b2(%edi,%edx,2)
    shl    $0x5,%edx
    sub    %ebx,%edx
    shl    $0x3,%edx
    sub    %ebx,%edx
    xor    %ebx,%ebx
    mov    (%edi),%bl
    movb   $0x1,data_92fd6(%ebx,%edx,2)
    xor    %ebx,%ebx
    mov    (%edi),%bl
    add    %ebx,%ebx
    mov    data_92feb(,%edx,2),%ax
    mov    %ax,data_92fc8(%ebx,%edx,2)
  jump_413aa:
    cmpl   $0x0,(%esp)
    jne    jump_41439
    mov    data_93b98,%cx
    xor    %eax,%eax
    test   %cx,%cx
    jle    jump_41439
    jmp    jump_413d5
  jump_413c8:
    mov    data_93b98,%si
    inc    %eax
    cmp    %si,%ax
    jge    jump_41439
  jump_413d5:
    xor    %ebx,%ebx
    movswl %ax,%edx
    mov    data_f458e,%bl
    cmp    %ebx,%edx
    je     jump_413c8
    cmpb   $0x2,0x1c0(%edx,%edi,1)
    jne    jump_413c8
    mov    $0x1,%ebx
    movswl %ax,%ecx
    movzbl 0x15(%ebp),%esi
    shl    %cl,%ebx
    test   %ebx,%esi
    je     jump_4140d
    mov    $0xffffffff,%ebx
    mov    %edx,0x18(%esp)
    mov    %ebx,0x8(%esp)
  jump_4140d:
    cmpl   $0x0,0x8(%esp)
    jne    jump_413c8
    mov    $0x1,%edx
    xor    %ebx,%ebx
    movswl %ax,%ecx
    mov    0x14(%ebp),%bl
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_413c8
    mov    $0xffffffff,%esi
    movswl %ax,%edx
    mov    %esi,0x4(%esp)
    mov    %edx,0x18(%esp)
    jmp    jump_413c8
  jump_41439:
    cmpl   $0x0,(%esp)
    jne    jump_414e8
    cmpl   $0x0,0x8(%esp)
    jne    jump_414e8
    cmpl   $0x0,0x4(%esp)
    jne    jump_414e8
    mov    $data_92e16,%edi
    mov    data_93b98,%ax
    xor    %esi,%esi
    test   %ax,%ax
    jle    jump_414e8
    jmp    jump_414c9
  jump_41471:
    mov    data_93b98,%cx
    inc    %eax
    cmp    %cx,%ax
    jl     jump_41485
    jmp    jump_414b6
  jump_41480:
    xor    %edx,%edx
    mov    0x15(%ebp),%dl
  jump_41485:
    mov    $0x1,%ebx
    movswl %si,%ecx
    shl    %cl,%ebx
    test   %ebx,%edx
    je     jump_41471
    mov    $0x1,%ebx
    movswl %ax,%ecx
    shl    %cl,%ebx
    test   %ebx,%edx
    je     jump_41471
    movswl %ax,%ecx
    cmpb   $0x2,0x1c0(%ecx,%edi,1)
    jne    jump_41471
    movl   $0xffffffff,0x14(%esp)
  jump_414b6:
    mov    data_93b98,%dx
    inc    %esi
    add    $0x1ee,%edi
    cmp    %dx,%si
    jge    jump_414e8
  jump_414c9:
    xor    %edx,%edx
    movswl %si,%ebx
    mov    data_f458e,%dl
    cmp    %edx,%ebx
    je     jump_414b6
    mov    data_93b98,%bx
    xor    %eax,%eax
    test   %bx,%bx
    jg     jump_41480
    jmp    jump_414b6
  jump_414e8:
    cmpl   $0xffffffff,(%esp)
    jne    jump_414f5
    mov    $0x4,%edx
    jmp    jump_41550
  jump_414f5:
    cmpl   $0xffffffff,0x8(%esp)
    jne    jump_41503
    mov    $0x5,%edx
    jmp    jump_41550
  jump_41503:
    cmpl   $0xffffffff,0x4(%esp)
    jne    jump_41511
    mov    $0x6,%edx
    jmp    jump_41550
  jump_41511:
    cmpl   $0xffffffff,0x14(%esp)
    jne    jump_4151f
    mov    $0x7,%edx
    jmp    jump_41550
  jump_4151f:
    mov    0x10(%esp),%edx
    mov    data_f458e,%cl
    movb   $0x0,0x5d(%edx)
    xor    %ebx,%ebx
    movl   $0x0,0x5e(%edx)
    mov    $0x1,%edx
    mov    0x17(%ebp),%bl
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_4154b
    mov    $0x3,%edx
    jmp    jump_41550
  jump_4154b:
    mov    $0x14,%edx
  jump_41550:
    cmp    $0xffffffff,%edx
    je     jump_41586
    mov    0x2(%ebp),%ebx
    sar    $0x10,%ebx
    mov    data_c8304(%ebx),%cl
    mov    $data_fa35c,%eax
    or     $0x1,%cl
    movswl %dx,%edx
    mov    %cl,data_c8304(%ebx)
    mov    0x18(%esp),%ecx
    mov    0x10(%esp),%ebx
    call   func_50eb0
    mov    $0xffffffff,%edx
    jmp    jump_41588
  jump_41586:
    xor    %edx,%edx
  jump_41588:
    mov    %edx,%eax
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_41594:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    mov    (%eax),%al
    cmp    data_f458e,%al
    je     jump_415bc
    mov    $0x5c6,%ebx
    mov    $data_82423,%edx
    xor    %eax,%eax
    call   func_25878
  jump_415bc:
    mov    0x56(%ebp),%ax
    mov    %ax,(%esp)
    xor    %ebx,%ebx
    mov    -0x2(%esp),%ecx
    mov    $0x1,%eax
    sar    $0x10,%ecx
    mov    0x15(%edi),%bl
    shl    %cl,%eax
    mov    $0xffffffff,%edx
    test   %eax,%ebx
    jne    jump_41658
    mov    -0x2(%esp),%ebx
    sar    $0x10,%ebx
    lea    (%esi,%ebx,1),%eax
    mov    0x1c0(%eax),%cl
    test   %cl,%cl
    jne    jump_4164e
    movb   $0x1,0x1c0(%eax)
    lea    0x0(,%ebx,2),%eax
    lea    (%esi,%eax,1),%ecx
    mov    0x1d5(%esi),%ax
    mov    %ax,0x1b2(%ecx)
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    xor    %ebx,%ebx
    add    %eax,%eax
    mov    (%esi),%bl
    movb   $0x1,data_92fd6(%ebx,%eax,1)
    xor    %ebx,%ebx
    mov    (%esi),%bl
    add    %ebx,%ebx
    add    %eax,%ebx
    mov    data_92feb(%eax),%ax
    mov    $0x8,%edx
    mov    %ax,data_92fc8(%ebx)
    jmp    jump_41658
  jump_4164e:
    cmp    $0x2,%cl
    jne    jump_41658
    mov    $0x9,%edx
  jump_41658:
    cmp    $0xffffffff,%edx
    je     jump_4169c
    mov    0x2(%edi),%eax
    sar    $0x10,%eax
    mov    data_c8304(%eax),%al
    and    $0x1,%al
    and    $0xff,%eax
    jne    jump_4169c
    mov    -0x2(%esp),%ecx
    mov    $data_fa35c,%eax
    movswl %dx,%edx
    mov    %ebp,%ebx
    sar    $0x10,%ecx
    call   func_50eb0
    mov    0x2(%edi),%eax
    sar    $0x10,%eax
    orb    $0x1,data_c8304(%eax)
    mov    $0xffffffff,%eax
    jmp    jump_4169e
  jump_4169c:
    xor    %eax,%eax
  jump_4169e:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_416a8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x18,%esp
    movswl %dx,%ebx
    cmpb   $0x3,0x1c0(%ebx,%eax,1)
    je     jump_41795
    mov    data_977d3,%si
    mov    (%eax),%cl
    mov    $0x1,%al
    xor    %ebx,%ebx
    shl    %cl,%al
    mov    %bx,0xc(%esp)
    mov    %al,0x14(%esp)
    mov    %dl,%cl
    mov    $0x1,%al
    mov    %bx,0x8(%esp)
    shl    %cl,%al
    xor    %edx,%edx
    mov    %al,0x10(%esp)
    mov    $data_96147,%eax
    test   %si,%si
    jle    jump_4172b
    mov    data_977d3,%di
  jump_416fa:
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    0x14(%esp),%bl
    mov    0x20(%eax),%cl
    test   %ebx,%ecx
    je     jump_4170e
    incw   0xc(%esp)
  jump_4170e:
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    0x10(%esp),%cl
    mov    0x20(%eax),%bl
    test   %ecx,%ebx
    je     jump_41722
    incw   0x8(%esp)
  jump_41722:
    inc    %edx
    add    $0x27,%eax
    cmp    %di,%dx
    jl     jump_416fa
  jump_4172b:
    mov    0xa(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x5,%eax
    jge    jump_4173b
    xor    %ebx,%ebx
    jmp    jump_4179a
  jump_4173b:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_4174d
    movw   $0x1,0x8(%esp)
  jump_4174d:
    filds  data_977d3
    filds  0xc(%esp)
    fstps  0x4(%esp)
    fdivrs 0x4(%esp)
    fcompl data_82432
    fnstsw %ax
    sahf
    jbe    jump_41776
    xor    %ebx,%ebx
    mov    %ebx,%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_41776:
    filds  0x8(%esp)
    fdivrs 0x4(%esp)
    fcompl data_8243a
    fnstsw %ax
    sahf
    jbe    jump_41795
    xor    %ebx,%ebx
    mov    %ebx,%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_41795:
    mov    $0xffffffff,%ebx
  jump_4179a:
    mov    %ebx,%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_417a4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    mov    %ebx,(%esp)
    movswl %dx,%eax
    xor    %ebx,%ebx
    mov    0x1c0(%ecx,%eax,1),%dl
    xor    %esi,%esi
    cmp    $0x3,%dl
    jne    jump_417d3
    call   func_7369f
    mov    %eax,%edx
    mov    $0x6,%ebp
    jmp    jump_417df
  jump_417d3:
    call   func_7369f
    mov    %eax,%edx
    mov    $0x3,%ebp
  jump_417df:
    sar    $0x1f,%edx
    idiv   %ebp
    inc    %edx
    mov    %edx,0x4(%esp)
    mov    $0x1,%dh
    mov    (%ecx),%cl
    shl    %cl,%dh
    movswl %di,%ecx
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    $0x1,%dl
    mov    data_977d3,%di
    mov    data_92e16(,%eax,2),%cl
    mov    $data_96147,%eax
    shl    %cl,%dl
    xor    %ecx,%ecx
    test   %di,%di
    jle    jump_40229
    jmp    jump_41852
  jump_41822:
    movzbl %dl,%ebp
    movzbl 0x20(%eax),%edi
    test   %ebp,%edi
    je     jump_4183e
    cmp    0x4(%esp),%ebx
    jge    jump_4183e
    movzbl %dh,%ebp
    test   %ebp,%edi
    jne    jump_4183e
    inc    %ebx
    or     %dh,0x20(%eax)
  jump_4183e:
    mov    data_977d3,%di
    inc    %ecx
    add    $0x27,%eax
    cmp    %di,%cx
    jge    jump_40229
  jump_41852:
    cmpl   $0x0,(%esp)
    jne    jump_41822
    movzbl %dh,%ebp
    movzbl 0x20(%eax),%edi
    test   %ebp,%edi
    je     jump_41822
    cmp    0x4(%esp),%esi
    jge    jump_4183e
    movzbl %dl,%ebp
    test   %ebp,%edi
    jne    jump_4183e
    inc    %esi
    or     %dl,0x20(%eax)
    jmp    jump_4183e


/*----------------------------------------------------------------*/
func_41878:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x18,%esp
    movswl %dx,%ebx
    cmpb   $0x3,0x1c0(%ebx,%eax,1)
    je     jump_41965
    mov    data_96145,%si
    mov    (%eax),%cl
    mov    $0x1,%al
    xor    %ebx,%ebx
    shl    %cl,%al
    mov    %bx,0xc(%esp)
    mov    %al,0x14(%esp)
    mov    %dl,%cl
    mov    $0x1,%al
    mov    %bx,0x8(%esp)
    shl    %cl,%al
    xor    %edx,%edx
    mov    %al,0x10(%esp)
    mov    $data_93bc5,%eax
    test   %si,%si
    jle    jump_418fb
    mov    data_96145,%di
  jump_418ca:
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    mov    0x14(%esp),%bl
    mov    0x17(%eax),%cl
    test   %ebx,%ecx
    je     jump_418de
    incw   0xc(%esp)
  jump_418de:
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    0x10(%esp),%cl
    mov    0x17(%eax),%bl
    test   %ecx,%ebx
    je     jump_418f2
    incw   0x8(%esp)
  jump_418f2:
    inc    %edx
    add    $0x60,%eax
    cmp    %di,%dx
    jl     jump_418ca
  jump_418fb:
    mov    0xa(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jge    jump_4190b
    xor    %ebx,%ebx
    jmp    jump_4196a
  jump_4190b:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_4191d
    movw   $0x1,0x8(%esp)
  jump_4191d:
    filds  data_96145
    filds  0xc(%esp)
    fstps  0x4(%esp)
    fdivrs 0x4(%esp)
    fcompl data_82442
    fnstsw %ax
    sahf
    jbe    jump_41946
    xor    %ebx,%ebx
    mov    %ebx,%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_41946:
    filds  0x8(%esp)
    fdivrs 0x4(%esp)
    fcompl data_8244a
    fnstsw %ax
    sahf
    jbe    jump_41965
    xor    %ebx,%ebx
    mov    %ebx,%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_41965:
    mov    $0xffffffff,%ebx
  jump_4196a:
    mov    %ebx,%eax
    add    $0x18,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_41974:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    mov    %ebx,(%esp)
    movswl %dx,%eax
    xor    %esi,%esi
    mov    0x1c0(%ecx,%eax,1),%dl
    xor    %ebx,%ebx
    cmp    $0x3,%dl
    jne    jump_419a3
    call   func_7369f
    mov    %eax,%edx
    mov    $0x4,%ebp
    jmp    jump_419af
  jump_419a3:
    call   func_7369f
    mov    %eax,%edx
    mov    $0x2,%ebp
  jump_419af:
    sar    $0x1f,%edx
    idiv   %ebp
    inc    %edx
    mov    %edx,0x4(%esp)
    mov    $0x1,%dh
    mov    (%ecx),%cl
    shl    %cl,%dh
    movswl %di,%ecx
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    $0x1,%dl
    mov    data_96145,%di
    mov    data_92e16(,%eax,2),%cl
    mov    $data_93bc5,%eax
    shl    %cl,%dl
    xor    %ecx,%ecx
    test   %di,%di
    jle    jump_40229
    jmp    jump_41a25
  jump_419f2:
    movzbl %dl,%ebp
    movzbl 0x17(%eax),%edi
    test   %ebp,%edi
    je     jump_41a11
    cmp    0x4(%esp),%esi
    jge    jump_41a11
    movzbl %dh,%ebp
    test   %ebp,%edi
    jne    jump_41a11
    or     %dh,0x16(%eax)
    inc    %esi
    or     %dh,0x17(%eax)
  jump_41a11:
    mov    data_96145,%di
    inc    %ecx
    add    $0x60,%eax
    cmp    %di,%cx
    jge    jump_40229
  jump_41a25:
    cmpl   $0x0,(%esp)
    jne    jump_419f2
    movzbl %dh,%ebp
    movzbl 0x17(%eax),%edi
    test   %ebp,%edi
    je     jump_419f2
    cmp    0x4(%esp),%ebx
    jge    jump_41a11
    movzbl %dl,%ebp
    test   %ebp,%edi
    jne    jump_41a11
    or     %dl,0x16(%eax)
    inc    %ebx
    or     %dl,0x17(%eax)
    jmp    jump_41a11


/*----------------------------------------------------------------*/
func_41a4c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    sub    $0x1c,%esp
    movswl %dx,%ebx
    cmpb   $0x3,0x1c0(%ebx,%eax,1)
    je     jump_41b3b
    mov    (%eax),%cl
    mov    $0x1,%al
    xor    %ebx,%ebx
    shl    %cl,%al
    mov    %bx,0xc(%esp)
    mov    %al,0x18(%esp)
    mov    %dl,%cl
    mov    $0x1,%al
    mov    %bx,0x10(%esp)
    shl    %cl,%al
    xor    %edx,%edx
    mov    %al,0x14(%esp)
    mov    $data_f4746,%eax
    jmp    jump_41a8f
  jump_41a8b:
    inc    %edx
    add    $0x4b,%eax
  jump_41a8f:
    xor    %ebx,%ebx
    movswl %dx,%ecx
    mov    data_f4744,%bx
    cmp    %ebx,%ecx
    jge    jump_41acb
    xor    %ebx,%ebx
    mov    0x45(%eax),%ecx
    mov    0x18(%esp),%bl
    sar    $0x18,%ecx
    test   %ebx,%ecx
    je     jump_41ab4
    incw   0xc(%esp)
  jump_41ab4:
    xor    %ecx,%ecx
    mov    0x45(%eax),%ebx
    mov    0x14(%esp),%cl
    sar    $0x18,%ebx
    test   %ecx,%ebx
    je     jump_41a8b
    incw   0x10(%esp)
    jmp    jump_41a8b
  jump_41acb:
    mov    0xa(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x5,%eax
    jge    jump_41adb
    xor    %ecx,%ecx
    jmp    jump_41b40
  jump_41adb:
    mov    0xe(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_41aed
    movw   $0x1,0x10(%esp)
  jump_41aed:
    xor    %eax,%eax
    mov    data_f4744,%ax
    filds  0xc(%esp)
    mov    %eax,0x8(%esp)
    fstps  0x4(%esp)
    fildl  0x8(%esp)
    fdivrs 0x4(%esp)
    fcompl data_82452
    fnstsw %ax
    sahf
    jbe    jump_41b1e
    xor    %ecx,%ecx
    mov    %ecx,%eax
    add    $0x1c,%esp
    pop    %ecx
    pop    %ebx
    ret
  jump_41b1e:
    filds  0x10(%esp)
    fdivrs 0x4(%esp)
    fcompl data_8245a
    fnstsw %ax
    sahf
    jbe    jump_41b3b
    xor    %ecx,%ecx
    mov    %ecx,%eax
    add    $0x1c,%esp
    pop    %ecx
    pop    %ebx
    ret
  jump_41b3b:
    mov    $0xffffffff,%ecx
  jump_41b40:
    mov    %ecx,%eax
    add    $0x1c,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_41b48:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x28,%esp
    mov    %eax,%edi
    mov    %dx,0x1c(%esp)
    mov    %ebx,0x8(%esp)
    mov    0x1a(%esp),%eax
    sar    $0x10,%eax
    xor    %ebx,%ebx
    mov    0x1c0(%edi,%eax,1),%dl
    xor    %esi,%esi
    cmp    $0x3,%dl
    jne    jump_41b89
    call   func_7369f
    mov    %eax,%edx
    mov    $0x2,%ebp
    sar    $0x1f,%edx
    idiv   %ebp
    inc    %edx
    mov    %edx,0xc(%esp)
    jmp    jump_41b91
  jump_41b89:
    movl   $0x1,0xc(%esp)
  jump_41b91:
    mov    $0x1,%al
    mov    (%edi),%cl
    mov    0x1a(%esp),%edx
    shl    %cl,%al
    sar    $0x10,%edx
    mov    %al,0x24(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    $0x1,%dl
    mov    data_92e16(,%eax,2),%cl
    shl    %cl,%dl
    mov    %dl,%cl
    xor    %edx,%edx
    mov    (%edi),%dl
    mov    data_92e16(,%eax,2),%al
    mov    %dx,0x18(%esp)
    xor    %ah,%ah
    xor    %edx,%edx
    mov    %ax,0x20(%esp)
    mov    $data_f4746,%eax
    jmp    jump_41c31
  jump_41bdb:
    mov    0x45(%eax),%edi
    movzbl %cl,%ebp
    sar    $0x18,%edi
    test   %ebp,%edi
    je     jump_41c2d
    cmp    0xc(%esp),%ebx
    jge    jump_41c2d
    movzbl 0x24(%esp),%ebp
    test   %ebp,%edi
    jne    jump_41c2d
    mov    0x16(%esp),%ebp
    sar    $0x10,%ebp
    mov    0x24(%esp),%ch
    add    %ebp,%ebp
    xor    %edi,%edi
    or     %ch,0x48(%eax)
    mov    data_f6492(%ebp),%di
    mov    %edi,(%esp)
    movswl %dx,%edi
    mov    %edi,0x4(%esp)
    mov    (%esp),%edi
    cmp    0x4(%esp),%edi
    jne    jump_41c2c
    movw   $0xffff,data_f6492(%ebp)
  jump_41c2c:
    inc    %ebx
  jump_41c2d:
    inc    %edx
    add    $0x4b,%eax
  jump_41c31:
    movswl %dx,%edi
    mov    %edi,0x14(%esp)
    xor    %edi,%edi
    mov    0x14(%esp),%ebp
    mov    data_f4744,%di
    cmp    %ebp,%edi
    jle    jump_41ca4
    cmpl   $0x0,0x8(%esp)
    jne    jump_41bdb
    mov    0x45(%eax),%edi
    sar    $0x18,%edi
    mov    %edi,0x10(%esp)
    movzbl 0x24(%esp),%edi
    mov    0x10(%esp),%ebp
    test   %ebp,%edi
    je     jump_41bdb
    cmp    0xc(%esp),%esi
    jge    jump_41c2d
    movzbl %cl,%edi
    test   %ebp,%edi
    jne    jump_41c2d
    mov    0x1e(%esp),%ebp
    mov    0x48(%eax),%ch
    sar    $0x10,%ebp
    or     %cl,%ch
    add    %ebp,%ebp
    xor    %edi,%edi
    mov    %ch,0x48(%eax)
    mov    data_f6492(%ebp),%di
    cmp    0x14(%esp),%edi
    jne    jump_41ca1
    movw   $0xffff,data_f6492(%ebp)
  jump_41ca1:
    inc    %esi
    jmp    jump_41c2d
  jump_41ca4:
    add    $0x28,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_41cb0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_f4744,%eax
    xor    %edx,%edx
    call   func_41cc0
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_41cc0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%esi
    mov    %edx,%ecx
    movl   $0x0,0x1d6a(%eax)
    lea    0x1d4c(%eax),%ebx
    movl   $0x0,0x1d6e(%eax)
  jump_41ce6:
    add    $0x4b,%eax
    movb   $0x0,(%eax)
    mov    (%eax),%dl
    mov    %dl,-0x1(%eax)
    cmp    %ebx,%eax
    jne    jump_41ce6
    cmpl   $0x0,data_f4740
    jne    jump_41f13
    mov    %esi,%eax
    lea    0x1d4c(%esi),%edx
  jump_41d0a:
    add    $0x4b,%eax
    movb   $0xff,-0x6(%eax)
    cmp    %edx,%eax
    jne    jump_41d0a
    movw   $0x0,(%esi)
    test   %ecx,%ecx
    jne    jump_41d29
    lea    0x4(%esp),%edx
    mov    $data_82464,%eax
    jmp    jump_41d2f
  jump_41d29:
    lea    0x4(%esp),%edx
    mov    %ecx,%eax
  jump_41d2f:
    call   func_1bb10
    mov    %eax,0x1c(%esp)
    mov    0x1c(%esp),%ebx
    test   %ebx,%ebx
    je     jump_41f09
    lea    0xc(%esp),%eax
    push   %eax
    push   $data_82470
    push   %ebx
    call   func_73431
    add    $0xc,%esp
    mov    0xc(%esp),%eax
    mov    %ax,(%esi)
    xor    %eax,%eax
    mov    (%esi),%ax
    cmp    $0x64,%eax
    jle    jump_41d6d
    movw   $0x64,(%esi)
  jump_41d6d:
    mov    $0xffffffec,%ebp
    xor    %edi,%edi
    lea    0x2(%esi),%eax
    mov    %edi,0x18(%esp)
    mov    %eax,(%esp)
    mov    %esi,%edi
    mov    $0x20,%cl
    jmp    jump_41d9c
  jump_41d84:
    mov    (%esp),%edx
    mov    0x18(%esp),%ebx
    add    $0x2,%ebp
    add    $0x4b,%edi
    add    $0x4b,%edx
    inc    %ebx
    mov    %edx,(%esp)
    mov    %ebx,0x18(%esp)
  jump_41d9c:
    xor    %eax,%eax
    mov    0x18(%esp),%edx
    mov    (%esi),%ax
    cmp    %edx,%eax
    jle    jump_41e65
    mov    (%esp),%eax
    push   %eax
    push   $data_82473
    mov    0x24(%esp),%edx
    push   %edx
    call   func_73431
    add    $0xc,%esp
    lea    0x10(%esp),%eax
    push   %eax
    lea    0x10(%esp),%eax
    push   %eax
    push   $data_82476
    push   %edx
    call   func_73431
    add    $0x10,%esp
    mov    0xc(%esp),%al
    mov    %al,0x4c(%edi)
    cmpl   $0xa,0x18(%esp)
    jle    jump_41df4
    mov    0x10(%esp),%eax
    imul   %ebp,%eax
    mov    %eax,0x10(%esp)
  jump_41df4:
    cmpl   $0xfde8,0x10(%esp)
    jle    jump_41e06
    movl   $0xfde8,0x10(%esp)
  jump_41e06:
    mov    0x10(%esp),%eax
    mov    %edi,%ebx
    xor    %edx,%edx
    mov    %ax,0x3e(%edi)
  jump_41e12:
    lea    0xc(%esp),%eax
    push   %eax
    push   $data_8247c
    mov    0x24(%esp),%eax
    push   %eax
    call   func_73431
    add    $0xc,%esp
    mov    0xc(%esp),%al
    mov    %al,0x40(%ebx)
    cmpl   $0xff,0xc(%esp)
    jne    jump_41e40
    mov    %edi,%ebx
    xor    %eax,%eax
    jmp    jump_41e57
  jump_41e40:
    inc    %edx
    inc    %ebx
    cmp    $0x5,%edx
    jl     jump_41e12
    mov    %edi,%ebx
    xor    %eax,%eax
    jmp    jump_41e57
  jump_41e4d:
    inc    %eax
    cmp    $0x3c,%eax
    jge    jump_41d84
  jump_41e57:
    lea    (%ebx,%eax,1),%edx
    cmpb   $0x5e,0x2(%edx)
    jne    jump_41e4d
    mov    %cl,0x2(%edx)
    jmp    jump_41e4d
  jump_41e65:
    xor    %ebx,%ebx
    mov    %esi,0x14(%esp)
    mov    %ebx,0x18(%esp)
    jmp    jump_41eb6
  jump_41e71:
    inc    %eax
    cmp    $0x4,%eax
    jl     jump_41e7e
    jmp    jump_41e9b
  jump_41e79:
    xor    %eax,%eax
    imul   $0x4b,%ecx,%ecx
  jump_41e7e:
    lea    (%esi,%ecx,1),%edx
    add    %eax,%edx
    xor    %ebx,%ebx
    mov    0x45(%edx),%bl
    cmp    $0xff,%ebx
    jne    jump_41e71
    mov    0x18(%esp),%al
    movb   $0xff,0x46(%edx)
    mov    %al,0x45(%edx)
  jump_41e9b:
    inc    %edi
    inc    %ebp
    cmp    $0x5,%edi
    jl     jump_41ec9
  jump_41ea2:
    mov    0x14(%esp),%ebp
    mov    0x18(%esp),%eax
    add    $0x4b,%ebp
    inc    %eax
    mov    %ebp,0x14(%esp)
    mov    %eax,0x18(%esp)
  jump_41eb6:
    xor    %eax,%eax
    mov    0x18(%esp),%ecx
    mov    (%esi),%ax
    cmp    %ecx,%eax
    jle    jump_41ed8
    mov    0x14(%esp),%ebp
    xor    %edi,%edi
  jump_41ec9:
    xor    %ecx,%ecx
    mov    0x40(%ebp),%cl
    cmp    $0xff,%ecx
    je     jump_41ea2
    jmp    jump_41e79
  jump_41ed8:
    lea    0x8(%esp),%edx
    mov    0x1c(%esp),%eax
    call   func_72b2d
    mov    0x8(%esp),%eax
    cmp    0x4(%esp),%eax
    jl     jump_41f00
    mov    $0x86,%ebx
    mov    $data_8247f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_41f00:
    mov    0x1c(%esp),%eax
    call   func_7280e
  jump_41f09:
    movl   $0xffffffff,data_f4740
  jump_41f13:
    mov    %esi,%eax
    add    $0xe,%esi
  jump_41f18:
    add    $0x2,%eax
    movw   $0xffff,0x1d4c(%eax)
    movw   $0x0,0x1d5a(%eax)
    cmp    %esi,%eax
    jne    jump_41f18
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_41f3c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%edi
    xor    %edx,%edx
    xor    %esi,%esi
    mov    %edx,0x18(%esp)
    jmp    jump_41f62
  jump_41f51:
    add    $0x2,%esi
    lea    0x1(%ebx),%ebp
    xor    %edx,%edx
    mov    %ebp,0x18(%esp)
    mov    %dx,-0x2(%esp,%esi,1)
  jump_41f62:
    mov    data_93b96,%eax
    mov    0x18(%esp),%ebx
    sar    $0x10,%eax
    cmp    %ebx,%eax
    jg     jump_41f51
    xor    %ecx,%ecx
    mov    $data_ab057,%esi
    jmp    jump_41f83
  jump_41f7b:
    mov    0x18(%esp),%ecx
    inc    %ecx
    add    $0x7b,%esi
  jump_41f83:
    mov    %ecx,0x18(%esp)
    mov    data_ba091,%eax
    mov    0x18(%esp),%edx
    sar    $0x10,%eax
    cmp    %edx,%eax
    jle    jump_41fda
    mov    data_93b96,%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    0x57(%esi),%al
    mov    %esi,%ebx
    cmp    %edx,%eax
    jge    jump_41f7b
    cmp    data_f458e,%al
    je     jump_41fcb
    cmpb   $0x2,data_93bc4
    jne    jump_41fcb
    xor    %edx,%edx
    mov    0x46(%esi),%dx
    cmp    $0xf,%edx
    jge    jump_41fcb
    incw   (%esp,%eax,2)
  jump_41fcb:
    xor    %eax,%eax
    mov    0x57(%ebx),%al
    mov    0x46(%ebx),%bx
    add    %bx,(%esp,%eax,2)
    jmp    jump_41f7b
  jump_41fda:
    xor    %ebx,%ebx
    mov    %edi,%esi
    jmp    jump_41ff1
  jump_41fe0:
    movw   $0x0,0x1d5c(%esi)
  jump_41fe9:
    mov    0x18(%esp),%ebx
    inc    %ebx
    add    $0x2,%esi
  jump_41ff1:
    mov    %ebx,0x18(%esp)
    mov    data_93b96,%eax
    mov    0x18(%esp),%ebp
    sar    $0x10,%eax
    cmp    %ebp,%eax
    jle    jump_420f0
    xor    %eax,%eax
    mov    0x1d4e(%esi),%ax
    lea    0x0(%ebp,%ebp,1),%ebx
    cmp    $0xffff,%eax
    jge    jump_41fe0
    xor    %eax,%eax
    mov    (%esp,%ebx,1),%ax
    mov    %eax,0x14(%esp)
    test   %eax,%eax
    je     jump_42052
    inc    %eax
    push   $0x3feb3333
    mov    %eax,0x14(%esp)
    push   $0x33333333
    fildl  0x18(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_73ee0
    call   func_72258
    fistpl 0x14(%esp)
  jump_42052:
    mov    0x14(%esp),%eax
    mov    0x1d5c(%esi),%bx
    add    %eax,%ebx
    xor    %eax,%eax
    mov    0x1d4e(%esi),%ax
    imul   $0x4b,%eax,%eax
    mov    %bx,0x1d5c(%esi)
    lea    (%edi,%eax,1),%ebx
    mov    0x1d5c(%esi),%ax
    cmp    0x3e(%ebx),%ax
    jb     jump_41fe9
    mov    0x1d4e(%esi),%ax
    xor    %ebx,%ebx
    mov    %ax,%bx
    imul   $0x4b,%ebx,%eax
    mov    0x18(%esp),%cl
    mov    $0x1,%dl
    shl    %cl,%dl
    or     %dl,0x4a(%edi,%eax,1)
    xor    %eax,%eax
    mov    0x1d4e(%esi),%ax
    imul   $0x4b,%eax,%eax
    or     %dl,0x4b(%edi,%eax,1)
    mov    0x18(%esp),%edx
    xor    %eax,%eax
    movw   $0xffff,0x1d4e(%esi)
    mov    data_f458e,%al
    movw   $0x0,0x1d5c(%esi)
    cmp    %edx,%eax
    jne    jump_41fe9
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    xor    %edx,%edx
    call   func_50eb0
    mov    %edi,%eax
    call   func_420fc
    jmp    jump_41fe9
  jump_420f0:
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_420fc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    mov    0x1d6e(%eax),%edx
    test   %edx,%edx
    jne    jump_42139
    mov    data_f458e,%dl
    call   func_42140
    cmp    $0xffffffff,%eax
    jne    jump_42139
    mov    $0x15,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_50eb0
    movl   $0xffffffff,0x1d6e(%esi)
  jump_42139:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_42140:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %edx,%ecx
    mov    0x47(%eax),%ebx
    mov    $0x1,%edx
    sar    $0x18,%ebx
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_42184
    mov    0x92(%eax),%ecx
    sar    $0x18,%ecx
    test   %edx,%ecx
    je     jump_42184
    mov    0xdd(%eax),%ecx
    sar    $0x18,%ecx
    test   %edx,%ecx
    je     jump_42184
    mov    0x128(%eax),%eax
    sar    $0x18,%eax
    test   %edx,%eax
    je     jump_42184
    mov    $0xffffffff,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_42184:
    xor    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4218c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,(%esp)
    mov    %ebx,%edi
    movswl %bx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_421aa
    movzbw data_f458e,%di
  jump_421aa:
    xor    %edx,%edx
    mov    (%esp),%dx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    movswl %di,%ecx
    mov    0x47(%esi,%eax,1),%eax
    mov    $0x1,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    mov    $0xffffffff,%ebp
    test   %edx,%eax
    je     jump_421dc
    jmp    jump_42225
  jump_421dc:
    movswl %di,%ecx
    xor    %eax,%eax
  jump_421e1:
    xor    %edx,%edx
    mov    (%esp),%dx
    imul   $0x4b,%edx,%edx
    add    %esi,%edx
    xor    %bh,%bh
    mov    0x40(%edx,%eax,1),%bl
    mov    %bl,%dl
    and    $0xff,%edx
    cmp    $0xff,%edx
    je     jump_42225
    and    $0xffff,%ebx
    imul   $0x4b,%ebx,%ebx
    mov    $0x1,%edx
    mov    0x47(%esi,%ebx,1),%ebx
    shl    %cl,%edx
    sar    $0x18,%ebx
    test   %edx,%ebx
    jne    jump_4221f
    xor    %ebp,%ebp
  jump_4221f:
    inc    %eax
    cmp    $0x5,%eax
    jl     jump_421e1
  jump_42225:
    mov    %ebp,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_42230:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    sub    $0x8,%esp
    mov    %edx,%esi
    mov    data_93b96,%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    %si,%dx
    cmp    %eax,%edx
    jl     jump_4225a
    mov    $0x116,%ebx
    mov    $data_8248f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4225a:
    xor    %edx,%edx
    mov    $data_ab057,%eax
    mov    %edx,0x4(%esp)
    jmp    jump_4226b
  jump_42267:
    add    $0x7b,%eax
    inc    %edx
  jump_4226b:
    mov    data_ba091,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%edx
    jge    jump_42298
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    %si,%cx
    mov    0x57(%eax),%bl
    cmp    %ecx,%ebx
    jne    jump_42267
    xor    %ecx,%ebx
    mov    0x4(%esp),%ecx
    mov    0x46(%eax),%bx
    add    %ebx,%ecx
    mov    %ecx,0x4(%esp)
    jmp    jump_42267
  jump_42298:
    mov    0x4(%esp),%ebx
    test   %ebx,%ebx
    je     jump_422c9
    lea    0x1(%ebx),%eax
    push   $0x3feb3333
    mov    %eax,0x4(%esp)
    push   $0x33333333
    fildl  0x8(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_73ee0
    call   func_72258
    fistpl 0x4(%esp)
  jump_422c9:
    mov    0x4(%esp),%eax
    add    $0x8,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_422d4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xd0,%esp
    mov    %eax,%esi
    mov    %dx,0xcc(%esp)
    mov    %ebx,0xc8(%esp)
    xor    %eax,%eax
    mov    data_93b96,%edx
    mov    0xcc(%esp),%ax
    sar    $0x10,%edx
    cmp    %edx,%eax
    jl     jump_42317
    mov    $0x12d,%ebx
    mov    $data_8249f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_42317:
    mov    %esi,%ebx
    xor    %edx,%edx
    xor    %eax,%eax
    jmp    jump_42323
  jump_4231f:
    add    $0x4b,%ebx
    inc    %eax
  jump_42323:
    xor    %ecx,%ecx
    mov    (%esi),%cx
    cmp    %ecx,%eax
    jge    jump_4236c
    xor    %ecx,%ecx
    mov    0xcc(%esp),%cx
    mov    0x1d4e(%esi,%ecx,2),%cx
    and    $0xffff,%ecx
    cmp    %ecx,%eax
    je     jump_4231f
    mov    0xcc(%esp),%ecx
    mov    0x47(%ebx),%edi
    mov    $0x1,%ebp
    sar    $0x18,%edi
    shl    %cl,%ebp
    test   %ebp,%edi
    jne    jump_4231f
    xor    %ecx,%ecx
    mov    %dx,%cx
    inc    %edx
    mov    %ax,(%esp,%ecx,2)
    jmp    jump_4231f
  jump_4236c:
    test   %dx,%dx
    je     jump_423e3
    xor    %ecx,%ecx
    call   func_7369f
    mov    %dx,%cx
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    xor    %edi,%edi
    mov    (%esp,%edx,2),%di
    lea    0x0(,%edi,4),%eax
    add    %edi,%eax
    mov    %eax,%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    mov    0xcc(%esp),%cl
    add    %eax,%esi
    mov    $0x1,%al
    shl    %cl,%al
    mov    0x4a(%esi),%ah
    mov    0x4b(%esi),%dl
    or     %al,%ah
    or     %al,%dl
    mov    %ah,0x4a(%esi)
    xor    %eax,%eax
    mov    %dl,0x4b(%esi)
    xor    %edx,%edx
    mov    0xcc(%esp),%ax
    mov    data_f458e,%dl
    cmp    %edx,%eax
    jne    jump_423e3
    mov    0xc8(%esp),%ecx
    mov    $0x16,%edx
    mov    $data_fa35c,%eax
    mov    %edi,%ebx
    call   func_50eb0
  jump_423e3:
    add    $0xd0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_423f0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x1d74,%esp
    mov    %eax,%edi
    mov    %edx,%ecx
    cmp    $0xffffffff,%ebx
    jne    jump_42426
    mov    %esp,%eax
    mov    $0x1d72,%ebx
    xor    %edx,%edx
    mov    %esp,%esi
    call   func_41cc0
    mov    %esp,%edx
    mov    %ecx,%eax
    mov    $0x75c,%ecx
    call   func_1bf94
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    jmp    jump_42434
  jump_42426:
    mov    $0x1d72,%ebx
    mov    %eax,%edx
    mov    %ecx,%eax
    call   func_1c098
  jump_42434:
    add    $0x1d74,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_42440:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_42450:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    xor    %edx,%edx
    call   func_41cc0
    mov    %ebx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_42460:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    mov    $0xffff,%eax
    test   %ebx,%ebx
    jle    jump_42479
    sub    %edx,%ecx
    lea    -0x1(%ecx),%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    inc    %eax
  jump_42479:
    cmp    $0x1,%eax
    jge    jump_42483
    mov    $0x1,%eax
  jump_42483:
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_42488:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_424a7
    mov    $data_85e9c,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_424a7:
    add    $0x143,%eax
    xor    %edx,%edx
    movl   $data_85eb0,-0x9c(%eax)
    call   func_1a9e0
    sub    $0x98,%eax
    xor    %edx,%edx
    call   func_1b66c
    mov    $0x1,%edx
    sub    $0xab,%eax
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_424e4
    call   func_72124
  jump_424e4:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_424ec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x108,%esp
    mov    %eax,%ebp
    add    $0x143,%eax
    xor    %edx,%edx
    movw   $0xffff,0x898(%eax)
    mov    %edx,0xec(%esp)
  jump_42511:
    movl   $0x0,(%eax)
    fildl  0xec(%esp)
    movl   $0x0,0x8(%eax)
    mov    0xec(%esp),%ebx
    fstps  0x4(%eax)
    inc    %ebx
    add    $0xc,%eax
    mov    %ebx,0xec(%esp)
    cmp    $0x64,%ebx
    jl     jump_42511
    push   $0x140
    push   $0x47c35000
    push   $0x3f800000
    lea    0xab(%ebp),%eax
    push   $0x41f00000
    call   func_1b808
    lea    0xdf(%ebp),%eax
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    xor    %edx,%edx
    movl   $0xc3160000,0x8(%eax)
    mov    $data_824b0,%eax
    call   func_1bb10
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_42649
    lea    0xc8(%esp),%edx
    push   %edx
    push   $data_824bb
    push   %eax
    call   func_73431
    add    $0xc,%esp
    xor    %eax,%eax
    mov    0xc8(%esp),%edi
    mov    data_f4744,%ax
    cmp    %edi,%eax
    jne    jump_42635
    lea    0x143(%ebp),%edx
    xor    %ebx,%ebx
    jmp    jump_42629
  jump_425c5:
    lea    0xd0(%esp),%eax
    push   %eax
    lea    0xd0(%esp),%eax
    push   %eax
    lea    0xd0(%esp),%eax
    push   %eax
    push   $data_824be
    push   %esi
    add    $0xc,%edx
    call   func_73431
    add    $0x14,%esp
    inc    %ebx
    mov    0xcc(%esp),%eax
    fildl  0xc8(%esp)
    mov    %eax,0xd4(%esp)
    mov    0xd0(%esp),%eax
    fstps  -0xc(%edx)
    fildl  0xd4(%esp)
    mov    %eax,0xd8(%esp)
    fstps  -0x8(%edx)
    fildl  0xd8(%esp)
    fstps  -0x4(%edx)
  jump_42629:
    xor    %eax,%eax
    mov    data_f4744,%ax
    cmp    %eax,%ebx
    jl     jump_425c5
  jump_42635:
    mov    %esi,%eax
    call   func_7280e
  jump_4263c:
    add    $0x108,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_42649:
    cmpl   $0xffffffff,data_f4740
    je     jump_42661
    mov    $0x76,%ebx
    mov    $data_824c7,%edx
    call   func_25878
  jump_42661:
    mov    $0x64,%ebx
    mov    $0xff,%edx
    lea    0x64(%esp),%eax
    call   func_72280
    xor    %esi,%esi
  jump_42676:
    mov    $0xffffffff,%eax
    xor    %edi,%edi
    mov    %eax,0xf4(%esp)
    mov    %edi,0x104(%esp)
    jmp    jump_42706
  jump_42690:
    xor    %eax,%eax
    mov    0x64(%esp,%edi,1),%al
    cmp    $0xff,%eax
    jne    jump_426f4
    mov    0x104(%esp),%ecx
    xor    %eax,%eax
    xor    %ebx,%ebx
  jump_426a8:
    mov    data_f4784(%ecx),%dl
    and    $0xff,%edx
    cmp    $0xff,%edx
    je     jump_426f0
    mov    0x64(%esp,%edx,1),%dl
    and    $0xff,%edx
    cmp    $0xff,%edx
    jne    jump_426db
    xor    %eax,%eax
    mov    %eax,0xf4(%esp)
    mov    %edx,%eax
    jmp    jump_426f0
  jump_426db:
    cmp    %eax,%edx
    jl     jump_426e9
    lea    0x1(%edx),%eax
    cmp    %esi,%eax
    jl     jump_426e9
    lea    0x1(%eax),%esi
  jump_426e9:
    inc    %ebx
    inc    %ecx
    cmp    $0x5,%ebx
    jl     jump_426a8
  jump_426f0:
    mov    %al,0x64(%esp,%edi,1)
  jump_426f4:
    mov    0x104(%esp),%edx
    add    $0x4b,%edx
    inc    %edi
    mov    %edx,0x104(%esp)
  jump_42706:
    xor    %eax,%eax
    mov    data_f4744,%ax
    cmp    %eax,%edi
    jl     jump_42690
    cmpl   $0x0,0xf4(%esp)
    je     jump_42676
    mov    $0x64,%ebx
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_72280
    xor    %eax,%eax
    jmp    jump_42745
  jump_42736:
    xor    %edx,%edx
    mov    0x64(%esp,%eax,1),%dl
    mov    (%esp,%edx,1),%bl
    inc    %bl
    inc    %eax
    mov    %bl,(%esp,%edx,1)
  jump_42745:
    xor    %edx,%edx
    mov    data_f4744,%dx
    cmp    %edx,%eax
    jl     jump_42736
    xor    %ecx,%ecx
    mov    %ecx,0xf8(%esp)
    test   %esi,%esi
    jle    jump_4263c
    mov    $0xf0,%edi
    add    $0x143,%ebp
    mov    %ecx,0xe8(%esp)
    mov    %ebp,0xe0(%esp)
    mov    %edi,0xe4(%esp)
  jump_42783:
    mov    $0x4,%ebx
    mov    0xf8(%esp),%eax
    mov    %ebx,0xfc(%esp)
    mov    %eax,%edx
    mov    $0x2,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    fildl  0xe4(%esp)
    mov    0xf8(%esp),%ebp
    fstps  0x100(%esp)
    movzbl (%esp,%ebp,1),%ebp
    test   %edx,%edx
    je     jump_42801
    cmp    %ebx,%ebp
    jle    jump_42801
    dec    %ebp
    jmp    jump_42811
  jump_427c6:
    mov    0xe4(%esp),%edi
    mov    0xe8(%esp),%ebp
    mov    0xf8(%esp),%eax
    add    $0x1e,%edi
    add    $0x1e,%ebp
    inc    %eax
    mov    %edi,0xe4(%esp)
    mov    %ebp,0xe8(%esp)
    mov    %eax,0xf8(%esp)
    cmp    %eax,%esi
    jle    jump_4263c
    jmp    jump_42783
  jump_42801:
    cmp    $0x1,%ebp
    jle    jump_42811
    movl   $0x17,0xfc(%esp)
  jump_42811:
    mov    0xe8(%esp),%eax
    mov    0xe0(%esp),%ebx
    xor    %edi,%edi
    xor    %ecx,%ecx
    mov    %eax,0xf0(%esp)
    jmp    jump_42830
  jump_4282c:
    add    $0xc,%ebx
    inc    %ecx
  jump_42830:
    xor    %eax,%eax
    mov    data_f4744,%ax
    cmp    %eax,%ecx
    jge    jump_427c6
    xor    %eax,%eax
    mov    0xf8(%esp),%edx
    mov    0x64(%esp,%ecx,1),%al
    cmp    %edx,%eax
    jne    jump_4282c
    mov    %edi,%eax
    and    $0x1,%eax
    imul   $0xf,%eax,%eax
    mov    0xf0(%esp),%edx
    add    %eax,%edx
    mov    %edx,0xdc(%esp)
    mov    %ebx,%eax
    fildl  0xdc(%esp)
    fstps  0x4(%ebx)
    fildl  0xfc(%esp)
    fstps  0x8(%ebx)
    push   0x100(%esp)
    movl   $0x0,(%ebx)
    call   func_4e69c
    mov    $0x168,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebp
    mov    %eax,0xdc(%esp)
    inc    %edi
    fildl  0xdc(%esp)
    mov    $0x17,%eax
    fadds  0x100(%esp)
    mov    %eax,0xfc(%esp)
    fstps  0x100(%esp)
    jmp    jump_4282c


/*----------------------------------------------------------------*/
func_428c8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,(%esp)
    mov    $0xffff,%edx
    mov    data_c84ec,%ebp
    mov    %edx,0x8(%esp)
    sub    0x8(%eax),%ebp
    mov    (%esp),%edx
    xor    %ecx,%ecx
    mov    data_c84f0,%eax
    mov    0xc(%edx),%ebx
    mov    data_f4744,%cx
    sub    %ebx,%eax
    dec    %ecx
    mov    %eax,0x4(%esp)
    test   %ecx,%ecx
    jge    jump_42917
    jmp    jump_42983
  jump_4290a:
    dec    %ecx
    sub    $0x2,%edi
    test   %ecx,%ecx
    jge    jump_42920
    jmp    jump_42983
  jump_42917:
    lea    0x0(,%ecx,2),%edi
    add    %edx,%edi
  jump_42920:
    mov    $0xffffffff,%ebx
    xor    %esi,%esi
    xor    %edx,%edx
    mov    0x913(%edi),%si
    mov    $data_f4744,%eax
    mov    %si,%dx
    call   func_4218c
    test   %eax,%eax
    je     jump_4290a
    mov    (%esp),%edx
    lea    0x0(,%esi,2),%eax
    add    %edx,%eax
    mov    0x5f1(%eax),%edx
    sar    $0x10,%edx
    lea    -0x19(%edx),%ebx
    cmp    %ebx,%ebp
    jle    jump_4290a
    add    $0x19,%edx
    cmp    %edx,%ebp
    jge    jump_4290a
    mov    0x6b9(%eax),%eax
    sar    $0x10,%eax
    mov    0x4(%esp),%ebx
    lea    -0x19(%eax),%edx
    cmp    %ebx,%edx
    jge    jump_4290a
    add    $0x19,%eax
    cmp    %ebx,%eax
    jle    jump_4290a
    mov    %esi,0x8(%esp)
  jump_42983:
    mov    (%esp),%edx
    mov    0x8(%esp),%eax
    cmp    0x9db(%edx),%ax
    je     jump_429ab
    mov    $0xffffffff,%ebx
    mov    %ax,0x9db(%edx)
    mov    %ebx,data_f64bc
    mov    %ebx,data_f64c0
  jump_429ab:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_42a64:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    mov    %ecx,0x8(%esp)
    cmp    $0x6,%dx
    jb     jump_431cf
    jbe    jump_42c34
    cmp    $0x32,%dx
    jb     jump_431b6
    cmp    $0x35,%dx
    jbe    jump_42f91
    cmp    $0x38,%dx
    jb     jump_42ab2
    jbe    jump_4318b
    cmp    $0x3a,%dx
    je     jump_430d8
  jump_42ab2:
    mov    0x8(%esp),%ecx
    movswl %di,%edx
    mov    %ebp,%ebx
    mov    %esi,%eax
    call   func_2eb04
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42ac9:
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd7c,%dx
    call   func_1b084
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd80,%dx
    call   func_1b084
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    data_efd60(,%edx,2),%dx
    mov    $data_11f10c,%eax
    and    $0xffff,%edx
    call   func_1b084
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd82,%dx
    xor    %ecx,%ecx
    call   func_1b084
    mov    $0xffffffff,%eax
    mov    %ecx,data_f64c4
    movswl %di,%edx
    mov    0x8(%esp),%ecx
    mov    %eax,data_f64b8
    mov    %eax,data_f64bc
    mov    %esi,%eax
    movw   $0xffff,0x9db(%esi)
    call   func_2eb04
    push   $0x0
    mov    $data_fa35c,%eax
    mov    $0x3a,%ebx
    push   $0x0
    mov    0x41(%esi),%edx
    xor    %ecx,%ecx
    call   func_517c4
  jump_42b68:
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42b71:
    mov    $0x1,%al
    mov    data_f458e,%cl
    xor    %edx,%edx
    shl    %cl,%al
    mov    %edx,0xc(%esp)
    mov    %al,%cl
    lea    0x0(,%edx,4),%eax
    mov    %eax,0xc(%esp)
    mov    0xc(%esp),%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    jmp    jump_42baf
  jump_42b99:
    mov    %cl,%bl
    not    %bl
    mov    data_f478f(%eax),%bh
    add    $0x4b,%eax
    and    %bl,%bh
    inc    %edx
    mov    %bh,data_f4744(%eax)
  jump_42baf:
    xor    %ebx,%ebx
    mov    data_f4744,%bx
    cmp    %ebx,%edx
    jl     jump_42b99
    mov    0x8(%esp),%ecx
    movswl %di,%edx
    mov    %ebp,%ebx
    mov    %esi,%eax
    call   func_2eb04
    mov    $0xffffffff,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%esi),%edx
    call   func_51884
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42be7:
    push   $0x0
    mov    $0x8,%ecx
    mov    $0x4,%ebx
    push   $0x0
    mov    0x41(%eax),%edx
    mov    $data_fa35c,%eax
    call   func_51aec
    mov    %esi,%eax
    call   func_428c8
    mov    0x39(%esi),%eax
    mov    0x35(%esi),%ecx
    mov    0x3d(%esi),%edi
    and    %ecx,%eax
    and    %edi,%eax
    cmp    $0xffffffff,%eax
    jne    jump_42c28
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0x10(%ebx)
  jump_42c28:
    mov    $0xffffffff,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42c34:
    mov    $0x8,%ebx
    mov    0x41(%eax),%edx
    mov    $data_fa35c,%eax
    call   func_51b80
    mov    %esi,%eax
    call   func_428c8
    mov    0x39(%esi),%eax
    mov    0x35(%esi),%ebp
    mov    0x3d(%esi),%edx
    and    %ebp,%eax
    and    %edx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_42c6c
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_42c6c:
    mov    $0xffffffff,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42c78:
    cmpl   $0x0,data_90ba0
    je     jump_42f81
    mov    $0x1,%al
    mov    data_f458e,%cl
    shl    %cl,%al
    xor    %edx,%edx
    mov    %al,%cl
    lea    0x0(,%edx,4),%eax
    mov    %eax,%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    jmp    jump_42cb5
  jump_42ca3:
    mov    data_f478e(%eax),%ch
    add    $0x4b,%eax
    or     %cl,%ch
    inc    %edx
    mov    %ch,data_f4743(%eax)
  jump_42cb5:
    xor    %ebx,%ebx
    mov    data_f4744,%bx
    cmp    %ebx,%edx
    jl     jump_42ca3
    xor    %eax,%eax
    mov    data_f458e,%al
    mov    $0xffff,%edx
    xor    %ebx,%ebx
    mov    %dx,data_f6492(,%eax,2)
    mov    %bx,data_f64a0(,%eax,2)
    mov    %esi,%eax
    call   func_428c8
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42cf0:
    cmpl   $0x0,data_90ba0
    je     jump_42f81
    xor    %ecx,%eax
    mov    data_f458e,%al
    mov    data_f6492(,%eax,2),%ax
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jge    jump_42f81
    xor    %eax,%eax
    mov    data_f458e,%al
    xor    %edx,%edx
    mov    data_f6492(,%eax,2),%dx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    mov    data_f458e,%cl
    sub    %edx,%eax
    mov    $0x1,%dl
    shl    %cl,%dl
    or     %dl,data_f478e(%eax)
    xor    %eax,%eax
    mov    %cl,%al
    movw   $0xffff,data_f6492(,%eax,2)
    xor    %eax,%eax
    mov    %cl,%al
    xor    %ebx,%ebx
    mov    %bx,data_f64a0(,%eax,2)
    mov    %esi,%eax
    call   func_428c8
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42d79:
    cmpl   $0x0,data_90ba0
    je     jump_42f81
    mov    $0x1,%al
    mov    data_f458e,%cl
    shl    %cl,%al
    xor    %edx,%edx
    mov    %al,%cl
    lea    0x0(,%edx,4),%eax
    mov    %eax,%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    jmp    jump_42dba
  jump_42da4:
    mov    %cl,%bl
    not    %bl
    mov    data_f478e(%eax),%bh
    add    $0x4b,%eax
    and    %bl,%bh
    inc    %edx
    mov    %bh,data_f4743(%eax)
  jump_42dba:
    xor    %ebx,%ebx
    mov    data_f4744,%bx
    cmp    %ebx,%edx
    jl     jump_42da4
    xor    %eax,%eax
    mov    data_f458e,%al
    mov    $0xffff,%ecx
    xor    %edi,%edi
    mov    %cx,data_f6492(,%eax,2)
    mov    %di,data_f64a0(,%eax,2)
    mov    %esi,%eax
    call   func_428c8
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42df5:
    mov    data_f64ae,%ebp
    mov    $data_fdeda,%edx
    not    %ebp
    mov    $0x14,%eax
    mov    %ebp,data_f64ae
    call   func_556e4
    mov    $0xffffffff,%eax
    mov    %eax,data_f64b8
    mov    %eax,data_f64c0
    mov    %esi,%eax
    call   func_428c8
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42e31:
    flds   data_11f108
    fcompl data_824fc
    fnstsw %ax
    sahf
    jbe    jump_42f81
    flds   data_11f108
    fld    %st(0)
    fmull  data_82504
    fstp   %st(1)
    fstps  data_11f108
    mov    %esi,%eax
    call   func_428c8
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42e6c:
    flds   data_11f108
    fcomps data_824f0
    fnstsw %ax
    sahf
    jae    jump_42f81
    flds   data_11f108
    fmull  data_824f4
    fstps  data_11f108
    mov    %esi,%eax
    call   func_428c8
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42ea3:
    mov    %esi,%eax
    mov    0xa7(%esi),%ebx
    movl   $0xc2c80000,0xe3(%esi)
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    %esi,%eax
    call   func_428c8
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42eca:
    mov    %esi,%eax
    mov    0xa7(%esi),%ebx
    movl   $0x49742400,0xe3(%esi)
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    %esi,%eax
    call   func_428c8
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42ef1:
    mov    %ecx,%eax
    cmp    $0x2e,%ecx
    jb     jump_42f49
    jbe    jump_42cf0
    cmp    $0x49,%ecx
    jb     jump_42f25
    jbe    jump_42ea3
    cmp    $0x4f,%ecx
    jb     jump_42f81
    jbe    jump_42eca
    cmp    $0x51,%ecx
    je     jump_42eca
    mov    %esi,%eax
    call   func_428c8
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42f25:
    cmp    $0x32,%ecx
    jb     jump_42f81
    jbe    jump_42df5
    cmp    $0x47,%ecx
    je     jump_42ea3
    mov    %esi,%eax
    call   func_428c8
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42f49:
    cmp    $0xd,%ecx
    jb     jump_42f78
    jbe    jump_42e6c
    cmp    $0x20,%ecx
    jb     jump_42f81
    jbe    jump_42c78
    cmp    $0x21,%ecx
    je     jump_42d79
    mov    %esi,%eax
    call   func_428c8
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42f78:
    cmp    $0xc,%ecx
    je     jump_42e31
  jump_42f81:
    mov    %esi,%eax
  jump_42f83:
    call   func_428c8
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_42f91:
    movswl %dx,%eax
    cmp    $0x32,%eax
    jne    jump_42fd9
    mov    data_f64c4,%bh
    test   $0x4,%bh
    je     jump_42fc3
    test   $0x8,%bh
    je     jump_42fb6
    mov    %bh,%dl
    and    $0xf7,%dl
    mov    %dl,data_f64c4
    jmp    jump_42fd9
  jump_42fb6:
    mov    %bh,%ah
    and    $0xfb,%ah
    mov    %ah,data_f64c4
    jmp    jump_42fd9
  jump_42fc3:
    mov    %bh,%cl
    or     $0x4,%cl
    mov    %cl,data_f64c4
    mov    %cl,%ch
    and    $0xf7,%ch
    mov    %ch,data_f64c4
  jump_42fd9:
    movswl %di,%eax
    cmp    $0x33,%eax
    jne    jump_43016
    mov    data_f64c4,%dh
    test   $0x4,%dh
    je     jump_4300b
    test   $0x8,%dh
    je     jump_42ffe
    mov    %dh,%ch
    and    $0xfb,%ch
    mov    %ch,data_f64c4
    jmp    jump_43016
  jump_42ffe:
    mov    %dh,%cl
    or     $0x8,%cl
    mov    %cl,data_f64c4
    jmp    jump_43016
  jump_4300b:
    mov    %dh,%bl
    or     $0xc,%bl
    mov    %bl,data_f64c4
  jump_43016:
    movswl %di,%eax
    cmp    $0x34,%eax
    jne    jump_4305b
    mov    data_f64c4,%al
    test   $0x1,%al
    je     jump_43045
    test   $0x2,%al
    je     jump_43038
    mov    %al,%bh
    and    $0xfd,%bh
    mov    %bh,data_f64c4
    jmp    jump_4305b
  jump_43038:
    mov    %al,%bl
    and    $0xfe,%bl
    mov    %bl,data_f64c4
    jmp    jump_4305b
  jump_43045:
    mov    %al,%ah
    or     $0x1,%ah
    mov    %ah,%dl
    mov    %ah,data_f64c4
    and    $0xfd,%dl
    mov    %dl,data_f64c4
  jump_4305b:
    movswl %di,%eax
    cmp    $0x35,%eax
    jne    jump_43098
    mov    data_f64c4,%cl
    test   $0x1,%cl
    je     jump_4308d
    test   $0x2,%cl
    je     jump_43080
    mov    %cl,%dl
    and    $0xfe,%dl
    mov    %dl,data_f64c4
    jmp    jump_43098
  jump_43080:
    mov    %cl,%ah
    or     $0x2,%ah
    mov    %ah,data_f64c4
    jmp    jump_43098
  jump_4308d:
    mov    %cl,%ch
    or     $0x3,%ch
    mov    %ch,data_f64c4
  jump_43098:
    cmp    $0x4,%ebp
    jne    jump_42b68
    movswl %di,%edx
    mov    %ebp,%eax
    cmp    $0x34,%edx
    je     jump_430b0
    cmp    $0x35,%edx
    jne    jump_430b5
  jump_430b0:
    mov    $0x1,%eax
  jump_430b5:
    push   $0x0
    mov    $0x38,%ecx
    mov    $0x1,%ebx
    push   %eax
    mov    0x41(%esi),%edx
    mov    $data_fa35c,%eax
    call   func_51aec
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_430d8:
    mov    data_f64c4,%ah
    test   $0x4,%ah
    je     jump_43120
    movl   $0x40400000,0x14(%esp)
    test   $0x8,%ah
    je     jump_430f8
    movl   $0xc0400000,0x14(%esp)
  jump_430f8:
    flds   0x14(%esp)
    fmuls  data_11f108
    lea    0x11f(%esi),%eax
    fstps  0x14(%esp)
    push   0x14(%esp)
    mov    $0xffffffff,%ecx
    call   func_4e954
    mov    %ecx,data_f64c0
  jump_43120:
    mov    data_f64c4,%dh
    test   $0x1,%dh
    je     jump_43168
    movl   $0xc0000000,0x10(%esp)
    test   $0x2,%dh
    je     jump_43140
    movl   $0x40000000,0x10(%esp)
  jump_43140:
    flds   0x10(%esp)
    fmuls  data_11f108
    mov    $0xffffffff,%eax
    fstps  0x10(%esp)
    flds   0xe3(%esi)
    fadds  0x10(%esp)
    mov    %eax,data_f64c0
    fstps  0xe3(%esi)
  jump_43168:
    cmpl   $0xffffffff,data_f64c0
    jne    jump_42b68
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4318b:
    mov    data_f64c4,%ebx
    not    %ebp
    mov    0x41(%eax),%edx
    and    %ebp,%ebx
    mov    $data_fa35c,%eax
    mov    %ebx,data_f64c4
    mov    $0xffffffff,%ebx
    call   func_51b80
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_431b6:
    cmp    $0x7,%dx
    jbe    jump_42be7
    cmp    $0x8,%dx
    je     jump_42f83
    jmp    jump_42ab2
  jump_431cf:
    cmp    $0x2,%dx
    jb     jump_43294
    jbe    jump_42b71
    cmp    $0x3,%dx
    jbe    jump_42ef1
    cmpl   $0x0,0x35(%eax)
    je     jump_42b68
    xor    %edx,%edx
    call   func_428c8
    mov    0x9db(%esi),%dx
    cmp    $0xffff,%edx
    jge    jump_42b68
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%ebx
    shl    $0x4,%eax
    sub    %ebx,%eax
    mov    data_f458e,%cl
    mov    data_f478b(%eax),%ebx
    mov    $0x1,%eax
    sar    $0x18,%ebx
    shl    %cl,%eax
    test   %eax,%ebx
    jne    jump_42b68
    mov    $0xffffffff,%ebx
    mov    $data_f4744,%eax
    call   func_4218c
    test   %eax,%eax
    je     jump_42b68
    mov    $data_f8638,%eax
    xor    %edx,%edx
    call   func_4af80
    xor    %eax,%eax
    mov    data_f458e,%al
    mov    $0xffffffff,%ecx
    lea    0x0(,%eax,2),%edx
    mov    %ecx,data_f64c0
    mov    0x9db(%esi),%ax
    mov    %ecx,data_f64bc
    mov    %ax,data_f6492(%edx)
    xor    %eax,%eax
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_43294:
    cmp    $0x1,%dx
    je     jump_42ac9
    jmp    jump_42ab2


/*----------------------------------------------------------------*/
func_432a4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    (%eax),%cx
    mov    (%edx),%bx
    xor    %eax,%eax
    mov    %bx,%ax
    lea    0x0(,%eax,4),%edx
    mov    data_f64c8,%eax
    lea    (%eax,%edx,1),%esi
    xor    %edx,%edx
    mov    %cx,%dx
    flds   (%esi)
    fcomps (%eax,%edx,4)
    fnstsw %ax
    sahf
    seta   %dl
    xor    %esi,%esi
    mov    data_f64c8,%eax
    mov    %bx,%si
    xor    %ebx,%ebx
    and    $0xff,%edx
    mov    %cx,%bx
    flds   (%eax,%esi,4)
    fcomps (%eax,%ebx,4)
    fnstsw %ax
    sahf
    jae    jump_432f6
    mov    $0xffffffff,%edx
  jump_432f6:
    mov    %edx,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_432fc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x13c,%esp
    mov    %eax,%ebp
    lea    0xb4(%esp),%edi
    lea    0x4(%ebp),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    lea    0x4(%eax),%esi
    push   %esi
    call   func_59d90
    add    $0x8,%esp
    mov    $data_fa35c,%eax
    mov    %esi,%edx
    call   func_50690
    mov    %ebp,%ecx
    mov    $data_f4744,%esi
    mov    0x147(%ebp),%eax
    xor    %edx,%edx
    mov    %eax,0x108(%esp)
    mov    %eax,0xf0(%esp)
    mov    %edx,0xf8(%esp)
    mov    $0xffffffff,%edi
    jmp    jump_4336f
  jump_4335d:
    mov    0xf8(%esp),%eax
    inc    %eax
    add    $0xc,%ecx
    mov    %eax,0xf8(%esp)
  jump_4336f:
    xor    %eax,%eax
    mov    0xf8(%esp),%ebx
    mov    data_f4744,%ax
    cmp    %ebx,%eax
    jle    jump_433d9
    mov    %edi,%ebx
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0xf8(%esp),%dx
    call   func_4218c
    test   %eax,%eax
    je     jump_4335d
    flds   0x147(%ecx)
    fcomps 0xf0(%esp)
    fnstsw %ax
    sahf
    jae    jump_433b8
    mov    0x147(%ecx),%eax
    mov    %eax,0xf0(%esp)
  jump_433b8:
    flds   0x147(%ecx)
    fcomps 0x108(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4335d
    mov    0x147(%ecx),%eax
    mov    %eax,0x108(%esp)
    jmp    jump_4335d
  jump_433d9:
    flds   0xe3(%ebp)
    fcomps 0xf0(%esp)
    fnstsw %ax
    sahf
    jae    jump_433f4
    mov    0xf0(%esp),%eax
    jmp    jump_4340d
  jump_433f4:
    flds   0xe3(%ebp)
    fcomps 0x108(%esp)
    fnstsw %ax
    sahf
    jbe    jump_43413
    mov    0x108(%esp),%eax
  jump_4340d:
    mov    %eax,0xe3(%ebp)
  jump_43413:
    lea    0xab(%ebp),%eax
    call   func_1b864
    xor    %ecx,%ecx
    lea    0xeb(%ebp),%eax
    mov    %ecx,0xf8(%esp)
    lea    0x143(%ebp),%ecx
    lea    0x6bb(%ebp),%esi
    lea    0x5f3(%ebp),%edi
    mov    %eax,0x104(%esp)
    mov    %ebp,0x118(%esp)
    mov    %ebp,0x110(%esp)
    jmp    jump_434ff
  jump_43459:
    lea    0xdc(%esp),%ebx
    xor    %eax,%eax
    mov    0x104(%esp),%edx
    mov    %eax,0xdc(%esp)
    mov    %eax,0xe0(%esp)
    mov    %eax,0xe4(%esp)
    mov    %ecx,%eax
    call   func_4e774
    push   %esi
    mov    0xe8(%esp),%eax
    push   %edi
    mov    0x118(%esp),%edx
    mov    0x100(%esp),%ebx
    push   $0xf0
    add    $0xc,%ecx
    add    $0x2,%esi
    push   $0xeb
    mov    %eax,0x783(%edx)
    lea    0xec(%esp),%eax
    push   0xd3(%ebp)
    mov    0x12c(%esp),%edx
    call   func_4e7c4
    mov    0xf8(%esp),%eax
    inc    %ebx
    mov    %ax,0x913(%edx)
    lea    0x2(%edx),%eax
    add    $0x2,%edi
    mov    0x110(%esp),%edx
    mov    %ebx,0xf8(%esp)
    add    $0x4,%edx
    mov    %eax,0x118(%esp)
    mov    %edx,0x110(%esp)
  jump_434ff:
    xor    %eax,%eax
    mov    0xf8(%esp),%edx
    mov    data_f4744,%ax
    cmp    %edx,%eax
    jg     jump_43459
    mov    $func_432a4,%ecx
    mov    $0x2,%ebx
    xor    %edx,%edx
    lea    0x783(%ebp),%eax
    mov    data_f4744,%dx
    mov    %eax,data_f64c8
    lea    0x913(%ebp),%eax
    call   func_72316
    xor    %ebx,%ebx
    mov    %ebp,%eax
    mov    %ebx,0xf8(%esp)
    jmp    jump_4356c
  jump_4354c:
    mov    0xf8(%esp),%bl
    xor    %edx,%edx
    lea    0x1(%ecx),%edi
    mov    0x913(%eax),%dx
    add    $0x2,%eax
    mov    %edi,0xf8(%esp)
    mov    %bl,(%esp,%edx,1)
  jump_4356c:
    xor    %edx,%edx
    mov    0xf8(%esp),%ecx
    mov    data_f4744,%dx
    cmp    %ecx,%edx
    jg     jump_4354c
    xor    %eax,%eax
    mov    data_f458e,%al
    mov    data_f6492(,%eax,2),%ax
    xor    %esi,%esi
    mov    %eax,0x134(%esp)
    lea    0x4(%ebp),%eax
    mov    %esi,0xf8(%esp)
    mov    %eax,0x130(%esp)
    mov    %ebp,0x114(%esp)
    jmp    jump_43974
  jump_435b5:
    cmp    $0x3,%edx
    jle    jump_435c5
    movl   $0x3,0x11c(%esp)
  jump_435c5:
    mov    0x11c(%esp),%edi
    add    $0x3,%edi
    mov    %edi,%edx
    shl    $0x8,%edx
    mov    data_c8c33,%eax
    add    $0x100,%edx
    add    %edx,%eax
    push   %eax
    mov    %edi,0x120(%esp)
    call   func_583c7
    add    $0x4,%esp
    xor    %eax,%eax
    mov    0x128(%esp),%edx
    mov    %eax,0x120(%esp)
    imul   $0x4b,%edx,%eax
    mov    data_f458e,%cl
    mov    data_f478b(%eax),%ebx
    mov    $0x1,%edx
    sar    $0x18,%ebx
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_4362e
    movl   $0x14,0x120(%esp)
    jmp    jump_43694
  jump_4362e:
    xor    %edx,%edx
    mov    0x128(%esp),%ebx
    mov    0x134(%esp),%dx
    cmp    %ebx,%edx
    jne    jump_43694
    xor    %ebx,%edx
    mov    %cl,%dl
    mov    data_f64a0(,%edx,2),%dx
    and    $0xffff,%edx
    imul   $0x12,%edx,%edx
    xor    %ebx,%ebx
    mov    data_f4782(%eax),%bx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    add    $0x2,%eax
    mov    %eax,0x120(%esp)
    cmp    $0xffffffef,%eax
    jge    jump_43684
    movl   $0xffffffef,0x120(%esp)
    jmp    jump_43694
  jump_43684:
    cmp    $0x11,%eax
    jle    jump_43694
    movl   $0x11,0x120(%esp)
  jump_43694:
    imul   $0x4b,0x128(%esp),%esi
    mov    0x128(%esp),%eax
    add    %eax,%eax
    lea    (%eax,%ebp,1),%edx
    mov    0x128(%esp),%eax
    shl    $0x2,%eax
    mov    %edx,0x124(%esp)
    lea    (%eax,%ebp,1),%edx
    xor    %edi,%edi
    mov    %edx,0x12c(%esp)
  jump_436c5:
    xor    %ecx,%ecx
    mov    data_f4784(%esi),%cl
    cmp    $0xff,%ecx
    je     jump_437d3
    mov    $0xffffffff,%ebx
    xor    %edx,%edx
    mov    $data_f4744,%eax
    mov    %cx,%dx
    call   func_4218c
    test   %eax,%eax
    je     jump_4373c
    mov    0x12c(%esp),%edx
    flds   0x783(%edx)
    fadds  0x783(%ebp,%ecx,4)
    fmuls  data_82533
    fadds  0xe7(%ebp)
    fmuls  data_8252f
    call   func_72258
    fistpl 0xfc(%esp)
    mov    0xfc(%esp),%eax
    cmp    $0x3,%eax
    jle    jump_43748
    movl   $0x3,0xfc(%esp)
    jmp    jump_43758
  jump_4373c:
    inc    %edi
    inc    %esi
    cmp    $0x5,%edi
    jl     jump_436c5
    jmp    jump_437d3
  jump_43748:
    cmp    $0xfffffffd,%eax
    jge    jump_43758
    movl   $0xfffffffd,0xfc(%esp)
  jump_43758:
    mov    $0x6b,%eax
    sub    0xfc(%esp),%eax
    xor    %edx,%edx
    mov    0x9db(%ebp),%dx
    cmp    %edx,%ecx
    jne    jump_43776
    mov    $0xf3,%eax
  jump_43776:
    cwtl
    mov    0x6b9(%ebp,%ecx,2),%edx
    push   %eax
    sar    $0x10,%edx
    push   $0x0
    add    $0x1b,%edx
    mov    0x5f1(%ebp,%ecx,2),%eax
    push   %edx
    sar    $0x10,%eax
    push   %eax
    mov    0x134(%esp),%eax
    mov    0x6b9(%eax),%eax
    sar    $0x10,%eax
    sub    $0x1b,%eax
    push   %eax
    mov    0x138(%esp),%eax
    mov    0x5f1(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x148(%esp),%edx
    push   %edx
    call   func_573c1
    add    $0x1c,%esp
    inc    %edi
    inc    %esi
    cmp    $0x5,%edi
    jl     jump_436c5
  jump_437d3:
    mov    0x120(%esp),%ebx
    test   %ebx,%ebx
    je     jump_4384a
    mov    %ebx,%edx
    shl    $0x10,%edx
    mov    $0x14,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    push   $0x1
    push   %eax
    push   %eax
    mov    %eax,0x12c(%esp)
    mov    0x134(%esp),%eax
    push   $0x0
    mov    0x6b9(%ebp,%eax,2),%edx
    push   $data_c8c44
    sar    $0x10,%edx
    mov    0x5f1(%ebp,%eax,2),%eax
    push   %edx
    sar    $0x10,%eax
    push   %eax
    mov    0x144(%esp),%edi
    xor    %edx,%edx
    push   %edi
    mov    $data_11f10c,%eax
    mov    data_efd82,%dx
    call   func_1b084
    push   %eax
    mov    0x154(%esp),%eax
    push   %eax
    call   func_589f1
    add    $0x28,%esp
  jump_4384a:
    xor    %eax,%eax
    mov    0x128(%esp),%edx
    mov    0x134(%esp),%ax
    mov    $0x1,%esi
    cmp    %edx,%eax
    jne    jump_43880
    imul   $0x4b,%edx,%eax
    mov    data_f458e,%cl
    mov    data_f478b(%eax),%eax
    mov    %esi,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    jne    jump_43880
    xor    %esi,%esi
  jump_43880:
    imul   $0x4b,0x128(%esp),%eax
    mov    $0x1,%edx
    mov    data_f478c(%eax),%eax
    mov    data_f458e,%cl
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_438a7
    mov    $0x3,%esi
  jump_438a7:
    xor    %eax,%eax
    mov    0x128(%esp),%edi
    mov    0x9db(%ebp),%ax
    cmp    %edi,%eax
    jne    jump_438c0
    mov    $0x2,%esi
  jump_438c0:
    mov    $0xffffffff,%ebx
    mov    $data_8250c,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %eax,%edx
    mov    0x128(%esp),%eax
    add    %eax,%eax
    add    %ebp,%eax
    cmp    $0x2,%esi
    jne    jump_4391e
    mov    0x6b9(%eax),%ebx
    sar    $0x10,%ebx
    mov    0x5f1(%eax),%eax
    push   %ebx
    sar    $0x10,%eax
    push   %eax
    push   %esi
    mov    $data_11f10c,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    mov    0x140(%esp),%edx
    push   %edx
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_43954
  jump_4391e:
    mov    0x6b9(%eax),%ebx
    sar    $0x10,%ebx
    mov    0x5f1(%eax),%eax
    push   %ebx
    sar    $0x10,%eax
    push   %eax
    push   %esi
    mov    $data_11f10c,%eax
    and    $0xffff,%edx
    call   func_1b084
    push   %eax
    mov    0x140(%esp),%eax
    push   %eax
    call   func_583e6
    add    $0x14,%esp
  jump_43954:
    mov    0x114(%esp),%ebx
    mov    0xf8(%esp),%ecx
    add    $0x2,%ebx
    inc    %ecx
    mov    %ebx,0x114(%esp)
    mov    %ecx,0xf8(%esp)
  jump_43974:
    xor    %eax,%eax
    mov    0xf8(%esp),%edx
    mov    data_f4744,%ax
    cmp    %edx,%eax
    jle    jump_43a05
    mov    0x114(%esp),%edx
    xor    %eax,%eax
    mov    0x913(%edx),%ax
    mov    %eax,0x128(%esp)
    xor    %edx,%edx
    mov    $0xffffffff,%ebx
    mov    0x128(%esp),%dx
    mov    $data_f4744,%eax
    call   func_4218c
    test   %eax,%eax
    je     jump_43954
    mov    0x128(%esp),%eax
    flds   0x783(%ebp,%eax,4)
    fadds  0xe7(%ebp)
    fmuls  data_8252f
    call   func_72258
    fistpl 0x11c(%esp)
    mov    0x11c(%esp),%edx
    cmp    $0xfffffffd,%edx
    jge    jump_435b5
    movl   $0xfffffffd,0x11c(%esp)
    jmp    jump_435c5
  jump_43a05:
    mov    $data_fd3aa,%edi
    lea    0x4(%ebp),%esi
    mov    data_f64bc,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    cmp    $0xffffffff,%ebx
    jne    jump_4421c
    mov    $0x1e5,%ecx
    mov    $0x7,%esi
    mov    $0x278,%edi
    mov    $0x1aa,%eax
    push   $0x0
    mov    %eax,0xc8(%esp)
    lea    0xb8(%esp),%eax
    mov    %ecx,0xbc(%esp)
    push   %eax
    mov    %esi,0xc4(%esp)
    mov    %edi,0xc8(%esp)
    call   func_59d90
    add    $0x8,%esp
    lea    0xb4(%esp),%edx
    mov    $data_fa35c,%eax
    call   func_50690
    xor    %eax,%eax
    mov    $0xffff,%edx
    mov    0x134(%esp),%ax
    mov    %edx,0x138(%esp)
    cmp    $0xffff,%eax
    jge    jump_43a98
    mov    %eax,0x138(%esp)
  jump_43a98:
    xor    %eax,%eax
    mov    0x9db(%ebp),%ax
    cmp    $0xffff,%eax
    jge    jump_43aaf
    mov    %eax,0x138(%esp)
  jump_43aaf:
    xor    %eax,%eax
    mov    0x138(%esp),%ax
    cmp    $0xffff,%eax
    jge    jump_44214
    lea    0xb4(%esp),%esi
    mov    $data_fd3aa,%edi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0xffffffff,%edx
    lea    0xc8(%esp),%edi
    lea    0xb4(%esp),%esi
    mov    0x134(%esp),%ebx
    mov    %edx,0xf4(%esp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    cmp    %bx,%ax
    jne    jump_43b6e
    mov    0x138(%esp),%eax
    cmp    0x9db(%ebp),%ax
    je     jump_43b3d
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    data_92e18(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0xf4(%esp)
  jump_43b3d:
    push   $0x82
    mov    0xf6(%esp),%eax
    push   $0xffffffff
    sar    $0x10,%eax
    push   %eax
    mov    $0xa,%ebx
    push   $0x2
    mov    $0x7a,%eax
    xor    %edx,%edx
    call   func_1ce70
    mov    %eax,%ecx
    mov    $data_fd3a2,%eax
    call   func_2af88
  jump_43b6e:
    mov    $0x46,%ebx
    mov    $0x78,%ecx
    lea    0xec(%esp),%eax
    xor    %esi,%esi
    xor    %edx,%edx
    mov    0x138(%esp),%si
    mov    data_efd82,%dx
    mov    %ebx,0x100(%esp)
    mov    %ecx,0xd8(%esp)
    push   %eax
    mov    $data_11f10c,%eax
    lea    0xec(%esp),%ecx
    call   func_1b084
    mov    %esi,%ebx
    mov    %eax,%edx
    lea    0xcc(%esp),%eax
    call   func_2b320
    mov    0xec(%esp),%edi
    push   %edi
    mov    0xec(%esp),%eax
    push   %eax
    xor    %edx,%edx
    push   %esi
    mov    data_efd82,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    lea    0xd8(%esp),%eax
    push   %eax
    call   func_57efc
    mov    $0xffffffff,%ebx
    add    $0x14,%esp
    mov    $data_8251d,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    $0x1,%ebx
    mov    0x134(%esp),%edx
    mov    %eax,%edi
    cmp    %dx,%si
    jne    jump_43c47
    lea    0x0(,%esi,4),%eax
    add    %esi,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    data_f458e,%cl
    mov    data_f478b(%eax),%edx
    mov    %ebx,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    jne    jump_43c47
    xor    %ebx,%ebx
  jump_43c47:
    xor    %edx,%edx
    mov    0x138(%esp),%dx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    data_f458e,%cl
    mov    data_f478c(%eax),%eax
    mov    $0x1,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    je     jump_43c80
    mov    $0x3,%ebx
  jump_43c80:
    mov    0x138(%esp),%eax
    cmp    0x9db(%ebp),%ax
    jne    jump_43c95
    mov    $0x2,%ebx
  jump_43c95:
    mov    0xec(%esp),%edx
    push   %edx
    mov    0xec(%esp),%ecx
    push   %ecx
    xor    %edx,%edx
    push   %ebx
    mov    $data_11f10c,%eax
    mov    %di,%dx
    call   func_1b084
    push   %eax
    lea    0xd8(%esp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    mov    $data_f4746,%ecx
    xor    %edx,%edx
    push   $0x82
    mov    0xf6(%esp),%eax
    mov    0x13c(%esp),%dx
    mov    0x104(%esp),%edi
    push   $0xffffffff
    sar    $0x10,%eax
    add    $0x19,%edi
    push   %eax
    lea    0x0(,%edx,4),%eax
    mov    %edi,%ebx
    add    %edx,%eax
    push   $0x2
    mov    %eax,%esi
    mov    %eax,%edx
    shl    $0x4,%esi
    xor    %eax,%edx
    sub    %eax,%esi
    mov    $data_fd3a2,%eax
    add    %esi,%ecx
    mov    %edi,0x110(%esp)
    call   func_2af88
    mov    data_f458e,%cl
    mov    data_f478b(%esi),%edx
    lea    (%edi,%eax,1),%ebp
    mov    $0x1,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    mov    %ebp,0x100(%esp)
    test   %eax,%edx
    jne    jump_43e0a
    xor    %edx,%edx
    mov    $data_f4744,%eax
    mov    %cl,%dl
    call   func_42230
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    data_f64a0(,%edx,2),%dx
    xor    %ecx,%ecx
    and    $0xffff,%edx
    mov    data_f4782(%esi),%cx
    mov    %eax,%ebx
    mov    %ecx,%eax
    call   func_42460
    mov    %eax,%edx
    cmp    $0xffff,%eax
    jne    jump_43daf
    mov    $0x7b,%eax
    lea    0x64(%esp),%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_43d94:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_43dac
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_43d94
  jump_43dac:
    pop    %edi
    jmp    jump_43ddf
  jump_43daf:
    cmp    $0x1,%eax
    jne    jump_43dbb
    mov    $0x1c,%eax
    jmp    jump_43dc0
  jump_43dbb:
    mov    $0x1d,%eax
  jump_43dc0:
    call   func_1ce70
    push   %eax
    push   %edx
    mov    $0x7c,%eax
    call   func_1ce70
    push   %eax
    lea    0x70(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
  jump_43ddf:
    push   $0x82
    mov    0xf6(%esp),%eax
    push   $0xffffffff
    sar    $0x10,%eax
    push   %eax
    lea    0x70(%esp),%ecx
    mov    0x10c(%esp),%ebx
    push   $0x2
    xor    %edx,%edx
    mov    $data_fd3a2,%eax
    call   func_2af88
  jump_43e0a:
    xor    %eax,%eax
    mov    $0x8e,%esi
    mov    %eax,0xf8(%esp)
    jmp    jump_43e32
  jump_43e1a:
    mov    0xf8(%esp),%ecx
    inc    %ecx
    mov    %ecx,0xf8(%esp)
    cmp    $0x27,%ecx
    jge    jump_43fa9
  jump_43e32:
    imul   $0x28,0xf8(%esp),%eax
    xor    %edx,%edx
    mov    data_f3e45(%eax),%dl
    xor    %eax,%eax
    mov    0x138(%esp),%ax
    cmp    %eax,%edx
    jne    jump_43e1a
    cmp    $0x8e,%esi
    jne    jump_43e8b
    push   $0x82
    mov    0xf6(%esp),%eax
    push   $0xffffffff
    sar    $0x10,%eax
    push   %eax
    mov    %esi,%ebx
    push   $0x2
    mov    $0x7d,%eax
    xor    %edx,%edx
    call   func_1ce70
    mov    %eax,%ecx
    mov    $data_fd3a2,%eax
    call   func_2af88
    add    $0xa,%eax
    add    %eax,%esi
  jump_43e8b:
    imul   $0x28,0xf8(%esp),%eax
    add    $data_f3e40,%eax
    mov    0xf8(%esp),%dl
    add    $0xa,%eax
    cmp    $0x17,%dl
    jne    jump_43eb1
    mov    $0x7e,%eax
    call   func_1ce70
  jump_43eb1:
    push   $0x82
    mov    0xf6(%esp),%edx
    push   $0xffffffff
    sar    $0x10,%edx
    mov    %eax,%ecx
    push   %edx
    mov    %esi,%ebx
    mov    $data_fd3a2,%eax
    push   $0x2
    xor    %edx,%edx
    mov    $0x10000,%ebp
    call   func_2af88
    add    %eax,%esi
    mov    %ebp,0x10c(%esp)
    lea    0x1(%esi),%eax
    mov    0xf8(%esp),%bl
    mov    %eax,0xd0(%esp)
    lea    0x48(%esi),%eax
    mov    data_efd80,%dx
    mov    %eax,0xd8(%esp)
    mov    0xf8(%esp),%eax
    cmp    $0x17,%bl
    jne    jump_43f2e
    xor    %eax,%eax
    mov    $0x8000,%ebx
    mov    data_f458e,%al
    mov    %ebx,0x10c(%esp)
    mov    data_efd60(,%eax,2),%dx
    xor    %eax,%eax
  jump_43f2e:
    lea    0xec(%esp),%ebx
    movzwl %ax,%ebp
    xor    %edi,%edi
    mov    $data_11f10c,%eax
    mov    %dx,%di
    push   %ebx
    mov    %edi,%edx
    lea    0xec(%esp),%ecx
    call   func_1b084
    mov    %ebp,%ebx
    mov    %eax,%edx
    lea    0xcc(%esp),%eax
    call   func_2b320
    push   $0x0
    mov    0x110(%esp),%ecx
    push   %ecx
    push   %ecx
    push   $0x0
    push   $data_c8c44
    mov    0x100(%esp),%edx
    push   %edx
    mov    0x100(%esp),%ebx
    push   %ebx
    push   %ebp
    mov    $data_11f10c,%eax
    mov    %edi,%edx
    call   func_1b084
    push   %eax
    lea    0xec(%esp),%eax
    push   %eax
    add    $0x48,%esi
    call   func_589f1
    add    $0x28,%esp
    jmp    jump_43e1a
  jump_43fa9:
    xor    %ebp,%ebp
    mov    $data_f650c,%edi
    mov    %ebp,0xf8(%esp)
    jmp    jump_43fd4
  jump_43fb9:
    mov    0xf8(%esp),%ebp
    inc    %ebp
    add    $0x6a,%edi
    mov    %ebp,0xf8(%esp)
    cmp    $0x4c,%ebp
    jge    jump_440d4
  jump_43fd4:
    imul   $0x6a,0xf8(%esp),%edx
    mov    data_f6541(%edx),%dl
    xor    %eax,%eax
    and    $0xff,%edx
    mov    0x138(%esp),%ax
    cmp    %eax,%edx
    jne    jump_43fb9
    cmp    $0x8e,%esi
    jne    jump_44031
    push   $0x82
    mov    0xf6(%esp),%eax
    push   $0xffffffff
    sar    $0x10,%eax
    push   %eax
    mov    %esi,%ebx
    push   $0x2
    mov    $0x7d,%eax
    xor    %edx,%edx
    call   func_1ce70
    mov    %eax,%ecx
    mov    $data_fd3a2,%eax
    call   func_2af88
    add    $0xa,%eax
    add    %eax,%esi
  jump_44031:
    push   $0x82
    mov    0xf6(%esp),%eax
    push   $0xffffffff
    sar    $0x10,%eax
    push   %eax
    mov    %edi,%ecx
    mov    %esi,%ebx
    push   $0x2
    xor    %edx,%edx
    mov    $data_fd3a2,%eax
    call   func_2af88
    lea    0xe8(%esp),%ecx
    add    %eax,%esi
    xor    %edx,%edx
    lea    0x1(%esi),%eax
    mov    data_efd7c,%dx
    mov    %eax,0xd0(%esp)
    lea    0x48(%esi),%ebp
    mov    $data_11f10c,%eax
    mov    %ebp,0xd8(%esp)
    call   func_1b084
    mov    %eax,%esi
    lea    0xec(%esp),%eax
    mov    0xf8(%esp),%ebx
    push   %eax
    mov    %esi,%edx
    lea    0xcc(%esp),%eax
    call   func_2b320
    mov    0xec(%esp),%edx
    push   %edx
    mov    0xec(%esp),%ebx
    push   %ebx
    mov    0x100(%esp),%ecx
    push   %ecx
    push   %esi
    lea    0xd8(%esp),%eax
    push   %eax
    call   func_57efc
    mov    %ebp,%esi
    add    $0x14,%esp
    jmp    jump_43fb9
  jump_440d4:
    xor    %eax,%eax
    mov    0x138(%esp),%ax
    cmp    $0x13,%eax
    je     jump_440ec
    cmp    $0x1f,%eax
    jne    jump_44214
  jump_440ec:
    cmp    $0x8e,%esi
    jne    jump_44127
    push   $0x82
    mov    0xf6(%esp),%eax
    push   $0xffffffff
    sar    $0x10,%eax
    push   %eax
    mov    %esi,%ebx
    push   $0x2
    mov    $0x7d,%eax
    xor    %edx,%edx
    call   func_1ce70
    mov    %eax,%ecx
    mov    $data_fd3a2,%eax
    call   func_2af88
    add    $0xa,%eax
    add    %eax,%esi
  jump_44127:
    mov    $0x7f,%eax
    xor    %edx,%edx
    mov    $0x2,%edi
    mov    0x138(%esp),%dx
    call   func_1ce70
    cmp    $0x1f,%edx
    jne    jump_44154
    mov    $0x80,%eax
    mov    $0x3,%edi
    call   func_1ce70
  jump_44154:
    push   $0x82
    mov    0xf6(%esp),%edx
    push   $0xffffffff
    sar    $0x10,%edx
    push   %edx
    mov    %eax,%ecx
    mov    %esi,%ebx
    push   $0x2
    mov    $data_fd3a2,%eax
    xor    %edx,%edx
    call   func_2af88
    add    %eax,%esi
    lea    0x1(%esi),%eax
    mov    %eax,0xd0(%esp)
    xor    %eax,%eax
    mov    data_f458e,%al
    add    $0x48,%esi
    mov    data_efd60(,%eax,2),%dx
    lea    0xec(%esp),%eax
    mov    %esi,0xd8(%esp)
    push   %eax
    mov    $data_11f10c,%eax
    xor    %esi,%esi
    lea    0xec(%esp),%ecx
    mov    %dx,%si
    and    $0xffff,%edi
    mov    %esi,%edx
    mov    %edi,%ebx
    call   func_1b084
    mov    %eax,%edx
    lea    0xcc(%esp),%eax
    call   func_2b320
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_c8c44
    mov    0x100(%esp),%edx
    push   %edx
    mov    0x100(%esp),%ebx
    push   %ebx
    push   %edi
    mov    $data_11f10c,%eax
    mov    %esi,%edx
    call   func_1b084
    push   %eax
    lea    0xec(%esp),%eax
    push   %eax
    call   func_589f1
    add    $0x28,%esp
  jump_44214:
    xor    %ecx,%ecx
    mov    %ecx,data_f64bc
  jump_4421c:
    mov    data_f64b8,%esi
    cmp    $0xffffffff,%esi
    jne    jump_4433e
    mov    $0x7,%edi
    mov    $0x1dc,%eax
    mov    $0x25,%edx
    mov    $0x3,%ebx
    xor    %ecx,%ecx
    mov    %edi,0xb8(%esp)
    mov    %eax,0xc0(%esp)
    mov    %edx,0xc4(%esp)
    lea    0xb4(%esp),%edx
    mov    $data_fa35c,%eax
    mov    %edi,0xbc(%esp)
    call   func_50690
    lea    0xb4(%esp),%eax
    mov    data_f458e,%cl
    mov    %ebx,%edx
    call   func_4f228
    mov    data_f64ae,%ebx
    mov    $data_8252e,%eax
    cmp    %esi,%ebx
    jne    jump_4429b
    mov    $0x81,%eax
    call   func_1ce70
  jump_4429b:
    xor    %edx,%edx
    mov    data_f458e,%dl
    push   %eax
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    mov    $0x82,%eax
    call   func_1ce70
    push   %eax
    lea    0x70(%esp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_720c9
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0x10,%esp
    mov    data_92e18(,%eax,2),%al
    lea    0xb4(%esp),%esi
    xor    %ah,%ah
    push   $0x0
    shl    $0x2,%eax
    lea    0x68(%esp),%ecx
    add    $0x13,%eax
    push   $0xff
    cwtl
    mov    $data_fd3aa,%edi
    push   %eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    push   $0x3
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    xor    %ecx,%ecx
    mov    %ecx,data_f64b8
  jump_4433e:
    xor    %esi,%esi
    mov    %esi,data_f64c0
    add    $0x13c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44354:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    mov    %edx,%eax
    lea    0xab(%ecx),%edx
    cmp    $0xffffffff,%ebx
    jne    jump_44370
    mov    $0x98,%ebx
    call   func_1bf94
    pop    %ecx
    ret
  jump_44370:
    mov    $0x98,%ebx
    call   func_1c098
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_44380:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    call   func_2bf10
    mov    $data_85870,%ebx
    add    $0xab,%eax
    mov    $0x64,%edx
    call   func_1b4f0
    add    $0x98,%eax
    call   func_72754
    lea    -0x143(%eax),%edx
    mov    %edx,%eax
    movl   $data_85eb0,0xa7(%edx)
    call   func_424ec
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_443d0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    lea    0x6c(%eax),%ebx
    movl   $0x0,(%ebx)
    add    $0xc,%ebx
    movl   $0x0,-0x8(%ebx)
    movl   $0x0,-0x4(%ebx)
    movl   $0x0,(%ebx)
    add    $0x26,%ebx
    movl   $0x0,-0x22(%ebx)
    movl   $0x0,-0x1e(%ebx)
    movl   $0x0,(%ebx)
    sub    $0x9e,%ebx
    xor    %edx,%edx
    movl   $0x0,0xa2(%ebx)
    mov    %ebx,%eax
    movl   $0x0,0xa6(%ebx)
    call   func_4449c
    mov    %ebx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44498:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_4449c:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    call   func_446ec
    movsbl %dl,%edx
    mov    %ebx,%eax
    call   func_44984
    pop    %ebx
    ret

vtable_444b0:
    .long   func_44510
    .long   func_44518
    .long   func_44520
    .long   func_44528
    .long   func_44530


/*----------------------------------------------------------------*/
func_444c4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xec,%esp
    mov    $data_82538,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_446cf
    xor    %ecx,%ecx
    mov    $0xc8,%edi
  jump_444ed:
    mov    %esp,%eax
    mov    %esi,%ebx
    mov    %edi,%edx
    call   func_7370e
    cmpb   $0x23,(%esp)
    jne    jump_44503
    mov    $0xffffffff,%ecx
  jump_44503:
    test   %ecx,%ecx
    je     jump_444ed
    mov    $data_f650c,%edx
    xor    %ebp,%ebp
    jmp    jump_44543


/*----------------------------------------------------------------*/
func_44510:
/*----------------------------------------------------------------*/
    mov    0x3e(%edx),%eax
    mov    %eax,0x52(%edx)
    jmp    jump_44536


/*----------------------------------------------------------------*/
func_44518:
/*----------------------------------------------------------------*/
    mov    0x3e(%edx),%eax
    mov    %eax,0x56(%edx)
    jmp    jump_44536


/*----------------------------------------------------------------*/
func_44520:
/*----------------------------------------------------------------*/
    mov    0x3e(%edx),%eax
    mov    %eax,0x5e(%edx)
    jmp    jump_44536


/*----------------------------------------------------------------*/
func_44528:
/*----------------------------------------------------------------*/
    mov    0x3e(%edx),%eax
    mov    %eax,0x62(%edx)
    jmp    jump_44536


/*----------------------------------------------------------------*/
func_44530:
/*----------------------------------------------------------------*/
    mov    0x36(%edx),%eax
    mov    %eax,0x66(%edx)
  jump_44536:
    inc    %ebp
    add    $0x6a,%edx
    cmp    $0x4c,%ebp
    jge    jump_446bb
  jump_44543:
    push   %edx
    push   $data_82543
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    %edx,%edi
    xor    %ebx,%ebx
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    %ecx,%edi
    test   %ecx,%ecx
    jle    jump_44576
    mov    %edx,%eax
  jump_44568:
    cmpb   $0x5e,(%eax)
    jne    jump_44570
    movb   $0x20,(%eax)
  jump_44570:
    inc    %ebx
    inc    %eax
    cmp    %edi,%ebx
    jl     jump_44568
  jump_44576:
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    lea    0xe8(%esp),%eax
    push   %eax
    push   $data_82546
    push   %esi
    call   func_73431
    add    $0x2c,%esp
    mov    0xc8(%esp),%al
    mov    %al,0x32(%edx)
    mov    0xcc(%esp),%eax
    mov    %eax,0x36(%edx)
    mov    0xd0(%esp),%eax
    mov    %eax,0x3a(%edx)
    mov    0xd4(%esp),%eax
    mov    %eax,0x3e(%edx)
    mov    0xd8(%esp),%eax
    mov    %eax,0x42(%edx)
    mov    0xdc(%esp),%eax
    mov    %eax,0x46(%edx)
    mov    0xe0(%esp),%eax
    mov    %eax,0x4a(%edx)
    mov    0xe4(%esp),%eax
    mov    %eax,0x4e(%edx)
    mov    0xe8(%esp),%al
    mov    %al,0x35(%edx)
    lea    0xe8(%esp),%eax
    push   %eax
    push   $data_82561
    push   %esi
    call   func_73431
    add    $0xc,%esp
    movw   $0x0,0x33(%edx)
    cmpl   $0xff,0xe8(%esp)
    je     jump_4468a
  jump_4464f:
    mov    0xe8(%esp),%cl
    mov    $0x1,%eax
    mov    0x33(%edx),%bx
    shl    %cl,%eax
    or     %eax,%ebx
    lea    0xe8(%esp),%eax
    push   %eax
    push   $data_82564
    push   %esi
    mov    %bx,0x33(%edx)
    call   func_73431
    add    $0xc,%esp
    cmpl   $0xff,0xe8(%esp)
    jne    jump_4464f
  jump_4468a:
    movl   $0x0,0x66(%edx)
    mov    0x66(%edx),%eax
    mov    %eax,0x62(%edx)
    mov    %eax,0x5e(%edx)
    mov    %eax,0x5a(%edx)
    mov    %eax,0x56(%edx)
    mov    %eax,0x52(%edx)
    mov    0x32(%edx),%al
    cmp    $0x4,%al
    ja     jump_44536
    and    $0xff,%eax
    jmp    *%cs:vtable_444b0(,%eax,4)
  jump_446bb:
    mov    %esi,%eax
    call   func_7280e
    add    $0xec,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_446cf:
    mov    $0xbe,%ebx
    mov    $data_82567,%edx
    call   func_25888
    add    $0xec,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_446ec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x24,%esp
    mov    %eax,%ebp
    movl   $0x0,0x15e(%eax)
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,0x10(%eax)
    movl   $0x0,0x20(%eax)
    movl   $0x0,0x24(%eax)
    movl   $0x0,0x18(%eax)
    movl   $0x0,0x1c(%eax)
    movl   $0x0,0x30(%eax)
    movl   $0x0,0x28(%eax)
    movl   $0x0,0x2c(%eax)
    movb   $0x0,0x34(%eax)
    movw   $0xffff,0x56(%eax)
    movl   $0x0,0x90(%eax)
    movl   $0x1,0x8c(%eax)
    movb   $0x0,0x5d(%eax)
    movl   $0x0,0x5e(%eax)
    mov    0x90(%eax),%edx
    mov    %edx,0x88(%eax)
    mov    0x8c(%eax),%edx
    mov    %eax,%ebx
    mov    %edx,0x98(%eax)
    lea    0xaf(%eax),%edx
    xor    %ecx,%ecx
  jump_44798:
    add    $0x7,%ebx
    movb   $0xff,0xa4(%ebx)
    mov    %cx,0xa5(%ebx)
    mov    %ecx,0xa7(%ebx)
    cmp    %edx,%ebx
    jne    jump_44798
    cmpl   $0x0,data_f6508
    jne    jump_4497a
    mov    $data_f8484,%ebx
    mov    $0x83,%ecx
    lea    0x50(%ebx),%edx
  jump_447cd:
    mov    %ecx,%eax
    call   func_1ce70
    mov    %ebx,%edi
    mov    %eax,%esi
    push   %edi
  jump_447d9:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_447f1
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_447d9
  jump_447f1:
    pop    %edi
    add    $0x14,%ebx
    inc    %ecx
    cmp    %edx,%ebx
    jne    jump_447cd
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_444c4
    mov    %dx,data_f6504
    xor    %ebp,%ebp
    xor    %eax,%eax
    jmp    jump_44816
  jump_44810:
    inc    %ebp
    cmp    $0xe,%ebp
    jge    jump_44844
  jump_44816:
    mov    $0x1,%dl
    movzbl data_8685c(%ebp),%esi
    mov    %eax,%ebx
    test   %esi,%esi
    jle    jump_44810
    movzbl data_8686c(%ebp),%edi
  jump_4482c:
    xor    %ecx,%ecx
    mov    %dl,%cl
    test   %ecx,%edi
    je     jump_4483b
    incw   data_f6504
  jump_4483b:
    inc    %ebx
    add    %dl,%dl
    cmp    %esi,%ebx
    jge    jump_44810
    jmp    jump_4482c
  jump_44844:
    xor    %ebx,%ebx
    mov    %ebx,0x10(%esp)
    mov    %ebx,0xc(%esp)
  jump_4484e:
    mov    0xc(%esp),%ecx
    mov    data_86842(%ecx),%ecx
    sar    $0x10,%ecx
    lea    -0x1(%ecx),%edx
    filds  data_f6504
    mov    %edx,0x8(%esp)
    fstps  0x1c(%esp)
    fildl  0x8(%esp)
    fdivrs 0x1c(%esp)
    xor    %esi,%esi
    mov    %esi,0x4(%esp)
    fstps  0x1c(%esp)
    mov    0x1c(%esp),%edx
    mov    %esi,(%esp)
    mov    %edx,0x20(%esp)
  jump_44889:
    test   %ecx,%ecx
    jle    jump_448a2
    mov    0x4(%esp),%ebp
    mov    $0x1,%dl
    movzbl data_8685c(%ebp),%ebp
    xor    %esi,%esi
    test   %ebp,%ebp
    jle    jump_448c1
    jmp    jump_448da
  jump_448a2:
    mov    0xc(%esp),%ebx
    mov    0x10(%esp),%ecx
    add    $0x2,%ebx
    inc    %ecx
    mov    %ebx,0xc(%esp)
    mov    %ecx,0x10(%esp)
    cmp    $0x4,%ecx
    jge    jump_44970
    jmp    jump_4484e
  jump_448c1:
    mov    (%esp),%ebp
    mov    0x4(%esp),%eax
    add    $0x4,%ebp
    inc    %eax
    mov    %ebp,(%esp)
    mov    %eax,0x4(%esp)
    cmp    $0xe,%eax
    jl     jump_44889
    jmp    jump_448a2
  jump_448da:
    mov    (%esp),%ebx
    mov    0x4(%esp),%edi
    mov    %ebx,0x18(%esp)
    xor    %ebx,%ebx
    mov    data_8686c(%edi),%bl
    mov    %ebx,0x14(%esp)
  jump_448f1:
    xor    %ebx,%ebx
    mov    0x14(%esp),%eax
    mov    %dl,%bl
    test   %eax,%ebx
    je     jump_44963
    fld1
    mov    0x18(%esp),%ebx
    mov    0x10(%esp),%edi
    fadds  0x20(%esp)
    add    %edi,%ebx
    fsts   0x20(%esp)
    lea    -0x1(%ecx),%edi
    fcomps 0x1c(%esp)
    fnstsw %ax
    sahf
    jb     jump_4493b
    flds   0x20(%esp)
    mov    %edi,%ecx
    mov    data_f64cc(%ebx),%dh
    fsubs  0x1c(%esp)
    or     %dl,%dh
    fstps  0x20(%esp)
    mov    %dh,data_f64cc(%ebx)
    jmp    jump_44963
  jump_4493b:
    cmp    $0x1,%ecx
    jne    jump_44963
    flds   0x1c(%esp)
    fadds  data_82573
    fcomps 0x20(%esp)
    fnstsw %ax
    sahf
    jae    jump_44963
    mov    data_f64cc(%ebx),%ah
    or     %dl,%ah
    mov    %edi,%ecx
    mov    %ah,data_f64cc(%ebx)
  jump_44963:
    inc    %esi
    add    %dl,%dl
    cmp    %ebp,%esi
    jge    jump_448c1
    jmp    jump_448f1
  jump_44970:
    movl   $0xffffffff,data_f6508
  jump_4497a:
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44984:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %dl,0xaa(%eax)
    cmp    $0x4,%dl
    jl     jump_449a6
    mov    $0x130,%ebx
    mov    $data_82577,%edx
    xor    %eax,%eax
    call   func_25888
  jump_449a6:
    mov    0xa7(%ecx),%eax
    sar    $0x18,%eax
    mov    data_86842(,%eax,2),%eax
    sar    $0x10,%eax
    mov    %eax,0x15a(%ecx)
    mov    0x31(%ecx),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    je     jump_449db
    xor    %edx,%edx
    mov    0x54(%ecx),%eax
    mov    data_f458e,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    je     jump_44a14
  jump_449db:
    mov    0xa7(%ecx),%edx
    sar    $0x18,%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    $data_f8484,%esi
    shl    $0x2,%eax
    lea    0x34(%ecx),%edi
    add    %eax,%esi
    push   %edi
  jump_449fb:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_44a13
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_449fb
  jump_44a13:
    pop    %edi
  jump_44a14:
    mov    0xa7(%ecx),%eax
    sar    $0x18,%eax
    lea    0x1(%eax),%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    0x54(%ecx),%edx
    add    %eax,%eax
    sar    $0x10,%edx
    mov    %eax,0x8c(%ecx)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    movl   $0x0,0x14(%ecx)
    cmpb   $0x1,data_92fb3(,%eax,2)
    jne    jump_44a62
    mov    0x8c(%ecx),%edx
    add    %edx,%edx
    mov    %edx,0x8c(%ecx)
  jump_44a62:
    mov    0x8c(%ecx),%eax
    mov    %eax,0x98(%ecx)
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44ae8:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %dl,%cl
    cmp    0x15a(%eax),%ebx
    jg     jump_44b2f
    lea    0x0(,%ebx,8),%edx
    sub    %ebx,%edx
    add    %eax,%edx
    mov    0xab(%edx),%ch
    cmp    %ch,%cl
    je     jump_44b2f
    cmp    $0xff,%ch
    jne    jump_44b13
    incl   0x15e(%eax)
  jump_44b13:
    lea    0x0(,%ebx,8),%edx
    sub    %ebx,%edx
    mov    %cl,0xab(%edx,%eax,1)
    call   func_44f1c
    mov    $0xffffffff,%eax
    pop    %ecx
    ret
  jump_44b2f:
    xor    %eax,%eax
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_44b34:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,%ebx
    shl    $0x3,%edx
    sub    %ebx,%edx
    add    %eax,%edx
    cmpb   $0xff,0xab(%edx)
    je     jump_44b60
    decl   0x15e(%eax)
    movb   $0xff,0xab(%edx)
    call   func_44f1c
    mov    $0xffffffff,%eax
    pop    %ebx
    ret
  jump_44b60:
    xor    %eax,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44b64:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %dl,%cl
    mov    $0xffffffff,%edi
    mov    0x15a(%eax),%ebx
    xor    %edx,%edx
    test   %ebx,%ebx
    jg     jump_44b8e
    jmp    jump_44bad
  jump_44b80:
    inc    %edx
    mov    0x15a(%esi),%ebp
    add    $0x7,%eax
    cmp    %ebp,%edx
    jge    jump_44bad
  jump_44b8e:
    cmpb   $0xff,0xab(%eax)
    je     jump_44b80
    mov    0xa8(%eax),%ebx
    sar    $0x18,%ebx
    imul   $0x6a,%ebx,%ebx
    cmp    data_f653e(%ebx),%cl
    jne    jump_44b80
    mov    %edx,%edi
  jump_44bad:
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44bb8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    mov    %dl,%cl
    mov    $0xffffffff,%esi
    mov    0x15a(%ebx),%edx
    xor    %eax,%eax
    test   %edx,%edx
    jg     jump_44be3
    jmp    jump_44bef
  jump_44bd3:
    inc    %eax
    mov    0x15a(%ebx),%edi
    add    $0x7,%edx
    cmp    %edi,%eax
    jl     jump_44be5
    jmp    jump_44bef
  jump_44be3:
    mov    %ebx,%edx
  jump_44be5:
    cmp    0xab(%edx),%cl
    jne    jump_44bd3
    mov    %eax,%esi
  jump_44bef:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44bf8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %dl,(%esp)
    cmp    0xaa(%eax),%dl
    je     jump_44cbf
    mov    -0x3(%esp),%edx
    sar    $0x18,%edx
    mov    data_86842(,%edx,2),%edx
    mov    0x15e(%ecx),%ebx
    sar    $0x10,%edx
    xor    %eax,%eax
    cmp    %ebx,%edx
    jl     jump_44cc4
    mov    0x15a(%ecx),%ebp
    xor    %edi,%edi
    xor    %esi,%esi
    test   %ebp,%ebp
    jle    jump_44c71
    mov    %ecx,%ebp
  jump_44c42:
    mov    0xab(%ebp),%bl
    cmp    $0xff,%bl
    je     jump_44c63
    mov    %esi,%edx
    mov    %ecx,%eax
    call   func_44b34
    movsbl %bl,%edx
    mov    %ecx,%eax
    mov    %edi,%ebx
    call   func_44ae8
    inc    %edi
  jump_44c63:
    inc    %esi
    mov    0x15a(%ecx),%eax
    add    $0x7,%ebp
    cmp    %eax,%esi
    jl     jump_44c42
  jump_44c71:
    mov    -0x3(%esp),%edx
    mov    %ecx,%eax
    sar    $0x18,%edx
    call   func_44984
    mov    0xa7(%ecx),%eax
    sar    $0x18,%eax
    lea    0x0(,%eax,4),%edx
    add    %eax,%edx
    mov    $data_f8484,%esi
    shl    $0x2,%edx
    lea    0x34(%ecx),%edi
    add    %edx,%esi
    push   %edi
  jump_44c9f:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_44cb7
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_44c9f
  jump_44cb7:
    pop    %edi
    mov    %ecx,%eax
    call   func_44f1c
  jump_44cbf:
    mov    $0xffffffff,%eax
  jump_44cc4:
    add    $0x4,%esp
    pop    %ebp
  jump_44cc8:
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44cd0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %ebp
    sub    $0x2c,%esp
    mov    %eax,%esi
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    %ebx,%eax
    call   func_34c60
    test   %eax,%eax
    jne    jump_44dc5
    movb   $0x4,0x58(%esi)
    mov    %eax,0x18(%esp)
    mov    %eax,0x1c(%esp)
    mov    %eax,0x20(%esp)
    call   func_7369f
    mov    %eax,%edx
    mov    $0x3e8,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x24(%esp)
    fildl  0x24(%esp)
    fstps  0x18(%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x24(%esp)
    fildl  0x24(%esp)
    fstps  0x1c(%esp)
    call   func_7369f
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ecx
    sub    $0x1f4,%edx
    mov    %edx,0x24(%esp)
    lea    0x18(%esp),%eax
    fildl  0x24(%esp)
    fstps  0x20(%esp)
    push   $0x437a0000
    xor    %ebp,%ebp
    call   func_4e444
    mov    %esp,%eax
    mov    %ebp,0xc(%esp)
    mov    %ebp,0x10(%esp)
    mov    %ebp,0x14(%esp)
    mov    %eax,0x28(%esp)
    flds   (%ebx)
    fadds  0x18(%esp)
    fstps  0xc(%esp)
    flds   0x4(%ebx)
    fadds  0x1c(%esp)
    mov    0xc(%esp),%eax
    fstps  0x10(%esp)
    flds   0x8(%ebx)
    mov    %eax,(%esp)
    fadds  0x20(%esp)
    mov    0x10(%esp),%eax
    fstps  0x14(%esp)
    mov    %eax,0x4(%esp)
    mov    0x14(%esp),%eax
    mov    %esp,%edx
    mov    %eax,0x8(%esp)
    mov    %esi,%eax
    call   func_44ef8
    add    $0x2c,%esp
    pop    %ebp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_44dc5:
    mov    $0x43,%edx
    mov    %esi,%eax
    call   func_44bb8
    cmp    $0xffffffff,%eax
    je     jump_44dfc
    mov    %eax,%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %esi,%eax
    cmpw   $0x0,0xac(%eax)
    je     jump_44dfc
    mov    data_f8114,%edx
    add    %edx,0x88(%esi)
    decw   0xac(%eax)
  jump_44dfc:
    xor    %edx,%edx
    mov    0x54(%esi),%eax
    mov    data_f458e,%dl
    sar    $0x10,%eax
    cmp    %edx,%eax
    jne    jump_44e40
    cmpb   $0x3,0x5d(%esi)
    jne    jump_44e40
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    je     jump_44e35
    mov    $0x10,%edx
    mov    $data_fa35c,%eax
    mov    %esi,%ebx
    mov    0x5e(%esi),%ecx
    call   func_50eb0
  jump_44e35:
    movb   $0x0,0x5d(%esi)
    movl   $0x0,0x5e(%esi)
  jump_44e40:
    add    $0x2c,%esp
    pop    %ebp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44e48:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,%ebx
    mov    0x8(%eax),%edx
    add    0xc(%eax),%edx
    test   %edx,%edx
    jg     jump_44e71
    mov    0x54(%eax),%edx
    sar    $0x10,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmpb   $0x12,data_92fb3(,%eax,2)
    jne    jump_44e7e
  jump_44e71:
    testb  $0x2,0x23(%ebx)
    jne    jump_44e7e
    mov    $0xffffffff,%eax
    pop    %ebx
    ret
  jump_44e7e:
    xor    %eax,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44e84:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ebx
    mov    %edx,%ecx
    call   func_44e48
    test   %eax,%eax
    je     jump_44ef1
    cmpb   $0x3,0x58(%ebx)
    jne    jump_44eb8
    mov    0x59(%ebx),%esi
    mov    0xa(%esi),%esi
    sar    $0x10,%esi
    lea    0x0(,%esi,4),%eax
    sub    %esi,%eax
    mov    $data_93bc5,%esi
    shl    $0x5,%eax
    add    %eax,%esi
    jmp    jump_44ebb
  jump_44eb8:
    mov    0x59(%ebx),%esi
  jump_44ebb:
    mov    %ebx,%edx
    mov    %esi,%eax
    call   func_1d4f8
    movb   $0x5,0x58(%ebx)
    movl   $0x0,0x9e(%ebx)
    mov    %ecx,0x59(%ebx)
    cmp    (%ecx),%esi
    jne    jump_44ee7
    movl   $0x3f800000,0xa2(%ebx)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_44ee7:
    movl   $0x0,0xa2(%ebx)
  jump_44ef1:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44ef8:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    (%edx),%ebx
    mov    %ebx,0x9e(%eax)
    add    $0x9e,%eax
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
    call   func_4e830
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_44f1c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%edx
    movl   $0x0,(%eax)
    movl   $0x0,0x4(%eax)
    mov    0x14(%eax),%eax
    movl   $0x0,0x20(%edx)
    movl   $0x0,0x24(%edx)
    movl   $0x0,0x18(%edx)
    movl   $0x0,0x1c(%edx)
    xor    %ebx,%ebx
    movl   $0x0,0x28(%edx)
    xor    %esi,%esi
    movl   $0x0,0x2c(%edx)
    mov    %ebx,0x4(%esp)
    movl   $0x0,0x30(%edx)
    mov    %ebx,(%esp)
    mov    0x15a(%edx),%edi
    mov    %eax,0x10(%edx)
    test   %edi,%edi
    jle    jump_4501e
    mov    %edx,%ebx
  jump_44f86:
    cmpb   $0xff,0xab(%ebx)
    je     jump_44ff2
    mov    0xa8(%ebx),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    add    $data_f650c,%eax
    mov    (%edx),%edi
    mov    0x52(%eax),%ecx
    add    %ecx,%edi
    mov    %edi,(%edx)
    mov    0x4(%edx),%ebp
    mov    0x56(%eax),%ecx
    add    %ecx,%ebp
    mov    %ebp,0x4(%edx)
    mov    0x10(%edx),%edi
    mov    0x5e(%eax),%ecx
    add    %ecx,%edi
    mov    %edi,0x10(%edx)
    mov    0x20(%edx),%ebp
    mov    0x62(%eax),%ecx
    add    %ecx,%ebp
    mov    %ebp,0x20(%edx)
    mov    0x18(%edx),%edi
    mov    0x66(%eax),%ecx
    add    %ecx,%edi
    mov    %edi,0x18(%edx)
    cmpb   $0x2,0x32(%eax)
    jne    jump_44fe1
    mov    0x36(%eax),%eax
    add    %eax,0x1c(%edx)
  jump_44fe1:
    mov    0xab(%ebx),%al
    cmp    $0x47,%al
    jne    jump_45002
    movl   $0xffffffff,0x28(%edx)
  jump_44ff2:
    inc    %esi
    mov    0x15a(%edx),%ebp
    add    $0x7,%ebx
    cmp    %ebp,%esi
    jge    jump_4501e
    jmp    jump_44f86
  jump_45002:
    cmp    $0x2b,%al
    jne    jump_4500c
    incl   0x4(%esp)
    jmp    jump_44ff2
  jump_4500c:
    cmp    $0x2c,%al
    jne    jump_45015
    incl   (%esp)
    jmp    jump_44ff2
  jump_45015:
    cmp    $0x2a,%al
    jne    jump_44ff2
    incl   0x24(%edx)
    jmp    jump_44ff2
  jump_4501e:
    fildl  0x4(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fmull  data_82583
    call   func_72258
    fistpl 0x8(%edx)
    fildl  (%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fmull  data_8258b
    call   func_72258
    fistpl 0xc(%edx)
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_45064:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    cmpb   $0x1,0x58(%eax)
    je     jump_45087
    cmpb   $0x2,0x58(%esi)
    je     jump_45087
    mov    $0x25e,%ebx
    mov    $data_82593,%edx
    xor    %eax,%eax
    call   func_25878
  jump_45087:
    cmpl   $0x0,0x59(%esi)
    jne    jump_4509e
    mov    $0x25f,%ebx
    mov    $data_8259f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4509e:
    mov    0x59(%esi),%ecx
    mov    0x54(%esi),%edx
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    0x57(%ecx),%al
    cmp    %eax,%edx
    je     jump_450c1
    mov    $0x263,%ebx
    mov    $data_825ab,%edx
    xor    %eax,%eax
    call   func_25878
  jump_450c1:
    cmpb   $0x1,0x58(%esi)
    jne    jump_450f4
    mov    data_92e10,%eax
    mov    %eax,0x52(%esi)
    xor    %eax,%eax
    mov    0x54(%esi),%edx
    mov    data_f458e,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    jne    jump_45123
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x11,%eax
    je     jump_45123
    mov    $0x11,%edx
    jmp    jump_45117
  jump_450f4:
    xor    %eax,%eax
    mov    0x54(%esi),%edx
    mov    data_f458e,%al
    sar    $0x10,%edx
    cmp    %eax,%edx
    jne    jump_45123
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x11,%eax
    je     jump_45123
    mov    $0x12,%edx
  jump_45117:
    mov    $data_fa35c,%eax
    mov    %esi,%ebx
    call   func_50eb0
  jump_45123:
    mov    0x59(%esi),%eax
    movb   $0x3,0x58(%esi)
    mov    0xc(%eax),%ax
    movswl %ax,%ecx
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    mov    %esi,%edx
    shl    $0x5,%eax
    xor    %ebx,%ebx
    add    $data_93bc5,%eax
    call   func_1d3a8
    mov    0xa7(%esi),%edx
    mov    %esi,%eax
    sar    $0x18,%edx
    call   func_44984
    mov    %esi,%eax
    call   func_45b9c
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_45168:
    .long   func_451b7
    .long   func_451b7
    .long   func_4523d
    .long   func_4525e
    .long   func_45268


/*----------------------------------------------------------------*/
func_4517c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    cmpb   $0x0,0x58(%eax)
    jne    jump_4519d
    mov    $0x286,%ebx
    mov    $data_825b7,%edx
    xor    %eax,%eax
    call   func_25888
  jump_4519d:
    mov    0x58(%ecx),%al
    dec    %al
    cmp    $0x4,%al
    ja     func_45268
    and    $0xff,%eax
    jmp    *%cs:vtable_45168(,%eax,4)


/*----------------------------------------------------------------*/
func_451b7:
/*----------------------------------------------------------------*/
    mov    0x59(%ecx),%esi
    mov    0x52(%esi),%ax
    cmp    0x1a(%esi),%ax
    jb     jump_451d5
    mov    $0x295,%ebx
    mov    $data_825c3,%edx
    xor    %eax,%eax
    call   func_25878
  jump_451d5:
    xor    %edx,%edx
    mov    %esi,%eax
    mov    0x52(%esi),%dx
    call   func_34b1c
    cmp    %ecx,%eax
    je     jump_451f7
    mov    $0x297,%ebx
    mov    $data_825cf,%edx
    xor    %eax,%eax
    call   func_25878
  jump_451f7:
    mov    0xa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x5,%eax
    movb   $0x4,0x58(%ecx)
    add    $data_93bc5,%eax
    mov    %ecx,%edx
    mov    %eax,0x59(%ecx)
    call   func_1d4f8
    xor    %eax,%eax
    mov    0x52(%esi),%ax
    movb   $0xff,0x54(%esi)
    cmp    $0xffff,%eax
    je     func_45268
    mov    0x10(%esi),%edx
    movb   $0xff,0x1(%edx,%eax,4)
    movw   $0xffff,0x52(%esi)
    jmp    func_45268


/*----------------------------------------------------------------*/
func_4523d:
/*----------------------------------------------------------------*/
    mov    %ecx,%edx
    mov    0x59(%ecx),%eax
    call   func_34ce4
    cmpb   $0x4,0x58(%ecx)
    je     func_4525e
    mov    $0x2ad,%ebx
    mov    $data_825db,%edx
    xor    %eax,%eax
    call   func_25878


/*----------------------------------------------------------------*/
func_4525e:
/*----------------------------------------------------------------*/
    mov    %ecx,%edx
    mov    0x59(%ecx),%eax
    call   func_1d4f8


/*----------------------------------------------------------------*/
func_45268:
/*----------------------------------------------------------------*/
    mov    $data_92e10,%eax
    mov    %ecx,%edx
    call   func_1fe04
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4527c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%edi
    lea    0xab(%eax),%ebx
    xor    %esi,%esi
    jmp    jump_45292
  jump_4528e:
    inc    %esi
    add    $0x7,%ebx
  jump_45292:
    movswl %si,%eax
    cmp    0x15a(%ecx),%eax
    jge    jump_44cc8
    mov    (%ebx),%ah
    cmp    $0xff,%ah
    je     jump_4528e
    movsbl %ah,%eax
    imul   $0x6a,%eax,%eax
    cmpb   $0x1,data_f653e(%eax)
    jne    jump_4528e
    cmp    0x3(%ebx),%edi
    je     jump_4528e
    mov    %ebx,%edx
    mov    %ecx,%eax
    call   func_452c8
    jmp    jump_4528e


/*----------------------------------------------------------------*/
func_452c8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%esi
    cmpb   $0xff,(%edx)
    jne    jump_452e6
    mov    $0x2d0,%ebx
    mov    $data_825e7,%edx
    xor    %eax,%eax
    call   func_25878
  jump_452e6:
    movsbl (%esi),%eax
    imul   $0x6a,%eax,%eax
    add    $data_f650c,%eax
    mov    0x33(%eax),%dx
    xor    %dh,%dh
    and    $0x20,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_45372
    cmpl   $0xffffffff,0x3(%esi)
    jne    jump_45345
    mov    0x36(%eax),%edx
    add    %edx,0x88(%ecx)
    cmpb   $0x1,0x32(%eax)
    jne    jump_45339
    mov    0x56(%eax),%eax
    mov    0x90(%ecx),%edi
    sub    %eax,%edi
    mov    %edi,0x90(%ecx)
    test   %edi,%edi
    jge    jump_45339
    movl   $0x0,0x90(%ecx)
  jump_45339:
    movl   $0x0,0x3(%esi)
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_45345:
    mov    0x88(%ecx),%edx
    mov    0x36(%eax),%ebx
    cmp    %ebx,%edx
    jl     jump_45372
    mov    %edx,%edi
    sub    %ebx,%edi
    mov    %edi,0x88(%ecx)
    cmpb   $0x1,0x32(%eax)
    jne    jump_4536b
    mov    0x56(%eax),%eax
    add    %eax,0x90(%ecx)
  jump_4536b:
    movl   $0xffffffff,0x3(%esi)
  jump_45372:
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_45378:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    0x62(%ebx),%cl
    xor    %eax,%eax
    test   %cl,%cl
    jne    jump_4538e
    mov    %ebx,%eax
    call   func_453a4
    jmp    jump_4539a
  jump_4538e:
    cmp    $0x1,%cl
    jne    jump_4539a
    mov    %ebx,%eax
    call   func_457b0
  jump_4539a:
    mov    %eax,0x84(%ebx)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_453a4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xac,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    cmpb   $0x4,0x58(%eax)
    je     jump_453d0
    cmpb   $0x4,0x58(%ecx)
    je     jump_453d0
    mov    $0x309,%ebx
    mov    $data_825f3,%edx
    xor    %eax,%eax
    call   func_25878
  jump_453d0:
    xor    %edx,%edx
    mov    %edx,0x24(%esp)
    mov    %edx,0x28(%esp)
    mov    %edx,0x2c(%esp)
    mov    0x67(%ecx),%dh
    mov    $0x1,%ebx
    cmp    $0x3,%dh
    jne    jump_45404
    lea    0x6c(%ecx),%edx
    mov    (%edx),%eax
    mov    %eax,0x24(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x28(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x2c(%esp)
    jmp    jump_45468
  jump_45404:
    cmp    $0x1,%dh
    jne    jump_45422
    mov    0x68(%ecx),%edx
    mov    (%edx),%eax
    mov    %eax,0x24(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x28(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x2c(%esp)
    jmp    jump_45468
  jump_45422:
    cmp    $0x2,%dh
    jne    jump_45466
    mov    0x68(%ecx),%edx
    mov    0x14(%edx),%eax
    mov    %eax,0x24(%esp)
    mov    0x18(%edx),%eax
    mov    %eax,0x28(%esp)
    mov    0x1c(%edx),%eax
    add    $0x14,%edx
    mov    %eax,0x2c(%esp)
    mov    0x68(%ecx),%edx
    mov    0x59(%ecx),%eax
    cmp    (%edx),%eax
    jne    jump_45468
    mov    0x8(%edx),%eax
    mov    %eax,0x24(%esp)
    mov    0xc(%edx),%eax
    mov    %eax,0x28(%esp)
    mov    0x10(%edx),%eax
    add    $0x8,%edx
    mov    %eax,0x2c(%esp)
    jmp    jump_45468
  jump_45466:
    xor    %ebx,%ebx
  jump_45468:
    test   $0x1,%bl
    je     jump_45792
    lea    0x3c(%esp),%edx
    lea    0x9e(%ecx),%eax
    xor    %ebp,%ebp
    mov    %edx,0x90(%esp)
    mov    %ebp,0xc(%esp)
    mov    %ebp,0x10(%esp)
    mov    %ebp,0x14(%esp)
    flds   0x24(%esp)
    fsubs  (%eax)
    fstps  0xc(%esp)
    flds   0x28(%esp)
    fsubs  0x4(%eax)
    fstps  0x10(%esp)
    flds   0x2c(%esp)
    fsubs  0x8(%eax)
    fstps  0x14(%esp)
    mov    0xc(%esp),%eax
    flds   0x10(%esp)
    fmul   %st(0),%st
    mov    %eax,0x3c(%esp)
    mov    0x10(%esp),%eax
    flds   0xc(%esp)
    fmul   %st(0),%st
    mov    %eax,0x40(%esp)
    faddp  %st,%st(1)
    mov    0x14(%esp),%eax
    flds   0x14(%esp)
    fmul   %st(0),%st
    mov    %eax,0x44(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fmuls  data_825ff
    fstps  0xa8(%esp)
    fildl  0x94(%ecx)
    mov    0xa8(%esp),%eax
    fstps  0xa0(%esp)
    flds   0xa8(%esp)
    mov    %eax,0x9c(%esp)
    fcomps 0xa0(%esp)
    fnstsw %ax
    sahf
    jbe    jump_45532
    mov    0xa0(%esp),%eax
    mov    %eax,0xa8(%esp)
  jump_45532:
    fildl  0x1c(%ecx)
    fld1
    fadds  0xa8(%esp)
    fmulp  %st,%st(1)
    fildl  0x10(%ecx)
    fdivrp %st,%st(1)
    call   func_72258
    fistpl 0xa4(%esp)
    cmpl   $0x1,0xa4(%esp)
    jge    jump_45566
    movl   $0x1,0xa4(%esp)
  jump_45566:
    mov    0xa4(%esp),%eax
    mov    0x88(%ecx),%edx
    cmp    %edx,%eax
    jle    jump_4559b
    fildl  0x88(%ecx)
    fmuls  0xa8(%esp)
    fildl  0xa4(%esp)
    fdivrp %st,%st(1)
    mov    %edx,0xa4(%esp)
    fstps  0xa8(%esp)
  jump_4559b:
    flds   0xa8(%esp)
    fcomps 0x9c(%esp)
    fnstsw %ax
    sahf
    jne    jump_455b1
    or     $0x8,%bl
  jump_455b1:
    lea    0x3c(%esp),%eax
    call   func_4e3f0
    flds   0x3c(%esp)
    mov    %esp,%eax
    flds   0xa8(%esp)
    fxch   %st(1)
    fmul   %st(1),%st
    mov    %eax,0x84(%esp)
    fstps  0x6c(%esp)
    flds   0x40(%esp)
    mov    0x6c(%esp),%eax
    fmul   %st(1),%st
    mov    %eax,(%esp)
    fstps  0x70(%esp)
    flds   0x44(%esp)
    mov    0x70(%esp),%eax
    fmulp  %st,%st(1)
    mov    %eax,0x4(%esp)
    fstps  0x74(%esp)
    flds   0x6c(%esp)
    mov    0x74(%esp),%eax
    flds   data_82603
    fxch   %st(1)
    fmul   %st(1),%st
    mov    %eax,0x8(%esp)
    fstps  0x60(%esp)
    lea    0x18(%esp),%eax
    flds   0x70(%esp)
    fmul   %st(1),%st
    mov    %eax,0x88(%esp)
    mov    0x60(%esp),%eax
    fstps  0x64(%esp)
    fmuls  0x74(%esp)
    mov    %eax,0x18(%esp)
    mov    0x64(%esp),%eax
    fstps  0x68(%esp)
    flds   0x60(%esp)
    mov    %eax,0x1c(%esp)
    mov    0x68(%esp),%eax
    flds   data_82607
    fxch   %st(1)
    fmul   %st(1),%st
    mov    %eax,0x20(%esp)
    fstps  0x30(%esp)
    flds   0x64(%esp)
    lea    0x48(%esp),%eax
    fmul   %st(1),%st
    mov    %eax,0x8c(%esp)
    fstps  0x34(%esp)
    flds   0x68(%esp)
    mov    0x30(%esp),%eax
    fmulp  %st,%st(1)
    mov    %eax,0x48(%esp)
    mov    0x34(%esp),%eax
    fstps  0x38(%esp)
    mov    %eax,0x4c(%esp)
    mov    0x38(%esp),%eax
    lea    0x9e(%ecx),%esi
    mov    %eax,0x50(%esp)
    mov    0x30(%esp),%eax
    xor    %ebp,%ebp
    mov    %eax,0x3c(%esp)
    mov    0x34(%esp),%eax
    mov    %ebp,0x54(%esp)
    mov    %eax,0x40(%esp)
    mov    0x38(%esp),%eax
    mov    %ebp,0x58(%esp)
    mov    %eax,0x44(%esp)
    lea    0x78(%esp),%eax
    mov    %ebp,0x5c(%esp)
    mov    %eax,0x94(%esp)
    flds   (%esi)
    fadds  0x30(%esp)
    fstps  0x54(%esp)
    flds   0x4(%esi)
    fadds  0x34(%esp)
    mov    0x54(%esp),%eax
    fstps  0x58(%esp)
    flds   0x8(%esi)
    mov    %eax,0x78(%esp)
    fadds  0x38(%esp)
    mov    0x58(%esp),%eax
    fstps  0x5c(%esp)
    mov    %eax,0x7c(%esp)
    mov    0x5c(%esp),%eax
    lea    0x78(%ecx),%edx
    mov    %eax,0x80(%esp)
    mov    0x54(%esp),%eax
    mov    %eax,(%edx)
    mov    0x7c(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x80(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    %edx,%eax
    call   func_4e830
    cmp    $0x1,%edi
    jne    jump_45792
    flds   (%edx)
    mov    0xa4(%esp),%eax
    fstps  (%esi)
    mov    0x4(%edx),%edi
    mov    %edi,0x4(%esi)
    mov    0x8(%edx),%edi
    mov    %edi,0x8(%esi)
    fildl  0x94(%ecx)
    mov    0x88(%ecx),%esi
    fld    %st(0)
    sub    %eax,%esi
    fsubs  0xa8(%esp)
    mov    %esi,0x88(%ecx)
    fstp   %st(1)
    call   func_72258
    fistpl 0x94(%ecx)
    test   $0x8,%bl
    je     jump_45792
    mov    0x67(%ecx),%dl
    cmp    $0x1,%dl
    jne    jump_45783
    mov    %ecx,%eax
    mov    0x68(%ecx),%edx
    call   func_44cd0
    jmp    jump_45792
  jump_45783:
    cmp    $0x2,%dl
    jne    jump_45792
    mov    %ecx,%eax
    mov    0x68(%ecx),%edx
    call   func_44e84
  jump_45792:
    mov    %ebx,%eax
    add    $0xac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_457b0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    0x63(%eax),%ecx
    movsbl (%ecx),%edi
    imul   $0x6a,%edi,%edi
    mov    $0xffffffff,%esi
    mov    data_f654e(%edi),%ebp
    xor    %ebx,%ebx
    test   %ebp,%ebp
    je     jump_457e4
    movswl 0x1(%ecx),%edi
    test   %edi,%edi
    jne    jump_457db
    xor    %esi,%esi
    jmp    jump_457e4
  jump_457db:
    cmp    $0x1,%edx
    jne    jump_457e4
    decw   0x1(%ecx)
  jump_457e4:
    cmp    $0xffffffff,%esi
    jne    jump_4581b
    mov    0x67(%eax),%cl
    test   %cl,%cl
    jne    jump_457f7
    call   func_46d34
    jmp    jump_45819
  jump_457f7:
    cmp    $0x2,%cl
    jne    jump_45803
    call   func_47ea0
    jmp    jump_45819
  jump_45803:
    cmp    $0x1,%cl
    jne    jump_4580f
    call   func_47be4
    jmp    jump_45819
  jump_4580f:
    cmp    $0x5,%cl
    jne    jump_4581b
    call   func_481e0
  jump_45819:
    mov    %eax,%ebx
  jump_4581b:
    mov    %ebx,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_45824:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    xor    %ebx,%ebx
    xor    %eax,%eax
    jmp    jump_45831
  jump_45830:
    inc    %eax
  jump_45831:
    xor    %edx,%edx
    mov    0x15a(%esi),%ecx
    mov    %ax,%dx
    cmp    %ecx,%edx
    jge    jump_45862
    imul   $0x7,%edx,%edx
    add    %esi,%edx
    cmpb   $0xff,0xab(%edx)
    je     jump_45830
    mov    0xa8(%edx),%edx
    sar    $0x18,%edx
    imul   $0x6a,%edx,%edx
    add    data_f6552(%edx),%ebx
    jmp    jump_45830
  jump_45862:
    mov    %ebx,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4586c:
/*----------------------------------------------------------------*/
    push   %edx
    push   %esi
    push   %edi
    sub    $0x10,%esp
    mov    %esp,%edi
    mov    $data_8687c,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0xa7(%eax),%edx
    sar    $0x18,%edx
    mov    (%esp,%edx,4),%edx
    call   func_45824
    add    %edx,%eax
    add    $0x10,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_45898:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %dl,(%esp)
    mov    %ebx,%edi
    movswl %bx,%edx
    test   %edx,%edx
    jl     jump_458b4
    cmp    data_93b98,%bx
    jl     jump_458c5
  jump_458b4:
    mov    $0x3a1,%ebx
    mov    $data_8260b,%edx
    xor    %eax,%eax
    call   func_25878
  jump_458c5:
    mov    $0xff,%ah
    xor    %ebx,%ebx
    mov    %ah,0x4(%esp)
    xor    %eax,%eax
    jmp    jump_458d8
  jump_458d1:
    inc    %eax
    cmp    $0x4c,%ax
    jge    jump_45923
  jump_458d8:
    movswl %ax,%edx
    imul   $0x6a,%edx,%edx
    mov    data_f653e(%edx),%cl
    cmp    (%esp),%cl
    jne    jump_458d1
    xor    %ecx,%ecx
    mov    data_f6541(%edx),%cl
    imul   $0x4b,%ecx,%ecx
    mov    $0x1,%ebp
    mov    data_f478b(%ecx),%esi
    movswl %di,%ecx
    sar    $0x18,%esi
    shl    %cl,%ebp
    test   %ebp,%esi
    je     jump_458d1
    movswl %bx,%ecx
    cmp    data_f654a(%edx),%ecx
    jg     jump_458d1
    mov    %al,0x4(%esp)
    mov    data_f654a(%edx),%bx
    jmp    jump_458d1
  jump_45923:
    mov    0x4(%esp),%al
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_45930:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %dl,(%esp)
    mov    data_93b98,%dx
    cmp    0x56(%eax),%dx
    jle    jump_45951
    mov    0x54(%ecx),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jge    jump_45962
  jump_45951:
    mov    $0x3b8,%ebx
    mov    $data_82617,%edx
    xor    %eax,%eax
    call   func_25878
  jump_45962:
    mov    -0x3(%esp),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    xor    %edx,%edx
    mov    data_f6541(%eax),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %eax,%edx
    shl    $0x4,%eax
    mov    0x54(%ecx),%ecx
    sub    %edx,%eax
    sar    $0x10,%ecx
    mov    data_f478b(%eax),%eax
    mov    $0x1,%edx
    sar    $0x18,%eax
    shl    %cl,%edx
    test   %edx,%eax
    sete   %al
    and    $0xff,%eax
    dec    %eax
    add    $0x4,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_459ac:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    cmpl   $0x0,0x88(%eax)
    jne    jump_459db
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_459c0:
    movb   $0x2,0x67(%eax)
    mov    %ebx,0x68(%eax)
    jmp    jump_45a11
  jump_459c9:
    movb   $0x1,0x67(%eax)
    mov    %ebx,0x68(%eax)
    jmp    jump_45a11
  jump_459d2:
    movb   $0x0,0x67(%eax)
    mov    %ebx,0x68(%eax)
    jmp    jump_45a11
  jump_459db:
    lea    0xab(%eax),%ecx
    movb   $0x1,0x62(%eax)
    xor    %edi,%edi
    cmp    $0x1,%dx
    jb     jump_459fb
    cmp    $0x2,%dx
    jbe    jump_459c9
    cmp    $0x3,%dx
    je     jump_459d2
    jmp    jump_45a00
  jump_459fb:
    test   %dx,%dx
    je     jump_459c0
  jump_45a00:
    mov    $0x3e5,%ebx
    mov    $data_82623,%edx
    xor    %eax,%eax
    call   func_25878
  jump_45a11:
    xor    %ebx,%ebx
    jmp    jump_45a19
  jump_45a15:
    inc    %ebx
    add    $0x7,%ecx
  jump_45a19:
    movswl %bx,%eax
    cmp    0x15a(%esi),%eax
    jge    jump_45a4c
    mov    (%ecx),%ah
    cmp    $0xff,%ah
    je     jump_45a15
    movsbl %ah,%eax
    imul   $0x6a,%eax,%eax
    cmpb   $0x0,data_f653e(%eax)
    jne    jump_45a15
    mov    %esi,%eax
    xor    %edx,%edx
    mov    %ecx,0x63(%esi)
    call   func_45378
    test   $0x1,%al
    je     jump_45a15
    mov    %ecx,%edi
  jump_45a4c:
    mov    %edi,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_45a54:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    push   %esi
    mov    %eax,%esi
    xor    %eax,%eax
    jmp    jump_45a5e
  jump_45a5d:
    inc    %eax
  jump_45a5e:
    movswl %ax,%edx
    cmp    0x15a(%esi),%edx
    jge    jump_45aa0
    imul   $0x7,%edx,%edx
    add    %esi,%edx
    mov    0xa8(%edx),%ebx
    sar    $0x18,%ebx
    imul   $0x6a,%ebx,%ebx
    cmpb   $0x0,data_f653e(%ebx)
    jne    jump_45a5d
    cmpl   $0x0,data_f654e(%ebx)
    je     jump_45a99
    mov    0xaa(%edx),%edx
    sar    $0x10,%edx
    test   %edx,%edx
    je     jump_45a5d
  jump_45a99:
    mov    $0xffffffff,%edx
    jmp    jump_45aa2
  jump_45aa0:
    xor    %edx,%edx
  jump_45aa2:
    mov    %edx,%eax
    pop    %esi
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_45aa8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    0x9c(%eax),%dx
    xor    %dh,%dh
    and    $0x1,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_45acd
    movl   $0x0,0x94(%eax)
    jmp    jump_45af6
  jump_45acd:
    mov    0x9c(%eax),%dx
    xor    %dh,%dh
    and    $0x2,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_45aed
    mov    data_f7f6c,%ebx
    mov    0x10(%eax),%edx
    add    %ebx,%edx
    jmp    jump_45af0
  jump_45aed:
    mov    0x10(%eax),%edx
  jump_45af0:
    mov    %edx,0x94(%eax)
  jump_45af6:
    movl   $0x0,0x90(%eax)
    lea    0xab(%eax),%ebx
    mov    0x15a(%eax),%ecx
    xor    %esi,%esi
    test   %ecx,%ecx
    jle    jump_45b77
    jmp    jump_45b26
  jump_45b18:
    inc    %esi
    mov    0x15a(%eax),%edi
    add    $0x7,%ebx
    cmp    %edi,%esi
    jge    jump_45b77
  jump_45b26:
    mov    (%ebx),%dl
    cmp    $0xff,%dl
    je     jump_45b18
    movsbl %dl,%edx
    imul   $0x6a,%edx,%edx
    add    $data_f650c,%edx
    mov    0x33(%edx),%cx
    xor    %ch,%ch
    and    $0x20,%cl
    movswl %cx,%ecx
    test   %ecx,%ecx
    je     jump_45b18
    cmpl   $0xffffffff,0x3(%ebx)
    jne    jump_45b18
    mov    0x88(%eax),%ecx
    mov    0x36(%edx),%edi
    cmp    %edi,%ecx
    jl     jump_45b18
    mov    %ecx,%ebp
    sub    %edi,%ebp
    mov    %ebp,0x88(%eax)
    cmpb   $0x1,0x32(%edx)
    jne    jump_45b18
    mov    0x56(%edx),%edx
    add    %edx,0x90(%eax)
    jmp    jump_45b18
  jump_45b77:
    mov    0x9c(%eax),%dx
    xor    %dh,%dh
    and    $0x8,%dl
    movswl %dx,%edx
    test   %edx,%edx
    je     jump_45b94
    movl   $0x0,0x90(%eax)
  jump_45b94:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_45b9c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x28,%esp
    mov    %eax,%esi
    movw   $0x0,0x9c(%eax)
    call   func_45dec
    xor    %edx,%edx
    mov    0x15a(%esi),%ebx
    mov    %eax,0x88(%esi)
    lea    0xab(%esi),%eax
    test   %ebx,%ebx
    jle    jump_45bf6
    jmp    jump_45bdc
  jump_45bce:
    inc    %edx
    mov    0x15a(%esi),%ecx
    add    $0x7,%eax
    cmp    %ecx,%edx
    jge    jump_45bf6
  jump_45bdc:
    mov    (%eax),%ch
    cmp    $0xff,%ch
    je     jump_45bce
    movsbl %ch,%ebx
    imul   $0x6a,%ebx,%ebx
    mov    data_f654e(%ebx),%bx
    mov    %bx,0x1(%eax)
    jmp    jump_45bce
  jump_45bf6:
    cmpb   $0x5,0x58(%esi)
    jne    jump_45da9
    mov    0x59(%esi),%edx
    lea    0xc(%esp),%ecx
    xor    %edi,%edi
    mov    0x4(%edx),%eax
    mov    (%edx),%ebx
    mov    %ecx,0x18(%esp)
    mov    %edi,(%esp)
    mov    %edi,0x4(%esp)
    mov    %edi,0x8(%esp)
    flds   0x8(%ebx)
    fsubs  0x8(%eax)
    fstps  (%esp)
    flds   0xc(%ebx)
    fsubs  0xc(%eax)
    fstps  0x4(%esp)
    flds   0x10(%ebx)
    fsubs  0x10(%eax)
    add    $0x8,%eax
    fstps  0x8(%esp)
    mov    (%esp),%eax
    flds   0x4(%esp)
    fmul   %st(0),%st
    mov    %eax,0xc(%esp)
    mov    0x4(%esp),%eax
    flds   (%esp)
    fmul   %st(0),%st
    mov    %eax,0x10(%esp)
    faddp  %st,%st(1)
    mov    0x8(%esp),%eax
    flds   0x8(%esp)
    fmul   %st(0),%st
    mov    %eax,0x14(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    0x8(%esi),%eax
    mov    0xc(%esi),%edi
    add    $0x8,%ebx
    add    %edi,%eax
    fstps  0x20(%esp)
    mov    %eax,0x1c(%esp)
    mov    0x23(%edx),%bl
    fildl  0x1c(%esp)
    fstps  0x24(%esp)
    test   $0x1,%bl
    je     jump_45ca5
    flds   0x24(%esp)
    fmuls  data_8263b
    fstps  0x24(%esp)
  jump_45ca5:
    mov    0x54(%esi),%edx
    sar    $0x10,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmpb   $0x12,data_92fb3(,%eax,2)
    jne    jump_45ce2
    fld1
    fcomps 0x24(%esp)
    fnstsw %ax
    sahf
    jbe    jump_45cd4
    movl   $0x3f800000,0x24(%esp)
  jump_45cd4:
    flds   0x24(%esp)
    fmuls  data_8263f
    fstps  0x24(%esp)
  jump_45ce2:
    flds   0x9e(%esi)
    fadds  0x24(%esp)
    fsts   0x9e(%esi)
    fcomps 0x20(%esp)
    fnstsw %ax
    sahf
    jbe    jump_45d05
    mov    0x20(%esp),%eax
    mov    %eax,0x9e(%esi)
  jump_45d05:
    flds   0x9e(%esi)
    fcomps 0x20(%esp)
    fnstsw %ax
    sahf
    jne    jump_45da9
    testl  $0x7fffffff,0xa2(%esi)
    jne    jump_45d2b
    mov    0x59(%esi),%edi
    mov    (%edi),%edi
    jmp    jump_45d31
  jump_45d2b:
    mov    0x59(%esi),%edi
    mov    0x4(%edi),%edi
  jump_45d31:
    xor    %ebx,%ebx
    mov    data_f458e,%bl
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    mov    0x54(%esi),%ecx
    add    %eax,%eax
    sar    $0x10,%ecx
    add    $data_92e16,%eax
    cmp    %ebx,%ecx
    jne    jump_45d61
    mov    %esi,%ebx
    mov    %edi,%edx
    call   func_41298
    jmp    jump_45d87
  jump_45d61:
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x15(%edi),%bl
    mov    0x14(%edi),%dl
    mov    data_f458e,%cl
    or     %edx,%ebx
    mov    $0x1,%edx
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_45d87
    mov    %esi,%ebx
    mov    %edi,%edx
    call   func_41594
  jump_45d87:
    mov    %esi,%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_1d3a8
    cmpb   $0x4,0x58(%esi)
    je     jump_45da9
    mov    $0x48b,%ebx
    mov    $data_8262f,%edx
    xor    %eax,%eax
    call   func_25878
  jump_45da9:
    mov    %esi,%eax
    call   func_45aa8
    add    $0x28,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_45dbc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    data_92e10,%edx
    sub    0x52(%eax),%edx
    mov    $0x64,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    test   %eax,%eax
    jge    jump_45ddc
    xor    %eax,%eax
    pop    %edx
    pop    %ebx
    ret
  jump_45ddc:
    cmp    $0xa,%eax
    jle    jump_45de6
    mov    $0xa,%eax
  jump_45de6:
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_45dec:
/*----------------------------------------------------------------*/
    push   %edx
    sub    $0xc,%esp
    mov    %eax,%edx
    mov    0x18(%eax),%eax
    mov    %eax,0x4(%esp)
    mov    %edx,%eax
    call   func_45dbc
    mov    %eax,(%esp)
    fildl  (%esp)
    fmuls  data_82643
    fld1
    faddp  %st,%st(1)
    fstps  0x8(%esp)
    fld1
    fcomps 0x8(%esp)
    fnstsw %ax
    sahf
    jbe    jump_45e29
    movl   $0x3f800000,0x8(%esp)
    jmp    jump_45e40
  jump_45e29:
    flds   0x8(%esp)
    fcomps data_82647
    fnstsw %ax
    sahf
    jbe    jump_45e40
    movl   $0x40000000,0x8(%esp)
  jump_45e40:
    fildl  0x4(%esp)
    fld    %st(0)
    fmuls  0x8(%esp)
    fstp   %st(1)
    call   func_72258
    fistpl 0x4(%esp)
    mov    0x4(%esp),%eax
    add    $0xc,%esp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_45e60:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    test   %edx,%edx
    jne    jump_45e7c
    mov    $0x4b3,%ebx
    mov    $data_8264b,%edx
    xor    %eax,%eax
    call   func_25878
  jump_45e7c:
    cmpb   $0x4,0x58(%ecx)
    je     jump_45e93
    mov    $0x4b4,%ebx
    mov    $data_82657,%edx
    xor    %eax,%eax
    call   func_25878
  jump_45e93:
    mov    0x59(%ecx),%eax
    cmp    %eax,%esi
    jne    jump_45ea0
    xor    %eax,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_45ea0:
    movb   $0x1,0x5d(%ecx)
    mov    %esi,0x5e(%ecx)
    mov    0x2(%eax),%ecx
    sar    $0x10,%ecx
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    add    %eax,%ecx
    mov    0x2(%esi),%eax
    shl    $0x2,%ecx
    sar    $0x10,%eax
    mov    data_c5beb(%ecx,%eax,1),%al
    and    $0xff,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_45ed4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x204,%esp
    mov    %eax,0x1dc(%esp)
    mov    %edx,0x1f8(%esp)
    xor    %edx,%edx
    mov    %edx,0x1e0(%esp)
    cmpb   $0x4,0x58(%eax)
    jne    jump_4620c
    mov    %esp,%edx
    mov    0x59(%eax),%eax
    call   func_1d754
    test   %eax,%eax
    jg     jump_45f26
    jmp    jump_460c0
  jump_45f13:
    mov    0x1e8(%esp),%ebx
    add    $0x4,%ebp
    cmp    %ebx,%ebp
    jl     jump_45f46
    jmp    jump_460c0
  jump_45f26:
    mov    0x1dc(%esp),%edx
    shl    $0x2,%eax
    xor    %ebp,%ebp
    add    $0x9e,%edx
    mov    %eax,0x1e8(%esp)
    mov    %edx,0x1fc(%esp)
  jump_45f46:
    mov    (%esp,%ebp,1),%eax
    mov    0x54(%eax),%edx
    mov    0x1f8(%esp),%ecx
    sar    $0x10,%edx
    cmp    %ecx,%edx
    jne    jump_45f13
    cmpb   $0x4,0x58(%eax)
    jne    jump_45f13
    lea    0x1c4(%esp),%edx
    xor    %esi,%esi
    mov    %edx,0x1e4(%esp)
    mov    %esi,0x1ac(%esp)
    mov    0x1fc(%esp),%edx
    mov    %esi,0x1b0(%esp)
    mov    %esi,0x1b4(%esp)
    flds   (%edx)
    fsubs  0x9e(%eax)
    fstps  0x1ac(%esp)
    flds   0x4(%edx)
    fsubs  0xa2(%eax)
    fstps  0x1b0(%esp)
    flds   0x8(%edx)
    fsubs  0xa6(%eax)
    add    $0x9e,%eax
    fstps  0x1b4(%esp)
    mov    0x1ac(%esp),%eax
    flds   0x1b0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c4(%esp)
    mov    0x1b0(%esp),%eax
    flds   0x1ac(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1c8(%esp)
    faddp  %st,%st(1)
    mov    0x1b4(%esp),%eax
    flds   0x1b4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1cc(%esp)
    sub    $0x8,%esp
    faddp  %st,%st(1)
    mov    %ebp,%edi
    fstpl  (%esp)
    xor    %ecx,%ecx
    call   func_721f0
    mov    (%esp,%ebp,1),%edx
    fstps  0x200(%esp)
    add    $0xab,%edx
    jmp    jump_4602e
  jump_4602a:
    inc    %ecx
    add    $0x7,%edx
  jump_4602e:
    mov    (%esp,%edi,1),%eax
    cmp    0x15a(%eax),%ecx
    jge    jump_4607a
    mov    (%edx),%bl
    cmp    $0xff,%bl
    je     jump_4602a
    movsbl %bl,%ebx
    imul   $0x6a,%ebx,%ebx
    cmpb   $0x3,data_f653e(%ebx)
    jne    jump_4602a
    mov    data_f6546(%ebx),%eax
    shl    $0x5,%eax
    mov    %eax,0x1ec(%esp)
    fildl  0x1ec(%esp)
    fcomps 0x200(%esp)
    fnstsw %ax
    sahf
    jb     jump_4602a
    add    data_f656e(%ebx),%esi
    jmp    jump_4602a
  jump_4607a:
    test   %esi,%esi
    jle    jump_45f13
    mov    0x1dc(%esp),%edx
    mov    0x24(%edx),%edx
    add    %edx,%edx
    cmp    %edx,%esi
    jle    jump_45f13
    mov    $0x29,%edx
    mov    $0x1,%ecx
    call   func_44bb8
    mov    %ecx,0x1e0(%esp)
    cmp    $0xffffffff,%eax
    je     jump_45f13
    movl   $0x2,0x1e0(%esp)
  jump_460c0:
    cmpl   $0x0,0x1e0(%esp)
    jne    jump_4620c
    mov    0x1dc(%esp),%esi
    xor    %edi,%edi
    xor    %ecx,%ecx
    add    $0x9e,%esi
    mov    $0x10,%ebp
    jmp    jump_460ea
  jump_460e6:
    add    $0x4,%ecx
    inc    %edi
  jump_460ea:
    mov    0x1dc(%esp),%eax
    mov    0x59(%eax),%eax
    mov    0x58(%eax),%edx
    sar    $0x10,%edx
    cmp    %edx,%edi
    jge    jump_4620c
    mov    0x46(%ecx,%eax,1),%ebx
    xor    %eax,%eax
    mov    0x1f8(%esp),%edx
    mov    0x57(%ebx),%al
    cmp    %edx,%eax
    jne    jump_460e6
    lea    0x1d0(%esp),%eax
    mov    %eax,0x1f0(%esp)
    xor    %eax,%eax
    mov    %eax,0x1b8(%esp)
    mov    %eax,0x1bc(%esp)
    mov    %eax,0x1c0(%esp)
    flds   (%esi)
    fsubs  (%ebx)
    fstps  0x1b8(%esp)
    flds   0x4(%esi)
    fsubs  0x4(%ebx)
    fstps  0x1bc(%esp)
    flds   0x8(%esi)
    fsubs  0x8(%ebx)
    mov    0x1b8(%esp),%eax
    fstps  0x1c0(%esp)
    flds   0x1bc(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1d0(%esp)
    mov    0x1bc(%esp),%eax
    flds   0x1b8(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1d4(%esp)
    faddp  %st,%st(1)
    mov    0x1c0(%esp),%eax
    flds   0x1c0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x1d8(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    mov    %ebp,%edx
    call   func_721f0
    mov    %ebx,%eax
    fstps  0x1f4(%esp)
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_460e6
    mov    0x10(%ebx),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_460e6
    flds   0x1f4(%esp)
    fcomps data_82663
    fnstsw %ax
    sahf
    jae    jump_460e6
    movl   $0x1,0x1e0(%esp)
  jump_4620c:
    mov    0x1e0(%esp),%eax
    add    $0x204,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret

vtable_46220:
    .long   func_462ab
    .long   func_462b7
    .long   func_462d5
    .long   func_462d5
    .long   func_462f3
    .long   func_462f3
    .long   func_462f3
    .long   func_462ab

vtable_46240:
    .long   func_46676
    .long   func_46669
    .long   func_46690
    .long   func_46690
    .long   func_466ab
    .long   func_466ab
    .long   func_466ab
    .long   func_46676

vtable_46260:
    .long   func_4691d
    .long   func_4691d
    .long   func_468b6
    .long   func_468a4
    .long   func_468eb


/*----------------------------------------------------------------*/
func_46274:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3ac,%esp
    mov    %eax,%ebp
    mov    %edx,0x3a8(%esp)
    add    $0xab,%eax
    mov    %eax,0x3a0(%esp)
    mov    %ebp,%eax
    add    $0x9e,%eax
    mov    %eax,0x3a4(%esp)
    cmp    $0xffffffff,%ebx
    je     jump_4631f
    jmp    jump_466d1


/*----------------------------------------------------------------*/
func_462ab:
/*----------------------------------------------------------------*/
    movl   $0x0,0x5e(%ebp)
    jmp    jump_465da


/*----------------------------------------------------------------*/
func_462b7:
/*----------------------------------------------------------------*/
    mov    0x5e(%ebp),%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $data_93bc5,%edx
    shl    $0x5,%eax
    add    %eax,%edx
    mov    %edx,0x5e(%ebp)
    jmp    jump_465da


/*----------------------------------------------------------------*/
func_462d5:
/*----------------------------------------------------------------*/
    mov    0x5e(%ebp),%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    sub    %edx,%eax
    mov    $data_ab057,%edx
    add    %eax,%edx
    mov    %edx,0x5e(%ebp)
    jmp    jump_465da


/*----------------------------------------------------------------*/
func_462f3:
/*----------------------------------------------------------------*/
    mov    $0x53f,%ebx
    mov    $data_82667,%edx
    xor    %eax,%eax
    call   func_25888
    jmp    jump_465da
  jump_46309:
    mov    $0x544,%ebx
    mov    $data_82673,%edx
    xor    %eax,%eax
    call   func_25888
    jmp    jump_465da
  jump_4631f:
    lea    0x164(%esp),%eax
    mov    $0x162,%ebx
    lea    0x164(%esp),%edx
    call   func_443d0
    mov    0x3a8(%esp),%eax
    call   func_1bf94
    mov    0x164(%esp),%eax
    mov    %eax,0x0(%ebp)
    mov    0x168(%esp),%eax
    mov    %eax,0x4(%ebp)
    mov    0x16c(%esp),%eax
    mov    %eax,0x8(%ebp)
    mov    0x170(%esp),%eax
    mov    %eax,0xc(%ebp)
    mov    0x174(%esp),%eax
    mov    %eax,0x10(%ebp)
    mov    0x178(%esp),%eax
    mov    %eax,0x14(%ebp)
    mov    0x17c(%esp),%eax
    mov    %eax,0x18(%ebp)
    mov    0x180(%esp),%eax
    mov    %eax,0x1c(%ebp)
    mov    0x184(%esp),%eax
    mov    %eax,0x20(%ebp)
    mov    0x188(%esp),%eax
    mov    %eax,0x24(%ebp)
    mov    0x18c(%esp),%eax
    mov    %eax,0x28(%ebp)
    mov    0x190(%esp),%eax
    mov    $0x7,%ecx
    mov    %eax,0x2c(%ebp)
    lea    0x198(%esp),%esi
    mov    0x194(%esp),%eax
    lea    0x34(%ebp),%edi
    mov    %eax,0x30(%ebp)
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x1b6(%esp),%eax
    mov    %eax,0x52(%ebp)
    mov    0x1ba(%esp),%eax
    mov    %ax,0x56(%ebp)
    mov    0x1bc(%esp),%al
    mov    %al,0x58(%ebp)
    mov    0x1bd(%esp),%eax
    mov    %eax,0x59(%ebp)
    mov    0x1c1(%esp),%al
    mov    %al,0x5d(%ebp)
    mov    0x1c2(%esp),%eax
    mov    %eax,0x5e(%ebp)
    mov    0x1c6(%esp),%al
    mov    %al,0x62(%ebp)
    mov    0x1c7(%esp),%eax
    mov    %eax,0x63(%ebp)
    mov    0x1cb(%esp),%al
    mov    %al,0x67(%ebp)
    mov    0x1cc(%esp),%eax
    mov    %eax,0x68(%ebp)
    lea    0x6c(%ebp),%edx
    mov    0x1d0(%esp),%eax
    mov    %eax,(%edx)
    mov    0x1d4(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x1d8(%esp),%eax
    mov    %eax,0x8(%edx)
    lea    0x78(%ebp),%edx
    mov    0x1dc(%esp),%eax
    mov    %eax,(%edx)
    mov    0x1e0(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x1e4(%esp),%eax
    mov    %eax,0x8(%edx)
    mov    0x1e8(%esp),%eax
    mov    %eax,0x84(%ebp)
    mov    0x1ec(%esp),%eax
    mov    %eax,0x88(%ebp)
    mov    0x1f0(%esp),%eax
    mov    %eax,0x8c(%ebp)
    mov    0x1f4(%esp),%eax
    mov    %eax,0x90(%ebp)
    mov    0x1f8(%esp),%eax
    mov    %eax,0x94(%ebp)
    mov    0x1fc(%esp),%eax
    mov    %eax,0x98(%ebp)
    mov    0x200(%esp),%eax
    mov    %ax,0x9c(%ebp)
    mov    0x3a4(%esp),%edx
    mov    0x202(%esp),%eax
    mov    %eax,(%edx)
    mov    0x206(%esp),%eax
    mov    %eax,0x4(%edx)
    push   $func_46b70
    mov    0x20e(%esp),%eax
    mov    $0x19,%ebx
    mov    %eax,0x8(%edx)
    mov    $0x7,%ecx
    mov    0x212(%esp),%al
    lea    0x213(%esp),%edx
    mov    %al,0xaa(%ebp)
    mov    0x3a4(%esp),%eax
    call   func_73ef0
    mov    0x2be(%esp),%eax
    mov    %eax,0x15a(%ebp)
    mov    0x2c2(%esp),%eax
    mov    %eax,0x15e(%ebp)
    mov    0x5d(%ebp),%al
    cmp    $0x7,%al
    ja     jump_46309
    and    $0xff,%eax
    jmp    *%cs:vtable_46220(,%eax,4)
  jump_4655e:
    jne    jump_4657e
    mov    0x59(%ebp),%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $data_93bc5,%edx
    shl    $0x5,%eax
    add    %eax,%edx
    mov    %edx,0x59(%ebp)
    jmp    jump_46655
  jump_4657e:
    mov    0x59(%ebp),%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    sub    %edx,%eax
    mov    $data_ab057,%edx
    add    %eax,%edx
    mov    %edx,0x59(%ebp)
    lea    0x164(%esp),%eax
    xor    %edx,%edx
    add    $0x3ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_465ab:
    mov    0x59(%ebp),%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    $data_96147,%edx
    add    %eax,%edx
    mov    %edx,0x59(%ebp)
    lea    0x164(%esp),%eax
    xor    %edx,%edx
    add    $0x3ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_465da:
    mov    0x58(%ebp),%al
    cmp    $0x3,%al
    jb     jump_4664c
    cmp    $0x4,%al
    jbe    jump_4655e
    cmp    $0x5,%al
    je     jump_465ab
  jump_465ed:
    mov    $0x1a,%ecx
    lea    0x334(%esp),%edi
    mov    $data_8688c,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    mov    0x55(%ebp),%edx
    sar    $0x18,%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    lea    0x334(%esp),%eax
    add    %edx,%eax
    push   %eax
    push   $data_8267f
    mov    $0x577,%ebx
    call   func_258ec
    add    $0x8,%esp
    mov    $data_82696,%edx
    xor    %eax,%eax
    call   func_25898
    lea    0x164(%esp),%eax
    xor    %edx,%edx
    add    $0x3ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_4664c:
    cmp    $0x1,%al
    jb     jump_465ed
    jmp    jump_4657e
  jump_46655:
    lea    0x164(%esp),%eax
    xor    %edx,%edx
    add    $0x3ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_46669:
/*----------------------------------------------------------------*/
    mov    0x5e(%ebp),%eax
    mov    0x2(%eax),%eax
    sar    $0x10,%eax
    mov    %eax,0x5e(%esp)


/*----------------------------------------------------------------*/
func_46676:
/*----------------------------------------------------------------*/
    mov    0x58(%ebp),%al
    dec    %al
    cmp    $0x4,%al
    ja     jump_46938
    and    $0xff,%eax
    jmp    *%cs:vtable_46260(,%eax,4)


/*----------------------------------------------------------------*/
func_46690:
/*----------------------------------------------------------------*/
    mov    0x5e(%ebp),%edx
    sub    $data_ab057,%edx
    mov    $0x7b,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0x5e(%esp)
    jmp    func_46676


/*----------------------------------------------------------------*/
func_466ab:
/*----------------------------------------------------------------*/
    mov    $0x5a4,%ebx
    mov    $data_826a2,%edx
    xor    %eax,%eax
    call   func_25888
    jmp    func_46676
  jump_466be:
    mov    $0x5a9,%ebx
    mov    $data_826ae,%edx
    xor    %eax,%eax
    call   func_25888
    jmp    func_46676
  jump_466d1:
    mov    0x0(%ebp),%eax
    mov    %eax,(%esp)
    mov    0x4(%ebp),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%ebp),%eax
    mov    %eax,0x8(%esp)
    mov    0xc(%ebp),%eax
    mov    %eax,0xc(%esp)
    mov    0x10(%ebp),%eax
    mov    %eax,0x10(%esp)
    mov    0x14(%ebp),%eax
    mov    %eax,0x14(%esp)
    mov    0x18(%ebp),%eax
    mov    %eax,0x18(%esp)
    mov    0x1c(%ebp),%eax
    mov    %eax,0x1c(%esp)
    mov    0x20(%ebp),%eax
    mov    %eax,0x20(%esp)
    mov    0x24(%ebp),%eax
    mov    %eax,0x24(%esp)
    mov    0x28(%ebp),%eax
    mov    %eax,0x28(%esp)
    mov    0x2c(%ebp),%eax
    mov    %eax,0x2c(%esp)
    mov    0x30(%ebp),%eax
    mov    $0x7,%ecx
    mov    %eax,0x30(%esp)
    lea    0x34(%esp),%edi
    lea    0x34(%ebp),%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x52(%ebp),%eax
    mov    %eax,0x52(%esp)
    mov    0x56(%ebp),%ax
    mov    %ax,0x56(%esp)
    mov    0x58(%ebp),%al
    lea    0x59(%ebp),%edx
    mov    %al,0x58(%esp)
    mov    (%edx),%eax
    lea    0x5d(%ebp),%edx
    mov    %eax,0x59(%esp)
    mov    (%edx),%al
    mov    %al,0x5d(%esp)
    mov    0x1(%edx),%eax
    lea    0x62(%ebp),%edx
    mov    %eax,0x5e(%esp)
    mov    (%edx),%al
    mov    %al,0x62(%esp)
    mov    0x1(%edx),%eax
    mov    %eax,0x63(%esp)
    mov    0x5(%edx),%al
    lea    0x6(%edx),%ebx
    mov    %al,0x67(%esp)
    mov    (%ebx),%eax
    lea    0xa(%edx),%ebx
    mov    %eax,0x68(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x6c(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x70(%esp)
    mov    0x8(%ebx),%eax
    lea    0x16(%edx),%ebx
    mov    %eax,0x74(%esp)
    mov    (%ebx),%eax
    mov    %eax,0x78(%esp)
    mov    0x4(%ebx),%eax
    mov    %eax,0x7c(%esp)
    mov    0x8(%ebx),%eax
    mov    %eax,0x80(%esp)
    mov    0x22(%edx),%eax
    mov    %eax,0x84(%esp)
    mov    0x88(%ebp),%eax
    mov    %eax,0x88(%esp)
    mov    0x8c(%ebp),%eax
    mov    %eax,0x8c(%esp)
    mov    0x90(%ebp),%eax
    mov    %eax,0x90(%esp)
    mov    0x94(%ebp),%eax
    mov    %eax,0x94(%esp)
    mov    0x98(%ebp),%eax
    mov    %eax,0x98(%esp)
    mov    0x9c(%ebp),%ax
    mov    %ax,0x9c(%esp)
    mov    0x3a4(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0x9e(%esp)
    mov    0x3a4(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0xa2(%esp)
    mov    0x3a4(%esp),%eax
    mov    0x8(%eax),%eax
    mov    $data_85ed0,%ecx
    mov    %eax,0xa6(%esp)
    mov    $0x19,%ebx
    mov    0xaa(%ebp),%al
    mov    0x3a0(%esp),%edx
    mov    %al,0xaa(%esp)
    lea    0xab(%esp),%eax
    call   func_73f14
    mov    0x15a(%ebp),%eax
    mov    %eax,0x15a(%esp)
    mov    0x15e(%ebp),%eax
    mov    %eax,0x15e(%esp)
    mov    0x5d(%ebp),%al
    cmp    $0x7,%al
    ja     jump_466be
    and    $0xff,%eax
    jmp    *%cs:vtable_46240(,%eax,4)


/*----------------------------------------------------------------*/
func_468a4:
/*----------------------------------------------------------------*/
    mov    0x59(%ebp),%eax
    mov    0x2(%eax),%eax
    sar    $0x10,%eax
    mov    %eax,0x59(%esp)
    jmp    jump_46983


/*----------------------------------------------------------------*/
func_468b6:
/*----------------------------------------------------------------*/
    mov    0x59(%ebp),%ebp
    test   %ebp,%ebp
    jne    jump_468ce
    mov    $0x5bd,%ebx
    mov    $data_826ba,%edx
    xor    %eax,%eax
    call   func_25878
  jump_468ce:
    mov    %ebp,%edx
    sub    $data_ab057,%edx
    mov    $0x7b,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0x59(%esp)
    jmp    jump_46983


/*----------------------------------------------------------------*/
func_468eb:
/*----------------------------------------------------------------*/
    mov    0x59(%ebp),%ebp
    test   %ebp,%ebp
    jne    jump_46903
    mov    $0x5cc,%ebx
    mov    $data_826c6,%edx
    xor    %eax,%eax
    call   func_25878
  jump_46903:
    mov    %ebp,%edx
    sub    $data_96147,%edx
    mov    $0x27,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0x59(%esp)
    jmp    jump_46983


/*----------------------------------------------------------------*/
func_4691d:
/*----------------------------------------------------------------*/
    mov    0x59(%ebp),%edx
    sub    $data_ab057,%edx
    mov    $0x7b,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,0x59(%esp)
    jmp    jump_46983
  jump_46938:
    mov    $0x1a,%ecx
    lea    0x2c8(%esp),%edi
    mov    $data_868f8,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    mov    0x55(%ebp),%edx
    sar    $0x18,%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    lea    0x2c8(%esp),%eax
    add    %edx,%eax
    push   %eax
    push   $data_826d2
    mov    $0x5eb,%ebx
    call   func_258ec
    add    $0x8,%esp
    mov    $data_826e9,%edx
    xor    %eax,%eax
    call   func_25898
  jump_46983:
    mov    $0x162,%ebx
    mov    %esp,%edx
    mov    0x3a8(%esp),%eax
    call   func_1c098
    mov    %esp,%eax
    xor    %edx,%edx
    add    $0x3ac,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_469b0:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    (%edx),%bl
    mov    %bl,(%eax)
    mov    0x1(%edx),%bx
    mov    %bx,0x1(%eax)
    mov    0x3(%edx),%edx
    mov    %edx,0x3(%eax)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_469d0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %edx,%ebp
    mov    (%edx),%edx
    mov    %edx,(%eax)
    mov    0x4(%ebp),%edx
    mov    %edx,0x4(%eax)
    mov    0x8(%ebp),%edx
    mov    %edx,0x8(%eax)
    mov    0xc(%ebp),%edx
    mov    %edx,0xc(%eax)
    mov    0x10(%ebp),%edx
    mov    %edx,0x10(%eax)
    mov    0x14(%ebp),%edx
    mov    %edx,0x14(%eax)
    mov    0x18(%ebp),%edx
    mov    %edx,0x18(%eax)
    mov    0x1c(%ebp),%edx
    mov    %edx,0x1c(%eax)
    mov    0x20(%ebp),%edx
    mov    %edx,0x20(%eax)
    mov    0x24(%ebp),%edx
    mov    %edx,0x24(%eax)
    mov    0x28(%ebp),%edx
    mov    %edx,0x28(%eax)
    mov    0x2c(%ebp),%edx
    mov    %edx,0x2c(%eax)
    mov    0x30(%ebp),%edx
    mov    %edx,0x30(%eax)
    mov    $0x7,%ecx
    lea    0x34(%eax),%edi
    lea    0x34(%ebp),%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x52(%ebp),%edx
    mov    %edx,0x52(%eax)
    mov    0x56(%ebp),%dx
    mov    %dx,0x56(%eax)
    mov    0x58(%ebp),%dl
    mov    %dl,0x58(%eax)
    lea    0x59(%ebp),%edx
    mov    (%edx),%ebx
    lea    0x5d(%ebp),%edx
    mov    %ebx,0x59(%eax)
    add    $0x59,%eax
    mov    (%edx),%bl
    mov    %bl,0x4(%eax)
    add    $0x4,%eax
    mov    0x1(%edx),%edx
    mov    %edx,0x1(%eax)
    lea    0x5(%eax),%edx
    lea    0x62(%ebp),%eax
    mov    (%eax),%bl
    mov    %bl,(%edx)
    add    $0x6,%edx
    mov    0x1(%eax),%ebx
    mov    %ebx,-0x5(%edx)
    add    $0x4,%edx
    mov    0x5(%eax),%bl
    mov    %bl,-0x5(%edx)
    lea    0x6(%eax),%ebx
    add    $0xc,%edx
    mov    (%ebx),%ecx
    lea    0xa(%eax),%ebx
    mov    %ecx,-0x10(%edx)
    sub    $0x16,%edx
    mov    (%ebx),%ecx
    mov    %ecx,0xa(%edx)
    mov    0x4(%ebx),%ecx
    mov    %ecx,0xe(%edx)
    flds   0x8(%ebx)
    lea    0x16(%eax),%ebx
    fstps  0x12(%edx)
    mov    (%ebx),%ecx
    mov    %ecx,0x16(%edx)
    mov    0x4(%ebx),%ecx
    mov    %ecx,0x1a(%edx)
    mov    0x8(%ebx),%ecx
    mov    %ecx,0x1e(%edx)
    mov    0x22(%eax),%eax
    mov    %eax,0x22(%edx)
    lea    -0x62(%edx),%eax
    mov    0x88(%ebp),%edx
    mov    %edx,0x88(%eax)
    mov    0x8c(%ebp),%edx
    mov    %edx,0x8c(%eax)
    mov    0x90(%ebp),%edx
    mov    %edx,0x90(%eax)
    mov    0x94(%ebp),%edx
    mov    %edx,0x94(%eax)
    mov    0x98(%ebp),%edx
    mov    %edx,0x98(%eax)
    mov    0x9c(%ebp),%dx
    mov    %dx,0x9c(%eax)
    lea    0x9e(%ebp),%edx
    add    $0x9e,%eax
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
    mov    $data_85ed0,%ecx
    sub    $0x9e,%eax
    mov    0xaa(%ebp),%dl
    mov    $0x19,%ebx
    mov    %dl,0xaa(%eax)
    add    $0xab,%eax
    lea    0xab(%ebp),%edx
    call   func_73f14
    mov    0x15a(%ebp),%edx
    mov    %edx,0xaf(%eax)
    sub    $0xab,%eax
    mov    0x15e(%ebp),%edx
    mov    %edx,0x15e(%eax)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_46b70:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    (%edx),%bl
    mov    %bl,(%eax)
    mov    0x1(%edx),%bx
    mov    %bx,0x1(%eax)
    mov    0x3(%edx),%edx
    mov    %edx,0x3(%eax)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_46b90:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    mov    %edx,0x8(%esp)
    mov    %ebx,(%esp)
    mov    %cx,0x10(%esp)
    mov    0xe(%esp),%eax
    xor    %edx,%edx
    sar    $0x10,%eax
    mov    %edx,0xc(%esp)
    test   %eax,%eax
    jl     jump_46bbe
    cmp    data_93b98,%cx
    jl     jump_46bcf
  jump_46bbe:
    mov    $0x2f,%ebx
    mov    $data_826f8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_46bcf:
    mov    0x54(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_46be6
    mov    data_93b98,%bx
    cmp    0x56(%esi),%bx
    jg     jump_46bf7
  jump_46be6:
    mov    $0x30,%ebx
    mov    $data_82707,%edx
    xor    %eax,%eax
    call   func_25878
  jump_46bf7:
    mov    0x9c(%esi),%ax
    xor    %ah,%ah
    and    $0x10,%al
    mov    (%esp),%edi
    cwtl
    xor    %ebp,%ebp
    test   %eax,%eax
    je     jump_46c0e
    xor    %edi,%edi
  jump_46c0e:
    mov    0x90(%esi),%ebx
    cmp    %ebx,%edi
    jle    jump_46c2a
    mov    (%esp),%ebp
    mov    0xc(%esp),%ah
    mov    %ebx,%edi
    or     $0x2,%ah
    sub    %ebx,%ebp
    mov    %ah,0xc(%esp)
  jump_46c2a:
    mov    0x8c(%esi),%ecx
    cmp    %ecx,%ebp
    jl     jump_46c41
    mov    0xc(%esp),%dl
    or     $0x4,%dl
    mov    %ecx,%ebp
    mov    %dl,0xc(%esp)
  jump_46c41:
    cmpl   $0x1,0x8(%esp)
    jne    jump_46d28
    mov    0x58(%esi),%dh
    xor    %ecx,%ecx
    cmp    $0x4,%dh
    jne    jump_46c5b
    mov    0x59(%esi),%ecx
    jmp    jump_46c86
  jump_46c5b:
    cmp    $0x3,%dh
    je     jump_46c6a
    cmp    $0x1,%dh
    je     jump_46c6a
    cmp    $0x2,%dh
    jne    jump_46c86
  jump_46c6a:
    mov    0x59(%esi),%eax
    mov    0xa(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    $data_93bc5,%ecx
    shl    $0x5,%eax
    add    %eax,%ecx
  jump_46c86:
    test   %ecx,%ecx
    jne    jump_46c9b
    mov    $0x53,%ebx
    mov    $data_82716,%edx
    xor    %eax,%eax
    call   func_25878
  jump_46c9b:
    mov    0xe(%esp),%eax
    mov    0x54(%esi),%edx
    sar    $0x10,%eax
    sar    $0x10,%edx
    mov    %eax,0x4(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    %ecx,%ebx
    add    %eax,%eax
    mov    0x4(%esp),%edx
    add    $data_92e16,%eax
    call   func_3ee9c
    mov    0x90(%esi),%edx
    mov    0x8c(%esi),%ebx
    sub    %edi,%edx
    sub    %ebp,%ebx
    mov    %edx,0x90(%esi)
    mov    %ebx,0x8c(%esi)
    cmp    $0x1,%ebx
    jge    jump_46d28
    mov    %esi,%eax
    mov    0xa7(%esi),%ebx
    mov    0x54(%esi),%edx
    call   func_4517c
    xor    %eax,%eax
    sar    $0x10,%edx
    mov    data_f458e,%al
    sar    $0x18,%ebx
    cmp    %eax,%edx
    jne    jump_46d28
    mov    data_fe582,%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    je     jump_46d28
    mov    $0xc,%edx
    mov    $data_fa35c,%eax
    call   func_50eb0
  jump_46d28:
    mov    0xc(%esp),%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_46d34:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x50c,%esp
    mov    %eax,%ebp
    mov    %edx,0x4d0(%esp)
    mov    $0xffffffff,%ebx
    xor    %edx,%edx
    mov    0x63(%eax),%eax
    mov    %edx,0x4e0(%esp)
    mov    %ebx,0x4cc(%esp)
    mov    %ebx,%ecx
    mov    (%eax),%al
    mov    %edx,0x4d4(%esp)
    mov    %al,0x504(%esp)
    cmp    $0xff,%al
    jne    jump_46d87
    mov    $0xa2,%ebx
    mov    $data_82725,%edx
    xor    %eax,%eax
    call   func_25878
  jump_46d87:
    mov    0x501(%esp),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    mov    $data_f650c,%edi
    add    %eax,%edi
    mov    0x88(%ebp),%edx
    mov    0x36(%edi),%eax
    cmp    %edx,%eax
    jg     jump_46db1
    mov    %eax,0x4d4(%esp)
    jmp    jump_46dba
  jump_46db1:
    xor    %ebx,%ebx
    mov    %ebx,0x4cc(%esp)
  jump_46dba:
    mov    0x68(%ebp),%esi
    test   %esi,%esi
    jne    jump_46dd2
    mov    $0xad,%ebx
    mov    $data_82734,%edx
    xor    %eax,%eax
    call   func_25878
  jump_46dd2:
    mov    0x58(%ebp),%dl
    cmp    $0x4,%dl
    jne    jump_46f22
    cmp    0x58(%esi),%dl
    jne    jump_46f22
    mov    0x59(%ebp),%eax
    cmp    0x59(%esi),%eax
    jne    jump_46f22
    cmpl   $0x0,0x3a(%edi)
    je     jump_46f24
    lea    0x440(%esp),%ebx
    mov    %ebx,0x4a0(%esp)
    xor    %ebx,%ebx
    lea    0x9e(%esi),%eax
    mov    %ebx,0x464(%esp)
    mov    %ebx,0x468(%esp)
    mov    %ebx,0x46c(%esp)
    lea    0x9e(%ebp),%edx
    flds   (%eax)
    fsubs  (%edx)
    fstps  0x464(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%edx)
    fstps  0x468(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%edx)
    mov    0x464(%esp),%eax
    fstps  0x46c(%esp)
    flds   0x468(%esp)
    fmul   %st(0),%st
    mov    %eax,0x440(%esp)
    mov    0x468(%esp),%eax
    flds   0x464(%esp)
    fmul   %st(0),%st
    mov    %eax,0x444(%esp)
    faddp  %st,%st(1)
    mov    0x46c(%esp),%eax
    flds   0x46c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x448(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    0x3a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x500(%esp)
    mov    0x9c(%ebp),%ax
    xor    %ah,%ah
    fstps  0x4d8(%esp)
    and    $0x4,%al
    fildl  0x500(%esp)
    cwtl
    fstps  0x4dc(%esp)
    test   %eax,%eax
    je     jump_46eed
    flds   0x4dc(%esp)
    fmuls  data_82743
    fstps  0x4dc(%esp)
  jump_46eed:
    flds   0x4d8(%esp)
    fcomps 0x4dc(%esp)
    fnstsw %ax
    sahf
    jbe    jump_46f02
    xor    %ecx,%ecx
  jump_46f02:
    cmpb   $0x2f,0x504(%esp)
    jne    jump_46f24
    flds   0x4d8(%esp)
    fld    %st(0)
    fmull  data_82747
    fcompp
    fnstsw %ax
    sahf
    jbe    jump_46f24
  jump_46f22:
    xor    %ecx,%ecx
  jump_46f24:
    cmpl   $0x0,0x4cc(%esp)
    je     jump_46f4a
    test   %ecx,%ecx
    je     jump_46f4a
    cmp    %ebp,%esi
    je     jump_46f4a
    mov    0x33(%edi),%ax
    xor    %ah,%ah
    and    $0x1,%al
    cwtl
    test   %eax,%eax
    je     jump_46f4a
    mov    $0x1,%eax
    jmp    jump_46f4c
  jump_46f4a:
    xor    %eax,%eax
  jump_46f4c:
    or     %eax,0x4e0(%esp)
    testb  $0x1,0x4e0(%esp)
    je     jump_47bd0
    lea    0x9e(%esi),%edx
    lea    0x78(%ebp),%eax
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
    mov    0x32(%edi),%cl
    xor    %ebx,%ebx
    test   %cl,%cl
    jne    jump_46f86
    mov    0x52(%edi),%ebx
  jump_46f86:
    cmpb   $0x2f,0x504(%esp)
    jne    jump_46f93
    mov    0x4a(%edi),%ebx
  jump_46f93:
    test   %ebx,%ebx
    je     jump_46fb4
    mov    0x4d0(%esp),%edx
    mov    0x54(%ebp),%ecx
    mov    %esi,%eax
    sar    $0x10,%ecx
    call   func_46b90
    or     %eax,0x4e0(%esp)
    jmp    jump_46fbc
  jump_46fb4:
    orb    $0x10,0x4e0(%esp)
  jump_46fbc:
    cmpl   $0x1,0x4d0(%esp)
    je     jump_47a64
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_46fdd:
    mov    data_92e10,%eax
    mov    %eax,0x52(%esi)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_46ff8:
    lea    0x3bc(%esp),%edx
    mov    %edx,0x4a8(%esp)
    xor    %edx,%edx
    lea    0x9e(%esi),%eax
    mov    %edx,0x434(%esp)
    mov    %edx,0x438(%esp)
    mov    %edx,0x43c(%esp)
    flds   (%eax)
    fsubs  0x9e(%ebp)
    fstps  0x434(%esp)
    flds   0x4(%eax)
    fsubs  0xa2(%ebp)
    fstps  0x438(%esp)
    flds   0x8(%eax)
    mov    0x434(%esp),%eax
    fsubs  0xa6(%ebp)
    mov    %eax,0x3bc(%esp)
    mov    0x438(%esp),%eax
    fstps  0x43c(%esp)
    mov    %eax,0x3c0(%esp)
    mov    0x43c(%esp),%eax
    mov    %eax,0x3c4(%esp)
    mov    0x4a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x500(%esp)
    xor    %ebx,%ebx
    fildl  0x500(%esp)
    sub    $0x4,%esp
    lea    0x3c0(%esp),%eax
    fstps  (%esp)
    lea    0x3f0(%esp),%edx
    call   func_4e444
    lea    0x9e(%esi),%eax
    mov    %edx,0x4a4(%esp)
    mov    %ebx,0x47c(%esp)
    mov    %ebx,0x480(%esp)
    mov    %ebx,0x484(%esp)
    flds   (%eax)
    fadds  0x3bc(%esp)
    fstps  0x47c(%esp)
    flds   0x4(%eax)
    fadds  0x3c0(%esp)
    fstps  0x480(%esp)
    flds   0x8(%eax)
    mov    0x47c(%esp),%eax
    fadds  0x3c4(%esp)
    mov    %eax,0x3ec(%esp)
    mov    0x480(%esp),%eax
    fstps  0x484(%esp)
    mov    %eax,0x3f0(%esp)
    mov    0x484(%esp),%eax
    mov    %eax,0x3f4(%esp)
    mov    %edx,%eax
    add    $0x9e,%ebp
    lea    0x9e(%esi),%edx
    mov    (%eax),%ebx
    mov    %ebx,(%edx)
    mov    0x4(%eax),%ebx
    mov    %ebx,0x4(%edx)
    mov    0x8(%eax),%ebx
    mov    %ebx,0x8(%edx)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4715a:
    mov    (%edx),%eax
    mov    %eax,0x494(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x498(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x49c(%esp)
    mov    (%ebx),%eax
    mov    %eax,(%edx)
    mov    0x4(%ebx),%eax
    mov    %eax,0x4(%edx)
    mov    0x8(%ebx),%eax
    mov    %eax,0x8(%edx)
    mov    0x494(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x498(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x49c(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_471b7:
    lea    0x488(%esp),%eax
    mov    %eax,0x4c4(%esp)
    xor    %eax,%eax
    mov    %eax,0x3e0(%esp)
    mov    %eax,0x3e4(%esp)
    mov    %eax,0x3e8(%esp)
    flds   (%ebx)
    fsubs  (%edx)
    fstps  0x3e0(%esp)
    flds   0x4(%ebx)
    fsubs  0x4(%edx)
    fstps  0x3e4(%esp)
    flds   0x8(%ebx)
    fsubs  0x8(%edx)
    mov    0x3e0(%esp),%eax
    fstps  0x3e8(%esp)
    flds   0x3e4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x488(%esp)
    mov    0x3e4(%esp),%eax
    flds   0x3e0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x48c(%esp)
    faddp  %st,%st(1)
    mov    0x3e8(%esp),%eax
    flds   0x3e8(%esp)
    fmul   %st(0),%st
    mov    %eax,0x490(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    0x4a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x500(%esp)
    fildl  0x500(%esp)
    fsubrp %st,%st(1)
    fsts   0x4ac(%esp)
    fcomps data_8274f
    fnstsw %ax
    sahf
    jae    jump_47288
    movl   $0x42800000,0x4ac(%esp)
  jump_47288:
    lea    0x488(%esp),%eax
    push   0x4ac(%esp)
    call   func_4e444
    xor    %ebx,%ebx
    lea    0x458(%esp),%eax
    mov    %ebx,0x44c(%esp)
    mov    %ebx,0x450(%esp)
    mov    %ebx,0x454(%esp)
    mov    %eax,0x4c8(%esp)
    flds   0x9e(%ebp)
    fadds  0x488(%esp)
    fstps  0x44c(%esp)
    flds   0xa2(%ebp)
    fadds  0x48c(%esp)
    mov    0x44c(%esp),%eax
    fstps  0x450(%esp)
    flds   0xa6(%ebp)
    mov    %eax,0x458(%esp)
    fadds  0x490(%esp)
    mov    0x450(%esp),%eax
    fstps  0x454(%esp)
    mov    %eax,0x45c(%esp)
    mov    0x454(%esp),%eax
    mov    %eax,0x460(%esp)
    mov    0x44c(%esp),%eax
    mov    %eax,0x9e(%esi)
    mov    0x45c(%esp),%eax
    mov    %eax,0xa2(%esi)
    add    $0x9e,%esi
    mov    0x460(%esp),%eax
    add    $0x9e,%ebp
    mov    %eax,0x8(%esi)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47369:
    movl   $0x0,0x88(%esi)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47386:
    lea    0x1ac(%esp),%edx
    mov    0x59(%ebp),%eax
    call   func_1d754
    test   %eax,%eax
    jle    jump_47bd0
    mov    %ebx,%ecx
    mov    %ebx,%ebp
    shl    $0x2,%eax
    xor    %edx,%edx
    mov    %eax,0x4e8(%esp)
  jump_473ad:
    mov    0x1ac(%esp,%edx,1),%ebx
    cmp    %ebx,%esi
    je     jump_4759b
    lea    0x9e(%ebx),%eax
    lea    0x41c(%esp),%ebx
    mov    %ebx,0x4b0(%esp)
    xor    %ebx,%ebx
    mov    %ebx,0x470(%esp)
    mov    %ebx,0x474(%esp)
    mov    %ebx,0x478(%esp)
    flds   (%eax)
    fsubs  0x0(%ebp)
    fstps  0x470(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%ebp)
    fstps  0x474(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%ebp)
    mov    0x470(%esp),%eax
    fstps  0x478(%esp)
    flds   0x474(%esp)
    fmul   %st(0),%st
    mov    %eax,0x41c(%esp)
    mov    0x474(%esp),%eax
    flds   0x470(%esp)
    fmul   %st(0),%st
    mov    %eax,0x420(%esp)
    faddp  %st,%st(1)
    mov    0x478(%esp),%eax
    flds   0x478(%esp)
    fmul   %st(0),%st
    mov    %eax,0x424(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    0x4e(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x500(%esp)
    fstps  0x4f0(%esp)
    fildl  0x500(%esp)
    fstps  0x4f4(%esp)
    flds   0x4f0(%esp)
    fcomps 0x4f4(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4759b
    mov    0x4a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x500(%esp)
    fildl  0x500(%esp)
    fsubrs 0x4f0(%esp)
    fsts   0x4f8(%esp)
    fcomps 0x4f4(%esp)
    fnstsw %ax
    sahf
    jae    jump_474d6
    mov    0x4f4(%esp),%eax
    mov    %eax,0x4f8(%esp)
  jump_474d6:
    lea    0x41c(%esp),%eax
    push   0x4f8(%esp)
    call   func_4e444
    lea    0x3c8(%esp),%eax
    mov    %eax,0x4b8(%esp)
    xor    %eax,%eax
    mov    %eax,0x410(%esp)
    mov    %eax,0x414(%esp)
    mov    %eax,0x418(%esp)
    flds   (%ecx)
    fadds  0x41c(%esp)
    fstps  0x410(%esp)
    flds   0x4(%ecx)
    fadds  0x420(%esp)
    mov    0x410(%esp),%eax
    fstps  0x414(%esp)
    flds   0x8(%ecx)
    mov    %eax,0x3c8(%esp)
    fadds  0x424(%esp)
    mov    0x414(%esp),%eax
    fstps  0x418(%esp)
    mov    %eax,0x3cc(%esp)
    mov    0x418(%esp),%eax
    mov    0x1ac(%esp,%edx,1),%ebx
    mov    %eax,0x3d0(%esp)
    mov    0x410(%esp),%eax
    mov    %eax,0x9e(%ebx)
    mov    0x3cc(%esp),%eax
    mov    %eax,0xa2(%ebx)
    add    $0x9e,%ebx
    mov    0x3d0(%esp),%eax
    mov    %eax,0x8(%ebx)
  jump_4759b:
    mov    0x4e8(%esp),%eax
    add    $0x4,%edx
    cmp    %eax,%edx
    jge    jump_47bd0
    jmp    jump_473ad
  jump_475b2:
    mov    0x98(%esi),%eax
    mov    0x8c(%esi),%edx
    mov    0x4a(%edi),%ebx
    sub    %edx,%eax
    cmp    %ebx,%eax
    jle    jump_475c9
    mov    %ebx,%eax
  jump_475c9:
    add    %eax,0x8c(%esi)
    mov    0x8c(%ebp),%esi
    sub    %eax,%esi
    mov    %esi,0x8c(%ebp)
    cmp    $0x1,%esi
    jge    jump_47bd0
    mov    %ebp,%eax
    call   func_4517c
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47600:
    mov    0x18(%esi),%eax
    sub    0x88(%esi),%eax
    cmp    %edx,%eax
    jle    jump_4760f
    mov    %edx,%eax
  jump_4760f:
    add    %eax,0x88(%esi)
    sub    %eax,0x88(%ebp)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4762e:
    mov    %esp,%edx
    mov    0x59(%ebp),%eax
    call   func_1d754
    xor    %ebp,%ebp
    cmp    %eax,%ebp
    jge    jump_47bd0
    lea    0x9e(%esi),%ebx
    shl    $0x2,%eax
    lea    0x0(,%ebp,4),%edx
    mov    %eax,0x4e4(%esp)
  jump_47659:
    mov    (%esp,%edx,1),%ecx
    cmp    %ecx,%esi
    je     jump_477f2
    lea    0x9e(%ecx),%eax
    lea    0x404(%esp),%ecx
    mov    %ecx,0x4bc(%esp)
    xor    %ecx,%ecx
    mov    %ecx,0x3f8(%esp)
    mov    %ecx,0x3fc(%esp)
    mov    %ecx,0x400(%esp)
    flds   (%eax)
    fsubs  (%ebx)
    fstps  0x3f8(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%ebx)
    fstps  0x3fc(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%ebx)
    mov    0x3f8(%esp),%eax
    fstps  0x400(%esp)
    flds   0x3fc(%esp)
    fmul   %st(0),%st
    mov    %eax,0x404(%esp)
    mov    0x3fc(%esp),%eax
    flds   0x3f8(%esp)
    fmul   %st(0),%st
    mov    %eax,0x408(%esp)
    faddp  %st,%st(1)
    mov    0x400(%esp),%eax
    flds   0x400(%esp)
    fmul   %st(0),%st
    mov    %eax,0x40c(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    0x4a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x500(%esp)
    fildl  0x500(%esp)
    fstps  0x4ec(%esp)
    fcomps 0x4ec(%esp)
    fnstsw %ax
    sahf
    jae    jump_477f2
    lea    0x404(%esp),%eax
    push   0x4ec(%esp)
    call   func_4e444
    lea    0x3d4(%esp),%eax
    mov    %ecx,0x428(%esp)
    mov    %ecx,0x42c(%esp)
    mov    %ecx,0x430(%esp)
    mov    %eax,0x4b4(%esp)
    flds   (%ebx)
    fadds  0x404(%esp)
    fstps  0x428(%esp)
    flds   0x4(%ebx)
    fadds  0x408(%esp)
    mov    0x428(%esp),%eax
    fstps  0x42c(%esp)
    flds   0x8(%ebx)
    mov    %eax,0x3d4(%esp)
    fadds  0x40c(%esp)
    mov    0x42c(%esp),%eax
    fstps  0x430(%esp)
    mov    %eax,0x3d8(%esp)
    mov    0x430(%esp),%eax
    mov    (%esp,%edx,1),%ecx
    mov    %eax,0x3dc(%esp)
    mov    0x428(%esp),%eax
    mov    %eax,0x9e(%ecx)
    mov    0x3d8(%esp),%eax
    mov    %eax,0xa2(%ecx)
    add    $0x9e,%ecx
    mov    0x3dc(%esp),%eax
    mov    %eax,0x8(%ecx)
  jump_477f2:
    mov    0x4e4(%esp),%eax
    add    $0x4,%edx
    inc    %ebp
    cmp    %eax,%edx
    jge    jump_47bd0
    jmp    jump_47659
  jump_4780a:
    mov    0x15e(%esi),%ebx
    test   %ebx,%ebx
    je     jump_47bd0
    mov    data_92e10,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %edx,%ebp
    xor    %eax,%eax
    xor    %edx,%edx
    test   %ebx,%ebx
    jg     jump_47842
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47842:
    mov    %esi,%ebx
  jump_47844:
    cmpb   $0xff,0xab(%ebx)
    je     jump_4786e
    cmp    %ebp,%edx
    jne    jump_4786d
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_44b34
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4786d:
    inc    %edx
  jump_4786e:
    inc    %eax
    mov    0x15e(%esi),%ecx
    add    $0x7,%ebx
    cmp    %ecx,%eax
    jl     jump_47844
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4788f:
    mov    $0x5,%cl
    cmpb   $0x32,0x504(%esp)
    jne    jump_4789d
    xor    %cl,%cl
  jump_4789d:
    lea    0xab(%esi),%eax
    mov    0x15a(%esi),%ebx
    xor    %ebp,%ebp
    xor    %edx,%edx
    test   %ebx,%ebx
    jle    jump_478d9
    jmp    jump_478c1
  jump_478b3:
    inc    %edx
    mov    0x15a(%esi),%edi
    add    $0x7,%eax
    cmp    %edi,%edx
    jge    jump_478d9
  jump_478c1:
    mov    (%eax),%bl
    cmp    $0xff,%bl
    je     jump_478b3
    movsbl %bl,%ebx
    imul   $0x6a,%ebx,%ebx
    cmp    data_f653e(%ebx),%cl
    jne    jump_478b3
    inc    %ebp
    jmp    jump_478b3
  jump_478d9:
    mov    0x8c(%esi),%eax
    sub    %ebp,%eax
    mov    %eax,0x8c(%esi)
    cmp    $0x1,%eax
    jge    jump_47bd0
    mov    0x4e0(%esp),%ch
    mov    %esi,%eax
    or     $0x4,%ch
    call   func_4517c
    mov    %ch,0x4e0(%esp)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4791b:
    xor    %al,%al
    mov    %al,0x508(%esp)
    cmpb   $0x42,0x504(%esp)
    jne    jump_47936
    movb   $0x5,0x508(%esp)
  jump_47936:
    lea    0xab(%esi),%edx
    mov    0x15a(%esi),%ecx
    xor    %ebp,%ebp
    xor    %eax,%eax
    test   %ecx,%ecx
    jle    jump_47981
    xor    %ebx,%ebx
  jump_4794c:
    mov    (%edx),%cl
    cmp    $0xff,%cl
    je     jump_47973
    movsbl %cl,%ecx
    imul   $0x6a,%ecx,%ecx
    mov    data_f653e(%ecx),%cl
    cmp    0x508(%esp),%cl
    jne    jump_47973
    add    $0x4,%ebx
    inc    %ebp
    mov    %eax,0x354(%esp,%ebx,1)
  jump_47973:
    inc    %eax
    mov    0x15a(%esi),%ecx
    add    $0x7,%edx
    cmp    %ecx,%eax
    jl     jump_4794c
  jump_47981:
    test   %ebp,%ebp
    je     jump_47bd0
    mov    data_92e10,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebp
    mov    %esi,%eax
    mov    0x358(%esp,%edx,4),%edx
    call   func_44b34
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_479b6:
    mov    %esi,%eax
    call   func_4517c
    lea    0xab(%ebp),%edx
    mov    0x63(%ebp),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x7,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x4e0(%esp),%bh
    mov    %eax,%edx
    mov    %ebp,%eax
    or     $0x4,%bh
    call   func_44b34
    mov    %bh,0x4e0(%esp)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47a01:
    mov    0x15a(%esi),%edi
    xor    %ebx,%ebx
    lea    0xab(%esi),%ecx
    jmp    jump_47a1b
  jump_47a11:
    inc    %ebx
    mov    0x15a(%esi),%edi
    add    $0x7,%ecx
  jump_47a1b:
    cmp    %edi,%ebx
    jge    jump_47bd0
    mov    (%ecx),%al
    cmp    $0x47,%al
    je     jump_47a2d
    cmp    $0x49,%al
    jne    jump_47a11
  jump_47a2d:
    mov    %ebx,%edx
    mov    %esi,%eax
    call   func_44b34
    jmp    jump_47a11
  jump_47a38:
    mov    0x9c(%esi),%dh
    movl   $0x0,0x94(%esi)
    or     $0x1,%dh
    mov    %dh,0x9c(%esi)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47a64:
    mov    0x4d4(%esp),%eax
    mov    0x88(%ebp),%edx
    sub    %eax,%edx
    mov    0x504(%esp),%al
    mov    %edx,0x88(%ebp)
    cmp    $0x32,%al
    jb     jump_47b3a
    jbe    jump_4788f
    lea    0x9e(%esi),%ebx
    cmp    $0x3d,%al
    jb     jump_47aec
    jbe    jump_479b6
    cmp    $0x42,%al
    jb     jump_47ad1
    jbe    jump_4791b
    cmp    $0x44,%al
    jb     jump_47bd0
    jbe    jump_47600
    cmp    $0x4a,%al
    je     jump_47386
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47ad1:
    cmp    $0x40,%al
    je     jump_4780a
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47aec:
    lea    0x9e(%ebp),%edx
    cmp    $0x36,%al
    jb     jump_47b1f
    jbe    jump_4788f
    cmp    $0x37,%al
    jbe    jump_4715a
    cmp    $0x3b,%al
    je     jump_475b2
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47b1f:
    cmp    $0x34,%al
    je     jump_471b7
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47b3a:
    cmp    $0x25,%al
    jb     jump_47ba3
    jbe    jump_4791b
    cmp    $0x2d,%al
    jb     jump_47b88
    jbe    jump_46ff8
    cmp    $0x30,%al
    jb     jump_47bd0
    jbe    jump_47a01
    mov    0x9c(%esi),%ch
    movl   $0x0,0x90(%esi)
    or     $0x8,%ch
    mov    %ch,0x9c(%esi)
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47b88:
    cmp    $0x28,%al
    je     jump_4762e
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47ba3:
    cmp    $0x22,%al
    jb     jump_47bc8
    jbe    jump_46fdd
    cmp    $0x23,%al
    je     jump_47369
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47bc8:
    cmp    $0x21,%al
    je     jump_47a38
  jump_47bd0:
    mov    0x4e0(%esp),%eax
    add    $0x50c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_47be4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4c,%esp
    mov    %eax,0x44(%esp)
    mov    %edx,0x2c(%esp)
    mov    0x63(%eax),%ecx
    mov    (%ecx),%cl
    movsbl %cl,%eax
    imul   $0x6a,%eax,%eax
    xor    %edx,%edx
    mov    $data_f650c,%esi
    mov    %edx,0x40(%esp)
    mov    %edx,0x34(%esp)
    mov    0x44(%esp),%edx
    add    %eax,%esi
    mov    $0xffffffff,%edi
    mov    0x88(%edx),%ebp
    mov    0x36(%esi),%eax
    mov    %edi,0x30(%esp)
    cmp    %ebp,%eax
    jg     jump_47c30
    mov    %eax,0x34(%esp)
    jmp    jump_47c36
  jump_47c30:
    xor    %eax,%eax
    mov    %eax,0x30(%esp)
  jump_47c36:
    mov    0x44(%esp),%ebp
    mov    0x68(%ebp),%ebp
    test   %ebp,%ebp
    jne    jump_47c52
    mov    $0x217,%ebx
    mov    $data_82753,%edx
    xor    %eax,%eax
    call   func_25878
  jump_47c52:
    mov    0x0(%ebp),%eax
    mov    %eax,(%esp)
    mov    0x4(%ebp),%eax
    mov    %eax,0x4(%esp)
    mov    0x8(%ebp),%eax
    mov    0x44(%esp),%edx
    mov    %eax,0x8(%esp)
    mov    (%esp),%eax
    mov    %eax,0x78(%edx)
    mov    0x4(%esp),%eax
    mov    %eax,0x7c(%edx)
    add    $0x78,%edx
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%edx)
    cmpl   $0x0,0x3a(%esi)
    je     jump_47d6d
    mov    0x44(%esp),%eax
    lea    0xc(%esp),%edx
    xor    %ebx,%ebx
    mov    %edx,0x24(%esp)
    mov    %ebx,0x18(%esp)
    mov    %ebx,0x1c(%esp)
    mov    %ebx,0x20(%esp)
    flds   (%esp)
    fsubs  0x9e(%eax)
    fstps  0x18(%esp)
    flds   0x4(%esp)
    fsubs  0xa2(%eax)
    fstps  0x1c(%esp)
    flds   0x8(%esp)
    fsubs  0xa6(%eax)
    add    $0x9e,%eax
    fstps  0x20(%esp)
    mov    0x18(%esp),%eax
    flds   0x1c(%esp)
    fmul   %st(0),%st
    mov    %eax,0xc(%esp)
    mov    0x1c(%esp),%eax
    flds   0x18(%esp)
    fmul   %st(0),%st
    mov    %eax,0x10(%esp)
    faddp  %st,%st(1)
    mov    0x20(%esp),%eax
    flds   0x20(%esp)
    fmul   %st(0),%st
    mov    %eax,0x14(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    0x3a(%esi),%eax
    shl    $0x5,%eax
    mov    %eax,0x28(%esp)
    mov    0x44(%esp),%eax
    mov    0x9c(%eax),%ax
    xor    %ah,%ah
    fstps  0x38(%esp)
    and    $0x4,%al
    fildl  0x28(%esp)
    cwtl
    fstps  0x3c(%esp)
    test   %eax,%eax
    je     jump_47d44
    flds   0x3c(%esp)
    fmuls  data_82762
    fstps  0x3c(%esp)
  jump_47d44:
    flds   0x38(%esp)
    fcomps 0x3c(%esp)
    fnstsw %ax
    sahf
    jbe    jump_47d53
    xor    %edi,%edi
  jump_47d53:
    cmp    $0x2f,%cl
    jne    jump_47d6d
    flds   0x38(%esp)
    fld    %st(0)
    fmull  data_82766
    fcompp
    fnstsw %ax
    sahf
    jbe    jump_47d6d
    xor    %edi,%edi
  jump_47d6d:
    cmpl   $0x0,0x30(%esp)
    je     jump_47d8c
    test   %edi,%edi
    je     jump_47d8c
    mov    0x33(%esi),%ax
    xor    %ah,%ah
    and    $0xc,%al
    cwtl
    test   %eax,%eax
    je     jump_47d8c
    mov    $0x1,%eax
    jmp    jump_47d8e
  jump_47d8c:
    xor    %eax,%eax
  jump_47d8e:
    or     %eax,0x40(%esp)
    testb  $0x1,0x40(%esp)
    je     jump_47e93
    cmpl   $0x1,0x2c(%esp)
    jne    jump_47e93
    mov    0x44(%esp),%edx
    mov    0x34(%esp),%eax
    sub    %eax,0x88(%edx)
    cmpb   $0x0,0x32(%esi)
    jne    jump_47e8a
    mov    0x44(%esp),%ebx
    mov    %ebp,%eax
    mov    0x54(%ebx),%ebx
    mov    0x52(%esi),%edx
    sar    $0x10,%ebx
    call   func_35350
    mov    0x40(%esp),%eax
    add    $0x4c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47de1:
    mov    0x10(%ebp),%esi
    xor    %eax,%eax
    xor    %edi,%edi
    mov    %eax,0x48(%esp)
    jmp    jump_47df2
  jump_47dee:
    inc    %edi
    add    $0x4,%esi
  jump_47df2:
    xor    %eax,%eax
    mov    0x18(%ebp),%ax
    cmp    %eax,%edi
    jge    jump_47e53
    cmpl   $0x5,0x48(%esp)
    jge    jump_47e53
    xor    %eax,%eax
    mov    (%esi),%al
    cmp    $0xff,%eax
    je     jump_47dee
    mov    0x2(%esi),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_47dee
    xor    %eax,%eax
    mov    0x1(%esi),%al
    imul   $0x28,%eax,%eax
    mov    data_f3e40(%eax),%eax
    sar    $0x18,%eax
    test   %eax,%eax
    jne    jump_47dee
    mov    $0x1,%ecx
    mov    $0xff,%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    %di,%dx
    call   func_33c90
    cmp    $0xffffffff,%eax
    jne    jump_47dee
    incl   0x48(%esp)
    jmp    jump_47dee
  jump_47e53:
    mov    0x44(%esp),%edx
    mov    0x44(%esp),%eax
    add    $0xab,%edx
    mov    0x63(%eax),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x7,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    mov    0x44(%esp),%eax
    call   func_44b34
    mov    0x40(%esp),%eax
    add    $0x4c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_47e8a:
    cmp    $0x46,%cl
    je     jump_47de1
  jump_47e93:
    mov    0x40(%esp),%eax
    add    $0x4c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_47ea0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x64,%esp
    mov    %eax,%edi
    mov    %edx,0x4c(%esp)
    mov    0x63(%eax),%ecx
    mov    (%ecx),%cl
    movsbl %cl,%eax
    imul   $0x6a,%eax,%eax
    mov    $0xffffffff,%ebx
    xor    %edx,%edx
    mov    $data_f650c,%ebp
    mov    %edx,0x5c(%esp)
    mov    %ebx,0x58(%esp)
    add    %eax,%ebp
    mov    %edx,0x50(%esp)
    mov    0x88(%edi),%edx
    mov    0x36(%ebp),%eax
    mov    %ebx,0x54(%esp)
    cmp    %edx,%eax
    jg     jump_47eea
    mov    %eax,0x50(%esp)
    jmp    jump_47ef0
  jump_47eea:
    xor    %ebx,%ebx
    mov    %ebx,0x54(%esp)
  jump_47ef0:
    mov    0x68(%edi),%esi
    test   %esi,%esi
    jne    jump_47f08
    mov    $0x275,%ebx
    mov    $data_8276e,%edx
    xor    %eax,%eax
    call   func_25878
  jump_47f08:
    lea    0x14(%esi),%edx
    mov    (%edx),%eax
    mov    %eax,0x30(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x34(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x38(%esp)
    mov    (%esi),%eax
    cmp    0x59(%edi),%eax
    jne    jump_47f3d
    lea    0x8(%esi),%edx
    mov    (%edx),%eax
    mov    %eax,0x30(%esp)
    mov    0x4(%edx),%eax
    mov    %eax,0x34(%esp)
    mov    0x8(%edx),%eax
    mov    %eax,0x38(%esp)
  jump_47f3d:
    lea    0x78(%edi),%edx
    mov    0x30(%esp),%eax
    mov    %eax,(%edx)
    mov    0x34(%esp),%eax
    mov    %eax,0x4(%edx)
    mov    0x38(%esp),%eax
    xor    %ebx,%ebx
    mov    %eax,0x8(%edx)
    mov    %esp,%edx
    lea    0x9e(%edi),%eax
    mov    %ebx,0x24(%esp)
    mov    %ebx,0x28(%esp)
    mov    %ebx,0x2c(%esp)
    mov    %edx,0x3c(%esp)
    flds   0x30(%esp)
    fsubs  (%eax)
    fstps  0x24(%esp)
    flds   0x34(%esp)
    fsubs  0x4(%eax)
    fstps  0x28(%esp)
    flds   0x38(%esp)
    fsubs  0x8(%eax)
    fstps  0x2c(%esp)
    mov    0x24(%esp),%eax
    flds   0x28(%esp)
    fmul   %st(0),%st
    mov    %eax,(%esp)
    mov    0x28(%esp),%eax
    flds   0x24(%esp)
    fmul   %st(0),%st
    mov    %eax,0x4(%esp)
    faddp  %st,%st(1)
    mov    0x2c(%esp),%eax
    flds   0x2c(%esp)
    fmul   %st(0),%st
    mov    %eax,0x8(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    0x3a(%ebp),%eax
    fstps  0x48(%esp)
    test   %eax,%eax
    je     jump_47fe9
    shl    $0x5,%eax
    mov    %eax,0x40(%esp)
    fildl  0x40(%esp)
    fcomps 0x48(%esp)
    fnstsw %ax
    sahf
    jae    jump_47fe9
    mov    %ebx,0x58(%esp)
  jump_47fe9:
    cmpl   $0x0,0x54(%esp)
    je     jump_4800b
    cmpl   $0x0,0x58(%esp)
    je     jump_4800b
    mov    0x33(%ebp),%ax
    xor    %ah,%ah
    and    $0x2,%al
    cwtl
    test   %eax,%eax
    je     jump_4800b
    mov    $0x1,%eax
    jmp    jump_4800d
  jump_4800b:
    xor    %eax,%eax
  jump_4800d:
    mov    0x5c(%esp),%edx
    or     %eax,%edx
    mov    0x4c(%esp),%ebx
    mov    %edx,0x5c(%esp)
    cmp    $0x1,%ebx
    jne    jump_481d2
    testb  $0x1,0x5c(%esp)
    je     jump_481d2
    mov    0x50(%esp),%eax
    sub    %eax,0x88(%edi)
    cmpb   $0x0,0x32(%ebp)
    jne    jump_481a1
    cmpl   $0x1,0x52(%ebp)
    jle    jump_481a1
    andb   $0xfd,0x23(%esi)
    mov    0x5c(%esp),%eax
    add    $0x64,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4805e:
    orb    $0x2,0x23(%esi)
    mov    0x5c(%esp),%eax
    add    $0x64,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4806f:
    mov    (%esi),%eax
    cmp    0x59(%edi),%eax
    jne    jump_48079
    mov    0x4(%esi),%eax
  jump_48079:
    mov    $0x1,%dl
    mov    0x56(%edi),%cl
    shl    %cl,%dl
    or     %dl,0x17(%eax)
    mov    0x5c(%esp),%eax
    add    $0x64,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_48090:
    lea    0xc(%esp),%ebx
    mov    0x4(%esi),%edx
    mov    (%esi),%eax
    mov    %ebx,0x44(%esp)
    xor    %ebx,%ebx
    mov    %ebx,0x18(%esp)
    mov    %ebx,0x1c(%esp)
    mov    %ebx,0x20(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%edx)
    fstps  0x18(%esp)
    flds   0xc(%eax)
    fsubs  0xc(%edx)
    add    $0x8,%eax
    fstps  0x1c(%esp)
    flds   0x8(%eax)
    fsubs  0x10(%edx)
    mov    0x18(%esp),%eax
    fstps  0x20(%esp)
    flds   0x1c(%esp)
    fmul   %st(0),%st
    mov    %eax,0xc(%esp)
    mov    0x1c(%esp),%eax
    flds   0x18(%esp)
    fmul   %st(0),%st
    mov    %eax,0x10(%esp)
    faddp  %st,%st(1)
    mov    0x20(%esp),%eax
    flds   0x20(%esp)
    fmul   %st(0),%st
    mov    %eax,0x14(%esp)
    sub    $0x8,%esp
    faddp  %st,%st(1)
    add    $0x8,%edx
    fstpl  (%esp)
    xor    %edx,%edx
    call   func_721f0
    fstps  0x60(%esp)
    mov    $data_ba095,%eax
  jump_48113:
    mov    data_c3489,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%edx
    jge    jump_48174
    mov    0x54(%eax),%ecx
    sar    $0x10,%ecx
    cmp    $0xffffffff,%ecx
    je     jump_48141
    cmpb   $0x5,0x58(%eax)
    jne    jump_48140
    cmp    0x59(%eax),%esi
    jne    jump_48140
    mov    0x60(%esp),%ecx
    mov    %ecx,0x9e(%eax)
  jump_48140:
    inc    %edx
  jump_48141:
    inc    %ebx
    add    $0x162,%eax
    cmp    $0x6b,%ebx
    jl     jump_48113
    jmp    jump_48174
  jump_4814e:
    mov    (%esi),%ecx
    cmp    0x59(%edi),%ecx
    jne    jump_48158
    mov    0x4(%esi),%ecx
  jump_48158:
    mov    %edi,%edx
    mov    0x59(%edi),%eax
    call   func_1d4f8
    xor    %ebx,%ebx
    mov    %edi,%edx
    movb   $0x5,0x58(%edi)
    mov    %ecx,%eax
    mov    %esi,0x59(%edi)
    call   func_1d3a8
  jump_48174:
    lea    0xab(%edi),%edx
    mov    0x63(%edi),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x7,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    mov    %edi,%eax
    call   func_44b34
    mov    0x5c(%esp),%eax
    add    $0x64,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_481a1:
    cmp    $0x33,%cl
    jb     jump_481c9
    jbe    jump_48090
    cmp    $0x3c,%cl
    jb     jump_481d2
    jbe    jump_4814e
    cmp    $0x3e,%cl
    je     jump_4806f
    mov    0x5c(%esp),%eax
    add    $0x64,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_481c9:
    cmp    $0x20,%cl
    je     jump_4805e
  jump_481d2:
    mov    0x5c(%esp),%eax
    add    $0x64,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_481e0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x75c,%esp
    mov    %eax,%esi
    mov    %edx,0x73c(%esp)
    mov    $0xffffffff,%ebx
    mov    0x63(%eax),%ecx
    xor    %edx,%edx
    xor    %ebp,%ebp
    mov    %edx,0x72c(%esp)
    mov    (%ecx),%cl
    mov    %ebx,0x728(%esp)
    cmp    $0xff,%cl
    jne    jump_48226
    mov    $0x2ea,%ebx
    mov    $data_8277d,%edx
    xor    %eax,%eax
    call   func_25878
  jump_48226:
    movsbl %cl,%eax
    imul   $0x6a,%eax,%eax
    mov    $data_f650c,%edi
    add    %eax,%edi
    mov    0x88(%esi),%edx
    mov    0x36(%edi),%eax
    cmp    %edx,%eax
    jg     jump_48244
    mov    %eax,%ebp
    jmp    jump_4824d
  jump_48244:
    xor    %ebx,%ebx
    mov    %ebx,0x728(%esp)
  jump_4824d:
    cmpl   $0x0,0x728(%esp)
    setne  %al
    mov    0x72c(%esp),%ebx
    and    $0xff,%eax
    or     %eax,%ebx
    mov    %ebx,0x72c(%esp)
    testb  $0x1,0x72c(%esp)
    je     jump_48ad0
    cmpl   $0x1,0x73c(%esp)
    je     jump_489e4
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4829c:
    lea    0x6bc(%esp),%eax
    xor    %edi,%edi
    mov    %eax,0x714(%esp)
    mov    %edi,0x704(%esp)
    mov    %edi,0x708(%esp)
    mov    %edi,0x70c(%esp)
    flds   0x9e(%esi)
    fchs
    fstps  0x704(%esp)
    flds   0xa2(%esi)
    mov    0x704(%esp),%eax
    fchs
    fstps  0x708(%esp)
    flds   0xa6(%esi)
    fchs
    mov    %eax,0x6bc(%esp)
    mov    0x708(%esp),%eax
    fstps  0x70c(%esp)
    mov    %eax,0x6c0(%esp)
    mov    0x70c(%esp),%eax
    mov    %eax,0x6c4(%esp)
    mov    0x704(%esp),%eax
    mov    %eax,0x9e(%esi)
    mov    0x6c0(%esp),%eax
    mov    %eax,0xa2(%esi)
    add    $0x9e,%esi
    mov    0x6c4(%esp),%eax
    mov    %eax,0x8(%esi)
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_48355:
    lea    0x358(%esp),%edx
    mov    0x59(%esi),%eax
    call   func_1d754
    test   %eax,%eax
    jle    jump_48ad0
    lea    0x0(,%eax,4),%ebx
    xor    %edx,%edx
  jump_48375:
    mov    0x358(%esp,%edx,1),%eax
    cmpb   $0x4,0x58(%eax)
    jne    jump_4843b
    flds   0xa2(%eax)
    fmul   %st(0),%st
    flds   0x9e(%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0xa6(%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    add    $0x9e,%eax
    call   func_721f0
    mov    0x4e(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x758(%esp)
    fstps  0x748(%esp)
    fildl  0x758(%esp)
    fstps  0x750(%esp)
    flds   0x748(%esp)
    fcomps 0x750(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4843b
    mov    0x4a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x758(%esp)
    fildl  0x758(%esp)
    fsubrs 0x748(%esp)
    fsts   0x754(%esp)
    fcomps 0x750(%esp)
    fnstsw %ax
    sahf
    jae    jump_48423
    mov    0x750(%esp),%eax
    mov    %eax,0x754(%esp)
  jump_48423:
    mov    0x358(%esp,%edx,1),%eax
    add    $0x9e,%eax
    push   0x754(%esp)
    call   func_4e444
  jump_4843b:
    add    $0x4,%edx
    cmp    %ebx,%edx
    jge    jump_48ad0
    jmp    jump_48375
  jump_4844b:
    mov    0x4a(%edi),%eax
    mov    0x8c(%esi),%edi
    add    %eax,%edi
    mov    0x98(%esi),%ebp
    mov    %edi,0x8c(%esi)
    cmp    %ebp,%edi
    jle    jump_48ad0
    mov    %ebp,0x8c(%esi)
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_48483:
    mov    %esi,%edx
    mov    0x59(%esi),%eax
    call   func_1d4f8
    mov    0x54(%esi),%edx
    sar    $0x10,%edx
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %ebx,%ebx
    mov    data_92e1d(,%eax,2),%eax
    mov    %esi,%edx
    mov    %eax,0x59(%esi)
    call   func_1d3a8
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_484c5:
    lea    0x504(%esp),%edx
    mov    0x59(%esi),%eax
    call   func_1d754
    test   %eax,%eax
    jle    jump_4865e
    lea    0x9e(%esi),%edx
    shl    $0x2,%eax
    xor    %ebp,%ebp
    mov    %edx,0x74c(%esp)
    mov    %eax,0x730(%esp)
  jump_484f5:
    mov    0x504(%esp,%ebp,1),%edx
    cmp    %edx,%esi
    je     jump_485e6
    lea    0x9e(%edx),%eax
    xor    %ebx,%ebx
    lea    0x6f8(%esp),%edx
    mov    %ebx,0x6ec(%esp)
    mov    %ebx,0x6f0(%esp)
    mov    %ebx,0x6f4(%esp)
    mov    %edx,0x718(%esp)
    mov    0x74c(%esp),%edx
    flds   (%eax)
    fsubs  (%edx)
    fstps  0x6ec(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%edx)
    fstps  0x6f0(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%edx)
    mov    0x6ec(%esp),%eax
    fstps  0x6f4(%esp)
    flds   0x6f0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x6f8(%esp)
    mov    0x6f0(%esp),%eax
    flds   0x6ec(%esp)
    fmul   %st(0),%st
    mov    %eax,0x6fc(%esp)
    faddp  %st,%st(1)
    mov    0x6f4(%esp),%eax
    flds   0x6f4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x700(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    0x3a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x758(%esp)
    fildl  0x758(%esp)
    fcompp
    fnstsw %ax
    sahf
    jb     jump_485e6
    mov    0x73c(%esp),%edx
    mov    0x54(%esi),%ecx
    mov    0x4a(%edi),%ebx
    mov    0x504(%esp,%ebp,1),%eax
    sar    $0x10,%ecx
    call   func_46b90
  jump_485e6:
    mov    0x730(%esp),%eax
    add    $0x4,%ebp
    cmp    %eax,%ebp
    jge    jump_4865e
    jmp    jump_484f5
  jump_485f9:
    mov    0x4a(%edi),%edx
    mov    0x88(%esi),%ebx
    add    %edx,%ebx
    mov    0x63(%esi),%edx
    mov    %ebx,0x88(%esi)
    sub    %eax,%edx
    mov    $0x7,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_44b34
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_48637:
    mov    0x4a(%edi),%eax
    sub    %eax,0x8c(%esi)
    mov    0x88(%esi),%ebx
    add    0x4e(%edi),%ebx
    mov    0x8c(%esi),%ecx
    mov    %ebx,0x88(%esi)
    cmp    $0x1,%ecx
    jge    jump_48ad0
  jump_4865e:
    mov    %esi,%eax
    call   func_4517c
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_48678:
    mov    0x15a(%esi),%ecx
    xor    %edx,%edx
    test   %ecx,%ecx
    jle    jump_48ad0
    jmp    jump_4869c
  jump_4868a:
    inc    %edx
    mov    0x15a(%esi),%ebx
    add    $0x7,%eax
    cmp    %ebx,%edx
    jge    jump_48ad0
  jump_4869c:
    mov    (%eax),%bh
    cmp    $0xff,%bh
    je     jump_4868a
    cmp    $0x41,%bh
    je     jump_4868a
    movsbl %bh,%ebx
    imul   $0x6a,%ebx,%ebx
    cmpl   $0x0,data_f654e(%ebx)
    je     jump_4868a
    mov    data_f654e(%ebx),%bx
    mov    %bx,0x1(%eax)
    jmp    jump_4868a
  jump_486c4:
    lea    0x1ac(%esp),%edx
    mov    0x59(%esi),%eax
    call   func_1d754
    xor    %ebx,%ebx
    mov    %eax,%edx
    mov    %ebx,0x740(%esp)
    cmp    %ebx,%eax
    jle    jump_4874f
    lea    0x0(,%eax,4),%edx
    lea    0x0(,%ebx,4),%ebp
    mov    %edx,0x734(%esp)
  jump_486fb:
    mov    0x1ac(%esp,%ebp,1),%eax
    mov    0x54(%esi),%ecx
    mov    0x54(%eax),%edx
    sar    $0x10,%ecx
    sar    $0x10,%edx
    cmp    %ecx,%edx
    je     jump_48732
    imul   $0x1ee,%ecx,%ebx
    add    %ebx,%edx
    cmpb   $0x2,data_92fd6(%edx)
    jne    jump_48732
    mov    0x73c(%esp),%edx
    mov    0x4a(%edi),%ebx
    call   func_46b90
  jump_48732:
    mov    0x740(%esp),%edx
    mov    0x734(%esp),%ebx
    inc    %edx
    add    $0x4,%ebp
    mov    %edx,0x740(%esp)
    cmp    %ebx,%ebp
    jl     jump_486fb
  jump_4874f:
    lea    0xab(%esi),%edx
    mov    0x63(%esi),%eax
    sub    %edx,%eax
    mov    %eax,%edx
    mov    $0x7,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_44b34
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_48782:
    mov    %esp,%edx
    mov    0x59(%esi),%eax
    xor    %ebp,%ebp
    call   func_1d754
    cmp    %eax,%ebp
    jge    jump_48ad0
    lea    0x9e(%esi),%edx
    shl    $0x2,%eax
    lea    0x0(,%ebp,4),%ebx
    mov    %eax,0x738(%esp)
  jump_487ad:
    mov    (%esp,%ebx,1),%ecx
    cmp    %ecx,%esi
    je     jump_48946
    lea    0x9e(%ecx),%eax
    lea    0x6d4(%esp),%ecx
    mov    %ecx,0x720(%esp)
    xor    %ecx,%ecx
    mov    %ecx,0x6b0(%esp)
    mov    %ecx,0x6b4(%esp)
    mov    %ecx,0x6b8(%esp)
    flds   (%eax)
    fsubs  (%edx)
    fstps  0x6b0(%esp)
    flds   0x4(%eax)
    fsubs  0x4(%edx)
    fstps  0x6b4(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%edx)
    mov    0x6b0(%esp),%eax
    fstps  0x6b8(%esp)
    flds   0x6b4(%esp)
    fmul   %st(0),%st
    mov    %eax,0x6d4(%esp)
    mov    0x6b4(%esp),%eax
    flds   0x6b0(%esp)
    fmul   %st(0),%st
    mov    %eax,0x6d8(%esp)
    faddp  %st,%st(1)
    mov    0x6b8(%esp),%eax
    flds   0x6b8(%esp)
    fmul   %st(0),%st
    mov    %eax,0x6dc(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    mov    0x4a(%edi),%eax
    shl    $0x5,%eax
    mov    %eax,0x758(%esp)
    fildl  0x758(%esp)
    fstps  0x744(%esp)
    fcomps 0x744(%esp)
    fnstsw %ax
    sahf
    jae    jump_48946
    lea    0x6d4(%esp),%eax
    push   0x744(%esp)
    call   func_4e444
    lea    0x6c8(%esp),%eax
    mov    %ecx,0x6e0(%esp)
    mov    %ecx,0x6e4(%esp)
    mov    %ecx,0x6e8(%esp)
    mov    %eax,0x710(%esp)
    flds   (%edx)
    fadds  0x6d4(%esp)
    fstps  0x6e0(%esp)
    flds   0x4(%edx)
    fadds  0x6d8(%esp)
    mov    0x6e0(%esp),%eax
    fstps  0x6e4(%esp)
    flds   0x8(%edx)
    mov    %eax,0x6c8(%esp)
    fadds  0x6dc(%esp)
    mov    0x6e4(%esp),%eax
    fstps  0x6e8(%esp)
    mov    %eax,0x6cc(%esp)
    mov    0x6e8(%esp),%eax
    mov    (%esp,%ebx,1),%ecx
    mov    %eax,0x6d0(%esp)
    mov    0x6e0(%esp),%eax
    mov    %eax,0x9e(%ecx)
    mov    0x6cc(%esp),%eax
    mov    %eax,0xa2(%ecx)
    add    $0x9e,%ecx
    mov    0x6d0(%esp),%eax
    mov    %eax,0x8(%ecx)
  jump_48946:
    mov    0x738(%esp),%eax
    add    $0x4,%ebx
    inc    %ebp
    cmp    %eax,%ebx
    jge    jump_48ad0
    jmp    jump_487ad
  jump_4895e:
    mov    $0x2,%edx
    mov    %esi,%eax
    call   func_44b64
    cmp    $0xffffffff,%eax
    je     jump_48ad0
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_44b34
    orb    $0x2,0x9c(%esi)
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_48996:
    orb    $0x4,0x9c(%esi)
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_489b0:
    orb    $0x10,0x9c(%esi)
    mov    0x63(%esi),%edx
    sub    %eax,%edx
    mov    $0x7,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_44b34
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_489e4:
    sub    %ebp,0x88(%esi)
    cmp    $0x39,%cl
    jb     jump_48a6e
    jbe    jump_48996
    cmp    $0x41,%cl
    jb     jump_48a49
    lea    0xab(%esi),%eax
    jbe    jump_48678
    cmp    $0x48,%cl
    jb     jump_48a2d
    jbe    jump_484c5
    cmp    $0x4b,%cl
    je     jump_485f9
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_48a2d:
    cmp    $0x45,%cl
    je     jump_489b0
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_48a49:
    cmp    $0x3a,%cl
    jbe    jump_4844b
    cmp    $0x3f,%cl
    je     jump_4895e
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_48a6e:
    cmp    $0x27,%cl
    jb     jump_48abc
    jbe    jump_48782
    cmp    $0x35,%cl
    jb     jump_48aa0
    jbe    jump_48637
    cmp    $0x38,%cl
    je     jump_48355
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_48aa0:
    cmp    $0x2e,%cl
    je     jump_4829c
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_48abc:
    cmp    $0x24,%cl
    jb     jump_48ad0
    jbe    jump_48483
    cmp    $0x26,%cl
    je     jump_486c4
  jump_48ad0:
    mov    0x72c(%esp),%eax
    add    $0x75c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_48af0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_86964,%eax
    call   func_73a9a
    mov    $data_f84d4,%eax
    mov    $0x1,%edx
    call   func_443d0
    mov    %edx,data_8696c
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_48b14:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %ebx,%edi
    test   %ecx,%ecx
    je     jump_48b2c
    push   $0x96
    push   %eax
    call   func_59d90
    add    $0x8,%esp
  jump_48b2c:
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd7c,%dx
    call   func_1b084
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_48b54
    mov    $0x34,%ebx
    mov    $data_8278c,%edx
    call   func_25878
  jump_48b54:
    push   $0x2d
    push   $0x3f
    push   %edi
    push   %ecx
    push   %esi
    call   func_57efc
    imul   $0x6a,%edi,%ecx
    add    $0x14,%esp
    push   $0x7a
    push   $0xff
    mov    $0x2,%ebx
    mov    $0x3f,%edx
    push   $0xffffffff
    mov    $data_fd382,%eax
    mov    $data_fd38a,%edi
    push   $0x8
    add    $data_f650c,%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_48b98:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %ebx,(%esp)
    mov    $0xffffffff,%ebx
    lea    -0x94(%edx),%esi
    lea    -0x16f(%eax),%ecx
    test   %esi,%esi
    jle    jump_48d11
    mov    %ecx,%edx
    mov    %ecx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %esi,%edx
    sub    %eax,%edx
    mov    %edx,0xc(%esp)
    add    $0x12,%edx
    add    %eax,%esi
    mov    %edx,0xc(%esp)
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,%edx
    mov    $0x12,%ecx
    sar    $0x1f,%edx
    mov    %eax,0xc(%esp)
    idiv   %ecx
    mov    %esi,0x8(%esp)
    lea    -0x12(%esi),%ecx
    mov    %eax,0xc(%esp)
    mov    %ecx,%edx
    mov    %ecx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %ecx,0x8(%esp)
    mov    %eax,%edx
    mov    $0x12,%ecx
    sar    $0x1f,%edx
    mov    %eax,0x8(%esp)
    idiv   %ecx
    mov    0xc(%esp),%edx
    mov    %eax,0x8(%esp)
    xor    %eax,%eax
    mov    data_8684c(%edx),%al
    mov    %eax,0x4(%esp)
    cmp    $0xe,%edx
    jge    jump_48d11
    mov    0x8(%esp),%eax
    mov    0x4(%esp),%edi
    cmp    %edi,%eax
    jl     jump_48d11
    xor    %eax,%eax
    mov    data_8685c(%edx),%al
    mov    0x8(%esp),%edx
    add    %edi,%eax
    cmp    %edx,%eax
    jle    jump_48d11
    mov    0xc(%esp),%eax
    mov    (%esp),%ecx
    shl    $0x2,%eax
    add    %ecx,%eax
    xor    %edx,%edx
    mov    0x8(%esp),%ecx
    mov    data_f64cc(%eax),%dl
    mov    $0x1,%eax
    sub    %edi,%ecx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_48d11
    mov    0xc(%esp),%ebp
    xor    %edi,%edi
    test   %ebp,%ebp
    jle    jump_48cdc
    mov    (%esp),%eax
    mov    %eax,0x10(%esp)
  jump_48c9b:
    mov    $0x1,%al
    mov    0x10(%esp),%ebp
    xor    %edx,%edx
    jmp    jump_48cbe
  jump_48ca5:
    mov    0x10(%esp),%eax
    mov    0xc(%esp),%edx
    add    $0x4,%eax
    inc    %edi
    mov    %eax,0x10(%esp)
    cmp    %edx,%edi
    jge    jump_48cdc
    jmp    jump_48c9b
  jump_48cbb:
    inc    %edx
    add    %al,%al
  jump_48cbe:
    xor    %ecx,%ecx
    mov    data_8685c(%edi),%cl
    cmp    %ecx,%edx
    jge    jump_48ca5
    xor    %ecx,%ecx
    movzbl data_f64cc(%ebp),%esi
    mov    %al,%cl
    test   %ecx,%esi
    je     jump_48cbb
    inc    %ebx
    jmp    jump_48cbb
  jump_48cdc:
    mov    0x8(%esp),%ebp
    mov    0x4(%esp),%ecx
    mov    $0x1,%al
    sub    %ecx,%ebp
    xor    %edx,%edx
    test   %ebp,%ebp
    jl     jump_48d11
    mov    0xc(%esp),%esi
    mov    (%esp),%edi
    shl    $0x2,%esi
    add    %edi,%esi
    movzbl data_f64cc(%esi),%esi
  jump_48d01:
    xor    %ecx,%ecx
    mov    %al,%cl
    test   %ecx,%esi
    je     jump_48d0a
    inc    %ebx
  jump_48d0a:
    inc    %edx
    add    %al,%al
    cmp    %ebp,%edx
    jle    jump_48d01
  jump_48d11:
    mov    %ebx,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_48d1c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_2bf10
    add    $0xcd,%eax
    call   func_443d0
    lea    -0xcd(%eax),%edx
    movl   $data_85f14,0xa7(%edx)
    movb   $0xff,0xbb(%edx)
    movb   $0x0,0xbc(%edx)
    movl   $0xffffffff,0xbd(%edx)
    movl   $0xffffffff,0xc1(%edx)
    movl   $0x0,0xc5(%edx)
    movl   $0x0,0xab(%edx)
    mov    %edx,%eax
    movl   $0x0,0xc9(%edx)
    call   func_48e4c
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_48df8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_48e17
    mov    $data_85f00,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_48e17:
    add    $0xcd,%eax
    xor    %edx,%edx
    movl   $data_85f14,-0x26(%eax)
    call   func_44498
    mov    $0x1,%edx
    sub    $0xcd,%eax
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_48e45
    call   func_72124
  jump_48e45:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_48e4c:
/*----------------------------------------------------------------*/
    push   %ebx
    cmpl   $0x0,data_86970
    je     jump_48e68
    xor    %ebx,%ebx
    movl   $0x4c,0xb7(%eax)
    mov    %ebx,data_86970
  jump_48e68:
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_48e6c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,0x4(%esp)
    mov    %ecx,(%esp)
    call   func_48e4c
    mov    0x4(%esp),%eax
    mov    %edx,0xab(%eax)
    mov    %ebx,0xc9(%eax)
    cmp    $0xffffffff,%ebx
    jne    jump_490ed
    lea    0xcd(%eax),%ebp
    mov    0xab(%eax),%eax
    mov    %eax,0x8(%esp)
    mov    (%eax),%eax
    mov    %eax,0x0(%ebp)
    mov    0x8(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x4(%ebp)
    mov    0x8(%esp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x8(%ebp)
    mov    0x8(%esp),%eax
    mov    0xc(%eax),%eax
    mov    %eax,0xc(%ebp)
    mov    0x8(%esp),%eax
    mov    0x10(%eax),%eax
    mov    %eax,0x10(%ebp)
    mov    0x8(%esp),%eax
    mov    0x14(%eax),%eax
    mov    %eax,0x14(%ebp)
    mov    0x8(%esp),%eax
    mov    0x18(%eax),%eax
    mov    %eax,0x18(%ebp)
    mov    0x8(%esp),%eax
    mov    0x1c(%eax),%eax
    mov    %eax,0x1c(%ebp)
    mov    0x8(%esp),%eax
    mov    0x20(%eax),%eax
    mov    %eax,0x20(%ebp)
    mov    0x8(%esp),%eax
    mov    0x24(%eax),%eax
    mov    %eax,0x24(%ebp)
    mov    0x8(%esp),%eax
    mov    0x28(%eax),%eax
    mov    %eax,0x28(%ebp)
    mov    0x8(%esp),%eax
    mov    0x2c(%eax),%eax
    mov    %eax,0x2c(%ebp)
    mov    0x8(%esp),%eax
    mov    0x30(%eax),%eax
    mov    0x8(%esp),%esi
    mov    %eax,0x30(%ebp)
    mov    $0x7,%ecx
    lea    0x34(%ebp),%edi
    lea    0x34(%esi),%esi
    mov    0x8(%esp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x52(%eax),%eax
    mov    %eax,0x52(%ebp)
    mov    0x8(%esp),%eax
    mov    0x56(%eax),%ax
    mov    %ax,0x56(%ebp)
    mov    0x8(%esp),%eax
    mov    0x58(%eax),%al
    mov    %al,0x58(%ebp)
    mov    0x8(%esp),%eax
    mov    0x59(%eax),%eax
    mov    %eax,0x59(%ebp)
    mov    0x8(%esp),%eax
    mov    0x59(%eax),%eax
    mov    %eax,0x59(%ebp)
    mov    0x8(%esp),%eax
    mov    0x59(%eax),%eax
    mov    %eax,0x59(%ebp)
    mov    0x8(%esp),%eax
    mov    0x5d(%eax),%al
    mov    %al,0x5d(%ebp)
    mov    0x8(%esp),%eax
    mov    0x5e(%eax),%eax
    mov    %eax,0x5e(%ebp)
    mov    0x8(%esp),%eax
    mov    0x62(%eax),%al
    mov    %al,0x62(%ebp)
    mov    0x8(%esp),%eax
    mov    0x63(%eax),%eax
    mov    %eax,0x63(%ebp)
    mov    0x8(%esp),%eax
    mov    0x67(%eax),%al
    mov    %al,0x67(%ebp)
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,0x68(%ebp)
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,0x68(%ebp)
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,0x68(%ebp)
    mov    0x8(%esp),%eax
    mov    0x8(%esp),%edx
    mov    0x68(%eax),%eax
    add    $0x6c,%edx
    mov    %eax,0x68(%ebp)
    lea    0x6c(%ebp),%eax
    mov    (%edx),%ebx
    mov    %ebx,(%eax)
    mov    0x4(%edx),%ebx
    mov    %ebx,0x4(%eax)
    mov    0x8(%edx),%ebx
    mov    %ebx,0x8(%eax)
    mov    0x8(%esp),%eax
    lea    0x78(%ebp),%edx
    flds   0x78(%eax)
    add    $0x78,%eax
    fstps  (%edx)
    mov    0x4(%eax),%ebx
    mov    %ebx,0x4(%edx)
    flds   0x8(%eax)
    mov    0x8(%esp),%eax
    fstps  0x8(%edx)
    mov    0x84(%eax),%eax
    mov    %eax,0x84(%ebp)
    mov    0x8(%esp),%eax
    mov    0x88(%eax),%eax
    mov    %eax,0x88(%ebp)
    mov    0x8(%esp),%eax
    mov    0x8c(%eax),%eax
    mov    %eax,0x8c(%ebp)
    mov    0x8(%esp),%eax
    mov    0x90(%eax),%eax
    mov    %eax,0x90(%ebp)
    mov    0x8(%esp),%eax
    mov    0x94(%eax),%eax
    mov    %eax,0x94(%ebp)
    mov    0x8(%esp),%eax
    mov    0x98(%eax),%eax
    mov    %eax,0x98(%ebp)
    mov    0x8(%esp),%eax
    push   $func_46b70
    mov    0x9c(%eax),%ax
    mov    $0x19,%ebx
    mov    %ax,0x9c(%ebp)
    mov    0xc(%esp),%eax
    mov    $0x7,%ecx
    lea    0x9e(%ebp),%edx
    flds   0x9e(%eax)
    add    $0x9e,%eax
    fstps  (%edx)
    mov    0x4(%eax),%esi
    mov    %esi,0x4(%edx)
    flds   0x8(%eax)
    mov    0xc(%esp),%eax
    fstps  0x8(%edx)
    mov    0xc(%esp),%edx
    mov    0xaa(%eax),%al
    add    $0xab,%edx
    mov    %al,0xaa(%ebp)
    lea    0xab(%ebp),%eax
    call   func_73ef0
    mov    0x8(%esp),%eax
    mov    0x15a(%eax),%eax
    mov    %eax,0x15a(%ebp)
    mov    0x8(%esp),%eax
    mov    0x15e(%eax),%eax
    mov    %eax,0x15e(%ebp)
  jump_490ed:
    mov    0x4(%esp),%edx
    mov    (%esp),%eax
    mov    %eax,0x233(%edx)
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_49104:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    0xc5(%eax),%eax
    call   func_2e42c
    mov    0xb7(%esi),%edx
    xor    %edi,%edi
    test   %edx,%edx
    jle    jump_49197
    xor    %ebp,%ebp
  jump_49129:
    mov    data_f653e(%ebp),%al
    cmp    0xbc(%esi),%al
    jne    jump_49189
    xor    %eax,%eax
    mov    data_f6541(%ebp),%al
    cmp    $0xff,%eax
    je     jump_49163
    imul   $0x4b,%eax,%eax
    mov    data_f458e,%cl
    mov    data_f478b(%eax),%edx
    mov    $0x1,%eax
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_49189
  jump_49163:
    mov    $0xffffffff,%ebx
    mov    %esi,%edx
    mov    0xc5(%esi),%eax
    xor    %ecx,%ecx
    call   func_2e16c
    xor    %edx,%edx
    mov    %edi,%ebx
    mov    %ax,%dx
    mov    0xc5(%esi),%eax
    call   func_2e330
  jump_49189:
    inc    %edi
    mov    0xb7(%esi),%ebx
    add    $0x6a,%ebp
    cmp    %ebx,%edi
    jl     jump_49129
  jump_49197:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_491a0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%ebp
    mov    %dx,0xc(%esp)
    mov    %ebx,0x4(%esp)
    mov    %ecx,(%esp)
    mov    %edx,%eax
    cmp    $0x32,%dx
    jb     jump_499c5
    jbe    jump_4926a
    cmp    $0x36,%dx
    jb     jump_499a0
    jbe    jump_492c9
    cmp    $0x39,%dx
    jb     jump_49994
    jbe    jump_492f3
    cmp    $0x1c01,%dx
    jb     jump_49a0f
    jbe    jump_491ff
    cmp    $0x1c02,%dx
    je     jump_49235
    jmp    jump_49a0f
  jump_491ff:
    xor    %edx,%edx
    mov    0xc5(%ebp),%eax
    mov    0x4(%esp),%dx
    call   func_2e384
    cmp    0xbb(%ebp),%al
    je     jump_49a2b
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %al,0xbb(%ebp)
    mov    %ebp,%eax
    call   *0xc(%ebx)
    jmp    jump_49a2b
  jump_49235:
    xor    %edx,%edx
    mov    0xc5(%ebp),%eax
    mov    0x4(%esp),%dx
    mov    $0x4,%ecx
    call   func_2e384
    mov    $0x5,%edx
    movsbl %al,%ebx
    mov    $data_fa35c,%eax
    call   func_51f24
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4926a:
    cmpl   $0xffffffff,0x233(%ebp)
    je     jump_49a2b
    mov    %ebp,%eax
    call   func_49a8c
    test   %eax,%eax
    je     jump_4928c
    movl   $0xffffffff,0xc1(%ebp)
  jump_4928c:
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_492a2:
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_49a34
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_492b4:
    mov    $0x1,%edx
    mov    %ebp,%eax
    call   func_49a34
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_492c9:
    mov    $0x2,%edx
    mov    %ebp,%eax
    call   func_49a34
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_492de:
    mov    $0x4,%edx
    mov    %ebp,%eax
    call   func_49a34
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_492f3:
    mov    $0x5,%edx
    mov    %ebp,%eax
    call   func_49a34
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_49308:
    cmpl   $0xffffffff,0x233(%ebp)
    je     jump_49a2b
    cmpl   $0x0,0xab(%ebp)
    jne    jump_4932f
    mov    $0x13d,%ebx
    mov    $data_8279b,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4932f:
    mov    0xab(%ebp),%ebx
    mov    (%esp),%edx
    mov    0xa7(%ebx),%ebx
    mov    0x4(%esp),%eax
    sar    $0x18,%ebx
    call   func_48b98
    mov    %eax,data_86974
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_49365:
    cmpl   $0x0,0xab(%ebp)
    jne    jump_4937a
    movl   $data_f84d4,0xab(%ebp)
    jmp    jump_49381
  jump_4937a:
    mov    %ebp,%eax
    call   func_48e4c
  jump_49381:
    mov    $data_827aa,%edx
    mov    $data_fa35c,%eax
    movl   $0xffffffff,0xc1(%ebp)
    xor    %ebx,%ebx
    movl   $0x0,0x22f(%ebp)
    call   func_5216c
    mov    %eax,0xc5(%ebp)
    test   %eax,%eax
    jne    jump_493bf
    mov    $0x153,%ebx
    mov    $data_827b2,%edx
    call   func_25878
  jump_493bf:
    mov    0xc5(%ebp),%eax
    movl   $0x0,0xab(%eax)
    mov    $func_48b14,%edx
    mov    0xc5(%ebp),%eax
    call   func_2e8a8
    mov    0xc5(%ebp),%eax
    movw   $0x40,0x8c9(%eax)
    xor    %edx,%edx
    mov    0xc5(%ebp),%eax
    call   func_2e0ac
    mov    0xc5(%ebp),%eax
    movb   $0xf2,0xc6(%eax)
    cmpb   $0xff,0xbb(%ebp)
    jne    jump_4941f
    mov    $0x4,%edx
    mov    %ebp,%eax
    call   func_49a34
    jmp    jump_49426
  jump_4941f:
    mov    %ebp,%eax
    call   func_49104
  jump_49426:
    movl   $0xffffffff,0xbd(%ebp)
    movl   $0xffffffff,0x39(%ebp)
    movl   $0xffffffff,0x35(%ebp)
    mov    %ebp,%eax
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    (%esp),%ecx
    call   *0xc(%ebx)
    mov    0xa(%esp),%edx
    mov    0x4(%esp),%ebx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2c938
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_49469:
    movl   $0x0,0x39(%ebp)
    mov    $0xffffffff,%ebx
    movl   $0x0,0x35(%ebp)
    mov    $data_f84d4,%eax
    mov    0xab(%ebp),%ecx
    mov    %ebx,data_86974
    cmp    %ecx,%eax
    je     jump_496f2
    mov    (%ecx),%eax
    mov    %eax,data_f84d4
    mov    0x4(%ecx),%eax
    mov    %eax,data_f84d8
    mov    0x8(%ecx),%eax
    mov    %eax,data_f84dc
    mov    0xc(%ecx),%eax
    mov    %eax,data_f84e0
    mov    0x10(%ecx),%eax
    mov    %eax,data_f84e4
    mov    0x14(%ecx),%eax
    mov    %eax,data_f84e8
    mov    0x18(%ecx),%eax
    mov    %eax,data_f84ec
    mov    0x1c(%ecx),%eax
    mov    %eax,data_f84f0
    mov    0x20(%ecx),%eax
    mov    $data_f8508,%edi
    mov    %eax,data_f84f4
    mov    0x24(%ecx),%eax
    mov    %ecx,0x8(%esp)
    mov    %eax,data_f84f8
    mov    0x28(%ecx),%eax
    mov    0x8(%esp),%esi
    mov    %eax,data_f84fc
    mov    0x2c(%ecx),%eax
    lea    0x34(%esi),%esi
    mov    %eax,data_f8500
    mov    0x30(%ecx),%eax
    mov    $0x7,%ecx
    mov    %eax,data_f8504
    mov    0x8(%esp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x52(%eax),%eax
    mov    %eax,data_f8526
    mov    0x8(%esp),%eax
    mov    0x56(%eax),%ax
    mov    %ax,data_f852a
    mov    0x8(%esp),%eax
    mov    0x58(%eax),%al
    mov    %al,data_f852c
    mov    0x8(%esp),%eax
    mov    0x59(%eax),%eax
    mov    %eax,data_f852d
    mov    0x8(%esp),%eax
    mov    0x59(%eax),%eax
    mov    %eax,data_f852d
    mov    0x8(%esp),%eax
    mov    0x59(%eax),%eax
    mov    %eax,data_f852d
    mov    0x8(%esp),%eax
    mov    0x5d(%eax),%al
    mov    %al,data_f8531
    mov    0x8(%esp),%eax
    mov    0x5e(%eax),%eax
    mov    %eax,data_f8532
    mov    0x8(%esp),%eax
    mov    0x62(%eax),%al
    mov    %al,data_f8536
    mov    0x8(%esp),%eax
    mov    0x63(%eax),%eax
    mov    %eax,data_f8537
    mov    0x8(%esp),%eax
    mov    0x67(%eax),%al
    mov    %al,data_f853b
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,data_f853c
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,data_f853c
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,data_f853c
    mov    0x8(%esp),%eax
    mov    0x68(%eax),%eax
    mov    %eax,data_f853c
    mov    0x8(%esp),%eax
    flds   0x6c(%eax)
    add    $0x6c,%eax
    fstps  data_f8540
    mov    0x4(%eax),%edx
    mov    %edx,data_f8544
    flds   0x8(%eax)
    mov    0x8(%esp),%eax
    fstps  data_f8548
    flds   0x78(%eax)
    add    $0x78,%eax
    fstps  data_f854c
    mov    0x4(%eax),%edx
    mov    %edx,data_f8550
    flds   0x8(%eax)
    mov    0x8(%esp),%eax
    mov    0x84(%eax),%eax
    mov    %eax,data_f8558
    mov    0x8(%esp),%eax
    mov    0x88(%eax),%eax
    mov    %eax,data_f855c
    mov    0x8(%esp),%eax
    mov    0x8c(%eax),%eax
    mov    %eax,data_f8560
    mov    0x8(%esp),%eax
    mov    0x90(%eax),%eax
    mov    %eax,data_f8564
    mov    0x8(%esp),%eax
    mov    0x94(%eax),%eax
    mov    %eax,data_f8568
    mov    0x8(%esp),%eax
    mov    0x98(%eax),%eax
    mov    %eax,data_f856c
    mov    0x8(%esp),%eax
    mov    0x9c(%eax),%ax
    mov    %ax,data_f8570
    mov    0x8(%esp),%eax
    fstps  data_f8554
    flds   0x9e(%eax)
    add    $0x9e,%eax
    fstps  data_f8572
    mov    0x4(%eax),%edx
    mov    %edx,data_f8576
    flds   0x8(%eax)
    mov    0x8(%esp),%eax
    mov    $0x19,%ebx
    mov    0x8(%esp),%edx
    mov    0xaa(%eax),%al
    add    $0xab,%edx
    mov    %al,data_f857e
    mov    $func_46b70,%eax
    mov    $0x7,%ecx
    push   %eax
    mov    $data_f857f,%eax
    fstps  data_f857a
    call   func_73ef0
    mov    0x8(%esp),%eax
    mov    0x15a(%eax),%eax
    mov    %eax,data_f862e
    mov    0x8(%esp),%eax
    mov    0x15e(%eax),%eax
    mov    %eax,data_f8632
  jump_496f2:
    mov    0x6b(%ebp),%bx
    xor    %esi,%esi
    test   %bx,%bx
    jle    jump_49724
  jump_496fd:
    mov    0x67(%ebp),%eax
    movswl %si,%edx
    mov    (%esp),%ecx
    mov    (%eax,%edx,4),%eax
    mov    0x4(%esp),%ebx
    mov    0xa(%esp),%edx
    mov    0xa7(%eax),%edi
    sar    $0x10,%edx
    inc    %esi
    call   *0x8(%edi)
    cmp    0x6b(%ebp),%si
    jl     jump_496fd
  jump_49724:
    mov    0x22f(%ebp),%eax
    test   %eax,%eax
    jne    jump_49a2b
    mov    %eax,0xab(%ebp)
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_49741:
    mov    0x233(%ebp),%esi
    cmp    $0xffffffff,%esi
    jne    jump_49755
    mov    %esi,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_49755:
    push   $0x0
    mov    $0x8,%ecx
    mov    $0x4,%ebx
    push   $0x0
    mov    $data_fa35c,%eax
    mov    0x41(%ebp),%edx
    call   func_51aec
    mov    0x39(%ebp),%eax
    mov    0x35(%ebp),%edi
    mov    0x3d(%ebp),%edx
    and    %edi,%eax
    and    %edx,%eax
    cmp    $0xffffffff,%eax
    jne    jump_4978f
    mov    %ebp,%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0x10(%ebx)
  jump_4978f:
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4979b:
    mov    0x233(%ebp),%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_497af
    mov    %ebx,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_497af:
    mov    $0x8,%ebx
    mov    $data_fa35c,%eax
    mov    0x41(%ebp),%edx
    call   func_51b80
    cmpl   $0x0,0x39(%ebp)
    je     jump_497f5
    cmpl   $0x0,0x35(%ebp)
    je     jump_497f5
    cmpl   $0x0,data_86974
    jge    jump_497dc
    cmpl   $0x0,0x3d(%ebp)
    je     jump_497f5
  jump_497dc:
    movl   $0xffffffff,data_86974
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    jmp    jump_497ff
  jump_497f5:
    movl   $0xffffffff,data_86974
  jump_497ff:
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4980b:
    mov    0x35(%ebp),%eax
    test   %eax,%eax
    je     jump_49a2d
    cmp    0x8(%ebp),%ebx
    jl     jump_49a2b
    mov    %ebx,%eax
    cmp    0x10(%ebp),%eax
    jg     jump_49a2b
    mov    %ecx,%eax
    cmp    0xc(%ebp),%eax
    jl     jump_49a2b
    cmp    0x14(%ebp),%eax
    jg     jump_49a2b
    mov    0x233(%ebp),%edi
    cmp    $0xffffffff,%edi
    jne    jump_49852
    mov    %edi,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_49852:
    cmpl   $0x0,data_86974
    jl     jump_498c9
    cmpl   $0x0,0xab(%ebp)
    jne    jump_49875
    mov    $0x1b2,%ebx
    mov    $data_827c1,%edx
    xor    %eax,%eax
    call   func_25878
  jump_49875:
    mov    data_86974,%ebx
    mov    0xb8(%ebp),%edx
    mov    0xab(%ebp),%eax
    sar    $0x18,%edx
    call   func_44ae8
    test   %eax,%eax
    je     jump_498c9
    mov    0x57(%ebp),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_498a8
    mov    $data_f8638,%eax
    call   func_4af80
  jump_498a8:
    movl   $0xffffffff,0xbd(%ebp)
    mov    %ebp,%eax
    mov    0xa7(%ebp),%ebx
    movl   $0xffffffff,0x22f(%ebp)
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_498c9:
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_498d5:
    cmpl   $0x0,0x35(%ebp)
    je     jump_49a2b
    cmp    0x8(%ebp),%ebx
    jl     jump_49a2b
    cmp    0x10(%ebp),%ebx
    jg     jump_49a2b
    mov    (%esp),%eax
    cmp    0xc(%ebp),%eax
    jl     jump_49a2b
    cmp    0x14(%ebp),%eax
    jg     jump_49a2b
    mov    0x233(%ebp),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_4991a
    mov    %ecx,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4991a:
    cmpl   $0x0,data_86974
    jl     jump_49988
    cmpl   $0x0,0xab(%ebp)
    jne    jump_4993d
    mov    $0x1d8,%ebx
    mov    $data_827d0,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4993d:
    mov    data_86974,%edx
    mov    0xab(%ebp),%eax
    call   func_44b34
    test   %eax,%eax
    je     jump_49988
    mov    0x57(%ebp),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_49967
    mov    $data_f8638,%eax
    call   func_4af80
  jump_49967:
    movl   $0xffffffff,0xbd(%ebp)
    mov    %ebp,%eax
    mov    0xa7(%ebp),%ebx
    movl   $0xffffffff,0x22f(%ebp)
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_49988:
    mov    $0xffffffff,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_49994:
    cmp    $0x37,%dx
    je     jump_492de
    jmp    jump_49a0f
  jump_499a0:
    cmp    $0x34,%dx
    jb     jump_492a2
    jbe    jump_492b4
    mov    $0x3,%edx
    mov    %ebp,%eax
    call   func_49a34
    xor    %eax,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_499c5:
    cmp    $0x5,%dx
    jb     jump_499ed
    jbe    jump_498d5
    cmp    $0x7,%dx
    jb     jump_4979b
    jbe    jump_49741
    cmp    $0x8,%dx
    je     jump_49308
    jmp    jump_49a0f
  jump_499ed:
    cmp    $0x2,%dx
    jb     jump_49a05
    jbe    jump_49469
    cmp    $0x4,%dx
    je     jump_4980b
    jmp    jump_49a0f
  jump_49a05:
    cmp    $0x1,%dx
    je     jump_49365
  jump_49a0f:
    mov    0xa(%esp),%edx
    mov    (%esp),%ecx
    mov    0x4(%esp),%ebx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2eb04
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_49a2b:
    xor    %eax,%eax
  jump_49a2d:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_49a34:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    test   %dl,%dl
    jl     jump_49a87
    cmp    $0x6,%dl
    jge    jump_49a87
    cmp    0xbc(%eax),%dl
    je     jump_49a87
    mov    %ebx,%eax
    mov    %dl,0xbc(%ebx)
    call   func_49104
    mov    0xc5(%ebx),%eax
    movb   $0xff,0xbb(%ebx)
    cmpw   $0x0,0x8c7(%eax)
    je     jump_49a7a
    xor    %edx,%edx
    call   func_2e384
    mov    %al,0xbb(%ebx)
  jump_49a7a:
    mov    0xa7(%ebx),%ecx
    mov    %ebx,%eax
    xor    %edx,%edx
    call   *0xc(%ecx)
  jump_49a87:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_49a8c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    0xab(%eax),%ebx
    mov    0xc9(%eax),%edx
    xor    %ebp,%ebp
    mov    0xa7(%ebx),%ebx
    xor    %esi,%esi
    sar    $0x18,%ebx
    test   %edx,%edx
    jne    jump_49b3d
  jump_49ab5:
    test   %esi,%esi
    jne    jump_49b3d
    inc    %ebx
    cmp    $0x4,%ebx
    jl     jump_49ac5
    xor    %ebx,%ebx
  jump_49ac5:
    cmp    $0x2,%ebx
    jne    jump_49ae4
    mov    $0x1,%eax
    mov    data_f4d1c,%edx
    mov    data_f458e,%cl
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_49ab5
  jump_49ae4:
    cmp    $0x3,%ebx
    jne    jump_49b03
    mov    $0x1,%eax
    mov    data_f50a0,%edx
    mov    data_f458e,%cl
    sar    $0x18,%edx
    shl    %cl,%eax
    test   %eax,%edx
    je     jump_49ab5
  jump_49b03:
    mov    0xab(%edi),%eax
    mov    0xa7(%eax),%edx
    sar    $0x18,%edx
    cmp    %edx,%ebx
    jne    jump_49b1f
    mov    $0xffffffff,%esi
    xor    %ebp,%ebp
    jmp    jump_49ab5
  jump_49b1f:
    movsbl %bl,%edx
    call   func_44bf8
    test   %eax,%eax
    je     jump_49ab5
    mov    $0xffffffff,%esi
    mov    %esi,%ebp
    mov    %esi,0xbd(%edi)
    jmp    jump_49ab5
  jump_49b3d:
    mov    %ebp,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_49b48:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xf4,%esp
    sub    $0x82,%ebp
    mov    %eax,0x46(%ebp)
    cmpl   $0x0,0xab(%eax)
    jne    jump_49b78
    mov    $0x24a,%ebx
    mov    $data_827df,%edx
    xor    %eax,%eax
    call   func_25878
  jump_49b78:
    mov    0x46(%ebp),%eax
    mov    $data_c84f8,%ebx
    mov    $0x14a,%ecx
    mov    $0x72,%edi
    mov    0xab(%eax),%eax
    mov    $0x1d8,%edx
    push   $0x0
    mov    0xa7(%eax),%esi
    mov    $0x1dc,%eax
    sar    $0x18,%esi
    mov    %ebx,-0xa(%ebp)
    mov    %ecx,-0x6(%ebp)
    mov    %edi,-0x2(%ebp)
    mov    %eax,0x2(%ebp)
    lea    -0xa(%ebp),%eax
    mov    %edx,0x6(%ebp)
    push   %eax
    mov    $0x149,%edi
    mov    %esi,0x5a(%ebp)
    call   func_59d90
    mov    $0x7,%ebx
    add    $0x8,%esp
    mov    $0x159,%ecx
    mov    $0x1d8,%eax
    push   $0x0
    mov    %eax,0x6(%ebp)
    lea    -0xa(%ebp),%eax
    mov    %edi,0x2(%ebp)
    push   %eax
    mov    %ebx,-0x6(%ebp)
    mov    %ecx,-0x2(%ebp)
    call   func_59d90
    mov    data_efd7c,%ax
    xor    %edx,%edx
    add    $0x8,%esp
    mov    %edx,0x4e(%ebp)
    mov    %eax,0x7a(%ebp)
    mov    %edx,0x62(%ebp)
    jmp    jump_49c1d
  jump_49c04:
    mov    0x5a(%ebp),%ecx
    mov    0x62(%ebp),%esi
    add    $0x4,%ecx
    inc    %esi
    mov    %ecx,0x5a(%ebp)
    mov    %esi,0x62(%ebp)
    cmp    $0xe,%esi
    jge    jump_49d90
  jump_49c1d:
    mov    0x62(%ebp),%edx
    xor    %eax,%eax
    mov    data_8684c(%edx),%al
    mov    0x62(%ebp),%ebx
    mov    %eax,%edx
    sub    %ebx,%edx
    imul   $0x24,%edx,%edx
    add    %ebx,%eax
    imul   $0x12,%eax,%eax
    lea    0xa6(%eax),%edi
    lea    0x193(%edx),%esi
    xor    %eax,%eax
    mov    $0x1,%dh
    mov    data_8685c(%ebx),%al
    mov    %dh,0x7e(%ebp)
    mov    %eax,0x72(%ebp)
    xor    %eax,%eax
    mov    0x72(%ebp),%edx
    mov    %eax,0x4a(%ebp)
    test   %edx,%edx
    jle    jump_49c04
    mov    0x5a(%ebp),%eax
    mov    0x4e(%ebp),%edx
    mov    %eax,0x6e(%ebp)
    imul   $0x7,%edx,%eax
    mov    %eax,0x52(%ebp)
  jump_49c6e:
    mov    0x6e(%ebp),%eax
    xor    %edx,%edx
    mov    data_f64cc(%eax),%dl
    xor    %eax,%eax
    mov    0x7e(%ebp),%al
    test   %eax,%edx
    je     jump_49cb4
    mov    data_86974,%ebx
    test   %ebx,%ebx
    jl     jump_49ce5
    cmp    0x4e(%ebp),%ebx
    jne    jump_49ce5
    mov    0x46(%ebp),%eax
    cmpb   $0xff,0xbb(%eax)
    je     jump_49cd6
    push   %edi
    mov    0xb8(%eax),%eax
    push   %esi
    sar    $0x18,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x7a(%ebp),%dx
    jmp    jump_49d63
  jump_49cb4:
    mov    0x7e(%ebp),%bl
    add    %bl,%bl
    mov    0x72(%ebp),%ecx
    mov    %bl,0x7e(%ebp)
    mov    0x4a(%ebp),%ebx
    add    $0x24,%esi
    inc    %ebx
    add    $0x12,%edi
    mov    %ebx,0x4a(%ebp)
    cmp    %ecx,%ebx
    jge    jump_49c04
    jmp    jump_49c6e
  jump_49cd6:
    push   %edi
    push   %esi
    mov    0x18(%eax),%ax
    xor    %edx,%edx
    push   $0x1
    jmp    jump_49d60
  jump_49ce5:
    mov    0x46(%ebp),%eax
    cmpl   $0x0,0xab(%eax)
    jne    jump_49d02
    mov    $0x28d,%ebx
    mov    $data_827ee,%edx
    xor    %eax,%eax
    call   func_25878
  jump_49d02:
    mov    0x46(%ebp),%eax
    mov    0x52(%ebp),%ebx
    mov    0xab(%eax),%eax
    add    %ebx,%eax
    mov    0xab(%eax),%bh
    cmp    $0xff,%bh
    je     jump_49d53
    cmp    $0x4c,%bh
    jl     jump_49d31
    mov    $0x291,%ebx
    mov    $data_827fd,%edx
    xor    %eax,%eax
    call   func_25878
  jump_49d31:
    mov    0x46(%ebp),%eax
    mov    0x52(%ebp),%ecx
    mov    0xab(%eax),%eax
    add    %ecx,%eax
    push   %edi
    mov    0xa8(%eax),%eax
    push   %esi
    sar    $0x18,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x7a(%ebp),%dx
    jmp    jump_49d63
  jump_49d53:
    push   %edi
    mov    0x46(%ebp),%eax
    push   %esi
    xor    %edx,%edx
    mov    0x18(%eax),%ax
    push   $0x0
  jump_49d60:
    mov    %ax,%dx
  jump_49d63:
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   $data_c850c
    call   func_57efc
    add    $0x14,%esp
    mov    0x52(%ebp),%eax
    mov    0x4e(%ebp),%edx
    add    $0x7,%eax
    inc    %edx
    mov    %eax,0x52(%ebp)
    mov    %edx,0x4e(%ebp)
    jmp    jump_49cb4
  jump_49d90:
    mov    0x46(%ebp),%eax
    mov    0x14(%eax),%edx
    mov    0x10(%eax),%ecx
    mov    0xc(%eax),%ebx
    push   %edx
    mov    0x8(%eax),%edx
    mov    $data_fa35c,%eax
    call   func_50658
    mov    0x46(%ebp),%eax
    cmpb   $0xff,0xbb(%eax)
    je     jump_49e8c
    mov    $data_c84f8,%ebx
    mov    $0x13b,%ecx
    mov    $0x7,%esi
    mov    $0x1dc,%edi
    mov    $0x69,%eax
    push   $0xf2
    mov    %ebx,0x32(%ebp)
    mov    %eax,0x42(%ebp)
    lea    0x32(%ebp),%eax
    mov    %ecx,0x36(%ebp)
    push   %eax
    mov    %esi,0x3a(%ebp)
    mov    %edi,0x3e(%ebp)
    call   func_59d90
    mov    0x3e(%ebp),%eax
    mov    0x36(%ebp),%edx
    add    $0x8,%esp
    sub    %edx,%eax
    push   $0x3a
    sar    %eax
    push   %eax
    mov    0x46(%ebp),%eax
    mov    0xb8(%eax),%eax
    sar    $0x18,%eax
    xor    %edx,%edx
    push   %eax
    mov    0x7a(%ebp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    lea    0x32(%ebp),%eax
    push   %eax
    lea    0x32(%ebp),%esi
    mov    $data_fd38a,%edi
    call   func_57efc
    mov    0x46(%ebp),%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0xb8(%eax),%eax
    sar    $0x18,%eax
    imul   $0x6a,%eax,%eax
    add    $0x14,%esp
    add    $data_f650c,%eax
    push   %eax
    push   $data_8280c
    lea    -0x72(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    push   $0x0
    push   $0xff
    push   $0xf3
    lea    -0x72(%ebp),%ecx
    mov    $0x3,%ebx
    push   $0x42
    mov    %ebx,%edx
    mov    $data_fd382,%eax
    call   func_2af88
    lea    0x32(%ebp),%edx
    mov    $data_fa35c,%eax
    call   func_50690
  jump_49e8c:
    mov    0x46(%ebp),%eax
    cmpl   $0x0,0xc1(%eax)
    je     jump_49f33
    mov    $data_c84f8,%ecx
    mov    $0x7,%esi
    mov    $0x72,%edi
    mov    $0x141,%eax
    mov    $0x150,%edx
    push   $0x0
    mov    %ecx,-0xa(%ebp)
    mov    %eax,0x2(%ebp)
    lea    -0xa(%ebp),%eax
    mov    %esi,-0x6(%ebp)
    push   %eax
    mov    %edi,-0x2(%ebp)
    mov    %edx,0x6(%ebp)
    call   func_59d90
    xor    %eax,%eax
    mov    data_f458e,%al
    xor    %edx,%edx
    add    $0x8,%esp
    mov    data_efd6e(,%eax,2),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_49f02
    mov    $0x2cb,%ebx
    mov    $data_8280f,%edx
    call   func_25878
  jump_49f02:
    mov    0x46(%ebp),%eax
    mov    0xab(%eax),%eax
    push   $0x0
    mov    0xa7(%eax),%eax
    push   $0x0
    sar    $0x18,%eax
    push   %eax
    push   %ecx
    lea    -0xa(%ebp),%eax
    push   %eax
    call   func_57efc
    mov    0x46(%ebp),%eax
    add    $0x14,%esp
    movl   $0x0,0xc1(%eax)
  jump_49f33:
    mov    0x46(%ebp),%eax
    cmpl   $0x0,0xbd(%eax)
    je     jump_4a1d9
    mov    $data_c84f8,%ecx
    mov    $0x7,%esi
    mov    $0x130,%eax
    mov    $0x66,%edx
    push   $0x0
    lea    -0x3e(%ebp),%edi
    mov    %ecx,-0xa(%ebp)
    mov    %eax,0x2(%ebp)
    lea    -0xa(%ebp),%eax
    mov    %esi,-0x6(%ebp)
    push   %eax
    mov    %esi,-0x2(%ebp)
    mov    %edx,0x6(%ebp)
    call   func_59d90
    lea    -0xa(%ebp),%edx
    add    $0x8,%esp
    mov    $data_fa35c,%eax
    mov    $0x3,%ebx
    call   func_50690
    xor    %ecx,%ecx
    lea    -0xa(%ebp),%eax
    mov    data_f458e,%cl
    mov    %ebx,%edx
    mov    $data_86978,%esi
    call   func_4f228
    mov    $0xc,%ecx
    mov    0x46(%ebp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0xab(%eax),%ebx
    cmp    $data_f84d4,%ebx
    je     jump_4a035
    mov    0x22f(%eax),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_4a035
    mov    %ebx,%eax
    mov    0x46(%ebp),%ebx
    mov    data_c3508,%edx
    call   func_4586c
    cmp    0xc9(%ebx),%ecx
    jne    jump_49fe8
    mov    %ebx,%eax
    call   func_4a1f0
  jump_49fe8:
    xor    %ebx,%ebx
    mov    0x44(%edx),%bx
    mov    0x50(%edx),%dx
    and    $0xffff,%edx
    call   func_42460
    mov    %eax,%edx
    cmp    $0xffff,%eax
    je     jump_4a035
    cmp    $0x1,%eax
    jne    jump_4a012
    mov    $0x1c,%eax
    jmp    jump_4a017
  jump_4a012:
    mov    $0x1d,%eax
  jump_4a017:
    call   func_1ce70
    push   %eax
    push   %edx
    mov    $0x87,%eax
    call   func_1ce70
    push   %eax
    lea    -0x3e(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
  jump_4a035:
    lea    -0x3e(%ebp),%eax
    push   %eax
    mov    0x46(%ebp),%eax
    mov    0xab(%eax),%eax
    xor    %edx,%edx
    add    $0x34,%eax
    mov    data_f458e,%dl
    push   %eax
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    push   $data_8281e
    lea    -0x72(%ebp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_720c9
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0x14,%esp
    mov    data_92e18(,%eax,2),%al
    lea    -0xa(%ebp),%esi
    xor    %ah,%ah
    push   $0x0
    shl    $0x2,%eax
    lea    -0x72(%ebp),%ecx
    add    $0x13,%eax
    push   $0xffffffff
    cwtl
    mov    $0x3,%ebx
    push   %eax
    mov    $data_fd3aa,%edi
    xor    %edx,%edx
    push   $0x2
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd8a,%dx
    call   func_1b084
    mov    %eax,0x66(%ebp)
    mov    0x46(%ebp),%eax
    mov    0xab(%eax),%eax
    mov    (%eax),%eax
    mov    %eax,0x1e(%ebp)
    mov    0x46(%ebp),%eax
    mov    0xab(%eax),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0x22(%ebp)
    mov    0x46(%ebp),%eax
    mov    0xab(%eax),%eax
    mov    0x10(%eax),%eax
    mov    %eax,0x26(%ebp)
    mov    0x46(%ebp),%eax
    mov    0xab(%eax),%eax
    mov    0x20(%eax),%eax
    mov    %eax,0x2a(%ebp)
    mov    0x46(%ebp),%eax
    lea    0xa(%ebp),%edi
    mov    $0x7,%edx
    mov    0xab(%eax),%eax
    lea    -0xa(%ebp),%esi
    mov    %edx,0x56(%ebp)
    mov    0x18(%eax),%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    %eax,0x2e(%ebp)
    mov    $0x14,%edi
    xor    %eax,%eax
    mov    %edi,0x76(%ebp)
    mov    %eax,0x5e(%ebp)
    jmp    jump_4a174
  jump_4a156:
    mov    0x76(%ebp),%ebx
    mov    0x5e(%ebp),%ecx
    mov    0x56(%ebp),%esi
    add    $0xe,%ebx
    add    $0x4,%ecx
    inc    %esi
    mov    %ebx,0x76(%ebp)
    mov    %ecx,0x5e(%ebp)
    mov    %esi,0x56(%ebp)
    cmp    $0x14,%ecx
    je     jump_4a1cc
  jump_4a174:
    mov    0xe(%ebp),%eax
    add    $0x27,%eax
    mov    %eax,0x16(%ebp)
    mov    0x5e(%ebp),%eax
    mov    0x1e(%eax,%ebp,1),%edx
    mov    $0x28,%edi
    test   %edx,%edx
    jle    jump_4a1a0
    imul   $0xe,%edx,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x2,%edx
    sbb    %edx,%eax
    sar    $0x2,%eax
    add    %eax,0x16(%ebp)
  jump_4a1a0:
    mov    0x56(%ebp),%eax
    xor    %esi,%esi
    mov    %eax,0x6a(%ebp)
  jump_4a1a8:
    mov    0x76(%ebp),%eax
    push   %eax
    push   %edi
    mov    0x6a(%ebp),%edx
    push   %edx
    mov    0x66(%ebp),%ebx
    push   %ebx
    lea    0xa(%ebp),%eax
    push   %eax
    inc    %esi
    add    $0xe,%edi
    call   func_57efc
    add    $0x14,%esp
    cmp    $0xf,%esi
    jge    jump_4a156
    jmp    jump_4a1a8
  jump_4a1cc:
    mov    0x46(%ebp),%eax
    movl   $0x0,0xbd(%eax)
  jump_4a1d9:
    mov    0x46(%ebp),%eax
    xor    %edx,%edx
    call   func_2c8f8
    lea    0x82(%ebp),%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a1f0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%edx
    mov    0xc9(%eax),%ecx
    mov    $0x2710,%ebx
    cmp    $0xffffffff,%ecx
    jne    jump_4a233
    mov    0xab(%eax),%esi
    test   %esi,%esi
    je     jump_4a233
    mov    %esi,%eax
    call   func_45824
    mov    %eax,%ecx
    lea    0xcd(%edx),%eax
    call   func_45824
    sub    %eax,%ecx
    mov    $0x1e,%ebx
    mov    %ecx,%eax
    test   %ecx,%ecx
    jle    jump_4a233
    add    %ecx,%ebx
  jump_4a233:
    mov    %ebx,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a240:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_869ac,%eax
    call   func_73a9a
    mov    $data_f8638,%eax
    mov    $0x1,%edx
    call   func_4a264
    mov    %edx,data_869b4
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_4a264:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    add    $0x240,%eax
    call   func_1bb78
    lea    -0x240(%eax),%ecx
    movl   $0x0,0x207(%ecx)
    movl   $0x0,0x20b(%ecx)
    movl   $0x0,0x20f(%ecx)
    movl   $0x0,0x213(%ecx)
    movl   $0x0,0x217(%ecx)
    movl   $0x0,0x223(%ecx)
    movl   $0x0,0x227(%ecx)
    movl   $0xffffffff,0x22b(%ecx)
    movb   $0x0,(%ecx)
    movb   $0x0,0xff(%ecx)
    movb   $0x0,0x1fe(%ecx)
    movl   $0x0,0x21b(%ecx)
    movl   $0x0,0x21f(%ecx)
    movl   $0x0,0x238(%ecx)
    movl   $0x0,0x23c(%ecx)
    mov    $0x84,%ebx
    movw   $0x0,0x378(%ecx)
    xor    %edx,%edx
    movw   $0x0,0xca8(%ecx)
    lea    0xbb4(%ecx),%eax
    movw   $0x0,0xcaa(%ecx)
    call   func_72280
    mov    $0x40,%ebx
    lea    0xc68(%ecx),%eax
    xor    %edx,%edx
    call   func_72280
    mov    $0x380,%ebx
    lea    0x37a(%ecx),%eax
    xor    %edx,%edx
    call   func_72280
    movw   $0x0,0x6fa(%ecx)
    movb   $0x64,0x6fe(%ecx)
    movb   $0x7f,0x6ff(%ecx)
    movw   $0x0,0x700(%ecx)
    mov    %ecx,%eax
    movw   $0x0,0xbb2(%ecx)
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a384:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    call   func_4b27c
    lea    0x240(%ebx),%eax
    xor    %edx,%edx
    call   func_1bbc8
    sub    $0x240,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a3a0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%ebp
    mov    %ebx,%edi
    call   func_6207f
    movl   $0xffffffff,0x20f(%esi)
    cmp    $0xffffffff,%ebp
    jne    jump_4a3e6
    call   func_633b8
    mov    %eax,0x21f(%esi)
    test   %eax,%eax
    je     jump_4a411
    mov    $0x8,%edx
    mov    %esi,%eax
    call   func_4a9d8
    mov    %esi,%eax
    call   func_4b384
    mov    %ebp,0x20b(%esi)
  jump_4a3e6:
    cmp    $0xffffffff,%edi
    jne    jump_4a40c
    call   func_64d8c
    mov    %eax,0x21b(%esi)
    test   %eax,%eax
    je     jump_4a411
    mov    $0x8,%edx
    mov    %esi,%eax
    call   func_4a574
    mov    %edi,0x207(%esi)
  jump_4a40c:
    mov    $0xffffffff,%eax
  jump_4a411:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4a574:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    %edx,(%esp)
    cmpw   $0x0,0xca8(%eax)
    je     jump_4a58f
    xor    %eax,%eax
    jmp    jump_4a5f5
  jump_4a58f:
    cmpl   $0x8,(%esp)
    jle    jump_4a5a6
    mov    $0xda,%ebx
    mov    $data_8282a,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4a5a6:
    xor    %esi,%esi
    jmp    jump_4a5b5
  jump_4a5aa:
    inc    %esi
    movl   $0x0,0xc6c(%eax)
  jump_4a5b5:
    mov    (%esp),%ebx
    movswl %si,%edi
    cmp    %ebx,%edi
    jge    jump_4a5e5
    mov    0x21b(%ebp),%ecx
    push   %ecx
    call   func_64fbe
    mov    %eax,%edx
    lea    0x0(,%edi,8),%eax
    add    %ebp,%eax
    add    $0x4,%esp
    mov    %edx,%edi
    mov    %edx,0xc68(%eax)
    test   %edi,%edi
    jne    jump_4a5aa
  jump_4a5e5:
    mov    %si,0xca8(%ebp)
    mov    0xca6(%ebp),%eax
    sar    $0x10,%eax
  jump_4a5f5:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a71c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    cmpl   $0xffffffff,0x217(%eax)
    je     jump_4a7f2
    cmpl   $0x0,0x207(%eax)
    je     jump_4a7f2
    movswl %di,%eax
    test   %eax,%eax
    jl     jump_4a753
    cmp    0xca8(%esi),%di
    jl     jump_4a764
  jump_4a753:
    mov    $0x12a,%ebx
    mov    $data_82857,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4a764:
    movswl %di,%edx
    lea    0x0(,%edx,8),%eax
    add    %esi,%eax
    mov    0xc6c(%eax),%ecx
    test   %ecx,%ecx
    jne    jump_4a794
    push   %edx
    push   $data_82866
    push   $data_86500
    call   func_720c9
    add    $0xc,%esp
    call   func_2592c
    jmp    jump_4a7f2
  jump_4a794:
    jne    jump_4a7a7
    mov    $0x137,%ebx
    mov    $data_82897,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4a7a7:
    movswl %di,%eax
    shl    $0x3,%eax
    lea    (%esi,%eax,1),%edx
    mov    0xc68(%edx),%ebx
    push   %ebx
    mov    %edx,0x4(%esp)
    call   func_65537
    add    $0x4,%esp
    cmp    $0x4,%eax
    jne    jump_4a7df
    cmp    $0xffffffff,%ebp
    jne    jump_4a7f2
    mov    (%esp),%eax
    mov    0xc68(%eax),%ecx
    push   %ecx
    call   func_65276
    add    $0x4,%esp
  jump_4a7df:
    movswl %di,%eax
    mov    0xc68(%esi,%eax,8),%edi
    push   %edi
    call   func_65209
    add    $0x4,%esp
  jump_4a7f2:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4a84c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    movswl %dx,%eax
    test   %eax,%eax
    jl     jump_4a863
    cmp    0xca8(%esi),%cx
    jl     jump_4a874
  jump_4a863:
    mov    $0x152,%ebx
    mov    $data_828b5,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4a874:
    movswl %cx,%eax
    shl    $0x3,%eax
    add    %eax,%esi
    cmpl   $0x0,0xc6c(%esi)
    je     jump_4a894
    mov    0xc68(%esi),%ebx
    push   %ebx
    call   func_65350
    add    $0x4,%esp
  jump_4a894:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a8c4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    movswl %dx,%eax
    test   %eax,%eax
    jl     jump_4a8db
    cmp    0xca8(%ecx),%si
    jl     jump_4a8ec
  jump_4a8db:
    mov    $0x166,%ebx
    mov    $data_828c4,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4a8ec:
    movswl %si,%eax
    shl    $0x3,%eax
    lea    (%ecx,%eax,1),%esi
    cmpl   $0x0,0xc6c(%esi)
    je     jump_4a91f
    mov    0xc68(%esi),%ebx
    push   %ebx
    call   func_65350
    mov    0xc6c(%esi),%ecx
    add    $0x4,%esp
    test   %ecx,%ecx
    je     jump_4a91f
    mov    %ecx,%eax
    call   *data_88654
  jump_4a91f:
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4a9d8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ebp
    mov    %edx,(%esp)
    cmpw   $0x0,0x378(%eax)
    je     jump_4a9f3
    xor    %eax,%eax
    jmp    jump_4aa43
  jump_4a9f3:
    cmpl   $0x8,(%esp)
    jle    jump_4aa0a
    mov    $0x199,%ebx
    mov    $data_828d5,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4aa0a:
    xor    %esi,%esi
    jmp    jump_4aa0f
  jump_4aa0e:
    inc    %esi
  jump_4aa0f:
    mov    (%esp),%ebx
    movswl %si,%edi
    cmp    %ebx,%edi
    jge    jump_4aa33
    mov    0x21f(%ebp),%ecx
    push   %ecx
    call   func_635f0
    add    $0x4,%esp
    mov    %eax,0x358(%ebp,%edi,4)
    test   %eax,%eax
    jne    jump_4aa0e
  jump_4aa33:
    mov    %si,0x378(%ebp)
    mov    0x376(%ebp),%eax
    sar    $0x10,%eax
  jump_4aa43:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4aa4c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x60,%esp
    mov    %eax,%ebp
    mov    %edx,%edi
    cmpl   $0xffffffff,0x20b(%eax)
    je     jump_4aa72
    mov    $0x1b4,%ebx
    mov    $data_828e4,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4aa72:
    mov    0x376(%ebp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jg     jump_4aa90
    mov    $0x1b5,%ebx
    mov    $data_828f3,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4aa90:
    cmpl   $0x0,0x20b(%ebp)
    je     jump_4aaa7
    mov    0x376(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x8,%eax
    jge    jump_4aaae
  jump_4aaa7:
    xor    %eax,%eax
    jmp    jump_4acb0
  jump_4aaae:
    mov    0x223(%ebp),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_4aac4
    mov    %ecx,%eax
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4aac4:
    mov    0x358(%ebp),%esi
    push   %esi
    call   func_6383b
    add    $0x4,%esp
    push   $0x0
    push   $0x0
    push   %esi
    call   func_63a30
    add    $0xc,%esp
    push   $0x5622
    push   %esi
    call   func_63c66
    add    $0x8,%esp
    push   $0x0
    push   $0x5622
    mov    0x21f(%ebp),%eax
    mov    $0xc800,%esi
    push   %eax
    mov    %esi,0x60(%esp)
    call   func_643bc
    add    $0xc,%esp
    mov    %eax,%ecx
    cmp    %esi,%eax
    jl     jump_4ab24
    mov    $0x1c9,%ebx
    mov    $data_82902,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4ab24:
    cmp    0x54(%esp),%ecx
    jle    jump_4ab2e
    mov    %ecx,0x54(%esp)
  jump_4ab2e:
    mov    0x54(%esp),%eax
    mov    $data_82911,%ebx
    mov    $0x4,%edx
    add    %eax,%eax
    call   func_2596c
    mov    0x54(%esp),%edx
    mov    %eax,0x238(%ebp)
    add    %eax,%edx
    mov    0x238(%ebp),%ebx
    mov    %edx,0x23c(%ebp)
    test   %ebx,%ebx
    jne    jump_4ab70
    mov    $0x1d0,%ebx
    mov    $data_82921,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4ab70:
    cmpl   $0x0,0x238(%ebp)
    jne    jump_4ab84
    xor    %eax,%eax
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4ab84:
    test   %edi,%edi
    je     jump_4ac7c
    mov    %edi,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,0x5c(%esp)
    test   %eax,%eax
    jne    jump_4abac
    mov    $0x1db,%ebx
    mov    $data_82930,%edx
    call   func_25878
  jump_4abac:
    mov    0x5c(%esp),%esi
    test   %esi,%esi
    jne    jump_4abbf
    xor    %eax,%eax
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4abbf:
    lea    0x50(%esp),%eax
    push   %eax
    push   $data_8293f
    push   %esi
    call   func_73431
    add    $0xc,%esp
    cmpl   $0x20,0x50(%esp)
    jle    jump_4abea
    mov    $0x1e2,%ebx
    mov    $data_82942,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4abea:
    lea    0x37a(%ebp),%eax
    xor    %esi,%esi
    mov    %eax,0x58(%esp)
    jmp    jump_4ac24
  jump_4abf8:
    movswl %si,%ecx
    imul   $0x1c,%ecx,%ecx
    mov    0x58(%esp),%eax
    mov    $0x18,%ebx
    mov    %esp,%edx
    add    %ecx,%eax
    call   func_72b40
    movb   $0x0,0x391(%ecx,%ebp,1)
    inc    %esi
    movl   $0x0,0x392(%ecx,%ebp,1)
  jump_4ac24:
    mov    0x50(%esp),%edx
    movswl %si,%eax
    cmp    %edx,%eax
    jge    jump_4ac68
    mov    %esp,%eax
    push   %eax
    push   $data_82951
    mov    0x64(%esp),%ebx
    push   %ebx
    call   func_73431
    add    $0xc,%esp
    mov    %esp,%edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    cmp    $0x18,%ecx
    jb     jump_4abf8
    mov    $0x1e8,%ebx
    mov    $data_82954,%edx
    xor    %eax,%eax
    call   func_25878
    jmp    jump_4abf8
  jump_4ac68:
    mov    0x50(%esp),%eax
    mov    %ax,0x6fa(%ebp)
    mov    0x5c(%esp),%eax
    call   func_7280e
  jump_4ac7c:
    movl   $0xffffffff,0x223(%ebp)
    movl   $0x0,0x22b(%ebp)
    movl   $0x0,0x233(%ebp)
    mov    0x54(%esp),%eax
    movb   $0x0,0x237(%ebp)
    mov    %eax,0x22f(%ebp)
    mov    $0xffffffff,%eax
  jump_4acb0:
    add    $0x60,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4acbc:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,(%esp)
    cmpl   $0xffffffff,0x22b(%eax)
    je     jump_4acdc
    cmpl   $0x0,0x20b(%eax)
    jne    jump_4ace3
  jump_4acdc:
    xor    %eax,%eax
    jmp    jump_4ae01
  jump_4ace3:
    movswl %di,%eax
    test   %eax,%eax
    jl     jump_4acf3
    cmp    0x6fa(%esi),%di
    jl     jump_4ad04
  jump_4acf3:
    mov    $0x200,%ebx
    mov    $data_82963,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4ad04:
    mov    0x6fa(%esi),%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    je     jump_4ad38
    lea    0x240(%esi),%eax
    call   func_1bea0
    mov    0x6fa(%esi),%ebp
    sar    $0x10,%ebp
    mov    %eax,%edx
    lea    0x0(,%ebp,8),%eax
    sub    %ebp,%eax
    mov    %edx,0x392(%esi,%eax,4)
  jump_4ad38:
    mov    %esi,%eax
    call   func_4ae0c
    mov    0x358(%esi),%ebp
    push   %ebp
    call   func_6383b
    add    $0x4,%esp
    push   $0x0
    push   $0x0
    push   %ebp
    call   func_63a30
    add    $0xc,%esp
    push   $0x5622
    push   %ebp
    call   func_63c66
    add    $0x8,%esp
    mov    0x6fb(%esi),%edx
    mov    %esi,%eax
    sar    $0x18,%edx
    call   func_4b33c
    movswl %di,%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    $0x200,%ebx
    shl    $0x2,%eax
    lea    0x37a(%esi),%edx
    xor    %ecx,%ecx
    add    %eax,%edx
    lea    0x240(%esi),%eax
    call   func_1bbfc
    mov    %eax,%ebp
    test   %eax,%eax
    je     jump_4adb9
    mov    $0x214,%ebx
    mov    $data_82972,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4adb9:
    test   %ebp,%ebp
    je     jump_4adc7
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_4adc7:
    cmpl   $0xffffffff,(%esp)
    jne    jump_4adeb
    movswl %di,%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    0x392(%esi,%eax,4),%edx
    lea    0x240(%esi),%eax
    call   func_1bf0c
  jump_4adeb:
    movl   $0xffffffff,0x227(%esi)
    mov    $0xffffffff,%eax
    mov    %di,0x6fc(%esi)
  jump_4ae01:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4ae0c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    cmpl   $0xffffffff,0x227(%eax)
    jne    jump_4ae5a
    mov    0x358(%eax),%ebx
    push   %ebx
    movl   $0x0,0x227(%eax)
    call   func_63b1f
    add    $0x4,%esp
    lea    0x240(%esi),%eax
    call   func_1bea0
    mov    0x6fa(%esi),%edx
    sar    $0x10,%edx
    mov    %eax,%ebx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    %ebx,0x392(%esi,%eax,4)
  jump_4ae5a:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4aea4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    cmpl   $0xffffffff,0x22b(%eax)
    je     jump_4af79
    cmpl   $0x0,0x20b(%eax)
    je     jump_4af79
    mov    0x358(%eax),%edi
    push   %edi
    call   func_644b5
    add    $0x4,%esp
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_4aeec
    movl   $0x0,0x233(%esi)
    mov    %dl,0x237(%esi)
  jump_4aeec:
    mov    0x22f(%esi),%ebx
    sub    0x233(%esi),%ebx
    cmp    $0x1400,%ebx
    jle    jump_4af05
    mov    $0x1400,%ebx
  jump_4af05:
    test   %ebx,%ebx
    je     jump_4af79
    mov    0x234(%esi),%eax
    lea    0x240(%esi),%ecx
    sar    $0x18,%eax
    mov    0x233(%esi),%ebp
    mov    0x238(%esi,%eax,4),%edx
    mov    %ecx,%eax
    add    %ebp,%edx
    call   func_1bf94
    mov    0x233(%esi),%edx
    add    %eax,%edx
    mov    %edx,0x233(%esi)
    test   %eax,%eax
    jne    jump_4af54
    mov    %ecx,%eax
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_1becc
    mov    %esi,%eax
    call   func_4ae0c
    jmp    jump_4af79
  jump_4af54:
    mov    0x234(%esi),%eax
    sar    $0x18,%eax
    push   %edx
    mov    0x238(%esi,%eax,4),%ecx
    mov    0x234(%esi),%eax
    push   %ecx
    sar    $0x18,%eax
    push   %eax
    push   %edi
    call   func_6459a
    add    $0x10,%esp
  jump_4af79:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4af80:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,0x4(%esp)
    cmpl   $0xffffffff,0x213(%eax)
    je     jump_4b091
    cmpl   $0x0,0x20b(%eax)
    je     jump_4b091
    movswl %dx,%edx
    call   func_4b530
    mov    %eax,(%esp)
    test   %eax,%eax
    je     jump_4b091
    mov    0x4(%esp),%edi
    mov    $0x1,%ebp
    add    $0x4,%edi
    jmp    jump_4afca
  jump_4afc7:
    inc    %ebp
    add    %eax,%edi
  jump_4afca:
    mov    0x4(%esp),%eax
    mov    0x376(%eax),%eax
    sar    $0x10,%eax
    cmp    %eax,%ebp
    jge    jump_4b091
    mov    0x358(%edi),%esi
    push   %esi
    call   func_63e3e
    add    $0x4,%esp
    cmp    $0x4,%eax
    je     jump_4afc7
    push   %esi
    call   func_6383b
    add    $0x4,%esp
    mov    (%esp),%eax
    mov    0xe(%eax),%eax
    push   $0x0
    sar    $0x10,%eax
    push   %eax
    push   %esi
    call   func_63a30
    add    $0xc,%esp
    mov    (%esp),%eax
    mov    0xc(%eax),%edi
    push   %edi
    mov    0x8(%eax),%ebp
    push   %ebp
    push   %esi
    call   func_639ae
    add    $0xc,%esp
    mov    (%esp),%eax
    mov    0x10(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    push   %esi
    call   func_63c66
    add    $0x8,%esp
    mov    0x4(%esp),%eax
    mov    0x6fc(%eax),%eax
    sar    $0x18,%eax
    push   %eax
    push   %esi
    call   func_63cdc
    add    $0x8,%esp
    push   $0x1
    push   %esi
    call   func_63dc8
    add    $0x8,%esp
    push   %esi
    call   func_63ab2
    add    $0x4,%esp
    mov    (%esp),%eax
    xor    %edx,%edx
    mov    %esi,(%eax)
    mov    0x4(%esp),%eax
    mov    (%esp),%ebx
    add    $0xbb4,%eax
    jmp    jump_4b081
  jump_4b078:
    inc    %edx
    add    $0x16,%eax
    cmp    $0x6,%edx
    jge    jump_4b091
  jump_4b081:
    cmp    %ebx,%eax
    je     jump_4b078
    cmp    (%eax),%esi
    jne    jump_4b078
    movl   $0x0,(%eax)
    jmp    jump_4b078
  jump_4b091:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4b27c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    cmpl   $0xffffffff,0x20f(%eax)
    jne    jump_4b2ef
    mov    0xca8(%eax),%dx
    xor    %ebx,%ebx
    test   %dx,%dx
    jle    jump_4b2af
  jump_4b29b:
    movswl %bx,%edx
    mov    %esi,%eax
    call   func_4a8c4
    inc    %ebx
    cmp    0xca8(%esi),%bx
    jl     jump_4b29b
  jump_4b2af:
    mov    %esi,%edi
    xor    %ebp,%ebp
    jmp    jump_4b2c8
  jump_4b2b5:
    mov    0x358(%edi),%ebx
    push   %ebx
    add    $0x4,%edi
    inc    %ebp
    call   func_63b1f
    add    $0x4,%esp
  jump_4b2c8:
    mov    0x376(%esi),%edx
    sar    $0x10,%edx
    cmp    %edx,%ebp
    jl     jump_4b2b5
    mov    0xbb8(%esi),%eax
    call   func_259ac
    call   func_621fb
    movl   $0x0,0x20f(%esi)
  jump_4b2ef:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4b2f8:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_4b30c
    mov    %edx,%eax
    call   func_4b318
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_4b30c:
/*----------------------------------------------------------------*/
    movl   $0xffffffff,0x217(%eax)
    ret


/*----------------------------------------------------------------*/
func_4b318:
/*----------------------------------------------------------------*/
    movl   $0xffffffff,0x213(%eax)
    ret


/*----------------------------------------------------------------*/
func_4b33c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    movsbl %dl,%ebx
    test   %ebx,%ebx
    jl     jump_4b350
    cmp    $0x7f,%ebx
    jg     jump_4b350
    mov    %dl,0x6fe(%eax)
  jump_4b350:
    mov    0x6fb(%eax),%ebx
    sar    $0x18,%ebx
    push   %ebx
    mov    0x358(%eax),%edx
    push   %edx
    call   func_63cdc
    add    $0x8,%esp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4b384:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,0x8(%esp)
    mov    $data_82a08,%eax
    xor    %edx,%edx
    mov    0x8(%esp),%ecx
    call   func_1bb10
    xor    %esi,%esi
    xor    %edi,%edi
    mov    %eax,%ebp
    mov    %esi,0xc(%esp)
    jmp    jump_4b3bb
  jump_4b3ad:
    mov    (%esp),%ebx
    add    $0x4,%ecx
    inc    %edi
    add    %ebx,%esi
    cmp    $0x3,%edi
    jge    jump_4b420
  jump_4b3bb:
    lea    0x4(%esp),%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    push   $data_82a14
    push   %ebp
    call   func_73431
    add    $0x10,%esp
    mov    %esi,0xc50(%ecx)
    mov    (%esp),%eax
    add    %esi,%eax
    dec    %eax
    mov    %eax,0xc5c(%ecx)
    mov    0x4(%esp),%eax
    mov    %eax,0xc44(%ecx)
    mov    (%esp),%eax
    imul   0x4(%esp),%eax
    add    %eax,0xc(%esp)
    test   %edi,%edi
    jle    jump_4b3ad
    mov    0xc44(%ecx),%eax
    cmp    0xc40(%ecx),%eax
    jge    jump_4b3ad
    mov    $0x347,%ebx
    mov    $data_82a1a,%edx
    xor    %eax,%eax
    call   func_25878
    jmp    jump_4b3ad
  jump_4b420:
    cmp    $0x6,%esi
    je     jump_4b436
    mov    $0x34d,%ebx
    mov    $data_82a29,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4b436:
    mov    $data_82a38,%ebx
    mov    $0x1,%edx
    mov    0xc(%esp),%eax
    call   func_2596c
    mov    0x8(%esp),%edx
    mov    %eax,%ecx
    xor    %ebx,%ebx
    mov    0x8(%esp),%eax
    mov    %edx,%edi
    add    $0xbb4,%eax
    jmp    jump_4b478
  jump_4b45e:
    mov    %ecx,0xbb8(%edi)
    add    $0x16,%edi
    inc    %ebx
    mov    0xc44(%edx),%esi
    add    $0x16,%eax
    add    %esi,%ecx
    cmp    $0x6,%ebx
    jge    jump_4b49d
  jump_4b478:
    movl   $0x0,(%eax)
    movw   $0x0,0x10(%eax)
    movw   $0x5622,0x12(%eax)
    movw   $0xffff,0x14(%eax)
    cmp    0xc5c(%edx),%ebx
    jle    jump_4b45e
    add    $0x4,%edx
    jmp    jump_4b45e
  jump_4b49d:
    mov    %esp,%eax
    push   %eax
    push   $data_82a42
    push   %ebp
    call   func_73431
    add    $0xc,%esp
    mov    0x8(%esp),%edx
    mov    (%esp),%eax
    mov    %ax,0x700(%edx)
    xor    %eax,%eax
    mov    0x700(%edx),%ax
    cmp    $0x64,%eax
    jl     jump_4b4db
    mov    $0x369,%ebx
    mov    $data_82a45,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4b4db:
    mov    0x8(%esp),%ebx
    mov    0x8(%esp),%ecx
    mov    0x8(%esp),%esi
    xor    %edx,%edx
    add    $0x702,%ebx
    jmp    jump_4b510
  jump_4b4f1:
    push   %ebx
    push   $data_82a54
    add    $0x2,%ecx
    push   %ebp
    inc    %edx
    add    $0xa,%ebx
    call   func_73431
    add    $0xc,%esp
    movw   $0xffff,0xae8(%ecx)
  jump_4b510:
    xor    %eax,%eax
    mov    0x700(%esi),%ax
    cmp    %eax,%edx
    jl     jump_4b4f1
    mov    %ebp,%eax
    call   func_7280e
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4b530:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x164,%esp
    mov    %eax,%esi
    mov    %dx,0x160(%esp)
    cmpl   $0xffffffff,0x213(%eax)
    je     jump_4b557
    cmpl   $0x0,0x20b(%eax)
    jne    jump_4b55e
  jump_4b557:
    xor    %eax,%eax
    jmp    jump_4b90e
  jump_4b55e:
    mov    0x15e(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_4b579
    xor    %edx,%edx
    mov    0x700(%esi),%dx
    cmp    %edx,%eax
    jl     jump_4b58a
  jump_4b579:
    mov    $0x37b,%ebx
    mov    $data_82a57,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4b58a:
    mov    0x15e(%esp),%eax
    xor    %ecx,%ecx
    sar    $0x10,%eax
    mov    %ecx,0x150(%esp)
    test   %eax,%eax
    jl     jump_4b907
    xor    %edx,%edx
    mov    0x700(%esi),%dx
    cmp    %edx,%eax
    jge    jump_4b907
    mov    0xae8(%esi,%eax,2),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_4b66d
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    sub    %edx,%eax
    lea    0xbb4(%esi),%edx
    add    %eax,%eax
    add    %eax,%edx
    mov    %esi,%ecx
    mov    %edx,0x150(%esp)
    xor    %eax,%eax
    jmp    jump_4b5f2
  jump_4b5ee:
    add    $0x2,%ecx
    inc    %eax
  jump_4b5f2:
    xor    %edi,%edi
    mov    0xbb2(%esi),%di
    cmp    %edi,%eax
    jge    jump_4b62a
    mov    0x15e(%esp),%edi
    movzwl 0xc38(%ecx),%ebp
    sar    $0x10,%edi
    cmp    %edi,%ebp
    je     jump_4b62a
    jmp    jump_4b5ee
  jump_4b616:
    add    $0x2,%ecx
    mov    0xc38(%ecx),%di
    inc    %eax
    mov    %di,0xc36(%ecx)
    jmp    jump_4b633
  jump_4b62a:
    lea    0x0(,%eax,2),%ecx
    add    %esi,%ecx
  jump_4b633:
    xor    %edi,%edi
    mov    0xbb2(%esi),%di
    cmp    %edi,%eax
    jl     jump_4b616
    mov    0x160(%esp),%eax
    mov    %ax,0xc36(%esi,%edi,2)
    mov    0x150(%esp),%eax
    add    $0x164,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_4b662:
    inc    %ecx
    add    $0x4,%eax
    cmp    $0x3,%ecx
    jl     jump_4b6c9
    jmp    jump_4b6d6
  jump_4b66d:
    mov    %eax,%edx
    shl    $0x2,%eax
    add    %edx,%eax
    lea    0x702(%esi),%edx
    add    %eax,%eax
    add    %edx,%eax
    push   %eax
    push   $data_82a66
    lea    0x120(%esp),%eax
    push   %eax
    mov    $0x200,%ebx
    call   func_720c9
    add    $0xc,%esp
    mov    %esp,%eax
    lea    0x118(%esp),%edx
    call   func_1bb78
    mov    %esp,%eax
    call   func_1bbfc
    mov    %esp,%eax
    call   func_1be28
    xor    %edx,%edx
    mov    %eax,0x158(%esp)
    xor    %ecx,%ecx
    mov    0x158(%esp),%edi
    mov    %esi,%eax
  jump_4b6c9:
    cmp    0xc44(%eax),%edi
    jge    jump_4b662
    mov    $0xffffffff,%edx
  jump_4b6d6:
    cmp    $0xffffffff,%edx
    je     jump_4b6ec
    mov    $0x3ad,%ebx
    mov    $data_82a72,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4b6ec:
    mov    $0xffffffff,%eax
    mov    %ecx,%edx
    mov    0xc50(%esi,%ecx,4),%ecx
    mov    %eax,0x14c(%esp)
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    shl    $0x2,%eax
    lea    0x0(,%edx,4),%ebp
    sub    %ecx,%eax
    add    %esi,%ebp
    add    %eax,%eax
    mov    0xc5c(%ebp),%ebx
    add    %esi,%eax
    cmp    %ebx,%ecx
    jle    jump_4b736
    jmp    jump_4b74b
  jump_4b728:
    inc    %ecx
    mov    0xc5c(%ebp),%edi
    add    $0x16,%eax
    cmp    %edi,%ecx
    jg     jump_4b74b
  jump_4b736:
    mov    0xbc6(%eax),%edi
    sar    $0x10,%edi
    cmp    $0xffffffff,%edi
    jne    jump_4b728
    mov    %ecx,0x14c(%esp)
  jump_4b74b:
    cmpl   $0xffffffff,0x14c(%esp)
    jne    jump_4b7e4
    shl    $0x2,%edx
    mov    %esi,0x15c(%esp)
    xor    %ebp,%ebp
    mov    %edx,0x154(%esp)
    jmp    jump_4b780
  jump_4b76e:
    mov    0x15c(%esp),%ebx
    add    $0x2,%ebx
    inc    %ebp
    mov    %ebx,0x15c(%esp)
  jump_4b780:
    xor    %eax,%eax
    mov    0xbb2(%esi),%ax
    cmp    %eax,%ebp
    jge    jump_4b7e4
    mov    0x15c(%esp),%edx
    xor    %eax,%eax
    mov    0xc38(%edx),%ax
    mov    0xae8(%esi,%eax,2),%edi
    mov    0x154(%esp),%eax
    add    %esi,%eax
    sar    $0x10,%edi
    cmp    0xc50(%eax),%edi
    jl     jump_4b76e
    cmp    0xc5c(%eax),%edi
    jg     jump_4b76e
    imul   $0x16,%edi,%eax
    add    %esi,%eax
    mov    0xbb4(%eax),%ecx
    test   %ecx,%ecx
    je     jump_4b7dd
    push   %ecx
    call   func_63e3e
    add    $0x4,%esp
    cmp    $0x4,%eax
    je     jump_4b76e
  jump_4b7dd:
    mov    %edi,0x14c(%esp)
  jump_4b7e4:
    mov    0x14c(%esp),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_4b8fe
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    shl    $0x2,%eax
    sub    %ecx,%eax
    lea    0xbb4(%esi),%edx
    add    %eax,%eax
    add    %eax,%edx
    mov    0x12(%edx),%ebp
    sar    $0x10,%ebp
    mov    %edx,0x150(%esp)
    cmp    $0xffffffff,%ebp
    je     jump_4b882
    mov    %esi,%ecx
    xor    %eax,%eax
    jmp    jump_4b828
  jump_4b824:
    add    $0x2,%ecx
    inc    %eax
  jump_4b828:
    xor    %edi,%edi
    mov    0xbb2(%esi),%di
    cmp    %edi,%eax
    jge    jump_4b858
    xor    %edi,%edi
    mov    0xc38(%ecx),%di
    cmp    %ebp,%edi
    je     jump_4b858
    jmp    jump_4b824
  jump_4b844:
    add    $0x2,%ecx
    mov    0xc38(%ecx),%di
    inc    %eax
    mov    %di,0xc36(%ecx)
    jmp    jump_4b861
  jump_4b858:
    lea    0x0(,%eax,2),%ecx
    add    %esi,%ecx
  jump_4b861:
    xor    %edi,%edi
    mov    0xbb2(%esi),%di
    cmp    %edi,%eax
    jl     jump_4b844
    mov    %edi,%edx
    dec    %edx
    mov    %dx,0xbb2(%esi)
    movw   $0xffff,0xaea(%esi,%ebp,2)
  jump_4b882:
    mov    0x150(%esp),%edx
    mov    %esp,%eax
    mov    0x4(%edx),%edx
    call   func_1bf1c
    mov    0x150(%esp),%eax
    mov    0x4(%eax),%eax
    mov    0x150(%esp),%edx
    add    $0x2a,%eax
    mov    %eax,0x8(%edx)
    mov    0x158(%esp),%eax
    sub    $0x2b,%eax
    mov    %eax,0xc(%edx)
    mov    0x160(%esp),%eax
    mov    %ax,0x14(%edx)
    mov    0x15e(%esp),%eax
    sar    $0x10,%eax
    mov    0x14c(%esp),%edx
    mov    %dx,0xaea(%esi,%eax,2)
    mov    0xbb2(%esi),%ax
    xor    %edx,%edx
    mov    %ax,%dx
    inc    %eax
    mov    %ax,0xbb2(%esi)
    mov    0x160(%esp),%eax
    mov    %ax,0xc38(%esi,%edx,2)
  jump_4b8fe:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
  jump_4b907:
    mov    0x150(%esp),%eax
  jump_4b90e:
    add    $0x164,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4b920:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc8,%esp
    mov    %eax,0xb0(%esp)
    mov    %ecx,%edi
    mov    %edx,%ebp
    mov    0xa(%edx),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    mov    $data_93bc5,%esi
    sub    %edx,%eax
    xor    %edx,%edx
    shl    $0x5,%eax
    mov    data_869ce,%dx
    add    %eax,%esi
    mov    $data_11f10c,%eax
    call   func_1b084
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_4b975
    mov    $0x41,%ebx
    mov    $data_82a84,%edx
    call   func_25878
  jump_4b975:
    push   $0x4b
    push   $0x4b
    mov    (%esi),%edx
    push   %edx
    push   %ecx
    mov    0xc0(%esp),%ebx
    push   %ebx
    call   func_57efc
    add    $0x14,%esp
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_869d0,%dx
    call   func_1b084
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_4b9b5
    mov    $0x45,%ebx
    mov    $data_82a92,%edx
    call   func_25878
  jump_4b9b5:
    xor    %edx,%edx
    mov    0x16(%ebp),%dx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    xor    %edx,%edx
    push   $0x4b
    mov    0x14(%ebp),%dx
    push   $0xc8
    add    %edx,%eax
    push   %eax
    push   %ecx
    mov    0xc0(%esp),%ecx
    push   %ecx
    call   func_57efc
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0x14,%esp
    mov    data_92e18(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0xb4(%esp)
    mov    %eax,0xa8(%esp)
    test   %edi,%edi
    je     jump_4ba41
    cmpl   $0x96,data_c84ec
    jge    jump_4ba36
    movl   $0xf3,0xa8(%esp)
    jmp    jump_4ba41
  jump_4ba36:
    movl   $0xf3,0xb4(%esp)
  jump_4ba41:
    mov    $0x1,%eax
    mov    data_f458e,%cl
    shl    %cl,%eax
    movzbl 0x14(%esi),%edi
    mov    %eax,%ecx
    cmp    %eax,%edi
    je     jump_4ba79
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    cmp    data_92e1d(,%eax,2),%esi
    jne    jump_4ba97
    test   %ecx,%edi
    je     jump_4ba97
  jump_4ba79:
    mov    $0xa,%ebx
    mov    $0x4,%edx
    xor    %ecx,%ecx
    mov    0xb0(%esp),%eax
    mov    data_f458e,%cl
    call   func_4f228
  jump_4ba97:
    mov    0xa(%ebp),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    0xb0(%esp),%esi
    shl    $0x5,%eax
    push   $0x0
    add    $data_93bc5,%eax
    mov    $0x12,%ebx
    lea    0x1c(%eax),%ecx
    mov    $data_fd38a,%edi
    mov    0xaa(%esp),%eax
    push   $0xff
    sar    $0x10,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %eax
    mov    0xbc(%esp),%esi
    mov    $0x78,%edx
    push   $0x0
    mov    $data_fd382,%eax
    mov    $data_fd3aa,%edi
    call   func_2af88
    push   $0x0
    lea    0x24(%ebp),%eax
    mov    $0xf,%ebx
    mov    %eax,0xbc(%esp)
    mov    0xb6(%esp),%eax
    push   $0xff
    sar    $0x10,%eax
    mov    $0x113,%edx
    push   %eax
    mov    0xc4(%esp),%ecx
    mov    %eax,0xb8(%esp)
    push   $0x0
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    0xb8(%esp),%edx
    mov    $data_fd3a2,%eax
    call   func_2abd4
    lea    0x127(%eax),%edx
    xor    %eax,%eax
    mov    0x16(%ebp),%ax
    mov    data_f4540(,%eax,4),%esi
    xor    %eax,%eax
    mov    0x14(%ebp),%ax
    push   %esi
    mov    data_f452c(,%eax,4),%edi
    push   %edi
    mov    $0x88,%eax
    call   func_1ce70
    push   %eax
    lea    0xc(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
    push   $0x0
    lea    0x4(%esp),%ecx
    push   $0xff
    mov    0xb4(%esp),%eax
    mov    $0x10,%ebx
    push   %eax
    mov    $data_fd38a,%edi
    mov    0xbc(%esp),%esi
    push   $0x0
    mov    $data_fd382,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    $0x1e,%edx
    mov    0x5a(%ebp),%ebx
    mov    %edx,0xa0(%esp)
    cmp    $0xffffffff,%ebx
    jne    jump_4bc1a
    mov    $0x89,%eax
    mov    0xb0(%esp),%esi
    mov    0xac(%esp),%ecx
    call   func_1ce70
    push   $0x0
    mov    $data_fd38a,%edi
    mov    %edx,%ebx
    push   $0xff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %ecx
    mov    $0x113,%edx
    mov    $0x27,%esi
    push   $0x0
    mov    %eax,%ecx
    mov    $data_fd382,%eax
    mov    %esi,0xb0(%esp)
    call   func_2af88
  jump_4bc1a:
    cmpb   $0xff,0x54(%ebp)
    je     jump_4bd02
    mov    $0xf,%ecx
    lea    0x64(%esp),%edi
    mov    $data_869d4,%esi
    xor    %edx,%edx
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x54(%ebp),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    data_f3e46(,%eax,8),%ax
    xor    %ah,%ah
    and    $0x2,%al
    and    $0xffff,%eax
    jne    jump_4bcc9
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_349a8
    mov    %ax,%dx
    cmp    $0xffff,%edx
    jne    jump_4bc99
    mov    $0x8a,%eax
    lea    0x64(%esp),%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_4bc7e:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_4bc96
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_4bc7e
  jump_4bc96:
    pop    %edi
    jmp    jump_4bcc9
  jump_4bc99:
    cmp    $0x1,%edx
    jne    jump_4bca5
    mov    $0x1c,%eax
    jmp    jump_4bcaa
  jump_4bca5:
    mov    $0x1d,%eax
  jump_4bcaa:
    call   func_1ce70
    push   %eax
    push   %edx
    mov    $0x8b,%eax
    call   func_1ce70
    push   %eax
    lea    0x70(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
  jump_4bcc9:
    xor    %edx,%edx
    lea    0x64(%esp),%eax
    mov    0x54(%ebp),%dl
    push   %eax
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    add    $data_f3e40,%eax
    add    $0xa,%eax
    push   %eax
    mov    $0x8c,%eax
    call   func_1ce70
    push   %eax
    lea    0xc(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
    jmp    jump_4bd6f
  jump_4bd02:
    mov    $0x8d,%eax
    mov    %esp,%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
  jump_4bd11:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_4bd29
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_4bd11
  jump_4bd29:
    pop    %edi
    mov    0x42(%ebp),%ax
    cmp    0x4c(%ebp),%ax
    jne    jump_4bd64
    mov    $0x8e,%eax
    mov    %esp,%edi
    call   func_1ce70
    mov    %eax,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_4bd4b:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_4bd63
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_4bd4b
  jump_4bd63:
    pop    %edi
  jump_4bd64:
    movl   $0xf3,0xb4(%esp)
  jump_4bd6f:
    mov    0xb0(%esp),%esi
    push   $0x0
    mov    0xb6(%esp),%eax
    lea    0x4(%esp),%ecx
    push   $0xff
    sar    $0x10,%eax
    mov    0xa8(%esp),%ebx
    push   %eax
    mov    $0x113,%edx
    mov    $data_fd38a,%edi
    push   $0x0
    mov    $data_fd382,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    $0x19,%eax
    xor    %esi,%esi
    mov    %eax,0xa0(%esp)
    mov    data_86a10,%ax
    mov    data_efd80,%di
    mov    %eax,0xbc(%esp)
    jmp    jump_4bddc
  jump_4bdd2:
    inc    %esi
    cmp    $0x2,%esi
    jge    jump_4be62
  jump_4bddc:
    xor    %edx,%edx
    mov    %ebp,%eax
    mov    0xbc(%esp,%esi,1),%dl
    call   func_349dc
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    je     jump_4bdd2
    mov    0x10(%ebp),%edx
    mov    0x2(%edx,%eax,4),%ax
    xor    %ah,%ah
    and    $0x1,%al
    and    $0xffff,%eax
    je     jump_4bdd2
    push   $0x0
    push   $0x4000
    push   $0x4000
    push   $0x0
    push   $data_c8c44
    mov    0xb4(%esp),%eax
    push   %eax
    xor    %eax,%eax
    push   $0xf5
    mov    0xd8(%esp,%esi,1),%al
    xor    %edx,%edx
    push   %eax
    mov    %di,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    0xd4(%esp),%edx
    push   %edx
    call   func_589f1
    add    $0x28,%esp
    addl   $0x19,0xa0(%esp)
    jmp    jump_4bdd2
  jump_4be62:
    mov    data_efd90,%ax
    mov    %eax,0xc0(%esp)
    xor    %eax,%eax
    mov    0x46(%ebp),%ax
    push   $0x3fe80000
    mov    %eax,0xbc(%esp)
    push   $0x0
    fildl  0xc0(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_73ee0
    call   func_72258
    fistpl 0xb8(%esp)
    mov    0xb8(%esp),%eax
    mov    %eax,0xc4(%esp)
    xor    %eax,%eax
    mov    0xc4(%esp),%ax
    test   %eax,%eax
    jge    jump_4bec8
    xor    %ecx,%ecx
    mov    %ecx,0xc4(%esp)
    jmp    jump_4bed8
  jump_4bec8:
    cmp    $0x14,%eax
    jle    jump_4bed8
    movl   $0x14,0xc4(%esp)
  jump_4bed8:
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_c8c44
    push   $0x3c
    xor    %eax,%eax
    push   $0x118
    mov    0xe0(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0xe0(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    0xd4(%esp),%edx
    push   %edx
    call   func_589f1
    mov    data_efd92,%ax
    add    $0x28,%esp
    mov    %eax,0xc0(%esp)
    xor    %eax,%eax
    mov    0x44(%ebp),%ax
    push   $0x3fe80000
    mov    %eax,0xbc(%esp)
    push   $0x0
    fildl  0xc0(%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_73ee0
    call   func_72258
    fistpl 0xb8(%esp)
    mov    0xb8(%esp),%eax
    mov    %eax,0xc4(%esp)
    xor    %eax,%eax
    mov    0xc4(%esp),%ax
    test   %eax,%eax
    jge    jump_4bf88
    xor    %edi,%edi
    mov    %edi,0xc4(%esp)
    jmp    jump_4bf98
  jump_4bf88:
    cmp    $0x14,%eax
    jle    jump_4bf98
    movl   $0x14,0xc4(%esp)
  jump_4bf98:
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_c8c44
    push   $0x3c
    xor    %eax,%eax
    push   $0x15e
    mov    0xe0(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0xe0(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    0xd4(%esp),%ebx
    push   %ebx
    call   func_589f1
    mov    data_efd94,%ax
    add    $0x28,%esp
    mov    %eax,0xc0(%esp)
    mov    0x48(%ebp),%ax
    mov    %eax,0xc4(%esp)
    xor    %eax,%eax
    mov    0xc4(%esp),%ax
    test   %eax,%eax
    jge    jump_4c013
    xor    %edx,%edx
    mov    %edx,0xc4(%esp)
    jmp    jump_4c023
  jump_4c013:
    cmp    $0x14,%eax
    jle    jump_4c023
    movl   $0x14,0xc4(%esp)
  jump_4c023:
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_c8c44
    push   $0x3c
    xor    %eax,%eax
    push   $0x1a4
    mov    0xe0(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0xe0(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    0xd4(%esp),%ecx
    push   %ecx
    mov    $0x1ea,%edi
    mov    $0x3c,%esi
    call   func_589f1
    mov    $0x6,%ebx
    add    $0x28,%esp
    mov    data_efd9c,%ax
    mov    %esi,0xa4(%esp)
    mov    %eax,0xc0(%esp)
    mov    %ebx,0xc4(%esp)
    xor    %esi,%esi
    jmp    jump_4c09c
  jump_4c09b:
    inc    %esi
  jump_4c09c:
    xor    %eax,%eax
    mov    0x4a(%ebp),%ax
    cmp    %eax,%esi
    jge    jump_4c142
    xor    %eax,%eax
    mov    0x4c(%ebp),%ax
    cmp    %eax,%esi
    jne    jump_4c0bf
    movl   $0x7,0xc4(%esp)
  jump_4c0bf:
    xor    %eax,%eax
    mov    0x42(%ebp),%ax
    cmp    %eax,%esi
    jne    jump_4c0d4
    movl   $0x8,0xc4(%esp)
  jump_4c0d4:
    mov    0xa4(%esp),%ecx
    push   %ecx
    xor    %eax,%eax
    push   %edi
    mov    0xcc(%esp),%ax
    xor    %edx,%edx
    push   %eax
    mov    0xcc(%esp),%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    0xc0(%esp),%eax
    push   %eax
    call   func_57efc
    mov    $0xa,%ecx
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    add    $0x5,%edi
    add    $0x14,%esp
    cmp    $0x9,%edx
    jne    jump_4c09b
    mov    0xa4(%esp),%edx
    add    $0x5,%edx
    mov    $0x1ea,%edi
    mov    %edx,0xa4(%esp)
    jmp    jump_4c09b
  jump_4c142:
    add    $0xc8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret

vtable_4c14c:
    .long   func_4c4b6
    .long   func_4c51c
    .long   func_4c202
    .long   func_4c26b
    .long   func_4c2bd


/*----------------------------------------------------------------*/
func_4c160:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x15c,%esp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    %ecx,%edi
    mov    %edx,0x134(%esp)
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_86a12,%dx
    call   func_1b084
    push   $0x32
    mov    0xa7(%esi),%edx
    push   $0x41
    sar    $0x18,%edx
    push   %edx
    push   %eax
    push   %ebp
    call   func_57efc
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0x14,%esp
    mov    data_92e18(,%eax,2),%al
    and    $0xff,%eax
    shl    $0x2,%eax
    add    $0x13,%eax
    mov    %eax,0x154(%esp)
    test   %edi,%edi
    je     jump_4c1e1
    movl   $0xf3,0x154(%esp)
  jump_4c1e1:
    mov    0x134(%esp),%eax
    mov    0x58(%eax),%al
    dec    %al
    cmp    $0x4,%al
    ja     jump_4c582
    and    $0xff,%eax
    jmp    *%cs:vtable_4c14c(,%eax,4)


/*----------------------------------------------------------------*/
func_4c202:
/*----------------------------------------------------------------*/
    mov    0x134(%esp),%esi
    mov    0x59(%esi),%esi
    lea    0x24(%esi),%eax
    push   %eax
    mov    $0x8f,%eax
    call   func_1ce70
    push   %eax
    lea    0x8(%esp),%eax
    push   %eax
    xor    %edx,%edx
    xor    %ecx,%ecx
    call   func_720c9
    mov    $data_11f10c,%eax
    add    $0xc,%esp
    mov    data_86a16,%dx
    xor    %ebx,%ebx
    call   func_1b084
    push   $0x31
    mov    0x16(%esi),%cx
    mov    %eax,%edx
    lea    0x0(,%ecx,4),%eax
    mov    0x14(%esi),%bx
    add    %ecx,%eax
    push   $0x24e
    add    %ebx,%eax
    push   %eax
    push   %edx
    push   %ebp
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_4c594


/*----------------------------------------------------------------*/
func_4c26b:
/*----------------------------------------------------------------*/
    mov    0x134(%esp),%ecx
    mov    0x59(%ecx),%ecx
    lea    0x1c(%ecx),%eax
    push   %eax
    mov    $0x90,%eax
    call   func_1ce70
    push   %eax
    lea    0x8(%esp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_720c9
    add    $0xc,%esp
    mov    $data_11f10c,%eax
    mov    data_86a14,%dx
    call   func_1b084
    push   $0x31
    push   $0x24e
    mov    (%ecx),%esi
    push   %esi
    push   %eax
    push   %ebp
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_4c594


/*----------------------------------------------------------------*/
func_4c2bd:
/*----------------------------------------------------------------*/
    mov    0x134(%esp),%edx
    mov    0x59(%edx),%edx
    lea    0xf0(%esp),%ecx
    xor    %ebx,%ebx
    mov    0x4(%edx),%esi
    mov    (%edx),%eax
    mov    %ecx,0x120(%esp)
    mov    %ebx,0xfc(%esp)
    mov    %ebx,0x100(%esp)
    mov    %ebx,0x104(%esp)
    flds   0x8(%eax)
    fsubs  0x8(%esi)
    fstps  0xfc(%esp)
    flds   0xc(%eax)
    fsubs  0xc(%esi)
    add    $0x8,%eax
    fstps  0x100(%esp)
    flds   0x8(%eax)
    fsubs  0x10(%esi)
    mov    0xfc(%esp),%eax
    fstps  0x104(%esp)
    flds   0x100(%esp)
    fmul   %st(0),%st
    mov    %eax,0xf0(%esp)
    mov    0x100(%esp),%eax
    flds   0xfc(%esp)
    fmul   %st(0),%st
    mov    %eax,0xf4(%esp)
    faddp  %st,%st(1)
    mov    0x104(%esp),%eax
    flds   0x104(%esp)
    fmul   %st(0),%st
    mov    %eax,0xf8(%esp)
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    mov    0x13c(%esp),%ebx
    call   func_721f0
    mov    0x134(%esp),%eax
    mov    0xc(%ebx),%ecx
    mov    0x8(%eax),%eax
    add    %ecx,%eax
    add    $0x8,%esi
    mov    %eax,0x124(%esp)
    fstps  0x128(%esp)
    fildl  0x124(%esp)
    mov    0x23(%edx),%ah
    fstps  0x12c(%esp)
    test   $0x1,%ah
    je     jump_4c3c0
    flds   0x12c(%esp)
    fmuls  data_82ab6
    fstps  0x12c(%esp)
  jump_4c3c0:
    mov    0x134(%esp),%esi
    mov    0x54(%esi),%esi
    sar    $0x10,%esi
    mov    %esi,%eax
    shl    $0x5,%eax
    sub    %esi,%eax
    shl    $0x3,%eax
    sub    %esi,%eax
    cmpb   $0x12,data_92fb3(,%eax,2)
    jne    jump_4c410
    fld1
    fcomps 0x12c(%esp)
    fnstsw %ax
    sahf
    jbe    jump_4c3fc
    movl   $0x3f800000,0x12c(%esp)
  jump_4c3fc:
    flds   0x12c(%esp)
    fmuls  data_82aba
    fstps  0x12c(%esp)
  jump_4c410:
    mov    0x134(%esp),%eax
    flds   0x128(%esp)
    fsubs  0x9e(%eax)
    fdivs  0x12c(%esp)
    mov    $0x91,%eax
    call   func_72258
    fistpl 0x124(%esp)
    call   func_1ce70
    mov    %eax,%edi
    mov    0x134(%esp),%eax
    mov    0x124(%esp),%esi
    mov    0xa2(%eax),%ebx
    inc    %esi
    test   $0x7fffffff,%ebx
    jne    jump_4c464
    mov    (%edx),%eax
    jmp    jump_4c467
  jump_4c464:
    mov    0x4(%edx),%eax
  jump_4c467:
    mov    $0x1,%edx
    xor    %ebx,%ebx
    mov    data_f458e,%cl
    mov    0x17(%eax),%bl
    shl    %cl,%edx
    test   %edx,%ebx
    je     jump_4c480
    lea    0x1c(%eax),%edi
  jump_4c480:
    cmp    $0x1,%esi
    jne    jump_4c48c
    mov    $0x1c,%eax
    jmp    jump_4c491
  jump_4c48c:
    mov    $0x1d,%eax
  jump_4c491:
    call   func_1ce70
    push   %eax
    push   %esi
    push   %edi
    mov    $0x92,%eax
    call   func_1ce70
    push   %eax
    lea    0x10(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x14,%esp
    jmp    jump_4c594


/*----------------------------------------------------------------*/
func_4c4b6:
/*----------------------------------------------------------------*/
    mov    0x134(%esp),%esi
    mov    0x59(%esi),%esi
    lea    0x24(%esi),%eax
    push   %eax
    mov    $0x93,%eax
    call   func_1ce70
    push   %eax
    lea    0x8(%esp),%eax
    push   %eax
    xor    %edx,%edx
    xor    %ecx,%ecx
    call   func_720c9
    mov    $data_11f10c,%eax
    add    $0xc,%esp
    mov    data_86a16,%dx
    xor    %ebx,%ebx
    call   func_1b084
    push   $0x31
    mov    0x16(%esi),%cx
    mov    %eax,%edx
    lea    0x0(,%ecx,4),%eax
    mov    0x14(%esi),%bx
    add    %ecx,%eax
    push   $0x24e
    add    %ebx,%eax
    push   %eax
    push   %edx
    push   %ebp
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_4c594


/*----------------------------------------------------------------*/
func_4c51c:
/*----------------------------------------------------------------*/
    mov    0x134(%esp),%esi
    mov    0x59(%esi),%esi
    lea    0x24(%esi),%eax
    push   %eax
    mov    $0x94,%eax
    call   func_1ce70
    push   %eax
    lea    0x8(%esp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_720c9
    mov    $data_11f10c,%eax
    add    $0xc,%esp
    mov    data_86a16,%dx
    xor    %ecx,%ecx
    call   func_1b084
    push   $0x31
    mov    %eax,%edx
    mov    0x16(%esi),%cx
    xor    %eax,%eax
    lea    0x0(,%ecx,4),%ebx
    mov    0x14(%esi),%ax
    add    %ecx,%ebx
    push   $0x24e
    add    %ebx,%eax
    push   %eax
    push   %edx
    push   %ebp
    call   func_57efc
    add    $0x14,%esp
    jmp    jump_4c594
  jump_4c582:
    push   $data_82aa0
    lea    0x4(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x8,%esp
  jump_4c594:
    mov    0x134(%esp),%eax
    mov    0x5d(%eax),%bh
    test   %bh,%bh
    je     jump_4c600
    cmp    $0x7,%bh
    je     jump_4c600
    cmpb   $0x4,0x58(%eax)
    jne    jump_4c600
    mov    $0x95,%eax
    mov    0x134(%esp),%edx
    call   func_1ce70
    cmpb   $0x1,0x5d(%edx)
    jne    jump_4c5da
    mov    $0x96,%eax
    call   func_1ce70
  jump_4c5da:
    mov    %esp,%edi
    mov    %eax,%esi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_4c5e7:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_4c5ff
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_4c5e7
  jump_4c5ff:
    pop    %edi
  jump_4c600:
    push   $0x8e
    mov    0x156(%esp),%eax
    lea    0x4(%esp),%ecx
    mov    $0x5,%ebx
    mov    $0x17c,%edx
    push   $0xff
    sar    $0x10,%eax
    mov    $data_fd38a,%edi
    push   %eax
    mov    %ebp,%esi
    mov    %eax,0x130(%esp)
    push   $0x0
    mov    $data_fd382,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    0x134(%esp),%eax
    add    $0x34,%eax
    push   %eax
    push   $data_82ab3
    lea    0x8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    mov    $data_fd3aa,%edi
    mov    %ebp,%esi
    push   $0x0
    lea    0x4(%esp),%ecx
    mov    $0x5,%ebx
    push   $0xff
    mov    0x12c(%esp),%eax
    mov    $0x96,%edx
    push   %eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x0
    mov    $data_fd3a2,%eax
    mov    $0x103,%edi
    call   func_2af88
    mov    0x134(%esp),%eax
    xor    %esi,%esi
    call   func_45dbc
    mov    %eax,0x130(%esp)
  jump_4c6ae:
    cmp    0x130(%esp),%esi
    jl     jump_4c750
  jump_4c6bb:
    mov    0x134(%esp),%eax
    mov    (%eax),%eax
    mov    %eax,0xdc(%esp)
    mov    0x134(%esp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,0xe0(%esp)
    mov    0x134(%esp),%eax
    mov    0x10(%eax),%eax
    mov    %eax,0xe4(%esp)
    mov    0x134(%esp),%eax
    lea    0xc8(%esp),%edi
    mov    0x20(%eax),%eax
    mov    $0x19,%ebx
    mov    %eax,0xe8(%esp)
    mov    0x134(%esp),%eax
    mov    %ebp,%esi
    xor    %ecx,%ecx
    mov    0x18(%eax),%eax
    mov    %ebx,0x14c(%esp)
    mov    %eax,0xec(%esp)
    mov    %ecx,0x140(%esp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    data_efd8a,%ax
    mov    $0x7,%esi
    mov    %eax,0x158(%esp)
    mov    %esi,0x138(%esp)
    jmp    jump_4c7cf
  jump_4c750:
    mov    0x134(%esp),%eax
    mov    0x54(%eax),%eax
    mov    $0x6,%ebx
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    %edi,%ecx
    mov    data_efd8a,%dx
    push   $0x6
    mov    $data_11f10c,%eax
    inc    %esi
    call   func_1b084
    mov    %eax,%edx
    mov    %ebp,%eax
    add    $0x9,%edi
    call   func_4f2a8
    cmp    $0x9,%esi
    jl     jump_4c6ae
    jmp    jump_4c6bb
  jump_4c795:
    mov    0x14c(%esp),%ebx
    mov    0x140(%esp),%ecx
    mov    0x138(%esp),%esi
    add    $0xe,%ebx
    add    $0x4,%ecx
    inc    %esi
    mov    %ebx,0x14c(%esp)
    mov    %ecx,0x140(%esp)
    mov    %esi,0x138(%esp)
    cmp    $0x14,%ecx
    je     jump_4c865
  jump_4c7cf:
    mov    0xcc(%esp),%eax
    add    $0x95,%eax
    mov    %eax,0xd4(%esp)
    mov    0x140(%esp),%eax
    mov    0xdc(%esp,%eax,1),%edi
    mov    $0x96,%esi
    test   %edi,%edi
    jle    jump_4c810
    imul   $0xe,%edi,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x2,%edx
    sbb    %edx,%eax
    sar    $0x2,%eax
    add    %eax,0xd4(%esp)
  jump_4c810:
    mov    0x138(%esp),%eax
    xor    %edi,%edi
    mov    %eax,0x148(%esp)
  jump_4c820:
    mov    0x14c(%esp),%eax
    push   %eax
    push   %esi
    mov    0x150(%esp),%edx
    push   %edx
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    0x164(%esp),%dx
    call   func_1b084
    push   %eax
    lea    0xd8(%esp),%eax
    push   %eax
    inc    %edi
    add    $0xe,%esi
    call   func_57efc
    add    $0x14,%esp
    cmp    $0xe,%edi
    jge    jump_4c795
    jmp    jump_4c820
  jump_4c865:
    mov    0x134(%esp),%eax
    mov    0x8c(%eax),%eax
    mov    %eax,0x118(%esp)
    mov    0x134(%esp),%eax
    mov    $0xb,%edx
    mov    0x88(%eax),%eax
    mov    $0x15e,%edi
    mov    %eax,0x11c(%esp)
    mov    0x134(%esp),%eax
    mov    $0x16b,%ecx
    xor    %ebx,%ebx
    mov    0x98(%eax),%eax
    mov    %ebx,0x144(%esp)
    mov    %eax,0x110(%esp)
    mov    0x134(%esp),%eax
    mov    %ecx,0x13c(%esp)
    call   func_45dec
    mov    %eax,0x114(%esp)
    mov    $0x8,%eax
    mov    %edx,0x10c(%esp)
    mov    %eax,0x108(%esp)
    jmp    jump_4c9c5
  jump_4c8eb:
    mov    %edx,%eax
    mov    0x144(%esp),%edx
    mov    0x110(%esp,%edx,1),%ebx
    cmp    %ebx,%eax
    jle    jump_4c906
    mov    %ebx,0x118(%esp,%edx,1)
  jump_4c906:
    mov    0x144(%esp),%eax
    xor    %esi,%esi
    mov    %eax,0x150(%esp)
    jmp    jump_4c94e
  jump_4c918:
    imul   $0xe,%eax,%eax
    add    $0x5,%eax
    push   %eax
    mov    0x154(%esp),%eax
    push   %edi
    mov    0x110(%esp,%eax,1),%edx
    push   %edx
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    0x164(%esp),%dx
    call   func_1b084
    push   %eax
    push   %ebp
    inc    %esi
    call   func_57efc
    add    $0x14,%esp
  jump_4c94e:
    movswl %si,%eax
    cmp    $0x7,%eax
    jl     jump_4c918
    mov    0x150(%esp),%eax
    imul   $0x62,0x118(%esp,%eax,1),%edx
    mov    0x150(%esp),%ebx
    mov    0x110(%esp,%ebx,1),%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    push   $0xffffffff
    push   $0x0
    mov    $0x66,%edx
    mov    $0x4,%ebx
    sub    %eax,%edx
    mov    0x144(%esp),%ecx
    push   %edx
    mov    %ebp,%eax
    mov    %edi,%edx
    call   func_2b254
  jump_4c99b:
    mov    0x13c(%esp),%ebx
    mov    0x144(%esp),%ecx
    add    $0xe,%edi
    add    $0xe,%ebx
    add    $0x4,%ecx
    mov    %ebx,0x13c(%esp)
    mov    %ecx,0x144(%esp)
    cmp    $0x8,%ecx
    je     jump_4c9f3
  jump_4c9c5:
    mov    0x144(%esp),%eax
    cmpl   $0x0,0x110(%esp,%eax,1)
    jle    jump_4c99b
    mov    0x118(%esp,%eax,1),%edx
    test   %edx,%edx
    jge    jump_4c8eb
    xor    %ecx,%ecx
    mov    %ecx,0x118(%esp,%eax,1)
    jmp    jump_4c906
  jump_4c9f3:
    add    $0x15c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4ca00:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    cmp    $0xffffffff,%ecx
    jne    jump_4ca19
    push   $0x96
    push   %eax
    call   func_59d90
    add    $0x8,%esp
  jump_4ca19:
    push   $0x37
    push   $0x38
    xor    %edx,%edx
    push   %edi
    mov    $data_11f10c,%eax
    mov    data_efd98,%dx
    call   func_1b084
    push   %eax
    push   %esi
    call   func_57efc
    add    $0x14,%esp
    push   $0x37
    push   $0x38
    xor    %edx,%edx
    push   $0x7
    mov    $data_11f10c,%eax
    mov    data_efd86,%dx
    call   func_1b084
    push   %eax
    push   %esi
    call   func_57efc
    add    $0x14,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4ca64:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85fc0,0xa7(%eax)
    call   func_4cac4
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_4ca80:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_4ca9f
    mov    $data_85f7c,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_4ca9f:
    mov    $0x1,%edx
    movl   $data_85fc0,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_4cabf
    call   func_72124
  jump_4cabf:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4cac4:
/*----------------------------------------------------------------*/
    movl   $0x0,0xab(%eax)
    ret


/*----------------------------------------------------------------*/
func_4cad0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x58,%esp
    mov    %eax,-0x4(%ebp)
    mov    $data_93bc5,%eax
    mov    data_96145,%cx
    xor    %ebx,%ebx
    xor    %edx,%edx
    test   %cx,%cx
    jle    jump_4cb32
    jmp    jump_4cb04
  jump_4caf4:
    mov    data_96145,%si
    inc    %edx
    add    $0x60,%eax
    cmp    %si,%dx
    jge    jump_4cb32
  jump_4cb04:
    mov    $0x1,%edi
    mov    data_f458e,%cl
    movzbl 0x14(%eax),%esi
    shl    %cl,%edi
    cmp    %edi,%esi
    jne    jump_4caf4
    xor    %ecx,%ecx
    mov    data_f458e,%cl
    imul   $0x1ee,%ecx,%ecx
    cmp    data_92e1d(%ecx),%eax
    je     jump_4caf4
    inc    %ebx
    jmp    jump_4caf4
  jump_4cb32:
    xor    %ecx,%ecx
    mov    data_f458e,%cl
    mov    %ecx,%eax
    shl    $0x5,%eax
    sub    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    mov    data_92e1d(,%eax,2),%eax
    movzbl 0x14(%eax),%esi
    mov    $0x1,%eax
    shl    %cl,%eax
    test   %eax,%esi
    je     jump_4cb5d
    inc    %ebx
  jump_4cb5d:
    cmp    $0x1,%ebx
    jne    jump_4cb69
    mov    $0x1c,%eax
    jmp    jump_4cb6e
  jump_4cb69:
    mov    $0x1d,%eax
  jump_4cb6e:
    call   func_1ce70
    push   %eax
    mov    -0x4(%ebp),%eax
    mov    0xab(%eax),%eax
    push   %ebx
    mov    0x8c7(%eax),%ax
    and    $0xffff,%eax
    cmp    $0x1,%eax
    jne    jump_4cb96
    mov    $0x1c,%eax
    jmp    jump_4cb9b
  jump_4cb96:
    mov    $0x1d,%eax
  jump_4cb9b:
    call   func_1ce70
    mov    %eax,%ecx
    mov    -0x4(%ebp),%eax
    mov    0xab(%eax),%eax
    push   %ecx
    mov    0x8c7(%eax),%ax
    xor    %ebx,%ebx
    and    $0xffff,%eax
    mov    data_f458e,%bl
    push   %eax
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    xor    %ebx,%ebx
    mov    data_92e17(,%eax,2),%bl
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    mov    $0x97,%eax
    call   func_1ce70
    push   %eax
    lea    -0x58(%ebp),%eax
    push   %eax
    xor    %ebx,%ebx
    call   func_720c9
    mov    data_f458e,%bl
    mov    %ebx,%eax
    shl    $0x5,%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    add    $0x1c,%esp
    mov    data_92e18(,%eax,2),%al
    mov    -0x4(%ebp),%ebx
    push   $0x0
    lea    -0x58(%ebp),%ecx
    mov    $0x19,%edx
    xor    %ah,%ah
    mov    $data_fd3aa,%edi
    shl    $0x2,%eax
    push   $0xff
    add    $0x13,%eax
    add    $0x4,%ebx
    cwtl
    mov    %ebx,-0x8(%ebp)
    push   %eax
    mov    %ebx,%esi
    mov    $0x9,%ebx
    push   $0x2
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    $0x3,%ebx
    xor    %ecx,%ecx
    mov    -0x8(%ebp),%eax
    mov    data_f458e,%cl
    mov    %ebx,%edx
    call   func_4f228
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    call   func_2c8f8
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4cc84:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ebp
    mov    %dx,0x8(%esp)
    mov    %ebx,(%esp)
    mov    %ecx,0x4(%esp)
    cmp    $0x2,%dx
    jb     jump_4cf43
    jbe    jump_4ce8e
    cmp    $0x1c01,%dx
    je     jump_4ceb7
  jump_4ccb3:
    mov    0x6(%esp),%edx
    mov    0x4(%esp),%ecx
    mov    (%esp),%ebx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2eb04
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4cccf:
    mov    0xab(%eax),%ebx
    test   %ebx,%ebx
    jne    jump_4cd61
    mov    $data_82abe,%edx
    mov    $data_fa35c,%eax
    call   func_5216c
    mov    %eax,0xab(%ebp)
    test   %eax,%eax
    jne    jump_4cd05
    mov    $0x1cb,%ebx
    mov    $data_82aca,%edx
    call   func_25878
  jump_4cd05:
    mov    0xab(%ebp),%eax
    movl   $0x0,0xab(%eax)
    mov    0xab(%ebp),%eax
    movw   $0x8d,0x8c9(%eax)
    mov    $func_4b920,%edx
    mov    0xab(%ebp),%eax
    call   func_2e8a8
    mov    $func_10a14,%edx
    mov    0xab(%ebp),%eax
    call   func_2e8b8
    mov    0xab(%ebp),%eax
    movb   $0x0,0xc5(%eax)
    mov    0xab(%ebp),%eax
    movl   $0xffffffff,0xbb(%eax)
  jump_4cd61:
    xor    %eax,%eax
    mov    data_869d0,%ax
    cmp    $0xffff,%eax
    jne    jump_4cda4
    mov    $data_82ad8,%edx
    mov    $data_11f10c,%eax
    xor    %ebx,%ebx
    call   func_1b270
    mov    %ax,data_869d0
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_4cda4
    mov    $0x1d9,%ebx
    mov    $data_82ae9,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4cda4:
    xor    %eax,%eax
    mov    data_869ce,%ax
    cmp    $0xffff,%eax
    jne    jump_4cde7
    mov    $data_82af7,%edx
    mov    $data_11f10c,%eax
    xor    %ebx,%ebx
    call   func_1b270
    mov    %ax,data_869ce
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_4cde7
    mov    $0x1e0,%ebx
    mov    $data_82b05,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4cde7:
    mov    0xab(%ebp),%eax
    call   func_2e42c
    mov    data_ba093,%ax
    xor    %edi,%edi
    test   %ax,%ax
    jle    jump_4ce53
    jmp    jump_4ce0e
  jump_4ce01:
    mov    data_ba093,%dx
    inc    %edi
    cmp    %dx,%di
    jge    jump_4ce53
  jump_4ce0e:
    movswl %di,%eax
    imul   $0x7b,%eax,%eax
    mov    $data_ab057,%esi
    add    %eax,%esi
    mov    0x57(%esi),%al
    cmp    data_f458e,%al
    jne    jump_4ce01
    mov    $0x96,%ebx
    mov    %esi,%edx
    mov    0xab(%ebp),%eax
    xor    %ecx,%ecx
    call   func_2e16c
    movswl %ax,%edx
    mov    0x67(%esi),%ebx
    and    $0xffff,%edx
    mov    0xab(%ebp),%eax
    call   func_2e330
    jmp    jump_4ce01
  jump_4ce53:
    mov    0x4(%esp),%ecx
    mov    0xab(%ebp),%eax
    xor    %edx,%edx
    call   func_2e8c0
    mov    0xaf(%ebp),%dx
    mov    0xab(%ebp),%eax
    mov    (%esp),%ebx
    call   func_2e3bc
    mov    0x6(%esp),%edx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2eb04
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4ce8e:
    mov    0xab(%eax),%eax
    mov    0x6(%esp),%edx
    mov    0x8cd(%eax),%ax
    sar    $0x10,%edx
    mov    %ax,0xaf(%ebp)
    mov    %ebp,%eax
    call   func_2eb04
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4ceb7:
    xor    %edx,%edx
    mov    0xab(%eax),%eax
    mov    (%esp),%dx
    call   func_2e3f4
    cmpl   $0x96,data_c84ec
    jle    jump_4cef1
    mov    $0x1,%ecx
    mov    $0x11,%ebx
    mov    %eax,data_c3508
    mov    $data_fa35c,%eax
    mov    %ecx,%edx
    call   func_51f24
    jmp    jump_4cf26
  jump_4cef1:
    mov    0xa(%eax),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    mov    $0x1,%ecx
    sub    %edx,%eax
    mov    $data_93bc5,%edx
    shl    $0x5,%eax
    mov    $0x10,%ebx
    add    %eax,%edx
    mov    $data_fa35c,%eax
    mov    %edx,data_c3504
    mov    %ecx,%edx
    call   func_51f24
  jump_4cf26:
    mov    0xab(%ebp),%eax
    mov    0x8cd(%eax),%ax
    mov    %ax,0xaf(%ebp)
    xor    %eax,%eax
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4cf43:
    cmp    $0x1,%dx
    je     jump_4cccf
    jmp    jump_4ccb3


/*----------------------------------------------------------------*/
func_4cf54:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85fa8,0xa7(%eax)
    call   func_4cac4
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_4cf70:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_4cf8f
    mov    $data_85f68,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_4cf8f:
    mov    $0x1,%edx
    movl   $data_85fa8,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_4cfaf
    call   func_72124
  jump_4cfaf:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4cfb4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x58,%esp
    mov    %eax,-0x8(%ebp)
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    $data_92e16,%eax
    call   func_3b728
    mov    %eax,%edx
    test   %eax,%eax
    jge    jump_4cfeb
    xor    %eax,%edx
    jmp    jump_4cff5
  jump_4cfeb:
    cmp    $0x64,%eax
    jle    jump_4cff5
    mov    $0x64,%edx
  jump_4cff5:
    mov    -0x8(%ebp),%eax
    mov    0xab(%eax),%eax
    push   %edx
    mov    0x8c7(%eax),%ax
    and    $0xffff,%eax
    cmp    $0x1,%eax
    jne    jump_4d017
    mov    $data_82b13,%eax
    jmp    jump_4d01c
  jump_4d017:
    mov    $data_82b14,%eax
  jump_4d01c:
    push   %eax
    mov    -0x8(%ebp),%eax
    mov    0xab(%eax),%eax
    mov    0x8c7(%eax),%ax
    xor    %edx,%edx
    and    $0xffff,%eax
    mov    data_f458e,%dl
    push   %eax
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    mov    data_92e17(,%eax,2),%dl
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    mov    $0x98,%eax
    call   func_1ce70
    push   %eax
    lea    -0x58(%ebp),%eax
    push   %eax
    xor    %edx,%edx
    call   func_720c9
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    $0x18,%esp
    mov    data_92e18(,%eax,2),%al
    mov    -0x8(%ebp),%edx
    push   $0x0
    lea    -0x58(%ebp),%ecx
    mov    $0x9,%ebx
    xor    %ah,%ah
    mov    $data_fd3aa,%edi
    shl    $0x2,%eax
    push   $0xff
    add    $0x13,%eax
    add    $0x4,%edx
    cwtl
    mov    %edx,-0x4(%ebp)
    push   %eax
    mov    %edx,%esi
    mov    $0x19,%edx
    push   $0x2
    mov    $data_fd3a2,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    mov    $0x3,%ebx
    xor    %ecx,%ecx
    mov    -0x4(%ebp),%eax
    mov    data_f458e,%cl
    mov    %ebx,%edx
    call   func_4f228
    mov    -0x8(%ebp),%eax
    xor    %edx,%edx
    call   func_2c8f8
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret

vtable_4d100:
    .long   func_4d405
    .long   func_4d405
    .long   func_4d405
    .long   func_4d446
    .long   func_4d487


/*----------------------------------------------------------------*/
func_4d114:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1bc,%esp
    mov    %eax,%edi
    mov    %dx,0x1b4(%esp)
    mov    %ebx,0x1b0(%esp)
    mov    %ecx,0x1ac(%esp)
    cmp    $0x2,%dx
    jb     jump_4d4bf
    jbe    jump_4d35c
    cmp    $0x1c01,%dx
    je     jump_4d38b
  jump_4d150:
    mov    0x1b2(%esp),%edx
    mov    0x1ac(%esp),%ecx
    mov    0x1b0(%esp),%ebx
    mov    %edi,%eax
    sar    $0x10,%edx
    call   func_2eb04
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4d179:
    cmpl   $0x0,0xab(%eax)
    jne    jump_4d1f8
    mov    $data_82b16,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,0xab(%edi)
    test   %eax,%eax
    jne    jump_4d1ac
    mov    $0x259,%ebx
    mov    $data_82b22,%edx
    call   func_25878
  jump_4d1ac:
    mov    0xab(%edi),%eax
    movl   $0x0,0xab(%eax)
    mov    0xab(%edi),%eax
    movw   $0x6a,0x8c9(%eax)
    mov    $func_4c160,%edx
    mov    0xab(%edi),%eax
    call   func_2e8a8
    mov    $func_10a14,%edx
    mov    0xab(%edi),%eax
    call   func_2e8b8
    mov    0xab(%edi),%eax
    movb   $0x0,0xc5(%eax)
  jump_4d1f8:
    xor    %eax,%eax
    mov    data_f458e,%al
    mov    data_efd60(,%eax,2),%ax
    mov    %ax,data_86a12
    xor    %eax,%eax
    mov    data_86a16,%ax
    cmp    $0xffff,%eax
    jne    jump_4d250
    mov    $data_82b30,%edx
    mov    $data_11f10c,%eax
    xor    %ebx,%ebx
    call   func_1b270
    mov    %ax,data_86a16
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_4d250
    mov    $0x269,%ebx
    mov    $data_82b41,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4d250:
    xor    %eax,%eax
    mov    data_86a14,%ax
    cmp    $0xffff,%eax
    jne    jump_4d293
    mov    $data_82b4f,%edx
    mov    $data_11f10c,%eax
    xor    %ebx,%ebx
    call   func_1b270
    mov    %ax,data_86a14
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_4d293
    mov    $0x270,%ebx
    mov    $data_82b5d,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4d293:
    mov    0xab(%edi),%eax
    xor    %edx,%edx
    call   func_2e42c
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %ebx,%ebx
    add    %eax,%eax
    mov    %esp,%edx
    add    $data_92e16,%eax
    call   func_3c310
    mov    %eax,%ebp
    xor    %eax,%eax
    mov    %ax,0x1b8(%esp)
    jmp    jump_4d306
  jump_4d2d0:
    mov    $0x64,%ebx
    mov    (%esp,%eax,4),%esi
    xor    %ecx,%ecx
    mov    %esi,%edx
    mov    0xab(%edi),%eax
    call   func_2e16c
    movswl %ax,%edx
    mov    0x52(%esi),%ebx
    and    $0xffff,%edx
    mov    0xab(%edi),%eax
    call   func_2e330
    incw   0x1b8(%esp)
  jump_4d306:
    mov    0x1b6(%esp),%eax
    sar    $0x10,%eax
    cmp    %ebp,%eax
    jl     jump_4d2d0
    mov    0x1ac(%esp),%ecx
    mov    0xab(%edi),%eax
    xor    %edx,%edx
    call   func_2e8c0
    mov    0xaf(%edi),%dx
    mov    0xab(%edi),%eax
    mov    0x1b0(%esp),%ebx
    call   func_2e3bc
    mov    0x1b2(%esp),%edx
    mov    %edi,%eax
    sar    $0x10,%edx
    call   func_2eb04
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4d35c:
    mov    0xab(%eax),%eax
    mov    0x1b2(%esp),%edx
    mov    0x8cd(%eax),%ax
    sar    $0x10,%edx
    mov    %ax,0xaf(%edi)
    mov    %edi,%eax
    call   func_2eb04
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4d38b:
    xor    %edx,%edx
    mov    0xab(%eax),%eax
    mov    0x1b0(%esp),%dx
    call   func_2e3f4
    mov    %eax,%esi
    mov    %eax,%edx
    cmp    $0x5,%ecx
    jne    jump_4d4a9
    mov    $data_82b6b,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    mov    $0xffffffff,%ecx
    call   func_5216c
    mov    %esi,%edx
    xor    %ebx,%ebx
    call   func_48e6c
    mov    $0x1,%ecx
    mov    $0x8,%ebx
    mov    $data_fa35c,%eax
    mov    %ecx,%edx
    call   func_51f24
    mov    0xab(%edi),%eax
    mov    0x8cd(%eax),%ax
    mov    %ax,0xaf(%edi)
    mov    $0xffffffff,%eax
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4d405:
/*----------------------------------------------------------------*/
    mov    $0x1,%ecx
    mov    0x59(%edx),%eax
    mov    $0x11,%ebx
    mov    %eax,data_c3508
    mov    %ecx,%edx
    mov    $data_fa35c,%eax
    call   func_51f24
    mov    0xab(%edi),%eax
    mov    0x8cd(%eax),%ax
    mov    %ax,0xaf(%edi)
    mov    $0xffffffff,%eax
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4d446:
/*----------------------------------------------------------------*/
    mov    $0x1,%ecx
    mov    0x59(%esi),%eax
    mov    $0x10,%ebx
    mov    %eax,data_c3504
    mov    %ecx,%edx
    mov    $data_fa35c,%eax
    call   func_51f24
    mov    0xab(%edi),%eax
    mov    0x8cd(%eax),%ax
    mov    %ax,0xaf(%edi)
    mov    $0xffffffff,%eax
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4d487:
/*----------------------------------------------------------------*/
    mov    $0x3,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_51f24
    mov    $0xffffffff,%eax
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4d4a9:
    mov    0x58(%eax),%al
    dec    %al
    cmp    $0x4,%al
    ja     jump_4d4ce
    and    $0xff,%eax
    jmp    *%cs:vtable_4d100(,%eax,4)
  jump_4d4bf:
    cmp    $0x1,%dx
    je     jump_4d179
    jmp    jump_4d150
  jump_4d4ce:
    xor    %eax,%eax
    add    $0x1bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4d4dc:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_85f90,0xa7(%eax)
    call   func_4d53c
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_4d4f8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_4d517
    mov    $data_85f54,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_4d517:
    mov    $0x1,%edx
    movl   $data_85f90,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_4d537
    call   func_72124
  jump_4d537:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4d53c:
/*----------------------------------------------------------------*/
    movl   $0x0,0xaf(%eax)
    movl   $0x0,0xab(%eax)
    movw   $0x0,0xb3(%eax)
    movw   $0x0,0xb5(%eax)
    ret


/*----------------------------------------------------------------*/
func_4d564:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    movl   $data_f92e4,0xaf(%eax)
    xor    %edx,%edx
    mov    0xaf(%eax),%ecx
    mov    $data_82b79,%eax
    xor    %esi,%esi
    call   func_1bb10
    mov    %eax,%edi
  jump_4d589:
    mov    $0xc7,%edx
    mov    %edi,%ebx
    mov    %ecx,%eax
    call   func_7370e
    inc    %esi
    add    $0xc8,%ecx
    cmp    $0x15,%esi
    jl     jump_4d589
    mov    %edi,%eax
    call   func_7280e
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4d5b0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x13c,%esp
    mov    %eax,%ebp
    mov    %edx,0x138(%esp)
    call   func_4db04
    lea    0x118(%esp),%edi
    mov    $0x1f6,%edx
    lea    0x4(%ebp),%esi
    mov    $0x7,%ebx
    mov    $0x278,%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0x99,%eax
    mov    $0x24,%esi
    mov    %edx,0x11c(%esp)
    mov    %ebx,0x120(%esp)
    mov    %ecx,0x124(%esp)
    mov    %esi,0x128(%esp)
    call   func_1ce70
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x8,%esp
    mov    $data_fd3aa,%edi
    push   $0x6e
    lea    0x4(%esp),%ecx
    xor    %ebx,%ebx
    push   $0xff
    lea    0x120(%esp),%esi
    xor    %edx,%edx
    push   $0xf3
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x3
    mov    $data_fd3a2,%eax
    mov    0x148(%esp),%edi
    call   func_2af88
    test   %edi,%edi
    jne    jump_4daba
    lea    0x118(%esp),%edi
    push   $0x0
    lea    0x4(%ebp),%eax
    lea    0x4(%ebp),%esi
    push   %eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_59d90
    mov    $0x23,%eax
    lea    0x120(%esp),%esi
    add    $0x8,%esp
    mov    $data_fd3aa,%edi
    mov    %eax,0x128(%esp)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    0xb3(%ebp),%eax
    push   $0x0
    sar    $0x10,%eax
    push   $0xff
    mov    data_86611(%eax),%al
    mov    $data_f4590,%ecx
    mov    0xb1(%ebp),%edx
    and    $0xff,%eax
    sar    $0x10,%edx
    push   %eax
    lea    0x0(,%edx,4),%eax
    xor    %ebx,%ebx
    add    %edx,%eax
    push   $0x3
    shl    $0x2,%eax
    xor    %edx,%edx
    add    %eax,%ecx
    mov    $data_fd3a2,%eax
    call   func_2af88
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd98,%dx
    call   func_1b084
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_4d70a
    mov    $0x325,%ebx
    mov    $data_82b85,%edx
    call   func_25878
  jump_4d70a:
    push   $0x55
    mov    0xb1(%ebp),%eax
    push   $0x4b
    sar    $0x10,%eax
    push   %eax
    push   %ecx
    lea    0x4(%ebp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd86,%dx
    call   func_1b084
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_4d74d
    mov    $0x329,%ebx
    mov    $data_82b93,%edx
    call   func_25878
  jump_4d74d:
    push   $0x55
    mov    0xb3(%ebp),%eax
    push   $0x4b
    sar    $0x10,%eax
    push   %eax
    push   %ecx
    lea    0x4(%ebp),%esi
    push   %esi
    call   func_57efc
    mov    $0xffffffff,%ebx
    add    $0x14,%esp
    mov    $data_82ba1,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %eax,%ecx
    and    $0xffff,%eax
    cmp    $0xffff,%eax
    jne    jump_4d79b
    mov    $0x334,%ebx
    mov    $data_82bb1,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4d79b:
    push   $0xcd
    mov    0xb1(%ebp),%eax
    push   $0x48
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    %cx,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    push   %esi
    call   func_57efc
    mov    $0xc1,%ebx
    mov    $0x6b,%edx
    add    $0x14,%esp
    xor    %ecx,%ecx
    mov    %esi,%eax
    mov    data_f458e,%cl
    call   func_4f228
    cmpl   $0x0,0xaf(%ebp)
    jne    jump_4d7f8
    mov    $0x340,%ebx
    mov    $data_82bbf,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4d7f8:
    mov    0xb1(%ebp),%eax
    sar    $0x10,%eax
    cmp    $0x15,%eax
    jl     jump_4d817
    mov    $0x341,%ebx
    mov    $data_82bcd,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4d817:
    mov    0xb1(%ebp),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    shl    $0x3,%eax
    add    %ebx,%eax
    mov    0xaf(%ebp),%edx
    shl    $0x3,%eax
    add    %edx,%eax
    push   %eax
    lea    0x0(,%ebx,4),%eax
    add    %ebx,%eax
    shl    $0x2,%eax
    add    $data_f4590,%eax
    push   %eax
    mov    $0x9a,%eax
    call   func_1ce70
    push   %eax
    lea    0xc(%esp),%eax
    push   %eax
    mov    $0x109,%ebx
    call   func_720c9
    add    $0x10,%esp
    mov    %ebx,0x120(%esp)
    lea    0x118(%esp),%esi
    mov    0x14(%ebp),%eax
    push   $0x96
    mov    %eax,0x12c(%esp)
    mov    $data_fd38a,%edi
    mov    0xb3(%ebp),%eax
    push   $0xff
    sar    $0x10,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    data_86611(%eax),%al
    and    $0xff,%eax
    push   %eax
    lea    0xc(%esp),%ecx
    xor    %ebx,%ebx
    push   $0x0
    xor    %edx,%edx
    mov    $data_fd382,%eax
    call   func_2af88
    mov    $0x9b,%edx
    xor    %ebx,%ebx
  jump_4d8c5:
    mov    %edx,%eax
    add    $0x4,%ebx
    call   func_1ce70
    inc    %edx
    mov    %eax,0xec(%esp,%ebx,1)
    cmp    $0x14,%ebx
    jne    jump_4d8c5
    mov    $0xa0,%ebx
    xor    %edx,%edx
  jump_4d8e3:
    mov    %ebx,%eax
    add    $0x4,%edx
    call   func_1ce70
    inc    %ebx
    mov    %eax,0x128(%esp,%edx,1)
    cmp    $0xc,%edx
    jne    jump_4d8e3
    mov    $0xa3,%ebx
    xor    %edx,%edx
  jump_4d901:
    mov    %ebx,%eax
    add    $0x4,%edx
    call   func_1ce70
    inc    %ebx
    mov    %eax,0x100(%esp,%edx,1)
    cmp    $0x14,%edx
    jne    jump_4d901
    mov    $0x11,%ecx
    mov    $0x145,%esi
    mov    $0x144,%edi
    mov    $0x172,%eax
    mov    %ecx,0x11c(%esp)
    mov    %esi,0x120(%esp)
    mov    %edi,0x124(%esp)
    mov    %eax,0x128(%esp)
    mov    0xb9(%ebp),%eax
    sar    $0x10,%eax
    mov    0x12c(%esp,%eax,4),%edx
    mov    0xb7(%ebp),%eax
    sar    $0x10,%eax
    mov    0xf8(%esp,%eax,4),%ebx
    mov    0xb5(%ebp),%eax
    push   %edx
    sar    $0x10,%eax
    push   %ebx
    mov    0xf8(%esp,%eax,4),%ecx
    push   %ecx
    mov    $0xa8,%eax
    call   func_1ce70
    push   %eax
    lea    0x10(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x14,%esp
    lea    0x118(%esp),%esi
    push   $0xfa
    mov    $data_fd3aa,%edi
    xor    %edx,%edx
    push   $0x0
    xor    %ebx,%ebx
    lea    0x8(%esp),%ecx
    push   $0xffffffff
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0x82
    mov    $data_fd3a2,%eax
    lea    0x128(%esp),%edi
    call   func_2af88
    mov    $data_fa35c,%eax
    lea    0x4(%ebp),%edx
    mov    $data_c850c,%esi
    call   func_50690
    mov    $0x18b,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0x1cf,%edx
    mov    $0x17d,%esi
    mov    $0x1b1,%edi
    mov    %eax,0x124(%esp)
    mov    %edx,0x128(%esp)
    mov    %esi,0x11c(%esp)
    mov    %edi,0x120(%esp)
    xor    %esi,%esi
    xor    %edi,%edi
    jmp    jump_4da3b
  jump_4da18:
    mov    0x11c(%esp),%ebx
    mov    0x124(%esp),%ecx
    inc    %esi
    add    $0x10,%ebx
    add    $0x10,%ecx
    mov    %ebx,0x11c(%esp)
    mov    %ecx,0x124(%esp)
  jump_4da3b:
    movswl %si,%eax
    cmp    $0x7,%eax
    jge    jump_4da9c
    push   %eax
    mov    %edi,%ecx
    mov    0xb1(%ebp),%ebx
    xor    %edx,%edx
    mov    $data_11f10c,%eax
    mov    data_efd84,%dx
    push   %edi
    sar    $0x10,%ebx
    call   func_1b084
    mov    %eax,%edx
    lea    0x120(%esp),%eax
    call   func_4f330
    cmp    0xb5(%ebp),%si
    jne    jump_4da18
    push   %edi
    push   $0xf3
    mov    $0xe,%ecx
    lea    0x120(%esp),%eax
    push   $0x18
    mov    %edi,%ebx
    mov    %edi,%edx
    call   func_2b254
    jmp    jump_4da18
  jump_4da9c:
    push   $0x1d8
    mov    $0x1ed,%ecx
    mov    $0x1a4,%ebx
    mov    $0x17b,%edx
    mov    $data_fa35c,%eax
    call   func_50658
  jump_4daba:
    add    $0x13c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4dac8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    mov    data_c84ec,%edx
    cmp    $0x1f6,%edx
    jle    jump_4dafe
    cmp    $0x278,%edx
    jge    jump_4dafe
    mov    data_c84f0,%ecx
    cmp    $0x17d,%ecx
    jle    jump_4dafe
    cmp    $0x1d8,%ecx
    jge    jump_4dafe
    mov    $0xffffffff,%eax
    pop    %edx
    pop    %ecx
    ret
  jump_4dafe:
    xor    %eax,%eax
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_4db04:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x28,%esp
    mov    %eax,0x14(%esp)
    mov    %esp,%edi
    mov    $data_c850c,%esi
    mov    $0x1f6,%edx
    mov    $0x17d,%ebx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    $0x278,%ecx
    mov    $0x1d8,%esi
    mov    %edx,0x4(%esp)
    mov    %ebx,0x8(%esp)
    mov    %ecx,0xc(%esp)
    mov    $0xf2,%edx
    mov    %esi,0x10(%esp)
    call   func_4dac8
    cmp    $0xffffffff,%eax
    jne    jump_4db55
    mov    $0x96,%edx
  jump_4db55:
    push   %edx
    lea    0x4(%esp),%eax
    push   %eax
    call   func_59d90
    add    $0x8,%esp
    mov    $0x278,%ecx
    mov    $0x17d,%ebx
    push   $0x1d8
    mov    $0x1f6,%edx
    mov    $data_fa35c,%eax
    call   func_50658
    mov    $0x3,%ebx
    mov    $data_82bdb,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    call   func_521dc
    mov    %eax,0x1c(%esp)
    test   %eax,%eax
    jne    jump_4dbae
    mov    $0x3bb,%ebx
    mov    $data_82be5,%edx
    call   func_25878
  jump_4dbae:
    mov    0x1c(%esp),%eax
    mov    0x1c(%esp),%esi
    xor    %edi,%edi
    mov    0x572(%eax),%ax
    add    $0x172,%esi
    mov    %eax,0x24(%esp)
    test   %ax,%ax
    jle    jump_4dc84
    jmp    jump_4dc4c
  jump_4dbd7:
    test   %eax,%eax
    jle    jump_4dbe2
    mov    $0x1,%ecx
    jmp    jump_4dbee
  jump_4dbe2:
    cmp    $0xffffff24,%eax
    jle    jump_4dbee
    mov    $0x2,%ecx
  jump_4dbee:
    mov    0x5(%ebx),%edx
    sar    $0x10,%edx
    movl   $0x5,0x18(%esp)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idivl  0x18(%esp)
    add    $0x5,%eax
    mov    0x3(%ebx),%edx
    mov    $0x5,%ebx
    sar    $0x10,%edx
    push   %eax
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    add    %ebx,%eax
    push   %eax
    mov    0x0(%ebp),%eax
    shl    $0x2,%eax
    add    %eax,%ecx
    mov    0x24(%esp),%eax
    push   %ecx
    mov    0xab(%eax),%edx
    push   %edx
    lea    0x10(%esp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
  jump_4dc3f:
    mov    0x24(%esp),%ebx
    inc    %edi
    add    $0x4,%esi
    cmp    %bx,%di
    jge    jump_4dc84
  jump_4dc4c:
    mov    (%esi),%ebx
    flds   0xd(%ebx)
    fadds  data_82bf3
    mov    0x4(%ebx),%ah
    call   func_72258
    fistpl 0x20(%esp)
    test   %ah,%ah
    jne    jump_4dc3f
    mov    $0x3,%ecx
    mov    0x20(%esp),%eax
    mov    (%ebx),%ebp
    cmp    $0xdc,%eax
    jle    jump_4dbd7
    xor    %ecx,%ecx
    jmp    jump_4dbee
  jump_4dc84:
    push   $0x0
    push   $0x8000
    push   $0x8000
    push   $0x0
    push   $data_c8c44
    mov    0x28(%esp),%eax
    push   $0x24
    mov    0xb1(%eax),%eax
    push   $0x62
    sar    $0x10,%eax
    xor    %edx,%edx
    push   %eax
    mov    data_efd98,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    lea    0x24(%esp),%eax
    push   %eax
    call   func_589f1
    add    $0x28,%esp
    mov    data_efd96,%ax
    xor    %edx,%edx
    push   $0x0
    mov    $0x62,%ecx
    mov    %ax,%dx
    push   $0x24
    mov    $data_11f10c,%eax
    mov    $0x3,%ebx
    call   func_1b084
    mov    %eax,%edx
    lea    0x8(%esp),%eax
    call   func_4f2a8
    mov    $0xa9,%eax
    call   func_1ce70
    push   $0x0
    lea    0x4(%esp),%esi
    mov    $data_fd3aa,%edi
    push   $0xff
    mov    $0x50,%ebx
    mov    $0x41,%edx
    push   $0xffffffff
    mov    %eax,%ecx
    mov    $data_fd3a2,%eax
    push   $0xc
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    add    $0x28,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4dd3c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x34,%esp
    mov    %eax,%ebp
    mov    %dx,0x30(%esp)
    mov    %ebx,0x2c(%esp)
    mov    %ecx,0x28(%esp)
    mov    %esp,%edi
    mov    $data_86a18,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    cmp    $0x1f5,%dx
    jb     jump_4e3a9
    jbe    jump_4e209
    cmp    $0x1f9,%dx
    jb     jump_4e399
    jbe    jump_4e33c
    cmp    $0x1fa,%dx
    jbe    jump_4dd95
    cmp    $0x1c01,%dx
    je     jump_4e1bc
  jump_4dd95:
    mov    0x2e(%esp),%edx
    mov    0x28(%esp),%ecx
    mov    0x2c(%esp),%ebx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2eb04
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4ddb2:
    cmp    $0x17b,%ebx
    jle    jump_4ddf4
    cmp    $0x1ed,%ebx
    jge    jump_4ddf4
    cmp    $0x1a4,%ecx
    jle    jump_4ddf4
    cmp    $0x1d8,%ecx
    jge    jump_4ddf4
    mov    $data_869b8,%ebx
    mov    $0x5,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    call   func_51f24
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4ddf4:
    mov    %ebp,%eax
    call   func_4dac8
    cmp    $0xffffffff,%eax
    jne    jump_4dd95
    mov    $data_869c4,%ebx
    mov    $0x5,%edx
    mov    $data_fa35c,%eax
    xor    %ecx,%ecx
    call   func_51f24
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4de22:
    cmp    $0x17b,%ebx
    jle    jump_4de94
    cmp    $0x1ed,%ebx
    jge    jump_4de94
    cmp    $0x1a4,%ecx
    jle    jump_4de94
    cmp    $0x1d8,%ecx
    jge    jump_4de94
    mov    $data_f8638,%eax
    xor    %edx,%edx
    call   func_4af80
    lea    -0x17b(%ebx),%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x4,%edx
    sbb    %edx,%eax
    sar    $0x4,%eax
    mov    %ax,0xb5(%ebp)
    mov    0xb3(%ebp),%edx
    mov    $data_92e10,%eax
    sar    $0x10,%edx
    call   func_1e73c
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4de94:
    mov    %ebp,%eax
    call   func_4dac8
    cmp    $0xffffffff,%eax
    jne    jump_4e3e7
    mov    $data_f8638,%eax
    xor    %edx,%edx
    call   func_4af80
    mov    $data_92e10,%eax
    xor    %ebx,%ebx
    call   func_1ed38
    mov    $data_92e10,%eax
    mov    $data_82bf7,%edx
    call   func_1e96c
    mov    $data_fa35c,%eax
    call   func_5216c
    lea    0x190(%eax),%edx
  jump_4dedb:
    add    $0x4,%eax
    movl   $0x0,0x137a(%eax)
    cmp    %edx,%eax
    jne    jump_4dedb
    mov    $data_82c02,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    call   func_21eec
    mov    $data_82c0c,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    add    $0x11f,%eax
    movl   $0x0,0x4(%eax)
    movl   $0x0,0x8(%eax)
    lea    0xc(%eax),%edx
    movl   $0x3f800000,(%eax)
    movl   $0x0,(%edx)
    movl   $0x3f800000,0x4(%edx)
    add    $0x18,%eax
    movl   $0x0,0x8(%edx)
    movl   $0x0,(%eax)
    xor    %ebx,%ebx
    movl   $0x0,0x4(%eax)
    mov    $data_82c13,%edx
    movl   $0x3f800000,0x8(%eax)
    mov    $data_fa35c,%eax
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_4df80
    mov    $0x444,%ebx
    mov    $data_82c20,%edx
    call   func_25878
  jump_4df80:
    mov    %ecx,%eax
    mov    $0x1,%edx
    call   func_2d450
    mov    0xbb(%ebp),%al
    xor    %ebx,%ebx
    mov    %al,data_93bc4
    mov    $data_92e10,%eax
    xor    %ecx,%ecx
    call   func_1e7d8
    mov    $data_fa35c,%eax
    mov    %ebx,data_86a64
    mov    $0xc,%ebx
    call   func_51f24
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4dfc6:
    mov    $data_82c2e,%eax
    mov    $0xffffffff,%esi
    call   func_4f438
    xor    %edi,%edi
    mov    %esi,data_86a64
    mov    0xab(%ebp),%eax
    mov    %edi,data_11f0fc
    test   %eax,%eax
    jne    jump_4e060
    mov    $data_82c39,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,0xab(%ebp)
    test   %eax,%eax
    jne    jump_4e017
    mov    $0x463,%ebx
    mov    $data_82c42,%edx
    call   func_25878
  jump_4e017:
    mov    0xab(%ebp),%eax
    movl   $0x0,0xab(%eax)
    mov    0xab(%ebp),%eax
    movw   $0x6d,0x8c9(%eax)
    mov    $func_4ca00,%edx
    mov    0xab(%ebp),%eax
    call   func_2e8a8
    mov    0xab(%ebp),%eax
    xor    %edx,%edx
    call   func_2e0ac
    mov    0xab(%ebp),%eax
    movb   $0xf2,0xc6(%eax)
  jump_4e060:
    mov    0xab(%ebp),%eax
    call   func_2e42c
    xor    %esi,%esi
    jmp    jump_4e085
  jump_4e06f:
    mov    $0x73,%ebx
    movswl %si,%edx
    mov    0xab(%ebp),%eax
    xor    %ecx,%ecx
    call   func_2e16c
    inc    %esi
  jump_4e085:
    movswl %si,%eax
    cmp    $0x15,%eax
    jl     jump_4e06f
    mov    0x67(%ebp),%eax
    movw   $0x2,0xb7(%ebp)
    mov    (%eax),%eax
    movl   $0x2,0x72(%eax)
    mov    0x67(%ebp),%eax
    movw   $0x5,0xb9(%ebp)
    mov    0x4(%eax),%eax
    movl   $0x7,0x72(%eax)
    mov    0x67(%ebp),%eax
    movw   $0x1,0xbb(%ebp)
    mov    0x8(%eax),%eax
    movl   $0xb,0x72(%eax)
    mov    $0x1,%ah
    mov    0xb7(%ebp),%ebx
    mov    %ah,data_93bc4
    movw   $0x0,0xb3(%ebp)
    sar    $0x10,%ebx
    mov    0xb5(%ebp),%eax
    mov    0xb1(%ebp),%ecx
    sar    $0x10,%eax
    sar    $0x10,%ecx
    mov    -0x2(%esp,%eax,4),%edx
    mov    $data_92e10,%eax
    sar    $0x10,%edx
    call   func_1db34
    xor    %dl,%dl
    movw   $0x0,0xb5(%ebp)
    mov    %dl,data_f458e
    mov    %dl,data_92e17
    mov    0xb3(%ebp),%edx
    mov    $data_92e10,%eax
    sar    $0x10,%edx
    lea    0x14(%esp),%edi
    call   func_1e73c
    lea    0x4(%ebp),%esi
    mov    $0x17b,%ecx
    mov    $0x1d8,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   $0xf2
    mov    $0x1a4,%esi
    mov    $0x1ed,%edi
    mov    %eax,0x28(%esp)
    lea    0x18(%esp),%eax
    mov    %ecx,0x1c(%esp)
    push   %eax
    mov    %esi,0x24(%esp)
    mov    %edi,0x28(%esp)
    call   func_59d90
    add    $0x8,%esp
    lea    0x14(%esp),%edx
    mov    $data_fa35c,%eax
    call   func_50690
    mov    0x2e(%esp),%edx
    mov    0x28(%esp),%ecx
    mov    %ebp,%eax
    mov    0x2c(%esp),%ebx
    call   func_4d564
    sar    $0x10,%edx
    mov    %ebp,%eax
    call   func_2eb04
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e1a9:
    mov    0x2e(%esp),%edx
    sar    $0x10,%edx
    call   func_2eb04
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e1bc:
    mov    0xb1(%eax),%eax
    sar    $0x10,%eax
    cmp    %ebx,%eax
    je     jump_4e1fd
    mov    0x2c(%esp),%eax
    mov    0xb7(%ebp),%edx
    mov    %ax,0xb3(%ebp)
    sar    $0x10,%edx
    mov    0xb1(%ebp),%ebx
    mov    $data_92e10,%eax
    sar    $0x10,%ebx
    call   func_1e134
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_4e1fd:
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e209:
    incw   0xb7(%eax)
    mov    0xb5(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x5,%eax
    jne    jump_4e227
    movw   $0x0,0xb7(%ebp)
  jump_4e227:
    mov    $data_92e10,%eax
    mov    0xb1(%ebp),%ecx
    mov    0xb5(%ebp),%edx
    mov    0xb7(%ebp),%ebx
    sar    $0x10,%edx
    sar    $0x10,%ecx
    mov    -0x2(%esp,%edx,4),%edx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    call   func_1db34
    mov    data_86a50,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_fa360(,%eax,4),%eax
    call   func_24410
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
    mov    0x67(%ebp),%eax
    mov    0xb5(%ebp),%edx
    mov    (%eax),%eax
    sar    $0x10,%edx
    mov    %edx,0x72(%eax)
    mov    0x67(%ebp),%eax
    mov    (%eax),%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e2a8:
    incw   0xb9(%eax)
    mov    0xb7(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x8,%eax
    jne    jump_4e2c6
    movw   $0x3,0xb9(%ebp)
  jump_4e2c6:
    mov    $data_92e10,%eax
    mov    0xb1(%ebp),%ebx
    mov    0xb7(%ebp),%edx
    sar    $0x10,%ebx
    sar    $0x10,%edx
    call   func_1e134
    mov    data_86a50,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    data_fa360(,%eax,4),%eax
    call   func_24410
    mov    0xa7(%ebp),%ebx
    xor    %edx,%edx
    mov    %ebp,%eax
    call   *0xc(%ebx)
    mov    0xb7(%ebp),%edx
    mov    0x67(%ebp),%eax
    sar    $0x10,%edx
    mov    0x4(%eax),%eax
    add    $0x2,%edx
    mov    %edx,0x72(%eax)
    mov    0x67(%ebp),%eax
    mov    0x4(%eax),%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e33c:
    incw   0xbb(%eax)
    mov    0xb9(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x3,%eax
    jne    jump_4e35a
    movw   $0x0,0xbb(%ebp)
  jump_4e35a:
    mov    0xa7(%ebp),%ebx
    mov    %ebp,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    0xb9(%ebp),%edx
    mov    0x67(%ebp),%eax
    sar    $0x10,%edx
    mov    0x8(%eax),%eax
    add    $0xa,%edx
    mov    %edx,0x72(%eax)
    mov    0x67(%ebp),%eax
    mov    0x8(%eax),%eax
    mov    0xa7(%eax),%ebx
    xor    %edx,%edx
    call   *0xc(%ebx)
    mov    $0xffffffff,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_4e399:
    cmp    $0x1f7,%dx
    je     jump_4e2a8
    jmp    jump_4dd95
  jump_4e3a9:
    cmp    $0x2,%dx
    jb     jump_4e3d8
    jbe    jump_4e1a9
    cmp    $0x4,%dx
    jb     jump_4dd95
    cmp    $0x5,%dx
    jbe    jump_4de22
    cmp    $0xc,%dx
    je     jump_4ddb2
    jmp    jump_4dd95
  jump_4e3d8:
    cmp    $0x1,%dx
    je     jump_4dfc6
    jmp    jump_4dd95
  jump_4e3e7:
    xor    %eax,%eax
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4e3f0:
/*----------------------------------------------------------------*/
    push   %edx
    sub    $0x8,%esp
    mov    %eax,%edx
    flds   0x4(%eax)
    fmul   %st(0),%st
    flds   (%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x8(%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fstps  0x4(%esp)
    fldz
    fcomps 0x4(%esp)
    fnstsw %ax
    sahf
    jae    jump_4e43c
    fld1
    fdivs  0x4(%esp)
    flds   (%edx)
    fmul   %st(1),%st
    fstps  (%edx)
    flds   0x4(%edx)
    fmul   %st(1),%st
    fstps  0x4(%edx)
    fmuls  0x8(%edx)
    fstps  0x8(%edx)
  jump_4e43c:
    add    $0x8,%esp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_4e444:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_4e3f0
    flds   0x8(%esp)
    flds   (%edx)
    fmul   %st(1),%st
    fstps  (%edx)
    flds   0x4(%edx)
    fmul   %st(1),%st
    fstps  0x4(%edx)
    fmuls  0x8(%edx)
    fstps  0x8(%edx)
    pop    %edx
    ret    $0x4


/*----------------------------------------------------------------*/
func_4e468:
/*----------------------------------------------------------------*/
    testl  $0x7fffffff,(%eax)
    jne    jump_4e488
    testl  $0x7fffffff,0x4(%eax)
    jne    jump_4e488
    testl  $0x7fffffff,0x8(%eax)
    jne    jump_4e488
    mov    $0xffffffff,%eax
    ret
  jump_4e488:
    xor    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_4e48c:
/*----------------------------------------------------------------*/
    sub    $0x4,%esp
    flds   0x4(%eax)
    fmuls  0x4(%edx)
    flds   (%eax)
    fmuls  (%edx)
    faddp  %st,%st(1)
    flds   0x8(%eax)
    fmuls  0x8(%edx)
    faddp  %st,%st(1)
    fstps  (%esp)
    flds   0x4(%eax)
    fmul   %st(0),%st
    flds   (%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x8(%eax)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fdivrs (%esp)
    fstps  (%esp)
    flds   0x4(%edx)
    fmul   %st(0),%st
    flds   (%edx)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    flds   0x8(%edx)
    fmul   %st(0),%st
    faddp  %st,%st(1)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_721f0
    fdivrs (%esp)
    fsts   (%esp)
    sub    $0x8,%esp
    fstpl  (%esp)
    call   func_73f90
    fmuls  data_85fdc
    fsts   (%esp)
    add    $0x4,%esp
    ret


/*----------------------------------------------------------------*/
func_4e504:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x18,%esp
    mov    (%eax),%ebx
    mov    %ebx,0xc(%esp)
    mov    0x4(%eax),%ebx
    mov    %ebx,0x10(%esp)
    mov    0x8(%eax),%ebx
    mov    %ebx,0x14(%esp)
    mov    0xc(%esp),%ebx
    mov    %ebx,(%esp)
    mov    0x10(%esp),%ebx
    mov    %ebx,0x4(%esp)
    mov    0x14(%esp),%ebx
    mov    %ebx,0x8(%esp)
    flds   0x10(%esp)
    fmuls  0x4(%edx)
    flds   0xc(%esp)
    fmuls  (%edx)
    faddp  %st,%st(1)
    flds   0x14(%esp)
    fmuls  0x8(%edx)
    faddp  %st,%st(1)
    fstps  (%eax)
    flds   0x4(%esp)
    fmuls  0x10(%edx)
    flds   (%esp)
    fmuls  0xc(%edx)
    faddp  %st,%st(1)
    flds   0x8(%esp)
    fmuls  0x14(%edx)
    faddp  %st,%st(1)
    fstps  0x4(%eax)
    flds   0x4(%esp)
    fmuls  0x1c(%edx)
    flds   (%esp)
    fmuls  0x18(%edx)
    faddp  %st,%st(1)
    flds   0x8(%esp)
    fmuls  0x20(%edx)
    faddp  %st,%st(1)
    fstps  0x8(%eax)
    add    $0x18,%esp
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4e62c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x14,%esp
    mov    %eax,%edx
    testl  $0x7fffffff,0x24(%esp)
    je     jump_4e690
    flds   0x24(%esp)
    fmuls  data_85fd8
    fstpl  (%esp)
    mov    0x4(%esp),%ecx
    push   %ecx
    mov    0x4(%esp),%esi
    push   %esi
    call   func_7299a
    push   %ecx
    push   %esi
    fstps  0x14(%esp)
    call   func_729a6
    mov    0x4(%edx),%eax
    mov    %eax,0x8(%esp)
    flds   0x8(%esp)
    fmuls  0xc(%esp)
    flds   0x8(%edx)
    fmul   %st(2),%st
    fsubrp %st,%st(1)
    fstps  0x4(%edx)
    flds   0x8(%edx)
    fmuls  0xc(%esp)
    flds   0x8(%esp)
    fmulp  %st,%st(2)
    faddp  %st,%st(1)
    fstps  0x8(%edx)
  jump_4e690:
    add    $0x14,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    ret    $0x4


/*----------------------------------------------------------------*/
func_4e69c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x14,%esp
    mov    %eax,%edx
    testl  $0x7fffffff,0x24(%esp)
    je     jump_4e6fe
    flds   0x24(%esp)
    fmuls  data_85fd8
    fstpl  (%esp)
    mov    0x4(%esp),%ecx
    push   %ecx
    mov    0x4(%esp),%esi
    push   %esi
    call   func_7299a
    push   %ecx
    push   %esi
    fstps  0x14(%esp)
    call   func_729a6
    mov    (%edx),%eax
    flds   0x8(%edx)
    fmul   %st(1),%st
    mov    %eax,0x8(%esp)
    flds   0x8(%esp)
    fmuls  0xc(%esp)
    faddp  %st,%st(1)
    fstps  (%edx)
    flds   0x8(%edx)
    fmuls  0xc(%esp)
    flds   0x8(%esp)
    fmulp  %st,%st(2)
    fsubp  %st,%st(1)
    fstps  0x8(%edx)
  jump_4e6fe:
    add    $0x14,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    ret    $0x4


/*----------------------------------------------------------------*/
func_4e774:
/*----------------------------------------------------------------*/
    flds   0x4(%edx)
    fmuls  0x4(%eax)
    flds   (%edx)
    fmuls  (%eax)
    faddp  %st,%st(1)
    flds   0x8(%edx)
    fmuls  0x8(%eax)
    faddp  %st,%st(1)
    fadds  0xc(%edx)
    fstps  (%ebx)
    flds   0x14(%edx)
    fmuls  0x4(%eax)
    flds   0x10(%edx)
    fmuls  (%eax)
    faddp  %st,%st(1)
    flds   0x18(%edx)
    fmuls  0x8(%eax)
    faddp  %st,%st(1)
    fadds  0x1c(%edx)
    fstps  0x4(%ebx)
    flds   0x24(%edx)
    fmuls  0x4(%eax)
    flds   0x20(%edx)
    fmuls  (%eax)
    faddp  %st,%st(1)
    flds   0x28(%edx)
    fmuls  0x8(%eax)
    faddp  %st,%st(1)
    fadds  0x2c(%edx)
    fstps  0x8(%ebx)
    ret


/*----------------------------------------------------------------*/
func_4e7c4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0xc,%esp
    mov    0x24(%esp),%ebx
    mov    0x28(%esp),%edx
    flds   0x18(%esp)
    flds   (%eax)
    fmul   %st(1),%st
    fld1
    fdivs  0x8(%eax)
    fld    %st(1)
    fmul   %st(1),%st
    fstp   %st(2)
    flds   0x4(%eax)
    fmulp  %st,%st(3)
    fmulp  %st,%st(2)
    fldl   data_82c50
    fxch   %st(1)
    fadd   %st(1),%st
    call   func_72258
    fistpl 0x8(%esp)
    mov    0x8(%esp),%eax
    faddp  %st,%st(1)
    mov    %ax,(%ebx)
    call   func_72258
    fistpl 0x8(%esp)
    mov    0x8(%esp),%eax
    mov    %ax,(%edx)
    mov    0x1c(%esp),%eax
    add    %ax,(%ebx)
    mov    0x20(%esp),%eax
    add    %ax,(%edx)
    add    $0xc,%esp
    pop    %edx
    pop    %ebx
    ret    $0x14


/*----------------------------------------------------------------*/
func_4e830:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x10,%esp
    mov    data_86a2c,%ebx
    mov    %eax,%ecx
    fldz
    fcomps (%eax)
    fnstsw %ax
    sahf
    ja     jump_4e84d
    mov    %ebx,%edx
    mov    %ebx,%eax
    jmp    jump_4e853
  jump_4e84d:
    mov    %ebx,%edx
    neg    %edx
    mov    %edx,%eax
  jump_4e853:
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,0x4(%esp)
    fildl  0x4(%esp)
    fadds  (%ecx)
    call   func_72258
    fistpl (%esp)
    mov    (%esp),%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    imul   %ebx,%edx
    mov    %eax,(%esp)
    mov    %edx,(%esp)
    fildl  (%esp)
    fstps  (%ecx)
    fldz
    fcomps 0x4(%ecx)
    fnstsw %ax
    sahf
    ja     jump_4e896
    mov    %ebx,%edx
    mov    %ebx,%eax
    jmp    jump_4e89c
  jump_4e896:
    mov    %ebx,%edx
    neg    %edx
    mov    %edx,%eax
  jump_4e89c:
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,0x8(%esp)
    fildl  0x8(%esp)
    fadds  0x4(%ecx)
    call   func_72258
    fistpl (%esp)
    mov    (%esp),%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    imul   %ebx,%edx
    mov    %eax,(%esp)
    mov    %edx,(%esp)
    fildl  (%esp)
    fstps  0x4(%ecx)
    fldz
    fcomps 0x8(%ecx)
    fnstsw %ax
    sahf
    ja     jump_4e8e1
    mov    %ebx,%edx
    mov    %ebx,%eax
    jmp    jump_4e8e7
  jump_4e8e1:
    mov    %ebx,%edx
    neg    %edx
    mov    %edx,%eax
  jump_4e8e7:
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,0xc(%esp)
    fildl  0xc(%esp)
    fadds  0x8(%ecx)
    call   func_72258
    fistpl (%esp)
    mov    (%esp),%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %eax,%edx
    imul   %ebx,%edx
    mov    %eax,(%esp)
    mov    %edx,(%esp)
    fildl  (%esp)
    fstps  0x8(%ecx)
    mov    %ebx,data_86a2c
    add    $0x10,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4e954:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    0xc(%esp),%ebx
    test   $0x7fffffff,%ebx
    je     jump_4e974
    lea    0x18(%edx),%eax
    push   %ebx
    call   func_4e69c
    mov    %edx,%eax
    call   func_4eb44
  jump_4e974:
    pop    %edx
    pop    %ebx
    ret    $0x4


/*----------------------------------------------------------------*/
func_4e9a4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    0xc(%esp),%ebx
    test   $0x7fffffff,%ebx
    je     jump_4e9cd
    lea    0x18(%edx),%eax
    push   %ebx
    call   func_4e62c
    lea    0xc(%edx),%eax
    push   %ebx
    call   func_4e62c
    mov    %edx,%eax
    call   func_4ec54
  jump_4e9cd:
    pop    %edx
    pop    %ebx
    ret    $0x4


/*----------------------------------------------------------------*/
func_4e9d4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    0xc(%esp),%ebx
    test   $0x7fffffff,%ebx
    je     jump_4e9fd
    lea    0x18(%edx),%eax
    push   %ebx
    call   func_4e69c
    lea    0xc(%edx),%eax
    push   %ebx
    call   func_4e69c
    mov    %edx,%eax
    call   func_4ec54
  jump_4e9fd:
    pop    %edx
    pop    %ebx
    ret    $0x4


/*----------------------------------------------------------------*/
func_4eb44:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x38,%esp
    mov    %eax,%ebx
    lea    0xc(%eax),%edx
    mov    %edx,%eax
    xor    %esi,%esi
    call   func_4e3f0
    lea    0xc(%esp),%eax
    mov    %esi,0x18(%esp)
    mov    %esi,0x1c(%esp)
    mov    %esi,0x20(%esp)
    mov    %eax,0x30(%esp)
    lea    0x18(%ebx),%ecx
    flds   0x4(%edx)
    fmuls  0x8(%ecx)
    flds   0x8(%edx)
    fmuls  0x4(%ecx)
    fsubrp %st,%st(1)
    fstps  0x18(%esp)
    flds   0x8(%edx)
    fmuls  (%ecx)
    flds   (%edx)
    fmuls  0x8(%ecx)
    fsubrp %st,%st(1)
    fstps  0x1c(%esp)
    flds   (%edx)
    fmuls  0x4(%ecx)
    mov    0x18(%esp),%eax
    flds   0x4(%edx)
    fmuls  (%ecx)
    mov    %eax,0xc(%esp)
    fsubrp %st,%st(1)
    mov    0x1c(%esp),%eax
    fstps  0x20(%esp)
    mov    %eax,0x10(%esp)
    mov    0x20(%esp),%eax
    mov    %eax,0x14(%esp)
    mov    0x18(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x10(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    %ebx,%eax
    call   func_4e3f0
    lea    0x24(%esp),%eax
    mov    %esi,(%esp)
    mov    %esi,0x4(%esp)
    mov    %esi,0x8(%esp)
    mov    %eax,0x34(%esp)
    flds   0x4(%ebx)
    fmuls  0x8(%edx)
    flds   0x8(%ebx)
    fmuls  0x4(%edx)
    fsubrp %st,%st(1)
    fstps  (%esp)
    flds   0x8(%ebx)
    fmuls  (%edx)
    flds   (%ebx)
    fmuls  0x8(%edx)
    fsubrp %st,%st(1)
    fstps  0x4(%esp)
    flds   (%ebx)
    fmuls  0x4(%edx)
    mov    (%esp),%eax
    flds   0x4(%ebx)
    fmuls  (%edx)
    mov    %eax,0x24(%esp)
    fsubrp %st,%st(1)
    mov    0x4(%esp),%eax
    fstps  0x8(%esp)
    mov    %eax,0x28(%esp)
    mov    0x8(%esp),%eax
    mov    %eax,0x2c(%esp)
    mov    (%esp),%eax
    mov    %eax,(%ecx)
    mov    0x28(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x2c(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    %ecx,%eax
    call   func_4e3f0
    add    $0x38,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4ec54:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x38,%esp
    mov    %eax,%ebx
    lea    0x18(%eax),%edx
    lea    0xc(%ebx),%ecx
    mov    %edx,%eax
    xor    %esi,%esi
    call   func_4e3f0
    lea    0xc(%esp),%eax
    mov    %esi,0x18(%esp)
    mov    %esi,0x1c(%esp)
    mov    %esi,0x20(%esp)
    mov    %eax,0x30(%esp)
    flds   0x4(%ecx)
    fmuls  0x8(%edx)
    flds   0x8(%ecx)
    fmuls  0x4(%edx)
    fsubrp %st,%st(1)
    fstps  0x18(%esp)
    flds   0x8(%ecx)
    fmuls  (%edx)
    flds   (%ecx)
    fmuls  0x8(%edx)
    fsubrp %st,%st(1)
    fstps  0x1c(%esp)
    flds   (%ecx)
    fmuls  0x4(%edx)
    mov    0x18(%esp),%eax
    flds   0x4(%ecx)
    fmuls  (%edx)
    mov    %eax,0xc(%esp)
    fsubrp %st,%st(1)
    mov    0x1c(%esp),%eax
    fstps  0x20(%esp)
    mov    %eax,0x10(%esp)
    mov    0x20(%esp),%eax
    mov    %eax,0x14(%esp)
    mov    0x18(%esp),%eax
    mov    %eax,(%ebx)
    mov    0x10(%esp),%eax
    mov    %eax,0x4(%ebx)
    mov    0x14(%esp),%eax
    mov    %eax,0x8(%ebx)
    mov    %ebx,%eax
    call   func_4e3f0
    lea    0x24(%esp),%eax
    mov    %esi,(%esp)
    mov    %esi,0x4(%esp)
    mov    %esi,0x8(%esp)
    mov    %eax,0x34(%esp)
    flds   0x4(%edx)
    fmuls  0x8(%ebx)
    flds   0x8(%edx)
    fmuls  0x4(%ebx)
    fsubrp %st,%st(1)
    fstps  (%esp)
    flds   0x8(%edx)
    fmuls  (%ebx)
    flds   (%edx)
    fmuls  0x8(%ebx)
    fsubrp %st,%st(1)
    fstps  0x4(%esp)
    flds   (%edx)
    fmuls  0x4(%ebx)
    mov    (%esp),%eax
    flds   0x4(%edx)
    fmuls  (%ebx)
    mov    %eax,0x24(%esp)
    fsubrp %st,%st(1)
    mov    0x4(%esp),%eax
    fstps  0x8(%esp)
    mov    %eax,0x28(%esp)
    mov    0x8(%esp),%eax
    mov    %eax,0x2c(%esp)
    mov    (%esp),%eax
    mov    %eax,(%ecx)
    mov    0x28(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x2c(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    %ecx,%eax
    call   func_4e3f0
    add    $0x38,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4eef8:
/*----------------------------------------------------------------*/
    sub    $0x4,%esp
    mov    %edx,(%esp)
    mov    %ebx,%edx
    flds   0x4(%edx)
    mov    (%esp),%edx
    fmuls  0x4(%edx)
    mov    %ebx,%edx
    flds   (%edx)
    mov    (%esp),%edx
    fmuls  (%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x8(%edx)
    mov    (%esp),%edx
    fmuls  0x8(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  (%eax)
    flds   0x10(%edx)
    mov    (%esp),%edx
    fmuls  0x4(%edx)
    mov    %ebx,%edx
    flds   0xc(%edx)
    mov    (%esp),%edx
    fmuls  (%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x14(%edx)
    mov    (%esp),%edx
    fmuls  0x8(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x4(%eax)
    flds   0x1c(%edx)
    mov    (%esp),%edx
    fmuls  0x4(%edx)
    mov    %ebx,%edx
    flds   0x18(%edx)
    mov    (%esp),%edx
    fmuls  (%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x20(%edx)
    mov    (%esp),%edx
    fmuls  0x8(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x8(%eax)
    flds   0x4(%edx)
    mov    (%esp),%edx
    fmuls  0x10(%edx)
    mov    %ebx,%edx
    flds   (%edx)
    mov    (%esp),%edx
    fmuls  0xc(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x8(%edx)
    mov    (%esp),%edx
    fmuls  0x14(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x10(%eax)
    flds   0xc(%edx)
    mov    (%esp),%edx
    fmuls  0xc(%edx)
    mov    %ebx,%edx
    flds   0x10(%edx)
    mov    (%esp),%edx
    fmuls  0x10(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x14(%edx)
    mov    (%esp),%edx
    fmuls  0x14(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x14(%eax)
    flds   0x18(%edx)
    mov    (%esp),%edx
    fmuls  0xc(%edx)
    mov    %ebx,%edx
    flds   0x1c(%edx)
    mov    (%esp),%edx
    fmuls  0x10(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x20(%edx)
    mov    (%esp),%edx
    fmuls  0x14(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x18(%eax)
    flds   0x4(%edx)
    mov    (%esp),%edx
    fmuls  0x1c(%edx)
    mov    %ebx,%edx
    flds   (%edx)
    mov    (%esp),%edx
    fmuls  0x18(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x8(%edx)
    mov    (%esp),%edx
    fmuls  0x20(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x20(%eax)
    flds   0xc(%edx)
    mov    (%esp),%edx
    fmuls  0x18(%edx)
    mov    %ebx,%edx
    flds   0x10(%edx)
    mov    (%esp),%edx
    fmuls  0x1c(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x14(%edx)
    mov    (%esp),%edx
    fmuls  0x20(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    fstps  0x24(%eax)
    flds   0x18(%edx)
    mov    (%esp),%edx
    fmuls  0x18(%edx)
    mov    %ebx,%edx
    flds   0x1c(%edx)
    mov    (%esp),%edx
    fmuls  0x1c(%edx)
    faddp  %st,%st(1)
    mov    %ebx,%edx
    flds   0x20(%edx)
    mov    (%esp),%edx
    fmuls  0x20(%edx)
    faddp  %st,%st(1)
    mov    %ecx,%edx
    fstps  0x28(%eax)
    flds   0x4(%edx)
    mov    (%esp),%edx
    fmuls  0x4(%edx)
    mov    %ecx,%edx
    flds   (%edx)
    mov    (%esp),%edx
    fmuls  (%edx)
    faddp  %st,%st(1)
    mov    %ecx,%edx
    flds   0x8(%edx)
    mov    (%esp),%edx
    fmuls  0x8(%edx)
    faddp  %st,%st(1)
    mov    %ecx,%edx
    fstps  0xc(%eax)
    flds   0x4(%edx)
    mov    (%esp),%edx
    fmuls  0x10(%edx)
    mov    %ecx,%edx
    flds   (%edx)
    mov    (%esp),%edx
    fmuls  0xc(%edx)
    faddp  %st,%st(1)
    mov    %ecx,%edx
    flds   0x8(%edx)
    mov    (%esp),%edx
    fmuls  0x14(%edx)
    faddp  %st,%st(1)
    mov    %ecx,%edx
    fstps  0x1c(%eax)
    flds   0x4(%edx)
    mov    (%esp),%edx
    fmuls  0x1c(%edx)
    mov    %ecx,%edx
    flds   (%edx)
    mov    (%esp),%edx
    fmuls  0x18(%edx)
    faddp  %st,%st(1)
    mov    %ecx,%edx
    flds   0x8(%edx)
    mov    (%esp),%edx
    fmuls  0x20(%edx)
    faddp  %st,%st(1)
    fstps  0x2c(%eax)
    add    $0x4,%esp
    ret

vtable_4f0da:
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0

vtable_4f0f2:
    .long   0

vtable_4f0f6:
    .long   0


/*----------------------------------------------------------------*/
func_4f0fa:
/*----------------------------------------------------------------*/
    add    %al,(%eax)


/*----------------------------------------------------------------*/
func_4f0fc:
/*----------------------------------------------------------------*/
    add    %al,(%eax)

vtable_4f0fe:
    .long   0
    .long   0
    .long   0

vtable_4f10c:
    .long   0


/*----------------------------------------------------------------*/
func_4f112:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    pushf
    cli
    mov    $0x100,%eax
    mov    $0x10,%ebx
    int    $0x31
    mov    %edx,vtable_4f10c
    mov    %ax,func_4f0fc
    movw   $0x0,vtable_4f0da
    mov    $0x4f01,%eax
    mov    %ax,vtable_4f0f6
    mov    0x8(%ebp),%eax
    mov    %ax,vtable_4f0f2
    movw   $0x0,vtable_4f0fe
    pushfw
    pop    %ax
    mov    %ax,func_4f0fa
    mov    $0x300,%eax
    mov    $0x10,%ebx
    mov    $0x0,%ecx
    lea    vtable_4f0da,%edi
    int    $0x31
    mov    $0x101,%eax
    mov    vtable_4f10c,%edx
    int    $0x31
    mov    vtable_4f0f6,%ax
    cmp    $0x4f,%ax
    je     jump_4f196
    xor    %ax,%ax
  jump_4f196:
    push   %ebp
    mov    %esp,%ebp
    testb  $0x2,0x5(%ebp)
    cli
    je     jump_4f1a1
    sti
  jump_4f1a1:
    pop    %ebp
    popf
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_4f1b0:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_86a30,%eax
    call   func_73a9a
    mov    $data_fa35c,%eax
    mov    $0x1,%edx
    call   func_4f748
    mov    %edx,data_86a38
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_4f1d4:
/*----------------------------------------------------------------*/
    incl   data_122044
    ret


/*----------------------------------------------------------------*/
func_4f1dc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    $0x2000000,%edx
    xor    %ecx,%ecx
    xor    %edi,%edi
  jump_4f1ea:
    lea    (%ecx,%edx,1),%ebx
    mov    %ebx,%eax
    call   func_73af4
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_4f1fc
    mov    %ebx,%ecx
  jump_4f1fc:
    cmp    $0x2000000,%ecx
    je     jump_4f20c
    cmp    $0x1000,%edx
    jge    jump_4f211
  jump_4f20c:
    mov    $0xffffffff,%edi
  jump_4f211:
    mov    %esi,%eax
    call   func_73bef
    sar    %edx
    test   %edi,%edi
    je     jump_4f1ea
    mov    %ecx,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4f228:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ebx,(%esp)
    cmp    data_93b98,%cx
    jl     jump_4f24f
    mov    $0xd0,%ebx
    mov    $data_82c58,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4f24f:
    mov    data_efd84,%ax
    xor    %edx,%edx
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_4f279
    mov    $0xd5,%ebx
    mov    $data_82c66,%edx
    call   func_25878
  jump_4f279:
    movswl %cx,%ecx
    mov    %ecx,%eax
    mov    (%esp),%edx
    shl    $0x5,%eax
    xor    %ebx,%ebx
    sub    %ecx,%eax
    push   %ecx
    shl    $0x3,%eax
    push   %edx
    sub    %ecx,%eax
    mov    %ebp,%edx
    mov    %esi,%ecx
    mov    data_92e17(,%eax,2),%bl
    mov    %edi,%eax
    call   func_4f2a8
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_4f2a8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%ebp
    mov    %ebx,(%esp)
    mov    %ecx,%esi
    mov    0x16(%esp),%ecx
    sar    $0x10,%ecx
    mov    %ecx,%ebx
    shl    $0x5,%ebx
    sub    %ecx,%ebx
    shl    $0x3,%ebx
    sub    %ecx,%ebx
    mov    data_92e18(,%ebx,2),%bl
    and    $0xff,%ebx
    xor    %eax,%eax
    shl    $0x2,%ebx
    mov    %al,%dl
    add    $0x13,%ebx
    neg    %dl
    add    %bl,%dl
    jmp    jump_4f2fa
  jump_4f2e7:
    mov    $0x13,%ecx
    sub    %ebx,%ecx
    mov    data_fd37e,%ebx
    inc    %eax
    mov    %dl,(%ecx,%ebx,1)
    dec    %dl
  jump_4f2fa:
    movswl %ax,%ebx
    cmp    $0x4,%ebx
    jl     jump_4f2e7
    mov    data_fd37e,%edx
    push   %edx
    call   func_583c7
    add    $0x4,%esp
    mov    0x14(%esp),%ebx
    push   %ebx
    push   %esi
    mov    0x8(%esp),%ecx
    push   %ecx
    push   %ebp
    push   %edi
    call   func_583e6
    add    $0x14,%esp
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_4f330:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%ebp
    mov    %ebx,%edi
    mov    %ecx,(%esp)
    mov    0x16(%esp),%ebx
    xor    %eax,%eax
    sar    $0x10,%ebx
    mov    %al,%dl
    shl    $0x2,%ebx
    neg    %dl
    add    $0x13,%ebx
    add    %bl,%dl
    jmp    jump_4f369
  jump_4f356:
    mov    $0x13,%ecx
    sub    %ebx,%ecx
    mov    data_fd37e,%ebx
    inc    %eax
    mov    %dl,(%ecx,%ebx,1)
    dec    %dl
  jump_4f369:
    movswl %ax,%ebx
    cmp    $0x4,%ebx
    jl     jump_4f356
    mov    data_fd37e,%edx
    push   %edx
    call   func_583c7
    add    $0x4,%esp
    mov    0x14(%esp),%ebx
    push   %ebx
    mov    0x4(%esp),%ecx
    push   %ecx
    push   %edi
    push   %ebp
    push   %esi
    call   func_583e6
    add    $0x14,%esp
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_4f3a0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x18c,%esp
    mov    %eax,%edx
    mov    %esp,%eax
    mov    $0x200,%ebx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    jne    jump_4f40b
    mov    $0x74,%ebx
    lea    0x118(%esp),%edx
    mov    %esp,%eax
    call   func_1bf94
    mov    %esp,%edx
    mov    $data_92e10,%eax
    xor    %ecx,%ecx
    call   func_21180
    xor    %ebx,%ebx
    push   $0x0
    mov    $0xd,%edx
    mov    $data_fa35c,%eax
    call   func_51fac
    mov    $0xffffffff,%ebx
    mov    %esp,%edx
    mov    $data_fa35c,%eax
    call   func_55658
    jmp    jump_4f423
  jump_4f40b:
    mov    $0xaa,%eax
    call   func_1ce70
    xor    %ebx,%ebx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_50a90
  jump_4f423:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x18c,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4f438:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x18c,%esp
    mov    %eax,%edx
    mov    %esp,%eax
    call   func_1bb78
    mov    %esp,%eax
    call   func_1bca8
    test   %eax,%eax
    jne    jump_4f5cc
    mov    data_92e10,%eax
    mov    %eax,0x118(%esp)
    mov    data_93b96,%eax
    sar    $0x10,%eax
    mov    %eax,0x11c(%esp)
    xor    %eax,%eax
    xor    %edx,%edx
    mov    data_f458e,%al
    xor    %ebx,%ebx
    mov    %eax,0x120(%esp)
    xor    %eax,%eax
    jmp    jump_4f4a2
  jump_4f48a:
    add    $0x1ee,%eax
    xor    %ecx,%ecx
    add    $0x4,%ebx
    mov    data_92c29(%eax),%cl
    inc    %edx
    mov    %ecx,0x120(%esp,%ebx,1)
  jump_4f4a2:
    mov    data_93b96,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%edx
    jl     jump_4f48a
    xor    %eax,%eax
    xor    %edx,%edx
    xor    %ebx,%ebx
    jmp    jump_4f4d0
  jump_4f4b7:
    add    $0x1ee,%ebx
    xor    %ecx,%ecx
    add    $0x4,%edx
    mov    data_92c2a(%ebx),%cl
    inc    %eax
    mov    %ecx,0x13c(%esp,%edx,1)
  jump_4f4d0:
    mov    data_93b96,%ecx
    sar    $0x10,%ecx
    cmp    %ecx,%eax
    jl     jump_4f4b7
    xor    %eax,%eax
    xor    %edx,%edx
    jmp    jump_4f506
  jump_4f4e3:
    xor    %ebx,%ebx
    mov    data_f458e,%bl
    imul   $0x1ee,%ebx,%ebx
    mov    data_92fd3(%ebx,%eax,1),%ebx
    add    $0x4,%edx
    sar    $0x18,%ebx
    inc    %eax
    mov    %ebx,0x158(%esp,%edx,1)
  jump_4f506:
    mov    data_93b96,%ebx
    sar    $0x10,%ebx
    cmp    %ebx,%eax
    jl     jump_4f4e3
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    xor    %ebx,%ebx
    add    %eax,%eax
    xor    %edx,%edx
    add    $data_92e16,%eax
    call   func_3c310
    xor    %edx,%edx
    mov    data_f458e,%dl
    mov    %eax,0x178(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    $data_92e16,%eax
    xor    %edx,%edx
    call   func_3c3cc
    mov    data_f458e,%dl
    mov    %eax,0x17c(%esp)
    mov    %edx,%eax
    shl    $0x5,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    mov    $0x74,%ebx
    add    $data_92e16,%eax
    lea    0x118(%esp),%edx
    call   func_3c650
    mov    %eax,0x180(%esp)
    mov    %esp,%eax
    call   func_1c098
    mov    %esp,%edx
    mov    $data_92e10,%eax
    call   func_20a54
    xor    %ebx,%ebx
    mov    %esp,%edx
    mov    $data_fa35c,%eax
    call   func_55658
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x18c,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_4f5cc:
    mov    $0xaa,%eax
    call   func_1ce70
    xor    %ebx,%ebx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_50a90
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x18c,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4f5f8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x28,%esp
    mov    %eax,%ecx
    movl   $data_c8c44,(%esp)
    mov    0xc(%eax),%eax
    mov    0x4(%ecx),%ebx
    sub    %ebx,%eax
    mov    %eax,0x4(%esp)
    mov    0x10(%ecx),%eax
    mov    0x8(%ecx),%esi
    sub    %esi,%eax
    mov    %eax,0x8(%esp)
    mov    0x4(%esp),%eax
    imul   0x8(%esp),%eax
    xor    %edi,%edi
    mov    %edi,0xc(%esp)
    mov    %edi,0x10(%esp)
    cmp    $0x27100,%eax
    jl     jump_4f64c
    mov    $0x13e,%ebx
    mov    $data_82c74,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4f64c:
    mov    0x4(%esp),%eax
    push   $0xffffffff
    xor    %ebx,%ebx
    mov    %eax,0x24(%esp)
    mov    0xc(%esp),%eax
    push   %ebx
    mov    %eax,0x2c(%esp)
    lea    0x8(%esp),%eax
    push   %ebx
    mov    %eax,0x20(%esp)
    lea    0x20(%esp),%eax
    push   %eax
    push   %ebx
    push   %ebx
    push   %ecx
    mov    %ebx,0x34(%esp)
    mov    %ebx,0x38(%esp)
    call   func_59e6f
    add    $0x1c,%esp
    test   %eax,%eax
    je     jump_4f697
    mov    $0x147,%ebx
    mov    $data_82c82,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4f697:
    add    $0x28,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4f6a0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x28,%esp
    mov    %eax,%ecx
    movl   $data_c8c44,(%esp)
    mov    0xc(%eax),%eax
    mov    0x4(%ecx),%ebx
    sub    %ebx,%eax
    mov    %eax,0x4(%esp)
    mov    0x10(%ecx),%eax
    mov    0x8(%ecx),%esi
    sub    %esi,%eax
    mov    %eax,0x8(%esp)
    mov    0x4(%esp),%eax
    imul   0x8(%esp),%eax
    xor    %edi,%edi
    mov    %edi,0xc(%esp)
    mov    %edi,0x10(%esp)
    cmp    $0x27100,%eax
    jl     jump_4f6f4
    mov    $0x158,%ebx
    mov    $data_82c90,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4f6f4:
    push   $0xffffffff
    xor    %ebx,%ebx
    push   %ebx
    push   %ebx
    mov    0x10(%esp),%eax
    push   %ecx
    mov    %eax,0x30(%esp)
    mov    0x18(%esp),%eax
    push   %ebx
    mov    %eax,0x38(%esp)
    lea    0x14(%esp),%eax
    push   %ebx
    mov    %eax,0x2c(%esp)
    lea    0x2c(%esp),%eax
    push   %eax
    mov    %ebx,0x34(%esp)
    mov    %ebx,0x38(%esp)
    call   func_59e6f
    add    $0x1c,%esp
    test   %eax,%eax
    je     jump_4f73f
    mov    $0x161,%ebx
    mov    $data_82c9e,%edx
    xor    %eax,%eax
    call   func_25878
  jump_4f73f:
    add    $0x28,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4f748:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    add    $0x3026,%eax
    call   func_2a9a0
    add    $0x20,%eax
    call   func_2a9a0
    add    $0x21d6a,%eax
    call   func_1acc0
    lea    -0x24db0(%eax),%edx
    mov    %edx,%eax
    call   func_4f84c
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_4f778:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ebx
    xor    %ecx,%ecx
    jmp    jump_4f783
  jump_4f782:
    inc    %ecx
  jump_4f783:
    movswl %cx,%edx
    cmp    $0x400,%edx
    jge    jump_4f7be
    imul   $0xc,%edx,%eax
    add    %ebx,%eax
    mov    0x4(%eax),%edx
    test   %edx,%edx
    je     jump_4f7a1
    mov    %edx,%eax
    call   func_2595c
  jump_4f7a1:
    movswl %cx,%eax
    imul   $0xc,%eax,%eax
    mov    0x4(%ebx,%eax,1),%eax
    test   %eax,%eax
    je     jump_4f782
    mov    0xa7(%eax),%esi
    mov    $0x2,%edx
    call   *(%esi)
    jmp    jump_4f782
  jump_4f7be:
    xor    %edx,%edx
    jmp    jump_4f7d2
  jump_4f7c2:
    movswl %dx,%eax
    mov    0x300e(%ebx,%eax,4),%eax
    call   func_7211c
    inc    %edx
  jump_4f7d2:
    movswl %dx,%eax
    cmp    $0x6,%eax
    jge    jump_4f7f2
    shl    $0x2,%eax
    add    %ebx,%eax
    mov    0x300e(%eax),%edi
    test   %edi,%edi
    je     jump_4f7c2
    mov    %edi,%eax
    call   func_2595c
    jmp    jump_4f7c2
  jump_4f7f2:
    mov    0x48a6(%ebx),%ecx
    cmp    $0xffffffff,%ecx
    jne    jump_4f803
    mov    %ecx,%edx
    mov    %ebx,%eax
    jmp    jump_4f810
  jump_4f803:
    cmpl   $0xffffffff,0x48aa(%ebx)
    jne    jump_4f815
    mov    %ebx,%eax
    xor    %edx,%edx
  jump_4f810:
    call   func_54cf8
  jump_4f815:
    mov    %ebx,%eax
    call   func_4fa68
    xor    %edx,%edx
    lea    0x24db0(%ebx),%eax
    call   func_1acf4
    sub    $0x21d6a,%eax
    xor    %edx,%edx
    call   func_2a9c0
    sub    $0x20,%eax
    xor    %edx,%edx
    call   func_2a9c0
    sub    $0x3026,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4f84c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    add    $0x3066,%eax
    movw   $0x0,0x11c0(%eax)
    movw   $0x0,-0x66(%eax)
    movw   $0xffff,0x11c2(%eax)
    movw   $0x0,0x16f0(%eax)
    movw   $0x0,0x16f2(%eax)
    movw   $0x0,0x1446(%eax)
    movw   $0x0,0x15a8(%eax)
    movw   $0x0,0x16ca(%eax)
    movl   $0xffffffff,-0x64(%eax)
    movl   $0xffffffff,0x16cc(%eax)
    movw   $0x0,0x16f4(%eax)
    mov    $0x11c0,%ebx
    movw   $0x0,0x16f6(%eax)
    xor    %edx,%edx
    movl   $0x3f800000,0x21d46(%eax)
    mov    %edx,data_122044
    call   func_72280
    mov    $0x3000,%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_72280
    mov    $0x160,%ebx
    lea    0x44ae(%ecx),%eax
    xor    %edx,%edx
    call   func_72280
    mov    $0x120,%ebx
    lea    0x4610(%ecx),%eax
    xor    %edx,%edx
    call   func_72280
    mov    $0x18,%ebx
    lea    0x300e(%ecx),%eax
    xor    %edx,%edx
    call   func_72280
    mov    $0x20,%ebx
    mov    $0xffffffff,%edx
    lea    0x4736(%ecx),%eax
    call   func_72280
    xor    %eax,%eax
    jmp    jump_4f952
  jump_4f937:
    imul   $0x8e,%edx,%edx
    movw   $0xffff,0x3066(%ecx,%edx,1)
    inc    %eax
    movw   $0xffff,0x30ea(%ecx,%edx,1)
  jump_4f952:
    movswl %ax,%edx
    cmp    $0x20,%edx
    jl     jump_4f937
    movl   $0x0,0x489e(%ecx)
    movl   $0x0,0x48a2(%ecx)
    movl   $0x0,0x24d9c(%ecx)
    movl   $0x0,0x24da0(%ecx)
    movl   $0x0,0x24da4(%ecx)
    movl   $0xffffffff,0x24da8(%ecx)
    mov    $0x10,%edx
    movl   $0x0,0x48a6(%ecx)
    lea    0x21d82(%ecx),%eax
    movl   $0x0,0x48aa(%ecx)
    xor    %ebx,%ebx
    movl   $0x0,0x48ae(%ecx)
    call   func_72280
    mov    $0x3000,%ebx
    lea    0x21d96(%ecx),%eax
    movl   $0x3c,0x21d82(%ecx)
    xor    %edx,%edx
    movw   $0x0,0x24d96(%ecx)
    call   func_72280
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4f9f0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%esi
    xor    %edx,%edx
    mov    0x4732(%eax),%ebx
    mov    %edx,data_122044
    cmp    $0xffffffff,%ebx
    jne    jump_4fa5c
    push   $func_4f1d4
    call   func_62ae8
    add    $0x4,%esp
    mov    %eax,0x4732(%esi)
    cmp    $0xffffffff,%eax
    jne    jump_4fa33
    mov    $0x1e5,%ebx
    mov    $data_82cac,%edx
    xor    %eax,%eax
    call   func_25888
  jump_4fa33:
    mov    0x4732(%esi),%edi
    cmp    $0xffffffff,%edi
    jne    jump_4fa42
    xor    %eax,%eax
    jmp    jump_4fa61
  jump_4fa42:
    push   $0x64
    push   %edi
    call   func_62d3c
    add    $0x8,%esp
    mov    0x4732(%esi),%eax
    push   %eax
    call   func_62f06
    add    $0x4,%esp
  jump_4fa5c:
    mov    $0xffffffff,%eax
  jump_4fa61:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4fa68:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    mov    0x4732(%eax),%edx
    cmp    $0xffffffff,%edx
    je     jump_4fa9b
    push   %edx
    call   func_62fd5
    add    $0x4,%esp
    mov    0x4732(%esi),%ecx
    push   %ecx
    call   func_630a4
    add    $0x4,%esp
    movl   $0xffffffff,0x4732(%esi)
  jump_4fa9b:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_4faa0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    cmpl   $0xffffffff,0x48a6(%eax)
    je     jump_4fabd
    cmpl   $0xffffffff,0x48aa(%eax)
    jne    jump_4fac3
  jump_4fabd:
    incl   0x48b6(%esi)
  jump_4fac3:
    mov    data_c84ac,%edi
    movl   $0xffffffff,0x48b2(%esi)
    test   %edi,%edi
    je     jump_4fb06
    cmpl   $0x0,0x24da4(%esi)
    jne    jump_4fb06
    cmpl   $0x0,0x489e(%esi)
    jne    jump_4fb06
    mov    $0x1,%edx
    mov    $data_c84f8,%eax
    xor    %ebx,%ebx
    movl   $0xffffffff,0x24da4(%esi)
    call   func_2beb0
    jmp    jump_4fb5e
  jump_4fb06:
    cmpl   $0x0,0x24da4(%esi)
    je     jump_4fb5e
    mov    data_c84ac,%ebx
    test   %ebx,%ebx
    jne    jump_4fb5e
    mov    $data_c84f8,%eax
    xor    %edx,%edx
    mov    %ebx,0x24da4(%esi)
    call   func_2beb0
    mov    0x3002(%esi),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_4fb5e
    push   $0x0
    mov    $0x6,%ebx
    mov    %ecx,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_520f4
    push   $0x0
    mov    $0x7,%ebx
    mov    %esi,%eax
    mov    0x3002(%esi),%edx
    xor    %ecx,%ecx
    call   func_520f4
  jump_4fb5e:
    mov    0x24da4(%esi),%edi
    mov    $0xffffffff,%eax
    test   %edi,%edi
    jne    jump_4fbd8
    cmpl   $0x0,0x489e(%esi)
    jne    jump_4fbd8
    mov    0x4226(%esi),%edx
    sar    $0x10,%edx
    test   %edx,%edx
    je     jump_4fbd8
    mov    data_c84f0,%edx
    test   %edx,%edx
    jne    jump_4fbb2
    mov    data_c84ec,%ebp
    test   %ebp,%ebp
    jne    jump_4fba3
    xor    %eax,%eax
    jmp    jump_4fbd8
  jump_4fba3:
    cmp    $0x27f,%ebp
    jne    jump_4fbd8
    mov    $0x1,%eax
    jmp    jump_4fbd8
  jump_4fbb2:
    cmp    $0x1df,%edx
    jne    jump_4fbd8
    mov    data_c84ec,%ecx
    test   %ecx,%ecx
    jne    jump_4fbcb
    mov    $0x2,%eax
    jmp    jump_4fbd8
  jump_4fbcb:
    cmp    $0x27f,%ecx
    jne    jump_4fbd8
    mov    $0x3,%eax
  jump_4fbd8:
    cmp    0x24da8(%esi),%eax
    je     jump_4fbfb
    xor    %edx,%edx
    mov    %eax,0x24da8(%esi)
    cmp    $0xffffffff,%eax
    je     jump_4fbf0
    lea    0x4(%eax),%edx
  jump_4fbf0:
    mov    %esi,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_55634
  jump_4fbfb:
    mov    data_c84e8,%edi
    cmp    $0xffffffff,%edi
    jne    jump_4fc48
    cmp    0x48a6(%esi),%edi
    jne    jump_4fc41
    cmpl   $0x0,0x48b2(%esi)
    je     jump_4fc41
    push   $0x0
    mov    data_c84f0,%edx
    mov    data_c84ec,%ebx
    push   %edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    push   %ebx
    xor    %edx,%edx
    mov    $0x1,%ebx
    call   func_55044
    movl   $0x0,0x48b2(%esi)
  jump_4fc41:
    mov    %esi,%eax
    call   func_51ce0
  jump_4fc48:
    cmpl   $0x0,0x489e(%esi)
    jne    jump_4fc73
    cmpw   $0x0,0x4730(%esi)
    je     jump_4fc62
    mov    %esi,%eax
    call   func_51be8
  jump_4fc62:
    cmpw   $0x0,0x460e(%esi)
    je     jump_4fc73
    mov    %esi,%eax
    call   func_51a58
  jump_4fc73:
    mov    data_c84a0,%edi
    cmp    $0xffffffff,%edi
    jne    jump_4fdcb
    cmp    0x48a6(%esi),%edi
    jne    jump_4fcd5
    cmpl   $0x0,data_c84a4
    je     jump_4fca5
    xor    %eax,%eax
    mov    data_c84c4,%ax
    cmp    $0x13,%eax
    je     jump_4fcd5
    cmp    $0x19,%eax
    je     jump_4fcd5
  jump_4fca5:
    mov    data_c84a4,%edx
    xor    %eax,%eax
    push   %edx
    mov    data_c84c6,%ax
    mov    $0x3,%ebx
    push   %eax
    xor    %eax,%eax
    mov    data_c84c6,%ecx
    mov    data_c84c4,%ax
    sar    $0x10,%ecx
    push   %eax
    xor    %edx,%edx
    mov    %esi,%eax
    call   func_55044
  jump_4fcd5:
    cmpl   $0xffffffff,0x48aa(%esi)
    jne    jump_4fd84
    cmpl   $0x0,data_c84a8
    je     jump_4fd84
    xor    %eax,%eax
    mov    data_c84c4,%ax
    cmp    $0x19,%eax
    jne    jump_4fd84
    mov    data_122008,%edi
    push   %edi
    push   $data_82cba
    lea    0x8(%esp),%eax
    push   %eax
    mov    $data_82cc3,%edx
    movl   $0x0,0x48aa(%esi)
    call   func_720c9
    add    $0xc,%esp
    xor    %ebx,%ebx
    mov    %esi,%eax
    call   func_5216c
    mov    %esp,%ebx
    mov    $data_12200c,%edx
    mov    %eax,%ecx
    call   func_2f390
    mov    %ecx,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    xor    %ebp,%ebp
    call   func_506bc
    mov    data_c84d0,%eax
    mov    %ebp,data_c84a4
    mov    %eax,data_122000
    mov    data_c84d4,%eax
    movl   $0xffffffff,0x48aa(%esi)
    mov    %eax,data_122004
    mov    data_122008,%eax
    xor    %ecx,%ecx
    inc    %eax
    mov    %cx,data_c84c4
    mov    %eax,data_122008
  jump_4fd84:
    mov    $0xffffffff,%eax
    cmp    data_c84a4,%eax
    je     jump_4fd9f
    xor    %edx,%edx
    mov    data_c84c4,%dx
    cmp    $0x1,%edx
    jne    jump_4fda6
  jump_4fd9f:
    mov    %esi,%eax
    call   func_50168
  jump_4fda6:
    cmp    $0xffffffff,%eax
    jne    jump_4fdcb
    push   $0x0
    mov    $0x3,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    data_c84c4,%cx
    mov    data_c84c6,%bx
    call   func_51fac
  jump_4fdcb:
    mov    data_c84dc,%ebx
    cmp    $0xffffffff,%ebx
    jne    jump_4ff1a
    cmp    0x48a6(%esi),%ebx
    jne    jump_4fe21
    cmpl   $0x0,data_c84a4
    jne    jump_4fe21
    mov    data_c84d0,%ebp
    xor    %eax,%eax
    test   %ebp,%ebp
    je     jump_4fe05
    cmpl   $0x0,data_c84ac
    je     jump_4fe05
    mov    $0x1,%eax
  jump_4fe05:
    push   $0x0
    mov    data_c84d0,%ebx
    push   %ebx
    movswl %ax,%ecx
    xor    %edx,%edx
    push   $0x0
    mov    %esi,%eax
    mov    $0x2,%ebx
    call   func_55044
  jump_4fe21:
    cmpl   $0x0,data_c84d0
    je     jump_4ff1a
    mov    0x24da8(%esi),%edi
    cmp    $0xffffffff,%edi
    je     jump_4fe8f
    cmpl   $0x0,0x489e(%esi)
    jne    jump_4fe76
    mov    $data_f8638,%eax
    xor    %edx,%edx
    call   func_4af80
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   func_55634
    mov    $0xffffffff,%edx
    mov    %esi,%eax
    movl   $0xffffffff,0x24da8(%esi)
    call   func_52470
    jmp    jump_4ff1a
  jump_4fe76:
    movl   $0x0,0x489e(%esi)
    movl   $0xffffffff,0x48a2(%esi)
    jmp    jump_4ff1a
  jump_4fe8f:
    cmp    data_c84a4,%edi
    jne    jump_4fed8
    mov    data_c84f0,%ebx
    push   %ebx
    mov    data_c84ec,%ecx
    push   %ecx
    push   $data_c850c
    call   func_572eb
    mov    %eax,data_121ffc
    mov    0x21d92(%esi),%eax
    mov    0x39(%eax),%edi
    add    $0xc,%esp
    test   %edi,%edi
    je     jump_4ff1a
    mov    $0x3f1,%edx
    mov    0xa7(%eax),%edi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   *0x8(%edi)
    jmp    jump_4ff1a
  jump_4fed8:
    cmp    0x24da4(%esi),%edi
    jne    jump_4ff00
    mov    0x489e(%esi),%edx
    test   %edx,%edx
    jne    jump_4ff00
    mov    data_c84f0,%ecx
    mov    data_c84ec,%ebx
    push   %edx
    mov    %esi,%eax
    mov    $0xc,%edx
    jmp    jump_4ff15
  jump_4ff00:
    push   $0x0
    mov    $0x4,%edx
    mov    data_c84f0,%ecx
    mov    data_c84ec,%ebx
    mov    %esi,%eax
  jump_4ff15:
    call   func_51fac
  jump_4ff1a:
    mov    data_c84e0,%eax
    cmp    $0xffffffff,%eax
    jne    jump_4ff8b
    mov    0x48a6(%esi),%edx
    cmp    %eax,%edx
    jne    jump_4ff49
    push   $0x0
    mov    data_c84d4,%ebx
    push   %ebx
    xor    %ecx,%ecx
    xor    %eax,%edx
    push   $0x1
    mov    %esi,%eax
    mov    $0x2,%ebx
    call   func_55044
  jump_4ff49:
    cmpl   $0x0,data_c84d4
    je     jump_4ff8b
    cmpl   $0xffffffff,0x24da4(%esi)
    jne    jump_4ff71
    mov    $data_c84f8,%eax
    movl   $0x0,0x24da4(%esi)
    call   func_2be24
    jmp    jump_4ff8b
  jump_4ff71:
    push   $0x0
    mov    $0x5,%edx
    mov    data_c84f0,%ecx
    mov    data_c84ec,%ebx
    mov    %esi,%eax
    call   func_51fac
  jump_4ff8b:
    mov    0x44aa(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_4ffa1
    mov    %esi,%eax
    call   func_51244
    jmp    jump_4ff8b
  jump_4ffa1:
    cmpw   $0x0,0x475a(%esi)
    je     jump_4ffc9
    mov    0x4226(%esi),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_4ffc9
    cmpl   $0x0,0x489e(%esi)
    jne    jump_4ffc9
    mov    %esi,%eax
    call   func_50f38
  jump_4ffc9:
    cmpl   $0xffffffff,0x24d9c(%esi)
    jne    jump_4fff8
    mov    0x4758(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_4fff8
    cmpl   $0x0,0x489e(%esi)
    jne    jump_4fff8
    mov    $0x7,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_51f24
  jump_4fff8:
    cmpl   $0xffffffff,data_f885b
    jne    jump_5010b
    mov    data_f8863,%ecx
    test   %ecx,%ecx
    jne    jump_5010b
    cmpl   $0x0,data_f885f
    jne    jump_500d8
    mov    0x4226(%esi),%eax
    sar    $0x10,%eax
    cmp    $0x7,%eax
    je     jump_500d8
    cmp    $0xd,%eax
    je     jump_500d8
    cmp    $0x6,%eax
    je     jump_500d8
    mov    data_86a52,%eax
    mov    $0xffffffff,%esi
    sar    $0x10,%eax
    xor    %ebx,%ebx
    cmp    $0xffffffff,%eax
    je     jump_5007b
    mov    %eax,%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    cmpl   $0x0,data_f89ca(,%eax,4)
    je     jump_5007b
    mov    $0xffffffff,%ebx
    mov    data_86a54,%si
    mov    %ecx,data_86a58
  jump_5007b:
    movswl %si,%eax
    cmp    $0xffffffff,%eax
    jne    jump_500c4
    mov    data_86a52,%eax
    sar    $0x10,%eax
    cmp    $0xffffffff,%eax
    jne    jump_50094
    xor    %esi,%esi
    jmp    jump_500c4
  jump_50094:
    mov    data_122044,%eax
    mov    data_c84ec,%edx
    mov    $0x5,%ecx
    add    %edx,%eax
    xor    %edx,%edx
    div    %ecx
    mov    data_86a54,%ax
    mov    %edx,%esi
    cmp    %ax,%dx
    jne    jump_500c4
    movswl %ax,%edx
    inc    %edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    %edx,%esi
  jump_500c4:
    mov    $data_f8638,%eax
    movswl %si,%edx
    call   func_4acbc
    mov    %si,data_86a54
  jump_500d8:
    mov    data_86a58,%ebx
    cmp    $0xffffffff,%ebx
    je     jump_5010b
    movsbl %bl,%edx
    lea    0x1(%ebx),%eax
    mov    %eax,data_86a58
    mov    $data_f8638,%eax
    call   func_4b33c
    cmpl   $0x64,data_86a58
    jne    jump_5010b
    movl   $0xffffffff,data_86a58
  jump_5010b:
    mov    $data_f8638,%edx
    mov    $0xffffffff,%ebx
  jump_50115:
    mov    data_f885b,%edi
    cmp    %edi,%ebx
    jne    jump_50141
    mov    data_f885f,%ebp
    cmp    %ebp,%edi
    jne    jump_50141
    cmp    data_f8863,%ebp
    jne    jump_5013a
    mov    %edx,%eax
    call   func_4ae0c
    jmp    jump_50141
  jump_5013a:
    mov    %edx,%eax
    call   func_4aea4
  jump_50141:
    mov    data_122044,%esi
    sub    data_122020,%esi
    cmp    $0x3,%esi
    jb     jump_50115
    mov    data_122044,%eax
    mov    %eax,data_122020
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_50168:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %ebp
    mov    %eax,%ecx
    mov    data_c84c4,%ax
    cmp    $0x20,%ax
    jb     jump_503ff
    jbe    jump_501ac
    cmp    $0x26,%ax
    jb     jump_503e0
    jbe    jump_501ec
    cmp    $0x31,%ax
    jb     jump_503cb
    jbe    jump_50274
    cmp    $0x32,%ax
    je     jump_50266
    jmp    jump_502fd
  jump_501ac:
    cmpl   $0xffffffff,data_90ba0
    jne    jump_50466
    notl   data_122048
    jmp    jump_50466
  jump_501c4:
    mov    0x4226(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0x8,%eax
    je     jump_50466
    mov    $0xffffffff,%ebx
    mov    $0x2,%edx
    mov    %ecx,%eax
    call   func_52260
    jmp    jump_50466
  jump_501ec:
    mov    0x4226(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0x8,%eax
    je     jump_50466
    mov    $0xffffffff,%ebx
    mov    $0x4,%edx
    mov    %ecx,%eax
    call   func_52260
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_50217:
    xor    %ecx,%ecx
    mov    %ecx,data_8660c
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_50227:
    cmpl   $0xffffffff,data_90ba0
    jne    jump_50466
    notl   0x24da0(%ecx)
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_50242:
    cmpl   $0xffffffff,data_90ba0
    jne    jump_50466
    mov    %ecx,%eax
    mov    0x21d92(%ecx),%edx
    xor    %ebx,%ebx
    call   func_506bc
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_50266:
    notl   data_f8863
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_50274:
    notl   data_f884b
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_50282:
    mov    data_90ba0,%esi
    cmp    $0xffffffff,%esi
    jne    jump_50466
    cmp    0x24d98(%ecx),%esi
    jne    jump_502ab
    movl   $0x0,0x24d98(%ecx)
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_502ab:
    mov    %esi,0x24d98(%ecx)
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_502b9:
    lea    0x24db0(%ecx),%ebx
    mov    %ebx,%eax
    call   func_1b4d0
    mov    0x27c98(%ecx),%edx
    mov    0x27c94(%ecx),%eax
    call   func_312f8
    mov    %ebx,%eax
    call   func_1ace8
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_502e6:
    cmpl   $0x0,0x489e(%ecx)
    jne    jump_5031b
    mov    0x4226(%ecx),%eax
    sar    $0x10,%eax
    cmp    $0x11,%eax
    jne    jump_50307
  jump_502fd:
    mov    $0xffffffff,%eax
    jmp    jump_50468
  jump_50307:
    mov    $0xffffffff,%edx
    mov    %ecx,%eax
    call   func_52470
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_5031b:
    movl   $0x0,0x489e(%ecx)
    movl   $0x0,0x48a2(%ecx)
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_50337:
    cmpl   $0x0,0x48aa(%ecx)
    jne    jump_50466
    mov    data_90ba0,%ebp
    cmp    $0xffffffff,%ebp
    jne    jump_50466
    mov    0x48a6(%ecx),%eax
    test   %eax,%eax
    jne    jump_50380
    call   func_736c3
    mov    $0x1e,%edx
    mov    %ecx,%eax
    movl   $0x3f800000,0x24dac(%ecx)
    call   func_54ccc
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_50380:
    mov    %ebp,%edx
  jump_50382:
    mov    %ecx,%eax
    call   func_54cf8
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_50391:
    mov    0x48a6(%ecx),%edx
    test   %edx,%edx
    jne    jump_50466
    cmpl   $0xffffffff,data_90ba0
    jne    jump_50466
    cmpl   $0x0,0x48aa(%ecx)
    jne    jump_50382
    mov    $data_82cce,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_54d4c
    xor    %eax,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_503cb:
    cmp    $0x2d,%ax
    je     jump_50217
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_503e0:
    cmp    $0x21,%ax
    jbe    jump_50282
    cmp    $0x22,%ax
    je     jump_502b9
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_503ff:
    cmp    $0x12,%ax
    jb     jump_50441
    jbe    jump_50227
    cmp    $0x19,%ax
    jb     jump_5042c
    jbe    jump_50391
    cmp    $0x1f,%ax
    je     jump_501c4
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_5042c:
    cmp    $0x13,%ax
    je     jump_50337
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_50441:
    cmp    $0x1,%ax
    jb     jump_502fd
    jbe    jump_502e6
    cmp    $0x11,%ax
    je     jump_50242
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_50466:
    xor    %eax,%eax
  jump_50468:
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_50470:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x2c,%esp
    mov    %eax,-0x4(%ebp)
    cmpl   $0xffffffff,0x24d98(%eax)
    jne    jump_5051a
    mov    data_fa34c,%ebx
    inc    %ebx
    mov    %ebx,data_fa34c
    cmp    $0xa,%ebx
    jne    jump_504e4
    mov    data_122044,%eax
    mov    data_fa354,%esi
    xor    %edi,%edi
    mov    %eax,data_fa350
    mov    %eax,%ebx
    mov    %eax,data_fa354
    sub    %esi,%ebx
    mov    %edi,data_fa34c
    test   %ebx,%ebx
    jne    jump_504c7
    mov    $0x1,%ebx
  jump_504c7:
    mov    $0x3e8,%eax
    xor    %edx,%edx
    div    %ebx
    push   %ebx
    push   %eax
    push   $data_82cdb
    push   $data_86a3c
    call   func_720c9
    add    $0x10,%esp
  jump_504e4:
    push   $0x1e
    mov    $0x96,%ecx
    mov    $0xa,%ebx
    mov    $0x19,%edx
    mov    $data_fd3a2,%eax
    call   func_2aac0
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    mov    $data_86a3c,%ecx
    mov    $data_fd3a2,%eax
    push   $0x0
    xor    %ebx,%ebx
    xor    %edx,%edx
    call   func_2af88
  jump_5051a:
    cmpl   $0x0,data_122048
    je     jump_5057d
    mov    data_c84f0,%edx
    xor    %ebx,%ebx
    cmp    $0xf0,%edx
    jge    jump_50538
    mov    $0x1cc,%ebx
  jump_50538:
    mov    data_c84f0,%ecx
    push   %ecx
    mov    data_c84ec,%esi
    push   %esi
    push   $data_82ce8
    lea    -0x2c(%ebp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
    push   $0x0
    mov    $data_fd3aa,%edi
    push   $0xffffffff
    xor    %edx,%edx
    lea    -0x2c(%ebp),%ecx
    push   $0xffffffff
    mov    $data_c850c,%esi
    mov    $data_fd3a2,%eax
    push   $0x0
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
  jump_5057d:
    cmpl   $0x1,data_c84cc
    jne    jump_50596
    mov    -0x4(%ebp),%eax
    mov    0x3006(%eax),%eax
    call   func_611eb
    jmp    jump_505a4
  jump_50596:
    mov    -0x4(%ebp),%eax
    mov    0x3006(%eax),%eax
    call   func_56df8
  jump_505a4:
    mov    -0x4(%ebp),%eax
    mov    0x3006(%eax),%eax
    call   func_56adc
    cmpl   $0xffffffff,data_12204c
    jne    jump_505ed
    xor    %edx,%edx
    mov    $data_c84f8,%eax
    mov    data_122050,%dl
    call   func_2bcc4
    mov    data_122050,%edx
    inc    %edx
    mov    %edx,data_122050
    cmp    $0x40,%edx
    jle    jump_505ed
    xor    %ecx,%ecx
    mov    %ecx,data_122050
    mov    %ecx,data_12204c
  jump_505ed:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_505f8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    %eax,0x14(%esp)
    mov    %edx,%ebp
    mov    %ebx,%edi
    mov    %ecx,%esi
    mov    0x28(%esp),%eax
    mov    %edx,0x4(%esp)
    mov    %eax,0x10(%esp)
    mov    0x14(%esp),%eax
    mov    %ebx,0x8(%esp)
    mov    %ecx,0xc(%esp)
    mov    0x300a(%eax),%eax
    push   $0x0
    mov    %eax,0x4(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    call   func_59d90
    add    $0x8,%esp
    mov    %esi,%ecx
    mov    0x28(%esp),%edx
    mov    %edi,%ebx
    push   %edx
    mov    0x18(%esp),%eax
    mov    %ebp,%edx
    call   func_50658
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_50658:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%esi
    push   %esi
    push   %ecx
    mov    0x300a(%eax),%esi
    mov    %ebx,%ecx
    mov    0x3006(%eax),%eax
    mov    %edx,%ebx
    mov    %esi,%edx
    call   func_56b82
    cmp    $0xffffffff,%eax
    jne    jump_5068c
    mov    $0x4ab,%ebx
    mov    $data_82cf0,%edx
    xor    %eax,%eax
    call   func_25878
  jump_5068c:
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_50690:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    test   %edx,%edx
    jne    jump_506a4
    push   $0x1df
    mov    $0x27f,%ecx
    xor    %ebx,%ebx
    jmp    jump_506b1
  jump_506a4:
    mov    0x10(%edx),%ebx
    mov    0xc(%edx),%ecx
    push   %ebx
    mov    0x8(%edx),%ebx
    mov    0x4(%edx),%edx
  jump_506b1:
    call   func_50658
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_506bc:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x20,%esp
    mov    %eax,%ebp
    mov    %edx,0x1c(%esp)
    mov    %ebx,0x18(%esp)
    cmpl   $0x0,0x489e(%eax)
    je     jump_506e7
    mov    $0x4c1,%ebx
    mov    $data_82cfe,%edx
    xor    %eax,%eax
    call   func_25878
  jump_506e7:
    mov    0x24d9c(%ebp),%eax
    mov    data_90ba4,%ebx
    mov    %eax,0x14(%esp)
    movl   $0x0,0x24d9c(%ebp)
    test   %ebx,%ebx
    jne    jump_50726
    mov    $data_82d0c,%edx
    mov    %ebp,%eax
    call   func_5216c
    mov    0xa7(%eax),%ebx
    movl   $0x0,0xab(%eax)
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_50726:
    mov    0x3002(%ebp),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_50743
    push   $0x0
    mov    $0x6,%ebx
    mov    %ecx,%edx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    call   func_520f4
  jump_50743:
    mov    $0x20,%ebx
    mov    $0x1,%edx
    mov    $data_122024,%eax
    movl   $0xffffffff,0x3002(%ebp)
    call   func_72280
    xor    %ecx,%ecx
    push   $0xffffffff
    mov    $0xf,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_51fac
    cmpl   $0xffffffff,data_86a5c
    jne    jump_50788
    mov    0x1c(%esp),%eax
    add    $0x4,%eax
    call   func_4f5f8
  jump_50788:
    mov    0x1c(%esp),%edx
    mov    0x4226(%ebp),%ebx
    mov    %ebp,%eax
    sar    $0x10,%ebx
    mov    0x41(%edx),%edx
    call   func_525e4
    cmp    $0xffffffff,%eax
    je     jump_507b5
    mov    $0x4e3,%ebx
    mov    $data_82d19,%edx
    xor    %eax,%eax
    call   func_25878
  jump_507b5:
    mov    0x1c(%esp),%edi
    mov    0x6b(%edi),%di
    xor    %ecx,%ecx
    test   %di,%di
    jle    jump_50804
    jmp    jump_507cc
  jump_507c6:
    inc    %ecx
    cmp    %di,%cx
    jge    jump_50804
  jump_507cc:
    mov    0x1c(%esp),%edx
    mov    0x67(%edx),%edx
    movswl %cx,%eax
    mov    0x4226(%ebp),%ebx
    mov    (%edx,%eax,4),%edx
    sar    $0x10,%ebx
    mov    %ebp,%eax
    mov    0x41(%edx),%edx
    call   func_525e4
    cmp    $0xffffffff,%eax
    je     jump_507c6
    mov    $0x4e9,%ebx
    mov    $data_82d27,%edx
    xor    %eax,%eax
    call   func_25878
    jmp    jump_507c6
  jump_50804:
    mov    0x1c(%esp),%esi
    mov    $0xc8,%edx
    mov    0x1c(%esp),%eax
    mov    0xa7(%esi),%esi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   *0x8(%esi)
    mov    0x1c(%esp),%esi
    mov    $0x1,%edx
    mov    0x1c(%esp),%eax
    mov    0xa7(%esi),%esi
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   *0x8(%esi)
    mov    0x1c(%esp),%esi
    mov    %ebp,%eax
    mov    $0x2,%edx
    call   func_509dc
    xor    %ecx,%ecx
    mov    0xa7(%esi),%esi
    xor    %ebx,%ebx
    mov    0x1c(%esp),%eax
    call   *0x8(%esi)
    xor    %esi,%esi
    test   %di,%di
    jle    jump_5088a
  jump_50860:
    mov    0x1c(%esp),%edx
    mov    0x18(%esp),%ecx
    mov    0x67(%edx),%edx
    movswl %si,%eax
    mov    0x4226(%ebp),%ebx
    mov    (%edx,%eax,4),%edx
    sar    $0x10,%ebx
    mov    %ebp,%eax
    mov    0x41(%edx),%edx
    inc    %esi
    call   func_526d4
    cmp    %di,%si
    jl     jump_50860
  jump_5088a:
    mov    0x1c(%esp),%esi
    mov    %esp,%edi
    lea    0x4(%esi),%esi
    mov    0x1c(%esp),%edx
    mov    0x18(%esp),%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    %ebp,%eax
    mov    0x4226(%ebp),%ebx
    mov    0x41(%edx),%edx
    sar    $0x10,%ebx
    call   func_526d4
    mov    data_86a5c,%edi
    movl   $0xffffffff,0x3002(%ebp)
    cmp    $0xffffffff,%edi
    jne    jump_508cf
    mov    %esp,%eax
    call   func_4f6a0
  jump_508cf:
    push   $0xffffffff
    mov    $0xe,%edx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_51fac
    mov    %ebp,%eax
    xor    %edx,%edx
    call   func_50690
    cmpl   $0xffffffff,data_90ba4
    jne    jump_508fd
    mov    0x14(%esp),%eax
    mov    %eax,0x24d9c(%ebp)
  jump_508fd:
    mov    $0xffffffff,%edx
    mov    0x48a2(%ebp),%eax
    mov    %edx,data_86a5c
    add    $0x20,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_509dc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %edi
    mov    %eax,%ecx
    cmpl   $0x0,0x489e(%eax)
    je     jump_509fc
    mov    $0x573,%ebx
    mov    $data_82d35,%edx
    xor    %eax,%eax
    call   func_25878
  jump_509fc:
    movl   $0xffffffff,0x489e(%ecx)
    mov    data_8660c,%ebx
    movl   $0x0,0x48a2(%ecx)
    cmp    $0xffffffff,%ebx
    jne    jump_50a74
  jump_50a1b:
    mov    0x489e(%ecx),%edi
    cmp    $0xffffffff,%edi
    jne    jump_50a74
    cmp    data_fec06,%edi
    jne    jump_50a3a
    mov    $data_fa35c,%eax
    call   func_54f44
    jmp    jump_50a44
  jump_50a3a:
    mov    $data_c849c,%eax
    call   func_25c4c
  jump_50a44:
    mov    $data_fa35c,%eax
    call   func_4faa0
    mov    $data_fa35c,%eax
    call   func_50470
    cmpl   $0x0,data_fec06
    je     jump_50a6b
    mov    $data_fa35c,%eax
    call   func_54e18
  jump_50a6b:
    cmpl   $0xffffffff,data_8660c
    je     jump_50a1b
  jump_50a74:
    xor    %edx,%edx
    mov    %edx,data_c84dc
    mov    %edx,data_c84e0
    mov    %edx,data_c84a0
    pop    %edi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_50a90:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    %edx,%esi
    mov    $data_82d43,%ebx
    mov    $0xb3,%eax
    mov    $0x2,%edx
    call   func_73f9c
    test   %eax,%eax
    je     jump_50ab5
    call   func_2f0f8
  jump_50ab5:
    call   func_2593c
    mov    %eax,%edx
    mov    %eax,%ecx
    call   func_2c058
    movl   $0x0,0x3d(%edx)
    movl   $0x32,0xc(%edx)
    movl   $0x12c,0x14(%edx)
    mov    %esi,0xab(%edx)
    mov    0xc(%edx),%eax
    mov    %eax,0x8(%edx)
    mov    0x14(%edx),%eax
    mov    %eax,0x10(%edx)
    mov    0x300a(%ebp),%eax
    mov    $data_82d4a,%ebx
    mov    %eax,0x4(%edx)
    mov    $0xab,%eax
    mov    $0x2,%edx
    call   func_73f9c
    test   %eax,%eax
    je     jump_50b10
    call   func_2bf10
  jump_50b10:
    call   func_2593c
    mov    %eax,%edx
    call   func_2c058
    mov    $0x1e,%eax
    call   func_1ce70
    lea    0x20(%edx),%edi
    mov    %eax,%esi
    push   %edi
  jump_50b2c:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_50b44
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_50b2c
  jump_50b44:
    pop    %edi
    movl   $0x104,0xc(%edx)
    movl   $0x122,0x14(%edx)
    mov    0xc(%edx),%eax
    mov    %eax,0x8(%edx)
    mov    0x14(%edx),%eax
    mov    %eax,0x10(%edx)
    mov    0x300a(%ebp),%eax
    movl   $0xffffffff,0x3d(%edx)
    movw   $0xc9,0x45(%edx)
    mov    %eax,0x4(%edx)
    mov    0x41(%ecx),%eax
    mov    %eax,0x63(%edx)
    mov    %ecx,%eax
    mov    $0xffffffff,%ebx
    call   func_2c070
    mov    %ecx,%edx
    mov    %ebp,%eax
    call   func_506bc
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_50b98:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x30,%esp
    mov    %eax,0x24(%esp)
    mov    %edx,%esi
    mov    %ebx,0x1c(%esp)
    mov    %cx,0x2c(%esp)
    mov    $data_82d57,%edx
    mov    $data_fd3a2,%eax
    call   func_2ac74
    mov    %eax,0x20(%esp)
    mov    %eax,%edx
    shl    $0x2,%eax
    add    %edx,%eax
    mov    $0x9b,%edi
    add    $0x5,%eax
    mov    $data_82d59,%ebx
    mov    %eax,0x18(%esp)
    mov    $0xab,%eax
    mov    $0x2,%edx
    call   func_73f9c
    test   %eax,%eax
    je     jump_50bf0
    call   func_2bf10
  jump_50bf0:
    call   func_2593c
    mov    $0x13,%ebx
    mov    %eax,%ecx
    mov    %eax,%ebp
    call   func_2c058
    mov    %esi,%edx
    lea    0x20(%ecx),%eax
    call   func_72b40
    mov    $0x280,%edx
    sub    %edi,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    0x18(%esp),%ebx
    mov    $0x1e0,%edx
    mov    %eax,0x8(%ecx)
    add    %edi,%eax
    sub    %ebx,%edx
    mov    %eax,0x10(%ecx)
    mov    %edx,%eax
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    movb   $0x0,0x33(%ecx)
    movw   $0xffff,0x5b(%ecx)
    mov    %eax,0xc(%ecx)
    add    %ebx,%eax
    mov    %eax,0x14(%ecx)
    mov    0x24(%esp),%eax
    movw   $0x5,0x5d(%ecx)
    mov    0x300a(%eax),%eax
    mov    $0x2,%edx
    mov    %eax,0x4(%ecx)
    mov    $0xab,%eax
    mov    $data_82d62,%ebx
    call   func_73f9c
    test   %eax,%eax
    je     jump_50c7b
    call   func_2bf10
  jump_50c7b:
    call   func_2593c
    mov    %eax,%ebx
    mov    %eax,0x14(%esp)
    call   func_2c058
    mov    $0x1e,%eax
    call   func_1ce70
    lea    0x20(%ebx),%edi
    mov    %eax,%esi
    push   %edi
  jump_50c9b:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_50cb3
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_50c9b
  jump_50cb3:
    pop    %edi
    movw   $0xffff,0x5b(%ebx)
    mov    $0x1e,%eax
    movw   $0x2,0x5d(%ebx)
    call   func_1ce70
    mov    %eax,%edx
    mov    $data_fd3a2,%eax
    call   func_2abd4
    mov    0x10(%ebp),%edx
    sub    %eax,%edx
    lea    -0xa(%edx),%eax
    mov    %eax,0x8(%ebx)
    mov    0x10(%ebp),%eax
    sub    $0x3,%eax
    mov    %eax,0x10(%ebx)
    mov    0x20(%esp),%edi
    mov    0x14(%ebp),%eax
    sub    %edi,%eax
    sub    $0x5,%eax
    mov    %eax,0xc(%ebx)
    mov    0x14(%ebp),%eax
    sub    $0x2,%eax
    mov    %eax,0x14(%ebx)
    mov    0x24(%esp),%eax
    mov    0x300a(%eax),%eax
    movl   $0xffffffff,0x3d(%ebx)
    movl   $0xffffffff,0x5f(%ebx)
    movw   $0xc9,0x45(%ebx)
    mov    %eax,0x4(%ebx)
    mov    0x41(%ebp),%eax
    mov    %ebx,%edx
    mov    %eax,0x63(%ebx)
    mov    %ebp,%eax
    mov    $data_82d6f,%ebx
    call   func_2c070
    mov    $0xc1,%eax
    mov    $0x2,%edx
    call   func_73f9c
    test   %eax,%eax
    je     jump_50d4f
    call   func_2eb6c
  jump_50d4f:
    call   func_2593c
    mov    %eax,0x28(%esp)
    test   %eax,%eax
    jne    jump_50d6b
    mov    $0x5ec,%ebx
    mov    $data_82d77,%edx
    call   func_25878
  jump_50d6b:
    mov    0x28(%esp),%eax
    call   func_2c058
    mov    0x8(%ebp),%eax
    mov    0x28(%esp),%edx
    add    $0xf,%eax
    mov    %eax,0x8(%edx)
    mov    0x10(%ebp),%eax
    sub    $0xf,%eax
    mov    %eax,0x10(%edx)
    mov    0x20(%esp),%edx
    mov    0xc(%ebp),%eax
    add    %edx,%eax
    mov    0x28(%esp),%edx
    add    $0x8,%eax
    mov    0x20(%esp),%ebx
    mov    %eax,0xc(%edx)
    add    %ebx,%eax
    add    $0x8,%eax
    mov    %eax,0x14(%edx)
    mov    0x24(%esp),%eax
    mov    0x300a(%eax),%eax
    mov    %eax,0x4(%edx)
    mov    0x2a(%esp),%ebx
    mov    0x41(%ebp),%eax
    movw   $0x0,0x45(%edx)
    sar    $0x10,%ebx
    mov    %eax,0x63(%edx)
    mov    %edx,%eax
    mov    0x1c(%esp),%edx
    call   func_2f084
    mov    0x28(%esp),%edx
    mov    %ebp,%eax
    mov    %esp,%edi
    call   func_2c070
    lea    0x4(%ebp),%esi
    xor    %ecx,%ecx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    %ecx,data_86a5c
    mov    0x4(%esp),%esi
    mov    0xc(%esp),%edi
    mov    0x8(%esp),%eax
    mov    0x10(%esp),%edx
    sub    $0x8,%esi
    add    $0x8,%edi
    sub    $0x8,%eax
    add    $0x7,%edx
    mov    %esi,0x4(%esp)
    mov    %edi,0xc(%esp)
    mov    %eax,0x8(%esp)
    mov    %edx,0x10(%esp)
    mov    %esp,%eax
    mov    %esp,%edx
    call   func_4f5f8
    mov    0x24(%esp),%eax
    call   func_50690
    push   %ecx
    push   %ecx
    xor    %edx,%edx
    push   $0x1
    mov    $data_11f10c,%eax
    mov    data_efd8e,%dx
    call   func_1b084
    push   %eax
    lea    0x10(%esp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    mov    %ebp,%edx
    xor    %ebx,%ebx
    mov    0x24(%esp),%eax
    call   func_506bc
    mov    %esp,%eax
    mov    %esp,%edx
    call   func_4f6a0
    mov    0x24(%esp),%eax
    call   func_50690
    mov    0x14(%esp),%edx
    xor    %ebx,%ebx
    mov    0x24(%esp),%eax
    mov    0x41(%edx),%edx
    call   func_528f4
    mov    0x28(%esp),%edx
    mov    0x24(%esp),%eax
    xor    %ebx,%ebx
    mov    0x41(%edx),%edx
    call   func_528f4
    mov    0x24(%esp),%eax
    mov    0x41(%ebp),%edx
    xor    %ebx,%ebx
    call   func_528f4
    mov    0x1c(%esp),%eax
    add    $0x30,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_50eb0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %edx,%esi
    mov    %ebx,%edi
    cmpl   $0xffffffff,data_90ba4
    jne    jump_50ec6
    xor    %edx,%edx
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    ret
  jump_50ec6:
    mov    0x4758(%eax),%edx
    sar    $0x10,%edx
    cmp    $0x20,%edx
    jne    jump_50edb
    xor    %edx,%edx
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    ret
  jump_50edb:
    mov    %edx,%ebx
    shl    $0x2,%edx
    add    %ebx,%edx
    mov    %si,0x475e(%eax,%edx,2)
    mov    0x4758(%eax),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%edx
    add    %ebx,%edx
    mov    %edi,0x4760(%eax,%edx,2)
    mov    0x4758(%eax),%ebx
    sar    $0x10,%ebx
    lea    0x0(,%ebx,4),%edx
    add    %ebx,%edx
    mov    %ecx,0x4764(%eax,%edx,2)
    mov    0x475a(%eax),%bx
    inc    %ebx
    mov    $0xffffffff,%edx
    mov    %bx,0x475a(%eax)
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_50f38:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%esi
    cmpl   $0xffffffff,data_fa358
    je     jump_51201
    mov    0x4758(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_51201
    mov    0x4226(%esi),%eax
    sar    $0x10,%eax
    cmp    $0x1,%eax
    jne    jump_51201
    mov    $data_82d93,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_50f96
    mov    $0x630,%ebx
    mov    $data_82d9c,%edx
    call   func_25878
  jump_50f96:
    mov    0x475a(%esi),%eax
    sar    $0x10,%eax
    lea    0x0(,%eax,4),%ecx
    add    %eax,%ecx
    lea    0x475e(%esi),%edx
    add    %ecx,%ecx
    mov    %ebp,%eax
    add    %ecx,%edx
    mov    $0xffffffff,%ebx
    call   func_25f54
    mov    data_90ba4,%edi
    xor    %ecx,%ecx
    mov    %ebx,data_fa358
    mov    %ecx,0x8(%esp)
    test   %edi,%edi
    jne    jump_50fe3
    mov    %ebp,%edx
    mov    %esi,%eax
    xor    %ebx,%ebx
    call   func_506bc
    mov    %eax,0x8(%esp)
  jump_50fe3:
    mov    0x8(%esp),%eax
    xor    %ebp,%ebp
    xor    %edi,%edi
    mov    %ebp,data_fa358
    test   %eax,%eax
    jne    jump_5110c
    jmp    jump_511bf
  jump_50ffe:
    mov    $0x14,%edi
    jmp    jump_511bf
  jump_51008:
    mov    $0x11,%edi
    mov    %eax,data_c3508
    jmp    jump_511bf
  jump_51017:
    mov    $0x11,%edi
    mov    %edx,data_c3508
    jmp    jump_511bf
  jump_51027:
    cmpl   $0x7,0xc(%esp)
    jne    jump_51045
    mov    0xa(%esp),%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    sar    $0x10,%edx
    call   func_51f24
    jmp    jump_511bf
  jump_51045:
    movl   $0xffffffff,0x24d9c(%esi)
    jmp    jump_511bf
  jump_51054:
    mov    0xc(%esp),%al
    mov    $0xd,%edi
    mov    %al,data_86775
    jmp    jump_511bf
  jump_51067:
    mov    0x58(%eax),%dl
    mov    %eax,%ebp
    cmp    $0x4,%dl
    je     jump_51082
    mov    $0x69d,%ebx
    mov    $data_82daa,%edx
    xor    %eax,%eax
    call   func_25878
  jump_51082:
    mov    0xc(%esp),%eax
    mov    0x59(%ebp),%ebp
    mov    %eax,(%esp)
    cmp    $0x4,%ecx
    je     jump_51096
    cmp    $0x8,%ecx
    jne    jump_5109d
  jump_51096:
    cmpl   $0x2,0x8(%esp)
    jne    jump_510ad
  jump_5109d:
    mov    $0x10,%edi
    mov    %ebp,data_c3504
    jmp    jump_511bf
  jump_510ad:
    mov    (%esp),%eax
    mov    %eax,%ecx
    shl    $0x5,%ecx
    sub    %eax,%ecx
    shl    $0x3,%ecx
    mov    $0x2,%edx
    sub    %eax,%ecx
    mov    %ebp,%ebx
    add    %ecx,%ecx
    mov    $data_92e16,%eax
    mov    %ecx,0x4(%esp)
    add    %ecx,%eax
    xor    %ecx,%ecx
    mov    $0xd,%edi
    call   func_4119c
    test   %eax,%eax
    je     jump_510f3
    mov    0x4(%esp),%eax
    movb   $0x1,data_92fff(%eax)
    mov    %ebp,data_93000(%eax)
    jmp    jump_510ff
  jump_510f3:
    mov    0x4(%esp),%eax
    xor    %dh,%dh
    mov    %dh,data_92fff(%eax)
  jump_510ff:
    mov    (%esp),%al
    mov    %al,data_86775
    jmp    jump_511bf
  jump_5110c:
    mov    0x475a(%esi),%eax
    sar    $0x10,%eax
    lea    0x0(,%eax,4),%ecx
    add    %eax,%ecx
    add    %ecx,%ecx
    lea    (%esi,%ecx,1),%ebp
    mov    0x475c(%ebp),%ecx
    mov    0x4760(%ebp),%eax
    mov    0x4764(%ebp),%edx
    sar    $0x10,%ecx
    mov    %edx,0xc(%esp)
    cmp    $0x9,%ecx
    jb     jump_51197
    jbe    jump_51067
    cmp    $0x14,%ecx
    jb     jump_51167
    jbe    jump_51067
    cmp    $0x17,%ecx
    jb     jump_51162
    jbe    jump_51054
    cmp    $0x19,%ecx
    jmp    jump_511b9
  jump_51162:
    cmp    $0x16,%ecx
    jmp    jump_511b9
  jump_51167:
    cmp    $0x10,%ecx
    jb     jump_5118c
    cmp    $0x12,%ecx
    jbe    jump_51017
    cmpl   $0x1,0x8(%esp)
    jne    jump_51027
    mov    $0x10,%edi
    mov    %eax,data_c3504
    jmp    jump_511bf
  jump_5118c:
    cmp    $0xf,%ecx
    je     jump_51008
    jmp    jump_511bf
  jump_51197:
    cmp    $0x3,%ecx
    jae    jump_51067
    cmp    $0x1,%ecx
    jb     jump_511b7
    jbe    jump_51008
    mov    $0xd,%edi
    mov    %al,data_86775
    jmp    jump_511bf
  jump_511b7:
    test   %ecx,%ecx
  jump_511b9:
    je     jump_50ffe
  jump_511bf:
    mov    0x475c(%esi),%dx
    inc    %edx
    mov    0x475a(%esi),%bx
    mov    %dx,0x475c(%esi)
    cmp    %bx,%dx
    jne    jump_511ec
    movw   $0x0,0x475c(%esi)
    movw   $0x0,0x475a(%esi)
  jump_511ec:
    movswl %di,%ebx
    test   %ebx,%ebx
    je     jump_51201
    mov    $0x1,%ecx
    mov    %esi,%eax
    mov    %ecx,%edx
    call   func_51f24
  jump_51201:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_5120c:
    .long   func_5144b
    .long   func_514b2
    .long   func_51500
    .long   func_51529
    .long   func_51614

vtable_51220:
    .long   func_51797
    .long   func_512de
    .long   func_5130e
    .long   func_512fd
    .long   func_5141b
    .long   func_5175f
    .long   func_51774
    .long   func_5131b
    .long   func_513e3


/*----------------------------------------------------------------*/
func_51244:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x524,%esp
    mov    %eax,%ebp
    lea    0x422c(%eax),%esi
    mov    $0x140,%ecx
    lea    0x436c(%eax),%edi
    xor    %edx,%edx
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    mov    0x44ac(%ebp),%ax
    mov    %dx,0x520(%esp)
    mov    %eax,0x51c(%esp)
    movw   $0x0,0x44ac(%ebp)
    test   %ax,%ax
    jle    jump_517b7
  jump_5129d:
    mov    0x51e(%esp),%eax
    sar    $0x10,%eax
    imul   $0xa,%eax,%eax
    mov    0x436c(%eax,%ebp,1),%dx
    mov    0x436e(%eax,%ebp,1),%ecx
    mov    0x4372(%eax,%ebp,1),%eax
    mov    %eax,0x514(%esp)
    cmp    $0x8,%dx
    ja     jump_51786
    xor    %eax,%eax
    mov    %dx,%ax
    jmp    *%cs:vtable_51220(,%eax,4)


/*----------------------------------------------------------------*/
func_512de:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x514(%esp)
    sete   %al
    xor    %ebx,%ebx
    mov    %al,%bl
    movswl %cx,%edx
    dec    %ebx
    mov    %ebp,%eax
    call   func_52260
    jmp    func_51797


/*----------------------------------------------------------------*/
func_512fd:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%edx
    mov    %ebp,%eax
    call   func_52470
    jmp    func_51797


/*----------------------------------------------------------------*/
func_5130e:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    %edx,data_8660c
    jmp    func_51797


/*----------------------------------------------------------------*/
func_5131b:
/*----------------------------------------------------------------*/
    mov    $data_92e10,%eax
    call   func_20220
    mov    %eax,%ebx
    test   %eax,%eax
    je     jump_51351
    mov    0x24d9c(%ebp),%edi
    mov    $0x7,%ecx
    cmp    $0xffffffff,%edi
    jne    jump_51340
    mov    $0x8,%ecx
  jump_51340:
    mov    $0x13,%edx
    mov    %ebp,%eax
    call   func_50eb0
    jmp    func_51797
  jump_51351:
    mov    $data_92e10,%eax
    call   func_20374
    cmpl   $0xffffffff,0x24da0(%ebp)
    jne    jump_513c5
    mov    data_93b98,%di
    xor    %esi,%esi
    test   %di,%di
    jle    jump_513c5
    jmp    jump_51380
  jump_51374:
    mov    data_93b98,%ax
    inc    %esi
    cmp    %ax,%si
    jge    jump_513c5
  jump_51380:
    xor    %eax,%eax
    movswl %si,%ecx
    mov    data_f458e,%al
    cmp    %eax,%ecx
    je     jump_51374
    imul   $0x1ee,%eax,%eax
    mov    $0xffffffff,%ebx
    mov    %ecx,%edx
    add    $data_92e16,%eax
    call   func_41974
    xor    %eax,%eax
    mov    data_f458e,%al
    imul   $0x1ee,%eax,%eax
    mov    $0xffffffff,%ebx
    mov    %ecx,%edx
    add    $data_92e16,%eax
    call   func_417a4
    jmp    jump_51374
  jump_513c5:
    push   $0x0
    mov    $0xd,%edx
    mov    %ebp,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_51fac
    mov    %ebp,%eax
    call   func_50470
    jmp    func_51797


/*----------------------------------------------------------------*/
func_513e3:
/*----------------------------------------------------------------*/
    mov    $data_92e10,%eax
    call   func_20220
    test   %eax,%eax
    je     jump_51410
    cmpl   $0x0,data_90ba4
    jne    jump_51410
    movswl %dx,%ecx
    mov    %eax,%ebx
    mov    $0x13,%edx
    mov    %ebp,%eax
    call   func_50eb0
    jmp    func_51797
  jump_51410:
    notl   0x24d9c(%ebp)
    jmp    func_51797


/*----------------------------------------------------------------*/
func_5141b:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x48a6(%ebp)
    jne    func_51797
    cmpl   $0x0,0x48aa(%ebp)
    jne    func_51797
    mov    $0xffffffff,%ebx
    mov    $data_82db8,%edx
    mov    %ebp,%eax
    call   func_54d4c
    jmp    func_51797


/*----------------------------------------------------------------*/
func_5144b:
/*----------------------------------------------------------------*/
    mov    $data_82dc5,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,0x518(%esp)
    call   func_32f64
  jump_51465:
    cmpl   $0x0,0x489e(%ebp)
    jne    jump_5147e
    mov    0x518(%esp),%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_506bc
  jump_5147e:
    cmpl   $0x1,0x514(%esp)
    jne    func_51797
    mov    $data_82e9a,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_5216c
    xor    %ecx,%ecx
    push   $0x0
    mov    $0xd,%ebx
    mov    0x41(%eax),%edx
    mov    %ebp,%eax
    call   func_520f4
    jmp    func_51797


/*----------------------------------------------------------------*/
func_514b2:
/*----------------------------------------------------------------*/
    mov    $data_82dd0,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,%ecx
    mov    %eax,0x518(%esp)
    mov    0x4226(%ebp),%eax
    sar    $0x10,%eax
    push   %eax
    push   $data_82ddb
    lea    0x4b8(%esp),%eax
    push   %eax
    lea    0x4bc(%esp),%ebx
    call   func_720c9
    add    $0xc,%esp
    mov    $data_82de5,%edx
    mov    %ecx,%eax
    call   func_2f390
    jmp    jump_51465


/*----------------------------------------------------------------*/
func_51500:
/*----------------------------------------------------------------*/
    mov    $data_82dee,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    $data_82df9,%ebx
    mov    $data_82e01,%edx
    mov    %eax,0x518(%esp)
    call   func_2f390
    jmp    jump_51465


/*----------------------------------------------------------------*/
func_51529:
/*----------------------------------------------------------------*/
    push   %ecx
    push   $data_82e0a
    lea    0x4d4(%esp),%eax
    push   %eax
    mov    $data_82e14,%edx
    call   func_720c9
    add    $0xc,%esp
    xor    %ebx,%ebx
    mov    %ebp,%eax
    call   func_5216c
    lea    0x4cc(%esp),%ebx
    mov    $data_82e1f,%edx
    mov    %eax,%esi
    mov    %eax,0x518(%esp)
    call   func_2f390
    mov    %esi,%eax
    add    $0xc95,%eax
    add    $0xcb0,%esi
    mov    (%eax),%bl
    mov    %eax,0x510(%esp)
    mov    %esi,0x504(%esp)
    cmp    $0x1,%bl
    je     jump_5159a
    mov    $0x779,%ebx
    mov    $data_82e2b,%edx
    xor    %eax,%eax
    call   func_25878
  jump_5159a:
    mov    0x504(%esp),%eax
    cmpb   $0x0,(%eax)
    je     jump_515b7
    mov    $0x77a,%ebx
    mov    $data_82e39,%edx
    xor    %eax,%eax
    call   func_25878
  jump_515b7:
    mov    0x510(%esp),%esi
    mov    %esp,%edi
    mov    0x5(%esi),%esi
    push   %edi
  jump_515c4:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_515dc
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_515c4
  jump_515dc:
    pop    %edi
    imul   $0x6a,%ecx,%eax
    add    $data_f650c,%eax
    push   %eax
    lea    0x4(%esp),%eax
    push   %eax
    mov    0x518(%esp),%eax
    mov    0x5(%eax),%ebx
    push   %ebx
    call   func_720c9
    add    $0xc,%esp
    mov    0x504(%esp),%eax
    movw   $0x1c,0x1(%eax)
    mov    %cx,0x3(%eax)
    jmp    jump_51465


/*----------------------------------------------------------------*/
func_51614:
/*----------------------------------------------------------------*/
    push   %ecx
    push   $data_82e47
    lea    0x4f0(%esp),%eax
    push   %eax
    mov    $data_82e52,%edx
    call   func_720c9
    add    $0xc,%esp
    xor    %ebx,%ebx
    mov    %ebp,%eax
    call   func_5216c
    lea    0x4e8(%esp),%ebx
    mov    $data_82e5d,%edx
    mov    %eax,%esi
    mov    %eax,0x518(%esp)
    call   func_2f390
    mov    %esi,%eax
    add    $0xc95,%eax
    add    $0xcb0,%esi
    mov    (%eax),%dl
    mov    %eax,0x50c(%esp)
    mov    %esi,0x508(%esp)
    cmp    $0x1,%dl
    je     jump_51685
    mov    $0x794,%ebx
    mov    $data_82e6a,%edx
    xor    %eax,%eax
    call   func_25878
  jump_51685:
    mov    0x508(%esp),%eax
    cmpb   $0x0,(%eax)
    je     jump_516a2
    mov    $0x795,%ebx
    mov    $data_82e78,%edx
    xor    %eax,%eax
    call   func_25878
  jump_516a2:
    mov    0x50c(%esp),%esi
    lea    0x258(%esp),%edi
    mov    0x5(%esi),%esi
    push   %edi
  jump_516b4:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_516cc
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_516b4
  jump_516cc:
    pop    %edi
    imul   $0x28,%ecx,%eax
    add    $data_f3e40,%eax
    add    $0xa,%eax
    push   %eax
    lea    0x25c(%esp),%eax
    push   %eax
    mov    0x514(%esp),%eax
    mov    0x5(%eax),%edx
    push   %edx
    call   func_720c9
    add    $0xc,%esp
    cmp    $0x17,%ecx
    je     jump_5170f
    mov    0x508(%esp),%eax
    movw   $0x1e,0x1(%eax)
    mov    %cx,0x3(%eax)
    jmp    jump_51465
  jump_5170f:
    xor    %ah,%ah
    mov    0x508(%esp),%edx
    mov    data_f458e,%al
    movw   $0x0,0x3(%edx)
    add    $0xe,%eax
    mov    %ax,0x1(%edx)
    jmp    jump_51465
  jump_51731:
    mov    $data_82e86,%edx
    mov    %ebp,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,0x518(%esp)
    test   %ecx,%ecx
    je     jump_51465
    mov    $data_82e91,%edx
    mov    %ecx,%ebx
    call   func_2f390
    jmp    jump_51465


/*----------------------------------------------------------------*/
func_5175f:
/*----------------------------------------------------------------*/
    mov    0x514(%esp),%eax
    dec    %eax
    cmp    $0x4,%eax
    ja     jump_51731
    jmp    *%cs:vtable_5120c(,%eax,4)


/*----------------------------------------------------------------*/
func_51774:
/*----------------------------------------------------------------*/
    movl   $0x0,0x489e(%ebp)
    mov    %ecx,0x48a2(%ebp)
    jmp    func_51797
  jump_51786:
    mov    $0x7cc,%ebx
    mov    $data_82ea4,%edx
    xor    %eax,%eax
    call   func_25888


/*----------------------------------------------------------------*/
func_51797:
/*----------------------------------------------------------------*/
    mov    0x520(%esp),%ecx
    inc    %ecx
    mov    0x51c(%esp),%esi
    mov    %cx,0x520(%esp)
    cmp    %si,%cx
    jl     jump_5129d
  jump_517b7:
    add    $0x524,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_517c4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    0x18(%esp),%ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %bx,(%esp)
    mov    0x460c(%eax),%edx
    sar    $0x10,%edx
    cmp    $0x10,%edx
    jne    jump_517f5
    mov    $0x7e2,%ebx
    mov    $data_82eb2,%edx
    xor    %eax,%eax
    call   func_25878
  jump_517f5:
    cmpl   $0xffffffff,0x48a6(%esi)
    je     jump_51807
    cmpl   $0xffffffff,0x48aa(%esi)
    jne    jump_51809
  jump_51807:
    xor    %ebp,%ebp
  jump_51809:
    xor    %eax,%eax
    jmp    jump_5180e
  jump_5180d:
    inc    %eax
  jump_5180e:
    movswl %ax,%edx
    cmp    $0x10,%edx
    jge    jump_5185e
    imul   $0x16,%edx,%edx
    add    %esi,%edx
    cmpl   $0x0,0x44ae(%edx)
    jne    jump_5180d
    mov    %edi,0x44ae(%edx)
    mov    (%esp),%eax
    mov    %ecx,0x44b4(%edx)
    mov    %ax,0x44b2(%edx)
    mov    0x14(%esp),%eax
    mov    %eax,0x44b8(%edx)
    mov    data_122044,%eax
    mov    %ebp,0x44bc(%edx)
    add    %ebp,%eax
    mov    %eax,0x44c0(%edx)
    incw   0x460e(%esi)
  jump_5185e:
    push   $0x0
    mov    0x18(%esp),%ebp
    push   %ebp
    mov    $0x4,%ebx
    mov    %edi,%edx
    push   %ecx
    mov    0xa(%esp),%ecx
    mov    %esi,%eax
    sar    $0x10,%ecx
    call   func_55044
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_51884:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%edi
    mov    %ebx,%ecx
    xor    %edx,%edx
    jmp    jump_51890
  jump_5188f:
    inc    %edx
  jump_51890:
    movswl %dx,%ebx
    cmp    $0x10,%ebx
    jge    jump_518d0
    imul   $0x16,%ebx,%ebx
    add    %eax,%ebx
    cmp    0x44ae(%ebx),%edi
    jne    jump_5188f
    movswl %cx,%esi
    cmp    $0xffffffff,%esi
    je     jump_518b6
    cmp    0x44b2(%ebx),%cx
    jne    jump_5188f
  jump_518b6:
    movswl %dx,%ebx
    imul   $0x16,%ebx,%ebx
    movl   $0x0,0x44ae(%ebx,%eax,1)
    decw   0x460e(%eax)
    jmp    jump_5188f
  jump_518d0:
    push   $0x0
    push   $0x0
    mov    $0x5,%ebx
    push   $0x0
    movswl %cx,%ecx
    mov    %edi,%edx
    call   func_55044
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_518ec:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    xor    %eax,%eax
    jmp    jump_518f7
  jump_518f6:
    inc    %eax
  jump_518f7:
    movswl %ax,%edx
    cmp    $0x10,%edx
    jge    jump_5191e
    imul   $0x16,%edx,%edx
    add    %ecx,%edx
    cmp    0x44ae(%edx),%esi
    jne    jump_518f6
    cmp    0x44b2(%edx),%bx
    jne    jump_518f6
    mov    0x44bc(%edx),%eax
    pop    %esi
    pop    %ecx
    ret
  jump_5191e:
    mov    $0xffff,%eax
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_51928:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ecx,%ebp
    xor    %edx,%edx
    jmp    jump_51936
  jump_51935:
    inc    %edx
  jump_51936:
    movswl %dx,%eax
    cmp    $0x10,%eax
    jge    jump_51963
    imul   $0x16,%eax,%eax
    add    %esi,%eax
    cmp    0x44ae(%eax),%edi
    jne    jump_51935
    cmp    0x44b2(%eax),%bx
    jne    jump_51935
    mov    %ebp,0x44bc(%eax)
    mov    $0xffffffff,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_51963:
    xor    %eax,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_51a58:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    %eax,%ebp
    add    $0x44ae,%eax
    xor    %edx,%edx
    mov    0x160(%eax),%di
    mov    %dx,0x8(%esp)
    mov    %eax,0x4(%esp)
    jmp    jump_51a94
  jump_51a7c:
    mov    %edx,(%esp)
    mov    0x6(%esi),%eax
    mov    0xa(%esi),%edx
    call   *(%esp)
  jump_51a88:
    mov    0xe(%esi),%eax
    add    %eax,0x12(%esi)
  jump_51a8e:
    dec    %edi
  jump_51a8f:
    incw   0x8(%esp)
  jump_51a94:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    jge    jump_51ae0
    movswl %di,%edx
    test   %edx,%edx
    jle    jump_51ae0
    imul   $0x16,%eax,%eax
    mov    0x4(%esp),%esi
    add    %eax,%esi
    mov    (%esi),%edx
    test   %edx,%edx
    je     jump_51a8f
    mov    data_122044,%ebx
    cmp    0x12(%esi),%ebx
    jb     jump_51a8e
    mov    0x2(%esi),%eax
    sar    $0x10,%eax
    cmp    $0x29a,%eax
    je     jump_51a7c
    mov    0xa(%esi),%ecx
    mov    %eax,%ebx
    push   %ecx
    mov    %ebp,%eax
    mov    0x6(%esi),%ecx
    call   func_520f4
    jmp    jump_51a88
  jump_51ae0:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_51aec:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    mov    0x472e(%eax),%edx
    sar    $0x10,%edx
    cmp    $0x10,%edx
    jne    jump_51b14
    mov    $0x8bb,%ebx
    mov    $data_82ece,%edx
    xor    %eax,%eax
    call   func_25878
  jump_51b14:
    xor    %eax,%eax
    jmp    jump_51b19
  jump_51b18:
    inc    %eax
  jump_51b19:
    movswl %ax,%edx
    cmp    $0x10,%edx
    jge    jump_51b5d
    imul   $0x12,%edx,%edx
    add    %esi,%edx
    cmpl   $0x0,0x4610(%edx)
    jne    jump_51b18
    mov    %edi,0x4610(%edx)
    mov    %ebp,0x4614(%edx)
    mov    0x10(%esp),%eax
    mov    %cx,0x4618(%edx)
    mov    %eax,0x461a(%edx)
    mov    0x14(%esp),%eax
    mov    %eax,0x461e(%edx)
    incw   0x4730(%esi)
  jump_51b5d:
    mov    0x10(%esp),%eax
    push   %ebp
    mov    0x18(%esp),%ebp
    mov    $0x6,%ebx
    push   %ebp
    movswl %cx,%ecx
    push   %eax
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_55044
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_51b80:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%edi
    mov    %ebx,%ecx
    xor    %edx,%edx
    jmp    jump_51b8c
  jump_51b8b:
    inc    %edx
  jump_51b8c:
    movswl %dx,%ebx
    cmp    $0x10,%ebx
    jge    jump_51bcc
    imul   $0x12,%ebx,%ebx
    add    %eax,%ebx
    cmp    0x4610(%ebx),%edi
    jne    jump_51b8b
    movswl %cx,%esi
    cmp    $0xffffffff,%esi
    je     jump_51bb2
    cmp    0x4618(%ebx),%cx
    jne    jump_51b8b
  jump_51bb2:
    movswl %dx,%ebx
    imul   $0x12,%ebx,%ebx
    movl   $0x0,0x4610(%ebx,%eax,1)
    decw   0x4730(%eax)
    jmp    jump_51b8b
  jump_51bcc:
    push   $0x0
    push   $0x0
    mov    $0x7,%ebx
    push   $0x0
    movswl %cx,%ecx
    mov    %edi,%edx
    call   func_55044
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_51be8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%esi
    mov    data_c84dc,%ecx
    mov    0x4730(%eax),%ax
    xor    %edx,%edx
    mov    %ax,0xc(%esp)
    mov    %edx,0x4(%esp)
    mov    %edx,(%esp)
    cmp    $0xffffffff,%ecx
    jne    jump_51c1b
    movl   $0x1,0x4(%esp)
  jump_51c1b:
    cmpl   $0xffffffff,data_c84e0
    jne    jump_51c29
    orb    $0x2,0x4(%esp)
  jump_51c29:
    cmpl   $0xffffffff,data_c84e8
    jne    jump_51c36
    orb    $0x4,(%esp)
  jump_51c36:
    xor    %edx,%edx
    mov    %dx,0x8(%esp)
    jmp    jump_51c44
  jump_51c3f:
    incw   0x8(%esp)
  jump_51c44:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    jge    jump_51201
    mov    0xa(%esp),%ebx
    sar    $0x10,%ebx
    test   %ebx,%ebx
    jle    jump_51201
    imul   $0x12,%eax,%eax
    add    %esi,%eax
    mov    0x4610(%eax),%edi
    test   %edi,%edi
    je     jump_51c3f
    mov    0x4(%esp),%edx
    test   %edx,0x4614(%eax)
    je     jump_51c9d
    mov    0x461e(%eax),%ebx
    mov    %edi,%edx
    push   %ebx
    mov    0x4616(%eax),%ebx
    mov    0x461a(%eax),%ecx
    sar    $0x10,%ebx
    mov    %esi,%eax
    call   func_520f4
  jump_51c9d:
    mov    0x6(%esp),%eax
    sar    $0x10,%eax
    imul   $0x12,%eax,%eax
    add    %esi,%eax
    mov    (%esp),%ecx
    test   %ecx,0x4614(%eax)
    je     jump_51cd3
    mov    data_c84f0,%ebp
    mov    data_c84ec,%ecx
    mov    %edi,%edx
    mov    0x4616(%eax),%ebx
    push   %ebp
    sar    $0x10,%ebx
    mov    %esi,%eax
    call   func_520f4
  jump_51cd3:
    decw   0xc(%esp)
    jmp    jump_51c3f


/*----------------------------------------------------------------*/
func_51ce0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%esi
    mov    data_c84ec,%edi
    mov    0x3002(%eax),%edx
    mov    data_c84f0,%ebp
    cmp    $0xffffffff,%edx
    je     jump_51e29
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    0x4(%esi,%eax,4),%ecx
    lea    0x4(%ecx),%eax
    cmp    0xc(%eax),%edi
    jg     jump_51df4
    cmp    0x4(%eax),%edi
    jl     jump_51df4
    cmp    0x10(%eax),%ebp
    jg     jump_51df4
    cmp    0x8(%eax),%ebp
    jl     jump_51df4
    mov    0x69(%ecx),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    je     jump_51f17
    mov    0x6b(%ecx),%bx
    xor    %edx,%edx
    test   %bx,%bx
    jg     jump_51d64
    jmp    jump_51f17
  jump_51d58:
    inc    %edx
    cmp    0x6b(%ecx),%dx
    jl     jump_51d6a
    jmp    jump_51f17
  jump_51d64:
    mov    0x67(%ecx),%eax
    mov    %eax,(%esp)
  jump_51d6a:
    movswl %dx,%eax
    mov    (%esp),%ebx
    shl    $0x2,%eax
    add    %ebx,%eax
    mov    (%eax),%eax
    mov    0x35(%eax),%ebx
    mov    %eax,0xc(%esp)
    test   %ebx,%ebx
    je     jump_51d58
    mov    0x10(%eax),%ebx
    add    $0x4,%eax
    cmp    %ebx,%edi
    jg     jump_51d58
    cmp    0x4(%eax),%edi
    jl     jump_51d58
    cmp    0x10(%eax),%ebp
    jg     jump_51d58
    cmp    0x8(%eax),%ebp
    jl     jump_51d58
    mov    $0x8,%ebx
    push   %ebp
    mov    %edi,%ecx
    mov    %esi,%eax
    mov    0x3002(%esi),%edx
    call   func_520f4
    push   $0x0
    mov    $0x6,%ebx
    mov    %esi,%eax
    mov    0x3002(%esi),%edx
    xor    %ecx,%ecx
    call   func_520f4
    push   $0x0
    mov    0x10(%esp),%edx
    mov    $0x7,%ebx
    mov    %esi,%eax
    xor    %ecx,%ecx
    mov    0x41(%edx),%edx
    call   func_520f4
    mov    0xc(%esp),%eax
    mov    0x41(%eax),%eax
    mov    %eax,0x3002(%esi)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_51df4:
    mov    $0x8,%ebx
    push   %ebp
    mov    %edi,%ecx
    mov    %esi,%eax
    mov    0x3002(%esi),%edx
    call   func_520f4
    push   $0x0
    mov    $0x6,%ebx
    mov    %esi,%eax
    mov    0x3002(%esi),%edx
    xor    %ecx,%ecx
    call   func_520f4
    movl   $0xffffffff,0x3002(%esi)
  jump_51e29:
    mov    0x4226(%esi),%edx
    sar    $0x10,%edx
    test   %edx,%edx
    jl     jump_51f17
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    $0x1f,%ecx
    xor    %ebx,%ebx
    mov    0x3068(%esi,%eax,2),%ax
    mov    %ebx,0x4(%esp)
    mov    %ax,0x10(%esp)
  jump_51e60:
    mov    0xe(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_51ef4
    cmpl   $0x0,0x4(%esp)
    jne    jump_51ef4
    movswl %cx,%eax
    test   %eax,%eax
    jge    jump_51e92
    mov    $0x987,%ebx
    mov    $data_82edc,%edx
    xor    %eax,%eax
    call   func_25878
  jump_51e92:
    mov    0x4226(%esi),%eax
    sar    $0x10,%eax
    imul   $0x8e,%eax,%eax
    lea    (%esi,%eax,1),%edx
    movswl %cx,%eax
    mov    0x306a(%edx,%eax,4),%eax
    mov    %eax,0x8(%esp)
    test   %eax,%eax
    je     jump_51eee
    imul   $0xc,%eax,%eax
    mov    0x4(%esi,%eax,1),%edx
    cmpl   $0xffffffff,0xa3(%edx)
    jne    jump_51ee9
    lea    0x4(%edx),%eax
    cmp    0xc(%eax),%edi
    jg     jump_51ee9
    cmp    0x4(%eax),%edi
    jl     jump_51ee9
    cmp    0x10(%eax),%ebp
    jg     jump_51ee9
    cmp    0x8(%eax),%ebp
    jl     jump_51ee9
    mov    0x35(%edx),%eax
    cmp    $0xffffffff,%eax
    jne    jump_51ee9
    mov    %eax,0x4(%esp)
  jump_51ee9:
    decw   0x10(%esp)
  jump_51eee:
    dec    %ecx
    jmp    jump_51e60
  jump_51ef4:
    cmpl   $0xffffffff,0x4(%esp)
    jne    jump_51f17
    mov    0x8(%esp),%eax
    push   $0x0
    mov    $0x7,%ebx
    xor    %ecx,%ecx
    mov    %eax,%edx
    mov    %eax,0x3002(%esi)
    mov    %esi,%eax
    call   func_520f4
  jump_51f17:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_51f24:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,(%esp)
    mov    %ebx,%edi
    mov    0x44aa(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x20,%eax
    jne    jump_51f4f
    mov    $0x9aa,%ebx
    mov    $data_82eea,%edx
    xor    %eax,%eax
    call   func_25878
  jump_51f4f:
    mov    0x44aa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    (%esp),%edx
    mov    %dx,0x422c(%esi,%eax,2)
    mov    0x44aa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %edi,0x422e(%esi,%eax,2)
    mov    0x44aa(%esi),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,4),%eax
    add    %edx,%eax
    mov    %ecx,0x4232(%esi,%eax,2)
    incw   0x44ac(%esi)
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_51fac:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%edi
    mov    %dx,0x8(%esp)
    mov    %ebx,(%esp)
    mov    %ecx,0x4(%esp)
    mov    0x4226(%eax),%edx
    sar    $0x10,%edx
    test   %edx,%edx
    jl     jump_520e8
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    $0x1f,%esi
    mov    0x3068(%edi,%eax,2),%ax
    xor    %ecx,%ecx
    mov    %ax,0xc(%esp)
  jump_51ff3:
    mov    0xa(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jle    jump_520e8
    test   %ecx,%ecx
    jne    jump_520e8
    movswl %si,%eax
    test   %eax,%eax
    jge    jump_52022
    mov    $0x9df,%ebx
    mov    $data_82ef8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_52022:
    mov    0x4226(%edi),%eax
    sar    $0x10,%eax
    imul   $0x8e,%eax,%eax
    movswl %si,%edx
    add    %edi,%eax
    mov    0x306a(%eax,%edx,4),%eax
    test   %eax,%eax
    je     jump_520e2
    imul   $0xc,%eax,%eax
    mov    0x20(%esp),%ebx
    mov    0x4(%edi,%eax,1),%eax
    test   %ebx,%ebx
    je     jump_52066
    mov    data_122024(%edx),%dl
    and    $0xff,%edx
    je     jump_520dd
  jump_52066:
    mov    0x8(%esp),%ebx
    mov    0x35(%eax),%edx
    mov    %eax,%ebp
    test   %edx,%edx
    jne    jump_52084
    mov    0x6(%esp),%edx
    sar    $0x10,%edx
    cmp    $0x1,%edx
    je     jump_52084
    cmp    $0xe,%edx
    jne    jump_52099
  jump_52084:
    cmpl   $0x0,0x63(%ebp)
    je     jump_52092
    movswl %bx,%edx
    cmp    $0x2,%edx
    jle    jump_52099
  jump_52092:
    mov    $0xffffffff,%edx
    jmp    jump_5209b
  jump_52099:
    xor    %edx,%edx
  jump_5209b:
    test   %edx,%edx
    je     jump_520cb
    cmpl   $0x0,0x20(%esp)
    je     jump_520b0
    movswl %si,%edx
    movb   $0x1,data_122024(%edx)
  jump_520b0:
    mov    0x6(%esp),%edx
    mov    0x4(%esp),%ecx
    mov    (%esp),%ebx
    mov    0xa7(%eax),%ebp
    sar    $0x10,%edx
    call   *0x8(%ebp)
    mov    %eax,%ecx
    jmp    jump_520dd
  jump_520cb:
    cmpl   $0x0,0x20(%esp)
    je     jump_520dd
    movswl %si,%eax
    xor    %dl,%dl
    mov    %dl,data_122024(%eax)
  jump_520dd:
    decw   0xc(%esp)
  jump_520e2:
    dec    %esi
    jmp    jump_51ff3
  jump_520e8:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_520f4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %ebx,%edi
    mov    %ecx,%ebx
    mov    0xc(%esp),%ecx
    mov    0x4226(%eax),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jge    jump_52114
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret    $0x4
  jump_52114:
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    0x4(%esi,%eax,4),%eax
    mov    0xa7(%eax),%esi
    movswl %di,%edx
    call   *0x8(%esi)
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_52134:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %ebx,%edi
    mov    %esp,%ebx
    call   func_5216c
    test   %eax,%eax
    je     jump_52163
    mov    0x10(%esp),%edx
    movswl %di,%ebx
    push   %edx
    mov    0x2(%esp),%edx
    mov    %esi,%eax
    sar    $0x10,%edx
    call   func_520f4
    mov    $0xffffffff,%eax
  jump_52163:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_5216c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%ebp
    mov    %ebx,(%esp)
    xor    %esi,%esi
    xor    %ecx,%ecx
    jmp    jump_52181
  jump_52180:
    inc    %ecx
  jump_52181:
    movswl %cx,%eax
    cmp    $0x400,%eax
    jge    jump_521d0
    cmp    0x3000(%edi),%si
    jg     jump_521d0
    imul   $0xc,%eax,%eax
    add    %edi,%eax
    mov    0x4(%eax),%edx
    test   %edx,%edx
    je     jump_52180
    mov    $0xa,%ebx
    add    $0x20,%edx
    mov    %ebp,%eax
    inc    %esi
    call   func_73d7a
    test   %eax,%eax
    jne    jump_52180
    mov    (%esp),%ebx
    test   %ebx,%ebx
    je     jump_521be
    mov    %cx,(%ebx)
  jump_521be:
    movswl %cx,%edx
    lea    0x0(,%edx,4),%eax
    sub    %edx,%eax
    mov    0x4(%edi,%eax,4),%eax
    jmp    jump_521d2
  jump_521d0:
    xor    %eax,%eax
  jump_521d2:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_521dc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %edx,%ebp
    mov    %bx,0x4(%esp)
    mov    %ecx,(%esp)
    cmp    0x4226(%eax),%bx
    jge    jump_52256
    xor    %ecx,%ecx
    jmp    jump_521fc
  jump_521fb:
    inc    %ecx
  jump_521fc:
    mov    0x2(%esp),%eax
    sar    $0x10,%eax
    imul   $0x8e,%eax,%eax
    add    %esi,%eax
    cmp    0x3068(%eax),%cx
    jge    jump_52256
    movswl %cx,%edx
    mov    0x306a(%eax,%edx,4),%edi
    imul   $0xc,%edi,%eax
    add    %esi,%eax
    mov    0x4(%eax),%edx
    test   %edx,%edx
    je     jump_521fb
    mov    $0xa,%ebx
    add    $0x20,%edx
    mov    %ebp,%eax
    call   func_73d7a
    test   %eax,%eax
    jne    jump_521fb
    mov    (%esp),%ebx
    test   %ebx,%ebx
    je     jump_52247
    mov    %di,(%ebx)
  jump_52247:
    lea    0x0(,%edi,4),%eax
    sub    %edi,%eax
    mov    0x4(%esi,%eax,4),%eax
    jmp    jump_52258
  jump_52256:
    xor    %eax,%eax
  jump_52258:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_52260:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,-0x4(%ebp)
    cmp    0x4228(%eax),%di
    je     jump_52469
    movswl %di,%eax
    test   %eax,%eax
    jl     jump_52289
    cmp    $0x20,%eax
    jl     jump_5229a
  jump_52289:
    mov    $0xa90,%ebx
    mov    $data_82f06,%edx
    xor    %eax,%eax
    call   func_25878
  jump_5229a:
    mov    0x4226(%esi),%ebx
    sar    $0x10,%ebx
    test   %ebx,%ebx
    jl     jump_522ce
    lea    0x0(,%ebx,8),%eax
    add    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    mov    0x3064(%esi,%eax,2),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_522ce
    mov    $data_f8638,%eax
    call   func_4a84c
  jump_522ce:
    movswl %di,%ebx
    lea    0x0(,%ebx,8),%eax
    add    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    mov    0x3064(%esi,%eax,2),%edx
    sar    $0x10,%edx
    cmp    $0xffffffff,%edx
    je     jump_522fa
    mov    $data_f8638,%eax
    xor    %ebx,%ebx
    call   func_4a71c
  jump_522fa:
    mov    0x4226(%esi),%ebx
    sar    $0x10,%ebx
    test   %ebx,%ebx
    jl     jump_52335
    lea    0x0(,%ebx,8),%eax
    add    %ebx,%eax
    shl    $0x3,%eax
    sub    %ebx,%eax
    add    %eax,%eax
    lea    (%esi,%eax,1),%edx
    cmpl   $0x0,0x30f0(%edx)
    je     jump_52335
    mov    %edx,%ecx
    lea    0x3066(%esi),%edx
    add    %eax,%edx
    mov    %ebx,%eax
    call   *0x30f0(%ecx)
  jump_52335:
    mov    0x3002(%esi),%eax
    cmp    $0xffffffff,%eax
    je     jump_52352
    push   $0x0
    mov    $0x6,%ebx
    mov    %eax,%edx
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_520f4
  jump_52352:
    push   $0x0
    mov    $0x2,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_51fac
    cmpl   $0xffffffff,-0x4(%ebp)
    jne    jump_523b6
    mov    0x4226(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_523b6
    mov    0x4758(%esi),%ax
    movswl %ax,%edx
    inc    %eax
    mov    %ax,0x4758(%esi)
    mov    0x4228(%esi),%ax
    mov    %ax,0x4736(%esi,%edx,2)
    mov    0x4756(%esi),%eax
    sar    $0x10,%eax
    cmp    $0x10,%eax
    jne    jump_523af
    movw   $0x0,0x4758(%esi)
  jump_523af:
    incw   0x4756(%esi)
  jump_523b6:
    mov    %di,0x4228(%esi)
    mov    0x4226(%esi),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_523ed
    cmpl   $0xffffffff,data_86a64
    jne    jump_523ed
    mov    $data_82f14,%eax
    xor    %edx,%edx
    call   func_736d3
    test   %eax,%eax
    jne    jump_523ed
    mov    $data_82f1f,%eax
    call   func_4f3a0
  jump_523ed:
    mov    0x3006(%esi),%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    %ecx,data_86a64
    call   func_56adc
    push   $0x1df
    mov    $0x27f,%ecx
    mov    %esi,%eax
    call   func_505f8
    movswl %di,%ecx
    lea    0x0(,%ecx,8),%eax
    add    %ecx,%eax
    shl    $0x3,%eax
    sub    %ecx,%eax
    add    %eax,%eax
    lea    (%esi,%eax,1),%edx
    cmpl   $0x0,0x30ec(%edx)
    je     jump_52446
    mov    %edx,%ebx
    lea    0x3066(%esi),%edx
    add    %eax,%edx
    mov    %ecx,%eax
    call   *0x30ec(%ebx)
  jump_52446:
    push   $0x0
    mov    $0x1,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    call   func_51fac
    mov    %esi,%eax
    movl   $0xffffffff,0x3002(%esi)
    call   func_51ce0
  jump_52469:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_52470:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %edx,%ebx
    mov    0x4754(%eax),%edx
    sar    $0x10,%edx
    test   %edx,%edx
    jne    jump_52486
    xor    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_52486:
    mov    0x4756(%eax),%edx
    sar    $0x10,%edx
    test   %edx,%edx
    jne    jump_5249a
    mov    $0xf,%edx
    jmp    jump_5249b
  jump_5249a:
    dec    %edx
  jump_5249b:
    movswl %dx,%ecx
    mov    0x4736(%eax,%ecx,2),%cx
    cmp    $0xffffffff,%ebx
    jne    jump_524de
    mov    %dx,0x4758(%eax)
    mov    0x4756(%eax),%edx
    sar    $0x10,%edx
    movw   $0xffff,0x4736(%eax,%edx,2)
    mov    0x4756(%eax),%bx
    dec    %ebx
    movswl %cx,%edx
    mov    %bx,0x4756(%eax)
    xor    %ebx,%ebx
    call   func_52260
  jump_524de:
    mov    %ecx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5257c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    test   %edx,%edx
    je     jump_525de
    mov    0x2ffe(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x3ff,%eax
    je     jump_525de
    mov    $0x1,%edx
    jmp    jump_5259f
  jump_5259e:
    inc    %edx
  jump_5259f:
    movswl %dx,%eax
    cmp    $0x400,%eax
    jge    jump_525cd
    imul   $0xc,%eax,%ebx
    add    %ecx,%ebx
    cmpl   $0x0,(%ebx)
    jne    jump_5259e
    movl   $0x1,(%ebx)
    mov    %esi,0x4(%ebx)
    incw   0x3000(%ecx)
    movl   $0x12345678,(%esi)
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_525cd:
    mov    $0xb2c,%ebx
    mov    $data_82f38,%edx
    xor    %eax,%eax
    call   func_25878
  jump_525de:
    xor    %eax,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_525e4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%edi
    mov    %ebx,%esi
    movswl %bx,%edx
    test   %edx,%edx
    jl     jump_525f9
    cmp    $0x20,%edx
    jl     jump_5260a
  jump_525f9:
    mov    $0xb37,%ebx
    mov    $data_82f46,%edx
    xor    %eax,%eax
    call   func_25878
  jump_5260a:
    cmp    $0x400,%edi
    jl     jump_52623
    mov    $0xb38,%ebx
    mov    $data_82f54,%edx
    xor    %eax,%eax
    call   func_25878
  jump_52623:
    test   %edi,%edi
    je     jump_5264a
    movswl %si,%ebx
    lea    0x0(,%ebx,8),%edx
    add    %ebx,%edx
    shl    $0x3,%edx
    sub    %ebx,%edx
    add    %edx,%edx
    add    %ecx,%edx
    mov    0x3066(%edx),%ebx
    sar    $0x10,%ebx
    cmp    $0x20,%ebx
    jne    jump_52651
  jump_5264a:
    xor    %edx,%edx
    jmp    jump_526cc
  jump_52651:
    xor    %eax,%eax
    test   %ebx,%ebx
    jne    jump_52670
    incw   0x4226(%ecx)
    movw   $0x1,0x3068(%edx)
    mov    %edi,0x306a(%edx)
    jmp    jump_5269e
  jump_5266f:
    inc    %eax
  jump_52670:
    movswl %ax,%edx
    cmp    $0x20,%edx
    jge    jump_5269e
    movswl %si,%ebx
    imul   $0x8e,%ebx,%ebx
    shl    $0x2,%edx
    add    %ecx,%ebx
    add    %ebx,%edx
    cmpl   $0x0,0x306a(%edx)
    jne    jump_5266f
    mov    %edi,0x306a(%edx)
    incw   0x3068(%ebx)
  jump_5269e:
    lea    0x0(,%edi,4),%edx
    sub    %edi,%edx
    shl    $0x2,%edx
    add    %edx,%ecx
    movswl %ax,%edx
    incl   (%ecx)
    cmp    $0x20,%edx
    jl     jump_526c7
    mov    $0xb5a,%ebx
    mov    $data_82f62,%edx
    xor    %eax,%eax
    call   func_25878
  jump_526c7:
    mov    $0xffffffff,%edx
  jump_526cc:
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_526d4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %bx,(%esp)
    mov    %ecx,%ebp
    mov    -0x2(%esp),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jl     jump_526f4
    cmp    $0x20,%eax
    jl     jump_52705
  jump_526f4:
    mov    $0xb6a,%ebx
    mov    $data_82f70,%edx
    xor    %eax,%eax
    call   func_25878
  jump_52705:
    cmp    $0x400,%esi
    jl     jump_5271e
    mov    $0xb6b,%ebx
    mov    $data_82f7e,%edx
    xor    %eax,%eax
    call   func_25878
  jump_5271e:
    test   %esi,%esi
    je     jump_52745
    mov    -0x2(%esp),%edx
    sar    $0x10,%edx
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    0x3066(%edi,%eax,2),%eax
    sar    $0x10,%eax
    test   %eax,%eax
    jne    jump_5274c
  jump_52745:
    xor    %eax,%eax
    jmp    jump_527b9
  jump_5274c:
    xor    %ecx,%ecx
    jmp    jump_52751
  jump_52750:
    inc    %ecx
  jump_52751:
    movswl %cx,%eax
    cmp    $0x20,%eax
    jge    jump_527a3
    mov    -0x2(%esp),%edx
    sar    $0x10,%edx
    imul   $0x8e,%edx,%edx
    shl    $0x2,%eax
    add    %edi,%edx
    add    %edx,%eax
    mov    0x306a(%eax),%ebx
    cmp    %ebx,%esi
    jne    jump_52750
    movl   $0x0,0x306a(%eax)
    lea    0x0(,%ebx,4),%eax
    sub    %ebx,%eax
    decw   0x3068(%edx)
    decl   (%edi,%eax,4)
    test   %ebp,%ebp
    je     jump_527a3
    mov    %esi,%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_528f4
  jump_527a3:
    movswl %cx,%eax
    cmp    $0x20,%eax
    jl     jump_527b4
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_527b4:
    mov    $0xffffffff,%eax
  jump_527b9:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_52850:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    %ebx,%edi
    movswl %dx,%eax
    test   %eax,%eax
    jl     jump_52865
    cmp    $0x20,%eax
    jl     jump_52876
  jump_52865:
    mov    $0xb9d,%ebx
    mov    $data_82fa8,%edx
    xor    %eax,%eax
    call   func_25878
  jump_52876:
    movswl %cx,%edx
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    %eax,%esi
    xor    %eax,%eax
    mov    0x30ea(%esi),%ax
    cmp    $0xffff,%eax
    je     jump_528a1
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_528a1:
    mov    $0xffffffff,%eax
    mov    %di,0x30ea(%esi)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_528b4:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    movswl %dx,%edx
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    %ebx,0x30ec(%ecx,%eax,2)
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_528d4:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    movswl %dx,%edx
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    %ebx,0x30f0(%ecx,%eax,2)
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_528f4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    %ebx,%edi
    cmp    $0x400,%edx
    jl     jump_52916
    mov    $0xbd0,%ebx
    mov    $data_82fb6,%edx
    xor    %eax,%eax
    call   func_25878
  jump_52916:
    test   %ecx,%ecx
    je     jump_5297a
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    mov    (%esi,%eax,4),%edx
    dec    %edx
    mov    %edx,(%esi,%eax,4)
    je     jump_52930
    test   %edi,%edi
    je     jump_5297a
  jump_52930:
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    shl    $0x2,%eax
    lea    (%esi,%eax,1),%edx
    mov    0x4(%edx),%eax
    call   func_2595c
    mov    0x4(%edx),%eax
    test   %eax,%eax
    je     jump_5295b
    mov    0xa7(%eax),%edi
    mov    $0x2,%edx
    call   *(%edi)
  jump_5295b:
    lea    0x0(,%ecx,4),%eax
    sub    %ecx,%eax
    movl   $0x0,0x4(%esi,%eax,4)
    movl   $0x0,(%esi,%eax,4)
    decw   0x3000(%esi)
  jump_5297a:
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_52980:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%esi
    mov    $0x100,%eax
    mov    $data_82fc4,%ebx
    mov    $0x1,%edx
    call   func_729c4
    call   func_2593c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_529b4
    mov    $0xbec,%ebx
    mov    $data_82fd2,%edx
    call   func_25878
  jump_529b4:
    mov    %ecx,%edx
    xor    %eax,%eax
  jump_529b8:
    mov    %al,(%edx)
    inc    %eax
    inc    %edx
    cmp    $0x100,%eax
    jl     jump_529b8
    mov    $0x100,%eax
    mov    $data_82fe0,%ebx
    movb   $0x96,0xf2(%ecx)
    mov    $0x1,%edx
    mov    %ecx,0x3012(%esi)
    call   func_729c4
    call   func_2593c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_529fe
    mov    $0xbf6,%ebx
    mov    $data_82fee,%edx
    call   func_25878
  jump_529fe:
    mov    %ecx,%edx
    xor    %eax,%eax
  jump_52a02:
    mov    %al,(%edx)
    inc    %eax
    inc    %edx
    cmp    $0x100,%eax
    jl     jump_52a02
    mov    $0x80,%eax
    mov    $data_82ffc,%edx
    mov    %ecx,0x3022(%esi)
    call   func_569d7
    mov    %eax,0x3006(%esi)
    mov    %esi,%eax
    call   func_52a34
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_52a34:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x3bc,%esp
    mov    %eax,%edi
    mov    %edx,%eax
    xor    %edx,%edx
    call   func_1bb10
    mov    %eax,%edx
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_54bdf
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83008
    push   %edx
    call   func_73431
    add    $0x10,%esp
    call   func_4f1dc
    mov    0x378(%esp),%edx
    mov    %eax,%ecx
    cmp    %edx,%eax
    jg     jump_52a97
    mov    $0xc1c,%ebx
    mov    $data_8300e,%edx
    xor    %eax,%eax
    call   func_25888
  jump_52a97:
    lea    0x24db0(%edi),%ebx
    lea    -0x30d40(%ecx),%edx
    mov    %ebx,%eax
    call   func_1ad1c
    call   func_2c9ac
    lea    0x3046(%edi),%eax
    mov    %ebx,0x384(%esp)
    mov    %eax,0x390(%esp)
    lea    0x3026(%edi),%eax
    mov    %ebx,0x388(%esp)
    mov    %eax,0x38c(%esp)
  jump_52ad7:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8301c
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_54bd8
    mov    0x378(%esp),%eax
    mov    %ax,0x3a8(%esp)
    cmp    $0x9,%ebx
    jb     jump_5499c
    jbe    jump_52b5f
    cmp    $0xe,%ebx
    jb     jump_54807
    cmp    $0x1b,%ebx
    jbe    jump_52b5f
    cmp    $0x64,%ebx
    jb     jump_547f0
    jbe    jump_5464a
    cmp    $0xc8,%ebx
    jb     jump_54bc2
    jbe    jump_546cb
    cmp    $0x12c,%ebx
    je     jump_54749
    jmp    jump_54bc2
  jump_52b5f:
    mov    0x378(%esp),%ecx
    test   %ecx,%ecx
    jne    jump_52b90
    mov    $data_83022,%ebx
    mov    $0xab,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52b89
    call   func_2bf10
  jump_52b89:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52b90:
    cmp    $0x5,%ecx
    jne    jump_52bbb
    mov    $data_83025,%ebx
    mov    $0xab,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52bb4
    call   func_252d8
  jump_52bb4:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52bbb:
    cmp    $0x6,%ecx
    jne    jump_52be6
    mov    $data_83028,%ebx
    mov    $0xb1,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52bdf
    call   func_25398
  jump_52bdf:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52be6:
    cmp    $0x7,%ecx
    jne    jump_52c11
    mov    $data_8302c,%ebx
    mov    $0x18c,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52c0a
    call   func_35ba0
  jump_52c0a:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52c11:
    cmp    $0xb,%ecx
    jne    jump_52c3c
    mov    $data_8302f,%ebx
    mov    $0xfe0,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52c35
    call   func_308e0
  jump_52c35:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52c3c:
    cmp    $0xc,%ecx
    jne    jump_52c67
    mov    $data_83032,%ebx
    mov    $0xaf,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52c60
    call   func_32c78
  jump_52c60:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52c67:
    cmp    $0x9,%ecx
    jne    jump_52ce2
    mov    $data_83035,%ebp
    mov    $0x9dd,%eax
    mov    $0x2,%ebx
    call   func_73f9c
    mov    %ebx,0x380(%esp)
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52cd4
    call   func_2bf10
    add    $0xab,%eax
    call   func_1b4f0
    lea    -0xab(%eax),%edx
    mov    $0x64,%eax
    lea    0x143(%edx),%ecx
    mov    $data_85870,%ebx
    mov    %eax,%edx
    mov    %ecx,%eax
    call   func_72754
    lea    -0x143(%eax),%edx
    mov    %edx,%eax
    movl   $data_85eb0,0xa7(%edx)
    call   func_424ec
    mov    %edx,%eax
  jump_52cd4:
    mov    0x380(%esp),%edx
    mov    %ebp,%ebx
    jmp    jump_52fbe
  jump_52ce2:
    cmp    $0xe,%ecx
    jne    jump_52d0d
    mov    $data_83038,%ebx
    mov    $0xad,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52d06
    call   func_38690
  jump_52d06:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52d0d:
    cmp    $0xf,%ecx
    jne    jump_52d38
    mov    $data_8303c,%ebx
    mov    $0xaf,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52d31
    call   func_2e9d4
  jump_52d31:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52d38:
    cmp    $0x10,%ecx
    jne    jump_52d63
    mov    $data_8303f,%ebx
    mov    $0xb1,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52d5c
    call   func_4ca64
  jump_52d5c:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52d63:
    cmp    $0x11,%ecx
    jne    jump_52d8e
    mov    $data_83042,%ebx
    mov    $0xb1,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52d87
    call   func_4cf54
  jump_52d87:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52d8e:
    cmp    $0x12,%ecx
    jne    jump_52db9
    mov    $data_83045,%ebx
    mov    $0xbd,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52db2
    call   func_4d4dc
  jump_52db2:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52db9:
    cmp    $0x13,%ecx
    jne    jump_52de4
    mov    $data_83048,%ecx
    mov    $0x108,%eax
    mov    $0x2,%edx
    call   func_73f9c
    mov    %eax,%ebx
    test   %eax,%eax
    je     jump_52ddd
    call   func_10a3c
  jump_52ddd:
    mov    %ecx,%ebx
    jmp    jump_52fbe
  jump_52de4:
    cmp    $0x14,%ecx
    jne    jump_52e0f
    mov    $data_8304b,%ebx
    mov    $0xdaf,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52e08
    call   func_2f330
  jump_52e08:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52e0f:
    cmp    $0x15,%ecx
    jne    jump_52e3a
    mov    $data_8304e,%ecx
    mov    $0xc3,%eax
    mov    $0x2,%edx
    call   func_73f9c
    mov    %eax,%ebx
    test   %eax,%eax
    je     jump_52e33
    call   func_316fc
  jump_52e33:
    mov    %ecx,%ebx
    jmp    jump_52fbe
  jump_52e3a:
    cmp    $0x16,%ecx
    jne    jump_52e65
    mov    $data_83051,%ebx
    mov    $0xdaf,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52e5e
    call   func_32f10
  jump_52e5e:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52e65:
    cmp    $0x17,%ecx
    jne    jump_52e90
    mov    $data_83054,%ebx
    mov    $0xdb3,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52e89
    call   func_25e80
  jump_52e89:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52e90:
    cmp    $0x18,%ecx
    jne    jump_52ebb
    mov    $data_83057,%ebx
    mov    $0xab,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52eb4
    call   func_272d8
  jump_52eb4:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52ebb:
    cmp    $0x19,%ecx
    jne    jump_52ee6
    mov    $data_8305a,%ebx
    mov    $0xaf,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52edf
    call   func_2cb44
  jump_52edf:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52ee6:
    cmp    $0x1a,%ecx
    jne    jump_52f11
    mov    $data_8305d,%ebx
    mov    $0xb3,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52f0a
    call   func_2f0f8
  jump_52f0a:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52f11:
    cmp    $0x1d,%ecx
    jne    jump_52f3c
    mov    $data_83060,%ebx
    mov    $0xab,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52f35
    call   func_37ef8
  jump_52f35:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52f3c:
    cmp    $0x1e,%ecx
    jne    jump_52f64
    mov    $data_83064,%ebx
    mov    $0xab,%eax
    mov    $0x2,%ecx
    call   func_73f9c
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_52f60
    call   func_2680c
  jump_52f60:
    mov    %ecx,%edx
    jmp    jump_52fbe
  jump_52f64:
    cmp    $0x1f,%ecx
    jne    jump_52f92
    mov    $data_83067,%ebx
    mov    $0xab,%eax
    mov    $0x2,%edx
    call   func_73f9c
    test   %eax,%eax
    je     jump_52fbe
    call   func_2bf10
    movl   $data_86074,0xa7(%eax)
    jmp    jump_52fbe
  jump_52f92:
    cmp    $0x20,%ecx
    jne    jump_52fca
    mov    $data_8306b,%ebx
    mov    $0xab,%eax
    mov    $0x2,%edx
    call   func_73f9c
    test   %eax,%eax
    je     jump_52fbe
    call   func_2bf10
    movl   $data_8605c,0xa7(%eax)
  jump_52fbe:
    call   func_2593c
    mov    %eax,0x37c(%esp)
  jump_52fca:
    mov    0x37c(%esp),%ebp
    mov    0x37c(%esp),%eax
    add    $0x20,%ebp
    call   func_2c058
    push   %ebp
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8306f
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_83075
    push   %esi
    call   func_73431
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_83078
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    $data_8307b,%edx
    lea    0x334(%esp),%eax
    call   func_72130
    test   %eax,%eax
    je     jump_53081
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5306d
    push   %ebp
    push   $data_83080
    mov    $0xc82,%ebx
    call   func_258ec
    add    $0x8,%esp
    mov    $data_8308e,%edx
    xor    %eax,%eax
    call   func_25898
  jump_5306d:
    mov    0x37c(%esp),%edx
    mov    0x41(%ecx),%eax
    mov    %eax,0x63(%edx)
    mov    %ecx,%eax
    call   func_2c070
  jump_53081:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8309c
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x3a0(%esp),%edx
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_53132
    jmp    jump_530c0
  jump_530b3:
    mov    0x3a0(%esp),%edx
    inc    %ecx
    cmp    %dx,%cx
    jge    jump_53132
  jump_530c0:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_830a2
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x37c(%esp),%edx
    sar    $0x10,%ebx
    mov    0x41(%edx),%edx
    call   func_525e4
    test   %eax,%eax
    jne    jump_53104
    mov    $0xc8c,%ebx
    mov    $data_830a5,%edx
    call   func_25888
  jump_53104:
    movswl %cx,%eax
    test   %eax,%eax
    jne    jump_530b3
    imul   $0x8e,0x378(%esp),%eax
    mov    0x37c(%esp),%edx
    mov    0x30ea(%edi,%eax,1),%ax
    movl   $0x0,0x1a(%edx)
    mov    %ax,0x18(%edx)
    jmp    jump_530b3
  jump_53132:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830b3
    push   %esi
    call   func_73431
    add    $0x10,%esp
    cmpl   $0x0,0x378(%esp)
    je     jump_53168
    mov    0x37c(%esp),%eax
    movl   $0xffffffff,0x3d(%eax)
  jump_53168:
    mov    0x3a6(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x19,%eax
    jne    jump_531b0
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830b9
    push   %esi
    call   func_73431
    add    $0x10,%esp
    cmpl   $0x0,0x378(%esp)
    je     jump_531b0
    mov    0x37c(%esp),%eax
    movl   $0xffffffff,0xab(%eax)
  jump_531b0:
    mov    0x37c(%esp),%eax
    add    $0x8,%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830bf
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x37c(%esp),%eax
    add    $0xc,%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830c5
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x37c(%esp),%eax
    add    $0x10,%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830cb
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x37c(%esp),%eax
    add    $0x14,%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830d1
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830d7
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x37c(%esp),%edx
    mov    0x378(%esp),%eax
    mov    %ax,0x1e(%edx)
    mov    0x3a6(%esp),%eax
    sar    $0x10,%eax
    cmp    $0xf,%eax
    jne    jump_5329e
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830dd
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %eax,0xab(%edx)
  jump_5329e:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830e3
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x37c(%esp),%edx
    mov    0x378(%esp),%eax
    mov    %ax,0x59(%edx)
    lea    0x45(%edx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830e9
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x47(%edx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830ef
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4b(%edx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830f5
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4f(%edx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_830fb
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83101
    push   %esi
    xor    %ebx,%ebx
    call   func_73431
    add    $0x10,%esp
    lea    0x6d(%edx),%ecx
    mov    0x378(%esp),%eax
    mov    %ebx,0x3b0(%esp)
    mov    %eax,0x3ac(%esp)
    test   %ax,%ax
    jle    jump_534b2
    lea    0xb(%ecx),%eax
    lea    0x9(%ecx),%ebp
    mov    %eax,0x394(%esp)
    lea    0x5(%ecx),%eax
    mov    %eax,0x398(%esp)
  jump_5338e:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83107
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%edx
    test   %edx,%edx
    jne    jump_5344a
    mov    0x394(%esp),%ebx
    push   %ebx
    push   %ebp
    mov    0x3a0(%esp),%eax
    push   %eax
    lea    0x340(%esp),%eax
    push   %eax
    push   $data_8310d
    push   %esi
    movb   $0x0,(%ecx)
    call   func_73431
    add    $0x18,%esp
    lea    0x334(%esp),%eax
    call   func_2ca14
    mov    %eax,0x1(%ecx)
  jump_533f4:
    mov    0x37c(%esp),%eax
    mov    %ecx,%edx
    mov    0x394(%esp),%ebx
    call   func_2cae0
    add    $0xd,%ebp
    mov    0x3b0(%esp),%edx
    mov    0x398(%esp),%eax
    add    $0xd,%ebx
    add    $0xd,%ecx
    inc    %edx
    mov    %ebx,0x394(%esp)
    add    $0xd,%eax
    mov    0x3ac(%esp),%ebx
    mov    %edx,0x3b0(%esp)
    mov    %eax,0x398(%esp)
    cmp    %bx,%dx
    jge    jump_534b2
    jmp    jump_5338e
  jump_5344a:
    cmp    $0x1,%edx
    jne    jump_5349c
    mov    0x394(%esp),%eax
    push   %eax
    push   %ebp
    mov    0x3a0(%esp),%edx
    push   %edx
    lea    0x340(%esp),%eax
    push   %eax
    push   $data_83119
    push   %esi
    mov    $0xffffffff,%ebx
    movb   $0x1,(%ecx)
    call   func_73431
    add    $0x18,%esp
    lea    0x334(%esp),%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    and    $0xffff,%eax
    mov    %eax,0x1(%ecx)
    jmp    jump_533f4
  jump_5349c:
    mov    $0xcd6,%ebx
    mov    $data_83125,%edx
    xor    %eax,%eax
    call   func_25888
    jmp    jump_533f4
  jump_534b2:
    mov    0x37c(%esp),%edx
    mov    0x300a(%edi),%eax
    mov    %eax,0x4(%edx)
    jmp    jump_52ad7
  jump_534c7:
    mov    $data_83133,%ebx
    mov    $0xa09,%eax
    mov    $0x2,%ebp
    call   func_73f9c
    mov    %eax,%ecx
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_534e8
    call   func_2a560
  jump_534e8:
    mov    %ebp,%edx
    call   func_2593c
    mov    %eax,%edx
    mov    %eax,%ebp
    add    $0x20,%edx
    call   func_2c058
    push   %edx
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83138
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_8313e
    push   %esi
    call   func_73431
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_83141
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    $data_83144,%edx
    lea    0x334(%esp),%eax
    call   func_72130
    test   %eax,%eax
    je     jump_53587
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_53578
    mov    $0xced,%ebx
    mov    $data_83149,%edx
    call   func_25878
  jump_53578:
    mov    0x41(%ecx),%eax
    mov    %ebp,%edx
    mov    %eax,0x63(%ebp)
    mov    %ecx,%eax
    call   func_2c070
  jump_53587:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83157
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x3a0(%esp),%eax
    xor    %ecx,%ecx
    test   %ax,%ax
    jle    jump_53601
    jmp    jump_535c2
  jump_535b5:
    mov    0x3a0(%esp),%eax
    inc    %ecx
    cmp    %ax,%cx
    jge    jump_53601
  jump_535c2:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_8315d
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x41(%ebp),%edx
    sar    $0x10,%ebx
    call   func_525e4
    test   %eax,%eax
    jne    jump_535b5
    mov    $0xcf7,%ebx
    mov    $data_83160,%edx
    call   func_25888
    jmp    jump_535b5
  jump_53601:
    lea    0x8(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8316e
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0xc(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83174
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x10(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8317a
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83180
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x280(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83186
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x280(%esp),%edx
    mov    %ebp,%eax
    call   func_2a5e4
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8318c
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0xa01(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83192
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0xa03(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83198
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0xa05(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8319e
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0xa07(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_831a4
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_5377f
    movl   $0xffffffff,0x9e5(%ebp)
    mov    %ebx,0x9e9(%ebp)
  jump_5377f:
    lea    0x45(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_831aa
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x47(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_831b0
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4b(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_831b6
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4f(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_831bc
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_831c2
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x9f5(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_831c8
    push   %esi
    call   func_73431
    add    $0x10,%esp
    cmpl   $0x0,0x378(%esp)
    je     jump_53845
    movl   $0xffffffff,0x9f1(%ebp)
  jump_53845:
    mov    0x300a(%edi),%eax
    mov    %eax,0x4(%ebp)
    jmp    jump_52ad7
  jump_53853:
    mov    0x3a0(%esp),%eax
    inc    %ecx
    cmp    %ax,%cx
    jge    jump_5389f
  jump_53860:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_831f8
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x41(%ebp),%edx
    sar    $0x10,%ebx
    call   func_525e4
    test   %eax,%eax
    jne    jump_53853
    mov    $0xd40,%ebx
    mov    $data_831fb,%edx
    call   func_25888
    jmp    jump_53853
  jump_5389f:
    lea    0x8(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83209
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0xc(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8320f
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x10(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83215
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8321b
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83221
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%al
    mov    %al,0xbf(%ebp)
    mov    %esp,%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83227
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x80(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8322d
    push   %esi
    lea    0x90(%esp),%ebx
    call   func_73431
    add    $0x10,%esp
    mov    %esp,%edx
    mov    %ebp,%eax
    call   func_21d24
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83233
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x3a4(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83239
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8323f
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83245
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8324b
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83251
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83257
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %eax,0x57e(%ebp)
    lea    0x45(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8325d
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x47(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83263
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4b(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83269
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4f(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8326f
    push   %esi
    call   func_73431
    mov    0x300a(%edi),%eax
    movw   $0xffff,0x18(%ebp)
    movl   $0x0,0x1a(%ebp)
    mov    data_93b98,%dx
    movb   $0x0,0xd9(%ebp)
    add    $0x10,%esp
    mov    %eax,0x4(%ebp)
    xor    %eax,%eax
    test   %dx,%dx
    jle    jump_52ad7
  jump_53aef:
    mov    $0x1,%dl
    mov    %al,%cl
    shl    %cl,%dl
    mov    0xd9(%ebp),%dh
    mov    data_93b98,%bx
    or     %dl,%dh
    inc    %eax
    mov    %dh,0xd9(%ebp)
    cmp    %bx,%ax
    jge    jump_52ad7
    jmp    jump_53aef
  jump_53b16:
    mov    $data_83275,%ebx
    mov    $0xb3,%eax
    mov    $0x2,%ebp
    call   func_73f9c
    mov    %eax,%edx
    mov    %eax,%ecx
    test   %eax,%eax
    je     jump_53b37
    call   func_2d0a4
  jump_53b37:
    mov    %ebp,%edx
    call   func_2593c
    mov    %eax,%edx
    mov    %eax,%ebp
    add    $0x20,%edx
    call   func_2d148
    push   %edx
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83279
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_8327f
    push   %esi
    call   func_73431
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_83282
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    $data_83285,%edx
    lea    0x334(%esp),%eax
    call   func_72130
    test   %eax,%eax
    je     jump_53bd6
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_53bc7
    mov    $0xd82,%ebx
    mov    $data_8328a,%edx
    call   func_25878
  jump_53bc7:
    mov    0x41(%ecx),%eax
    mov    %ebp,%edx
    mov    %eax,0x63(%ebp)
    mov    %ecx,%eax
    call   func_2c070
  jump_53bd6:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83298
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x3a0(%esp),%edx
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_53c79
    jmp    jump_53c15
  jump_53c08:
    mov    0x3a0(%esp),%ebx
    inc    %ecx
    cmp    %bx,%cx
    jge    jump_53c79
  jump_53c15:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_8329e
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x41(%ebp),%edx
    sar    $0x10,%ebx
    call   func_525e4
    test   %eax,%eax
    jne    jump_53c52
    mov    $0xd8c,%ebx
    mov    $data_832a1,%edx
    call   func_25888
  jump_53c52:
    movswl %cx,%eax
    test   %eax,%eax
    jne    jump_53c08
    imul   $0x8e,0x378(%esp),%eax
    mov    0x30ea(%edi,%eax,1),%ax
    movl   $0x0,0x1a(%ebp)
    mov    %ax,0x18(%ebp)
    jmp    jump_53c08
  jump_53c79:
    lea    0x8(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_832af
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0xc(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_832b5
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x10(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_832bb
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_832c1
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_832c7
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x1e(%ebp)
    lea    0x45(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_832cd
    push   %esi
    movw   $0x0,0x59(%ebp)
    call   func_73431
    add    $0x10,%esp
    lea    0x47(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_832d3
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4b(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_832d9
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4f(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_832df
    push   %esi
    call   func_73431
    mov    0x300a(%edi),%eax
    add    $0x10,%esp
    mov    %eax,0x4(%ebp)
    lea    0x3b4(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_832e5
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x3b2(%esp),%edx
    mov    %ebp,%eax
    sar    $0x10,%edx
    call   func_2d160
    test   %eax,%eax
    jne    jump_53dc3
    mov    $0xdae,%ebx
    mov    $data_832eb,%edx
    call   func_25888
  jump_53dc3:
    xor    %ecx,%ecx
    mov    0x3b4(%esp),%eax
    mov    %ecx,0x39c(%esp)
    test   %ax,%ax
    jle    jump_53f36
    jmp    jump_53dfd
  jump_53dde:
    mov    0x39c(%esp),%edx
    inc    %edx
    mov    0x3b4(%esp),%ebx
    mov    %edx,0x39c(%esp)
    cmp    %bx,%dx
    jge    jump_53f36
  jump_53dfd:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_832f9
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x368(%esp)
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_832ff
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x36a(%esp)
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_83302
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x36e(%esp)
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_83305
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x36c(%esp)
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_83308
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x370(%esp)
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_8330b
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x372(%esp)
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_8330e
    push   %esi
    lea    0x374(%esp),%ecx
    call   func_73431
    add    $0xc,%esp
    xor    %ebx,%ebx
    mov    0x378(%esp),%eax
    xor    %edx,%edx
    mov    %ax,0x374(%esp)
    mov    %ebp,%eax
    call   func_2d1a8
    test   %eax,%eax
    jne    jump_53dde
    mov    $0xdc9,%ebx
    mov    $data_83311,%edx
    call   func_25888
    jmp    jump_53dde
  jump_53f36:
    xor    %ecx,%ecx
    mov    data_93b98,%ax
    mov    %cx,0x3b8(%esp)
    test   %ax,%ax
    jle    jump_52ad7
  jump_53f4f:
    mov    0x3b8(%esp),%cl
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    $0x1,%ebx
    movswl %ax,%edx
    xor    %ecx,%ecx
    mov    %ebp,%eax
    call   func_2d1a8
    mov    0x3b8(%esp),%edx
    inc    %edx
    mov    data_93b98,%bx
    mov    %dx,0x3b8(%esp)
    cmp    %bx,%dx
    jge    jump_52ad7
    jmp    jump_53f4f
  jump_53f90:
    mov    $data_8331f,%ebx
    mov    $0x504e,%eax
    mov    $0x2,%edx
    call   func_73f9c
    mov    %eax,%ecx
    mov    %eax,%ebp
    test   %eax,%eax
    je     jump_53fb1
    call   func_15ed4
  jump_53fb1:
    call   func_2593c
    mov    %eax,%edx
    mov    %eax,%ebp
    add    $0x20,%edx
    call   func_2c058
    push   %edx
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83322
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_83328
    push   %esi
    call   func_73431
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_8332b
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    $data_8332e,%edx
    lea    0x334(%esp),%eax
    call   func_72130
    test   %eax,%eax
    je     jump_5404e
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_5403f
    mov    $0xdde,%ebx
    mov    $data_83333,%edx
    call   func_25878
  jump_5403f:
    mov    0x41(%ecx),%eax
    mov    %ebp,%edx
    mov    %eax,0x63(%ebp)
    mov    %ecx,%eax
    call   func_2c070
  jump_5404e:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83341
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x3a0(%esp),%eax
    xor    %ecx,%ecx
    test   %ax,%ax
    jle    jump_540c8
    jmp    jump_54089
  jump_5407c:
    mov    0x3a0(%esp),%edx
    inc    %ecx
    cmp    %dx,%cx
    jge    jump_540c8
  jump_54089:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_83347
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x41(%ebp),%edx
    sar    $0x10,%ebx
    call   func_525e4
    test   %eax,%eax
    jne    jump_5407c
    mov    $0xde8,%ebx
    mov    $data_8334a,%edx
    call   func_25888
    jmp    jump_5407c
  jump_540c8:
    lea    0x8(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83358
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0xc(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8335e
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x10(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83364
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8336a
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83370
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%al
    mov    %al,0x4f2e(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83376
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %eax,0xb8(%ebp)
    mov    %ebp,%eax
    call   func_18370
    lea    0x45(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8337c
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x47(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83382
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4b(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83388
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4f(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8338e
    push   %esi
    call   func_73431
    mov    0x300a(%edi),%eax
    movw   $0xffff,0x18(%ebp)
    movl   $0x0,0x1a(%ebp)
    add    $0x10,%esp
    mov    %eax,0x4(%ebp)
    jmp    jump_52ad7
  jump_54210:
    mov    0x3a0(%esp),%eax
    inc    %ecx
    cmp    %ax,%cx
    jge    jump_54281
  jump_5421d:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_833bc
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x41(%ebp),%edx
    sar    $0x10,%ebx
    call   func_525e4
    test   %eax,%eax
    jne    jump_5425a
    mov    $0xe20,%ebx
    mov    $data_833bf,%edx
    call   func_25888
  jump_5425a:
    movswl %cx,%eax
    test   %eax,%eax
    jne    jump_54210
    imul   $0x8e,0x378(%esp),%eax
    mov    0x30ea(%edi,%eax,1),%ax
    movl   $0x0,0x1a(%ebp)
    mov    %ax,0x18(%ebp)
    jmp    jump_54210
  jump_54281:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_833cd
    push   %esi
    call   func_73431
    add    $0x10,%esp
    cmpl   $0x0,0x378(%esp)
    je     jump_542b0
    movl   $0xffffffff,0x3d(%ebp)
  jump_542b0:
    lea    0x8(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_833d3
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0xc(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_833d9
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x10(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_833df
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_833e5
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_833eb
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x59(%ebp)
    lea    0x45(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_833f1
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x47(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_833f7
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4b(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_833fd
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4f(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83403
    push   %esi
    call   func_73431
    mov    0x300a(%edi),%eax
    add    $0x10,%esp
    mov    %eax,0x4(%ebp)
    jmp    jump_52ad7
  jump_543b7:
    mov    $data_83409,%ebx
    mov    $0x902,%eax
    mov    $0x2,%edx
    call   func_73f9c
    test   %eax,%eax
    je     jump_543d4
    call   func_2d928
  jump_543d4:
    call   func_2593c
    mov    %eax,%edx
    mov    %eax,%ebp
    add    $0x20,%edx
    call   func_2da9c
    push   %edx
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8340c
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_83412
    push   %esi
    call   func_73431
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_83415
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    $data_83418,%edx
    lea    0x334(%esp),%eax
    call   func_72130
    test   %eax,%eax
    je     jump_54471
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_54462
    mov    $0xe53,%ebx
    mov    $data_8341d,%edx
    call   func_25878
  jump_54462:
    mov    0x41(%ecx),%eax
    mov    %ebp,%edx
    mov    %eax,0x63(%ebp)
    mov    %ecx,%eax
    call   func_2c070
  jump_54471:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8342b
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x3a0(%esp),%edx
    xor    %ecx,%ecx
    test   %dx,%dx
    jle    jump_544eb
    jmp    jump_544ac
  jump_5449f:
    mov    0x3a0(%esp),%ebx
    inc    %ecx
    cmp    %bx,%cx
    jge    jump_544eb
  jump_544ac:
    lea    0x378(%esp),%eax
    push   %eax
    push   $data_83431
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    %edi,%eax
    mov    0x376(%esp),%ebx
    mov    0x41(%ebp),%edx
    sar    $0x10,%ebx
    call   func_525e4
    test   %eax,%eax
    jne    jump_5449f
    mov    $0xe5d,%ebx
    mov    $data_83434,%edx
    call   func_25888
    jmp    jump_5449f
  jump_544eb:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83442
    push   %esi
    call   func_73431
    add    $0x10,%esp
    cmpl   $0x0,0x378(%esp)
    je     jump_5451a
    movl   $0xffffffff,0x3d(%ebp)
  jump_5451a:
    lea    0x8(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83448
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0xc(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8344e
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x10(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83454
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x14(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8345a
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83460
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x1e(%ebp)
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83466
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x378(%esp),%eax
    mov    %ax,0x59(%ebp)
    lea    0x45(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8346c
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x47(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83472
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4b(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83478
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x4f(%ebp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8347e
    push   %esi
    call   func_73431
    mov    0x300a(%edi),%eax
    add    $0x10,%esp
    mov    %eax,0x4(%ebp)
    jmp    jump_52ad7
  jump_5464a:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834d5
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x180(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834db
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x180(%esp),%edx
    mov    0x388(%esp),%eax
    xor    %ebx,%ebx
    call   func_1adac
    mov    0x376(%esp),%edx
    mov    %ax,%bx
    sar    $0x10,%edx
    mov    %edi,%eax
    call   func_52850
    test   %eax,%eax
    jne    jump_52ad7
    mov    $0xebf,%ebx
    mov    $data_834e1,%edx
    call   func_25878
    jmp    jump_52ad7
  jump_546cb:
    lea    0x378(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834ef
    push   %esi
    xor    %edx,%edx
    call   func_73431
    add    $0x10,%esp
    mov    $data_c84f8,%eax
    mov    0x378(%esp),%dx
    xor    %ecx,%ecx
    call   func_2b76c
    jmp    jump_54736
  jump_54701:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834f5
    xor    %ebx,%ebx
    push   %esi
    lea    0x110(%esp),%edx
    mov    %cx,%bx
    call   func_73431
    add    $0x10,%esp
    mov    $data_c84f8,%eax
    inc    %ecx
    call   func_2b7a0
  jump_54736:
    mov    0x378(%esp),%ebp
    movswl %cx,%eax
    cmp    %ebp,%eax
    jl     jump_54701
    jmp    jump_52ad7
  jump_54749:
    lea    0x200(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834fb
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x200(%esp),%edx
    mov    0x38c(%esp),%eax
    call   func_2aa40
    cmp    $0xffffffff,%eax
    je     jump_54790
    mov    $0xedb,%ebx
    mov    $data_83501,%edx
    xor    %eax,%eax
    call   func_25888
  jump_54790:
    lea    0x200(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8350f
    push   %esi
    movl   $0x0,0x3042(%edi)
    call   func_73431
    add    $0x10,%esp
    lea    0x200(%esp),%edx
    mov    0x390(%esp),%eax
    call   func_2aa40
    cmp    $0xffffffff,%eax
    je     jump_547e1
    mov    $0xee0,%ebx
    mov    $data_83515,%edx
    xor    %eax,%eax
    call   func_25888
  jump_547e1:
    movl   $0x0,0x3062(%edi)
    jmp    jump_52ad7
  jump_547f0:
    cmp    $0x1d,%ebx
    jb     jump_54bc2
    cmp    $0x20,%ebx
    jbe    jump_52b5f
    jmp    jump_54bc2
  jump_54807:
    cmp    $0xb,%ebx
    jb     jump_543b7
    cmp    $0xc,%ebx
    jbe    jump_52b5f
    mov    $data_83484,%ebx
    mov    $0xc0,%eax
    mov    $0x2,%edx
    call   func_73f9c
    test   %eax,%eax
    je     jump_54836
    call   func_55958
  jump_54836:
    call   func_2593c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_54850
    mov    $0xe83,%ebx
    mov    $data_8348b,%edx
    call   func_25878
  jump_54850:
    mov    %ecx,%eax
    call   func_559b8
    mov    %ecx,0x21d92(%edi)
    lea    0x20(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83499
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x8(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_8349f
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0xc(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834a5
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x10(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834ab
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x14(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834b1
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0xaf(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834b7
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0xb3(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834bd
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0xb7(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834c3
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0xbb(%ecx),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834c9
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x300(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_834cf
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x300(%esp),%edx
    mov    0x384(%esp),%eax
    call   func_1adac
    mov    %ax,0x18(%ecx)
    mov    0x300a(%edi),%eax
    mov    %eax,0x4(%ecx)
    mov    %eax,0xab(%ecx)
    jmp    jump_52ad7
  jump_5499c:
    cmp    $0x3,%ebx
    jb     jump_54aac
    jbe    jump_53b16
    cmp    $0x5,%ebx
    jb     jump_53f90
    cmp    $0x7,%ebx
    jbe    jump_52b5f
    mov    $data_83394,%ebx
    mov    $0x237,%eax
    mov    $0x2,%edx
    call   func_73f9c
    test   %eax,%eax
    je     jump_549da
    call   func_48d1c
  jump_549da:
    call   func_2593c
    mov    %eax,%edx
    mov    %eax,%ebp
    add    $0x20,%edx
    call   func_2c058
    push   %edx
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_83397
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_8339d
    push   %esi
    call   func_73431
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_833a0
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    $data_833a3,%edx
    lea    0x334(%esp),%eax
    call   func_72130
    test   %eax,%eax
    je     jump_54a77
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_54a68
    mov    $0xe16,%ebx
    mov    $data_833a8,%edx
    call   func_25878
  jump_54a68:
    mov    0x41(%ecx),%eax
    mov    %ebp,%edx
    mov    %eax,0x63(%ebp)
    mov    %ecx,%eax
    call   func_2c070
  jump_54a77:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_833b6
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x3a0(%esp),%ebx
    xor    %ecx,%ecx
    test   %bx,%bx
    jle    jump_54281
    jmp    jump_5421d
  jump_54aac:
    cmp    $0x1,%ebx
    jb     jump_54bba
    jbe    jump_534c7
    mov    $data_831ce,%ecx
    mov    $0x596,%eax
    mov    $0x2,%ebp
    call   func_73f9c
    mov    %eax,%ebx
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_54adc
    call   func_21b84
  jump_54adc:
    mov    %ecx,%ebx
    mov    %ebp,%edx
    call   func_2593c
    mov    %eax,%edx
    add    $0x20,%edx
    mov    %eax,%ebp
    call   func_2c058
    mov    0x21(%edx),%eax
    push   %edx
    mov    %eax,data_86a50
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_831d3
    push   %esi
    call   func_73431
    add    $0x10,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_831d9
    push   %esi
    call   func_73431
    add    $0xc,%esp
    lea    0x334(%esp),%eax
    push   %eax
    push   $data_831dc
    push   %esi
    call   func_73431
    add    $0xc,%esp
    mov    $data_831df,%edx
    lea    0x334(%esp),%eax
    call   func_72130
    test   %eax,%eax
    je     jump_54b85
    lea    0x334(%esp),%edx
    mov    %edi,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_54b76
    mov    $0xd36,%ebx
    mov    $data_831e4,%edx
    call   func_25878
  jump_54b76:
    mov    0x41(%ecx),%eax
    mov    %ebp,%edx
    mov    %eax,0x63(%ebp)
    mov    %ecx,%eax
    call   func_2c070
  jump_54b85:
    lea    0x3a0(%esp),%eax
    push   %eax
    lea    0x338(%esp),%eax
    push   %eax
    push   $data_831f2
    push   %esi
    call   func_73431
    add    $0x10,%esp
    mov    0x3a0(%esp),%ebx
    xor    %ecx,%ecx
    test   %bx,%bx
    jle    jump_5389f
    jmp    jump_53860
  jump_54bba:
    test   %ebx,%ebx
    je     jump_52b5f
  jump_54bc2:
    mov    $0xee7,%ebx
    mov    $data_83523,%edx
    xor    %eax,%eax
    call   func_25878
    jmp    jump_52ad7
  jump_54bd8:
    mov    %esi,%eax
    call   func_7280e
  jump_54bdf:
    add    $0x3bc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_54bec:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x118,%esp
    mov    %eax,%esi
    mov    %esp,%eax
    mov    $0x200,%ebx
    mov    $data_83531,%edx
    call   func_1bb78
    xor    %ecx,%ecx
    mov    %esp,%eax
    call   func_1bbfc
    test   %eax,%eax
    jne    jump_54c4a
    mov    $0x4,%ebx
    mov    $data_f884b,%edx
    mov    %esp,%eax
    call   func_1bf94
    mov    $0x4,%ebx
    mov    $data_f8863,%edx
    mov    %esp,%eax
    call   func_1bf94
    mov    $0x4,%ebx
    mov    %esp,%eax
    lea    0x24dac(%esi),%edx
    call   func_1bf94
  jump_54c4a:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x118,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_54c60:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x118,%esp
    mov    %eax,%ecx
    mov    %esp,%eax
    mov    $data_8353c,%edx
    call   func_1bb78
    mov    %esp,%eax
    call   func_1bca8
    test   %eax,%eax
    jne    jump_54cb6
    mov    $0x4,%ebx
    mov    $data_f884b,%edx
    mov    %esp,%eax
    call   func_1c098
    mov    $0x4,%ebx
    mov    $data_f8863,%edx
    mov    %esp,%eax
    call   func_1c098
    mov    $0x4,%ebx
    mov    %esp,%eax
    lea    0x24dac(%ecx),%edx
    call   func_1c098
  jump_54cb6:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x118,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_54ccc:
/*----------------------------------------------------------------*/
    mov    0x48a6(%eax),%edx
    test   %edx,%edx
    jne    jump_54cf5
    cmpl   $0x0,0x48aa(%eax)
    jne    jump_54cf5
    movl   $0xffffffff,0x48a6(%eax)
    mov    %edx,0x48ba(%eax)
    mov    %edx,0x48b6(%eax)
  jump_54cf5:
    ret


/*----------------------------------------------------------------*/
func_54cf8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ecx
    cmpl   $0xffffffff,0x48a6(%eax)
    je     jump_54d0e
    cmpl   $0xffffffff,0x48aa(%eax)
    jne    jump_54d47
  jump_54d0e:
    cmpl   $0xffffffff,0x48a6(%ecx)
    jne    jump_54d3d
    mov    %ecx,%eax
    movl   $0x0,0x48a6(%ecx)
    call   func_551a4
    test   %edx,%edx
    je     jump_54d3d
    mov    $data_83547,%ebx
    mov    $data_83554,%edx
    mov    %ecx,%eax
    call   func_5524c
  jump_54d3d:
    movl   $0x0,0x48aa(%ecx)
  jump_54d47:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_54d4c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    $data_12200c,%edi
    mov    %edx,%esi
    push   %edi
  jump_54d5a:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_54d72
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_54d5a
  jump_54d72:
    pop    %edi
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    mov    $data_12200c,%edi
    sub    $0x4,%ecx
    mov    $data_83561,%esi
    add    %ecx,%edi
    push   %edi
  jump_54d8d:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_54da5
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_54d8d
  jump_54da5:
    pop    %edi
    mov    data_c84d0,%eax
    mov    %eax,data_122000
    mov    data_c84d4,%eax
    mov    0x48a6(%ebp),%ecx
    mov    %eax,data_122004
    cmp    $0xffffffff,%ecx
    je     jump_54dce
    cmpl   $0xffffffff,0x48aa(%ebp)
    jne    jump_54dd5
  jump_54dce:
    xor    %eax,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_54dd5:
    mov    %ebp,%eax
    call   func_550c0
    test   %eax,%eax
    je     jump_54e11
    movl   $0xffffffff,0x48aa(%ebp)
    movl   $0x0,0x48b6(%ebp)
    mov    $0xffffffff,%eax
    movl   $0x0,0x48be(%ebp)
    xor    %edi,%edi
    mov    %ebx,0x48ae(%ebp)
    mov    %edi,data_122008
  jump_54e11:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_54e18:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ecx
    cmpl   $0x0,0x48aa(%eax)
    je     jump_54f39
    mov    data_c84ec,%eax
    mov    %eax,(%esp)
    mov    data_122000,%eax
    mov    %eax,data_c84d0
    mov    data_122004,%eax
    mov    $0xffffffff,%edi
    mov    %eax,data_c84d4
    mov    $data_c849c,%eax
    mov    data_c84f0,%ebp
    call   func_25c4c
    cmp    data_c84a0,%edi
    je     jump_54e94
    cmp    data_c84dc,%edi
    jne    jump_54e7a
    cmpl   $0x0,data_c84d0
    jne    jump_54e94
  jump_54e7a:
    cmpl   $0xffffffff,data_c84e0
    jne    jump_54f0b
    cmpl   $0x0,data_c84d4
    je     jump_54f0b
  jump_54e94:
    mov    data_c84ec,%eax
    movl   $0x0,0x48aa(%ecx)
    mov    data_c84f0,%ebp
    mov    0x489e(%ecx),%esi
    mov    %eax,(%esp)
    xor    %eax,%eax
    test   %esi,%esi
    jne    jump_54ee2
    mov    $data_83566,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    $data_83571,%ebx
    mov    $data_83578,%edx
    mov    %eax,%esi
    call   func_2f390
    mov    %esi,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_506bc
  jump_54ee2:
    test   %eax,%eax
    jne    jump_54ef2
    movl   $0xffffffff,0x48aa(%ecx)
    jmp    jump_54f0b
  jump_54ef2:
    xor    %eax,%eax
    call   func_7366c
    call   func_736c3
    xor    %edi,%edi
    mov    data_86a60,%eax
    mov    %eax,0x24dac(%ecx)
  jump_54f0b:
    test   %edi,%edi
    je     jump_54f25
    mov    (%esp),%eax
    xor    %edi,%edi
    mov    %ebp,data_c84f0
    mov    %edi,data_c84e8
    mov    %eax,data_c84ec
  jump_54f25:
    mov    data_c84d0,%eax
    mov    %eax,data_122000
    mov    data_c84d4,%eax
    mov    %eax,data_122004
  jump_54f39:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_54f44:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    lea    0x48c2(%eax),%esi
    xor    %edx,%edx
    xor    %edi,%edi
    mov    %edx,data_c84dc
    mov    %edx,data_c84e0
    mov    %edx,data_c84e8
    mov    %edx,data_c84a0
  jump_54f6e:
    imul   $0x18,0x48be(%ecx),%eax
    mov    0x48b6(%ecx),%ebx
    cmp    0x48c2(%ecx,%eax,1),%ebx
    jae    jump_54fe4
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_54f8b:
    call   func_25c88
    jmp    jump_54ffc
  jump_54f92:
    mov    0x10(%eax),%ebp
    push   %ebp
    mov    0xc(%eax),%edx
    push   %edx
    mov    0x8(%eax),%edx
    sar    $0x10,%edx
    push   %edx
    mov    0x4(%eax),%ebx
    mov    0x6(%eax),%eax
    push   %ebx
    sar    $0x10,%eax
    push   %eax
    mov    0x48ba(%ecx),%ebp
    push   %ebp
    mov    0x48be(%ecx),%eax
    push   %eax
    push   $data_83581
    push   $data_86500
    call   func_720c9
    add    $0x24,%esp
    mov    $data_835c8,%edx
    mov    $0x1006,%ebx
    call   func_2592c
    mov    %edi,%eax
    call   func_25888
    jmp    jump_54ffc
  jump_54fe4:
    add    %esi,%eax
    mov    0x8(%eax),%dx
    cmp    $0x1,%dx
    jb     jump_54f92
    cmp    $0x3,%dx
    jbe    jump_54f8b
    cmp    $0x7,%dx
    ja     jump_54f92
  jump_54ffc:
    mov    0x48be(%ecx),%edx
    inc    %edx
    mov    0x48ba(%ecx),%ebx
    mov    %edx,0x48be(%ecx)
    cmp    %ebx,%edx
    jl     jump_54f6e
    cmpl   $0xffffffff,0x48ae(%ecx)
    je     jump_55030
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_54cf8
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_55030:
    mov    %edi,0x48be(%ecx)
    mov    %edi,0x48b6(%ecx)
    jmp    jump_54f6e


/*----------------------------------------------------------------*/
func_55044:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %edx,%edi
    cmpl   $0xffffffff,0x48a6(%eax)
    jne    jump_550b8
    cmpl   $0x0,0x48aa(%eax)
    jne    jump_550b8
    mov    0x48ba(%eax),%esi
    lea    0x0(,%esi,4),%edx
    sub    %esi,%edx
    shl    $0x3,%edx
    lea    0x48c2(%eax),%esi
    add    %esi,%edx
    mov    0x48b6(%eax),%esi
    mov    %esi,(%edx)
    mov    %edi,0x4(%edx)
    mov    %bx,0x8(%edx)
    mov    %cx,0xa(%edx)
    mov    0xc(%esp),%esi
    mov    %esi,0xc(%edx)
    mov    0x10(%esp),%esi
    mov    %esi,0x10(%edx)
    mov    0x14(%esp),%esi
    mov    %esi,0x14(%edx)
    mov    0x48ba(%eax),%edi
    inc    %edi
    mov    %edi,0x48ba(%eax)
    cmp    $0x1388,%edi
    jne    jump_550b8
    xor    %edx,%edx
    call   func_54cf8
  jump_550b8:
    pop    %edi
    pop    %esi
    ret    $0xc


/*----------------------------------------------------------------*/
func_550c0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    sub    $0x118,%esp
    mov    %eax,%esi
    mov    %esp,%eax
    call   func_1bb78
    cmpl   $0xffffffff,0x48a6(%esi)
    jne    jump_550eb
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    xor    %ebx,%ebx
    jmp    jump_55195
  jump_550eb:
    mov    $0x200,%ebx
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_1bbfc
    test   %eax,%eax
    je     jump_5510e
    mov    $0x1044,%ebx
    mov    $data_835d6,%edx
    xor    %eax,%eax
    call   func_25888
  jump_5510e:
    mov    %esp,%eax
    call   func_1be28
    cmp    $0x1d4d0,%eax
    jbe    jump_5512d
    mov    $0x1047,%ebx
    mov    $data_835e4,%edx
    xor    %eax,%eax
    call   func_25878
  jump_5512d:
    mov    $0x10,%ebx
    mov    %esp,%eax
    lea    0x21d82(%esi),%edx
    call   func_1bf94
    mov    $0x1d4c0,%ebx
    mov    %esp,%eax
    lea    0x48c2(%esi),%edx
    mov    $0x18,%ecx
    call   func_1bf94
    xor    %edx,%edx
    mov    %eax,%ebx
    div    %ecx
    xor    %edx,%edx
    mov    %eax,0x48ba(%esi)
    mov    %ebx,%eax
    div    %ecx
    test   %edx,%edx
    je     jump_5517d
    mov    $0x104e,%ebx
    mov    $data_835f2,%edx
    xor    %eax,%eax
    call   func_25888
  jump_5517d:
    mov    $0xffffffff,%ebx
    mov    %esp,%eax
    xor    %edx,%edx
    movl   $0x0,0x48be(%esi)
    call   func_1bbc8
  jump_55195:
    mov    %ebx,%eax
    add    $0x118,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_551a4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x118,%esp
    mov    %eax,%esi
    mov    %esp,%eax
    call   func_1bb78
    cmpl   $0xffffffff,0x48a6(%esi)
    je     jump_55219
    mov    $0x21,%ebx
    mov    $data_83600,%edx
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_1bbfc
    test   %eax,%eax
    je     jump_551e8
    mov    $0x1061,%ebx
    mov    $data_8360d,%edx
    xor    %eax,%eax
    call   func_25888
  jump_551e8:
    mov    $0x10,%ebx
    mov    %esp,%eax
    lea    0x21d82(%esi),%edx
    call   func_1c098
    mov    0x48ba(%esi),%edx
    lea    0x0(,%edx,4),%ebx
    sub    %edx,%ebx
    mov    %esp,%eax
    shl    $0x3,%ebx
    lea    0x48c2(%esi),%edx
    call   func_1c098
  jump_55219:
    mov    %esp,%eax
    xor    %edx,%edx
    call   func_1bbc8
    add    $0x118,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_55230:
    .long   func_552c5
    .long   func_552f1
    .long   func_5533b
    .long   func_5536a
    .long   func_5536a
    .long   func_553b6
    .long   func_553b6


/*----------------------------------------------------------------*/
func_5524c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%eax
    cmpl   $0x0,0x48a6(%esi)
    jne    jump_5544e
    cmpl   $0x0,0x48aa(%esi)
    jne    jump_5544e
    mov    $data_8361b,%edx
    call   func_7331e
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_55294
    mov    $0x1072,%ebx
    mov    $data_8361d,%edx
    call   func_25888
  jump_55294:
    mov    %edi,%edx
    mov    %esi,%eax
    call   func_550c0
    cmp    $0xffffffff,%eax
    je     jump_552b3
    mov    $0x1075,%ebx
    mov    $data_8362b,%edx
    xor    %eax,%eax
    call   func_25888
  jump_552b3:
    lea    0x48c2(%esi),%eax
    xor    %ebx,%ebx
    mov    %eax,-0x4(%ebp)
    xor    %edi,%edi
    jmp    jump_5541c


/*----------------------------------------------------------------*/
func_552c5:
/*----------------------------------------------------------------*/
    mov    (%edx),%eax
    push   %eax
    push   $data_83639
    push   %ecx
    call   func_73aaa
    add    $0xc,%esp
    mov    0x10(%edx),%eax
    push   %eax
    mov    0xc(%edx),%eax
    push   %eax
    push   $data_8365b
    push   %ecx
    call   func_73aaa
    add    $0x10,%esp
    jmp    jump_5541b


/*----------------------------------------------------------------*/
func_552f1:
/*----------------------------------------------------------------*/
    mov    (%edx),%eax
    push   %eax
    push   $data_83672
    push   %ecx
    call   func_73aaa
    mov    0x10(%edx),%eax
    add    $0xc,%esp
    cmp    %eax,%edi
    je     jump_55310
    mov    $data_83695,%eax
    jmp    jump_55315
  jump_55310:
    mov    $data_8369a,%eax
  jump_55315:
    push   %eax
    cmp    0xc(%edx),%edi
    je     jump_55322
    mov    $data_8369d,%eax
    jmp    jump_55327
  jump_55322:
    mov    $data_836a3,%eax
  jump_55327:
    push   %eax
    push   $data_836a8
    push   %ecx
    call   func_73aaa
    add    $0x10,%esp
    jmp    jump_5541b


/*----------------------------------------------------------------*/
func_5533b:
/*----------------------------------------------------------------*/
    mov    (%edx),%eax
    push   %eax
    push   $data_836b6
    push   %ecx
    call   func_73aaa
    add    $0xc,%esp
    mov    0xc(%edx),%eax
    push   %eax
    mov    0xd(%edx),%eax
    sar    $0x18,%eax
    push   %eax
    push   $data_836d8
    push   %ecx
    call   func_73aaa
    add    $0x10,%esp
    jmp    jump_5541b


/*----------------------------------------------------------------*/
func_5536a:
/*----------------------------------------------------------------*/
    mov    0x6(%edx),%eax
    sar    $0x10,%eax
    cmp    $0x4,%eax
    jne    jump_5537c
    mov    $data_836e7,%eax
    jmp    jump_55381
  jump_5537c:
    mov    $data_836f4,%eax
  jump_55381:
    push   %eax
    mov    (%edx),%eax
    push   %eax
    push   $data_83701
    push   %ecx
    call   func_73aaa
    add    $0x10,%esp
    mov    0x10(%edx),%eax
    push   %eax
    mov    0xc(%edx),%eax
    push   %eax
    mov    0x8(%edx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4(%edx),%eax
    push   %eax
    push   $data_83717
    push   %ecx
    call   func_73aaa
    add    $0x18,%esp
    jmp    jump_5541b


/*----------------------------------------------------------------*/
func_553b6:
/*----------------------------------------------------------------*/
    mov    0x6(%edx),%eax
    sar    $0x10,%eax
    cmp    $0x6,%eax
    jne    jump_553c8
    mov    $data_83740,%eax
    jmp    jump_553cd
  jump_553c8:
    mov    $data_8374f,%eax
  jump_553cd:
    push   %eax
    mov    (%edx),%eax
    push   %eax
    push   $data_8375e
    push   %ecx
    call   func_73aaa
    add    $0x10,%esp
    mov    0x14(%edx),%eax
    push   %eax
    mov    0x10(%edx),%eax
    push   %eax
    mov    0xc(%edx),%eax
    push   %eax
    mov    0x8(%edx),%eax
    sar    $0x10,%eax
    push   %eax
    mov    0x4(%edx),%eax
    push   %eax
    push   $data_83774
    push   %ecx
    call   func_73aaa
    add    $0x1c,%esp
    jmp    jump_5541b
  jump_55406:
    mov    0x6(%edx),%eax
    sar    $0x10,%eax
    push   %eax
    push   $data_837a5
    push   %ecx
    call   func_73aaa
    add    $0xc,%esp
  jump_5541b:
    inc    %ebx
  jump_5541c:
    movswl %bx,%eax
    cmp    0x48ba(%esi),%eax
    jge    jump_55447
    imul   $0x18,%eax,%eax
    mov    -0x4(%ebp),%edx
    add    %eax,%edx
    mov    0x8(%edx),%ax
    dec    %eax
    cmp    $0x6,%ax
    ja     jump_55406
    and    $0xffff,%eax
    jmp    *%cs:vtable_55230(,%eax,4)
  jump_55447:
    mov    %ecx,%eax
    call   func_7280e
  jump_5544e:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_55458:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,(%esp)
    mov    %ecx,%ebp
    mov    0x24d94(%eax),%eax
    sar    $0x10,%eax
    cmp    $0x180,%eax
    jne    jump_55488
    mov    $0x10c0,%ebx
    mov    $data_837c8,%edx
    xor    %eax,%eax
    call   func_25888
  jump_55488:
    xor    %edx,%edx
    jmp    jump_5548d
  jump_5548c:
    inc    %edx
  jump_5548d:
    movswl %dx,%eax
    cmp    $0x180,%eax
    jge    jump_554f0
    shl    $0x5,%eax
    lea    (%esi,%eax,1),%ecx
    cmpl   $0x0,0x21db2(%ecx)
    jne    jump_5548c
    mov    (%esp),%edx
    mov    %edi,0x21db2(%ecx)
    lea    0x21d96(%esi),%edi
    mov    $0x13,%ebx
    add    %edi,%eax
    mov    %edx,0x21d96(%ecx)
    lea    0x8(%eax),%edi
    mov    %ebp,%edx
    mov    %edi,%eax
    call   func_72b40
    mov    %edi,%eax
    movb   $0x0,0x21db1(%ecx)
    call   func_73fe7
    mov    data_122044,%eax
    mov    %eax,0x21d9a(%ecx)
    incw   0x24d96(%esi)
    jmp    jump_55501
  jump_554f0:
    mov    $0x10d2,%ebx
    mov    $data_837d6,%edx
    xor    %eax,%eax
    call   func_25878
  jump_55501:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_55508:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   %edx,%edx
    je     jump_55553
    xor    %edx,%edx
    jmp    jump_55517
  jump_55516:
    inc    %edx
  jump_55517:
    movswl %dx,%eax
    cmp    $0x180,%eax
    jge    jump_55542
    shl    $0x5,%eax
    add    %ebx,%eax
    cmp    0x21db2(%eax),%ecx
    jne    jump_55516
    movl   $0x0,0x21db2(%eax)
    decw   0x24d96(%ebx)
    pop    %ecx
    pop    %ebx
    ret
  jump_55542:
    mov    $0x10e6,%ebx
    mov    $data_837e4,%edx
    xor    %eax,%eax
    call   func_25888
  jump_55553:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_55558:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %edx,%edi
    mov    0x24d96(%esi),%dx
    xor    %eax,%eax
    test   %dx,%dx
    jg     jump_55578
    jmp    jump_555bd
  jump_5556e:
    inc    %eax
    cmp    0x24d96(%esi),%ax
    jge    jump_555bd
  jump_55578:
    movswl %ax,%edx
    shl    $0x5,%edx
    add    %esi,%edx
    cmp    0x21db2(%edx),%edi
    jne    jump_5556e
    test   %ebx,%ebx
    je     jump_55594
    mov    0x21d96(%edx),%edx
    mov    %edx,(%ebx)
  jump_55594:
    test   %ecx,%ecx
    je     jump_555a7
    movswl %ax,%edx
    shl    $0x5,%edx
    mov    0x21d9a(%edx,%esi,1),%edx
    mov    %edx,(%ecx)
  jump_555a7:
    movswl %ax,%edx
    add    $0x21d96,%esi
    shl    $0x5,%edx
    add    %esi,%edx
    add    $0x8,%edx
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    ret
  jump_555bd:
    xor    %edx,%edx
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_55634:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    0x24da4(%esi),%edi
    xor    %eax,%eax
    test   %edi,%edi
    je     jump_55649
    cmp    $0xffffffff,%ecx
    jne    jump_55653
  jump_55649:
    mov    $data_c84f8,%eax
    call   func_2beb0
  jump_55653:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_55658:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    %eax,%ecx
    add    $0x3000,%eax
    mov    %eax,(%esp)
    jmp    jump_5567d
  jump_5566f:
    mov    (%esp),%edx
    add    $0xc,%ecx
    cmp    %edx,%ecx
    je     jump_521d2
  jump_5567d:
    cmpl   $0x0,(%ecx)
    je     jump_5566f
    mov    0x4(%ecx),%eax
    mov    0xa7(%eax),%ebp
    mov    %edi,%ebx
    mov    %esi,%edx
    call   *0x14(%ebp)
    jmp    jump_5566f

vtable_55694:
    .long   func_556fe
    .long   func_557e5
    .long   func_55719
    .long   func_557e5
    .long   func_5583b
    .long   func_5583b
    .long   func_55734
    .long   func_5574f
    .long   func_5576a
    .long   func_557e5
    .long   func_5583b
    .long   func_55785
    .long   func_5579d
    .long   func_557e5
    .long   func_557e5
    .long   func_557b5
    .long   func_5583b
    .long   func_557e5
    .long   func_5583b
    .long   func_557cd


/*----------------------------------------------------------------*/
func_556e4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    dec    %eax
    cmp    $0x13,%ax
    ja     func_5583b
    and    $0xffff,%eax
    jmp    *%cs:vtable_55694(,%eax,4)


/*----------------------------------------------------------------*/
func_556fe:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_837f2,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_557fb


/*----------------------------------------------------------------*/
func_55719:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_83804,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_557fb


/*----------------------------------------------------------------*/
func_55734:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_83815,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_557fb


/*----------------------------------------------------------------*/
func_5574f:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_83827,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_557fb


/*----------------------------------------------------------------*/
func_5576a:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_83839,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_557fb


/*----------------------------------------------------------------*/
func_55785:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_8384b,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_557fb


/*----------------------------------------------------------------*/
func_5579d:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_8385c,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_557fb


/*----------------------------------------------------------------*/
func_557b5:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_8386d,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_557fb


/*----------------------------------------------------------------*/
func_557cd:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_8387f,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %eax,%ecx
    jmp    jump_557fb


/*----------------------------------------------------------------*/
func_557e5:
/*----------------------------------------------------------------*/
    mov    $0xffffffff,%ebx
    mov    $data_8388e,%edx
    mov    $data_11f10c,%eax
    call   func_1b270
    mov    %eax,%ecx
  jump_557fb:
    xor    %eax,%eax
    mov    %cx,%ax
    cmp    $0xffff,%eax
    jne    jump_55818
    mov    $0x115d,%ebx
    mov    $data_838a0,%edx
    xor    %eax,%eax
    call   func_25878
  jump_55818:
    push   $0x0
    push   $0x0
    xor    %edx,%edx
    push   $0x0
    mov    $data_11f10c,%eax
    mov    %cx,%dx
    call   func_1b084
    push   %eax
    push   $data_c850c
    call   func_57efc
    add    $0x14,%esp


/*----------------------------------------------------------------*/
func_5583b:
/*----------------------------------------------------------------*/
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_55840:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,%ebp
    mov    data_86a68(,%ebx,2),%bx
    mov    $0xf2,%eax
    mov    %bx,(%esp)
    cmp    $0xffffffff,%ecx
    jne    jump_55865
    mov    $0x96,%eax
  jump_55865:
    movswl %ax,%ebx
    push   %ebx
    push   %esi
    call   func_59d90
    add    $0x8,%esp
    push   $0x0
    mov    $data_fd3aa,%edi
    mov    0x2(%esp),%ebx
    push   $0xff
    sar    $0x10,%ebx
    mov    $data_fd3a2,%eax
    push   %ebx
    mov    %ebp,%ecx
    mov    $0x1,%ebx
    push   $0x40
    mov    %ebx,%edx
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_2af88
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_558a8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x24,%esp
    mov    %eax,%ebp
    push   %edx
    push   $data_838ae
    lea    0x1c(%esp),%eax
    push   %eax
    mov    $0xf3,%ebx
    mov    %edx,0x2c(%esp)
    call   func_720c9
    mov    $0xf2,%eax
    mov    data_121ffc,%esi
    add    $0xc,%esp
    cmp    %esi,%edx
    jne    jump_558e2
    mov    $0xfe,%eax
    xor    %ebx,%ebx
  jump_558e2:
    test   %ecx,%ecx
    je     jump_558eb
    mov    $0xf1,%eax
  jump_558eb:
    push   $0x0
    lea    0x18(%esp),%ecx
    mov    $data_fd3aa,%edi
    cwtl
    mov    %ebp,%esi
    push   %eax
    movswl %bx,%eax
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    push   %eax
    lea    0xc(%esp),%edi
    mov    $0x1,%ebx
    push   $0x40
    mov    $data_fd3a2,%eax
    mov    %ebx,%edx
    mov    %ebp,%esi
    call   func_2af88
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    mov    %esp,%eax
    mov    0x20(%esp),%edi
    mov    0x4(%esp),%ebp
    mov    0x10(%esp),%edx
    push   %edi
    add    $0x23,%ebp
    dec    %edx
    push   %eax
    mov    0x10(%esp),%eax
    mov    %ebp,0xc(%esp)
    inc    %eax
    mov    %edx,0x18(%esp)
    mov    %eax,0x10(%esp)
    call   func_59d90
    add    $0x8,%esp
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_55958:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_2bf10
    mov    %eax,%edx
    movl   $data_86044,0xa7(%eax)
    mov    %edx,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_55970:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_5598f
    mov    $data_85ff4,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_5598f:
    mov    $0x1,%edx
    movl   $data_86044,0xa7(%eax)
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_559af
    call   func_72124
  jump_559af:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    nop
    ret


/*----------------------------------------------------------------*/
func_559b8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    mov    %eax,%edx
    mov    $data_fa35c,%eax
    call   func_5257c
    mov    %eax,0x41(%ebx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_559d0:
/*----------------------------------------------------------------*/
    push   %esi
    mov    %eax,%esi
    mov    %edx,%eax
    mov    %ebx,%edx
    cmp    $0x3eb,%ax
    jb     jump_55d84
    jbe    jump_55b2f
    cmp    $0x3ee,%ax
    jb     jump_55d0a
    jbe    jump_55c0f
    cmp    $0x3f1,%ax
    jb     jump_55dc8
    jbe    jump_55cb7
    cmp    $0x1c01,%ax
    je     jump_55c7f
    xor    %eax,%eax
    pop    %esi
    ret
  jump_55a15:
    cwtl
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_2eb04
    pop    %esi
    ret
  jump_55a23:
    mov    $data_838b3,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    movb   $0x0,0xbf(%esi)
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_55a50
    mov    $0x11c6,%ebx
    mov    $data_838be,%edx
    call   func_25878
  jump_55a50:
    mov    %ecx,%eax
    mov    $func_55840,%edx
    call   func_2e42c
    mov    %ecx,%eax
    movl   $0xffffffff,0xab(%ecx)
    call   func_2e8a8
    cmpl   $0x0,0x8e6(%ecx)
    jne    jump_55a97
    mov    $0x2000,%edx
    mov    %ecx,%eax
    xor    %ebx,%ebx
    call   func_2e908
    test   %eax,%eax
    jne    jump_55a97
    mov    $0x11ce,%ebx
    mov    $data_838cc,%edx
    call   func_25878
  jump_55a97:
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_5622c
    xor    %eax,%eax
    pop    %esi
    ret
  jump_55aa4:
    mov    $0x6,%edx
    movswl %ax,%ebx
    xor    %ecx,%ecx
    mov    $data_fa35c,%eax
    call   func_51f24
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_55abf:
    cmpb   $0x0,0xbf(%esi)
    je     jump_55b28
    mov    $data_838da,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    movb   $0x0,0xbf(%esi)
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_55af5
    mov    $0x11e5,%ebx
    mov    $data_838e5,%edx
    call   func_25878
  jump_55af5:
    mov    $func_55840,%edx
    mov    %ecx,%eax
    movl   $0xffffffff,0xab(%ecx)
    call   func_2e8a8
    mov    %ecx,%eax
    call   func_2e42c
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_5622c
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_55b28:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_55b2f:
    cmpb   $0x1,0xbf(%esi)
    je     jump_55b98
    mov    $data_838f3,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    movb   $0x1,0xbf(%esi)
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_55b65
    mov    $0x11f9,%ebx
    mov    $data_838fe,%edx
    call   func_25878
  jump_55b65:
    mov    $func_55840,%edx
    mov    %ecx,%eax
    movl   $0xffffffff,0xab(%ecx)
    call   func_2e8a8
    mov    %ecx,%eax
    call   func_2e42c
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_55ef0
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_55b98:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_55b9f:
    cmpb   $0x2,0xbf(%esi)
    je     jump_55c08
    mov    $data_8390c,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    movb   $0x2,0xbf(%esi)
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_55bd5
    mov    $0x120d,%ebx
    mov    $data_83917,%edx
    call   func_25878
  jump_55bd5:
    mov    $func_55840,%edx
    mov    %ecx,%eax
    movl   $0xffffffff,0xab(%ecx)
    call   func_2e8a8
    mov    %ecx,%eax
    call   func_2e42c
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_562f4
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_55c08:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_55c0f:
    cmpb   $0x4,0xbf(%esi)
    je     jump_55c78
    mov    $data_8393e,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    movb   $0x4,0xbf(%esi)
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_55c45
    mov    $0x1233,%ebx
    mov    $data_83949,%edx
    call   func_25878
  jump_55c45:
    mov    $func_55840,%edx
    mov    %ecx,%eax
    movl   $0xffffffff,0xab(%ecx)
    call   func_2e8a8
    mov    %ecx,%eax
    call   func_2e42c
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_56608
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_55c78:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_55c7f:
    mov    0xbf(%esi),%ah
    cmp    $0x3,%ah
    jne    jump_55c9c
    cmp    $0x5,%ecx
    jne    jump_55cb0
    mov    data_fd36e,%eax
    mov    %bl,0xf2(%eax)
    jmp    jump_55cb0
  jump_55c9c:
    cmp    $0x4,%ah
    jne    jump_55cb0
    mov    $data_f8638,%eax
    movswl %bx,%edx
    xor    %ebx,%ebx
    call   func_4acbc
  jump_55cb0:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_55cb7:
    cmpb   $0x3,0xbf(%esi)
    jne    jump_55d03
    mov    $data_83957,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_55ce6
    mov    $0x1257,%ebx
    mov    $data_83962,%edx
    call   func_25878
  jump_55ce6:
    xor    %edx,%edx
    mov    %ecx,%eax
    mov    data_121ffc,%dx
    call   func_2e3bc
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_55d03:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_55d0a:
    cmp    $0x3ec,%ax
    jbe    jump_55b9f
    cmpb   $0x3,0xbf(%esi)
    je     jump_55d7d
    mov    $data_83925,%edx
    mov    $data_fa35c,%eax
    xor    %ebx,%ebx
    movb   $0x3,0xbf(%esi)
    call   func_5216c
    mov    %eax,%ecx
    test   %eax,%eax
    jne    jump_55d4a
    mov    $0x1220,%ebx
    mov    $data_83930,%edx
    call   func_25878
  jump_55d4a:
    mov    $func_558a8,%edx
    mov    %ecx,%eax
    movl   $0x0,0xab(%ecx)
    call   func_2e8a8
    mov    %ecx,%eax
    call   func_2e42c
    mov    %ecx,%edx
    mov    %esi,%eax
    call   func_565c4
    mov    0xa7(%esi),%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    call   *0xc(%ebx)
  jump_55d7d:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_55d84:
    cmp    $0xc8,%ax
    jb     jump_55da8
    jbe    jump_55a23
    cmp    $0xca,%ax
    jbe    jump_55aa4
    cmp    $0x3ea,%ax
    je     jump_55abf
    xor    %eax,%eax
    pop    %esi
    ret
  jump_55da8:
    cmp    $0x1,%ax
    jb     jump_55dc8
    cmp    $0x2,%ax
    jbe    jump_55a15
    cmp    $0x6,%ax
    jb     jump_55dc8
    cmp    $0x7,%ax
    jbe    jump_55a15
  jump_55dc8:
    xor    %eax,%eax
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_55dcc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x18,%esp
    mov    %eax,-0x4(%ebp)
    push   $0x0
    push   $0x0
    mov    0x18(%eax),%ax
    xor    %edx,%edx
    push   $0x0
    mov    %ax,%dx
    mov    $data_11f10c,%eax
    call   func_1b084
    push   %eax
    mov    -0x4(%ebp),%eax
    add    $0x4,%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    mov    -0x4(%ebp),%eax
    push   $0xf2
    add    $0xab,%eax
    push   %eax
    call   func_59d90
    mov    -0x4(%ebp),%eax
    mov    0xbf(%eax),%dl
    add    $0x8,%esp
    test   %dl,%dl
    jne    jump_55e2c
    mov    $data_83970,%esi
    jmp    jump_55e49
  jump_55e2c:
    cmp    $0x1,%dl
    jne    jump_55e38
    mov    $data_8397b,%esi
    jmp    jump_55e49
  jump_55e38:
    cmp    $0x2,%dl
    jne    jump_55e44
    mov    $data_83986,%esi
    jmp    jump_55e49
  jump_55e44:
    mov    $data_83991,%esi
  jump_55e49:
    lea    -0x18(%ebp),%edi
    push   %edi
  jump_55e4d:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_55e65
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_55e4d
  jump_55e65:
    pop    %edi
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%ecx
    mov    -0x4(%ebp),%ebx
    mov    -0x4(%ebp),%edx
    mov    0xb3(%eax),%eax
    mov    0xb7(%ecx),%ecx
    add    $0x32,%eax
    mov    0xb3(%ebx),%ebx
    push   %eax
    mov    0xaf(%edx),%edx
    mov    $data_fd3a2,%eax
    call   func_2aac0
    push   $0x0
    push   $0xffffffff
    push   $0xffffffff
    lea    -0x18(%ebp),%ecx
    mov    $0x1,%ebx
    push   $0x0
    mov    $data_fd3a2,%eax
    mov    %ebx,%edx
    call   func_2af88
    mov    -0x4(%ebp),%eax
    xor    %edx,%edx
    call   func_2c8f8
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_55ec8:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x6,%ebx
    mov    (%edx),%edx
    mov    (%eax),%eax
    call   func_73d7a
    pop    %ebx
    ret

vtable_55edc:
    .long   func_56073
    .long   func_55fbd
    .long   func_56017
    .long   func_56073
    .long   func_56073


/*----------------------------------------------------------------*/
func_55ef0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x84,%esp
    mov    %edx,%esi
    movb   $0x1,0xbf(%eax)
    call   func_735e2
    xor    %edx,%edx
    xor    %ebp,%ebp
    xor    %ebx,%ebx
    xor    %ecx,%ecx
    xor    %edi,%edi
    mov    %edx,0x6c(%esp)
    mov    %edx,0x68(%esp)
    mov    %edx,0x70(%esp)
    mov    %bx,0x78(%esp)
    mov    %cx,0x7c(%esp)
    xor    %edx,%edx
    mov    %di,0x80(%esp)
    mov    %dx,0x74(%esp)
    test   %eax,%eax
    je     jump_55f4d
    mov    $0x129e,%ebx
    mov    $data_8399c,%edx
    xor    %eax,%eax
    call   func_25878
  jump_55f4d:
    xor    %eax,%eax
    xor    %edi,%edi
    mov    %ax,0x54(%esp)
    mov    %edi,0x50(%esp)
  jump_55f5a:
    lea    0x50(%esp),%eax
    call   func_74006
    test   %eax,%eax
    jne    jump_560e8
    cmpl   $0x0,0x5a(%esp)
    jne    jump_560df
    mov    0x50(%esp),%edi
    lea    0x64(%esp),%ecx
    lea    0x60(%esp),%ebx
    add    $0x4,%edi
    mov    $data_fa35c,%eax
    mov    %edi,%edx
    call   func_55558
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_560cd
    incw   0x80(%esp)
  jump_55fa3:
    mov    0x56(%esp),%eax
    mov    0x6c(%esp),%edx
    mov    0x7c(%esp),%edi
    add    %eax,%edx
    inc    %edi
    mov    %edx,0x6c(%esp)
    mov    %di,0x7c(%esp)
    jmp    jump_55f5a


/*----------------------------------------------------------------*/
func_55fbd:
/*----------------------------------------------------------------*/
    add    $0x20,%edi
    push   %edi
    mov    0x5a(%esp),%eax
    push   %eax
    mov    0x6c(%esp),%edx
    push   %edx
    push   $data_839aa
    lea    0x10(%esp),%eax
    push   %eax
    mov    $0xffffffff,%ebx
    xor    %ecx,%ecx
    call   func_720c9
    add    $0x14,%esp
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_2e16c
    xor    %edx,%edx
    mov    0x60(%esp),%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    mov    0x74(%esp),%ecx
    call   func_2e330
    mov    0x56(%esp),%eax
    mov    0x68(%esp),%ebx
    inc    %ecx
    add    %eax,%ebx
    mov    %cx,0x74(%esp)
    mov    %ebx,0x68(%esp)
    jmp    jump_55fa3


/*----------------------------------------------------------------*/
func_56017:
/*----------------------------------------------------------------*/
    push   %eax
    mov    0x5a(%esp),%ebx
    push   %ebx
    mov    0x6c(%esp),%ecx
    push   %ecx
    push   $data_839bf
    lea    0x10(%esp),%eax
    push   %eax
    lea    0x14(%esp),%edx
    mov    $0xffffffff,%ebx
    call   func_720c9
    add    $0x14,%esp
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_2e16c
    xor    %edx,%edx
    mov    0x60(%esp),%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    mov    0x70(%esp),%edi
    call   func_2e330
    mov    0x56(%esp),%eax
    mov    0x78(%esp),%ebx
    add    %eax,%edi
    inc    %ebx
    mov    %edi,0x70(%esp)
    mov    %bx,0x78(%esp)
    jmp    jump_55fa3


/*----------------------------------------------------------------*/
func_56073:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    0x5a(%esp),%ecx
    push   %ecx
    mov    0x6c(%esp),%edi
    push   %edi
    push   $data_839cf
    lea    0x10(%esp),%eax
    push   %eax
    lea    0x14(%esp),%edx
    mov    $0xffffffff,%ebx
    call   func_720c9
    add    $0x14,%esp
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_2e16c
    xor    %edx,%edx
    mov    0x60(%esp),%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2e330
    jmp    jump_55fa3
  jump_560b7:
    mov    $0x12d8,%ebx
    mov    $data_839df,%edx
    xor    %eax,%eax
    call   func_25888
    jmp    jump_55fa3
  jump_560cd:
    mov    0x60(%esp),%edx
    dec    %edx
    cmp    $0x4,%edx
    ja     jump_560b7
    jmp    *%cs:vtable_55edc(,%edx,4)
  jump_560df:
    add    0x56(%esp),%ebp
    jmp    jump_55f5a
  jump_560e8:
    mov    0x68(%esp),%ebx
    mov    0x72(%esp),%eax
    push   %ebx
    sar    $0x10,%eax
    push   %eax
    push   $data_839ed
    lea    0xc(%esp),%eax
    push   %eax
    lea    0x10(%esp),%edx
    xor    %ecx,%ecx
    call   func_720c9
    add    $0x10,%esp
    mov    $0xffffffff,%ebx
    mov    %esi,%eax
    call   func_2e16c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    mov    0x70(%esp),%ecx
    call   func_2e330
    mov    0x76(%esp),%eax
    push   %ecx
    sar    $0x10,%eax
    push   %eax
    push   $data_83a08
    lea    0xc(%esp),%eax
    push   %eax
    mov    $0xffffffff,%ebx
    lea    0x10(%esp),%edx
    call   func_720c9
    add    $0x10,%esp
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_2e16c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    mov    0x6c(%esp),%edi
    call   func_2e330
    mov    0x7a(%esp),%eax
    push   %edi
    sar    $0x10,%eax
    push   %eax
    push   $data_83a25
    lea    0xc(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
    mov    $0xffffffff,%ebx
    mov    %esp,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_2e16c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2e330
    mov    0x7e(%esp),%eax
    sar    $0x10,%eax
    push   %eax
    push   $data_83a47
    lea    0x8(%esp),%eax
    push   %eax
    xor    %ecx,%ecx
    mov    $0xffffffff,%ebx
    call   func_720c9
    add    $0xc,%esp
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_2e16c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2e330
    push   %ebp
    push   $data_83a64
    lea    0x8(%esp),%eax
    push   %eax
    xor    %ecx,%ecx
    mov    $0xffffffff,%ebx
    call   func_720c9
    add    $0xc,%esp
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_2e16c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2e330
    mov    $func_55ec8,%edx
    mov    %esi,%eax
    call   func_2e8b8
    mov    %esi,%eax
    call   func_2e8c0
    add    $0x84,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5622c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x34,%esp
    mov    %edx,%ebp
    mov    data_fe582,%edx
    sar    $0x10,%edx
    movb   $0x0,0xbf(%eax)
    lea    0x0(,%edx,8),%eax
    add    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    $0x1f,%esi
    mov    data_fd3c4(,%eax,2),%di
  jump_56261:
    movswl %di,%eax
    test   %eax,%eax
    jle    jump_562e9
    movswl %si,%eax
    test   %eax,%eax
    jge    jump_56284
    mov    $0x1313,%ebx
    mov    $data_83a84,%edx
    xor    %eax,%eax
    call   func_25878
  jump_56284:
    mov    data_fe582,%eax
    sar    $0x10,%eax
    imul   $0x8e,%eax,%eax
    movswl %si,%edx
    mov    data_fd3c6(%eax,%edx,4),%eax
    test   %eax,%eax
    je     jump_562e3
    imul   $0xc,%eax,%edx
    mov    data_fa360(%edx),%edx
    cmpl   $0x0,0x63(%edx)
    jne    jump_562b3
    mov    $0x20,%bl
    jmp    jump_562b5
  jump_562b3:
    mov    $0x43,%bl
  jump_562b5:
    add    $0x20,%edx
    push   %edx
    push   %eax
    movsbl %bl,%eax
    push   %eax
    push   $data_83a92
    lea    0x10(%esp),%eax
    xor    %ecx,%ecx
    push   %eax
    lea    0x14(%esp),%edx
    mov    $0xffffffff,%ebx
    call   func_720c9
    add    $0x14,%esp
    mov    %ebp,%eax
    dec    %edi
    call   func_2e16c
  jump_562e3:
    dec    %esi
    jmp    jump_56261
  jump_562e9:
    add    $0x34,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_562f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x80,%esp
    mov    %edx,%esi
    mov    $data_11f10c,%edx
    xor    %edi,%edi
    mov    %edx,0x70(%esp)
    lea    0x7d0(%edx),%eax
    mov    %edi,0x7c(%esp)
    mov    %eax,0x68(%esp)
    mov    %edx,0x74(%esp)
    mov    %edx,%ebp
    jmp    jump_563a4
  jump_56325:
    xor    %eax,%eax
    mov    0x640(%ebp),%ax
    imul   $0x32,%eax,%edx
    mov    0x68(%esp),%ebx
    shl    $0x2,%eax
    add    %ebx,%edx
    add    $data_11f10c,%eax
    push   %edx
    mov    0x320(%eax),%ecx
    push   %ecx
    push   $data_83aa1
    lea    0xc(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0x10,%esp
    mov    0x74(%esp),%eax
    mov    $0xffffffff,%ebx
    mov    0x320(%eax),%edx
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_73fe7
    add    %edx,%edi
    mov    %esp,%edx
    mov    %esi,%eax
    add    $0x2,%ebp
    call   func_2e16c
    xor    %edx,%edx
    mov    $0x1,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    mov    0x7c(%esp),%ecx
    call   func_2e330
    mov    0x74(%esp),%ebx
    inc    %ecx
    add    $0x4,%ebx
    mov    %ecx,0x7c(%esp)
    mov    %ebx,0x74(%esp)
  jump_563a4:
    mov    0x70(%esp),%eax
    mov    0x2ee0(%eax),%eax
    mov    0x7c(%esp),%edx
    sar    $0x10,%eax
    cmp    %edx,%eax
    jg     jump_56325
    mov    $0xffffffff,%ebx
    mov    $data_83aa9,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_2e16c
    mov    0x70(%esp),%eax
    add    $0x7d0,%eax
    mov    %eax,0x6c(%esp)
    mov    0x70(%esp),%eax
    xor    %ebp,%ebp
    mov    %eax,0x64(%esp)
    mov    %eax,0x78(%esp)
    jmp    jump_5640c
  jump_563ed:
    mov    0x64(%esp),%eax
    mov    0x78(%esp),%edx
    inc    %ebp
    add    $0x32,%eax
    add    $0x4,%edx
    mov    %eax,0x64(%esp)
    mov    %edx,0x78(%esp)
    cmp    $0xc8,%ebp
    jge    jump_56466
  jump_5640c:
    imul   $0x32,%ebp,%eax
    mov    0x64(%esp),%edx
    cmpb   $0x0,0x7d0(%edx)
    je     jump_563ed
    add    0x6c(%esp),%eax
    push   %eax
    push   $data_83aab
    lea    0x8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    mov    0x78(%esp),%eax
    mov    $0xffffffff,%ebx
    mov    0x320(%eax),%edx
    mov    %esp,%eax
    xor    %ecx,%ecx
    call   func_73fe7
    add    %edx,%edi
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_2e16c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2e330
    jmp    jump_563ed
  jump_56466:
    mov    $0xffffffff,%ebx
    mov    $data_83aae,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_2e16c
    mov    0x70(%esp),%eax
    mov    0x2ede(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    push   $data_83ab0
    lea    0x8(%esp),%eax
    push   %eax
    mov    $0xffffffff,%ebx
    lea    0xc(%esp),%edx
    call   func_720c9
    add    $0xc,%esp
    xor    %ecx,%ecx
    mov    %esi,%eax
    call   func_2e16c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2e330
    mov    0x70(%esp),%eax
    mov    0x2ee0(%eax),%eax
    sar    $0x10,%eax
    push   %eax
    push   $data_83ac4
    lea    0x8(%esp),%eax
    push   %eax
    xor    %ecx,%ecx
    mov    $0xffffffff,%ebx
    call   func_720c9
    add    $0xc,%esp
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_2e16c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_2e330
    mov    $0xffffffff,%ebx
    mov    $data_83ad6,%edx
    mov    %esi,%eax
    call   func_2e16c
    mov    0x70(%esp),%eax
    mov    0x2ee8(%eax),%ebx
    push   %ebx
    push   $data_83ad8
    lea    0x8(%esp),%eax
    push   %eax
    lea    0xc(%esp),%edx
    xor    %ecx,%ecx
    call   func_720c9
    add    $0xc,%esp
    mov    $0xffffffff,%ebx
    mov    %esi,%eax
    call   func_2e16c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2e330
    push   %edi
    push   $data_83aee
    lea    0x8(%esp),%eax
    push   %eax
    call   func_720c9
    add    $0xc,%esp
    mov    $0xffffffff,%ebx
    mov    %esp,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_2e16c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2e330
    mov    0x70(%esp),%eax
    mov    0x2ee8(%eax),%eax
    sub    %edi,%eax
    push   %eax
    push   $data_83af8
    lea    0x8(%esp),%eax
    push   %eax
    xor    %ecx,%ecx
    mov    $0xffffffff,%ebx
    call   func_720c9
    add    $0xc,%esp
    mov    %esp,%edx
    mov    %esi,%eax
    call   func_2e16c
    xor    %edx,%edx
    xor    %ebx,%ebx
    mov    %ax,%dx
    mov    %esi,%eax
    call   func_2e330
    add    $0x80,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_565c4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%edi
    movb   $0x3,0xbf(%eax)
    xor    %esi,%esi
    movswl %si,%edx
    cmp    $0x100,%edx
    jl     jump_565e3
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_565e3:
    mov    $0xffffffff,%ebx
    movswl %si,%edx
    mov    %edi,%eax
    xor    %ecx,%ecx
    call   func_2e16c
    inc    %esi
    movswl %si,%edx
    cmp    $0x100,%edx
    jl     jump_565e3
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_56608:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x50,%esp
    mov    %edx,%edi
    movb   $0x4,0xbf(%eax)
    mov    data_f8d32,%dx
    xor    %esi,%esi
    test   %dx,%dx
    jle    jump_56665
  jump_56626:
    movswl %si,%edx
    imul   $0x1c,%edx,%eax
    add    $data_f89b2,%eax
    mov    0x18(%eax),%ebx
    push   %ebx
    push   %eax
    push   %edx
    push   $data_83b02
    lea    0x10(%esp),%eax
    xor    %ecx,%ecx
    push   %eax
    mov    $0xffffffff,%ebx
    lea    0x14(%esp),%edx
    call   func_720c9
    add    $0x14,%esp
    mov    %edi,%eax
    inc    %esi
    call   func_2e16c
    cmp    data_f8d32,%si
    jl     jump_56626
  jump_56665:
    add    $0x50,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_56670:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_5668f
    mov    $data_8601c,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_5668f:
    mov    $0x1,%edx
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_566a5
    call   func_72124
  jump_566a5:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_566b0:
/*----------------------------------------------------------------*/
    call   func_2bf10
    movl   $data_8605c,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_566c0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   $0x4,%cl
    je     jump_566df
    mov    $data_86030,%edx
    call   func_720fc
    call   func_7211c
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_566df:
    mov    $0x1,%edx
    call   func_2bf28
    mov    %eax,%ebx
    test   $0x2,%cl
    je     jump_566f5
    call   func_72124
  jump_566f5:
    mov    %ebx,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_56700:
/*----------------------------------------------------------------*/
    call   func_2bf10
    movl   $data_86074,0xa7(%eax)
    ret


/*----------------------------------------------------------------*/
func_568cc:
/*----------------------------------------------------------------*/
    push   $0x24
    call   func_740ba
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    mov    %eax,-0xc(%ebp)
    mov    %edx,-0x8(%ebp)
    mov    -0xc(%ebp),%eax
    mov    (%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    (%eax),%edx
    je     jump_56901
    movl   $0x0,-0x4(%ebp)
    jmp    jump_569cc
  jump_56901:
    mov    -0xc(%ebp),%eax
    mov    0x10(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0x8(%eax),%edx
    jge    jump_5691b
    movl   $0x0,-0x4(%ebp)
    jmp    jump_569cc
  jump_5691b:
    mov    -0xc(%ebp),%eax
    mov    0x8(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0x10(%eax),%edx
    jle    jump_56935
    movl   $0x0,-0x4(%ebp)
    jmp    jump_569cc
  jump_56935:
    mov    -0xc(%ebp),%eax
    mov    0xc(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0x4(%eax),%edx
    jge    jump_5694f
    movl   $0x0,-0x4(%ebp)
    jmp    jump_569cc
  jump_5694f:
    mov    -0xc(%ebp),%eax
    mov    0x4(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0xc(%eax),%edx
    jle    jump_56969
    movl   $0x0,-0x4(%ebp)
    jmp    jump_569cc
  jump_56969:
    mov    -0xc(%ebp),%eax
    mov    0x4(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0x4(%eax),%edx
    jge    jump_56980
    movl   $0x0,-0x4(%ebp)
    jmp    jump_569cc
  jump_56980:
    mov    -0xc(%ebp),%eax
    mov    0xc(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0xc(%eax),%edx
    jle    jump_56997
    movl   $0x0,-0x4(%ebp)
    jmp    jump_569cc
  jump_56997:
    mov    -0xc(%ebp),%eax
    mov    0x8(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0x8(%eax),%edx
    jge    jump_569ae
    movl   $0x0,-0x4(%ebp)
    jmp    jump_569cc
  jump_569ae:
    mov    -0xc(%ebp),%eax
    mov    0x10(%eax),%edx
    mov    -0x8(%ebp),%eax
    cmp    0x10(%eax),%edx
    jle    jump_569c5
    movl   $0x0,-0x4(%ebp)
    jmp    jump_569cc
  jump_569c5:
    movl   $0x1,-0x4(%ebp)
  jump_569cc:
    mov    -0x4(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_569d7:
/*----------------------------------------------------------------*/
    push   $0x28
    call   func_740ba
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    mov    %eax,-0xc(%ebp)
    mov    $0xc,%eax
    call   func_73af4
    mov    %eax,-0x4(%ebp)
    cmpl   $0x0,-0x4(%ebp)
    jne    jump_56a11
    movl   $0x0,-0x8(%ebp)
    jmp    jump_56a8f
  jump_56a11:
    mov    $0x4,%edx
    mov    -0xc(%ebp),%eax
    call   func_73bd7
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    mov    %edx,0x4(%eax)
    mov    -0x4(%ebp),%eax
    cmpl   $0x0,0x4(%eax)
    jne    jump_56a40
    mov    -0x4(%ebp),%eax
    call   func_73bef
    movl   $0x0,-0x8(%ebp)
    jmp    jump_56a8f
  jump_56a40:
    mov    $0x14,%edx
    mov    -0xc(%ebp),%eax
    call   func_73bd7
    mov    %eax,%edx
    mov    -0x4(%ebp),%eax
    mov    %edx,(%eax)
    mov    -0x4(%ebp),%eax
    cmpl   $0x0,(%eax)
    jne    jump_56a78
    mov    -0x4(%ebp),%eax
    mov    0x4(%eax),%eax
    call   func_73bef
    mov    -0x4(%ebp),%eax
    call   func_73bef
    movl   $0x0,-0x8(%ebp)
    jmp    jump_56a8f
  jump_56a78:
    mov    -0xc(%ebp),%eax
    mov    -0x4(%ebp),%edx
    mov    %eax,0x8(%edx)
    mov    -0x4(%ebp),%eax
    call   func_56adc
    mov    -0x4(%ebp),%eax
    mov    %eax,-0x8(%ebp)
  jump_56a8f:
    mov    -0x8(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_56adc:
/*----------------------------------------------------------------*/
    push   $0x24
    call   func_740ba
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x8,%esp
    mov    %eax,-0x8(%ebp)
    movl   $0x0,-0x4(%ebp)
  jump_56afe:
    mov    -0x4(%ebp),%eax
    mov    -0x8(%ebp),%edx
    cmp    0x8(%edx),%eax
    jb     jump_56b13
    jmp    jump_56b29
  jump_56b0b:
    mov    -0x4(%ebp),%eax
    incl   -0x4(%ebp)
    jmp    jump_56afe
  jump_56b13:
    mov    -0x4(%ebp),%edx
    shl    $0x2,%edx
    mov    -0x8(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    movl   $0x0,(%eax)
    jmp    jump_56b0b
  jump_56b29:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_56b82:
/*----------------------------------------------------------------*/
    push   $0x34
    call   func_740ba
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x24,%esp
    mov    %eax,-0x24(%ebp)
    mov    %edx,-0x20(%ebp)
    mov    %ebx,-0x1c(%ebp)
    mov    %ecx,-0x18(%ebp)
    movl   $0x0,-0x4(%ebp)
  jump_56baa:
    mov    -0x4(%ebp),%eax
    mov    -0x24(%ebp),%edx
    cmp    0x8(%edx),%eax
    jb     jump_56bbf
    jmp    jump_56bd2
  jump_56bb7:
    mov    -0x4(%ebp),%eax
    incl   -0x4(%ebp)
    jmp    jump_56baa
  jump_56bbf:
    mov    -0x4(%ebp),%edx
    shl    $0x2,%edx
    mov    -0x24(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    cmpl   $0x0,(%eax)
    jne    jump_56bb7
  jump_56bd2:
    mov    -0x4(%ebp),%eax
    mov    -0x24(%ebp),%edx
    cmp    0x8(%edx),%eax
    jne    jump_56be9
    movl   $0xffffffff,-0x14(%ebp)
    jmp    jump_56cac
  jump_56be9:
    mov    -0x4(%ebp),%edx
    shl    $0x2,%edx
    mov    -0x24(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    movl   $0x1,(%eax)
    imul   $0x14,-0x4(%ebp),%edx
    mov    -0x24(%ebp),%eax
    mov    (%eax),%eax
    add    %edx,%eax
    mov    %eax,-0xc(%ebp)
    mov    -0x20(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    %eax,(%edx)
    mov    -0x1c(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    %eax,0x4(%edx)
    mov    -0x18(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    %eax,0x8(%edx)
    mov    0x10(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    %eax,0xc(%edx)
    mov    0x14(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    %eax,0x10(%edx)
    movl   $0x0,-0x8(%ebp)
    mov    -0x24(%ebp),%eax
    mov    (%eax),%eax
    mov    %eax,-0x10(%ebp)
  jump_56c46:
    mov    -0x8(%ebp),%eax
    mov    -0x24(%ebp),%edx
    cmp    0x8(%edx),%eax
    jb     jump_56c62
    jmp    jump_56ca6
  jump_56c53:
    mov    -0x8(%ebp),%eax
    incl   -0x8(%ebp)
    mov    -0x10(%ebp),%eax
    addl   $0x14,-0x10(%ebp)
    jmp    jump_56c46
  jump_56c62:
    mov    -0x8(%ebp),%edx
    shl    $0x2,%edx
    mov    -0x24(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    cmpl   $0x0,(%eax)
    je     jump_56c7d
    mov    -0xc(%ebp),%eax
    cmp    -0x10(%ebp),%eax
    jne    jump_56c7f
  jump_56c7d:
    jmp    jump_56c53
  jump_56c7f:
    mov    -0x10(%ebp),%edx
    mov    -0xc(%ebp),%eax
    call   func_568cc
    test   %eax,%eax
    je     jump_56ca4
    mov    -0x4(%ebp),%edx
    shl    $0x2,%edx
    mov    -0x24(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    movl   $0x2,(%eax)
    jmp    jump_56ca6
  jump_56ca4:
    jmp    jump_56c53
  jump_56ca6:
    mov    -0x4(%ebp),%eax
    mov    %eax,-0x14(%ebp)
  jump_56cac:
    mov    -0x14(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x8


/*----------------------------------------------------------------*/
func_56df8:
/*----------------------------------------------------------------*/
    push   $0x3c
    call   func_740ba
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    mov    %eax,-0xc(%ebp)
    movl   $0x0,-0x4(%ebp)
  jump_56e1a:
    mov    -0x4(%ebp),%eax
    mov    -0xc(%ebp),%edx
    cmp    0x8(%edx),%eax
    jb     jump_56e2f
    jmp    jump_56e77
  jump_56e27:
    mov    -0x4(%ebp),%eax
    incl   -0x4(%ebp)
    jmp    jump_56e1a
  jump_56e2f:
    mov    -0x4(%ebp),%edx
    shl    $0x2,%edx
    mov    -0xc(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    cmpl   $0x1,(%eax)
    jne    jump_56e75
    imul   $0x14,-0x4(%ebp),%edx
    mov    -0xc(%ebp),%eax
    mov    (%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x8(%ebp)
    mov    -0x8(%ebp),%eax
    push   0x10(%eax)
    mov    -0x8(%ebp),%eax
    push   0xc(%eax)
    mov    -0x8(%ebp),%eax
    push   0x8(%eax)
    mov    -0x8(%ebp),%eax
    push   0x4(%eax)
    mov    -0x8(%ebp),%eax
    push   %eax
    call   *data_86aa4
    add    $0x14,%esp
  jump_56e75:
    jmp    jump_56e27
  jump_56e77:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_571c8:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    call   *(%esi)
    mov    $data_86aac,%edi
  jump_571dc:
    mov    (%eax),%bl
    mov    %bl,(%edi)
    inc    %edi
    inc    %eax
    or     %bl,%bl
    jne    jump_571dc
    mov    $data_86aac,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_571f1:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    $data_86a78,%edi
    mov    $0xd,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_57210:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffe0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x18(%ebp)
    jle    jump_5728f
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5728f
    mov    0x4(%esi),%eax
    mov    %eax,-0x1c(%ebp)
    cmp    $0x0,%eax
    jg     jump_57243
    mov    $0x0,%eax
  jump_57243:
    mov    %eax,-0x4(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x20(%ebp)
    cmp    $0x0,%eax
    jg     jump_57256
    mov    $0x0,%eax
  jump_57256:
    mov    %eax,-0x8(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x18(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_57266
    mov    %edx,%eax
  jump_57266:
    mov    %eax,-0xc(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_57275
    mov    %edx,%eax
  jump_57275:
    mov    %eax,-0x10(%ebp)
    mov    -0xc(%ebp),%eax
    cmp    -0x4(%ebp),%eax
    jl     jump_5729a
    mov    -0x10(%ebp),%eax
    cmp    -0x8(%ebp),%eax
    jl     jump_5729a
    mov    (%ebx),%eax
    mov    %eax,-0x14(%ebp)
    jmp    jump_572a5
  jump_5728f:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5729a:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_572a5:
    mov    0xc(%ebp),%ecx
    mov    0x10(%ebp),%ebx
    add    -0x1c(%ebp),%ecx
    add    -0x20(%ebp),%ebx
    cmp    -0x4(%ebp),%ecx
    jl     jump_572e0
    cmp    -0xc(%ebp),%ecx
    jg     jump_572e0
    cmp    -0x8(%ebp),%ebx
    jl     jump_572e0
    cmp    -0x10(%ebp),%ebx
    jg     jump_572e0
    mov    %ebx,%eax
    imull  -0x18(%ebp)
    add    -0x14(%ebp),%eax
    add    %ecx,%eax
    mov    %eax,%ebx
    xor    %eax,%eax
    mov    (%ebx),%al
    mov    0x14(%ebp),%dl
    mov    %dl,(%ebx)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_572e0:
    mov    $0xfffffffd,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_572eb:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffe0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x18(%ebp)
    jle    jump_5736a
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5736a
    mov    0x4(%esi),%eax
    mov    %eax,-0x1c(%ebp)
    cmp    $0x0,%eax
    jg     jump_5731e
    mov    $0x0,%eax
  jump_5731e:
    mov    %eax,-0x4(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x20(%ebp)
    cmp    $0x0,%eax
    jg     jump_57331
    mov    $0x0,%eax
  jump_57331:
    mov    %eax,-0x8(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x18(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_57341
    mov    %edx,%eax
  jump_57341:
    mov    %eax,-0xc(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_57350
    mov    %edx,%eax
  jump_57350:
    mov    %eax,-0x10(%ebp)
    mov    -0xc(%ebp),%eax
    cmp    -0x4(%ebp),%eax
    jl     jump_57375
    mov    -0x10(%ebp),%eax
    cmp    -0x8(%ebp),%eax
    jl     jump_57375
    mov    (%ebx),%eax
    mov    %eax,-0x14(%ebp)
    jmp    jump_57380
  jump_5736a:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_57375:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_57380:
    mov    0xc(%ebp),%ecx
    mov    0x10(%ebp),%ebx
    add    -0x1c(%ebp),%ecx
    add    -0x20(%ebp),%ebx
    cmp    -0x4(%ebp),%ecx
    jl     jump_573b6
    cmp    -0xc(%ebp),%ecx
    jg     jump_573b6
    cmp    -0x8(%ebp),%ebx
    jl     jump_573b6
    cmp    -0x10(%ebp),%ebx
    jg     jump_573b6
    mov    %ebx,%eax
    imull  -0x18(%ebp)
    add    -0x14(%ebp),%eax
    add    %ecx,%eax
    mov    %eax,%ebx
    xor    %eax,%eax
    mov    (%ebx),%al
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_573b6:
    mov    $0xfffffffd,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_573c1:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffa8,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x50(%ebp)
    jle    jump_57440
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_57440
    mov    0x4(%esi),%eax
    mov    %eax,-0x54(%ebp)
    cmp    $0x0,%eax
    jg     jump_573f4
    mov    $0x0,%eax
  jump_573f4:
    mov    %eax,-0x3c(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x58(%ebp)
    cmp    $0x0,%eax
    jg     jump_57407
    mov    $0x0,%eax
  jump_57407:
    mov    %eax,-0x40(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x50(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_57417
    mov    %edx,%eax
  jump_57417:
    mov    %eax,-0x44(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_57426
    mov    %edx,%eax
  jump_57426:
    mov    %eax,-0x48(%ebp)
    mov    -0x44(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jl     jump_5744b
    mov    -0x48(%ebp),%eax
    cmp    -0x40(%ebp),%eax
    jl     jump_5744b
    mov    (%ebx),%eax
    mov    %eax,-0x4c(%ebp)
    jmp    jump_57456
  jump_57440:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5744b:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_57456:
    mov    -0x54(%ebp),%eax
    add    %eax,0xc(%ebp)
    add    %eax,0x14(%ebp)
    mov    -0x58(%ebp),%eax
    add    %eax,0x10(%ebp)
    add    %eax,0x18(%ebp)
    mov    0x14(%ebp),%eax
    sub    0xc(%ebp),%eax
    mov    %eax,-0x4(%ebp)
    cltd
    mov    %edx,-0xc(%ebp)
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,-0x8(%ebp)
    mov    0x18(%ebp),%eax
    sub    0x10(%ebp),%eax
    mov    %eax,-0x10(%ebp)
    cltd
    mov    %edx,-0x18(%ebp)
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,-0x14(%ebp)
    mov    0xc(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    mov    0x14(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    mov    0x10(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    mov    0x18(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    cmpl   $0x0,-0x4(%ebp)
    je     jump_57bd7
    cmpl   $0x0,-0x10(%ebp)
    je     jump_57c62
    mov    -0xc(%ebp),%eax
    xor    -0x18(%ebp),%eax
    mov    %eax,-0x1c(%ebp)
    mov    -0x8(%ebp),%edx
    mov    -0x14(%ebp),%ebx
    mov    $0xffffffff,%eax
    cmp    %ebx,%edx
    je     jump_574dc
    jl     jump_574d8
    xchg   %edx,%ebx
  jump_574d8:
    xor    %eax,%eax
    div    %ebx
  jump_574dc:
    mov    %eax,-0x20(%ebp)
    movl   $0x0,-0x34(%ebp)
  jump_574e6:
    xor    %edx,%edx
    mov    -0x24(%ebp),%eax
    sub    -0x3c(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x44(%ebp),%eax
    sub    -0x24(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x28(%ebp),%eax
    sub    -0x40(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x48(%ebp),%eax
    sub    -0x28(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x2c(%ebp),%eax
    sub    -0x3c(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x44(%ebp),%eax
    sub    -0x2c(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x30(%ebp),%eax
    sub    -0x40(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x48(%ebp),%eax
    sub    -0x30(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    or     %edx,-0x34(%ebp)
    or     %edx,%edx
    je     jump_578a5
    test   %dl,%dh
    jne    jump_57db8
    mov    -0x8(%ebp),%ebx
    cmp    -0x14(%ebp),%ebx
    jl     jump_575a0
    test   $0x8,%dl
    jne    jump_575e9
    test   $0x4,%dl
    jne    jump_5763d
    test   $0x2,%dl
    jne    jump_576c1
    test   $0x1,%dl
    jne    jump_57719
    test   $0x8,%dh
    jne    jump_57749
    test   $0x4,%dh
    jne    jump_577a4
    test   $0x2,%dh
    jne    jump_57823
    test   $0x1,%dh
    jne    jump_5787a
    jmp    jump_574e6
  jump_575a0:
    test   $0x8,%dl
    jne    jump_57611
    test   $0x4,%dl
    jne    jump_57669
    test   $0x2,%dl
    jne    jump_57699
    test   $0x1,%dl
    jne    jump_576ed
    test   $0x8,%dh
    jne    jump_57775
    test   $0x4,%dh
    jne    jump_577cc
    test   $0x2,%dh
    jne    jump_577f7
    test   $0x1,%dh
    jne    jump_57852
    jmp    jump_574e6
  jump_575e9:
    mov    -0x3c(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    sub    0xc(%ebp),%eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    jmp    jump_574e6
  jump_57611:
    mov    -0x3c(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    sub    0xc(%ebp),%eax
    mov    %eax,%edx
    dec    %edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0xffffffff,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    jmp    jump_574e6
  jump_5763d:
    mov    -0x44(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    sub    0xc(%ebp),%eax
    neg    %eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    jmp    jump_574e6
  jump_57669:
    mov    -0x44(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    sub    0xc(%ebp),%eax
    neg    %eax
    mov    %eax,%edx
    dec    %edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0xffffffff,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    jmp    jump_574e6
  jump_57699:
    mov    -0x40(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    0x10(%ebp),%eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    jmp    jump_574e6
  jump_576c1:
    mov    -0x40(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    0x10(%ebp),%eax
    mov    %eax,%edx
    dec    %edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0xffffffff,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    jmp    jump_574e6
  jump_576ed:
    mov    -0x48(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    0x10(%ebp),%eax
    neg    %eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    jmp    jump_574e6
  jump_57719:
    mov    -0x48(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    0x10(%ebp),%eax
    neg    %eax
    mov    %eax,%edx
    dec    %edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0xffffffff,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    jmp    jump_574e6
  jump_57749:
    mov    -0x3c(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    sub    0xc(%ebp),%eax
    neg    %eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    jmp    jump_574e6
  jump_57775:
    mov    -0x3c(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    sub    0xc(%ebp),%eax
    neg    %eax
    mov    %eax,%edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0x0,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    jmp    jump_574e6
  jump_577a4:
    mov    -0x44(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    sub    0xc(%ebp),%eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    jmp    jump_574e6
  jump_577cc:
    mov    -0x44(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    sub    0xc(%ebp),%eax
    mov    %eax,%edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0x0,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    jmp    jump_574e6
  jump_577f7:
    mov    -0x40(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    sub    0x10(%ebp),%eax
    neg    %eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    jmp    jump_574e6
  jump_57823:
    mov    -0x40(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    sub    0x10(%ebp),%eax
    neg    %eax
    mov    %eax,%edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0x0,%eax
    mov    -0x1c(%ebp),%edx
    not    %edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    jmp    jump_574e6
  jump_57852:
    mov    -0x48(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    sub    0x10(%ebp),%eax
    mull   -0x20(%ebp)
    add    $0x80000000,%eax
    adc    $0x0,%edx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    jmp    jump_574e6
  jump_5787a:
    mov    -0x48(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    sub    0x10(%ebp),%eax
    mov    %eax,%edx
    mov    $0x80000000,%eax
    divl   -0x20(%ebp)
    cmp    $0x1,%edx
    sbb    $0x0,%eax
    mov    -0x1c(%ebp),%edx
    xor    %edx,%eax
    sub    %edx,%eax
    add    0xc(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    jmp    jump_574e6
  jump_578a5:
    mov    -0x28(%ebp),%eax
    imull  -0x50(%ebp)
    add    -0x4c(%ebp),%eax
    add    -0x24(%ebp),%eax
    mov    %eax,%edi
    mov    -0x50(%ebp),%esi
    xor    -0x18(%ebp),%esi
    sub    -0x18(%ebp),%esi
    mov    -0x20(%ebp),%ebx
    mov    -0x8(%ebp),%eax
    cmp    -0x14(%ebp),%eax
    je     jump_57ce8
    jg     jump_57a39
    mov    -0x30(%ebp),%eax
    sub    -0x28(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    inc    %eax
    mov    %eax,%ecx
    mov    -0x28(%ebp),%eax
    sub    0x10(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mul    %ebx
    add    $0x80000000,%eax
    mov    %eax,%edx
    cmpl   $0xffffffff,-0xc(%ebp)
    je     jump_5799a
    cmpl   $0x1,0x1c(%ebp)
    je     jump_57931
    jg     jump_5796f
    mov    0x20(%ebp),%eax
  jump_57908:
    mov    %al,(%edi)
    add    %ebx,%edx
    adc    %esi,%edi
    dec    %ecx
    je     jump_5792c
    mov    %al,(%edi)
    add    %ebx,%edx
    adc    %esi,%edi
    dec    %ecx
    je     jump_5792c
    mov    %al,(%edi)
    add    %ebx,%edx
    adc    %esi,%edi
    dec    %ecx
    je     jump_5792c
    mov    %al,(%edi)
    add    %ebx,%edx
    adc    %esi,%edi
    dec    %ecx
    jne    jump_57908
  jump_5792c:
    jmp    jump_57da9
  jump_57931:
    mov    0x20(%ebp),%eax
    push   %ebp
    mov    %ebx,%ebp
    mov    %eax,%ebx
  jump_57939:
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    adc    %esi,%edi
    dec    %ecx
    je     jump_57969
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    adc    %esi,%edi
    dec    %ecx
    je     jump_57969
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    adc    %esi,%edi
    dec    %ecx
    je     jump_57969
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    adc    %esi,%edi
    dec    %ecx
    jne    jump_57939
  jump_57969:
    pop    %ebp
    jmp    jump_57da9
  jump_5796f:
    mov    0x8(%ebp),%esi
    mov    -0x24(%ebp),%edi
    sub    0x4(%esi),%edi
    mov    -0x28(%ebp),%eax
    sub    0x8(%esi),%eax
    mov    %eax,%esi
    mov    -0x18(%ebp),%eax
    add    %eax,%eax
    inc    %eax
  jump_57986:
    pusha
    call   *0x20(%ebp)
    popa
    add    %ebx,%edx
    jae    jump_57990
    inc    %edi
  jump_57990:
    add    %eax,%esi
    dec    %ecx
    jne    jump_57986
    jmp    jump_57da9
  jump_5799a:
    neg    %esi
    cmpl   $0x1,0x1c(%ebp)
    je     jump_579d0
    jg     jump_57a0e
    mov    0x20(%ebp),%eax
  jump_579a7:
    mov    %al,(%edi)
    add    %ebx,%edx
    sbb    %esi,%edi
    dec    %ecx
    je     jump_579cb
    mov    %al,(%edi)
    add    %ebx,%edx
    sbb    %esi,%edi
    dec    %ecx
    je     jump_579cb
    mov    %al,(%edi)
    add    %ebx,%edx
    sbb    %esi,%edi
    dec    %ecx
    je     jump_579cb
    mov    %al,(%edi)
    add    %ebx,%edx
    sbb    %esi,%edi
    dec    %ecx
    jne    jump_579a7
  jump_579cb:
    jmp    jump_57da9
  jump_579d0:
    mov    0x20(%ebp),%eax
    push   %ebp
    mov    %ebx,%ebp
    mov    %eax,%ebx
  jump_579d8:
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    sbb    %esi,%edi
    dec    %ecx
    je     jump_57a08
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    sbb    %esi,%edi
    dec    %ecx
    je     jump_57a08
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    sbb    %esi,%edi
    dec    %ecx
    je     jump_57a08
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %ebp,%edx
    sbb    %esi,%edi
    dec    %ecx
    jne    jump_579d8
  jump_57a08:
    pop    %ebp
    jmp    jump_57da9
  jump_57a0e:
    mov    0x8(%ebp),%esi
    mov    -0x24(%ebp),%edi
    sub    0x4(%esi),%edi
    mov    -0x28(%ebp),%eax
    sub    0x8(%esi),%eax
    mov    %eax,%esi
    mov    -0x18(%ebp),%eax
    add    %eax,%eax
    inc    %eax
  jump_57a25:
    pusha
    call   *0x20(%ebp)
    popa
    add    %ebx,%edx
    jae    jump_57a2f
    dec    %edi
  jump_57a2f:
    add    %eax,%esi
    dec    %ecx
    jne    jump_57a25
    jmp    jump_57da9
  jump_57a39:
    mov    -0x2c(%ebp),%eax
    sub    -0x24(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    inc    %eax
    mov    %eax,%ecx
    mov    -0x24(%ebp),%eax
    sub    0xc(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mul    %ebx
    add    $0x80000000,%eax
    mov    %eax,%edx
    cmpl   $0xffffffff,-0xc(%ebp)
    je     jump_57b1e
    cmpl   $0x1,0x1c(%ebp)
    je     jump_57aa9
    jg     jump_57af3
    mov    0x20(%ebp),%eax
  jump_57a74:
    mov    %al,(%edi)
    inc    %edi
    add    %ebx,%edx
    jae    jump_57a7d
    add    %esi,%edi
  jump_57a7d:
    dec    %ecx
    je     jump_57aa4
    mov    %al,(%edi)
    inc    %edi
    add    %ebx,%edx
    jae    jump_57a89
    add    %esi,%edi
  jump_57a89:
    dec    %ecx
    je     jump_57aa4
    mov    %al,(%edi)
    inc    %edi
    add    %ebx,%edx
    jae    jump_57a95
    add    %esi,%edi
  jump_57a95:
    dec    %ecx
    je     jump_57aa4
    mov    %al,(%edi)
    inc    %edi
    add    %ebx,%edx
    jae    jump_57aa1
    add    %esi,%edi
  jump_57aa1:
    dec    %ecx
    jne    jump_57a74
  jump_57aa4:
    jmp    jump_57da9
  jump_57aa9:
    mov    0x20(%ebp),%eax
    push   %ebp
    mov    %ebx,%ebp
    mov    %eax,%ebx
  jump_57ab1:
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    inc    %edi
    add    %ebp,%edx
    jae    jump_57abd
    add    %esi,%edi
  jump_57abd:
    dec    %ecx
    je     jump_57aed
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    inc    %edi
    add    %ebp,%edx
    jae    jump_57acc
    add    %esi,%edi
  jump_57acc:
    dec    %ecx
    je     jump_57aed
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    inc    %edi
    add    %ebp,%edx
    jae    jump_57adb
    add    %esi,%edi
  jump_57adb:
    dec    %ecx
    je     jump_57aed
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    inc    %edi
    add    %ebp,%edx
    jae    jump_57aea
    add    %esi,%edi
  jump_57aea:
    dec    %ecx
    jne    jump_57ab1
  jump_57aed:
    pop    %ebp
    jmp    jump_57da9
  jump_57af3:
    mov    0x8(%ebp),%esi
    mov    -0x24(%ebp),%edi
    sub    0x4(%esi),%edi
    mov    -0x28(%ebp),%eax
    sub    0x8(%esi),%eax
    mov    %eax,%esi
    mov    -0x18(%ebp),%eax
    add    %eax,%eax
    inc    %eax
  jump_57b0a:
    pusha
    call   *0x20(%ebp)
    popa
    add    %ebx,%edx
    jae    jump_57b14
    inc    %esi
  jump_57b14:
    add    %eax,%edi
    dec    %ecx
    jne    jump_57b0a
    jmp    jump_57da9
  jump_57b1e:
    cmpl   $0x1,0x1c(%ebp)
    je     jump_57b62
    jg     jump_57bac
    mov    0x20(%ebp),%eax
  jump_57b2d:
    mov    %al,(%edi)
    dec    %edi
    add    %ebx,%edx
    jae    jump_57b36
    add    %esi,%edi
  jump_57b36:
    dec    %ecx
    je     jump_57b5d
    mov    %al,(%edi)
    dec    %edi
    add    %ebx,%edx
    jae    jump_57b42
    add    %esi,%edi
  jump_57b42:
    dec    %ecx
    je     jump_57b5d
    mov    %al,(%edi)
    dec    %edi
    add    %ebx,%edx
    jae    jump_57b4e
    add    %esi,%edi
  jump_57b4e:
    dec    %ecx
    je     jump_57b5d
    mov    %al,(%edi)
    dec    %edi
    add    %ebx,%edx
    jae    jump_57b5a
    add    %esi,%edi
  jump_57b5a:
    dec    %ecx
    jne    jump_57b2d
  jump_57b5d:
    jmp    jump_57da9
  jump_57b62:
    mov    0x20(%ebp),%eax
    push   %ebp
    mov    %ebx,%ebp
    mov    %eax,%ebx
  jump_57b6a:
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    dec    %edi
    add    %ebp,%edx
    jae    jump_57b76
    add    %esi,%edi
  jump_57b76:
    dec    %ecx
    je     jump_57ba6
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    dec    %edi
    add    %ebp,%edx
    jae    jump_57b85
    add    %esi,%edi
  jump_57b85:
    dec    %ecx
    je     jump_57ba6
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    dec    %edi
    add    %ebp,%edx
    jae    jump_57b94
    add    %esi,%edi
  jump_57b94:
    dec    %ecx
    je     jump_57ba6
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    dec    %edi
    add    %ebp,%edx
    jae    jump_57ba3
    add    %esi,%edi
  jump_57ba3:
    dec    %ecx
    jne    jump_57b6a
  jump_57ba6:
    pop    %ebp
    jmp    jump_57da9
  jump_57bac:
    mov    0x8(%ebp),%esi
    mov    -0x24(%ebp),%edi
    sub    0x4(%esi),%edi
    mov    -0x28(%ebp),%eax
    sub    0x8(%esi),%eax
    mov    %eax,%esi
    mov    -0x18(%ebp),%eax
    add    %eax,%eax
    inc    %eax
  jump_57bc3:
    pusha
    call   *0x20(%ebp)
    popa
    add    %ebx,%edx
    jae    jump_57bcd
    dec    %esi
  jump_57bcd:
    add    %eax,%edi
    dec    %ecx
    jne    jump_57bc3
    jmp    jump_57da9
  jump_57bd7:
    mov    0xc(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jl     jump_57db8
    cmp    -0x44(%ebp),%eax
    jg     jump_57db8
    mov    0x10(%ebp),%eax
    cmp    0x18(%ebp),%eax
    jg     jump_57bf7
    mov    0x18(%ebp),%eax
  jump_57bf7:
    cmp    -0x40(%ebp),%eax
    jl     jump_57db8
    mov    0x10(%ebp),%eax
    cmp    0x18(%ebp),%eax
    jl     jump_57c0b
    mov    0x18(%ebp),%eax
  jump_57c0b:
    cmp    -0x48(%ebp),%eax
    jg     jump_57db8
    mov    0x10(%ebp),%eax
    cmp    -0x40(%ebp),%eax
    jg     jump_57c1f
    mov    -0x40(%ebp),%eax
  jump_57c1f:
    cmp    -0x48(%ebp),%eax
    jl     jump_57c27
    mov    -0x48(%ebp),%eax
  jump_57c27:
    mov    %eax,-0x28(%ebp)
    mov    0x18(%ebp),%eax
    cmp    -0x40(%ebp),%eax
    jg     jump_57c35
    mov    -0x40(%ebp),%eax
  jump_57c35:
    cmp    -0x48(%ebp),%eax
    jl     jump_57c3d
    mov    -0x48(%ebp),%eax
  jump_57c3d:
    mov    %eax,-0x30(%ebp)
    mov    0xc(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    mov    -0x50(%ebp),%esi
    xor    -0x18(%ebp),%esi
    sub    -0x18(%ebp),%esi
    mov    -0x30(%ebp),%eax
    sub    -0x28(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,%ecx
    inc    %ecx
    jmp    jump_57d08
  jump_57c62:
    mov    0x10(%ebp),%eax
    cmp    -0x40(%ebp),%eax
    jl     jump_57db8
    cmp    -0x48(%ebp),%eax
    jg     jump_57db8
    mov    0xc(%ebp),%eax
    cmp    0x14(%ebp),%eax
    jg     jump_57c82
    mov    0x14(%ebp),%eax
  jump_57c82:
    cmp    -0x3c(%ebp),%eax
    jl     jump_57db8
    mov    0xc(%ebp),%eax
    cmp    0x14(%ebp),%eax
    jl     jump_57c96
    mov    0x14(%ebp),%eax
  jump_57c96:
    cmp    -0x44(%ebp),%eax
    jg     jump_57db8
    mov    0xc(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jg     jump_57caa
    mov    -0x3c(%ebp),%eax
  jump_57caa:
    cmp    -0x44(%ebp),%eax
    jl     jump_57cb2
    mov    -0x44(%ebp),%eax
  jump_57cb2:
    mov    %eax,-0x24(%ebp)
    mov    0x14(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jg     jump_57cc0
    mov    -0x3c(%ebp),%eax
  jump_57cc0:
    cmp    -0x44(%ebp),%eax
    jl     jump_57cc8
    mov    -0x44(%ebp),%eax
  jump_57cc8:
    mov    %eax,-0x2c(%ebp)
    mov    0x10(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    mov    -0xc(%ebp),%esi
    inc    %esi
    or     -0xc(%ebp),%esi
    mov    -0x2c(%ebp),%eax
    sub    -0x24(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,%ecx
    inc    %ecx
    jmp    jump_57d08
  jump_57ce8:
    mov    -0x50(%ebp),%esi
    xor    -0x18(%ebp),%esi
    sub    -0x18(%ebp),%esi
    mov    -0xc(%ebp),%eax
    inc    %eax
    or     -0xc(%ebp),%eax
    add    %eax,%esi
    mov    -0x2c(%ebp),%eax
    sub    -0x24(%ebp),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,%ecx
    inc    %ecx
  jump_57d08:
    mov    -0x28(%ebp),%eax
    imull  -0x50(%ebp)
    add    -0x4c(%ebp),%eax
    add    -0x24(%ebp),%eax
    mov    %eax,%edi
    cmpl   $0x1,0x1c(%ebp)
    je     jump_57d3f
    jg     jump_57d6c
    mov    0x20(%ebp),%eax
  jump_57d21:
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    je     jump_57d3d
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    je     jump_57d3d
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    je     jump_57d3d
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    jne    jump_57d21
  jump_57d3d:
    jmp    jump_57da9
  jump_57d3f:
    mov    0x20(%ebp),%ebx
  jump_57d42:
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    je     jump_57d6a
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    je     jump_57d6a
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    je     jump_57d6a
    mov    (%edi),%al
    xlat   %ds:(%ebx)
    mov    %al,(%edi)
    add    %esi,%edi
    dec    %ecx
    jne    jump_57d42
  jump_57d6a:
    jmp    jump_57da9
  jump_57d6c:
    mov    0x8(%ebp),%esi
    mov    -0x24(%ebp),%edi
    sub    0x4(%esi),%edi
    mov    -0x28(%ebp),%eax
    sub    0x8(%esi),%eax
    mov    %eax,%esi
    xor    %eax,%eax
    testl  $0xffffffff,-0x10(%ebp)
    setne  %al
    or     -0x18(%ebp),%eax
    xor    %ebx,%ebx
    testl  $0xffffffff,-0x4(%ebp)
    setne  %bl
    or     -0xc(%ebp),%ebx
  jump_57d9b:
    pusha
    call   *0x20(%ebp)
    popa
    add    %eax,%esi
    add    %ebx,%edi
    dec    %ecx
    jne    jump_57d9b
    jmp    jump_57da9
  jump_57da9:
    xor    %eax,%eax
    cmpl   $0x1,-0x34(%ebp)
    setae  %al
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_57db8:
    mov    $0x2,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_57efc:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffb0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x48(%ebp)
    jle    jump_57f7b
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_57f7b
    mov    0x4(%esi),%eax
    mov    %eax,-0x4c(%ebp)
    cmp    $0x0,%eax
    jg     jump_57f2f
    mov    $0x0,%eax
  jump_57f2f:
    mov    %eax,-0x34(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x50(%ebp)
    cmp    $0x0,%eax
    jg     jump_57f42
    mov    $0x0,%eax
  jump_57f42:
    mov    %eax,-0x38(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x48(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_57f52
    mov    %edx,%eax
  jump_57f52:
    mov    %eax,-0x3c(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_57f61
    mov    %edx,%eax
  jump_57f61:
    mov    %eax,-0x40(%ebp)
    mov    -0x3c(%ebp),%eax
    cmp    -0x34(%ebp),%eax
    jl     jump_57f86
    mov    -0x40(%ebp),%eax
    cmp    -0x38(%ebp),%eax
    jl     jump_57f86
    mov    (%ebx),%eax
    mov    %eax,-0x44(%ebp)
    jmp    jump_57f91
  jump_57f7b:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_57f86:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_57f91:
    mov    -0x4c(%ebp),%eax
    add    %eax,0x14(%ebp)
    mov    -0x50(%ebp),%eax
    add    %eax,0x18(%ebp)
    mov    0x10(%ebp),%esi
    shl    $0x3,%esi
    add    $0x8,%esi
    add    0xc(%ebp),%esi
    mov    (%esi),%esi
    add    0xc(%ebp),%esi
    mov    %esi,-0x30(%ebp)
    mov    0x8(%esi),%eax
    add    0x14(%ebp),%eax
    mov    %eax,-0xc(%ebp)
    mov    0xc(%esi),%eax
    add    0x18(%ebp),%eax
    mov    %eax,-0x10(%ebp)
    mov    0x10(%esi),%eax
    add    0x14(%ebp),%eax
    mov    %eax,-0x14(%ebp)
    mov    0x14(%esi),%eax
    add    0x18(%ebp),%eax
    mov    %eax,-0x18(%ebp)
    add    $0x18,%esi
    mov    -0x14(%ebp),%eax
    cmp    -0xc(%ebp),%eax
    jl     jump_582f5
    mov    -0x18(%ebp),%eax
    cmp    -0x10(%ebp),%eax
    jl     jump_582f5
    xor    %edx,%edx
    mov    -0xc(%ebp),%eax
    sub    -0x34(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x3c(%ebp),%eax
    sub    -0xc(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x10(%ebp),%eax
    sub    -0x38(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x40(%ebp),%eax
    sub    -0x10(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x14(%ebp),%eax
    sub    -0x34(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x3c(%ebp),%eax
    sub    -0x14(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x18(%ebp),%eax
    sub    -0x38(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x40(%ebp),%eax
    sub    -0x18(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    %edx,-0x1c(%ebp)
    test   %dl,%dh
    jne    jump_582ea
    or     %dh,%dl
    jne    jump_5807c
    mov    0x8(%ebp),%esi
    mov    0x4(%esi),%eax
    sub    %eax,0x14(%ebp)
    mov    0x8(%esi),%eax
    sub    %eax,0x18(%ebp)
    push   -0x48(%ebp)
    push   0x18(%ebp)
    push   0x14(%ebp)
    push   -0x30(%ebp)
    push   0x8(%ebp)
    call   func_58300
    add    $0x14,%esp
    jmp    jump_582e2
  jump_5807c:
    mov    -0x10(%ebp),%eax
    imull  -0x48(%ebp)
    add    -0x44(%ebp),%eax
    add    -0xc(%ebp),%eax
    mov    %eax,%edi
    mov    -0x10(%ebp),%ecx
    mov    %ecx,-0x20(%ebp)
    jmp    jump_580a8
  jump_58092:
    movzbl %al,%eax
    add    %eax,%esi
    dec    %esi
  jump_58098:
    inc    %esi
  jump_58099:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58098
    jne    jump_58092
    jb     jump_58098
    add    -0x48(%ebp),%edi
    inc    %ecx
  jump_580a8:
    cmp    -0x38(%ebp),%ecx
    jl     jump_58099
    mov    %edi,-0x24(%ebp)
    mov    %ecx,-0x20(%ebp)
    mov    %edi,%eax
    sub    -0xc(%ebp),%eax
    add    -0x34(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    mov    %edi,%eax
    sub    -0xc(%ebp),%eax
    add    -0x3c(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    jmp    jump_582d6
  jump_580ce:
    mov    -0x20(%ebp),%eax
    cmp    -0x40(%ebp),%eax
    jg     jump_582e2
    mov    -0x24(%ebp),%edi
    testl  $0x8,-0x1c(%ebp)
    jne    jump_5815b
    testl  $0x400,-0x1c(%ebp)
    jne    jump_581e5
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58113
    jne    jump_5813c
    jae    jump_58156
  jump_580fe:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58113
    jne    jump_5813c
    jb     jump_580fe
    jae    jump_58156
  jump_58113:
    movzbl %al,%ecx
  jump_58116:
    mov    (%esi),%al
    inc    %esi
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %al,%ah
    rol    $0x8,%eax
    mov    %ah,%al
    rol    $0x8,%eax
    mov    %ah,%al
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58113
    jae    jump_58156
    je     jump_580fe
  jump_5813c:
    movzbl %al,%ecx
  jump_5813f:
    push   %ecx
    and    $0x3,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    pop    %ecx
    shr    $0x2,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58113
    jne    jump_5813c
    jb     jump_580fe
  jump_58156:
    jmp    jump_582c7
  jump_5815b:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5817b
    jne    jump_581ac
    jae    jump_581e0
  jump_58166:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5817b
    jne    jump_581ac
    jb     jump_58166
    jae    jump_581e0
  jump_5817b:
    movzbl %al,%ecx
    mov    -0x28(%ebp),%eax
    sub    %edi,%eax
    cmp    %ecx,%eax
    jge    jump_5819e
    or     %eax,%eax
    js     jump_5818f
    add    %eax,%edi
    sub    %eax,%ecx
  jump_5818f:
    testl  $0x400,-0x1c(%ebp)
    je     jump_58116
    jne    jump_5820c
  jump_5819e:
    add    %ecx,%edi
    inc    %esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5817b
    jae    jump_581e0
    je     jump_58166
  jump_581ac:
    movzbl %al,%ecx
    mov    -0x28(%ebp),%eax
    sub    %edi,%eax
    cmp    %ecx,%eax
    jge    jump_581d1
    or     %eax,%eax
    js     jump_581c2
    add    %eax,%edi
    sub    %eax,%ecx
    add    %eax,%esi
  jump_581c2:
    testl  $0x400,-0x1c(%ebp)
    je     jump_5813f
    jne    jump_5824f
  jump_581d1:
    add    %ecx,%edi
    add    %ecx,%esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5817b
    jne    jump_581ac
    jb     jump_58166
  jump_581e0:
    jmp    jump_582c7
  jump_581e5:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58209
    jne    jump_5824c
    jae    jump_58282
  jump_581f4:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58209
    jne    jump_5824c
    jb     jump_581f4
    jae    jump_58282
  jump_58209:
    movzbl %al,%ecx
  jump_5820c:
    cmp    -0x2c(%ebp),%edi
    jg     jump_582a7
    mov    %edi,%eax
    add    %ecx,%eax
    dec    %eax
    sub    -0x2c(%ebp),%eax
    cltd
    not    %edx
    and    %eax,%edx
    sub    %edx,%ecx
    mov    (%esi),%al
    inc    %esi
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %al,%ah
    rol    $0x8,%eax
    mov    %ah,%al
    rol    $0x8,%eax
    mov    %ah,%al
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    add    %edx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58209
    jae    jump_58282
    je     jump_581f4
  jump_5824c:
    movzbl %al,%ecx
  jump_5824f:
    cmp    -0x2c(%ebp),%edi
    jg     jump_582b8
    mov    %edi,%eax
    add    %ecx,%eax
    dec    %eax
    sub    -0x2c(%ebp),%eax
    cltd
    not    %edx
    and    %eax,%edx
    sub    %edx,%ecx
    push   %ecx
    and    $0x3,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    pop    %ecx
    shr    $0x2,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    add    %edx,%edi
    add    %edx,%esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58209
    jne    jump_5824c
    jb     jump_581f4
  jump_58282:
    jmp    jump_582c7
  jump_5828f:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_582a4
    jne    jump_582b5
    jb     jump_5828f
    jae    jump_582c7
  jump_582a4:
    movzbl %al,%ecx
  jump_582a7:
    add    %ecx,%edi
    inc    %esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_582a4
    jae    jump_582c7
    je     jump_5828f
  jump_582b5:
    movzbl %al,%ecx
  jump_582b8:
    add    %ecx,%edi
    add    %ecx,%esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_582a4
    jne    jump_582b5
    jb     jump_5828f
  jump_582c7:
    mov    -0x48(%ebp),%eax
    add    %eax,-0x24(%ebp)
    add    %eax,-0x28(%ebp)
    add    %eax,-0x2c(%ebp)
    incl   -0x20(%ebp)
  jump_582d6:
    mov    -0x20(%ebp),%eax
    cmp    -0x18(%ebp),%eax
    jle    jump_580ce
  jump_582e2:
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_582ea:
    mov    $0xfffffffd,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_582f5:
    mov    $0xfffffffc,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_58300:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%esi),%eax
    add    %eax,0x10(%ebp)
    mov    0x8(%esi),%eax
    add    %eax,0x14(%ebp)
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,0x18(%ebp)
    jle    jump_583bf
    mov    0xc(%ebp),%esi
    mov    (%ebx),%edi
    mov    0x8(%esi),%eax
    add    0x10(%ebp),%eax
    add    %eax,%edi
    mov    0xc(%esi),%eax
    mov    %eax,%ebx
    add    0x14(%ebp),%eax
    mull   0x18(%ebp)
    add    %eax,%edi
    mov    %edi,%edx
    mov    0x10(%esi),%eax
    mov    0x14(%esi),%eax
    inc    %eax
    sub    %ebx,%eax
    mov    %eax,%ebx
    jle    jump_583bf
    add    $0x18,%esi
  jump_58354:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58374
    jne    jump_5839d
    jae    jump_583b7
  jump_5835f:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58374
    jne    jump_5839d
    jb     jump_5835f
    jae    jump_583b7
  jump_58374:
    movzbl %al,%ecx
    mov    (%esi),%al
    inc    %esi
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %al,%ah
    rol    $0x8,%eax
    mov    %ah,%al
    rol    $0x8,%eax
    mov    %ah,%al
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58374
    jae    jump_583b7
    je     jump_5835f
  jump_5839d:
    movzbl %al,%ecx
    push   %ecx
    and    $0x3,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    pop    %ecx
    shr    $0x2,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58374
    jne    jump_5839d
    jb     jump_5835f
  jump_583b7:
    add    0x18(%ebp),%edx
    mov    %edx,%edi
    dec    %ebx
    jne    jump_58354
  jump_583bf:
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_583c7:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    $data_88308,%edi
    mov    $0x40,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_583e6:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffb0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x48(%ebp)
    jle    jump_58465
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_58465
    mov    0x4(%esi),%eax
    mov    %eax,-0x4c(%ebp)
    cmp    $0x0,%eax
    jg     jump_58419
    mov    $0x0,%eax
  jump_58419:
    mov    %eax,-0x34(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x50(%ebp)
    cmp    $0x0,%eax
    jg     jump_5842c
    mov    $0x0,%eax
  jump_5842c:
    mov    %eax,-0x38(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x48(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5843c
    mov    %edx,%eax
  jump_5843c:
    mov    %eax,-0x3c(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5844b
    mov    %edx,%eax
  jump_5844b:
    mov    %eax,-0x40(%ebp)
    mov    -0x3c(%ebp),%eax
    cmp    -0x34(%ebp),%eax
    jl     jump_58470
    mov    -0x40(%ebp),%eax
    cmp    -0x38(%ebp),%eax
    jl     jump_58470
    mov    (%ebx),%eax
    mov    %eax,-0x44(%ebp)
    jmp    jump_5847b
  jump_58465:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_58470:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5847b:
    mov    -0x4c(%ebp),%eax
    add    %eax,0x14(%ebp)
    mov    -0x50(%ebp),%eax
    add    %eax,0x18(%ebp)
    mov    0x10(%ebp),%esi
    shl    $0x3,%esi
    add    $0x8,%esi
    add    0xc(%ebp),%esi
    mov    (%esi),%esi
    add    0xc(%ebp),%esi
    mov    %esi,-0x30(%ebp)
    mov    0x8(%esi),%eax
    add    0x14(%ebp),%eax
    mov    %eax,-0xc(%ebp)
    mov    0xc(%esi),%eax
    add    0x18(%ebp),%eax
    mov    %eax,-0x10(%ebp)
    mov    0x10(%esi),%eax
    add    0x14(%ebp),%eax
    mov    %eax,-0x14(%ebp)
    mov    0x14(%esi),%eax
    add    0x18(%ebp),%eax
    mov    %eax,-0x18(%ebp)
    add    $0x18,%esi
    mov    -0x14(%ebp),%eax
    cmp    -0xc(%ebp),%eax
    jl     jump_588b3
    mov    -0x18(%ebp),%eax
    cmp    -0x10(%ebp),%eax
    jl     jump_588b3
    xor    %edx,%edx
    mov    -0xc(%ebp),%eax
    sub    -0x34(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x3c(%ebp),%eax
    sub    -0xc(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x10(%ebp),%eax
    sub    -0x38(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x40(%ebp),%eax
    sub    -0x10(%ebp),%eax
    shl    %eax
    adc    %dl,%dl
    mov    -0x14(%ebp),%eax
    sub    -0x34(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x3c(%ebp),%eax
    sub    -0x14(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x18(%ebp),%eax
    sub    -0x38(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    -0x40(%ebp),%eax
    sub    -0x18(%ebp),%eax
    shl    %eax
    adc    %dh,%dh
    mov    %edx,-0x1c(%ebp)
    test   %dl,%dh
    jne    jump_588a8
    or     %dh,%dl
    jne    jump_58566
    mov    0x8(%ebp),%esi
    mov    0x4(%esi),%eax
    sub    %eax,0x14(%ebp)
    mov    0x8(%esi),%eax
    sub    %eax,0x18(%ebp)
    push   -0x48(%ebp)
    push   0x18(%ebp)
    push   0x14(%ebp)
    push   -0x30(%ebp)
    push   0x8(%ebp)
    call   func_588be
    add    $0x14,%esp
    jmp    jump_588a0
  jump_58566:
    mov    -0x10(%ebp),%eax
    imull  -0x48(%ebp)
    add    -0x44(%ebp),%eax
    add    -0xc(%ebp),%eax
    mov    %eax,%edi
    mov    -0x10(%ebp),%ecx
    mov    %ecx,-0x20(%ebp)
    jmp    jump_58592
  jump_5857c:
    movzbl %al,%eax
    add    %eax,%esi
    dec    %esi
  jump_58582:
    inc    %esi
  jump_58583:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58582
    jne    jump_5857c
    jb     jump_58582
    add    -0x48(%ebp),%edi
    inc    %ecx
  jump_58592:
    cmp    -0x38(%ebp),%ecx
    jl     jump_58583
    mov    %edi,-0x24(%ebp)
    mov    %ecx,-0x20(%ebp)
    mov    %edi,%eax
    sub    -0xc(%ebp),%eax
    add    -0x34(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    mov    %edi,%eax
    sub    -0xc(%ebp),%eax
    add    -0x3c(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    jmp    jump_58894
  jump_585b8:
    mov    -0x20(%ebp),%eax
    cmp    -0x40(%ebp),%eax
    jg     jump_588a0
    mov    -0x24(%ebp),%edi
    testl  $0x8,-0x1c(%ebp)
    jne    jump_586ad
    testl  $0x400,-0x1c(%ebp)
    jne    jump_5873b
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58609
    jne    jump_5863a
    jae    jump_586a8
  jump_585f0:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58609
    jne    jump_5863a
    jb     jump_585f0
    jae    jump_586a8
  jump_58609:
    movzbl %al,%ecx
  jump_5860c:
    xor    %eax,%eax
    mov    (%esi),%al
    inc    %esi
    mov    data_88308(%eax),%al
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %al,%ah
    rol    $0x8,%eax
    mov    %ah,%al
    rol    $0x8,%eax
    mov    %ah,%al
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58609
    jae    jump_586a8
    je     jump_585f0
  jump_5863a:
    movzbl %al,%ecx
  jump_5863d:
    xor    %eax,%eax
    or     %ecx,%ecx
    je     jump_58695
    cmp    $0x4,%ecx
    jl     jump_58686
  jump_58648:
    mov    (%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,(%edi)
    mov    0x1(%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,0x1(%edi)
    mov    0x2(%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,0x2(%edi)
    mov    0x3(%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,0x3(%edi)
    add    $0x4,%esi
    add    $0x4,%edi
    sub    $0x4,%ecx
    je     jump_58695
    cmp    $0x4,%ecx
    jge    jump_58648
  jump_58686:
    mov    (%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,(%edi)
    inc    %esi
    inc    %edi
    dec    %ecx
    jne    jump_58686
  jump_58695:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58609
    jne    jump_5863a
    jb     jump_585f0
  jump_586a8:
    jmp    jump_58885
  jump_586ad:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_586cd
    jne    jump_586fe
    jae    jump_58736
  jump_586b8:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_586cd
    jne    jump_586fe
    jb     jump_586b8
    jae    jump_58736
  jump_586cd:
    movzbl %al,%ecx
    mov    -0x28(%ebp),%eax
    sub    %edi,%eax
    cmp    %ecx,%eax
    jge    jump_586f0
    or     %eax,%eax
    js     jump_586e1
    add    %eax,%edi
    sub    %eax,%ecx
  jump_586e1:
    testl  $0x400,-0x1c(%ebp)
    je     jump_5860c
    jne    jump_58766
  jump_586f0:
    add    %ecx,%edi
    inc    %esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_586cd
    jae    jump_58736
    je     jump_586b8
  jump_586fe:
    movzbl %al,%ecx
    mov    -0x28(%ebp),%eax
    sub    %edi,%eax
    cmp    %ecx,%eax
    jge    jump_58727
    or     %eax,%eax
    js     jump_58714
    add    %eax,%edi
    sub    %eax,%ecx
    add    %eax,%esi
  jump_58714:
    testl  $0x400,-0x1c(%ebp)
    je     jump_5863d
    jne    jump_587b5
  jump_58727:
    add    %ecx,%edi
    add    %ecx,%esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_586cd
    jne    jump_586fe
    jb     jump_586b8
  jump_58736:
    jmp    jump_58885
  jump_5873b:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58763
    jne    jump_587b2
    jae    jump_58840
  jump_5874a:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58763
    jne    jump_587b2
    jb     jump_5874a
    jae    jump_58840
  jump_58763:
    movzbl %al,%ecx
  jump_58766:
    cmp    -0x2c(%ebp),%edi
    jg     jump_58865
    mov    %edi,%eax
    add    %ecx,%eax
    dec    %eax
    sub    -0x2c(%ebp),%eax
    cltd
    not    %edx
    and    %eax,%edx
    sub    %edx,%ecx
    xor    %eax,%eax
    mov    (%esi),%al
    inc    %esi
    mov    data_88308(%eax),%al
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %al,%ah
    rol    $0x8,%eax
    mov    %ah,%al
    rol    $0x8,%eax
    mov    %ah,%al
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    add    %edx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58763
    jae    jump_58840
    je     jump_5874a
  jump_587b2:
    movzbl %al,%ecx
  jump_587b5:
    cmp    -0x2c(%ebp),%edi
    jg     jump_58876
    mov    %edi,%eax
    add    %ecx,%eax
    dec    %eax
    sub    -0x2c(%ebp),%eax
    cltd
    not    %edx
    and    %eax,%edx
    sub    %edx,%ecx
    xor    %eax,%eax
    or     %ecx,%ecx
    je     jump_58825
    cmp    $0x4,%ecx
    jl     jump_58816
  jump_587d8:
    mov    (%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,(%edi)
    mov    0x1(%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,0x1(%edi)
    mov    0x2(%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,0x2(%edi)
    mov    0x3(%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,0x3(%edi)
    add    $0x4,%esi
    add    $0x4,%edi
    sub    $0x4,%ecx
    je     jump_58825
    cmp    $0x4,%ecx
    jge    jump_587d8
  jump_58816:
    mov    (%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,(%edi)
    inc    %esi
    inc    %edi
    dec    %ecx
    jne    jump_58816
  jump_58825:
    add    %edx,%edi
    add    %edx,%esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58763
    jne    jump_587b2
    jb     jump_5874a
  jump_58840:
    jmp    jump_58885
  jump_5884d:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58862
    jne    jump_58873
    jb     jump_5884d
    jae    jump_58885
  jump_58862:
    movzbl %al,%ecx
  jump_58865:
    add    %ecx,%edi
    inc    %esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58862
    jae    jump_58885
    je     jump_5884d
  jump_58873:
    movzbl %al,%ecx
  jump_58876:
    add    %ecx,%edi
    add    %ecx,%esi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_58862
    jne    jump_58873
    jb     jump_5884d
  jump_58885:
    mov    -0x48(%ebp),%eax
    add    %eax,-0x24(%ebp)
    add    %eax,-0x28(%ebp)
    add    %eax,-0x2c(%ebp)
    incl   -0x20(%ebp)
  jump_58894:
    mov    -0x20(%ebp),%eax
    cmp    -0x18(%ebp),%eax
    jle    jump_585b8
  jump_588a0:
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_588a8:
    mov    $0xfffffffd,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_588b3:
    mov    $0xfffffffc,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_588be:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%esi),%eax
    add    %eax,0x10(%ebp)
    mov    0x8(%esi),%eax
    add    %eax,0x14(%ebp)
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,0x18(%ebp)
    jle    jump_589e9
    mov    0xc(%ebp),%esi
    mov    (%ebx),%edi
    mov    0x8(%esi),%eax
    add    0x10(%ebp),%eax
    add    %eax,%edi
    mov    0xc(%esi),%eax
    mov    %eax,%ebx
    add    0x14(%ebp),%eax
    mull   0x18(%ebp)
    add    %eax,%edi
    mov    %edi,%edx
    mov    0x10(%esi),%eax
    mov    0x14(%esi),%eax
    inc    %eax
    sub    %ebx,%eax
    mov    %eax,%ebx
    jle    jump_589e9
    add    $0x18,%esi
  jump_58916:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5893e
    jne    jump_5896f
    jae    jump_589dd
  jump_58925:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5893e
    jne    jump_5896f
    jb     jump_58925
    jae    jump_589dd
  jump_5893e:
    movzbl %al,%ecx
    xor    %eax,%eax
    mov    (%esi),%al
    inc    %esi
    mov    data_88308(%eax),%al
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %al,%ah
    rol    $0x8,%eax
    mov    %ah,%al
    rol    $0x8,%eax
    mov    %ah,%al
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5893e
    jae    jump_589dd
    je     jump_58925
  jump_5896f:
    movzbl %al,%ecx
    xor    %eax,%eax
    or     %ecx,%ecx
    je     jump_589ca
    cmp    $0x4,%ecx
    jl     jump_589bb
  jump_5897d:
    mov    (%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,(%edi)
    mov    0x1(%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,0x1(%edi)
    mov    0x2(%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,0x2(%edi)
    mov    0x3(%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,0x3(%edi)
    add    $0x4,%esi
    add    $0x4,%edi
    sub    $0x4,%ecx
    je     jump_589ca
    cmp    $0x4,%ecx
    jge    jump_5897d
  jump_589bb:
    mov    (%esi),%al
    mov    data_88308(%eax),%al
    mov    %al,(%edi)
    inc    %esi
    inc    %edi
    dec    %ecx
    jne    jump_589bb
  jump_589ca:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_5893e
    jne    jump_5896f
    jb     jump_58925
  jump_589dd:
    add    0x18(%ebp),%edx
    mov    %edx,%edi
    dec    %ebx
    jne    jump_58916
  jump_589e9:
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_589f1:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffff10,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    cmpl   $0x10000,0x24(%ebp)
    jne    jump_58a1d
    cmpl   $0x10000,0x28(%ebp)
    jne    jump_58a1d
    cmpl   $0x0,0x20(%ebp)
    je     jump_5955b
  jump_58a1d:
    push   0x10(%ebp)
    push   0xc(%ebp)
    call   func_5c4a8
    add    $0x8,%esp
    mov    %eax,%ecx
    shr    $0x10,%eax
    dec    %eax
    mov    %eax,-0x44(%ebp)
    and    $0xffff,%ecx
    dec    %ecx
    mov    %ecx,-0x48(%ebp)
    lea    -0x14(%ebp),%ebx
    lea    -0x28(%ebp),%esi
    mov    %ebx,(%esi)
    mov    0x1c(%ebp),%edx
    mov    %edx,(%ebx)
    movl   $0x0,0x4(%esi)
    movl   $0x0,data_88414
    movl   $0x0,data_88450
    movl   $0x0,0x8(%esi)
    movl   $0x0,data_88418
    movl   $0x0,data_8842c
    mov    %eax,0x4(%ebx)
    mov    %eax,0xc(%esi)
    mov    %eax,data_88428
    mov    %eax,data_8843c
    mov    %ecx,0x8(%ebx)
    mov    %ecx,0x10(%esi)
    mov    %ecx,data_88440
    mov    %ecx,data_88454
    push   0x10(%ebp)
    push   0xc(%ebp)
    call   func_5c4dc
    add    $0x8,%esp
    mov    %eax,%ebx
    cwtl
    neg    %eax
    mov    %eax,-0x3c(%ebp)
    sar    $0x10,%ebx
    neg    %ebx
    mov    %ebx,-0x40(%ebp)
    testl  $0x2,0x2c(%ebp)
    jne    jump_58b16
    push   $0xff
    lea    -0x28(%ebp),%eax
    push   %eax
    call   func_59d90
    add    $0x8,%esp
    testl  $0x1,0x2c(%ebp)
    je     jump_58afe
    push   -0x3c(%ebp)
    push   -0x40(%ebp)
    push   0x10(%ebp)
    push   0xc(%ebp)
    lea    -0x28(%ebp),%eax
    push   %eax
    call   func_583e6
    add    $0x14,%esp
    jmp    jump_58b16
  jump_58afe:
    push   -0x3c(%ebp)
    push   -0x40(%ebp)
    push   0x10(%ebp)
    push   0xc(%ebp)
    lea    -0x28(%ebp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
  jump_58b16:
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0xe8(%ebp)
    jle    jump_58bb7
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_58bb7
    mov    0x4(%esi),%eax
    mov    %eax,-0xec(%ebp)
    cmp    $0x0,%eax
    jg     jump_58b4a
    mov    $0x0,%eax
  jump_58b4a:
    mov    %eax,-0xd4(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0xf0(%ebp)
    cmp    $0x0,%eax
    jg     jump_58b63
    mov    $0x0,%eax
  jump_58b63:
    mov    %eax,-0xd8(%ebp)
    mov    0xc(%esi),%eax
    mov    -0xe8(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_58b79
    mov    %edx,%eax
  jump_58b79:
    mov    %eax,-0xdc(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_58b8b
    mov    %edx,%eax
  jump_58b8b:
    mov    %eax,-0xe0(%ebp)
    mov    -0xdc(%ebp),%eax
    cmp    -0xd4(%ebp),%eax
    jl     jump_58bc2
    mov    -0xe0(%ebp),%eax
    cmp    -0xd8(%ebp),%eax
    jl     jump_58bc2
    mov    (%ebx),%eax
    mov    %eax,-0xe4(%ebp)
    jmp    jump_58bcd
  jump_58bb7:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_58bc2:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_58bcd:
    mov    0x14(%ebp),%eax
    sub    -0x40(%ebp),%eax
    mov    %eax,-0x4c(%ebp)
    mov    0x18(%ebp),%eax
    sub    -0x3c(%ebp),%eax
    mov    %eax,-0x50(%ebp)
    movl   $0x0,-0x30(%ebp)
    movl   $0x0,-0x2c(%ebp)
    push   0x28(%ebp)
    push   0x24(%ebp)
    push   0x20(%ebp)
    lea    -0x40(%ebp),%eax
    push   %eax
    lea    -0x38(%ebp),%eax
    push   %eax
    lea    -0x30(%ebp),%eax
    push   %eax
    call   func_5b939
    add    $0x18,%esp
    mov    -0x38(%ebp),%eax
    add    -0x4c(%ebp),%eax
    mov    %eax,data_88408
    mov    -0x34(%ebp),%eax
    add    -0x50(%ebp),%eax
    mov    %eax,data_8840c
    mov    -0x44(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    movl   $0x0,-0x2c(%ebp)
    push   0x28(%ebp)
    push   0x24(%ebp)
    push   0x20(%ebp)
    lea    -0x40(%ebp),%eax
    push   %eax
    lea    -0x38(%ebp),%eax
    push   %eax
    lea    -0x30(%ebp),%eax
    push   %eax
    call   func_5b939
    add    $0x18,%esp
    mov    -0x38(%ebp),%eax
    add    -0x4c(%ebp),%eax
    mov    %eax,data_8841c
    mov    -0x34(%ebp),%eax
    add    -0x50(%ebp),%eax
    mov    %eax,data_88420
    mov    -0xec(%ebp),%eax
    add    %eax,data_88408
    add    %eax,data_8841c
    mov    -0xf0(%ebp),%eax
    add    %eax,data_8840c
    add    %eax,data_88420
    mov    -0x44(%ebp),%eax
    mov    -0x48(%ebp),%ebx
    mov    %eax,-0x30(%ebp)
    mov    %ebx,-0x2c(%ebp)
    push   0x28(%ebp)
    push   0x24(%ebp)
    push   0x20(%ebp)
    lea    -0x40(%ebp),%eax
    push   %eax
    lea    -0x38(%ebp),%eax
    push   %eax
    lea    -0x30(%ebp),%eax
    push   %eax
    call   func_5b939
    add    $0x18,%esp
    mov    -0x38(%ebp),%eax
    add    -0x4c(%ebp),%eax
    mov    %eax,data_88430
    mov    -0x34(%ebp),%eax
    add    -0x50(%ebp),%eax
    mov    %eax,data_88434
    mov    -0x48(%ebp),%eax
    movl   $0x0,-0x30(%ebp)
    mov    %eax,-0x2c(%ebp)
    push   0x28(%ebp)
    push   0x24(%ebp)
    push   0x20(%ebp)
    lea    -0x40(%ebp),%eax
    push   %eax
    lea    -0x38(%ebp),%eax
    push   %eax
    lea    -0x30(%ebp),%eax
    push   %eax
    call   func_5b939
    add    $0x18,%esp
    mov    -0x38(%ebp),%eax
    add    -0x4c(%ebp),%eax
    mov    %eax,data_88444
    mov    -0x34(%ebp),%eax
    add    -0x50(%ebp),%eax
    mov    %eax,data_88448
    mov    -0xec(%ebp),%eax
    add    %eax,data_88430
    add    %eax,data_88444
    mov    -0xf0(%ebp),%eax
    add    %eax,data_88434
    add    %eax,data_88448
    lea    -0x14(%ebp),%ebx
    mov    (%ebx),%eax
    mov    %eax,-0x58(%ebp)
    mov    0x4(%ebx),%ecx
    inc    %ecx
    mov    %ecx,-0x54(%ebp)
    push   %ds
    pop    %es
    mov    $data_88408,%ebx
    mov    %ebx,%eax
    add    $0x50,%eax
    mov    %ebx,-0x64(%ebp)
    mov    %eax,-0x68(%ebp)
    mov    $0x7fff,%esi
    mov    $0xffff8000,%edi
    mov    $0xf,%ecx
  jump_58d57:
    mov    $0x0,%edx
    mov    (%ebx),%eax
    sub    -0xd4(%ebp),%eax
    shld   $0x1,%eax,%edx
    mov    -0xdc(%ebp),%eax
    sub    (%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    0x4(%ebx),%eax
    sub    -0xd8(%ebp),%eax
    shld   $0x1,%eax,%edx
    mov    -0xe0(%ebp),%eax
    sub    0x4(%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    0x4(%ebx),%eax
    cmp    %esi,%eax
    jg     jump_58d9a
    mov    %eax,%esi
    mov    %ebx,-0x6c(%ebp)
  jump_58d9a:
    cmp    %edi,%eax
    jl     jump_58da0
    mov    %eax,%edi
  jump_58da0:
    and    %edx,%ecx
    add    $0x14,%ebx
    cmp    -0x68(%ebp),%ebx
    jne    jump_58d57
    or     %ecx,%ecx
    jne    jump_5938c
    mov    -0x6c(%ebp),%eax
    mov    %eax,-0x78(%ebp)
    mov    %eax,-0x7c(%ebp)
    mov    %esi,-0x8c(%ebp)
    cmp    %esi,%edi
    je     jump_5938c
  jump_58dc9:
    mov    -0x78(%ebp),%ebx
    mov    %ebx,-0x70(%ebp)
    mov    %ebx,%esi
    sub    $0x14,%esi
    cmp    -0x64(%ebp),%esi
    jge    jump_58ddf
    mov    -0x68(%ebp),%esi
    sub    $0x14,%esi
  jump_58ddf:
    mov    %esi,-0x78(%ebp)
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    cmp    -0xd8(%ebp),%edx
    jge    jump_58df8
    cmp    -0xd8(%ebp),%ecx
    jle    jump_58dc9
  jump_58df8:
    sub    %edx,%ecx
    je     jump_58dc9
    mov    %ecx,-0x80(%ebp)
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xa8(%ebp)
    mov    -0x80(%ebp),%ecx
    mov    0xc(%esi),%edx
    sub    0xc(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xb0(%ebp)
    mov    -0x80(%ebp),%ecx
    mov    0x10(%esi),%edx
    sub    0x10(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xb8(%ebp)
    mov    (%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,-0x90(%ebp)
    mov    0xc(%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,-0x98(%ebp)
    mov    0x10(%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,-0xa0(%ebp)
  jump_58e8f:
    mov    -0x7c(%ebp),%ebx
    mov    %ebx,-0x74(%ebp)
    mov    %ebx,%esi
    add    $0x14,%esi
    cmp    -0x68(%ebp),%esi
    jl     jump_58ea2
    mov    -0x64(%ebp),%esi
  jump_58ea2:
    mov    %esi,-0x7c(%ebp)
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    cmp    -0xd8(%ebp),%edx
    jge    jump_58ebb
    cmp    -0xd8(%ebp),%ecx
    jle    jump_58e8f
  jump_58ebb:
    sub    %edx,%ecx
    je     jump_58e8f
    mov    %ecx,-0x84(%ebp)
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xac(%ebp)
    mov    -0x84(%ebp),%ecx
    mov    0xc(%esi),%edx
    sub    0xc(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xb4(%ebp)
    mov    -0x84(%ebp),%ecx
    mov    0x10(%esi),%edx
    sub    0x10(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xbc(%ebp)
    mov    (%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,-0x94(%ebp)
    mov    0xc(%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,-0x9c(%ebp)
    mov    0x10(%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,-0xa4(%ebp)
    mov    -0xe0(%ebp),%eax
    sub    -0x8c(%ebp),%eax
    sub    -0xe0(%ebp),%edi
    jg     jump_58f71
    add    %edi,%eax
  jump_58f71:
    mov    %eax,-0x88(%ebp)
    mov    -0xd8(%ebp),%eax
    sub    -0x8c(%ebp),%eax
    jle    jump_59028
    sub    %eax,-0x88(%ebp)
    mov    -0xd8(%ebp),%ecx
    mov    %ecx,-0x8c(%ebp)
    mov    -0x70(%ebp),%ebx
    sub    0x4(%ebx),%ecx
    sub    %ecx,-0x80(%ebp)
    shl    $0x10,%ecx
    mov    -0xa8(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0x90(%ebp)
    mov    -0xb0(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0x98(%ebp)
    mov    -0xb8(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0xa0(%ebp)
    mov    -0xd8(%ebp),%ecx
    mov    -0x74(%ebp),%ebx
    sub    0x4(%ebx),%ecx
    sub    %ecx,-0x84(%ebp)
    shl    $0x10,%ecx
    mov    -0xac(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0x94(%ebp)
    mov    -0xb4(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0x9c(%ebp)
    mov    -0xbc(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0xa4(%ebp)
  jump_59028:
    mov    -0x8c(%ebp),%eax
    imull  -0xe8(%ebp)
    add    -0xe4(%ebp),%eax
    add    $0x0,%eax
    mov    %eax,-0x5c(%ebp)
    mov    -0x90(%ebp),%eax
    mov    -0x94(%ebp),%ebx
    mov    -0x98(%ebp),%ecx
    mov    -0x9c(%ebp),%edx
    mov    -0xa0(%ebp),%esi
    mov    -0xa4(%ebp),%edi
  jump_59064:
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    cmp    %eax,%ebx
    jg     jump_59073
    xchg   %eax,%ebx
    xchg   %ecx,%edx
    xchg   %esi,%edi
  jump_59073:
    sar    $0x10,%eax
    cmp    -0xdc(%ebp),%eax
    jg     jump_59335
    sar    $0x10,%ebx
    cmp    -0xd4(%ebp),%ebx
    jl     jump_59335
    mov    %eax,-0xc0(%ebp)
    mov    %ebx,-0xc4(%ebp)
    mov    %ecx,-0xd0(%ebp)
    sub    %eax,%ebx
    je     jump_59178
    push   %ebx
    sub    %ecx,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ebx
    sar    $0x10,%edx
    idiv   %ebx
    mov    %eax,-0xc8(%ebp)
    shld   $0x10,%eax,%edx
    pop    %ebx
    and    $0xffff,%eax
    and    $0xffff,%edx
    mov    $0x1,%ecx
    test   $0x8000,%edx
    je     jump_590ed
    or     $0xffff0000,%edx
    neg    %ecx
    cmp    $0x1,%eax
    sbb    $0xffffffff,%edx
  jump_590ed:
    add    %edx,%ecx
    push   %ecx
    push   %edx
    sub    %esi,%edi
    mov    %edi,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ebx
    sar    $0x10,%edx
    idiv   %ebx
    mov    %eax,-0xcc(%ebp)
    shld   $0x10,%eax,%edx
    and    $0xffff,%eax
    and    $0xffff,%edx
    mov    -0x54(%ebp),%ecx
    test   $0x8000,%edx
    je     jump_5912b
    neg    %ecx
    cmp    $0x1,%eax
    sbb    $0xffffffff,%edx
  jump_5912b:
    mov    -0x54(%ebp),%eax
    imul   %dx
    cwtl
    pop    %edx
    pop    %ebx
    add    %eax,%edx
    mov    %edx,data_88458
    add    %ecx,%edx
    mov    %edx,data_8845c
    add    %eax,%ebx
    mov    %ebx,data_88460
    add    %ecx,%ebx
    mov    %ebx,data_88464
    mov    -0xd4(%ebp),%ecx
    sub    -0xc0(%ebp),%ecx
    jg     jump_593bb
  jump_59166:
    mov    -0xc4(%ebp),%eax
    sub    -0xdc(%ebp),%eax
    jg     jump_593e9
  jump_59178:
    mov    %esi,%ecx
    shr    $0x10,%esi
    mov    %esi,%eax
    mull   -0x54(%ebp)
    add    -0x58(%ebp),%eax
    mov    -0xd0(%ebp),%esi
    shr    $0x10,%esi
    add    %eax,%esi
    mov    -0xc0(%ebp),%eax
    mov    -0x5c(%ebp),%edi
    add    %eax,%edi
    mov    -0xc4(%ebp),%ebx
    sub    %eax,%ebx
    push   %ebp
    mov    -0xd0(%ebp),%edx
    mov    -0xc8(%ebp),%eax
    or     %eax,%eax
    jns    jump_591b8
    neg    %eax
    not    %edx
  jump_591b8:
    shl    $0x10,%eax
    shl    $0x10,%edx
    mov    -0xcc(%ebp),%ebp
    or     %ebp,%ebp
    jns    jump_591cc
    neg    %ebp
    not    %ecx
  jump_591cc:
    shl    $0x10,%ebp
    shl    $0x10,%ecx
    push   %ebx
    xor    %ebx,%ebx
    cmpl   $0x5,(%esp)
    jl     jump_59297
  jump_591df:
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_591e8
    mov    %bl,(%edi)
  jump_591e8:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88458(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_59203
    mov    %bl,0x1(%edi)
  jump_59203:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88458(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5921e
    mov    %bl,0x2(%edi)
  jump_5921e:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88458(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_59239
    mov    %bl,0x3(%edi)
  jump_59239:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88458(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_59254
    mov    %bl,0x4(%edi)
  jump_59254:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88458(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5926f
    mov    %bl,0x5(%edi)
  jump_5926f:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88458(,%ebx,4),%esi
    add    $0x6,%edi
    subl   $0x6,(%esp)
    js     jump_59331
    cmpl   $0x5,(%esp)
    jge    jump_591df
  jump_59297:
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_592a0
    mov    %bl,(%edi)
  jump_592a0:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88458(,%ebx,4),%esi
    decl   (%esp)
    js     jump_59331
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_592c0
    mov    %bl,0x1(%edi)
  jump_592c0:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88458(,%ebx,4),%esi
    decl   (%esp)
    js     jump_59331
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_592e0
    mov    %bl,0x2(%edi)
  jump_592e0:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88458(,%ebx,4),%esi
    decl   (%esp)
    js     jump_59331
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_59300
    mov    %bl,0x3(%edi)
  jump_59300:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88458(,%ebx,4),%esi
    decl   (%esp)
    js     jump_59331
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_59320
    mov    %bl,0x4(%edi)
  jump_59320:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88458(,%ebx,4),%esi
  jump_59331:
    add    $0x4,%esp
    pop    %ebp
  jump_59335:
    mov    -0xe8(%ebp),%edi
    add    %edi,-0x5c(%ebp)
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %eax
    decl   -0x88(%ebp)
    js     jump_5938c
    je     jump_59392
    decl   -0x80(%ebp)
    je     jump_593f4
    add    -0xa8(%ebp),%eax
    add    -0xb0(%ebp),%ecx
    add    -0xb8(%ebp),%esi
  jump_59369:
    decl   -0x84(%ebp)
    je     jump_594a4
    add    -0xac(%ebp),%ebx
    add    -0xb4(%ebp),%edx
    add    -0xbc(%ebp),%edi
    jmp    jump_59064
  jump_5938c:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_59392:
    add    -0xa8(%ebp),%eax
    add    -0xb0(%ebp),%ecx
    add    -0xb8(%ebp),%esi
    add    -0xac(%ebp),%ebx
    add    -0xb4(%ebp),%edx
    add    -0xbc(%ebp),%edi
    jmp    jump_59064
  jump_593bb:
    add    %ecx,-0xc0(%ebp)
    shl    $0x10,%ecx
    mov    -0xc8(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,-0xd0(%ebp)
    mov    -0xcc(%ebp),%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,%esi
    jmp    jump_59166
  jump_593e9:
    sub    %eax,-0xc4(%ebp)
    jmp    jump_59178
  jump_593f4:
    push   %ebx
    push   %edx
    mov    -0x78(%ebp),%ebx
    mov    %ebx,-0x70(%ebp)
    mov    %ebx,%esi
    sub    $0x14,%esi
    cmp    -0x64(%ebp),%esi
    jge    jump_5940c
    mov    -0x68(%ebp),%esi
    sub    $0x14,%esi
  jump_5940c:
    mov    %esi,-0x78(%ebp)
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,-0x80(%ebp)
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xa8(%ebp)
    mov    -0x80(%ebp),%ecx
    mov    0xc(%esi),%edx
    sub    0xc(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xb0(%ebp)
    mov    -0x80(%ebp),%ecx
    mov    0x10(%esi),%edx
    sub    0x10(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xb8(%ebp)
    mov    (%ebx),%eax
    shl    $0x10,%eax
    add    $0x8000,%eax
    mov    0xc(%ebx),%ecx
    shl    $0x10,%ecx
    add    $0x8000,%ecx
    mov    0x10(%ebx),%esi
    shl    $0x10,%esi
    add    $0x8000,%esi
    pop    %edx
    pop    %ebx
    jmp    jump_59369
  jump_594a4:
    push   %eax
    push   %ecx
    mov    -0x7c(%ebp),%ebx
    mov    %ebx,-0x74(%ebp)
    mov    %ebx,%edi
    add    $0x14,%edi
    cmp    -0x68(%ebp),%edi
    jl     jump_594b9
    mov    -0x64(%ebp),%edi
  jump_594b9:
    mov    %edi,-0x7c(%ebp)
    mov    0x4(%edi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,-0x84(%ebp)
    mov    (%edi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xac(%ebp)
    mov    -0x84(%ebp),%ecx
    mov    0xc(%edi),%edx
    sub    0xc(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xb4(%ebp)
    mov    -0x84(%ebp),%ecx
    mov    0x10(%edi),%edx
    sub    0x10(%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,-0xbc(%ebp)
    mov    0xc(%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    0x10(%ebx),%edi
    shl    $0x10,%edi
    add    $0x8000,%edi
    mov    (%ebx),%ebx
    shl    $0x10,%ebx
    add    $0x8000,%ebx
    pop    %ecx
    pop    %eax
    jmp    jump_59064
  jump_5955b:
    testl  $0x1,0x2c(%ebp)
    je     jump_59580
    push   0x18(%ebp)
    push   0x14(%ebp)
    push   0x10(%ebp)
    push   0xc(%ebp)
    push   0x8(%ebp)
    call   func_583e6
    add    $0x14,%esp
    jmp    jump_5938c
  jump_59580:
    push   0x18(%ebp)
    push   0x14(%ebp)
    push   0x10(%ebp)
    push   0xc(%ebp)
    push   0x8(%ebp)
    call   func_57efc
    add    $0x14,%esp
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5959d:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffdc,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    movl   $0x0,-0x18(%ebp)
    movl   $0x0,-0x1c(%ebp)
    movl   $0x0,-0x20(%ebp)
    movl   $0x0,-0x24(%ebp)
    mov    0xc(%ebp),%esi
    shl    $0x3,%esi
    add    $0x8,%esi
    add    0x8(%ebp),%esi
    mov    (%esi),%esi
    add    0x8(%ebp),%esi
    mov    %esi,-0x4(%ebp)
    mov    -0x4(%ebp),%esi
    mov    0x8(%esi),%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x8(%ebp)
    mov    0xc(%esi),%eax
    mov    %eax,%ebx
    add    0x14(%ebp),%eax
    mov    %eax,-0xc(%ebp)
    mov    0x10(%esi),%eax
    add    0x10(%ebp),%eax
    mov    %eax,-0x10(%ebp)
    mov    0x14(%esi),%eax
    mov    %eax,%ecx
    add    0x14(%ebp),%ecx
    mov    %ecx,-0x14(%ebp)
    inc    %eax
    sub    %ebx,%eax
    mov    %eax,%ebx
    jle    jump_596c2
    add    $0x18,%esi
    movl   $0x7fffffff,-0x18(%ebp)
    movl   $0x7fffffff,-0x1c(%ebp)
    movl   $0x80000000,-0x20(%ebp)
    movl   $0x80000000,-0x24(%ebp)
    mov    -0xc(%ebp),%edx
  jump_59632:
    mov    -0x8(%ebp),%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_59655
    jne    jump_59688
    jae    jump_596ba
  jump_59640:
    mov    (%esi),%al
    inc    %esi
    movzbl %al,%ecx
    add    %ecx,%edi
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_59655
    jne    jump_59688
    jb     jump_59640
    jae    jump_596ba
  jump_59655:
    movzbl %al,%ecx
    mov    (%esi),%al
    inc    %esi
    cmp    %edi,-0x18(%ebp)
    jl     jump_59663
    mov    %edi,-0x18(%ebp)
  jump_59663:
    add    %ecx,%edi
    cmp    %edi,-0x20(%ebp)
    jg     jump_5966d
    mov    %edi,-0x20(%ebp)
  jump_5966d:
    cmp    %edx,-0x1c(%ebp)
    jl     jump_59675
    mov    %edx,-0x1c(%ebp)
  jump_59675:
    cmp    %edx,-0x24(%ebp)
    jg     jump_5967d
    mov    %edx,-0x24(%ebp)
  jump_5967d:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_59655
    jae    jump_596ba
    je     jump_59640
  jump_59688:
    movzbl %al,%ecx
    add    %ecx,%esi
    cmp    %edi,-0x18(%ebp)
    jl     jump_59695
    mov    %edi,-0x18(%ebp)
  jump_59695:
    add    %ecx,%edi
    cmp    %edi,-0x20(%ebp)
    jg     jump_5969f
    mov    %edi,-0x20(%ebp)
  jump_5969f:
    cmp    %edx,-0x1c(%ebp)
    jl     jump_596a7
    mov    %edx,-0x1c(%ebp)
  jump_596a7:
    cmp    %edx,-0x24(%ebp)
    jg     jump_596af
    mov    %edx,-0x24(%ebp)
  jump_596af:
    mov    (%esi),%al
    inc    %esi
    shr    %al
    ja     jump_59655
    jne    jump_59688
    jb     jump_59640
  jump_596ba:
    inc    %edx
    dec    %ebx
    jne    jump_59632
  jump_596c2:
    mov    0x18(%ebp),%eax
    and    $0x1,%eax
    je     jump_596de
    mov    0x10(%ebp),%eax
    add    0x10(%ebp),%eax
    mov    %eax,%ebx
    sub    -0x18(%ebp),%eax
    sub    -0x20(%ebp),%ebx
    mov    %eax,-0x20(%ebp)
    mov    %ebx,-0x18(%ebp)
  jump_596de:
    mov    0x18(%ebp),%eax
    and    $0x2,%eax
    je     jump_596fa
    mov    0x14(%ebp),%eax
    add    0x14(%ebp),%eax
    mov    %eax,%ebx
    sub    -0x1c(%ebp),%eax
    sub    -0x24(%ebp),%ebx
    mov    %eax,-0x24(%ebp)
    mov    %ebx,-0x1c(%ebp)
  jump_596fa:
    mov    0x1c(%ebp),%edi
    mov    -0x18(%ebp),%eax
    stos   %eax,%es:(%edi)
    mov    -0x1c(%ebp),%eax
    stos   %eax,%es:(%edi)
    mov    -0x20(%ebp),%eax
    stos   %eax,%es:(%edi)
    mov    -0x24(%ebp),%eax
    stos   %eax,%es:(%edi)
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_59d90:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffe0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x18(%ebp)
    jle    jump_59e0f
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_59e0f
    mov    0x4(%esi),%eax
    mov    %eax,-0x1c(%ebp)
    cmp    $0x0,%eax
    jg     jump_59dc3
    mov    $0x0,%eax
  jump_59dc3:
    mov    %eax,-0x4(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x20(%ebp)
    cmp    $0x0,%eax
    jg     jump_59dd6
    mov    $0x0,%eax
  jump_59dd6:
    mov    %eax,-0x8(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x18(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_59de6
    mov    %edx,%eax
  jump_59de6:
    mov    %eax,-0xc(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_59df5
    mov    %edx,%eax
  jump_59df5:
    mov    %eax,-0x10(%ebp)
    mov    -0xc(%ebp),%eax
    cmp    -0x4(%ebp),%eax
    jl     jump_59e1a
    mov    -0x10(%ebp),%eax
    cmp    -0x8(%ebp),%eax
    jl     jump_59e1a
    mov    (%ebx),%eax
    mov    %eax,-0x14(%ebp)
    jmp    jump_59e25
  jump_59e0f:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_59e1a:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_59e25:
    mov    -0x8(%ebp),%eax
    imull  -0x18(%ebp)
    add    -0x14(%ebp),%eax
    add    -0x4(%ebp),%eax
    mov    %eax,%edi
    mov    -0xc(%ebp),%ebx
    inc    %ebx
    sub    -0x4(%ebp),%ebx
    mov    -0x18(%ebp),%esi
    sub    %ebx,%esi
    mov    0xc(%ebp),%al
    mov    %al,%ah
    shl    $0x10,%eax
    mov    0xc(%ebp),%al
    mov    %al,%ah
    mov    -0x8(%ebp),%edx
    jmp    jump_59e62
  jump_59e51:
    mov    %ebx,%ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %ebx,%ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    add    %esi,%edi
    inc    %edx
  jump_59e62:
    cmp    -0x10(%ebp),%edx
    jle    jump_59e51
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_59e6f:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffff64,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x70(%ebp)
    jle    jump_59ef1
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_59ef1
    mov    0x4(%esi),%eax
    mov    %eax,-0x78(%ebp)
    cmp    $0x0,%eax
    jg     jump_59ea5
    mov    $0x0,%eax
  jump_59ea5:
    mov    %eax,-0x60(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x7c(%ebp)
    cmp    $0x0,%eax
    jg     jump_59eb8
    mov    $0x0,%eax
  jump_59eb8:
    mov    %eax,-0x64(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x70(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_59ec8
    mov    %edx,%eax
  jump_59ec8:
    mov    %eax,-0x68(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_59ed7
    mov    %edx,%eax
  jump_59ed7:
    mov    %eax,-0x6c(%ebp)
    mov    -0x68(%ebp),%eax
    cmp    -0x60(%ebp),%eax
    jl     jump_59efc
    mov    -0x6c(%ebp),%eax
    cmp    -0x64(%ebp),%eax
    jl     jump_59efc
    mov    (%ebx),%eax
    mov    %eax,-0x74(%ebp)
    jmp    jump_59f07
  jump_59ef1:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_59efc:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_59f07:
    mov    -0x60(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    mov    -0x64(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    mov    -0x68(%ebp),%eax
    mov    %eax,-0x34(%ebp)
    mov    -0x6c(%ebp),%eax
    mov    %eax,-0x38(%ebp)
    mov    -0x78(%ebp),%eax
    sub    %eax,-0x2c(%ebp)
    sub    %eax,-0x34(%ebp)
    mov    -0x7c(%ebp),%eax
    sub    %eax,-0x30(%ebp)
    sub    %eax,-0x38(%ebp)
    mov    0x14(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x94(%ebp)
    jle    jump_59fc8
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_59fc8
    mov    0x4(%esi),%eax
    mov    %eax,-0x98(%ebp)
    cmp    $0x0,%eax
    jg     jump_59f61
    mov    $0x0,%eax
  jump_59f61:
    mov    %eax,-0x80(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x9c(%ebp)
    cmp    $0x0,%eax
    jg     jump_59f77
    mov    $0x0,%eax
  jump_59f77:
    mov    %eax,-0x84(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x94(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_59f8d
    mov    %edx,%eax
  jump_59f8d:
    mov    %eax,-0x88(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_59f9f
    mov    %edx,%eax
  jump_59f9f:
    mov    %eax,-0x8c(%ebp)
    mov    -0x88(%ebp),%eax
    cmp    -0x80(%ebp),%eax
    jl     jump_59fd3
    mov    -0x8c(%ebp),%eax
    cmp    -0x84(%ebp),%eax
    jl     jump_59fd3
    mov    (%ebx),%eax
    mov    %eax,-0x90(%ebp)
    jmp    jump_59fde
  jump_59fc8:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_59fd3:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_59fde:
    mov    -0x80(%ebp),%eax
    mov    %eax,-0x40(%ebp)
    mov    -0x84(%ebp),%eax
    mov    %eax,-0x44(%ebp)
    mov    -0x88(%ebp),%eax
    mov    %eax,-0x48(%ebp)
    mov    -0x8c(%ebp),%eax
    mov    %eax,-0x4c(%ebp)
    mov    -0x98(%ebp),%eax
    sub    %eax,-0x40(%ebp)
    sub    %eax,-0x48(%ebp)
    mov    -0x9c(%ebp),%eax
    sub    %eax,-0x44(%ebp)
    sub    %eax,-0x4c(%ebp)
    mov    0xc(%ebp),%eax
    sub    0x18(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    mov    0x10(%ebp),%eax
    sub    0x1c(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    mov    -0x2c(%ebp),%eax
    mov    -0x40(%ebp),%edx
    add    -0x24(%ebp),%edx
    cmp    %edx,%eax
    jg     jump_5a038
    mov    %edx,%eax
  jump_5a038:
    mov    %eax,-0x4(%ebp)
    mov    -0x30(%ebp),%eax
    mov    -0x44(%ebp),%edx
    add    -0x28(%ebp),%edx
    cmp    %edx,%eax
    jg     jump_5a04a
    mov    %edx,%eax
  jump_5a04a:
    mov    %eax,-0x8(%ebp)
    mov    -0x34(%ebp),%eax
    mov    -0x48(%ebp),%edx
    add    -0x24(%ebp),%edx
    cmp    %edx,%eax
    jl     jump_5a05c
    mov    %edx,%eax
  jump_5a05c:
    mov    %eax,-0xc(%ebp)
    mov    -0x38(%ebp),%eax
    mov    -0x4c(%ebp),%edx
    add    -0x28(%ebp),%edx
    cmp    %edx,%eax
    jl     jump_5a06e
    mov    %edx,%eax
  jump_5a06e:
    mov    %eax,-0x10(%ebp)
    mov    -0xc(%ebp),%eax
    cmp    -0x4(%ebp),%eax
    jl     jump_5a200
    mov    -0x10(%ebp),%eax
    cmp    -0x8(%ebp),%eax
    jl     jump_5a200
    mov    -0x40(%ebp),%eax
    mov    -0x2c(%ebp),%edx
    sub    -0x24(%ebp),%edx
    cmp    %edx,%eax
    jg     jump_5a098
    mov    %edx,%eax
  jump_5a098:
    mov    %eax,-0x14(%ebp)
    mov    -0x44(%ebp),%eax
    mov    -0x30(%ebp),%edx
    sub    -0x28(%ebp),%edx
    cmp    %edx,%eax
    jg     jump_5a0aa
    mov    %edx,%eax
  jump_5a0aa:
    mov    %eax,-0x18(%ebp)
    mov    -0x48(%ebp),%eax
    mov    -0x34(%ebp),%edx
    sub    -0x24(%ebp),%edx
    cmp    %edx,%eax
    jl     jump_5a0bc
    mov    %edx,%eax
  jump_5a0bc:
    mov    %eax,-0x1c(%ebp)
    mov    -0x4c(%ebp),%eax
    mov    -0x38(%ebp),%edx
    sub    -0x28(%ebp),%edx
    cmp    %edx,%eax
    jl     jump_5a0ce
    mov    %edx,%eax
  jump_5a0ce:
    mov    %eax,-0x20(%ebp)
    mov    -0xc(%ebp),%eax
    inc    %eax
    sub    -0x4(%ebp),%eax
    mov    %eax,-0x58(%ebp)
    mov    -0x10(%ebp),%eax
    inc    %eax
    sub    -0x8(%ebp),%eax
    mov    %eax,-0x54(%ebp)
    mov    -0x7c(%ebp),%eax
    imull  -0x70(%ebp)
    add    -0x74(%ebp),%eax
    add    -0x78(%ebp),%eax
    mov    %eax,%esi
    mov    -0x9c(%ebp),%eax
    imull  -0x94(%ebp)
    add    -0x90(%ebp),%eax
    add    -0x98(%ebp),%eax
    mov    %eax,%edi
    mov    -0x8(%ebp),%eax
    mov    -0x18(%ebp),%ebx
    cmp    %ebx,%eax
    jle    jump_5a137
    mull   -0x70(%ebp)
    add    %eax,%esi
    mov    %ebx,%eax
    mull   -0x94(%ebp)
    add    %eax,%edi
    mov    -0x70(%ebp),%eax
    mov    %eax,-0x3c(%ebp)
    mov    -0x94(%ebp),%eax
    mov    %eax,-0x50(%ebp)
    jmp    jump_5a15d
  jump_5a137:
    mov    -0x10(%ebp),%eax
    mull   -0x70(%ebp)
    add    %eax,%esi
    mov    -0x20(%ebp),%eax
    mull   -0x94(%ebp)
    add    %eax,%edi
    mov    -0x70(%ebp),%eax
    neg    %eax
    mov    %eax,-0x3c(%ebp)
    mov    -0x94(%ebp),%eax
    neg    %eax
    mov    %eax,-0x50(%ebp)
  jump_5a15d:
    mov    -0x58(%ebp),%ecx
    mov    -0x4(%ebp),%eax
    mov    -0x14(%ebp),%ebx
    cmp    %ebx,%eax
    jle    jump_5a17e
    add    %eax,%esi
    add    %ebx,%edi
    sub    %ecx,-0x3c(%ebp)
    sub    %ecx,-0x50(%ebp)
    cld
    movl   $0x0,-0x5c(%ebp)
    jmp    jump_5a192
  jump_5a17e:
    add    -0xc(%ebp),%esi
    add    -0x1c(%ebp),%edi
    add    %ecx,-0x3c(%ebp)
    add    %ecx,-0x50(%ebp)
    std
    movl   $0x3,-0x5c(%ebp)
  jump_5a192:
    mov    0x20(%ebp),%eax
    test   $0xffffff00,%eax
    je     jump_5a1cb
    mov    -0x54(%ebp),%edx
    mov    -0x3c(%ebp),%eax
    mov    -0x50(%ebp),%ebx
  jump_5a1a5:
    mov    -0x58(%ebp),%ecx
    and    $0x3,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    mov    -0x58(%ebp),%ecx
    shr    $0x2,%ecx
    sub    -0x5c(%ebp),%esi
    sub    -0x5c(%ebp),%edi
    rep movsl %ds:(%esi),%es:(%edi)
    add    -0x5c(%ebp),%esi
    add    -0x5c(%ebp),%edi
    add    %eax,%esi
    add    %ebx,%edi
    dec    %edx
    jne    jump_5a1a5
    cld
    jmp    jump_5a1f8
  jump_5a1cb:
    mov    %al,%dl
    mov    %al,%ah
    shl    $0x10,%eax
    mov    %dl,%al
    mov    %al,%ah
    mov    -0x54(%ebp),%edx
    mov    -0x50(%ebp),%ebx
  jump_5a1dc:
    mov    -0x58(%ebp),%ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    -0x58(%ebp),%ecx
    shr    $0x2,%ecx
    sub    -0x5c(%ebp),%edi
    rep stos %eax,%es:(%edi)
    add    -0x5c(%ebp),%edi
    add    %ebx,%edi
    dec    %edx
    jne    jump_5a1dc
    cld
  jump_5a1f8:
    xor    %eax,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5a200:
    mov    $0xfffffffd,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5a408:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffac,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    cmpl   $0x0,0x14(%ebp)
    je     jump_5a421
    cmpl   $0x0,0x18(%ebp)
    jne    jump_5a452
  jump_5a421:
    mov    0x10(%ebp),%eax
    add    0x18(%ebp),%eax
    mov    0xc(%ebp),%ebx
    add    0x14(%ebp),%ebx
    mov    0x10(%ebp),%ecx
    sub    0x18(%ebp),%ecx
    mov    0xc(%ebp),%edx
    sub    0x14(%ebp),%edx
    push   0x1c(%ebp)
    push   $0x0
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    push   0x8(%ebp)
    call   func_573c1
    add    $0x1c,%esp
    jmp    jump_5a743
  jump_5a452:
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x4c(%ebp)
    jle    jump_5a4c4
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5a4c4
    mov    0x4(%esi),%eax
    mov    %eax,-0x50(%ebp)
    cmp    $0x0,%eax
    jg     jump_5a478
    mov    $0x0,%eax
  jump_5a478:
    mov    %eax,-0x38(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x54(%ebp)
    cmp    $0x0,%eax
    jg     jump_5a48b
    mov    $0x0,%eax
  jump_5a48b:
    mov    %eax,-0x3c(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x4c(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5a49b
    mov    %edx,%eax
  jump_5a49b:
    mov    %eax,-0x40(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5a4aa
    mov    %edx,%eax
  jump_5a4aa:
    mov    %eax,-0x44(%ebp)
    mov    -0x40(%ebp),%eax
    cmp    -0x38(%ebp),%eax
    jl     jump_5a4cf
    mov    -0x44(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jl     jump_5a4cf
    mov    (%ebx),%eax
    mov    %eax,-0x48(%ebp)
    jmp    jump_5a4da
  jump_5a4c4:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5a4cf:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5a4da:
    mov    0x1c(%ebp),%eax
    mov    %al,%ah
    mov    %eax,0x1c(%ebp)
    mov    %ax,0x1e(%ebp)
    mov    -0x50(%ebp),%eax
    add    %eax,0xc(%ebp)
    mov    -0x54(%ebp),%eax
    add    %eax,0x10(%ebp)
    mov    0xc(%ebp),%eax
    mov    %eax,-0x4(%ebp)
    mov    0x10(%ebp),%eax
    mov    %eax,-0x8(%ebp)
    movl   $0x0,-0xc(%ebp)
    mov    0x18(%ebp),%eax
    mov    %eax,-0x10(%ebp)
    mul    %eax
    mov    %eax,-0x1c(%ebp)
    shl    %eax
    mov    %eax,-0x20(%ebp)
    mov    0x14(%ebp),%eax
    mul    %eax
    mov    %eax,-0x14(%ebp)
    shl    %eax
    mov    %eax,-0x18(%ebp)
    movl   $0x0,-0x24(%ebp)
    mov    -0x18(%ebp),%eax
    mull   0x18(%ebp)
    mov    %eax,-0x28(%ebp)
    mov    -0x14(%ebp),%eax
    shr    $0x2,%eax
    add    -0x1c(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    mov    -0x14(%ebp),%eax
    mull   0x18(%ebp)
    sub    %eax,-0x2c(%ebp)
    mov    0x18(%ebp),%ebx
  jump_5a54a:
    mov    -0x24(%ebp),%eax
    sub    -0x28(%ebp),%eax
    jns    jump_5a640
    push   %ebx
    mov    0x1c(%ebp),%ecx
    mov    -0x4(%ebp),%edi
    add    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    add    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5a588
    cmp    -0x40(%ebp),%edi
    jg     jump_5a588
    cmp    -0x3c(%ebp),%edx
    jl     jump_5a588
    cmp    -0x44(%ebp),%edx
    jg     jump_5a588
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5a588:
    mov    -0x4(%ebp),%edi
    add    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    sub    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5a5b6
    cmp    -0x40(%ebp),%edi
    jg     jump_5a5b6
    cmp    -0x3c(%ebp),%edx
    jl     jump_5a5b6
    cmp    -0x44(%ebp),%edx
    jg     jump_5a5b6
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5a5b6:
    mov    -0x4(%ebp),%edi
    sub    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    add    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5a5e4
    cmp    -0x40(%ebp),%edi
    jg     jump_5a5e4
    cmp    -0x3c(%ebp),%edx
    jl     jump_5a5e4
    cmp    -0x44(%ebp),%edx
    jg     jump_5a5e4
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5a5e4:
    mov    -0x4(%ebp),%edi
    sub    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    sub    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5a612
    cmp    -0x40(%ebp),%edi
    jg     jump_5a612
    cmp    -0x3c(%ebp),%edx
    jl     jump_5a612
    cmp    -0x44(%ebp),%edx
    jg     jump_5a612
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5a612:
    pop    %ebx
    cmpl   $0x0,-0x2c(%ebp)
    js     jump_5a629
    decl   -0x10(%ebp)
    dec    %ebx
    mov    -0x28(%ebp),%eax
    sub    -0x18(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    %eax,-0x2c(%ebp)
  jump_5a629:
    incl   -0xc(%ebp)
    mov    -0x24(%ebp),%eax
    add    -0x20(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    add    -0x1c(%ebp),%eax
    add    %eax,-0x2c(%ebp)
    jmp    jump_5a54a
  jump_5a640:
    mov    -0x14(%ebp),%eax
    sub    -0x1c(%ebp),%eax
    mov    %eax,%edx
    sar    %eax
    add    %edx,%eax
    sub    -0x24(%ebp),%eax
    sub    -0x28(%ebp),%eax
    sar    %eax
    add    %eax,-0x2c(%ebp)
  jump_5a657:
    push   %ebx
    mov    0x1c(%ebp),%ecx
    mov    -0x4(%ebp),%edi
    add    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    add    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5a689
    cmp    -0x40(%ebp),%edi
    jg     jump_5a689
    cmp    -0x3c(%ebp),%edx
    jl     jump_5a689
    cmp    -0x44(%ebp),%edx
    jg     jump_5a689
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5a689:
    mov    -0x4(%ebp),%edi
    add    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    sub    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5a6b7
    cmp    -0x40(%ebp),%edi
    jg     jump_5a6b7
    cmp    -0x3c(%ebp),%edx
    jl     jump_5a6b7
    cmp    -0x44(%ebp),%edx
    jg     jump_5a6b7
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5a6b7:
    mov    -0x4(%ebp),%edi
    sub    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    add    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5a6e5
    cmp    -0x40(%ebp),%edi
    jg     jump_5a6e5
    cmp    -0x3c(%ebp),%edx
    jl     jump_5a6e5
    cmp    -0x44(%ebp),%edx
    jg     jump_5a6e5
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5a6e5:
    mov    -0x4(%ebp),%edi
    sub    -0xc(%ebp),%edi
    mov    -0x8(%ebp),%edx
    sub    -0x10(%ebp),%edx
    cmp    -0x38(%ebp),%edi
    jl     jump_5a713
    cmp    -0x40(%ebp),%edi
    jg     jump_5a713
    cmp    -0x3c(%ebp),%edx
    jl     jump_5a713
    cmp    -0x44(%ebp),%edx
    jg     jump_5a713
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    %cl,(%edi)
  jump_5a713:
    pop    %ebx
    cmpl   $0x0,-0x2c(%ebp)
    jns    jump_5a729
    incl   -0xc(%ebp)
    mov    -0x24(%ebp),%eax
    add    -0x20(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    add    %eax,-0x2c(%ebp)
  jump_5a729:
    decl   -0x10(%ebp)
    mov    -0x28(%ebp),%eax
    sub    -0x18(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    -0x14(%ebp),%eax
    sub    %eax,-0x2c(%ebp)
    dec    %ebx
    js     jump_5a743
    jmp    jump_5a657
  jump_5a743:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5a749:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffac,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    cmpl   $0x0,0x14(%ebp)
    je     jump_5a762
    cmpl   $0x0,0x18(%ebp)
    jne    jump_5a793
  jump_5a762:
    mov    0x10(%ebp),%eax
    add    0x18(%ebp),%eax
    mov    0xc(%ebp),%ebx
    add    0x14(%ebp),%ebx
    mov    0x10(%ebp),%ecx
    sub    0x18(%ebp),%ecx
    mov    0xc(%ebp),%edx
    sub    0x14(%ebp),%edx
    push   0x1c(%ebp)
    push   $0x0
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    push   0x8(%ebp)
    call   func_573c1
    add    $0x1c,%esp
    jmp    jump_5aa41
  jump_5a793:
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x4c(%ebp)
    jle    jump_5a805
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5a805
    mov    0x4(%esi),%eax
    mov    %eax,-0x50(%ebp)
    cmp    $0x0,%eax
    jg     jump_5a7b9
    mov    $0x0,%eax
  jump_5a7b9:
    mov    %eax,-0x38(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x54(%ebp)
    cmp    $0x0,%eax
    jg     jump_5a7cc
    mov    $0x0,%eax
  jump_5a7cc:
    mov    %eax,-0x3c(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x4c(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5a7dc
    mov    %edx,%eax
  jump_5a7dc:
    mov    %eax,-0x40(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5a7eb
    mov    %edx,%eax
  jump_5a7eb:
    mov    %eax,-0x44(%ebp)
    mov    -0x40(%ebp),%eax
    cmp    -0x38(%ebp),%eax
    jl     jump_5a810
    mov    -0x44(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jl     jump_5a810
    mov    (%ebx),%eax
    mov    %eax,-0x48(%ebp)
    jmp    jump_5a81b
  jump_5a805:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5a810:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5a81b:
    mov    0x1c(%ebp),%eax
    mov    %al,%ah
    mov    %eax,0x1c(%ebp)
    mov    %ax,0x1e(%ebp)
    mov    -0x50(%ebp),%eax
    add    %eax,0xc(%ebp)
    mov    -0x54(%ebp),%eax
    add    %eax,0x10(%ebp)
    mov    0xc(%ebp),%eax
    mov    %eax,-0x4(%ebp)
    mov    0x10(%ebp),%eax
    mov    %eax,-0x8(%ebp)
    movl   $0x0,-0xc(%ebp)
    mov    0x18(%ebp),%eax
    mov    %eax,-0x10(%ebp)
    mul    %eax
    mov    %eax,-0x1c(%ebp)
    shl    %eax
    mov    %eax,-0x20(%ebp)
    mov    0x14(%ebp),%eax
    mul    %eax
    mov    %eax,-0x14(%ebp)
    shl    %eax
    mov    %eax,-0x18(%ebp)
    movl   $0x0,-0x24(%ebp)
    mov    -0x18(%ebp),%eax
    mull   0x18(%ebp)
    mov    %eax,-0x28(%ebp)
    mov    -0x14(%ebp),%eax
    shr    $0x2,%eax
    add    -0x1c(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    mov    -0x14(%ebp),%eax
    mull   0x18(%ebp)
    sub    %eax,-0x2c(%ebp)
    mov    0x18(%ebp),%ebx
  jump_5a88b:
    mov    -0x24(%ebp),%eax
    sub    -0x28(%ebp),%eax
    js     jump_5a898
    jmp    jump_5a960
  jump_5a898:
    mov    -0x4(%ebp),%edi
    add    -0xc(%ebp),%edi
    cmp    -0x38(%ebp),%edi
    jl     jump_5a933
    cmp    -0x40(%ebp),%edi
    jl     jump_5a8af
    mov    -0x40(%ebp),%edi
  jump_5a8af:
    mov    %edi,-0x34(%ebp)
    mov    -0x4(%ebp),%edi
    sub    -0xc(%ebp),%edi
    cmp    -0x40(%ebp),%edi
    jg     jump_5a933
    cmp    -0x38(%ebp),%edi
    jg     jump_5a8c5
    mov    -0x38(%ebp),%edi
  jump_5a8c5:
    mov    %edi,-0x30(%ebp)
    mov    -0x8(%ebp),%edx
    add    -0x10(%ebp),%edx
    cmp    -0x3c(%ebp),%edx
    jl     jump_5a933
    cmp    -0x44(%ebp),%edx
    jg     jump_5a8fc
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    -0x34(%ebp),%ecx
    sub    -0x30(%ebp),%ecx
    inc    %ecx
    mov    0x1c(%ebp),%eax
    mov    %ecx,%edx
    and    $0x3,%edx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    %edx,%ecx
    rep stos %al,%es:(%edi)
  jump_5a8fc:
    mov    -0x30(%ebp),%edi
    mov    -0x8(%ebp),%edx
    sub    -0x10(%ebp),%edx
    cmp    -0x3c(%ebp),%edx
    jl     jump_5a933
    cmp    -0x44(%ebp),%edx
    jg     jump_5a933
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    -0x34(%ebp),%ecx
    sub    -0x30(%ebp),%ecx
    inc    %ecx
    mov    0x1c(%ebp),%eax
    mov    %ecx,%edx
    and    $0x3,%edx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    %edx,%ecx
    rep stos %al,%es:(%edi)
  jump_5a933:
    cmpl   $0x0,-0x2c(%ebp)
    js     jump_5a949
    decl   -0x10(%ebp)
    dec    %ebx
    mov    -0x28(%ebp),%eax
    sub    -0x18(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    %eax,-0x2c(%ebp)
  jump_5a949:
    incl   -0xc(%ebp)
    mov    -0x24(%ebp),%eax
    add    -0x20(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    add    -0x1c(%ebp),%eax
    add    %eax,-0x2c(%ebp)
    jmp    jump_5a88b
  jump_5a960:
    mov    -0x14(%ebp),%eax
    sub    -0x1c(%ebp),%eax
    mov    %eax,%edx
    sar    %eax
    add    %edx,%eax
    sub    -0x24(%ebp),%eax
    sub    -0x28(%ebp),%eax
    sar    %eax
    add    %eax,-0x2c(%ebp)
  jump_5a977:
    mov    -0x4(%ebp),%edi
    add    -0xc(%ebp),%edi
    cmp    -0x38(%ebp),%edi
    jl     jump_5aa12
    cmp    -0x40(%ebp),%edi
    jl     jump_5a98e
    mov    -0x40(%ebp),%edi
  jump_5a98e:
    mov    %edi,-0x34(%ebp)
    mov    -0x4(%ebp),%edi
    sub    -0xc(%ebp),%edi
    cmp    -0x40(%ebp),%edi
    jg     jump_5aa12
    cmp    -0x38(%ebp),%edi
    jg     jump_5a9a4
    mov    -0x38(%ebp),%edi
  jump_5a9a4:
    mov    %edi,-0x30(%ebp)
    mov    -0x8(%ebp),%edx
    add    -0x10(%ebp),%edx
    cmp    -0x3c(%ebp),%edx
    jl     jump_5aa12
    cmp    -0x44(%ebp),%edx
    jg     jump_5a9db
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    -0x34(%ebp),%ecx
    sub    -0x30(%ebp),%ecx
    inc    %ecx
    mov    0x1c(%ebp),%eax
    mov    %ecx,%edx
    and    $0x3,%edx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    %edx,%ecx
    rep stos %al,%es:(%edi)
  jump_5a9db:
    mov    -0x30(%ebp),%edi
    mov    -0x8(%ebp),%edx
    sub    -0x10(%ebp),%edx
    cmp    -0x3c(%ebp),%edx
    jl     jump_5aa12
    cmp    -0x44(%ebp),%edx
    jg     jump_5aa12
    mov    %edx,%eax
    imull  -0x4c(%ebp)
    add    -0x48(%ebp),%eax
    add    %edi,%eax
    mov    %eax,%edi
    mov    -0x34(%ebp),%ecx
    sub    -0x30(%ebp),%ecx
    inc    %ecx
    mov    0x1c(%ebp),%eax
    mov    %ecx,%edx
    and    $0x3,%edx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    %edx,%ecx
    rep stos %al,%es:(%edi)
  jump_5aa12:
    cmpl   $0x0,-0x2c(%ebp)
    jns    jump_5aa27
    incl   -0xc(%ebp)
    mov    -0x24(%ebp),%eax
    add    -0x20(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    add    %eax,-0x2c(%ebp)
  jump_5aa27:
    decl   -0x10(%ebp)
    mov    -0x28(%ebp),%eax
    sub    -0x18(%ebp),%eax
    mov    %eax,-0x28(%ebp)
    sub    -0x14(%ebp),%eax
    sub    %eax,-0x2c(%ebp)
    dec    %ebx
    js     jump_5aa41
    jmp    jump_5a977
  jump_5aa41:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5aa47:
/*----------------------------------------------------------------*/
    add    %al,(%eax)
    add    %eax,(%eax)
    add    %al,(%eax)
    add    %eax,(%eax)
    add    %al,(%eax)
    add    %eax,(%eax)
    (bad)
    incl   (%eax)
    add    %bh,%dh
    incl   (%eax)
    add    %bh,%dh
    incl   (%eax)
    add    %bh,%ah
    incl   (%eax)
    add    %bh,%bl
    incl   (%eax)
    add    %bh,%dl
    incl   (%eax)
    add    %bh,%al
    incl   (%eax)
    add    %dh,%dh
    incl   (%eax)
    add    %dh,%ah
    incl   (%eax)
    add    %dh,%dl
    incl   (%eax)
    add    %ch,%bh
    incl   (%eax)
    add    %ch,%ah
    incl   (%eax)
    add    %ch,%dl
    incl   (%eax)
    add    %ah,%dh
    incl   (%eax)
    add    %ah,%bl
    incl   (%eax)
    add    %ah,%al
    incl   (%eax)
    add    %bl,%ah
    incl   (%eax)
    add    %bl,%al
    incl   (%eax)
    add    %dl,%ah
    incl   (%eax)
    add    %dl,%al
    incl   (%eax)
    add    %cl,%bl
    incl   (%eax)
    add    %al,%bh
    incl   (%eax)
    add    %al,%dl
    incl   (%eax)
    add    %bh,-0x48ffff01(%ebp)
    incl   (%eax)
    add    %dh,-0x53ffff01(%edx)
    incl   (%eax)
    add    %ah,-0x5fffff01(%esi)
    incl   (%eax)
    add    %bl,-0x6cffff01(%edx)
    incl   (%eax)
    add    %cl,-0x79ffff01(%ebp)
    incl   (%eax)
    add    %bh,-0x1(%edi)
    add    %al,(%eax)
    ja     jump_5aadc
    add    %al,(%eax)
    jo     jump_5aae0
    add    %al,(%eax)
    push   $0x600000ff
    incl   (%eax)
    add    %bl,-0x1(%eax)
    add    %al,(%eax)
    push   %eax
    incl   (%eax)
    add    %cl,-0x1(%eax)
    add    %al,(%eax)
    aas
    incl   (%eax)
    add    %dh,(%esi)
    incl   (%eax)
    add    %ch,0x240000ff
    incl   (%eax)
    add    %bl,(%edx)
    incl   (%eax)
    add    %dl,(%eax)
    incl   (%eax)
    add    %al,(%edi)
    incl   (%eax)
    add    %bh,%ch
    incb   (%eax)
    add    %dh,%dl
    incb   (%eax)
    add    %ch,%al
    incb   (%eax)
    add    %bl,%ch
    incb   (%eax)
    add    %dl,%dl
    incb   (%eax)
    add    %al,%bh
    incb   (%eax)
    add    %bh,-0x14f0000(%esi,%edi,8)
    add    %al,(%eax)
    movsl  %ds:(%esi),%es:(%edi)
    incb   (%eax)
    add    %bl,-0x72ffff02(%ecx)
    incb   (%eax)
    add    %al,0x740000fe(%ecx)
    incb   (%eax)
    add    %ch,-0x2(%eax)
    add    %al,(%eax)
    pop    %ebx
    incb   (%eax)
    add    %cl,-0x2(%esi)
    add    %al,(%eax)
    inc    %eax
    incb   (%eax)
    add    %dh,(%ebx)
    incb   (%eax)
    add    %ah,0x180000fe
    incb   (%eax)
    add    %cl,(%ecx)
    incb   (%eax)
    add    %bh,%bl
    std
    add    %al,(%eax)
    in     (%dx),%eax
    std
    add    %al,(%eax)
    fdivrp %st,%st(5)
    add    %al,(%eax)
    iret

vtable_5b857:
    .long   0


/*----------------------------------------------------------------*/
func_5b85b:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%ebx
    and    %ebx,%ebx
    jns    jump_5b879
  jump_5b869:
    add    $0xe10,%ebx
    js     jump_5b869
    jmp    jump_5b879
  jump_5b873:
    sub    $0xe10,%ebx
  jump_5b879:
    cmp    $0xe10,%ebx
    jg     jump_5b873
    cmp    $0x708,%ebx
    ja     jump_5b8c1
    cmp    $0x384,%ebx
    ja     jump_5b8a4
    shl    $0x2,%ebx
    mov    func_5aa47(%ebx),%eax
    neg    %ebx
    mov    vtable_5b857(%ebx),%edx
    jmp    jump_5b903
  jump_5b8a4:
    neg    %ebx
    add    $0x708,%ebx
    shl    $0x2,%ebx
    mov    func_5aa47(%ebx),%eax
    neg    %eax
    neg    %ebx
    mov    vtable_5b857(%ebx),%edx
    jmp    jump_5b903
  jump_5b8c1:
    neg    %ebx
    add    $0xe10,%ebx
    cmp    $0x384,%ebx
    ja     jump_5b8e6
    shl    $0x2,%ebx
    mov    func_5aa47(%ebx),%eax
    neg    %ebx
    mov    vtable_5b857(%ebx),%edx
    neg    %edx
    jmp    jump_5b903
  jump_5b8e6:
    neg    %ebx
    add    $0x708,%ebx
    shl    $0x2,%ebx
    mov    func_5aa47(%ebx),%eax
    neg    %eax
    neg    %ebx
    mov    vtable_5b857(%ebx),%edx
    neg    %edx
  jump_5b903:
    mov    0xc(%ebp),%ebx
    mov    %eax,(%ebx)
    mov    0x10(%ebp),%ebx
    mov    %edx,(%ebx)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5b939:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffe0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    lea    -0x8(%ebp),%eax
    push   %eax
    lea    -0x4(%ebp),%eax
    push   %eax
    push   0x14(%ebp)
    call   func_5b85b
    add    $0xc,%esp
    mov    0x8(%ebp),%esi
    mov    0x10(%ebp),%edi
    mov    (%esi),%eax
    sub    (%edi),%eax
    shl    $0x10,%eax
    imull  0x18(%ebp)
    add    $0x8000,%eax
    adc    $0x0,%edx
    mov    %edx,%ebx
    mov    %ebx,%eax
    imull  -0x4(%ebp)
    add    $0x8000,%eax
    adc    $0x0,%edx
    mov    %dx,%ax
    ror    $0x10,%eax
    mov    %eax,-0xc(%ebp)
    mov    %ebx,%eax
    imull  -0x8(%ebp)
    add    $0x8000,%eax
    adc    $0x0,%edx
    mov    %dx,%ax
    ror    $0x10,%eax
    mov    %eax,-0x14(%ebp)
    mov    0x4(%esi),%eax
    sub    0x4(%edi),%eax
    shl    $0x10,%eax
    imull  0x1c(%ebp)
    add    $0x8000,%eax
    adc    $0x0,%edx
    mov    %edx,%ecx
    mov    %ecx,%eax
    imull  -0x4(%ebp)
    add    $0x8000,%eax
    adc    $0x0,%edx
    mov    %dx,%ax
    ror    $0x10,%eax
    mov    %eax,-0x18(%ebp)
    mov    %ecx,%eax
    imull  -0x8(%ebp)
    add    $0x8000,%eax
    adc    $0x0,%edx
    mov    %dx,%ax
    ror    $0x10,%eax
    mov    %eax,-0x10(%ebp)
    mov    0xc(%ebp),%esi
    mov    -0xc(%ebp),%edx
    sub    -0x10(%ebp),%edx
    add    (%edi),%edx
    mov    %edx,(%esi)
    mov    -0x18(%ebp),%edx
    add    -0x14(%ebp),%edx
    add    0x4(%edi),%edx
    mov    %edx,0x4(%esi)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5ba00:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%esi
    mov    0x8(%esi),%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5ba13:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0xc(%ebp),%eax
    shl    $0x2,%eax
    add    0x8(%ebp),%eax
    add    $0x10,%eax
    mov    (%eax),%esi
    add    0x8(%ebp),%esi
    mov    (%esi),%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5ba33:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffd0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x28(%ebp)
    jle    jump_5bab2
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5bab2
    mov    0x4(%esi),%eax
    mov    %eax,-0x2c(%ebp)
    cmp    $0x0,%eax
    jg     jump_5ba66
    mov    $0x0,%eax
  jump_5ba66:
    mov    %eax,-0x14(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x30(%ebp)
    cmp    $0x0,%eax
    jg     jump_5ba79
    mov    $0x0,%eax
  jump_5ba79:
    mov    %eax,-0x18(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x28(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5ba89
    mov    %edx,%eax
  jump_5ba89:
    mov    %eax,-0x1c(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5ba98
    mov    %edx,%eax
  jump_5ba98:
    mov    %eax,-0x20(%ebp)
    mov    -0x1c(%ebp),%eax
    cmp    -0x14(%ebp),%eax
    jl     jump_5babd
    mov    -0x20(%ebp),%eax
    cmp    -0x18(%ebp),%eax
    jl     jump_5babd
    mov    (%ebx),%eax
    mov    %eax,-0x24(%ebp)
    jmp    jump_5bac8
  jump_5bab2:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5babd:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5bac8:
    mov    -0x2c(%ebp),%eax
    add    %eax,0xc(%ebp)
    mov    -0x30(%ebp),%eax
    add    %eax,0x10(%ebp)
    mov    0x14(%ebp),%esi
    mov    0x8(%esi),%edx
    mov    0x18(%ebp),%eax
    shl    $0x2,%eax
    add    0x14(%ebp),%eax
    add    $0x10,%eax
    mov    (%eax),%esi
    add    0x14(%ebp),%esi
    movl   $0x0,-0x8(%ebp)
    mov    (%esi),%ecx
    mov    %ecx,-0x4(%ebp)
    cmp    $0x0,%ecx
    je     jump_5bbba
    add    $0x4,%esi
    mov    0x8(%ebp),%edi
    mov    -0x1c(%ebp),%eax
    inc    %eax
    sub    %ecx,%eax
    sub    0xc(%ebp),%eax
    jns    jump_5bb19
    add    %eax,%ecx
    jle    jump_5bbba
  jump_5bb19:
    mov    0xc(%ebp),%eax
    sub    -0x14(%ebp),%eax
    jns    jump_5bb2e
    add    %eax,%ecx
    jle    jump_5bbba
    sub    %eax,%esi
    sub    %eax,0xc(%ebp)
  jump_5bb2e:
    mov    -0x20(%ebp),%eax
    inc    %eax
    sub    %edx,%eax
    sub    0x10(%ebp),%eax
    jns    jump_5bb3d
    add    %eax,%edx
    jle    jump_5bbba
  jump_5bb3d:
    mov    0x10(%ebp),%eax
    sub    -0x18(%ebp),%eax
    jns    jump_5bb52
    add    %eax,%edx
    jle    jump_5bbba
    sub    %eax,0x10(%ebp)
    imul   -0x4(%ebp),%eax
    sub    %eax,%esi
  jump_5bb52:
    mov    %edx,-0x10(%ebp)
    mov    0x10(%ebp),%eax
    imull  -0x28(%ebp)
    add    -0x24(%ebp),%eax
    add    0xc(%ebp),%eax
    mov    %eax,%edi
    mov    %ecx,-0x8(%ebp)
    sub    %ecx,-0x4(%ebp)
    mov    -0x28(%ebp),%eax
    sub    %ecx,%eax
    mov    %eax,-0xc(%ebp)
    mov    -0x10(%ebp),%edx
    cmpl   $0x0,0x1c(%ebp)
    jne    jump_5bb9c
  jump_5bb7a:
    shr    %ecx
    rep movsw %ds:(%esi),%es:(%edi)
    adc    $0x0,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    mov    -0x8(%ebp),%ecx
    add    -0x4(%ebp),%esi
    add    -0xc(%ebp),%edi
    dec    %edx
    jne    jump_5bb7a
    mov    -0x4(%ebp),%eax
    add    -0x8(%ebp),%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5bb9c:
    jecxz  jump_5bbba
    mov    0x1c(%ebp),%ebx
  jump_5bba1:
    mov    (%esi),%al
    xlat   %ds:(%ebx)
    cmp    $0xff,%al
    je     jump_5bbaa
    mov    %al,(%edi)
  jump_5bbaa:
    inc    %esi
    inc    %edi
    loop   jump_5bba1
    mov    -0x8(%ebp),%ecx
    add    -0x4(%ebp),%esi
    add    -0xc(%ebp),%edi
    dec    %edx
    jne    jump_5bba1
  jump_5bbba:
    mov    -0x4(%ebp),%eax
    add    -0x8(%ebp),%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5bbc6:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x18(%ebp),%esi
    mov    0xc(%ebp),%edi
  jump_5bbd6:
    movzbl (%esi),%eax
    push   0x1c(%ebp)
    push   %eax
    push   0x14(%ebp)
    push   0x10(%ebp)
    push   %edi
    push   0x8(%ebp)
    call   func_5ba33
    add    $0x18,%esp
    add    %eax,%edi
    inc    %esi
    cmpb   $0x0,(%esi)
    jne    jump_5bbd6
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5bbfd:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffdc,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%eax
    inc    %eax
    mov    %eax,-0x1c(%ebp)
    jle    jump_5bc7c
    mov    0x8(%ebx),%eax
    inc    %eax
    mov    %eax,%ecx
    jle    jump_5bc7c
    mov    0x4(%esi),%eax
    mov    %eax,-0x20(%ebp)
    cmp    $0x0,%eax
    jg     jump_5bc30
    mov    $0x0,%eax
  jump_5bc30:
    mov    %eax,-0x8(%ebp)
    mov    0x8(%esi),%eax
    mov    %eax,-0x24(%ebp)
    cmp    $0x0,%eax
    jg     jump_5bc43
    mov    $0x0,%eax
  jump_5bc43:
    mov    %eax,-0xc(%ebp)
    mov    0xc(%esi),%eax
    mov    -0x1c(%ebp),%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5bc53
    mov    %edx,%eax
  jump_5bc53:
    mov    %eax,-0x10(%ebp)
    mov    0x10(%esi),%eax
    mov    %ecx,%edx
    dec    %edx
    cmp    %edx,%eax
    jl     jump_5bc62
    mov    %edx,%eax
  jump_5bc62:
    mov    %eax,-0x14(%ebp)
    mov    -0x10(%ebp),%eax
    cmp    -0x8(%ebp),%eax
    jl     jump_5bc87
    mov    -0x14(%ebp),%eax
    cmp    -0xc(%ebp),%eax
    jl     jump_5bc87
    mov    (%ebx),%eax
    mov    %eax,-0x18(%ebp)
    jmp    jump_5bc92
  jump_5bc7c:
    mov    $0xffffffff,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5bc87:
    mov    $0xfffffffe,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5bc92:
    movl   $0x0,-0x4(%ebp)
    mov    -0x20(%ebp),%eax
    add    %eax,-0x4(%ebp)
    mov    -0x24(%ebp),%eax
    add    %eax,0xc(%ebp)
    mov    0x10(%ebp),%esi
    mov    0x8(%ebp),%edi
    mov    0x14(%ebp),%ecx
    mov    -0x10(%ebp),%eax
    sub    -0x4(%ebp),%eax
    inc    %eax
    sub    %ecx,%eax
    jns    jump_5bcbd
    add    %eax,%ecx
    jle    jump_5bcfa
  jump_5bcbd:
    mov    -0x4(%ebp),%eax
    sub    -0x8(%ebp),%eax
    jns    jump_5bcce
    add    %eax,%ecx
    jle    jump_5bcfa
    sub    %eax,%esi
    sub    %eax,-0x4(%ebp)
  jump_5bcce:
    mov    -0x14(%ebp),%eax
    sub    0xc(%ebp),%eax
    js     jump_5bcfa
    mov    0xc(%ebp),%eax
    sub    -0xc(%ebp),%eax
    js     jump_5bcfa
    mov    0xc(%ebp),%eax
    imull  -0x1c(%ebp)
    add    -0x18(%ebp),%eax
    add    -0x4(%ebp),%eax
    mov    %eax,%edi
    mov    %ecx,%edx
    and    $0x3,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    mov    %edx,%ecx
    shr    $0x2,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
  jump_5bcfa:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5bd00:
/*----------------------------------------------------------------*/
    inc    %edx
    dec    %ebp
    dec    %eax
    inc    %esp
    inc    %ebx
    dec    %ebp
    inc    %ecx
    push   %eax
    inc    %edx
    dec    %edi
    inc    %esp
    pop    %ecx
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0xc(%ebp),%esi
    add    $0xc,%esi
  jump_5bd1c:
    cmpb   $0x0,(%esi)
    jne    jump_5bd24
    inc    %esi
    jmp    jump_5bd1c
  jump_5bd24:
    mov    $0x2,%ecx
    mov    0x8(%ebp),%edi
    mov    %esi,%eax
    repz cmpsw %es:(%edi),%ds:(%esi)
    je     jump_5bd45
    mov    %eax,%esi
    add    $0x6,%esi
    lods   %ds:(%esi),%ax
    xchg   %al,%ah
    and    $0xffff,%eax
    add    %eax,%esi
    jmp    jump_5bd1c
  jump_5bd45:
    add    $0x8,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5c047:
/*----------------------------------------------------------------*/
    mov    $0x0,%ebx
    mov    %ecx,%eax
    add    $0x2,%eax
    mov    %eax,(%edi)
    mov    %ecx,%eax
    shl    %eax
    mov    %eax,0x4(%edi)
  jump_5c05a:
    cmp    %ecx,%ebx
    jge    jump_5c079
    mov    %bl,0x102e(%ebx,%edi,1)
    mov    %bl,0x202e(%ebx,%edi,1)
    movw   $0xffff,0x302e(%edi,%ebx,2)
    inc    %ebx
    jmp    jump_5c05a
  jump_5c079:
    cmp    $0x1000,%ebx
    jge    jump_5c08e
    movw   $0xfffe,0x302e(%edi,%ebx,2)
    inc    %ebx
    jmp    jump_5c079
  jump_5c08e:
    ret


/*----------------------------------------------------------------*/
func_5c08f:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x10(%edi)
    jne    jump_5c09e
    lods   %ds:(%esi),%al
    and    $0xff,%eax
    mov    %eax,0x10(%edi)
  jump_5c09e:
    lods   %ds:(%esi),%al
    and    $0xff,%eax
    decl   0x10(%edi)
    ret


/*----------------------------------------------------------------*/
func_5c0a8:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x18(%edi)
    jne    jump_5c0bd
    call   func_5c08f
    mov    %eax,0x14(%edi)
    movl   $0x8,0x18(%edi)
  jump_5c0bd:
    mov    %edx,%eax
    cmp    %eax,0x18(%edi)
    jge    jump_5c0d5
    call   func_5c08f
    mov    0x18(%edi),%ecx
    shl    %cl,%eax
    or     %eax,0x14(%edi)
    addl   $0x8,0x18(%edi)
  jump_5c0d5:
    mov    %edx,%ebx
    movzbl data_882f1(%ebx),%eax
    mov    0x14(%edi),%ebx
    and    %eax,%ebx
    push   %ebx
    sub    %edx,0x18(%edi)
    mov    %edx,%ecx
    shrl   %cl,0x14(%edi)
    pop    %eax
    ret


/*----------------------------------------------------------------*/
func_5c0ee:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    (%edi),%ebx
    mov    %cx,0x302e(%edi,%ebx,2)
    pop    %ebx
    push   %ebx
    mov    0x102e(%ebx,%edi,1),%al
    mov    (%edi),%ebx
    mov    %al,0x202e(%ebx,%edi,1)
    mov    %ecx,%ebx
    mov    0x102e(%ebx,%edi,1),%al
    mov    (%edi),%ebx
    mov    %al,0x102e(%ebx,%edi,1)
    pop    %ebx
    incl   (%edi)
    mov    (%edi),%eax
    cmp    0x4(%edi),%eax
    jne    jump_5c133
    cmpl   $0xc,0x1c(%edi)
    jge    jump_5c133
    incl   0x1c(%edi)
    shll   0x4(%edi)
  jump_5c133:
    ret


/*----------------------------------------------------------------*/
func_5c134:
/*----------------------------------------------------------------*/
    mov    0x8(%edi),%ebx
    mov    %al,data_86ff1(%ebx)
    incl   0x8(%edi)
    decl   0x20(%edi)
    cmpl   $0x0,0x20(%edi)
    jne    jump_5c1b0
    push   0x24(%edi)
    push   $data_86ff1
    push   0xc(%edi)
    push   data_88304
    call   func_5bbfd
    add    $0x10,%esp
    movl   $0x0,0x8(%edi)
    mov    0x24(%edi),%eax
    mov    %eax,0x20(%edi)
    cmpb   $0x0,0x2c(%edi)
    je     jump_5c19e
    movzbl 0x2d(%edi),%ebx
    movzbl data_882fa(%ebx),%eax
    add    %eax,0xc(%edi)
    mov    0xc(%edi),%eax
    cmp    0x28(%edi),%eax
    jl     jump_5c19c
    incb   0x2d(%edi)
    movzbl 0x2d(%edi),%ebx
    movzbl data_882ff(%ebx),%eax
    mov    %eax,0xc(%edi)
  jump_5c19c:
    jmp    jump_5c1b0
  jump_5c19e:
    incl   0xc(%edi)
    mov    0xc(%edi),%eax
    cmp    0x28(%edi),%eax
    jl     jump_5c1b0
    movl   $0x0,0xc(%edi)
  jump_5c1b0:
    ret


/*----------------------------------------------------------------*/
func_5c1b1:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffe8,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%edi
    mov    %edi,data_88304
    mov    0x10(%ebp),%edi
    mov    $0x0,%eax
    mov    $0x2e,%ecx
    mov    %ecx,%edx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %edx,%ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    mov    0x10(%ebp),%edi
    mov    0xc(%ebp),%esi
    movzbl 0xb(%esi),%eax
    mov    %eax,-0x18(%ebp)
    mov    0xa(%esi),%al
    mov    %al,%cl
    and    $0x7,%cl
    inc    %cl
    mov    $0x1,%ebx
    shl    %cl,%ebx
    add    $0xd,%esi
    test   $0x80,%al
    je     jump_5c20c
    imul   $0x3,%ebx,%ebx
    add    %ebx,%esi
  jump_5c20c:
    movzwl 0x5(%esi),%eax
    mov    %eax,0x24(%edi)
    movzwl 0x7(%esi),%eax
    mov    %eax,0x28(%edi)
    movzbl 0x9(%esi),%eax
    mov    %al,0x2c(%edi)
    andb   $0x40,0x2c(%edi)
    add    $0xa,%esi
    test   $0x80,%al
    je     jump_5c23f
    mov    %al,%cl
    and    $0x7,%cl
    inc    %cl
    mov    $0x1,%ebx
    shl    %cl,%ebx
    imul   $0x3,%ebx,%ebx
    add    %ebx,%esi
  jump_5c23f:
    movl   $0x0,0x10(%edi)
    lods   %ds:(%esi),%al
    movzbl %al,%ecx
    mov    $0x8,%edx
    push   %ecx
    push   %edx
    mov    $0x1,%eax
    shl    %cl,%eax
    mov    %eax,-0x4(%ebp)
    inc    %eax
    mov    %eax,-0x8(%ebp)
    inc    %ecx
    mov    %ecx,0x1c(%edi)
    mov    -0x4(%ebp),%ecx
    call   func_5c047
    movl   $0xffff,-0x10(%ebp)
    movl   $0x0,-0x14(%ebp)
    movb   $0x0,0x2d(%edi)
    mov    0x24(%edi),%eax
    mov    %eax,0x20(%edi)
    movl   $0x0,0x8(%edi)
    movl   $0x0,0xc(%edi)
    pop    %edx
    pop    %ecx
  jump_5c293:
    push   %ecx
    push   %edx
    mov    0x1c(%edi),%edx
    cmp    $0x8,%edx
    jg     jump_5c2a6
    push   %edx
    call   func_5c0a8
    pop    %edx
    jmp    jump_5c2c3
  jump_5c2a6:
    push   %edx
    mov    $0x8,%edx
    call   func_5c0a8
    pop    %edx
    push   %eax
    push   %edx
    sub    $0x8,%edx
    call   func_5c0a8
    pop    %edx
    shl    $0x8,%eax
    pop    %ebx
    or     %ebx,%eax
  jump_5c2c3:
    mov    %eax,-0xc(%ebp)
    pop    %edx
    pop    %ecx
    cmp    -0x4(%ebp),%eax
    jne    jump_5c2eb
    push   %ecx
    push   %edx
    mov    -0x4(%ebp),%ecx
    call   func_5c047
    pop    %edx
    pop    %ecx
    mov    %ecx,%eax
    inc    %eax
    mov    %eax,0x1c(%edi)
    movl   $0xffff,-0x10(%ebp)
    jmp    jump_5c3b6
  jump_5c2eb:
    cmp    -0x8(%ebp),%eax
    jne    jump_5c317
  jump_5c2f0:
    cmpl   $0x0,0x10(%edi)
    je     jump_5c2fc
    lods   %ds:(%esi),%al
    decl   0x10(%edi)
    jmp    jump_5c2f0
  jump_5c2fc:
    lods   %ds:(%esi),%al
    and    $0xff,%eax
    mov    %eax,0x10(%edi)
    cmpl   $0x0,0x10(%edi)
    jne    jump_5c2f0
    movl   $0xffff,-0x14(%ebp)
    jmp    jump_5c3b6
  jump_5c317:
    mov    -0xc(%ebp),%ebx
    cmpw   $0xfffe,0x302e(%edi,%ebx,2)
    je     jump_5c33c
    cmpl   $0xffff,-0x10(%ebp)
    je     jump_5c33a
    push   %ecx
    push   %edx
    mov    -0x10(%ebp),%ecx
    call   func_5c0ee
    pop    %edx
    pop    %ecx
  jump_5c33a:
    jmp    jump_5c34b
  jump_5c33c:
    push   %ecx
    push   %edx
    mov    -0x10(%ebp),%ebx
    mov    -0x10(%ebp),%ecx
    call   func_5c0ee
    pop    %edx
    pop    %ecx
  jump_5c34b:
    push   %ecx
    push   %edx
    mov    -0xc(%ebp),%ebx
    push   %esi
    mov    $0x0,%ecx
    mov    %edi,%esi
    add    $0x2e,%esi
  jump_5c35b:
    mov    0x202e(%ebx,%edi,1),%al
    mov    %al,(%esi)
    inc    %esi
    inc    %ecx
    movzwl 0x302e(%edi,%ebx,2),%ebx
    cmp    $0xffff,%ebx
    jne    jump_5c35b
    cmp    $0x1,%edx
    jne    jump_5c39c
  jump_5c37b:
    dec    %esi
    mov    (%esi),%al
    and    $0x1,%eax
    push   %ecx
    call   func_5c134
    pop    %ecx
    mov    (%esi),%al
    and    $0xff,%eax
    shr    %eax
    push   %ecx
    call   func_5c134
    pop    %ecx
    loop   jump_5c37b
    jmp    jump_5c3ad
  jump_5c39c:
    dec    %esi
    mov    (%esi),%al
    and    $0xff,%eax
    push   %ecx
    call   func_5c134
    pop    %ecx
    loop   jump_5c39c
  jump_5c3ad:
    pop    %esi
    pop    %edx
    pop    %ecx
    mov    -0xc(%ebp),%eax
    mov    %eax,-0x10(%ebp)
  jump_5c3b6:
    cmpl   $0x0,-0x14(%ebp)
    jne    jump_5c3c1
    jmp    jump_5c293
  jump_5c3c1:
    mov    -0x18(%ebp),%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5c4a8:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%esi
    add    $0x8,%esi
    mov    0xc(%ebp),%eax
    shl    $0x3,%eax
    add    %eax,%esi
    mov    (%esi),%esi
    add    0x8(%ebp),%esi
    mov    0x10(%esi),%eax
    sub    0x8(%esi),%eax
    inc    %eax
    mov    0x14(%esi),%ebx
    sub    0xc(%esi),%ebx
    inc    %ebx
    shl    $0x10,%eax
    mov    %bx,%ax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5c4dc:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%esi
    add    $0x8,%esi
    mov    0xc(%ebp),%eax
    shl    $0x3,%eax
    add    %eax,%esi
    mov    (%esi),%esi
    add    0x8(%ebp),%esi
    mov    0x8(%esi),%eax
    shl    $0x10,%eax
    mov    0xc(%esi),%ax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5c5e3:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%esi
    mov    0x4(%esi),%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5c6b2:
/*----------------------------------------------------------------*/
    mov    %ebx,%eax
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5c9ad:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xfffffff0,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    cld
    push   %ds
    pop    %es
    mov    $data_87cf1,%edi
    mov    $0x0,%eax
    mov    $0x40,%ecx
    rep stos %eax,%es:(%edi)
    mov    0x8(%ebp),%esi
    mov    0x4(%esi),%eax
    inc    %eax
    mov    0x8(%esi),%ecx
    inc    %ecx
    imul   %eax,%ecx
    mov    (%esi),%esi
    mov    $data_872f1,%edi
    movl   $0xffffffff,-0x4(%ebp)
  jump_5c9e7:
    mov    $0x0,%eax
    lods   %ds:(%esi),%al
    cmpb   $0x0,data_87cf1(%eax)
    jne    jump_5ca1a
    orb    $0x1,data_87cf1(%eax)
    stos   %al,%es:(%edi)
    incl   -0x4(%ebp)
    mov    %eax,%ebx
    shl    %ebx
    add    %eax,%ebx
    add    $data_86ff1,%ebx
    push   %ecx
    push   %ebx
    push   %eax
    call   *data_86a98
    add    $0x8,%esp
    pop    %ecx
  jump_5ca1a:
    dec    %ecx
    jne    jump_5c9e7
    movl   $0x0,-0x8(%ebp)
    mov    -0x4(%ebp),%ecx
    mov    $0x0,%ebx
    mov    0xc(%ebp),%esi
  jump_5ca2f:
    movzbl data_872f1(%ecx),%eax
    mov    %eax,%ebx
    shl    %ebx
    add    %eax,%ebx
    mov    $0x2,%edx
  jump_5ca41:
    mov    $0xff,%ah
    mov    data_86ff1(%ebx),%al
    sub    (%ebx,%esi,1),%al
    jge    jump_5ca52
    mov    $0x1,%ah
    neg    %al
  jump_5ca52:
    mov    %ah,data_87cf1(%ebx)
    mov    %al,data_873f1(%ebx)
    cmp    -0x8(%ebp),%al
    jle    jump_5ca66
    mov    %al,-0x8(%ebp)
  jump_5ca66:
    inc    %ebx
    dec    %edx
    jns    jump_5ca41
    dec    %ecx
    jns    jump_5ca2f
    mov    -0x4(%ebp),%ecx
    mov    $data_87ff1,%edi
    mov    -0x8(%ebp),%al
    shr    %al
    mov    %al,%ah
    shr    %ecx
    rep stos %ax,%es:(%edi)
    adc    $0x0,%ecx
    rep stos %al,%es:(%edi)
    movzbl -0x8(%ebp),%esi
    cmp    $0x0,%esi
    je     jump_5cb2b
    mov    0x10(%ebp),%eax
    mov    $0x0,%edx
    shld   $0x10,%eax,%edx
    shl    $0x10,%eax
    div    %esi
    mov    %eax,-0xc(%ebp)
    movl   $0x8000,-0x10(%ebp)
  jump_5caae:
    mov    -0x4(%ebp),%ecx
  jump_5cab1:
    movzbl data_872f1(%ecx),%eax
    mov    %eax,%ebx
    shl    %ebx
    add    %eax,%ebx
    mov    $0x2,%edx
  jump_5cac3:
    mov    data_87ff1(%edx,%ebx,1),%al
    add    data_873f1(%edx,%ebx,1),%al
    cmp    -0x8(%ebp),%al
    jl     jump_5cae7
    sub    -0x8(%ebp),%al
    mov    data_87cf1(%edx,%ebx,1),%ah
    add    %ah,data_86ff1(%edx,%ebx,1)
  jump_5cae7:
    mov    %al,data_87ff1(%edx,%ebx,1)
    dec    %edx
    jns    jump_5cac3
    push   %ecx
    mov    %ebx,%eax
    add    $data_86ff1,%eax
    push   %eax
    movzbl data_872f1(%ecx),%eax
    push   %eax
    call   *data_86a9c
    add    $0x8,%esp
    pop    %ecx
    dec    %ecx
    jns    jump_5cab1
    mov    -0xc(%ebp),%eax
    add    %eax,-0x10(%ebp)
    cmpw   $0x1,-0xe(%ebp)
    jl     jump_5cb28
  jump_5cb1c:
    call   *data_86a8c
    decw   -0xe(%ebp)
    jne    jump_5cb1c
  jump_5cb28:
    dec    %esi
    jne    jump_5caae
  jump_5cb2b:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_5cbc0:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%ecx
    inc    %ecx
    mov    %ecx,data_88474
    mov    0xc(%esi),%eax
    mov    0x4(%ebx),%ecx
    cmp    %eax,%ecx
    jl     jump_5cbe2
    mov    %eax,%ecx
  jump_5cbe2:
    mov    0x4(%esi),%eax
    mov    $0x0,%edi
    cmp    %eax,%edi
    jg     jump_5cbf0
    mov    %eax,%edi
  jump_5cbf0:
    sub    %edi,%ecx
    jl     jump_5cedd
    mov    %ecx,data_88468
    mov    0x10(%esi),%eax
    mov    0x8(%ebx),%ecx
    cmp    %eax,%ecx
    jl     jump_5cc0a
    mov    %eax,%ecx
  jump_5cc0a:
    mov    0x8(%esi),%edx
    mov    $0x0,%eax
    cmp    %edx,%eax
    jg     jump_5cc18
    mov    %edx,%eax
  jump_5cc18:
    sub    %eax,%ecx
    jl     jump_5cedd
    mov    %ecx,data_8846c
    mull   data_88474
    add    %edi,%eax
    add    (%ebx),%eax
    mov    %eax,data_88470
    push   %ds
    pop    %es
    mov    0x10(%ebp),%ebx
    mov    0xc(%ebp),%eax
    shl    $0x3,%eax
    mov    %eax,%edx
    shl    %eax
    add    %edx,%eax
    add    %ebx,%eax
    mov    %ebx,data_8848c
    mov    %eax,data_88490
    mov    0x8(%ebx),%eax
    add    $0x8000,%eax
    shr    $0x10,%eax
    mov    %al,%ah
    mov    %eax,%edx
    shl    $0x10,%eax
    or     %edx,%eax
    mov    %eax,data_88510
    movl   $0x0,data_88488
    mov    $0x7fff,%esi
    mov    $0xffff8000,%edi
    mov    $0xf,%ecx
  jump_5cc85:
    mov    $0x0,%edx
    mov    (%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    data_88468,%eax
    sub    (%ebx),%eax
    shld   $0x1,%eax,%edx
    or     %edx,data_88488
    mov    0x4(%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    data_8846c,%eax
    sub    0x4(%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    0x4(%ebx),%eax
    cmp    %esi,%eax
    jg     jump_5ccc3
    mov    %eax,%esi
    mov    %ebx,data_88494
  jump_5ccc3:
    cmp    %edi,%eax
    jl     jump_5ccc9
    mov    %eax,%edi
  jump_5ccc9:
    and    %edx,%ecx
    add    $0x18,%ebx
    cmp    data_88490,%ebx
    jne    jump_5cc85
    or     %ecx,%ecx
    jne    jump_5cedd
    mov    data_88494,%eax
    mov    %eax,data_884a0
    mov    %eax,data_884a4
    mov    %esi,data_884b4
    cmp    %esi,%edi
    je     jump_5cedd
  jump_5ccfb:
    mov    data_884a0,%ebx
    mov    %ebx,data_88498
    mov    %ebx,%esi
    sub    $0x18,%esi
    cmp    data_8848c,%esi
    jge    jump_5cd1d
    mov    data_88490,%esi
    sub    $0x18,%esi
  jump_5cd1d:
    mov    %esi,data_884a0
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    cmp    $0x0,%edx
    jge    jump_5cd33
    cmp    $0x0,%ecx
    jle    jump_5ccfb
  jump_5cd33:
    sub    %edx,%ecx
    je     jump_5ccfb
    mov    %ecx,data_884a8
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884d8
    mov    (%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,data_884b8
  jump_5cd68:
    mov    data_884a4,%ebx
    mov    %ebx,data_8849c
    mov    %ebx,%esi
    add    $0x18,%esi
    cmp    data_88490,%esi
    jl     jump_5cd87
    mov    data_8848c,%esi
  jump_5cd87:
    mov    %esi,data_884a4
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    cmp    $0x0,%edx
    jge    jump_5cd9d
    cmp    $0x0,%ecx
    jle    jump_5cd68
  jump_5cd9d:
    sub    %edx,%ecx
    je     jump_5cd68
    mov    %ecx,data_884ac
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884dc
    mov    (%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,data_884bc
    mov    data_8846c,%eax
    sub    data_884b4,%eax
    sub    data_8846c,%edi
    jg     jump_5cde7
    add    %edi,%eax
  jump_5cde7:
    mov    %eax,data_884b0
    mov    $0x0,%eax
    sub    data_884b4,%eax
    jle    jump_5ce55
    sub    %eax,data_884b0
    mov    $0x0,%ecx
    mov    %ecx,data_884b4
    mov    data_88498,%ebx
    sub    0x4(%ebx),%ecx
    sub    %ecx,data_884a8
    shl    $0x10,%ecx
    mov    data_884d8,%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,data_884b8
    mov    $0x0,%ecx
    mov    data_8849c,%ebx
    sub    0x4(%ebx),%ecx
    sub    %ecx,data_884ac
    shl    $0x10,%ecx
    mov    data_884dc,%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,data_884bc
  jump_5ce55:
    mov    data_884b4,%eax
    mull   data_88474
    mov    data_88470,%edi
    add    %eax,%edi
    mov    data_884b8,%eax
    mov    data_884bc,%ebx
    cmpl   $0x0,data_88488
    jne    jump_5cef4
  jump_5ce7c:
    push   %eax
    push   %edi
    mov    %ebx,%edx
    cmp    %eax,%edx
    jg     jump_5ce85
    xchg   %eax,%edx
  jump_5ce85:
    sar    $0x10,%eax
    sar    $0x10,%edx
    mov    %edx,%ecx
    sub    %eax,%ecx
    inc    %ecx
    add    %eax,%edi
    mov    data_88510,%eax
    mov    %ecx,%edx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %edx,%ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    pop    %edi
    pop    %eax
    add    data_88474,%edi
    decl   data_884b0
    js     jump_5cedd
    je     jump_5cee3
    decl   data_884a8
    je     jump_5cf86
    add    data_884d8,%eax
  jump_5cec9:
    decl   data_884ac
    je     jump_5cffa
    add    data_884dc,%ebx
    jmp    jump_5ce7c
  jump_5cedd:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5cee3:
    add    data_884d8,%eax
    add    data_884dc,%ebx
    jmp    jump_5ce7c
  jump_5cef4:
    push   %eax
    push   %edi
    mov    %ebx,%edx
    cmp    %eax,%edx
    jg     jump_5cefd
    xchg   %eax,%edx
  jump_5cefd:
    sar    $0x10,%eax
    sar    $0x10,%edx
    cmp    data_88468,%eax
    jg     jump_5cf37
    cmp    $0x0,%edx
    jl     jump_5cf37
    mov    %edx,%ecx
    sub    %eax,%ecx
    inc    %ecx
    add    %eax,%edi
    sub    $0x0,%eax
    jl     jump_5cf7c
  jump_5cf1c:
    sub    data_88468,%edx
    jg     jump_5cf82
  jump_5cf24:
    mov    data_88510,%eax
    mov    %ecx,%edx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    mov    %edx,%ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
  jump_5cf37:
    pop    %edi
    pop    %eax
    add    data_88474,%edi
    decl   data_884b0
    js     jump_5cedd
    je     jump_5cf6b
    decl   data_884a8
    je     jump_5cf86
    add    data_884d8,%eax
  jump_5cf57:
    decl   data_884ac
    je     jump_5cffa
    add    data_884dc,%ebx
    jmp    jump_5cef4
  jump_5cf6b:
    add    data_884d8,%eax
    add    data_884dc,%ebx
    jmp    jump_5cef4
  jump_5cf7c:
    sub    %eax,%edi
    add    %eax,%ecx
    jmp    jump_5cf1c
  jump_5cf82:
    sub    %edx,%ecx
    jmp    jump_5cf24
  jump_5cf86:
    push   %ebx
    mov    data_884a0,%ebx
    mov    %ebx,data_88498
    mov    %ebx,%esi
    sub    $0x18,%esi
    cmp    data_8848c,%esi
    jge    jump_5cfa9
    mov    data_88490,%esi
    sub    $0x18,%esi
  jump_5cfa9:
    mov    %esi,data_884a0
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,data_884a8
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884d8
    mov    (%ebx),%eax
    shl    $0x10,%eax
    add    $0x8000,%eax
    pop    %ebx
    cmpl   $0x0,data_88488
    je     jump_5cec9
    jmp    jump_5cf57
  jump_5cffa:
    push   %eax
    mov    data_884a4,%ebx
    mov    %ebx,data_8849c
    mov    %ebx,%esi
    add    $0x18,%esi
    cmp    data_88490,%esi
    jl     jump_5d01a
    mov    data_8848c,%esi
  jump_5d01a:
    mov    %esi,data_884a4
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,data_884ac
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884dc
    mov    (%ebx),%ebx
    shl    $0x10,%ebx
    add    $0x8000,%ebx
    pop    %eax
    cmpl   $0x0,data_88488
    je     jump_5ce7c
    jmp    jump_5cef4


/*----------------------------------------------------------------*/
func_5e165:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%esi
    mov    (%esi),%ebx
    mov    0x4(%ebx),%ecx
    inc    %ecx
    mov    %ecx,data_88474
    mov    0xc(%esi),%eax
    mov    0x4(%ebx),%ecx
    cmp    %eax,%ecx
    jl     jump_5e187
    mov    %eax,%ecx
  jump_5e187:
    mov    0x4(%esi),%eax
    mov    $0x0,%edi
    cmp    %eax,%edi
    jg     jump_5e195
    mov    %eax,%edi
  jump_5e195:
    sub    %edi,%ecx
    jl     jump_5e5c0
    mov    %ecx,data_88468
    mov    0x10(%esi),%eax
    mov    0x8(%ebx),%ecx
    cmp    %eax,%ecx
    jl     jump_5e1af
    mov    %eax,%ecx
  jump_5e1af:
    mov    0x8(%esi),%edx
    mov    $0x0,%eax
    cmp    %edx,%eax
    jg     jump_5e1bd
    mov    %edx,%eax
  jump_5e1bd:
    sub    %eax,%ecx
    jl     jump_5e5c0
    mov    %ecx,data_8846c
    mull   data_88474
    add    %edi,%eax
    add    (%ebx),%eax
    mov    %eax,data_88470
    push   %ds
    pop    %es
    mov    0x10(%ebp),%ebx
    mov    0xc(%ebp),%eax
    shl    $0x3,%eax
    mov    %eax,%edx
    shl    %eax
    add    %edx,%eax
    add    %ebx,%eax
    mov    %ebx,data_8848c
    mov    %eax,data_88490
    mov    $0x7fff,%esi
    mov    $0xffff8000,%edi
    mov    $0xf,%ecx
  jump_5e207:
    mov    $0x0,%edx
    mov    (%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    data_88468,%eax
    sub    (%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    0x4(%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    data_8846c,%eax
    sub    0x4(%ebx),%eax
    shld   $0x1,%eax,%edx
    mov    0x4(%ebx),%eax
    cmp    %esi,%eax
    jg     jump_5e23f
    mov    %eax,%esi
    mov    %ebx,data_88494
  jump_5e23f:
    cmp    %edi,%eax
    jl     jump_5e245
    mov    %eax,%edi
  jump_5e245:
    and    %edx,%ecx
    add    $0x18,%ebx
    cmp    data_88490,%ebx
    jne    jump_5e207
    or     %ecx,%ecx
    jne    jump_5e5c0
    mov    data_88494,%eax
    mov    %eax,data_884a0
    mov    %eax,data_884a4
    mov    %esi,data_884b4
    cmp    %esi,%edi
    je     jump_5e5c0
  jump_5e277:
    mov    data_884a0,%ebx
    mov    %ebx,data_88498
    mov    %ebx,%esi
    sub    $0x18,%esi
    cmp    data_8848c,%esi
    jge    jump_5e299
    mov    data_88490,%esi
    sub    $0x18,%esi
  jump_5e299:
    mov    %esi,data_884a0
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    cmp    $0x0,%edx
    jge    jump_5e2af
    cmp    $0x0,%ecx
    jle    jump_5e277
  jump_5e2af:
    sub    %edx,%ecx
    je     jump_5e277
    mov    %ecx,data_884a8
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884d8
    mov    (%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,data_884b8
  jump_5e2e4:
    mov    data_884a4,%ebx
    mov    %ebx,data_8849c
    mov    %ebx,%esi
    add    $0x18,%esi
    cmp    data_88490,%esi
    jl     jump_5e303
    mov    data_8848c,%esi
  jump_5e303:
    mov    %esi,data_884a4
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    cmp    $0x0,%edx
    jge    jump_5e319
    cmp    $0x0,%ecx
    jle    jump_5e2e4
  jump_5e319:
    sub    %edx,%ecx
    je     jump_5e2e4
    mov    %ecx,data_884ac
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884dc
    mov    (%ebx),%edx
    shl    $0x10,%edx
    add    $0x8000,%edx
    mov    %edx,data_884bc
    mov    data_8846c,%eax
    sub    data_884b4,%eax
    sub    data_8846c,%edi
    jg     jump_5e363
    add    %edi,%eax
  jump_5e363:
    mov    %eax,data_884b0
    mov    $0x0,%eax
    sub    data_884b4,%eax
    jle    jump_5e3d1
    sub    %eax,data_884b0
    mov    $0x0,%ecx
    mov    %ecx,data_884b4
    mov    data_88498,%ebx
    sub    0x4(%ebx),%ecx
    sub    %ecx,data_884a8
    shl    $0x10,%ecx
    mov    data_884d8,%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,data_884b8
    mov    $0x0,%ecx
    mov    data_8849c,%ebx
    sub    0x4(%ebx),%ecx
    sub    %ecx,data_884ac
    shl    $0x10,%ecx
    mov    data_884dc,%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,data_884bc
  jump_5e3d1:
    mov    data_884b4,%eax
    mull   data_88474
    add    data_88470,%eax
    mov    %eax,data_88480
    mov    data_884b8,%eax
    mov    data_884bc,%ebx
  jump_5e3f2:
    push   %eax
    push   %ebx
    cmp    %eax,%ebx
    jg     jump_5e3f9
    xchg   %eax,%ebx
  jump_5e3f9:
    sar    $0x10,%eax
    cmp    data_88468,%eax
    jg     jump_5e583
    sar    $0x10,%ebx
    cmp    $0x0,%ebx
    jl     jump_5e583
    mov    %eax,data_884f8
    mov    %ebx,data_884fc
    sub    %eax,%ebx
    je     jump_5e445
    mov    $0x0,%ecx
    sub    data_884f8,%ecx
    jg     jump_5e5d7
  jump_5e434:
    mov    data_884fc,%eax
    sub    data_88468,%eax
    jg     jump_5e5e2
  jump_5e445:
    mov    data_884f8,%eax
    mov    data_88480,%edi
    add    %eax,%edi
    mov    data_884fc,%ebx
    sub    %eax,%ebx
    mov    %edi,%eax
    add    %ebx,%eax
    mov    %eax,data_88484
    xor    %eax,%eax
    mov    0x14(%ebp),%esi
    inc    %ebx
    test   $0x1,%edi
    je     jump_5e480
    mov    (%edi),%al
    mov    (%eax,%esi,1),%dl
    mov    %dl,(%edi)
    dec    %ebx
    je     jump_5e583
    inc    %edi
  jump_5e480:
    cmp    $0x1,%ebx
    je     jump_5e576
    push   %ebx
    shr    %ebx
    dec    %ebx
    cmp    $0x5,%ebx
    jl     jump_5e509
  jump_5e492:
    mov    (%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,(%edi)
    mov    0x2(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x2(%edi)
    mov    0x4(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x4(%edi)
    mov    0x6(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x6(%edi)
    mov    0x8(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x8(%edi)
    mov    0xa(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0xa(%edi)
    add    $0xc,%edi
    sub    $0x6,%ebx
    js     jump_5e56d
    cmp    $0x5,%ebx
    jge    jump_5e492
  jump_5e509:
    mov    (%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,(%edi)
    dec    %ebx
    js     jump_5e56d
    mov    0x2(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x2(%edi)
    dec    %ebx
    js     jump_5e56d
    mov    0x4(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x4(%edi)
    dec    %ebx
    js     jump_5e56d
    mov    0x6(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x6(%edi)
    dec    %ebx
    js     jump_5e56d
    mov    0x8(%edi),%cx
    mov    %cl,%al
    mov    (%eax,%esi,1),%dl
    mov    %ch,%al
    mov    (%eax,%esi,1),%dh
    mov    %dx,0x8(%edi)
  jump_5e56d:
    pop    %ebx
    test   $0x1,%ebx
    je     jump_5e583
  jump_5e576:
    mov    data_88484,%edi
    mov    (%edi),%al
    mov    (%eax,%esi,1),%dl
    mov    %dl,(%edi)
  jump_5e583:
    mov    data_88474,%edi
    add    %edi,data_88480
    pop    %ebx
    pop    %eax
    decl   data_884b0
    js     jump_5e5c0
    je     jump_5e5c6
    decl   data_884a8
    je     jump_5e5ed
    add    data_884d8,%eax
  jump_5e5a9:
    decl   data_884ac
    je     jump_5e654
    add    data_884dc,%ebx
    jmp    jump_5e3f2
  jump_5e5c0:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5e5c6:
    add    data_884d8,%eax
    add    data_884dc,%ebx
    jmp    jump_5e3f2
  jump_5e5d7:
    add    %ecx,data_884f8
    jmp    jump_5e434
  jump_5e5e2:
    sub    %eax,data_884fc
    jmp    jump_5e445
  jump_5e5ed:
    push   %ebx
    mov    data_884a0,%ebx
    mov    %ebx,data_88498
    mov    %ebx,%esi
    sub    $0x18,%esi
    cmp    data_8848c,%esi
    jge    jump_5e610
    mov    data_88490,%esi
    sub    $0x18,%esi
  jump_5e610:
    mov    %esi,data_884a0
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,data_884a8
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884d8
    mov    (%ebx),%eax
    shl    $0x10,%eax
    add    $0x8000,%eax
    pop    %ebx
    jmp    jump_5e5a9
  jump_5e654:
    push   %eax
    mov    data_884a4,%ebx
    mov    %ebx,data_8849c
    mov    %ebx,%edi
    add    $0x18,%edi
    cmp    data_88490,%edi
    jl     jump_5e674
    mov    data_8848c,%edi
  jump_5e674:
    mov    %edi,data_884a4
    mov    0x4(%edi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,data_884ac
    mov    (%edi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884dc
    mov    (%ebx),%ebx
    shl    $0x10,%ebx
    add    $0x8000,%ebx
    pop    %eax
    jmp    jump_5e3f2
  jump_5f351:
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    cmp    %eax,%ebx
    jg     jump_5f360
    xchg   %eax,%ebx
    xchg   %ecx,%edx
    xchg   %esi,%edi
  jump_5f360:
    sar    $0x10,%eax
    cmp    data_88468,%eax
    jg     jump_5fa79
    sar    $0x10,%ebx
    cmp    $0x0,%ebx
    jl     jump_5fa79
    mov    %eax,data_884f8
    mov    %ebx,data_884fc
    mov    %ecx,data_8850c
    sub    %eax,%ebx
    je     jump_5f462
    push   %ebx
    sub    %ecx,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ebx
    sar    $0x10,%edx
    idiv   %ebx
    mov    %eax,data_88504
    shld   $0x10,%eax,%edx
    pop    %ebx
    and    $0xffff,%eax
    and    $0xffff,%edx
    mov    $0x1,%ecx
    test   $0x8000,%edx
    je     jump_5f3d5
    or     $0xffff0000,%edx
    neg    %ecx
    cmp    $0x1,%eax
    sbb    $0xffffffff,%edx
  jump_5f3d5:
    add    %edx,%ecx
    push   %ecx
    push   %edx
    sub    %esi,%edi
    mov    %edi,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ebx
    sar    $0x10,%edx
    idiv   %ebx
    mov    %eax,data_88508
    shld   $0x10,%eax,%edx
    and    $0xffff,%eax
    and    $0xffff,%edx
    mov    data_88478,%ecx
    test   $0x8000,%edx
    je     jump_5f415
    neg    %ecx
    cmp    $0x1,%eax
    sbb    $0xffffffff,%edx
  jump_5f415:
    mov    data_88478,%eax
    imul   %dx
    cwtl
    pop    %edx
    pop    %ebx
    add    %eax,%edx
    mov    %edx,data_88528
    add    %ecx,%edx
    mov    %edx,data_8852c
    add    %eax,%ebx
    mov    %ebx,data_88530
    add    %ecx,%ebx
    mov    %ebx,data_88534
    mov    $0x0,%ecx
    sub    data_884f8,%ecx
    jg     jump_5fb05
  jump_5f451:
    mov    data_884fc,%eax
    sub    data_88468,%eax
    jg     jump_5fb31
  jump_5f462:
    mov    %esi,%ecx
    shr    $0x10,%esi
    mov    %esi,%eax
    mull   data_88478
    add    data_8847c,%eax
    mov    data_8850c,%esi
    shr    $0x10,%esi
    add    %eax,%esi
    mov    data_884f8,%eax
    mov    data_88480,%edi
    add    %eax,%edi
    mov    data_884fc,%ebx
    sub    %eax,%ebx
    push   %ebp
    mov    data_8850c,%edx
    mov    data_88504,%eax
    or     %eax,%eax
    jns    jump_5f4a9
    neg    %eax
    not    %edx
  jump_5f4a9:
    shl    $0x10,%eax
    shl    $0x10,%edx
    mov    data_88508,%ebp
    or     %ebp,%ebp
    jns    jump_5f4bd
    neg    %ebp
    not    %ecx
  jump_5f4bd:
    shl    $0x10,%ebp
    shl    $0x10,%ecx
    push   %ebx
    xor    %ebx,%ebx
    jmp    *data_88514

vtable_5f4cc:
    .long   func_5f950
    .long   func_5f683
    .long   func_5f7ef
    .long   func_5f4dc


/*----------------------------------------------------------------*/
func_5f4dc:
/*----------------------------------------------------------------*/
    cmpl   $0x5,(%esp)
    jl     jump_5f5c2
  jump_5f4e6:
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_5f4f5
    mov    %bl,(%edi)
  jump_5f4f5:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_5f516
    mov    %bl,0x1(%edi)
  jump_5f516:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_5f537
    mov    %bl,0x2(%edi)
  jump_5f537:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_5f558
    mov    %bl,0x3(%edi)
  jump_5f558:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_5f579
    mov    %bl,0x4(%edi)
  jump_5f579:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_5f59a
    mov    %bl,0x5(%edi)
  jump_5f59a:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    add    $0x6,%edi
    subl   $0x6,(%esp)
    js     jump_5f67e
    cmpl   $0x5,(%esp)
    jge    jump_5f4e6
  jump_5f5c2:
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_5f5d1
    mov    %bl,(%edi)
  jump_5f5d1:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5f67e
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_5f5fb
    mov    %bl,0x1(%edi)
  jump_5f5fb:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5f67e
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_5f621
    mov    %bl,0x2(%edi)
  jump_5f621:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5f67e
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_5f647
    mov    %bl,0x3(%edi)
  jump_5f647:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5f67e
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    cmp    $0xff,%bl
    je     jump_5f66d
    mov    %bl,0x4(%edi)
  jump_5f66d:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
  jump_5f67e:
    jmp    jump_5fa75


/*----------------------------------------------------------------*/
func_5f683:
/*----------------------------------------------------------------*/
    cmpl   $0x5,(%esp)
    jl     jump_5f74b
  jump_5f68d:
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    mov    %bl,(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    mov    %bl,0x1(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    mov    %bl,0x2(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    mov    %bl,0x3(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    mov    %bl,0x4(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    mov    %bl,0x5(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    add    $0x6,%edi
    subl   $0x6,(%esp)
    js     jump_5f7ea
    cmpl   $0x5,(%esp)
    jge    jump_5f68d
  jump_5f74b:
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    mov    %bl,(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5f7ea
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    mov    %bl,0x1(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5f7ea
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    mov    %bl,0x2(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5f7ea
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    mov    %bl,0x3(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5f7ea
    mov    (%esi),%bl
    mov    data_88538(%ebx),%bl
    mov    %bl,0x4(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
  jump_5f7ea:
    jmp    jump_5fa75


/*----------------------------------------------------------------*/
func_5f7ef:
/*----------------------------------------------------------------*/
    cmpl   $0x5,(%esp)
    jl     jump_5f8b1
  jump_5f7f9:
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5f802
    mov    %bl,(%edi)
  jump_5f802:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5f81d
    mov    %bl,0x1(%edi)
  jump_5f81d:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5f838
    mov    %bl,0x2(%edi)
  jump_5f838:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5f853
    mov    %bl,0x3(%edi)
  jump_5f853:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5f86e
    mov    %bl,0x4(%edi)
  jump_5f86e:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5f889
    mov    %bl,0x5(%edi)
  jump_5f889:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    add    $0x6,%edi
    subl   $0x6,(%esp)
    js     jump_5f94b
    cmpl   $0x5,(%esp)
    jge    jump_5f7f9
  jump_5f8b1:
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5f8ba
    mov    %bl,(%edi)
  jump_5f8ba:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5f94b
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5f8da
    mov    %bl,0x1(%edi)
  jump_5f8da:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5f94b
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5f8fa
    mov    %bl,0x2(%edi)
  jump_5f8fa:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5f94b
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5f91a
    mov    %bl,0x3(%edi)
  jump_5f91a:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5f94b
    mov    (%esi),%bl
    cmp    $0xff,%bl
    je     jump_5f93a
    mov    %bl,0x4(%edi)
  jump_5f93a:
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
  jump_5f94b:
    jmp    jump_5fa75


/*----------------------------------------------------------------*/
func_5f950:
/*----------------------------------------------------------------*/
    cmpl   $0x5,(%esp)
    jl     jump_5f9f4
  jump_5f95a:
    mov    (%esi),%bl
    mov    %bl,(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    %bl,0x1(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    %bl,0x2(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    %bl,0x3(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    %bl,0x4(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    mov    (%esi),%bl
    mov    %bl,0x5(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    add    $0x6,%edi
    subl   $0x6,(%esp)
    js     jump_5fa75
    cmpl   $0x5,(%esp)
    jge    jump_5f95a
  jump_5f9f4:
    mov    (%esi),%bl
    mov    %bl,(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5fa75
    mov    (%esi),%bl
    mov    %bl,0x1(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5fa75
    mov    (%esi),%bl
    mov    %bl,0x2(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5fa75
    mov    (%esi),%bl
    mov    %bl,0x3(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
    decl   (%esp)
    js     jump_5fa75
    mov    (%esi),%bl
    mov    %bl,0x4(%edi)
    xor    %ebx,%ebx
    add    %eax,%edx
    adc    %ebx,%ebx
    add    %ebp,%ecx
    adc    %ebx,%ebx
    add    data_88528(,%ebx,4),%esi
  jump_5fa75:
    add    $0x4,%esp
    pop    %ebp
  jump_5fa79:
    mov    data_88474,%edi
    add    %edi,data_88480
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %eax
    decl   data_884b0
    js     jump_5fad6
    je     jump_5fadc
    decl   data_884a8
    je     jump_5fb3c
    add    data_884d8,%eax
    add    data_884e8,%ecx
    add    data_884f0,%esi
  jump_5fab3:
    decl   data_884ac
    je     jump_5fbf5
    add    data_884dc,%ebx
    add    data_884ec,%edx
    add    data_884f4,%edi
    jmp    jump_5f351
  jump_5fad6:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_5fadc:
    add    data_884d8,%eax
    add    data_884e8,%ecx
    add    data_884f0,%esi
    add    data_884dc,%ebx
    add    data_884ec,%edx
    add    data_884f4,%edi
    jmp    jump_5f351
  jump_5fb05:
    add    %ecx,data_884f8
    shl    $0x10,%ecx
    mov    data_88504,%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,data_8850c
    mov    data_88508,%eax
    imul   %ecx
    shrd   $0x10,%edx,%eax
    add    %eax,%esi
    jmp    jump_5f451
  jump_5fb31:
    sub    %eax,data_884fc
    jmp    jump_5f462
  jump_5fb3c:
    push   %ebx
    push   %edx
    mov    data_884a0,%ebx
    mov    %ebx,data_88498
    mov    %ebx,%esi
    sub    $0x18,%esi
    cmp    data_8848c,%esi
    jge    jump_5fb60
    mov    data_88490,%esi
    sub    $0x18,%esi
  jump_5fb60:
    mov    %esi,data_884a0
    mov    0x4(%esi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,data_884a8
    mov    (%esi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884d8
    mov    data_884a8,%ecx
    mov    0xc(%esi),%edx
    sub    0xc(%ebx),%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884e8
    mov    data_884a8,%ecx
    mov    0x10(%esi),%edx
    sub    0x10(%ebx),%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884f0
    mov    (%ebx),%eax
    shl    $0x10,%eax
    add    $0x8000,%eax
    mov    0xc(%ebx),%ecx
    add    $0x8000,%ecx
    mov    0x10(%ebx),%esi
    add    $0x8000,%esi
    pop    %edx
    pop    %ebx
    jmp    jump_5fab3
  jump_5fbf5:
    push   %eax
    push   %ecx
    mov    data_884a4,%ebx
    mov    %ebx,data_8849c
    mov    %ebx,%edi
    add    $0x18,%edi
    cmp    data_88490,%edi
    jl     jump_5fc16
    mov    data_8848c,%edi
  jump_5fc16:
    mov    %edi,data_884a4
    mov    0x4(%edi),%ecx
    mov    0x4(%ebx),%edx
    sub    %edx,%ecx
    cmp    $0x1,%ecx
    adc    $0x0,%ecx
    mov    %ecx,data_884ac
    mov    (%edi),%edx
    sub    (%ebx),%edx
    shl    $0x10,%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884dc
    mov    data_884ac,%ecx
    mov    0xc(%edi),%edx
    sub    0xc(%ebx),%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884ec
    mov    data_884ac,%ecx
    mov    0x10(%edi),%edx
    sub    0x10(%ebx),%edx
    xor    %eax,%eax
    shrd   $0x10,%edx,%eax
    shl    $0x10,%ecx
    sar    $0x10,%edx
    idiv   %ecx
    mov    %eax,data_884f4
    mov    0xc(%ebx),%edx
    add    $0x8000,%edx
    mov    0x10(%ebx),%edi
    add    $0x8000,%edi
    mov    (%ebx),%ebx
    shl    $0x10,%ebx
    add    $0x8000,%ebx
    pop    %ecx
    pop    %eax
    jmp    jump_5f351


/*----------------------------------------------------------------*/
func_5fcac:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x10,%esp
    call   func_60151
    mov    data_122100,%eax
    add    data_1220b0,%eax
    mov    %eax,data_122064
    mov    data_122104,%eax
    add    data_1220b4,%eax
    mov    %eax,data_122068
    mov    data_122064,%eax
    add    data_122090,%eax
    dec    %eax
    mov    %eax,data_12206c
    mov    data_122068,%eax
    add    data_1220cc,%eax
    dec    %eax
    mov    %eax,data_122070
    mov    data_122064,%eax
    cmp    data_1220a4,%eax
    jg     jump_5fd1b
    mov    data_122068,%eax
    cmp    data_1220a8,%eax
    jle    jump_5fd1d
  jump_5fd1b:
    jmp    jump_5fd26
  jump_5fd1d:
    cmpl   $0x0,data_12206c
    jge    jump_5fd28
  jump_5fd26:
    jmp    jump_5fd31
  jump_5fd28:
    cmpl   $0x0,data_122070
    jge    jump_5fd45
  jump_5fd31:
    movl   $0x1,data_1220e4
    call   func_6016c
    jmp    jump_5ff25
  jump_5fd45:
    cmpl   $0x0,data_122064
    jge    jump_5fd58
    movl   $0x0,data_122064
  jump_5fd58:
    cmpl   $0x0,data_122068
    jge    jump_5fd6b
    movl   $0x0,data_122068
  jump_5fd6b:
    mov    data_12206c,%eax
    cmp    data_1220a4,%eax
    jle    jump_5fd82
    mov    data_1220a4,%eax
    mov    %eax,data_12206c
  jump_5fd82:
    mov    data_122070,%eax
    cmp    data_1220a8,%eax
    jle    jump_5fd99
    mov    data_1220a8,%eax
    mov    %eax,data_122070
  jump_5fd99:
    cmpl   $0xffffffff,data_122054
    je     jump_5fdc4
    mov    $data_122054,%eax
    call   func_60219
    test   %eax,%eax
    je     jump_5fdc4
    movl   $0x1,data_1220e4
    call   func_6016c
    jmp    jump_5ff25
  jump_5fdc4:
    cmpl   $0x0,data_12209c
    je     jump_5fdf4
    mov    $data_122064,%eax
    push   %eax
    call   *data_12209c
    add    $0x4,%esp
    test   %eax,%eax
    jne    jump_5fdf4
    movl   $0x1,data_1220e4
    call   func_6016c
    jmp    jump_5ff25
  jump_5fdf4:
    movl   $0x0,data_1220e4
    mov    data_12206c,%eax
    sub    data_122064,%eax
    mov    %eax,data_1220bc
    mov    data_1220bc,%eax
    mov    %eax,data_1220d4
    mov    data_1220d4,%eax
    mov    %eax,data_122084
    mov    data_122070,%eax
    sub    data_122068,%eax
    mov    %eax,data_1220c0
    mov    data_1220c0,%eax
    mov    %eax,data_1220d8
    mov    data_1220d8,%eax
    mov    %eax,data_122088
    push   data_122070
    push   data_12206c
    push   data_122068
    push   data_122064
    mov    $data_1220b8,%eax
    push   %eax
    call   *data_86a94
    add    $0x14,%esp
    mov    data_1220a0,%ebx
    mov    data_1220b8,%edx
    mov    data_1220d0,%eax
    call   func_74101
    mov    data_122100,%eax
    add    data_1220b0,%eax
    test   %eax,%eax
    jge    jump_5fe9c
    mov    data_122100,%eax
    mov    %eax,-0x10(%ebp)
    jmp    jump_5fea7
  jump_5fe9c:
    mov    data_1220b0,%eax
    mov    %eax,-0x10(%ebp)
    negl   -0x10(%ebp)
  jump_5fea7:
    mov    -0x10(%ebp),%eax
    mov    %eax,-0x4(%ebp)
    mov    data_122104,%eax
    add    data_1220b4,%eax
    test   %eax,%eax
    jge    jump_5fec6
    mov    data_122104,%eax
    mov    %eax,-0xc(%ebp)
    jmp    jump_5fed1
  jump_5fec6:
    mov    data_1220b4,%eax
    mov    %eax,-0xc(%ebp)
    negl   -0xc(%ebp)
  jump_5fed1:
    mov    -0xc(%ebp),%eax
    mov    %eax,-0x8(%ebp)
    mov    -0x8(%ebp),%eax
    push   %eax
    mov    -0x4(%ebp),%eax
    push   %eax
    push   data_122074
    push   data_12208c
    mov    $data_122078,%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    push   data_122070
    push   data_12206c
    push   data_122068
    push   data_122064
    mov    $data_1220d0,%eax
    push   %eax
    call   *data_86a90
    add    $0x14,%esp
    call   func_6016c
  jump_5ff25:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5ff2e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    call   func_60151
    cmpl   $0x0,data_1220e4
    je     jump_5ff51
    call   func_6016c
    jmp    jump_5ff7d
  jump_5ff51:
    push   data_122070
    push   data_12206c
    push   data_122068
    push   data_122064
    mov    $data_1220b8,%eax
    push   %eax
    call   *data_86a90
    add    $0x14,%esp
    call   func_6016c
  jump_5ff7d:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_5ff84:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x10,%esp
    mov    %eax,-0x10(%ebp)
    mov    %edx,-0xc(%ebp)
    mov    %ebx,-0x8(%ebp)
    mov    %ecx,-0x4(%ebp)
    mov    -0x10(%ebp),%eax
    mov    %eax,data_122054
    mov    -0xc(%ebp),%eax
    mov    %eax,data_122058
    mov    -0x8(%ebp),%eax
    mov    %eax,data_12205c
    mov    -0x4(%ebp),%eax
    mov    %eax,data_122060
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_5ffc1:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x48,%esp
    movl   $0x100,-0x20(%ebp)
    movl   $0x2,-0x1c(%ebp)
    lea    -0x3c(%ebp),%ebx
    lea    -0x20(%ebp),%edx
    mov    $0x31,%eax
    call   func_7414d
    cmpl   $0x0,-0x24(%ebp)
    je     jump_5ffff
    movl   $0x0,-0x4(%ebp)
    jmp    jump_600b4
  jump_5ffff:
    mov    -0x3c(%ebp),%eax
    and    $0xffff,%eax
    mov    %eax,data_122114
    mov    -0x30(%ebp),%eax
    and    $0xffff,%eax
    mov    %eax,data_122118
    mov    $0x12,%ebx
    mov    $data_88638,%edx
    mov    data_122114,%eax
    shl    $0x4,%eax
    call   func_74101
    mov    $0x32,%ebx
    xor    %edx,%edx
    mov    $data_122124,%eax
    call   func_72280
    movl   $0xc,data_122140
    movl   $0x7f,data_12213c
    mov    data_122114,%ax
    mov    %ax,data_122146
    movl   $0x300,-0x20(%ebp)
    movl   $0x33,-0x1c(%ebp)
    movl   $0x0,-0x18(%ebp)
    mov    %ds,%eax
    mov    $data_122124,%edx
    mov    %edx,-0xc(%ebp)
    mov    %ds,%ebx
    mov    $data_122124,%edx
    mov    %ebx,%eax
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    %ebx,%eax
    mov    %dx,-0x42(%ebp)
    mov    -0x42(%ebp),%eax
    mov    %ax,-0x48(%ebp)
    lea    -0x48(%ebp),%ecx
    lea    -0x3c(%ebp),%ebx
    lea    -0x20(%ebp),%edx
    mov    $0x31,%eax
    call   func_74168
    movl   $0x1,-0x4(%ebp)
  jump_600b4:
    mov    -0x4(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_600c0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x44,%esp
    mov    $0x32,%ebx
    xor    %edx,%edx
    mov    $data_122156,%eax
    call   func_72280
    movl   $0xc,data_122172
    movl   $0x0,data_12216e
    movw   $0x0,data_122178
    movl   $0x300,-0x28(%ebp)
    movl   $0x33,-0x24(%ebp)
    movl   $0x0,-0x20(%ebp)
    mov    %ds,%eax
    mov    $data_122156,%edx
    mov    %edx,-0x14(%ebp)
    mov    %ds,%ebx
    mov    $data_122156,%edx
    mov    %ebx,%eax
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    %ebx,%eax
    mov    %dx,-0x6(%ebp)
    mov    -0x6(%ebp),%eax
    mov    %ax,-0xc(%ebp)
    lea    -0xc(%ebp),%ecx
    lea    -0x44(%ebp),%ebx
    lea    -0x28(%ebp),%edx
    mov    $0x31,%eax
    call   func_74168
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_60151:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    incl   data_1220f0
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6016c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    addl   $0xffffffff,data_1220f0
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_60188:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    incl   data_122110
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_601a3:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    addl   $0xffffffff,data_122110
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_601bf:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x8,%esp
    mov    %eax,-0x8(%ebp)
    call   func_60151
    cmpl   $0x0,data_1220e4
    jne    jump_601e7
    cmpl   $0x0,data_1220ac
    jge    jump_601f5
  jump_601e7:
    call   func_6016c
    movl   $0x0,-0x4(%ebp)
    jmp    jump_6020d
  jump_601f5:
    mov    -0x8(%ebp),%edi
    mov    $data_122064,%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    call   func_6016c
    movl   $0x1,-0x4(%ebp)
  jump_6020d:
    mov    -0x4(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_60219:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x18,%esp
    mov    %eax,-0x8(%ebp)
    lea    -0x18(%ebp),%eax
    call   func_601bf
    test   %eax,%eax
    jne    jump_6023f
    movl   $0x0,-0x4(%ebp)
    jmp    jump_6027e
  jump_6023f:
    mov    -0x18(%ebp),%eax
    mov    -0x8(%ebp),%edx
    cmp    0x8(%edx),%eax
    jg     jump_60254
    mov    -0x10(%ebp),%eax
    mov    -0x8(%ebp),%edx
    cmp    (%edx),%eax
    jge    jump_60256
  jump_60254:
    jmp    jump_60261
  jump_60256:
    mov    -0xc(%ebp),%eax
    mov    -0x8(%ebp),%edx
    cmp    0x4(%edx),%eax
    jge    jump_60263
  jump_60261:
    jmp    jump_6026e
  jump_60263:
    mov    -0x14(%ebp),%eax
    mov    -0x8(%ebp),%edx
    cmp    0xc(%edx),%eax
    jle    jump_60277
  jump_6026e:
    movl   $0x0,-0x4(%ebp)
    jmp    jump_6027e
  jump_60277:
    movl   $0x1,-0x4(%ebp)
  jump_6027e:
    mov    -0x4(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6028a:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    call   func_60151
    cmpl   $0x0,data_1220ac
    je     jump_602ba
    incl   data_1220ac
    cmpl   $0x0,data_1220ac
    jne    jump_602ba
    call   func_5fcac
  jump_602ba:
    call   func_6016c
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_602c6:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x0,%esp
    call   func_60151
    cmpl   $0x0,data_1220ac
    jne    jump_602e7
    call   func_5ff2e
  jump_602e7:
    decl   data_1220ac
    call   func_6016c
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_602f9:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x18,%esp
    mov    %eax,-0x18(%ebp)
    mov    %edx,-0x14(%ebp)
    mov    data_12208c,%eax
    cmp    -0x18(%ebp),%eax
    jne    jump_60320
    mov    data_122074,%eax
    cmp    -0x14(%ebp),%eax
    je     jump_60322
  jump_60320:
    jmp    jump_60327
  jump_60322:
    jmp    jump_603b6
  jump_60327:
    call   func_60151
    call   func_602c6
    mov    -0x18(%ebp),%eax
    mov    %eax,data_12208c
    mov    -0x14(%ebp),%eax
    mov    %eax,data_122074
    mov    -0x14(%ebp),%eax
    push   %eax
    mov    -0x18(%ebp),%eax
    push   %eax
    call   func_5c4a8
    add    $0x8,%esp
    mov    %eax,-0x8(%ebp)
    mov    -0x14(%ebp),%eax
    push   %eax
    mov    -0x18(%ebp),%eax
    push   %eax
    call   func_5c4dc
    add    $0x8,%esp
    mov    %eax,-0x4(%ebp)
    mov    -0x8(%ebp),%eax
    sar    $0x10,%eax
    mov    %eax,-0xc(%ebp)
    mov    -0xc(%ebp),%eax
    mov    %eax,data_122090
    mov    -0x8(%ebp),%eax
    and    $0xffff,%eax
    mov    %eax,-0x10(%ebp)
    mov    -0x10(%ebp),%eax
    mov    %eax,data_1220cc
    mov    -0x4(%ebp),%eax
    sar    $0x10,%eax
    cwtl
    mov    %eax,data_1220b0
    mov    -0x4(%ebp),%eax
    cwtl
    mov    %eax,data_1220b4
    mov    -0xc(%ebp),%eax
    imul   -0x10(%ebp),%eax
    mov    %eax,data_1220a0
    call   func_6028a
    call   func_6016c
  jump_603b6:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_603be:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x10,%esp
    mov    %eax,-0x10(%ebp)
    mov    %edx,-0xc(%ebp)
    mov    %ebx,-0x8(%ebp)
    mov    %ecx,-0x4(%ebp)
    call   func_60151
    cmpl   $0x0,-0x10(%ebp)
    je     jump_603eb
    mov    data_122100,%edx
    mov    -0x10(%ebp),%eax
    mov    %edx,(%eax)
  jump_603eb:
    cmpl   $0x0,-0xc(%ebp)
    je     jump_603fc
    mov    data_122104,%edx
    mov    -0xc(%ebp),%eax
    mov    %edx,(%eax)
  jump_603fc:
    cmpl   $0x0,-0x8(%ebp)
    je     jump_6040d
    mov    data_1220f8,%edx
    mov    -0x8(%ebp),%eax
    mov    %edx,(%eax)
  jump_6040d:
    cmpl   $0x0,-0x4(%ebp)
    je     jump_6041e
    mov    data_122120,%edx
    mov    -0x4(%ebp),%eax
    mov    %edx,(%eax)
  jump_6041e:
    cmpl   $0x0,0x10(%ebp)
    je     jump_6042f
    mov    data_1220ec,%edx
    mov    0x10(%ebp),%eax
    mov    %edx,(%eax)
  jump_6042f:
    call   func_6016c
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_6043c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x4c,%esp
    mov    %eax,-0x10(%ebp)
    mov    %edx,-0x14(%ebp)
    call   func_60151
    movl   $0x4,-0x4c(%ebp)
    mov    -0x10(%ebp),%eax
    shl    $0x3,%eax
    mov    %eax,-0x44(%ebp)
    mov    -0x14(%ebp),%eax
    shl    $0x3,%eax
    mov    %eax,-0x40(%ebp)
    lea    -0x30(%ebp),%ebx
    lea    -0x4c(%ebp),%edx
    mov    $0x33,%eax
    call   func_7414d
    movl   $0x3,-0x4c(%ebp)
    lea    -0x30(%ebp),%ebx
    lea    -0x4c(%ebp),%edx
    mov    $0x33,%eax
    call   func_7414d
    movl   $0x4f0,-0xc(%ebp)
    mov    -0x2c(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    %ax,(%edx)
    movl   $0x4f2,-0x4(%ebp)
    mov    -0x28(%ebp),%eax
    mov    -0x4(%ebp),%edx
    mov    %ax,(%edx)
    movl   $0x4f4,-0x8(%ebp)
    mov    -0x24(%ebp),%eax
    mov    -0x8(%ebp),%edx
    mov    %ax,(%edx)
    call   func_6016c
    call   func_6053c
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6053c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x20,%esp
    cmpl   $0x0,data_1220f0
    jg     jump_606e5
    incl   data_1220f0
    mov    data_1220f8,%eax
    mov    %eax,data_1220f4
    mov    data_122120,%eax
    mov    %eax,data_12211c
    mov    data_1220ec,%eax
    mov    %eax,data_1220e8
    movl   $0x4f0,-0x4(%ebp)
    mov    -0x4(%ebp),%eax
    testb  $0x1,(%eax)
    je     jump_60590
    movl   $0x1,-0x20(%ebp)
    jmp    jump_60597
  jump_60590:
    movl   $0x0,-0x20(%ebp)
  jump_60597:
    mov    -0x20(%ebp),%eax
    mov    %eax,data_1220f8
    movl   $0x4f0,-0x8(%ebp)
    mov    -0x8(%ebp),%eax
    testb  $0x2,(%eax)
    je     jump_605b7
    movl   $0x1,-0x1c(%ebp)
    jmp    jump_605be
  jump_605b7:
    movl   $0x0,-0x1c(%ebp)
  jump_605be:
    mov    -0x1c(%ebp),%eax
    mov    %eax,data_122120
    movl   $0x4f0,-0xc(%ebp)
    mov    -0xc(%ebp),%eax
    testb  $0x4,(%eax)
    je     jump_605de
    movl   $0x1,-0x18(%ebp)
    jmp    jump_605e5
  jump_605de:
    movl   $0x0,-0x18(%ebp)
  jump_605e5:
    mov    -0x18(%ebp),%eax
    mov    %eax,data_1220ec
    mov    data_1220f8,%eax
    cmp    data_1220f4,%eax
    jne    jump_60607
    mov    data_122120,%eax
    cmp    data_12211c,%eax
    je     jump_60609
  jump_60607:
    jmp    jump_60616
  jump_60609:
    mov    data_1220ec,%eax
    cmp    data_1220e8,%eax
    je     jump_6063a
  jump_60616:
    cmpl   $0x0,data_122094
    je     jump_6063a
    mov    data_1220ec,%eax
    push   %eax
    mov    data_122120,%eax
    push   %eax
    mov    data_1220f8,%eax
    push   %eax
    call   *data_122094
    add    $0xc,%esp
  jump_6063a:
    cmpl   $0x0,data_122110
    jle    jump_6064f
    addl   $0xffffffff,data_1220f0
    jmp    jump_606e5
  jump_6064f:
    mov    data_122100,%eax
    mov    %eax,data_122108
    mov    data_122104,%eax
    mov    %eax,data_12210c
    movl   $0x4f2,-0x10(%ebp)
    mov    -0x10(%ebp),%eax
    mov    -0x2(%eax),%eax
    sar    $0x10,%eax
    sar    $0x3,%eax
    mov    %eax,data_122100
    movl   $0x4f4,-0x14(%ebp)
    mov    -0x14(%ebp),%eax
    mov    -0x2(%eax),%eax
    sar    $0x10,%eax
    sar    $0x3,%eax
    mov    %eax,data_122104
    mov    data_122100,%eax
    cmp    data_122108,%eax
    jne    jump_606ad
    mov    data_122104,%eax
    cmp    data_12210c,%eax
    je     jump_606de
  jump_606ad:
    cmpl   $0x0,data_122098
    je     jump_606cb
    mov    data_122104,%eax
    push   %eax
    mov    data_122100,%eax
    push   %eax
    call   *data_122098
    add    $0x8,%esp
  jump_606cb:
    cmpl   $0x0,data_1220ac
    jl     jump_606de
    call   func_5ff2e
    call   func_5fcac
  jump_606de:
    addl   $0xffffffff,data_1220f0
  jump_606e5:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_60bf2:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xb0,%esp
    mov    %eax,-0x40(%ebp)
    mov    %edx,-0x38(%ebp)
    mov    %ebx,-0x34(%ebp)
    mov    %ecx,-0x3c(%ebp)
    cmpl   $0x0,data_1220ac
    jge    jump_60c34
    mov    0x10(%ebp),%eax
    push   %eax
    mov    -0x3c(%ebp),%eax
    push   %eax
    mov    -0x34(%ebp),%eax
    push   %eax
    mov    -0x38(%ebp),%eax
    push   %eax
    mov    -0x40(%ebp),%eax
    push   %eax
    call   *data_86aa4
    add    $0x14,%esp
    jmp    jump_611e3
  jump_60c34:
    call   func_60188
    mov    data_122064,%eax
    cmp    -0x3c(%ebp),%eax
    jg     jump_60c4d
    mov    data_12206c,%eax
    cmp    -0x38(%ebp),%eax
    jge    jump_60c4f
  jump_60c4d:
    jmp    jump_60c59
  jump_60c4f:
    mov    data_122070,%eax
    cmp    -0x34(%ebp),%eax
    jge    jump_60c5b
  jump_60c59:
    jmp    jump_60c65
  jump_60c5b:
    mov    data_122068,%eax
    cmp    0x10(%ebp),%eax
    jle    jump_60cbb
  jump_60c65:
    mov    0x10(%ebp),%ecx
    mov    -0x3c(%ebp),%ebx
    mov    -0x34(%ebp),%edx
    mov    -0x38(%ebp),%eax
    call   func_5ff84
    call   func_601a3
    mov    0x10(%ebp),%eax
    push   %eax
    mov    -0x3c(%ebp),%eax
    push   %eax
    mov    -0x34(%ebp),%eax
    push   %eax
    mov    -0x38(%ebp),%eax
    push   %eax
    mov    -0x40(%ebp),%eax
    push   %eax
    call   *data_86aa4
    add    $0x14,%esp
    mov    $0xffffffff,%ecx
    mov    $0xffffffff,%ebx
    mov    $0xffffffff,%edx
    mov    $0xffffffff,%eax
    call   func_5ff84
    call   func_6053c
    jmp    jump_611e3
  jump_60cbb:
    mov    -0x40(%ebp),%eax
    mov    (%eax),%edx
    mov    -0x40(%ebp),%eax
    mov    0xc(%eax),%eax
    cmp    0x4(%edx),%eax
    jge    jump_60cd6
    mov    -0x40(%ebp),%eax
    mov    0xc(%eax),%eax
    mov    %eax,-0x78(%ebp)
    jmp    jump_60ce1
  jump_60cd6:
    mov    -0x40(%ebp),%eax
    mov    (%eax),%eax
    mov    0x4(%eax),%eax
    mov    %eax,-0x78(%ebp)
  jump_60ce1:
    mov    -0x40(%ebp),%eax
    cmpl   $0x0,0x4(%eax)
    jle    jump_60cf5
    mov    -0x40(%ebp),%eax
    mov    0x4(%eax),%eax
    mov    %eax,-0x74(%ebp)
    jmp    jump_60cfc
  jump_60cf5:
    movl   $0x0,-0x74(%ebp)
  jump_60cfc:
    mov    -0x78(%ebp),%eax
    sub    -0x74(%ebp),%eax
    mov    -0x3c(%ebp),%edx
    sub    -0x38(%ebp),%edx
    cmp    %eax,%edx
    jne    jump_60d5d
    mov    -0x40(%ebp),%eax
    mov    (%eax),%edx
    mov    -0x40(%ebp),%eax
    mov    0x10(%eax),%eax
    cmp    0x8(%edx),%eax
    jge    jump_60d27
    mov    -0x40(%ebp),%eax
    mov    0x10(%eax),%eax
    mov    %eax,-0x70(%ebp)
    jmp    jump_60d32
  jump_60d27:
    mov    -0x40(%ebp),%eax
    mov    (%eax),%eax
    mov    0x8(%eax),%eax
    mov    %eax,-0x70(%ebp)
  jump_60d32:
    mov    -0x40(%ebp),%eax
    cmpl   $0x0,0x8(%eax)
    jle    jump_60d46
    mov    -0x40(%ebp),%eax
    mov    0x8(%eax),%eax
    mov    %eax,-0x6c(%ebp)
    jmp    jump_60d4d
  jump_60d46:
    movl   $0x0,-0x6c(%ebp)
  jump_60d4d:
    mov    -0x70(%ebp),%eax
    sub    -0x6c(%ebp),%eax
    mov    0x10(%ebp),%edx
    sub    -0x34(%ebp),%edx
    cmp    %eax,%edx
    je     jump_60d99
  jump_60d5d:
    call   *data_86a8c
    call   func_602c6
    mov    0x10(%ebp),%eax
    push   %eax
    mov    -0x3c(%ebp),%eax
    push   %eax
    mov    -0x34(%ebp),%eax
    push   %eax
    mov    -0x38(%ebp),%eax
    push   %eax
    mov    -0x40(%ebp),%eax
    push   %eax
    call   *data_86aa4
    add    $0x14,%esp
    call   func_6028a
    call   func_601a3
    call   func_6053c
    jmp    jump_611e3
  jump_60d99:
    mov    -0x40(%ebp),%eax
    mov    (%eax),%eax
    cmpl   $0x0,0xc(%eax)
    je     jump_60f37
    mov    -0x38(%ebp),%eax
    cmp    data_122064,%eax
    jle    jump_60dbe
    mov    -0x38(%ebp),%eax
    mov    %eax,-0x88(%ebp)
    jmp    jump_60dc9
  jump_60dbe:
    mov    data_122064,%eax
    mov    %eax,-0x88(%ebp)
  jump_60dc9:
    mov    -0x88(%ebp),%edx
    sub    -0x38(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x1c(%ebp)
    mov    -0x3c(%ebp),%eax
    cmp    data_12206c,%eax
    jge    jump_60df3
    mov    -0x3c(%ebp),%eax
    mov    %eax,-0x84(%ebp)
    jmp    jump_60dfe
  jump_60df3:
    mov    data_12206c,%eax
    mov    %eax,-0x84(%ebp)
  jump_60dfe:
    mov    -0x84(%ebp),%edx
    sub    -0x38(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x20(%ebp)
    mov    -0x34(%ebp),%eax
    cmp    data_122068,%eax
    jle    jump_60e25
    mov    -0x34(%ebp),%eax
    mov    %eax,-0x80(%ebp)
    jmp    jump_60e2d
  jump_60e25:
    mov    data_122068,%eax
    mov    %eax,-0x80(%ebp)
  jump_60e2d:
    mov    -0x80(%ebp),%edx
    sub    -0x34(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x8(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x24(%ebp)
    mov    0x10(%ebp),%eax
    cmp    data_122070,%eax
    jge    jump_60e51
    mov    0x10(%ebp),%eax
    mov    %eax,-0x7c(%ebp)
    jmp    jump_60e59
  jump_60e51:
    mov    data_122070,%eax
    mov    %eax,-0x7c(%ebp)
  jump_60e59:
    mov    -0x7c(%ebp),%edx
    sub    -0x34(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x8(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x28(%ebp)
    mov    -0x24(%ebp),%eax
    mov    %eax,-0x18(%ebp)
  jump_60e70:
    mov    -0x18(%ebp),%eax
    cmp    -0x28(%ebp),%eax
    jle    jump_60e85
    jmp    jump_60f37
  jump_60e7d:
    mov    -0x18(%ebp),%eax
    incl   -0x18(%ebp)
    jmp    jump_60e70
  jump_60e85:
    movl   $0x0,-0x14(%ebp)
    mov    -0x40(%ebp),%eax
    mov    (%eax),%eax
    mov    -0x18(%ebp),%ebx
    shl    $0x2,%ebx
    mov    0xc(%eax),%edx
    add    %ebx,%edx
    mov    -0x40(%ebp),%eax
    mov    (%eax),%eax
    mov    0xc(%eax),%eax
    mov    (%edx),%edx
    add    %eax,%edx
    mov    %edx,-0x30(%ebp)
  jump_60eab:
    mov    -0x14(%ebp),%eax
    cmp    -0x20(%ebp),%eax
    jg     jump_60f32
    mov    -0x30(%ebp),%eax
    mov    (%eax),%al
    and    $0x7f,%al
    and    $0xff,%eax
    add    -0x14(%ebp),%eax
    dec    %eax
    mov    %eax,-0x2c(%ebp)
    mov    -0x30(%ebp),%eax
    cmpb   $0x80,(%eax)
    jae    jump_60f20
    mov    -0x14(%ebp),%eax
    cmp    -0x20(%ebp),%eax
    jg     jump_60ee2
    mov    -0x2c(%ebp),%eax
    cmp    -0x1c(%ebp),%eax
    jge    jump_60ee4
  jump_60ee2:
    jmp    jump_60f20
  jump_60ee4:
    call   *data_86a8c
    call   func_602c6
    mov    0x10(%ebp),%eax
    push   %eax
    mov    -0x3c(%ebp),%eax
    push   %eax
    mov    -0x34(%ebp),%eax
    push   %eax
    mov    -0x38(%ebp),%eax
    push   %eax
    mov    -0x40(%ebp),%eax
    push   %eax
    call   *data_86aa4
    add    $0x14,%esp
    call   func_6028a
    call   func_601a3
    call   func_6053c
    jmp    jump_611e3
  jump_60f20:
    mov    -0x30(%ebp),%eax
    incl   -0x30(%ebp)
    mov    -0x2c(%ebp),%eax
    inc    %eax
    mov    %eax,-0x14(%ebp)
    jmp    jump_60eab
  jump_60f32:
    jmp    jump_60e7d
  jump_60f37:
    mov    -0x40(%ebp),%eax
    mov    (%eax),%eax
    mov    %eax,-0x54(%ebp)
    mov    -0x38(%ebp),%eax
    cmp    data_122064,%eax
    jle    jump_60f55
    mov    -0x38(%ebp),%eax
    mov    %eax,-0x8c(%ebp)
    jmp    jump_60f60
  jump_60f55:
    mov    data_122064,%eax
    mov    %eax,-0x8c(%ebp)
  jump_60f60:
    mov    -0x8c(%ebp),%edx
    sub    -0x38(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x50(%ebp)
    mov    -0x3c(%ebp),%eax
    cmp    data_12206c,%eax
    jge    jump_60f8a
    mov    -0x3c(%ebp),%eax
    mov    %eax,-0x90(%ebp)
    jmp    jump_60f95
  jump_60f8a:
    mov    data_12206c,%eax
    mov    %eax,-0x90(%ebp)
  jump_60f95:
    mov    -0x90(%ebp),%edx
    sub    -0x38(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x48(%ebp)
    mov    -0x34(%ebp),%eax
    cmp    data_122068,%eax
    jle    jump_60fbf
    mov    -0x34(%ebp),%eax
    mov    %eax,-0x94(%ebp)
    jmp    jump_60fca
  jump_60fbf:
    mov    data_122068,%eax
    mov    %eax,-0x94(%ebp)
  jump_60fca:
    mov    -0x94(%ebp),%edx
    sub    -0x34(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x8(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x4c(%ebp)
    mov    0x10(%ebp),%eax
    cmp    data_122070,%eax
    jge    jump_60ff4
    mov    0x10(%ebp),%eax
    mov    %eax,-0x98(%ebp)
    jmp    jump_60fff
  jump_60ff4:
    mov    data_122070,%eax
    mov    %eax,-0x98(%ebp)
  jump_60fff:
    mov    -0x98(%ebp),%edx
    sub    -0x34(%ebp),%edx
    mov    -0x40(%ebp),%eax
    mov    0x8(%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x44(%ebp)
    mov    data_12206c,%eax
    sub    data_122064,%eax
    mov    %eax,-0xc(%ebp)
    mov    data_122070,%eax
    sub    data_122068,%eax
    mov    %eax,-0x10(%ebp)
    movl   $data_1220b8,-0x68(%ebp)
    mov    data_122064,%eax
    cmp    -0x38(%ebp),%eax
    jge    jump_61051
    mov    -0x38(%ebp),%eax
    sub    data_122064,%eax
    mov    %eax,-0x9c(%ebp)
    jmp    jump_6105b
  jump_61051:
    movl   $0x0,-0x9c(%ebp)
  jump_6105b:
    mov    -0x9c(%ebp),%eax
    mov    %eax,-0x64(%ebp)
    mov    data_12206c,%eax
    cmp    -0x3c(%ebp),%eax
    jle    jump_61083
    mov    data_12206c,%eax
    sub    -0x3c(%ebp),%eax
    mov    -0xc(%ebp),%edx
    sub    %eax,%edx
    mov    %edx,-0xa0(%ebp)
    jmp    jump_6108c
  jump_61083:
    mov    -0xc(%ebp),%eax
    mov    %eax,-0xa0(%ebp)
  jump_6108c:
    mov    -0xa0(%ebp),%eax
    mov    %eax,-0x5c(%ebp)
    mov    data_122068,%eax
    cmp    -0x34(%ebp),%eax
    jge    jump_610b0
    mov    -0x34(%ebp),%eax
    sub    data_122068,%eax
    mov    %eax,-0xa4(%ebp)
    jmp    jump_610ba
  jump_610b0:
    movl   $0x0,-0xa4(%ebp)
  jump_610ba:
    mov    -0xa4(%ebp),%eax
    mov    %eax,-0x60(%ebp)
    mov    data_122070,%eax
    cmp    0x10(%ebp),%eax
    jle    jump_610e2
    mov    data_122070,%eax
    sub    0x10(%ebp),%eax
    mov    -0x10(%ebp),%edx
    sub    %eax,%edx
    mov    %edx,-0xa8(%ebp)
    jmp    jump_610eb
  jump_610e2:
    mov    -0x10(%ebp),%eax
    mov    %eax,-0xa8(%ebp)
  jump_610eb:
    mov    -0xa8(%ebp),%eax
    mov    %eax,-0x58(%ebp)
    push   $0xffffffff
    push   $0x0
    push   $0x0
    lea    -0x68(%ebp),%eax
    push   %eax
    push   $0x0
    push   $0x0
    lea    -0x54(%ebp),%eax
    push   %eax
    call   func_59e6f
    add    $0x1c,%esp
    mov    data_122100,%eax
    add    data_1220b0,%eax
    cmp    -0x38(%ebp),%eax
    jge    jump_6112e
    mov    data_122100,%eax
    sub    -0x38(%ebp),%eax
    mov    %eax,-0xac(%ebp)
    jmp    jump_6113f
  jump_6112e:
    mov    data_1220b0,%eax
    mov    %eax,-0xac(%ebp)
    negl   -0xac(%ebp)
  jump_6113f:
    mov    -0xac(%ebp),%eax
    mov    %eax,-0x4(%ebp)
    mov    data_122104,%eax
    add    data_1220b4,%eax
    cmp    -0x34(%ebp),%eax
    jge    jump_61168
    mov    data_122104,%eax
    sub    -0x34(%ebp),%eax
    mov    %eax,-0xb0(%ebp)
    jmp    jump_61179
  jump_61168:
    mov    data_1220b4,%eax
    mov    %eax,-0xb0(%ebp)
    negl   -0xb0(%ebp)
  jump_61179:
    mov    -0xb0(%ebp),%eax
    mov    %eax,-0x8(%ebp)
    mov    -0x8(%ebp),%eax
    push   %eax
    mov    -0x4(%ebp),%eax
    push   %eax
    push   data_122074
    push   data_12208c
    lea    -0x54(%ebp),%eax
    push   %eax
    call   func_57efc
    add    $0x14,%esp
    mov    0x10(%ebp),%eax
    push   %eax
    mov    -0x3c(%ebp),%eax
    push   %eax
    mov    -0x34(%ebp),%eax
    push   %eax
    mov    -0x38(%ebp),%eax
    push   %eax
    mov    -0x40(%ebp),%eax
    push   %eax
    call   *data_86aa4
    add    $0x14,%esp
    push   $0xffffffff
    push   $0x0
    push   $0x0
    lea    -0x54(%ebp),%eax
    push   %eax
    push   $0x0
    push   $0x0
    lea    -0x68(%ebp),%eax
    push   %eax
    call   func_59e6f
    add    $0x1c,%esp
    call   func_601a3
    call   func_6053c
  jump_611e3:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_611eb:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    mov    %eax,-0xc(%ebp)
    movl   $0x0,-0x4(%ebp)
  jump_61203:
    mov    -0x4(%ebp),%eax
    mov    -0xc(%ebp),%edx
    cmp    0x8(%edx),%eax
    jb     jump_61218
    jmp    jump_6125b
  jump_61210:
    mov    -0x4(%ebp),%eax
    incl   -0x4(%ebp)
    jmp    jump_61203
  jump_61218:
    mov    -0x4(%ebp),%edx
    shl    $0x2,%edx
    mov    -0xc(%ebp),%eax
    mov    0x4(%eax),%eax
    add    %edx,%eax
    cmpl   $0x1,(%eax)
    jne    jump_61259
    imul   $0x14,-0x4(%ebp),%edx
    mov    -0xc(%ebp),%eax
    mov    (%eax),%eax
    add    %edx,%eax
    mov    %eax,-0x8(%ebp)
    mov    -0x8(%ebp),%eax
    push   0x10(%eax)
    mov    -0x8(%ebp),%eax
    mov    0xc(%eax),%ecx
    mov    -0x8(%ebp),%eax
    mov    0x8(%eax),%ebx
    mov    -0x8(%ebp),%eax
    mov    0x4(%eax),%edx
    mov    -0x8(%ebp),%eax
    call   func_60bf2
  jump_61259:
    jmp    jump_61210
  jump_6125b:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_61264:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x44,%esp
    mov    %eax,-0xc(%ebp)
    mov    %edx,-0x8(%ebp)
    movl   $0x0,data_1220f0
    movl   $0x0,data_122110
    movl   $0xffffffff,data_1220ac
    movl   $0x0,data_12208c
    movl   $0x0,data_1220e4
    mov    $0xffffffff,%ecx
    mov    $0xffffffff,%ebx
    mov    $0xffffffff,%edx
    mov    $0xffffffff,%eax
    call   func_5ff84
    movl   $0x0,data_122098
    movl   $0x0,data_122094
    movl   $0x0,data_12209c
    movl   $0xffffffff,data_1220ec
    mov    data_1220ec,%eax
    mov    %eax,data_122120
    mov    data_122120,%eax
    mov    %eax,data_1220f8
    mov    data_1220f8,%eax
    mov    %eax,data_122104
    mov    data_122104,%eax
    mov    %eax,data_122100
    mov    -0xc(%ebp),%eax
    dec    %eax
    mov    %eax,data_1220a4
    mov    -0x8(%ebp),%eax
    dec    %eax
    mov    %eax,data_1220a8
    movl   $0x0,-0x44(%ebp)
    lea    -0x28(%ebp),%ebx
    lea    -0x44(%ebp),%edx
    mov    $0x33,%eax
    call   func_7414d
    cmpw   $0xffff,-0x28(%ebp)
    je     jump_6134e
    movl   $0x0,-0x4(%ebp)
    jmp    jump_614b4
  jump_6134e:
    movl   $0x7,-0x44(%ebp)
    movl   $0x0,-0x3c(%ebp)
    mov    data_1220a4,%eax
    shl    $0x3,%eax
    mov    %eax,-0x38(%ebp)
    lea    -0x28(%ebp),%ebx
    lea    -0x44(%ebp),%edx
    mov    $0x33,%eax
    call   func_7414d
    movl   $0x8,-0x44(%ebp)
    movl   $0x0,-0x3c(%ebp)
    mov    data_1220a8,%eax
    shl    $0x3,%eax
    mov    %eax,-0x38(%ebp)
    lea    -0x28(%ebp),%ebx
    lea    -0x44(%ebp),%edx
    mov    $0x33,%eax
    call   func_7414d
    movl   $0xf,-0x44(%ebp)
    movl   $0x1,-0x3c(%ebp)
    movl   $0x1,-0x38(%ebp)
    lea    -0x28(%ebp),%ebx
    lea    -0x44(%ebp),%edx
    mov    $0x33,%eax
    call   func_7414d
    call   func_5ffc1
    test   %eax,%eax
    jne    jump_613da
    movl   $0x0,-0x4(%ebp)
    jmp    jump_614b4
  jump_613da:
    mov    $0x4000,%eax
    call   func_73af4
    mov    %eax,data_1220d0
    mov    $0x4000,%eax
    call   func_73af4
    mov    %eax,data_1220b8
    movl   $0x0,data_1220e0
    mov    data_1220e0,%eax
    mov    %eax,data_1220dc
    movl   $0x0,data_1220c8
    mov    data_1220c8,%eax
    mov    %eax,data_1220c4
    movl   $0x0,data_12207c
    movl   $0x0,data_122080
    movl   $data_1220d0,data_122078
    mov    -0x8(%ebp),%eax
    mov    -0x8(%ebp),%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %eax,%ebx
    mov    -0xc(%ebp),%eax
    mov    -0xc(%ebp),%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    mov    %ebx,%edx
    call   func_6043c
    mov    $func_6053c,%eax
    push   %eax
    call   func_62ae8
    add    $0x4,%esp
    mov    %eax,data_1220fc
    cmpl   $0x190,-0x8(%ebp)
    jl     jump_6148f
    push   $0x3c
    push   data_1220fc
    call   func_62d3c
    add    $0x8,%esp
    jmp    jump_6149f
  jump_6148f:
    push   $0x46
    push   data_1220fc
    call   func_62d3c
    add    $0x8,%esp
  jump_6149f:
    push   data_1220fc
    call   func_62f06
    add    $0x4,%esp
    movl   $0x1,-0x4(%ebp)
  jump_614b4:
    mov    -0x4(%ebp),%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_614bf:
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x38,%esp
    call   func_602c6
    push   data_1220fc
    call   func_62fd5
    add    $0x4,%esp
    push   data_1220fc
    call   func_630a4
    add    $0x4,%esp
    call   func_600c0
    mov    data_1220b8,%eax
    call   func_73bef
    mov    data_1220d0,%eax
    call   func_73bef
    movl   $0x101,-0x1c(%ebp)
    mov    data_122118,%eax
    mov    %eax,-0x10(%ebp)
    lea    -0x38(%ebp),%ebx
    lea    -0x1c(%ebp),%edx
    mov    $0x31,%eax
    call   func_7414d
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6152f:
/*----------------------------------------------------------------*/
    and    %ah,(%eax)
    add    %al,(%eax)
    and    %ah,(%eax)
    add    %al,(%eax)


/*----------------------------------------------------------------*/
func_61537:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%ecx
    mov    0x14(%esp),%eax
    mov    0x1c(%esp),%ebp
    mov    0x20(%esp),%edi
    lea    (%eax,%edi,1),%esi
    testb  $0x1,0x18(%esp)
    je     jump_61562
    lea    (%ecx,%eax,1),%edx
    mov    %edi,%ebx
    mov    %ebp,%eax
    call   func_74181
    jmp    jump_61578
  jump_61562:
    xor    %ebx,%ebx
    mov    %eax,%edx
    mov    %ecx,%eax
    call   func_72df0
    mov    %edi,%ebx
    mov    %ebp,%edx
    mov    %ecx,%eax
    call   func_72e53
  jump_61578:
    mov    %esi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6159e:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%edx
    mov    %edx,%eax
    call   *data_88650
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_615bb
    push   %edx
    push   %eax
    call   func_6171f
    add    $0x8,%esp
  jump_615bb:
    mov    %esi,%eax
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_615bf:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%esi
    test   %esi,%esi
    je     jump_615de
    mov    0xc(%esp),%edx
    push   %edx
    push   %esi
    call   func_61736
    add    $0x8,%esp
    mov    %esi,%eax
    call   *data_88654
  jump_615de:
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_615e0:
/*----------------------------------------------------------------*/
    push   %esi
    sub    $0x38,%esp
    mov    0x48(%esp),%ecx
    movl   $0x100,(%esp)
    mov    0x40(%esp),%eax
    mov    %eax,0x4(%esp)
    lea    0x1c(%esp),%ebx
    mov    %esp,%edx
    mov    $0x31,%eax
    call   func_7414d
    cmpl   $0x0,0x34(%esp)
    je     jump_61612
    xor    %esi,%esi
    jmp    jump_61641
  jump_61612:
    mov    0x1c(%esp),%eax
    shl    $0x10,%eax
    mov    %eax,(%ecx)
    mov    0x1c(%esp),%eax
    and    $0xffff,%eax
    shl    $0x4,%eax
    mov    0x44(%esp),%edx
    mov    %eax,(%edx)
    mov    0x28(%esp),%eax
    and    $0xffff,%eax
    mov    0x4c(%esp),%edx
    mov    %eax,(%edx)
    mov    $0x1,%esi
  jump_61641:
    test   %esi,%esi
    je     jump_6165e
    mov    (%ecx),%eax
    shr    $0xc,%eax
    mov    0x40(%esp),%edx
    shl    $0x4,%edx
    add    %eax,%edx
    dec    %edx
    push   %edx
    push   %eax
    call   func_61691
    add    $0x8,%esp
  jump_6165e:
    mov    %esi,%eax
    add    $0x38,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_61665:
/*----------------------------------------------------------------*/
    sub    $0x38,%esp
    movl   $0x101,(%esp)
    mov    0x44(%esp),%edx
    and    $0xffff,%edx
    mov    %edx,0xc(%esp)
    lea    0x1c(%esp),%ebx
    mov    %esp,%edx
    mov    $0x31,%eax
    call   func_7414d
    add    $0x38,%esp
    ret


/*----------------------------------------------------------------*/
func_61691:
/*----------------------------------------------------------------*/
    sub    $0x38,%esp
    mov    0x3c(%esp),%edx
    mov    0x40(%esp),%ebx
    cmp    %ebx,%edx
    jae    jump_616a4
    mov    %edx,%eax
    jmp    jump_616a6
  jump_616a4:
    mov    %ebx,%eax
  jump_616a6:
    jae    jump_616aa
    mov    %ebx,%edx
  jump_616aa:
    sub    %eax,%edx
    inc    %edx
    movl   $0x600,(%esp)
  jump_616b4:
    mov    %eax,%ebx
    shr    $0x10,%ebx
    mov    %ebx,0x4(%esp)
    and    $0xffff,%eax
    mov    %eax,0x8(%esp)
    mov    %edx,%eax
    shr    $0x10,%eax
    mov    %eax,0x10(%esp)
    and    $0xffff,%edx
    mov    %edx,0x14(%esp)
    lea    0x1c(%esp),%ebx
    mov    %esp,%edx
    mov    $0x31,%eax
    call   func_7414d
    cmpl   $0x0,0x34(%esp)
    sete   %al
    and    $0xff,%eax
    add    $0x38,%esp
    ret


/*----------------------------------------------------------------*/
func_616fa:
/*----------------------------------------------------------------*/
    sub    $0x38,%esp
    mov    0x3c(%esp),%edx
    mov    0x40(%esp),%ebx
    cmp    %ebx,%edx
    jae    jump_6170d
    mov    %edx,%eax
    jmp    jump_6170f
  jump_6170d:
    mov    %ebx,%eax
  jump_6170f:
    jae    jump_61713
    mov    %ebx,%edx
  jump_61713:
    sub    %eax,%edx
    inc    %edx
    movl   $0x601,(%esp)
    jmp    jump_616b4


/*----------------------------------------------------------------*/
func_6171f:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    add    0x8(%esp),%eax
    push   %eax
    mov    0x8(%esp),%ebx
    push   %ebx
    call   func_61691
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_61736:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    add    0x8(%esp),%eax
    push   %eax
    mov    0x8(%esp),%ebx
    push   %ebx
    call   func_616fa
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_6174d:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xcc,%esp
    mov    func_6152f,%eax
    mov    %eax,0xc8(%esp)
    xor    %edi,%edi
    testb  $0x1,0xe0(%esp)
    je     jump_61777
    mov    0xdc(%esp),%ebp
    jmp    jump_6179a
  jump_61777:
    push   $0x200
    mov    0xe0(%esp),%edx
    push   %edx
    call   func_72ba2
    add    $0x8,%esp
    mov    %eax,%ebp
    cmp    $0xffffffff,%eax
    jne    jump_6179a
  jump_61793:
    xor    %eax,%eax
    jmp    jump_61872
  jump_6179a:
    push   $0x4
    lea    0xc8(%esp),%eax
    push   %eax
    mov    0xe8(%esp),%ebx
    push   %ebx
    push   $0x3c
    push   %ebp
    call   func_61537
    add    $0x14,%esp
    push   $0x2
    lea    0xcc(%esp),%eax
    push   %eax
    mov    0xe8(%esp),%ecx
    push   %ecx
    mov    0xd0(%esp),%esi
    push   %esi
    push   %ebp
    call   func_61537
    add    $0x14,%esp
    mov    $data_83b14,%edx
    lea    0xc8(%esp),%eax
    call   func_72130
    test   %eax,%eax
    je     jump_617f8
    mov    %ebp,%eax
    call   func_72e31
    jmp    jump_61793
  jump_617f8:
    push   $0xac
    lea    0x4(%esp),%eax
    push   %eax
    mov    0xe8(%esp),%eax
    push   %eax
    mov    0xd0(%esp),%edx
    push   %edx
    push   %ebp
    call   func_61537
    add    $0x14,%esp
    mov    0xc4(%esp),%eax
    add    0x40(%esp),%eax
    xor    %esi,%esi
    jmp    jump_6184e
  jump_6182a:
    push   $0x18
    lea    0xb0(%esp),%edx
    push   %edx
    mov    0xe8(%esp),%edx
    push   %edx
    push   %eax
    push   %ebp
    call   func_61537
    add    $0x14,%esp
    add    0xac(%esp),%edi
    inc    %esi
  jump_6184e:
    cmp    0x44(%esp),%esi
    jb     jump_6182a
    testb  $0x1,0xe0(%esp)
    jne    jump_61865
    mov    %ebp,%eax
    call   func_72e31
  jump_61865:
    mov    0x44(%esp),%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    add    %edi,%eax
  jump_61872:
    add    $0xcc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6187c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x2c0,%esp
    mov    0x2d0(%esp),%edx
    mov    0x61533,%eax /* Warning: address points to a valid object/reloc, but no label found */
    mov    %eax,0x290(%esp)
    xor    %ebx,%ebx
    mov    %ebx,0x2a4(%esp)
    testb  $0x1,0x2d4(%esp)
    je     jump_618af
    mov    %edx,%esi
    jmp    jump_618c8
  jump_618af:
    push   $0x200
    push   %edx
    call   func_72ba2
    add    $0x8,%esp
    mov    %eax,%esi
    cmp    $0xffffffff,%eax
    je     jump_61978
  jump_618c8:
    mov    0x2d4(%esp),%ecx
    push   %ecx
    push   %edx
    call   func_6174d
    add    $0x8,%esp
    mov    %eax,%ebx
    mov    0x2d4(%esp),%dl
    test   $0x4,%dl
    je     jump_618fd
    call   *data_88650
    mov    %eax,0x2d8(%esp)
    test   %eax,%eax
    jne    jump_618fd
    test   $0x1,%dl
    jmp    jump_6196f
  jump_618fd:
    xor    %edx,%edx
    mov    0x2d8(%esp),%eax
    call   func_72280
    mov    0x2d8(%esp),%eax
    mov    %eax,0x298(%esp)
    push   $0x4
    lea    0x288(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%edi
    push   %edi
    push   $0x3c
    push   %esi
    call   func_61537
    add    $0x14,%esp
    push   $0x2
    lea    0x294(%esp),%eax
    push   %eax
    push   %edi
    mov    0x290(%esp),%eax
    push   %eax
    push   %esi
    call   func_61537
    add    $0x14,%esp
    mov    $data_83b14,%edx
    lea    0x290(%esp),%eax
    call   func_72130
    test   %eax,%eax
    je     jump_6197f
  jump_61967:
    testb  $0x1,0x2d4(%esp)
  jump_6196f:
    jne    jump_61978
    mov    %esi,%eax
    call   func_72e31
  jump_61978:
    xor    %eax,%eax
    jmp    jump_61cfa
  jump_6197f:
    push   $0xac
    lea    0x194(%esp),%eax
    push   %eax
    push   %edi
    mov    0x290(%esp),%ebx
    push   %ebx
    push   %esi
    call   func_61537
    add    $0x14,%esp
    mov    0x284(%esp),%ecx
    add    0x1d0(%esp),%ecx
    xor    %edi,%edi
    jmp    jump_61b0e
  jump_619b3:
    push   $0x18
    lea    0x268(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%ebx
    push   %ebx
    push   %ecx
    push   %esi
    call   func_61537
    add    $0x14,%esp
    mov    %eax,0x29c(%esp)
    mov    0x284(%esp),%ecx
    add    0x1d8(%esp),%ecx
    xor    %ebp,%ebp
    jmp    jump_61af9
  jump_619eb:
    push   $0x8
    lea    0x280(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%edx
    push   %edx
    push   %ecx
    push   %esi
    call   func_61537
    add    $0x14,%esp
    mov    %eax,%ecx
    test   %ebp,%ebp
    jne    jump_61a52
    mov    0x26c(%esp),%bh
    test   $0x2,%bh
    je     jump_61a44
    test   $0x1,%bh
    je     jump_61a44
    testb  $0xf,0x298(%esp)
    je     jump_61a44
    test   %edi,%edi
    je     jump_61a44
    mov    0x2d8(%esp),%eax
    and    $0xf,%eax
    mov    $0x10,%edx
    sub    %eax,%edx
    add    %edx,0x298(%esp)
  jump_61a44:
    mov    0x298(%esp),%edx
    mov    %edx,0x240(%esp,%edi,4)
  jump_61a52:
    mov    0x2a4(%esp),%eax
    mov    0x298(%esp),%edx
    mov    %edx,(%esp,%eax,4)
    mov    %ecx,0x294(%esp)
    lea    0x1(%eax),%ecx
    mov    %ecx,0x2a4(%esp)
    mov    0x240(%esp,%edi,4),%ebx
    mov    %edx,%eax
    sub    %ebx,%eax
    mov    0x264(%esp),%edx
    sub    %eax,%edx
    mov    %edx,%eax
    xor    %ecx,%ecx
    mov    0x280(%esp),%cx
    cmp    %ecx,%edx
    jae    jump_61aa1
    mov    %edx,0x2a8(%esp)
    jmp    jump_61aa8
  jump_61aa1:
    mov    %ecx,0x2a8(%esp)
  jump_61aa8:
    mov    0x1bc(%esp),%cl
    mov    0x27c(%esp),%eax
    shl    %cl,%eax
    mov    %eax,%ecx
    add    0x210(%esp),%ecx
    mov    0x2a8(%esp),%edx
    push   %edx
    mov    0x29c(%esp),%ebx
    push   %ebx
    mov    0x2dc(%esp),%eax
    push   %eax
    push   %ecx
    push   %esi
    call   func_61537
    add    $0x14,%esp
    mov    0x2a8(%esp),%eax
    add    %eax,0x298(%esp)
    mov    0x294(%esp),%ecx
    inc    %ebp
  jump_61af9:
    cmp    0x274(%esp),%ebp
    jb     jump_619eb
    mov    0x29c(%esp),%ecx
    inc    %edi
  jump_61b0e:
    cmp    0x1d4(%esp),%edi
    jb     jump_619b3
    mov    0x284(%esp),%ecx
    add    0x1f8(%esp),%ecx
    push   $0x4
    lea    0x290(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%edx
    push   %edx
    push   %ecx
    push   %esi
    call   func_61537
    add    $0x14,%esp
    mov    %eax,%ecx
    xor    %edi,%edi
    jmp    jump_61cd5
  jump_61b4e:
    push   $0x4
    lea    0x28c(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%ebp
    push   %ebp
    push   %ecx
    push   %esi
    call   func_61537
    mov    %eax,%edx
    add    $0x14,%esp
    mov    %eax,%ecx
    mov    0x28c(%esp),%eax
    cmp    0x288(%esp),%eax
    je     jump_61cc6
    mov    %edx,0x2a0(%esp)
    mov    0x284(%esp),%ebp
    lea    (%eax,%ebp,1),%ecx
    add    0x1fc(%esp),%ecx
  jump_61b9a:
    push   $0x1
    lea    0x2b8(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%edx
    push   %edx
    push   %ecx
    push   %esi
    call   func_61537
    add    $0x14,%esp
    push   $0x1
    lea    0x2c0(%esp),%edx
    push   %edx
    mov    0x2dc(%esp),%ebx
    push   %ebx
    push   %eax
    push   %esi
    call   func_61537
    add    $0x14,%esp
    mov    %eax,%ecx
    mov    0x2b4(%esp),%al
    and    $0x7,%al
    and    $0xff,%eax
    je     jump_61967
    mov    0x2bc(%esp),%al
    and    $0x4,%al
    and    $0xff,%eax
    je     jump_61c0c
    mov    0x2bc(%esp),%al
    and    $0x20,%al
    and    $0xff,%eax
    je     jump_61967
  jump_61c0c:
    mov    0x2b4(%esp),%al
    and    $0x20,%al
    and    $0xff,%eax
    jne    jump_61967
    push   $0x2
    lea    0x2b0(%esp),%eax
    push   %eax
    mov    0x2dc(%esp),%ebp
    push   %ebp
    push   %ecx
    push   %esi
    call   func_61537
    add    $0x14,%esp
    push   $0x1
    lea    0x2bc(%esp),%ecx
    push   %ecx
    push   %ebp
    push   %eax
    push   %esi
    call   func_61537
    add    $0x14,%esp
    push   $0x2
    lea    0x2b4(%esp),%edx
    push   %edx
    push   %ebp
    push   %eax
    push   %esi
    call   func_61537
    add    $0x14,%esp
    mov    %eax,%ecx
    xor    %eax,%eax
    mov    0x2ac(%esp),%ax
    cmp    0x1b8(%esp),%eax
    ja     jump_61ca2
    xor    %edx,%edx
    mov    %ax,%dx
    mov    (%esp,%edi,4),%eax
    add    %edx,%eax
    movzbl 0x2b8(%esp),%ebp
    xor    %edx,%edx
    mov    0x2b0(%esp),%dx
    mov    0x23c(%esp,%ebp,4),%ebp
    add    %edx,%ebp
    mov    %ebp,(%eax)
  jump_61ca2:
    mov    0x288(%esp),%eax
    add    0x284(%esp),%eax
    add    0x1fc(%esp),%eax
    cmp    %eax,%ecx
    jb     jump_61b9a
    mov    0x2a0(%esp),%ecx
  jump_61cc6:
    mov    0x288(%esp),%eax
    mov    %eax,0x28c(%esp)
    inc    %edi
  jump_61cd5:
    cmp    0x1a4(%esp),%edi
    jb     jump_61b4e
    testb  $0x1,0x2d4(%esp)
    jne    jump_61cf3
    mov    %esi,%eax
    call   func_72e31
  jump_61cf3:
    mov    0x2d8(%esp),%eax
  jump_61cfa:
    add    $0x2c0,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_61d0a:
/*----------------------------------------------------------------*/
    xor    %edx,%edx
    mov    %edx,data_8864c
    push   $0x200
    mov    0x8(%esp),%ebx
    push   %ebx
    call   func_72ba2
    add    $0x8,%esp
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    jne    jump_61d36
    movl   $0x3,data_8864c
    ret
  jump_61d36:
    call   func_72b65
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    jne    jump_61d4c
    movl   $0x5,data_8864c
  jump_61d4c:
    mov    %edx,%eax
    call   func_72e31
    mov    %ebx,%eax
    ret


/*----------------------------------------------------------------*/
func_61d56:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    xor    %edx,%edx
    mov    %edx,data_8864c
    mov    0xc(%esp),%ebx
    push   %ebx
    call   func_61d0a
    add    $0x4,%esp
    mov    %eax,%edi
    cmp    $0xffffffff,%eax
    jne    jump_61d83
  jump_61d74:
    movl   $0x3,data_8864c
  jump_61d7e:
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_61d83:
    mov    0x10(%esp),%ecx
    test   %ecx,%ecx
    jne    jump_61d93
    call   *data_88650
    mov    %eax,%ecx
  jump_61d93:
    test   %ecx,%ecx
    jne    jump_61da3
    movl   $0x2,data_8864c
    jmp    jump_61d7e
  jump_61da3:
    push   $0x200
    mov    0x10(%esp),%esi
    push   %esi
    call   func_72ba2
    mov    %eax,%esi
    add    $0x8,%esp
    cmp    $0xffffffff,%eax
    jne    jump_61dc6
    mov    %ecx,%eax
    call   *data_88654
    jmp    jump_61d74
  jump_61dc6:
    mov    %edi,%ebx
    mov    %ecx,%edx
    call   func_72e53
    cmp    %edi,%eax
    je     jump_61de7
    mov    %ecx,%eax
    call   *data_88654
    movl   $0x5,data_8864c
    jmp    jump_61d7e
  jump_61de7:
    mov    %esi,%eax
    call   func_72e31
    mov    %ecx,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_61ec5:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_88658
    jne    jump_61f69
    push   $func_66d44
    push   $func_61ec5
    call   func_61691
    add    $0x8,%esp
    push   $0x4
    push   $data_1221a4
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1221a8
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1221a0
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_122188
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_122198
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_122194
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_12219c
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_12218c
    call   func_6171f
    add    $0x8,%esp
    movl   $0x1,data_88658
  jump_61f69:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_61f6d:
/*----------------------------------------------------------------*/
    mov    data_122188,%edx
    cmp    $0x63,%edx
    jne    jump_61f93
    mov    data_122198,%ebx
    cmp    $0x3b,%ebx
    jne    jump_61f93
    cmp    data_122194,%ebx
    jne    jump_61f93
    cmp    data_12219c,%edx
    je     jump_61fd8
  jump_61f93:
    incl   data_12219c
    cmpl   $0x64,data_12219c
    jne    jump_61fd8
    xor    %eax,%eax
    mov    %eax,data_12219c
    incl   data_122194
    mov    data_122194,%ebx
    cmp    $0x3c,%ebx
    jne    jump_61fd8
    mov    %eax,data_122194
    incl   data_122198
    cmp    data_122198,%ebx
    jne    jump_61fd8
    mov    %eax,data_122198
    incl   data_122188
  jump_61fd8:
    ret


/*----------------------------------------------------------------*/
func_61fd9:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    call   func_6f5b4
    mov    data_122188,%edx
    mov    %edx,(%esp)
    mov    data_122198,%ebp
    mov    data_122194,%edi
    mov    data_12219c,%esi
    call   func_6f5c1
    cmpl   $0x1,data_122190
    jne    jump_6202e
    push   %esi
    push   %edi
    push   %ebp
    mov    0xc(%esp),%ebx
    push   %ebx
    push   $data_83b18
    mov    data_1221a0,%ecx
    push   %ecx
    call   func_73aaa
    add    $0x18,%esp
    jmp    jump_6204c
  jump_6202e:
    xor    %edx,%edx
    jmp    jump_62047
  jump_62032:
    push   $data_83b33
    mov    data_1221a0,%esi
    push   %esi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62047:
    cmp    $0xe,%edx
    jb     jump_62032
  jump_6204c:
    mov    $0x1,%edx
    jmp    jump_62068
  jump_62053:
    push   $data_83b35
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62068:
    cmp    data_122190,%edx
    jb     jump_62053
    mov    $0x1,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6207f:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    call   func_61ec5
    xor    %edx,%edx
    mov    %edx,data_1221a4
    mov    %edx,data_1221a8
    mov    $data_83b37,%eax
    call   func_741a6
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_620b2
  jump_620a8:
    call   func_6d402
    jmp    jump_621f4
  jump_620b2:
    mov    $data_83b41,%eax
    call   func_741a6
    test   %eax,%eax
    je     jump_620ca
    movl   $0x1,data_1221a8
  jump_620ca:
    mov    $data_83b4f,%edx
    mov    %ebx,%eax
    call   func_7331e
    mov    %eax,data_1221a0
    test   %eax,%eax
    je     jump_620a8
    mov    0x10(%eax),%eax
    call   func_74200
    test   %eax,%eax
    je     jump_620f7
    mov    data_1221a0,%eax
    xor    %edx,%edx
    call   func_7421e
  jump_620f7:
    mov    %esp,%eax
    call   func_7366c
    mov    %esp,%eax
    call   func_7428c
    call   func_743d3
    mov    %eax,%edx
    mov    $data_1221ac,%eax
    call   func_743e0
    xor    %ah,%ah
    mov    %ah,data_1221c4
    push   $data_83b53
    mov    data_1221a0,%esi
    push   %esi
    call   func_73aaa
    add    $0x8,%esp
    push   $data_83ba4
    push   $data_83ba9
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0xc,%esp
    push   $data_1221ac
    push   $data_83bf0
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
    push   $data_83c00
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    call   func_6d402
    xor    %edx,%edx
    mov    %edx,data_122188
    mov    %edx,data_122198
    mov    %edx,data_122194
    mov    %edx,data_12219c
    push   $func_61f6d
    call   func_6fd76
    add    $0x4,%esp
    mov    %eax,data_12218c
    push   $0x64
    push   %eax
    call   func_6ff08
    add    $0x8,%esp
    mov    data_12218c,%edi
    push   %edi
    call   func_6fe30
    add    $0x4,%esp
    mov    $0x1,%ebp
    mov    %ebp,data_1221a4
    mov    %ebp,data_122190
    call   func_61fd9
    xor    %edx,%edx
    mov    %edx,data_122190
    push   $data_83c52
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
  jump_621f4:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_621fb:
/*----------------------------------------------------------------*/
    push   %edi
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_62239
    cmp    $0x1,%edx
    je     jump_62220
    cmpl   $0x0,data_1221a8
    je     jump_62239
  jump_62220:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62239
    call   func_61fd9
    test   %eax,%eax
    je     jump_62239
    mov    $0x1,%eax
    jmp    jump_6223b
  jump_62239:
    xor    %eax,%eax
  jump_6223b:
    test   %eax,%eax
    je     jump_62253
    push   $data_83c61
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
  jump_62253:
    call   func_6d508
    cmpl   $0x0,data_1221a4
    je     jump_62286
    cmpl   $0x1,data_122190
    je     jump_62273
    cmpl   $0x0,data_1221a8
    je     jump_62286
  jump_62273:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62286
    mov    data_1221a0,%eax
    call   func_7280e
  jump_62286:
    decl   data_122190
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_6228e:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_622ce
    cmp    $0x1,%edx
    je     jump_622b5
    cmpl   $0x0,data_1221a8
    je     jump_622ce
  jump_622b5:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_622ce
    call   func_61fd9
    test   %eax,%eax
    je     jump_622ce
    mov    $0x1,%eax
    jmp    jump_622d0
  jump_622ce:
    xor    %eax,%eax
  jump_622d0:
    test   %eax,%eax
    je     jump_622f1
    mov    0x14(%esp),%edi
    push   %edi
    mov    0x14(%esp),%ebp
    push   %ebp
    push   $data_83c71
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_622f1:
    mov    0x14(%esp),%edx
    push   %edx
    mov    0x14(%esp),%ebx
    push   %ebx
    call   func_6d0a5
    mov    %eax,%esi
    add    $0x8,%esp
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_62328
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_62328:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_6234d
  jump_62339:
    push   $data_83b33
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_6234d:
    cmp    $0xe,%edx
    jb     jump_62339
    mov    $0x1,%edx
    jmp    jump_6236e
  jump_62359:
    push   $data_83b35
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_6236e:
    cmp    data_122190,%edx
    jb     jump_62359
    push   %esi
    push   $data_83c8c
  jump_6237c:
    mov    data_1221a0,%ecx
    push   %ecx
    jmp    jump_62709


/*----------------------------------------------------------------*/
func_62388:
/*----------------------------------------------------------------*/
    jmp    func_6f5b4


/*----------------------------------------------------------------*/
func_6238d:
/*----------------------------------------------------------------*/
    jmp    func_6f5c1


/*----------------------------------------------------------------*/
func_62392:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_623d2
    cmp    $0x1,%edx
    je     jump_623b9
    cmpl   $0x0,data_1221a8
    je     jump_623d2
  jump_623b9:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_623d2
    call   func_61fd9
    test   %eax,%eax
    je     jump_623d2
    mov    $0x1,%eax
    jmp    jump_623d4
  jump_623d2:
    xor    %eax,%eax
  jump_623d4:
    test   %eax,%eax
    je     jump_623f1
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_83c99
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_623f1:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_6f8e5
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_62423
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_62423:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_62449
  jump_62434:
    push   $data_83b33
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62449:
    cmp    $0xe,%edx
    jb     jump_62434
    mov    $0x1,%edx
    jmp    jump_6246a
  jump_62455:
    push   $data_83b35
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_6246a:
    cmp    data_122190,%edx
    jb     jump_62455
  jump_62472:
    push   %esi
    push   $data_83cb2
    jmp    jump_64009


/*----------------------------------------------------------------*/
func_6247d:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_624bc
    cmp    $0x1,%edx
    je     jump_624a3
    cmpl   $0x0,data_1221a8
    je     jump_624bc
  jump_624a3:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_624bc
    call   func_61fd9
    test   %eax,%eax
    je     jump_624bc
    mov    $0x1,%eax
    jmp    jump_624be
  jump_624bc:
    xor    %eax,%eax
  jump_624be:
    test   %eax,%eax
    je     jump_624df
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_83cc1
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_624df:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_6f911
  jump_624ee:
    add    $0x8,%esp
    jmp    jump_625eb
  jump_62573:
    add    $0xc,%esp
  jump_62576:
    decl   data_122190
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_62580:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_625bf
    cmp    $0x1,%edx
    je     jump_625a6
    cmpl   $0x0,data_1221a8
    je     jump_625bf
  jump_625a6:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_625bf
    call   func_61fd9
    test   %eax,%eax
    je     jump_625bf
    mov    $0x1,%eax
    jmp    jump_625c1
  jump_625bf:
    xor    %eax,%eax
  jump_625c1:
    test   %eax,%eax
    je     jump_625de
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_83cfe
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_625de:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6fba3
  jump_625e8:
    add    $0x4,%esp
  jump_625eb:
    decl   data_122190
    pop    %ebp
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_625f4:
/*----------------------------------------------------------------*/
    jmp    jump_6fbe8


/*----------------------------------------------------------------*/
func_625f9:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%edx
    push   %edx
    call   func_6fbec
    add    $0x4,%esp
    ret


/*----------------------------------------------------------------*/
func_62607:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_62647
    cmp    $0x1,%edx
    je     jump_6262e
    cmpl   $0x0,data_1221a8
    je     jump_62647
  jump_6262e:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62647
    call   func_61fd9
    test   %eax,%eax
    je     jump_62647
    mov    $0x1,%eax
    jmp    jump_62649
  jump_62647:
    xor    %eax,%eax
  jump_62649:
    test   %eax,%eax
    je     jump_62675
    mov    0x1c(%esp),%edi
    push   %edi
    mov    0x1c(%esp),%ebp
    push   %ebp
    mov    0x1c(%esp),%eax
    push   %eax
    mov    0x1c(%esp),%edx
    push   %edx
    push   $data_83d19
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x18,%esp
  jump_62675:
    mov    0x1c(%esp),%ecx
    push   %ecx
    mov    0x1c(%esp),%esi
    push   %esi
    mov    0x1c(%esp),%edi
    push   %edi
    mov    0x1c(%esp),%ebp
    push   %ebp
    call   func_6fc53
    mov    %eax,%esi
    add    $0x10,%esp
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_626b2
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_626b2:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_626d4
  jump_626bf:
    push   $data_83b33
    mov    data_1221a0,%ecx
    push   %ecx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_626d4:
    cmp    $0xe,%edx
    jb     jump_626bf
    mov    $0x1,%edx
    jmp    jump_626f4
  jump_626e0:
    push   $data_83b35
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_626f4:
    cmp    data_122190,%edx
    jb     jump_626e0
    push   %esi
    push   $data_83c8c
    mov    data_1221a0,%ebp
    push   %ebp
  jump_62709:
    call   func_73aaa
    add    $0xc,%esp
  jump_62711:
    decl   data_122190
    mov    %esi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6271d:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_6275c
    cmp    $0x1,%edx
    je     jump_62743
    cmpl   $0x0,data_1221a8
    je     jump_6275c
  jump_62743:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_6275c
    call   func_61fd9
    test   %eax,%eax
    je     jump_6275c
    mov    $0x1,%eax
    jmp    jump_6275e
  jump_6275c:
    xor    %eax,%eax
  jump_6275e:
    test   %eax,%eax
    je     jump_6277b
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_83d3f
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_6277b:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6fd2d
    jmp    jump_625e8


/*----------------------------------------------------------------*/
func_6278a:
/*----------------------------------------------------------------*/
    jmp    func_6fd6a


/*----------------------------------------------------------------*/
func_6278f:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%esi
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_627d3
    cmp    $0x1,%edx
    je     jump_627ba
    cmpl   $0x0,data_1221a8
    je     jump_627d3
  jump_627ba:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_627d3
    call   func_61fd9
    test   %eax,%eax
    je     jump_627d3
    mov    $0x1,%eax
    jmp    jump_627d5
  jump_627d3:
    xor    %eax,%eax
  jump_627d5:
    test   %eax,%eax
    je     jump_627f2
    mov    0x14(%esp),%ebp
    push   %ebp
    push   %esi
    push   $data_83d4e
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_627f2:
    mov    0x14(%esp),%edx
    push   %edx
    push   %esi
    call   func_6cddd
    add    $0x8,%esp
    mov    %eax,%edi
    test   %eax,%eax
    je     jump_62a5d
    cmpl   $0x0,data_1221a4
    je     jump_62adc
    cmpl   $0x1,data_122190
    je     jump_6282d
    cmpl   $0x0,data_1221a8
    je     jump_62adc
  jump_6282d:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62adc
    xor    %edx,%edx
    jmp    jump_62852
  jump_6283e:
    push   $data_83b33
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62852:
    cmp    $0xe,%edx
    jb     jump_6283e
    mov    $0x1,%edx
    jmp    jump_62873
  jump_6285e:
    push   $data_83b35
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62873:
    cmp    data_122190,%edx
    jb     jump_6285e
    lea    0x80(%esi),%eax
    push   %eax
    push   $data_83d69
    mov    data_1221a0,%ecx
    push   %ecx
    call   func_73aaa
    add    $0xc,%esp
    xor    %edx,%edx
    jmp    jump_628ae
  jump_6289a:
    push   $data_83b33
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_628ae:
    cmp    $0xe,%edx
    jb     jump_6289a
    mov    $0x1,%edx
    jmp    jump_628cf
  jump_628ba:
    push   $data_83b35
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_628cf:
    cmp    data_122190,%edx
    jb     jump_628ba
    push   %esi
    push   $data_83d76
    mov    data_1221a0,%ecx
    push   %ecx
    call   func_73aaa
    add    $0xc,%esp
    xor    %edx,%edx
    jmp    jump_62904
  jump_628f0:
    push   $data_83b33
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62904:
    cmp    $0xe,%edx
    jb     jump_628f0
    mov    $0x1,%edx
    jmp    jump_62925
  jump_62910:
    push   $data_83b35
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62925:
    cmp    data_122190,%edx
    jb     jump_62910
    movswl 0x100(%esi),%eax
    push   %eax
    push   $data_83d83
    mov    data_1221a0,%ecx
    push   %ecx
    call   func_73aaa
    add    $0xc,%esp
    xor    %edx,%edx
    jmp    jump_62961
  jump_6294d:
    push   $data_83b33
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62961:
    cmp    $0xe,%edx
    jb     jump_6294d
    mov    $0x1,%edx
    jmp    jump_62982
  jump_6296d:
    push   $data_83b35
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62982:
    cmp    data_122190,%edx
    jb     jump_6296d
    movswl 0x102(%esi),%eax
    push   %eax
    push   $data_83d90
    mov    data_1221a0,%ecx
    push   %ecx
    call   func_73aaa
    add    $0xc,%esp
    xor    %edx,%edx
    jmp    jump_629be
  jump_629aa:
    push   $data_83b33
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_629be:
    cmp    $0xe,%edx
    jb     jump_629aa
    mov    $0x1,%edx
    jmp    jump_629df
  jump_629ca:
    push   $data_83b35
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_629df:
    cmp    data_122190,%edx
    jb     jump_629ca
    movswl 0x104(%esi),%eax
    push   %eax
    push   $data_83d9d
    mov    data_1221a0,%ecx
    push   %ecx
    call   func_73aaa
    add    $0xc,%esp
    xor    %edx,%edx
    jmp    jump_62a1b
  jump_62a07:
    push   $data_83b33
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62a1b:
    cmp    $0xe,%edx
    jb     jump_62a07
    mov    $0x1,%edx
    jmp    jump_62a3c
  jump_62a27:
    push   $data_83b35
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62a3c:
    cmp    data_122190,%edx
    jb     jump_62a27
    movswl 0x106(%esi),%eax
    push   %eax
    push   $data_83daa
    mov    data_1221a0,%ecx
    push   %ecx
    jmp    jump_62ad4
  jump_62a5d:
    cmpl   $0x0,data_1221a4
    je     jump_62adc
    cmpl   $0x1,data_122190
    je     jump_62a7c
    cmpl   $0x0,data_1221a8
    je     jump_62adc
  jump_62a7c:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62adc
    xor    %edx,%edx
    jmp    jump_62a9e
  jump_62a89:
    push   $data_83b33
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62a9e:
    cmp    $0xe,%edx
    jb     jump_62a89
    mov    $0x1,%edx
    jmp    jump_62abf
  jump_62aaa:
    push   $data_83b35
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62abf:
    cmp    data_122190,%edx
    jb     jump_62aaa
    push   %edi
    push   $data_83db7
    mov    data_1221a0,%esi
    push   %esi
  jump_62ad4:
    call   func_73aaa
    add    $0xc,%esp
  jump_62adc:
    decl   data_122190
    mov    %edi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_62ae8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_62b28
    cmp    $0x1,%edx
    je     jump_62b0f
    cmpl   $0x0,data_1221a8
    je     jump_62b28
  jump_62b0f:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62b28
    call   func_61fd9
    test   %eax,%eax
    je     jump_62b28
    mov    $0x1,%eax
    jmp    jump_62b2a
  jump_62b28:
    xor    %eax,%eax
  jump_62b2a:
    test   %eax,%eax
    je     jump_62b47
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_83dc4
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_62b47:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_6fd76
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_62b79
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_62b79:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_62b9f
  jump_62b8a:
    push   $data_83b33
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62b9f:
    cmp    $0xe,%edx
    jb     jump_62b8a
    mov    $0x1,%edx
    jmp    jump_62bc0
  jump_62bab:
    push   $data_83b35
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62bc0:
    cmp    data_122190,%edx
    jb     jump_62bab
  jump_62bc8:
    push   %esi
    push   $data_83db7
    jmp    jump_64009


/*----------------------------------------------------------------*/
func_62bd3:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_62c13
    cmp    $0x1,%edx
    je     jump_62bfa
    cmpl   $0x0,data_1221a8
    je     jump_62c13
  jump_62bfa:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62c13
    call   func_61fd9
    test   %eax,%eax
    je     jump_62c13
    mov    $0x1,%eax
    jmp    jump_62c15
  jump_62c13:
    xor    %eax,%eax
  jump_62c15:
    test   %eax,%eax
    je     jump_62c36
    mov    0x14(%esp),%edi
    push   %edi
    mov    0x14(%esp),%ebp
    push   %ebp
    push   $data_83dde
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_62c36:
    mov    0x14(%esp),%edx
    push   %edx
    mov    0x14(%esp),%ebx
    push   %ebx
    call   func_6fdbd
    mov    %eax,%esi
    add    $0x8,%esp
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_62c6d
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_62c6d:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_62c92
  jump_62c7e:
    push   $data_83b33
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62c92:
    cmp    $0xe,%edx
    jb     jump_62c7e
    mov    $0x1,%edx
    jmp    jump_62cb3
  jump_62c9e:
    push   $data_83b35
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_62cb3:
    cmp    data_122190,%edx
    jb     jump_62c9e
    push   %esi
    push   $data_83db7
    jmp    jump_6237c


/*----------------------------------------------------------------*/
func_62cc6:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_62d05
    cmp    $0x1,%edx
    je     jump_62cec
    cmpl   $0x0,data_1221a8
    je     jump_62d05
  jump_62cec:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62d05
    call   func_61fd9
    test   %eax,%eax
    je     jump_62d05
    mov    $0x1,%eax
    jmp    jump_62d07
  jump_62d05:
    xor    %eax,%eax
  jump_62d07:
    test   %eax,%eax
    je     jump_62d28
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_83df9
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_62d28:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_6fed8
    jmp    jump_624ee


/*----------------------------------------------------------------*/
func_62d3c:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_62d7b
    cmp    $0x1,%edx
    je     jump_62d62
    cmpl   $0x0,data_1221a8
    je     jump_62d7b
  jump_62d62:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62d7b
    call   func_61fd9
    test   %eax,%eax
    je     jump_62d7b
    mov    $0x1,%eax
    jmp    jump_62d7d
  jump_62d7b:
    xor    %eax,%eax
  jump_62d7d:
    test   %eax,%eax
    je     jump_62d9e
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_83e16
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_62d9e:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_6ff08
    jmp    jump_624ee


/*----------------------------------------------------------------*/
func_62f06:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_62f45
    cmp    $0x1,%edx
    je     jump_62f2c
    cmpl   $0x0,data_1221a8
    je     jump_62f45
  jump_62f2c:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62f45
    call   func_61fd9
    test   %eax,%eax
    je     jump_62f45
    mov    $0x1,%eax
    jmp    jump_62f47
  jump_62f45:
    xor    %eax,%eax
  jump_62f47:
    test   %eax,%eax
    je     jump_62f64
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_83e6d
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_62f64:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6fe30
    jmp    jump_625e8


/*----------------------------------------------------------------*/
func_62fd5:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_63014
    cmp    $0x1,%edx
    je     jump_62ffb
    cmpl   $0x0,data_1221a8
    je     jump_63014
  jump_62ffb:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_63014
    call   func_61fd9
    test   %eax,%eax
    je     jump_63014
    mov    $0x1,%eax
    jmp    jump_63016
  jump_63014:
    xor    %eax,%eax
  jump_63016:
    test   %eax,%eax
    je     jump_63033
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_83e9a
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_63033:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6fe84
    jmp    jump_625e8


/*----------------------------------------------------------------*/
func_630a4:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_630e3
    cmp    $0x1,%edx
    je     jump_630ca
    cmpl   $0x0,data_1221a8
    je     jump_630e3
  jump_630ca:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_630e3
    call   func_61fd9
    test   %eax,%eax
    je     jump_630e3
    mov    $0x1,%eax
    jmp    jump_630e5
  jump_630e3:
    xor    %eax,%eax
  jump_630e5:
    test   %eax,%eax
    je     jump_63102
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_83ec5
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_63102:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6fde5
    jmp    jump_625e8


/*----------------------------------------------------------------*/
func_63111:
/*----------------------------------------------------------------*/
    push   %edi
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_6314f
    cmp    $0x1,%edx
    je     jump_63136
    cmpl   $0x0,data_1221a8
    je     jump_6314f
  jump_63136:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_6314f
    call   func_61fd9
    test   %eax,%eax
    je     jump_6314f
    mov    $0x1,%eax
    jmp    jump_63151
  jump_6314f:
    xor    %eax,%eax
  jump_63151:
    test   %eax,%eax
    je     jump_63169
    push   $data_83ee3
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
  jump_63169:
    call   func_6fe0c
    jmp    jump_62286


/*----------------------------------------------------------------*/
func_63173:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_631b3
    cmp    $0x1,%edx
    je     jump_6319a
    cmpl   $0x0,data_1221a8
    je     jump_631b3
  jump_6319a:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_631b3
    call   func_61fd9
    test   %eax,%eax
    je     jump_631b3
    mov    $0x1,%eax
    jmp    jump_631b5
  jump_631b3:
    xor    %eax,%eax
  jump_631b5:
    test   %eax,%eax
    je     jump_631d2
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_83efd
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_631d2:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_6d391
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_63204
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_63204:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_6322a
  jump_63215:
    push   $data_83b33
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_6322a:
    cmp    $0xe,%edx
    jb     jump_63215
    mov    $0x1,%edx
    jmp    jump_6324b
  jump_63236:
    push   $data_83b35
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_6324b:
    cmp    data_122190,%edx
    jb     jump_63236
    jmp    jump_62472


/*----------------------------------------------------------------*/
func_63258:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_63298
    cmp    $0x1,%edx
    je     jump_6327f
    cmpl   $0x0,data_1221a8
    je     jump_63298
  jump_6327f:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_63298
    call   func_61fd9
    test   %eax,%eax
    je     jump_63298
    mov    $0x1,%eax
    jmp    jump_6329a
  jump_63298:
    xor    %eax,%eax
  jump_6329a:
    test   %eax,%eax
    je     jump_632bb
    mov    0x14(%esp),%edi
    push   %edi
    mov    0x14(%esp),%ebp
    push   %ebp
    push   $data_83f1b
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_632bb:
    mov    0x14(%esp),%edx
    push   %edx
    mov    0x14(%esp),%ebx
    push   %ebx
    call   func_6d0be
    mov    %eax,%esi
    add    $0x8,%esp
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_632f2
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_632f2:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_63317
  jump_63303:
    push   $data_83b33
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_63317:
    cmp    $0xe,%edx
    jb     jump_63303
    mov    $0x1,%edx
    jmp    jump_63338
  jump_63323:
    push   $data_83b35
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_63338:
    cmp    data_122190,%edx
    jb     jump_63323
  jump_63340:
    push   %esi
    push   $data_83cb2
    jmp    jump_6237c


/*----------------------------------------------------------------*/
func_6334b:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_6338a
    cmp    $0x1,%edx
    je     jump_63371
    cmpl   $0x0,data_1221a8
    je     jump_6338a
  jump_63371:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_6338a
    call   func_61fd9
    test   %eax,%eax
    je     jump_6338a
    mov    $0x1,%eax
    jmp    jump_6338c
  jump_6338a:
    xor    %eax,%eax
  jump_6338c:
    test   %eax,%eax
    je     jump_633a9
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_83f38
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_633a9:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6d2ee
    jmp    jump_625e8


/*----------------------------------------------------------------*/
func_633b8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_633f8
    cmp    $0x1,%edx
    je     jump_633df
    cmpl   $0x0,data_1221a8
    je     jump_633f8
  jump_633df:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_633f8
    call   func_61fd9
    test   %eax,%eax
    je     jump_633f8
    mov    $0x1,%eax
    jmp    jump_633fa
  jump_633f8:
    xor    %eax,%eax
  jump_633fa:
    test   %eax,%eax
    je     jump_63412
    push   $data_83f54
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
  jump_63412:
    call   func_69200
    mov    %eax,%esi
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_6343c
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_6343c:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_63462
  jump_6344d:
    push   $data_83b33
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_63462:
    cmp    $0xe,%edx
    jb     jump_6344d
    mov    $0x1,%edx
    jmp    jump_63483
  jump_6346e:
    push   $data_83b35
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_63483:
    cmp    data_122190,%edx
    jb     jump_6346e
  jump_6348b:
    push   %esi
    push   $data_83cb2
    jmp    jump_639a2


/*----------------------------------------------------------------*/
func_63496:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_634d6
    cmp    $0x1,%edx
    je     jump_634bd
    cmpl   $0x0,data_1221a8
    je     jump_634d6
  jump_634bd:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_634d6
    call   func_61fd9
    test   %eax,%eax
    je     jump_634d6
    mov    $0x1,%eax
    jmp    jump_634d8
  jump_634d6:
    xor    %eax,%eax
  jump_634d8:
    test   %eax,%eax
    je     jump_634f9
    mov    0x14(%esp),%edi
    push   %edi
    mov    0x14(%esp),%ebp
    push   %ebp
    push   $data_83f6b
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_634f9:
    mov    0x14(%esp),%edx
    push   %edx
    mov    0x14(%esp),%ebx
    push   %ebx
    call   func_69140
    mov    %eax,%esi
    add    $0x8,%esp
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_63530
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_63530:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_63555
  jump_63541:
    push   $data_83b33
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_63555:
    cmp    $0xe,%edx
    jb     jump_63541
    mov    $0x1,%edx
    jmp    jump_63576
  jump_63561:
    push   $data_83b35
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_63576:
    cmp    data_122190,%edx
    jb     jump_63561
    jmp    jump_63340


/*----------------------------------------------------------------*/
func_635f0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_63630
    cmp    $0x1,%edx
    je     jump_63617
    cmpl   $0x0,data_1221a8
    je     jump_63630
  jump_63617:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_63630
    call   func_61fd9
    test   %eax,%eax
    je     jump_63630
    mov    $0x1,%eax
    jmp    jump_63632
  jump_63630:
    xor    %eax,%eax
  jump_63632:
    test   %eax,%eax
    je     jump_6364f
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_83fb1
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_6364f:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_692a0
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_63681
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_63681:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_636a7
  jump_63692:
    push   $data_83b33
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_636a7:
    cmp    $0xe,%edx
    jb     jump_63692
    mov    $0x1,%edx
    jmp    jump_636c8
  jump_636b3:
    push   $data_83b35
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_636c8:
    cmp    data_122190,%edx
    jb     jump_636b3
    jmp    jump_62472


/*----------------------------------------------------------------*/
func_637ce:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_6380d
    cmp    $0x1,%edx
    je     jump_637f4
    cmpl   $0x0,data_1221a8
    je     jump_6380d
  jump_637f4:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_6380d
    call   func_61fd9
    test   %eax,%eax
    je     jump_6380d
    mov    $0x1,%eax
    jmp    jump_6380f
  jump_6380d:
    xor    %eax,%eax
  jump_6380f:
    test   %eax,%eax
    je     jump_6382c
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_83ffb
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_6382c:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_69310
    jmp    jump_625e8


/*----------------------------------------------------------------*/
func_6383b:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_6387a
    cmp    $0x1,%edx
    je     jump_63861
    cmpl   $0x0,data_1221a8
    je     jump_6387a
  jump_63861:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_6387a
    call   func_61fd9
    test   %eax,%eax
    je     jump_6387a
    mov    $0x1,%eax
    jmp    jump_6387c
  jump_6387a:
    xor    %eax,%eax
  jump_6387c:
    test   %eax,%eax
    je     jump_63899
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_8401c
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_63899:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_69320
    jmp    jump_625e8
  jump_6399c:
    push   %esi
    push   $data_83c8c
  jump_639a2:
    mov    data_1221a0,%edi
    push   %edi
    jmp    jump_62709


/*----------------------------------------------------------------*/
func_639ae:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_639ee
    cmp    $0x1,%edx
    je     jump_639d5
    cmpl   $0x0,data_1221a8
    je     jump_639ee
  jump_639d5:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_639ee
    call   func_61fd9
    test   %eax,%eax
    je     jump_639ee
    mov    $0x1,%eax
    jmp    jump_639f0
  jump_639ee:
    xor    %eax,%eax
  jump_639f0:
    test   %eax,%eax
    je     jump_63a17
    mov    0x18(%esp),%edi
    push   %edi
    mov    0x18(%esp),%ebp
    push   %ebp
    mov    0x18(%esp),%eax
    push   %eax
    push   $data_84056
    mov    data_1221a0,%edx
    push   %edx
    call   func_73aaa
    add    $0x14,%esp
  jump_63a17:
    mov    0x18(%esp),%ebx
    push   %ebx
    mov    0x18(%esp),%ecx
    push   %ecx
    mov    0x18(%esp),%esi
    push   %esi
    call   func_693e0
    jmp    jump_62573


/*----------------------------------------------------------------*/
func_63a30:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_63a70
    cmp    $0x1,%edx
    je     jump_63a57
    cmpl   $0x0,data_1221a8
    je     jump_63a70
  jump_63a57:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_63a70
    call   func_61fd9
    test   %eax,%eax
    je     jump_63a70
    mov    $0x1,%eax
    jmp    jump_63a72
  jump_63a70:
    xor    %eax,%eax
  jump_63a72:
    test   %eax,%eax
    je     jump_63a99
    mov    0x18(%esp),%edi
    push   %edi
    mov    0x18(%esp),%ebp
    push   %ebp
    mov    0x18(%esp),%eax
    push   %eax
    push   $data_8407c
    mov    data_1221a0,%edx
    push   %edx
    call   func_73aaa
    add    $0x14,%esp
  jump_63a99:
    mov    0x18(%esp),%ebx
    push   %ebx
    mov    0x18(%esp),%ecx
    push   %ecx
    mov    0x18(%esp),%esi
    push   %esi
    call   func_69410
    jmp    jump_62573


/*----------------------------------------------------------------*/
func_63ab2:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_63af1
    cmp    $0x1,%edx
    je     jump_63ad8
    cmpl   $0x0,data_1221a8
    je     jump_63af1
  jump_63ad8:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_63af1
    call   func_61fd9
    test   %eax,%eax
    je     jump_63af1
    mov    $0x1,%eax
    jmp    jump_63af3
  jump_63af1:
    xor    %eax,%eax
  jump_63af3:
    test   %eax,%eax
    je     jump_63b10
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_8409d
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_63b10:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_69530
    jmp    jump_625e8


/*----------------------------------------------------------------*/
func_63b1f:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_63b5e
    cmp    $0x1,%edx
    je     jump_63b45
    cmpl   $0x0,data_1221a8
    je     jump_63b5e
  jump_63b45:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_63b5e
    call   func_61fd9
    test   %eax,%eax
    je     jump_63b5e
    mov    $0x1,%eax
    jmp    jump_63b60
  jump_63b5e:
    xor    %eax,%eax
  jump_63b60:
    test   %eax,%eax
    je     jump_63b7d
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_840b5
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_63b7d:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_695b0
    jmp    jump_625e8


/*----------------------------------------------------------------*/
func_63bf9:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_63c38
    cmp    $0x1,%edx
    je     jump_63c1f
    cmpl   $0x0,data_1221a8
    je     jump_63c38
  jump_63c1f:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_63c38
    call   func_61fd9
    test   %eax,%eax
    je     jump_63c38
    mov    $0x1,%eax
    jmp    jump_63c3a
  jump_63c38:
    xor    %eax,%eax
  jump_63c3a:
    test   %eax,%eax
    je     jump_63c57
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_840e5
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_63c57:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_695f0
    jmp    jump_625e8


/*----------------------------------------------------------------*/
func_63c66:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_63ca5
    cmp    $0x1,%edx
    je     jump_63c8c
    cmpl   $0x0,data_1221a8
    je     jump_63ca5
  jump_63c8c:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_63ca5
    call   func_61fd9
    test   %eax,%eax
    je     jump_63ca5
    mov    $0x1,%eax
    jmp    jump_63ca7
  jump_63ca5:
    xor    %eax,%eax
  jump_63ca7:
    test   %eax,%eax
    je     jump_63cc8
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_840fb
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_63cc8:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_69450
    jmp    jump_624ee


/*----------------------------------------------------------------*/
func_63cdc:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_63d1b
    cmp    $0x1,%edx
    je     jump_63d02
    cmpl   $0x0,data_1221a8
    je     jump_63d1b
  jump_63d02:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_63d1b
    call   func_61fd9
    test   %eax,%eax
    je     jump_63d1b
    mov    $0x1,%eax
    jmp    jump_63d1d
  jump_63d1b:
    xor    %eax,%eax
  jump_63d1d:
    test   %eax,%eax
    je     jump_63d3e
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_84122
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_63d3e:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_69470
    jmp    jump_624ee


/*----------------------------------------------------------------*/
func_63d52:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_63d91
    cmp    $0x1,%edx
    je     jump_63d78
    cmpl   $0x0,data_1221a8
    je     jump_63d91
  jump_63d78:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_63d91
    call   func_61fd9
    test   %eax,%eax
    je     jump_63d91
    mov    $0x1,%eax
    jmp    jump_63d93
  jump_63d91:
    xor    %eax,%eax
  jump_63d93:
    test   %eax,%eax
    je     jump_63db4
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_84142
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_63db4:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_694a0
    jmp    jump_624ee


/*----------------------------------------------------------------*/
func_63dc8:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_63e07
    cmp    $0x1,%edx
    je     jump_63dee
    cmpl   $0x0,data_1221a8
    je     jump_63e07
  jump_63dee:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_63e07
    call   func_61fd9
    test   %eax,%eax
    je     jump_63e07
    mov    $0x1,%eax
    jmp    jump_63e09
  jump_63e07:
    xor    %eax,%eax
  jump_63e09:
    test   %eax,%eax
    je     jump_63e2a
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_8415f
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_63e2a:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_69520
    jmp    jump_624ee


/*----------------------------------------------------------------*/
func_63e3e:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_63e7e
    cmp    $0x1,%edx
    je     jump_63e65
    cmpl   $0x0,data_1221a8
    je     jump_63e7e
  jump_63e65:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_63e7e
    call   func_61fd9
    test   %eax,%eax
    je     jump_63e7e
    mov    $0x1,%eax
    jmp    jump_63e80
  jump_63e7e:
    xor    %eax,%eax
  jump_63e80:
    test   %eax,%eax
    je     jump_63e9d
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_84183
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_63e9d:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_693d0
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_63ecf
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_63ecf:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_63ef5
  jump_63ee0:
    push   $data_83b33
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_63ef5:
    cmp    $0xe,%edx
    jb     jump_63ee0
    mov    $0x1,%edx
    jmp    jump_63f16
  jump_63f01:
    push   $data_83b35
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_63f16:
    cmp    data_122190,%edx
    jb     jump_63f01
    jmp    jump_62bc8
  jump_64003:
    push   %esi
    push   $data_83c8c
  jump_64009:
    mov    data_1221a0,%eax
    push   %eax
    jmp    jump_62709


/*----------------------------------------------------------------*/
func_643bc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_643fc
    cmp    $0x1,%edx
    je     jump_643e3
    cmpl   $0x0,data_1221a8
    je     jump_643fc
  jump_643e3:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_643fc
    call   func_61fd9
    test   %eax,%eax
    je     jump_643fc
    mov    $0x1,%eax
    jmp    jump_643fe
  jump_643fc:
    xor    %eax,%eax
  jump_643fe:
    test   %eax,%eax
    je     jump_64425
    mov    0x18(%esp),%edi
    push   %edi
    mov    0x18(%esp),%ebp
    push   %ebp
    mov    0x18(%esp),%eax
    push   %eax
    push   $data_84234
    mov    data_1221a0,%edx
    push   %edx
    call   func_73aaa
    add    $0x14,%esp
  jump_64425:
    mov    0x18(%esp),%ebx
    push   %ebx
    mov    0x18(%esp),%ecx
    push   %ecx
    mov    0x18(%esp),%esi
    push   %esi
    call   func_696f0
    add    $0xc,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_64461
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_64461:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_64487
  jump_64472:
    push   $data_83b33
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_64487:
    cmp    $0xe,%edx
    jb     jump_64472
    mov    $0x1,%edx
    jmp    jump_644a8
  jump_64493:
    push   $data_83b35
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_644a8:
    cmp    data_122190,%edx
    jb     jump_64493
    jmp    jump_6399c


/*----------------------------------------------------------------*/
func_644b5:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_644f5
    cmp    $0x1,%edx
    je     jump_644dc
    cmpl   $0x0,data_1221a8
    je     jump_644f5
  jump_644dc:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_644f5
    call   func_61fd9
    test   %eax,%eax
    je     jump_644f5
    mov    $0x1,%eax
    jmp    jump_644f7
  jump_644f5:
    xor    %eax,%eax
  jump_644f7:
    test   %eax,%eax
    je     jump_64514
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_84260
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_64514:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_69820
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_64546
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_64546:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_6456c
  jump_64557:
    push   $data_83b33
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_6456c:
    cmp    $0xe,%edx
    jb     jump_64557
    mov    $0x1,%edx
    jmp    jump_6458d
  jump_64578:
    push   $data_83b35
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_6458d:
    cmp    data_122190,%edx
    jb     jump_64578
    jmp    jump_64003


/*----------------------------------------------------------------*/
func_6459a:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_645da
    cmp    $0x1,%edx
    je     jump_645c1
    cmpl   $0x0,data_1221a8
    je     jump_645da
  jump_645c1:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_645da
    call   func_61fd9
    test   %eax,%eax
    je     jump_645da
    mov    $0x1,%eax
    jmp    jump_645dc
  jump_645da:
    xor    %eax,%eax
  jump_645dc:
    test   %eax,%eax
    je     jump_64608
    mov    0x1c(%esp),%edi
    push   %edi
    mov    0x1c(%esp),%ebp
    push   %ebp
    mov    0x1c(%esp),%eax
    push   %eax
    mov    0x1c(%esp),%edx
    push   %edx
    push   $data_8427f
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x18,%esp
  jump_64608:
    mov    0x1c(%esp),%ecx
    push   %ecx
    mov    0x1c(%esp),%esi
    push   %esi
    mov    0x1c(%esp),%edi
    push   %edi
    mov    0x1c(%esp),%ebp
    push   %ebp
    call   func_69790
    add    $0x10,%esp
    jmp    jump_62576


/*----------------------------------------------------------------*/
func_64d8c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_64dcc
    cmp    $0x1,%edx
    je     jump_64db3
    cmpl   $0x0,data_1221a8
    je     jump_64dcc
  jump_64db3:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_64dcc
    call   func_61fd9
    test   %eax,%eax
    je     jump_64dcc
    mov    $0x1,%eax
    jmp    jump_64dce
  jump_64dcc:
    xor    %eax,%eax
  jump_64dce:
    test   %eax,%eax
    je     jump_64de6
    push   $data_843e1
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
  jump_64de6:
    call   func_6ba50
    mov    %eax,%esi
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_64e10
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_64e10:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_64e36
  jump_64e21:
    push   $data_83b33
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_64e36:
    cmp    $0xe,%edx
    jb     jump_64e21
    mov    $0x1,%edx
    jmp    jump_64e57
  jump_64e42:
    push   $data_83b35
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_64e57:
    cmp    data_122190,%edx
    jb     jump_64e42
    jmp    jump_6348b


/*----------------------------------------------------------------*/
func_64e64:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_64ea4
    cmp    $0x1,%edx
    je     jump_64e8b
    cmpl   $0x0,data_1221a8
    je     jump_64ea4
  jump_64e8b:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_64ea4
    call   func_61fd9
    test   %eax,%eax
    je     jump_64ea4
    mov    $0x1,%eax
    jmp    jump_64ea6
  jump_64ea4:
    xor    %eax,%eax
  jump_64ea6:
    test   %eax,%eax
    je     jump_64ec7
    mov    0x14(%esp),%edi
    push   %edi
    mov    0x14(%esp),%ebp
    push   %ebp
    push   $data_843f8
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_64ec7:
    mov    0x14(%esp),%edx
    push   %edx
    mov    0x14(%esp),%ebx
    push   %ebx
    call   func_6b990
    mov    %eax,%esi
    add    $0x8,%esp
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_64efe
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_64efe:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_64f23
  jump_64f0f:
    push   $data_83b33
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_64f23:
    cmp    $0xe,%edx
    jb     jump_64f0f
    mov    $0x1,%edx
    jmp    jump_64f44
  jump_64f2f:
    push   $data_83b35
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_64f44:
    cmp    data_122190,%edx
    jb     jump_64f2f
    jmp    jump_63340


/*----------------------------------------------------------------*/
func_64fbe:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_64ffe
    cmp    $0x1,%edx
    je     jump_64fe5
    cmpl   $0x0,data_1221a8
    je     jump_64ffe
  jump_64fe5:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_64ffe
    call   func_61fd9
    test   %eax,%eax
    je     jump_64ffe
    mov    $0x1,%eax
    jmp    jump_65000
  jump_64ffe:
    xor    %eax,%eax
  jump_65000:
    test   %eax,%eax
    je     jump_6501d
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_8443e
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_6501d:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_6bb40
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_6504f
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_6504f:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_65075
  jump_65060:
    push   $data_83b33
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_65075:
    cmp    $0xe,%edx
    jb     jump_65060
    mov    $0x1,%edx
    jmp    jump_65096
  jump_65081:
    push   $data_83b35
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_65096:
    cmp    data_122190,%edx
    jb     jump_65081
    jmp    jump_62472


/*----------------------------------------------------------------*/
func_65209:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_65248
    cmp    $0x1,%edx
    je     jump_6522f
    cmpl   $0x0,data_1221a8
    je     jump_65248
  jump_6522f:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_65248
    call   func_61fd9
    test   %eax,%eax
    je     jump_65248
    mov    $0x1,%eax
    jmp    jump_6524a
  jump_65248:
    xor    %eax,%eax
  jump_6524a:
    test   %eax,%eax
    je     jump_65267
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_844a6
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_65267:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6bf90
    jmp    jump_625e8


/*----------------------------------------------------------------*/
func_65276:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_652b5
    cmp    $0x1,%edx
    je     jump_6529c
    cmpl   $0x0,data_1221a8
    je     jump_652b5
  jump_6529c:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_652b5
    call   func_61fd9
    test   %eax,%eax
    je     jump_652b5
    mov    $0x1,%eax
    jmp    jump_652b7
  jump_652b5:
    xor    %eax,%eax
  jump_652b7:
    test   %eax,%eax
    je     jump_652d4
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_844c0
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_652d4:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6bfd0
    jmp    jump_625e8


/*----------------------------------------------------------------*/
func_65350:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_6538f
    cmp    $0x1,%edx
    je     jump_65376
    cmpl   $0x0,data_1221a8
    je     jump_6538f
  jump_65376:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_6538f
    call   func_61fd9
    test   %eax,%eax
    je     jump_6538f
    mov    $0x1,%eax
    jmp    jump_65391
  jump_6538f:
    xor    %eax,%eax
  jump_65391:
    test   %eax,%eax
    je     jump_653ae
    mov    0xc(%esp),%edi
    push   %edi
    push   $data_844f4
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_653ae:
    mov    0xc(%esp),%eax
    push   %eax
    call   func_6c130
    jmp    jump_625e8


/*----------------------------------------------------------------*/
func_65537:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_65577
    cmp    $0x1,%edx
    je     jump_6555e
    cmpl   $0x0,data_1221a8
    je     jump_65577
  jump_6555e:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_65577
    call   func_61fd9
    test   %eax,%eax
    je     jump_65577
    mov    $0x1,%eax
    jmp    jump_65579
  jump_65577:
    xor    %eax,%eax
  jump_65579:
    test   %eax,%eax
    je     jump_65596
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_8457b
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_65596:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_6c260
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_655c8
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_655c8:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_655ee
  jump_655d9:
    push   $data_83b33
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_655ee:
    cmp    $0xe,%edx
    jb     jump_655d9
    mov    $0x1,%edx
    jmp    jump_6560f
  jump_655fa:
    push   $data_83b35
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_6560f:
    cmp    data_122190,%edx
    jb     jump_655fa
    jmp    jump_62bc8


/*----------------------------------------------------------------*/
func_660fa:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_66139
    cmp    $0x1,%edx
    je     jump_66120
    cmpl   $0x0,data_1221a8
    je     jump_66139
  jump_66120:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_66139
    call   func_61fd9
    test   %eax,%eax
    je     jump_66139
    mov    $0x1,%eax
    jmp    jump_6613b
  jump_66139:
    xor    %eax,%eax
  jump_6613b:
    test   %eax,%eax
    je     jump_6615c
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_8474e
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_6615c:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_6c580
    jmp    jump_624ee


/*----------------------------------------------------------------*/
func_667f6:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_66836
    cmp    $0x1,%edx
    je     jump_6681d
    cmpl   $0x0,data_1221a8
    je     jump_66836
  jump_6681d:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_66836
    call   func_61fd9
    test   %eax,%eax
    je     jump_66836
    mov    $0x1,%eax
    jmp    jump_66838
  jump_66836:
    xor    %eax,%eax
  jump_66838:
    test   %eax,%eax
    je     jump_66855
    mov    0x10(%esp),%edi
    push   %edi
    push   $data_848a4
    mov    data_1221a0,%ebp
    push   %ebp
    call   func_73aaa
    add    $0xc,%esp
  jump_66855:
    mov    0x10(%esp),%eax
    push   %eax
    call   func_6c700
    add    $0x4,%esp
    mov    %eax,%esi
    cmpl   $0x0,data_1221a4
    je     jump_62711
    cmpl   $0x1,data_122190
    je     jump_66887
    cmpl   $0x0,data_1221a8
    je     jump_62711
  jump_66887:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_62711
    xor    %edx,%edx
    jmp    jump_668ad
  jump_66898:
    push   $data_83b33
    mov    data_1221a0,%edi
    push   %edi
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_668ad:
    cmp    $0xe,%edx
    jb     jump_66898
    mov    $0x1,%edx
    jmp    jump_668ce
  jump_668b9:
    push   $data_83b35
    mov    data_1221a0,%ebx
    push   %ebx
    call   func_73aaa
    add    $0x8,%esp
    inc    %edx
  jump_668ce:
    cmp    data_122190,%edx
    jb     jump_668b9
    jmp    jump_64003


/*----------------------------------------------------------------*/
func_668db:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_6691a
    cmp    $0x1,%edx
    je     jump_66901
    cmpl   $0x0,data_1221a8
    je     jump_6691a
  jump_66901:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_6691a
    call   func_61fd9
    test   %eax,%eax
    je     jump_6691a
    mov    $0x1,%eax
    jmp    jump_6691c
  jump_6691a:
    xor    %eax,%eax
  jump_6691c:
    test   %eax,%eax
    je     jump_6693d
    mov    0x10(%esp),%edi
    push   %edi
    mov    0x10(%esp),%ebp
    push   %ebp
    push   $data_848bc
    mov    data_1221a0,%eax
    push   %eax
    call   func_73aaa
    add    $0x10,%esp
  jump_6693d:
    mov    0x10(%esp),%edx
    push   %edx
    mov    0x10(%esp),%ebx
    push   %ebx
    call   func_6c8a0
    jmp    jump_624ee


/*----------------------------------------------------------------*/
func_66951:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_122190,%edx
    inc    %edx
    mov    %edx,data_122190
    cmpl   $0x0,data_1221a4
    je     jump_66991
    cmp    $0x1,%edx
    je     jump_66978
    cmpl   $0x0,data_1221a8
    je     jump_66991
  jump_66978:
    call   func_6fd6a
    test   %eax,%eax
    jne    jump_66991
    call   func_61fd9
    test   %eax,%eax
    je     jump_66991
    mov    $0x1,%eax
    jmp    jump_66993
  jump_66991:
    xor    %eax,%eax
  jump_66993:
    test   %eax,%eax
    je     jump_669ba
    mov    0x18(%esp),%edi
    push   %edi
    mov    0x18(%esp),%ebp
    push   %ebp
    mov    0x18(%esp),%eax
    push   %eax
    push   $data_848da
    mov    data_1221a0,%edx
    push   %edx
    call   func_73aaa
    add    $0x14,%esp
  jump_669ba:
    mov    0x18(%esp),%ebx
    push   %ebx
    mov    0x18(%esp),%ecx
    push   %ecx
    mov    0x18(%esp),%esi
    push   %esi
    call   func_6c9d0
    jmp    jump_62573


/*----------------------------------------------------------------*/
func_66d44:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_88658
    je     jump_66d6a
    push   $func_66d44
    push   $func_61ec5
    call   func_616fa
    add    $0x8,%esp
    xor    %ebx,%ebx
    mov    %ebx,data_88658
  jump_66d6a:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_66d6e:
/*----------------------------------------------------------------*/
    or     %al,(%eax)
    add    %al,(%eax)
    adc    %eax,(%eax)
    add    %al,(%eax)
    adc    (%eax),%al
    add    %al,(%eax)
    adc    (%eax),%eax
    add    %al,(%eax)
    adc    $0x0,%al
    add    %al,(%eax)
    adc    $0x17000000,%eax
    add    %al,(%eax)
    add    %bl,(%eax)
    add    %al,(%eax)
    add    %bl,(%edx)
    add    %al,(%eax)
    add    %bl,(%ebx)
    add    %al,(%eax)
    add    %bl,0x1e000000
    add    %al,(%eax)
    add    %ah,(%eax)
    add    %al,(%eax)
    add    %ah,(%edx)
    add    %al,(%eax)
    add    %ah,(%eax,%eax,1)
    add    %al,(%eax)
    add    %al,%es:(%eax)
    add    %ch,(%ecx)
    add    %al,(%eax)
    add    %ch,(%ebx)
    add    %al,(%eax)
    add    %ch,(%esi)
    add    %al,(%eax)
    add    %dh,(%ecx)
    add    %al,(%eax)
    add    %dh,(%ebx)
    add    %al,(%eax)
    add    %dh,(%edi)
    add    %al,(%eax)
    add    %bh,(%edx)
    add    %al,(%eax)
    add    %bh,0x41000000
    add    %al,(%eax)
    add    %al,0x0(%ebp)
    add    %al,(%eax)
    dec    %ecx
    add    %al,(%eax)
    add    %cl,0x0(%ebp)
    add    %al,(%eax)
    push   %edx
    add    %al,(%eax)
    add    %dl,0x0(%edi)
    add    %al,(%eax)
    pop    %esp
    add    %al,(%eax)
    add    %ah,0x0(%edx)
    add    %al,(%eax)
    add    %al,(%bx,%si)
    add    %ch,0x0(%esi)
    add    %al,(%eax)
    je     jump_66df8
  jump_66df8:
    add    %al,(%eax)
    jnp    jump_66dfc
  jump_66dfc:
    add    %al,(%eax)
    addb   $0x0,(%eax)
    add    %cl,-0x6e000000(%edx)
    add    %al,(%eax)
    add    %bl,-0x5c000000(%ebx)
    add    %al,(%eax)
    add    %ch,-0x47000000(%esi)
    add    %al,(%eax)
    add    %al,%ah
    add    %al,(%eax)
    add    %cl,%bh
    add    %al,(%eax)
    add    %bl,%ah
    add    %al,(%eax)
    add    %ch,%cl
    add    %al,(%eax)
    add    %dh,%bh
    add    %al,(%eax)
    add    %al,0x15000001
    add    %eax,(%eax)
    add    %ah,0x37000001
    add    %eax,(%eax)
    add    %cl,0x1(%ecx)
    add    %al,(%eax)
    pop    %ebp
    add    %eax,(%eax)
    add    %dh,0x1(%edx)
    add    %al,(%eax)
    mov    %al,(%ecx)
    add    %al,(%eax)
    lahf
    add    %eax,(%eax)
    add    %bh,-0x2dffffff(%eax)
    add    %eax,(%eax)
    add    %ch,%ch
    add    %eax,(%eax)
    add    %cl,(%ebx)
    add    (%eax),%al
    add    %ch,(%edx)
    add    (%eax),%al
    add    %cl,0x2(%ebx)
    add    %al,(%eax)
    outsb  %ds:(%esi),(%dx)
    add    (%eax),%al
    add    %dl,-0x45fffffe(%ebx)
    add    (%eax),%al
    add    %ah,%ah
    add    (%eax),%al
    add    %dl,(%eax)
    add    (%eax),%eax
    add    %bh,(%esi)
    add    (%eax),%eax
    add    %dh,0x3(%eax)
    add    %al,(%eax)
    movsb  %ds:(%esi),%es:(%edi)
    add    (%eax),%eax
    add    %bl,%bl
    add    (%eax),%eax
    add    %dl,(%esi)
    add    $0x0,%al
    add    %dl,0x0(%esp,%eax,1)
    add    %dl,-0x23fffffc(%esi)
    add    $0x0,%al
    add    %ah,(%esi)
    add    $0x5740000,%eax
    add    %al,(%eax)
    enter  $0x5,$0x0
    and    %al,(%esi)
    add    %al,(%eax)
    jge    jump_66eb6
    add    %al,(%eax)
    loopne jump_66eba
    add    %al,(%eax)
  jump_66eb6:
    dec    %eax
    pop    %es
    add    %al,(%eax)
  jump_66eba:
    mov    $0x7,%bh
    add    %al,(%eax)
    sub    $0xa9000008,%eax
    or     %al,(%eax)
    add    %ch,0xb8000009
    or     %eax,(%eax)
    add    %cl,0x0(%edx,%ecx,1)
    add    %ch,%cl
    or     (%eax),%al
    add    %dl,0x4000000b(%eax)
    or     $0x0,%al
    add    %bh,%dl
    or     $0x0,%al
    add    %al,%al
    or     $0xe910000,%eax
    add    %al,(%eax)
    outsl  %ds:(%esi),(%dx)
    sldt   (%eax)
    pop    %edx
    adc    %al,(%eax)
    add    %dl,0x11(%ebx)
    add    %al,(%eax)
    pop    %ebx
    adc    (%eax),%al
    add    %dh,0x13(%ecx)
    add    %al,(%eax)
    cltd
    adc    $0x0,%al
    add    %dl,%bl
    adc    $0x17200000,%eax
    add    %al,(%eax)
    sbbb   $0x0,(%eax)
    add    %dh,%ah
    sbb    %eax,(%eax)
    add    %al,0x2300001b(%eax)
    sbb    $0x1ede0000,%eax
    add    %al,(%eax)
    mov    $0x20,%ah
    add    %al,(%eax)
    cmpsb  %es:(%edi),%ds:(%esi)
    and    (%eax),%al
    add    %dh,-0x1cffffdc(%esi)
    add    %al,%es:(%eax)
    xor    (%ecx),%ebp
    add    %al,(%eax)
    cmpsb  %es:(%edi),%ds:(%esi)
    sub    (%eax),%eax
    add    %al,0x2e(%eax)
    add    %al,(%eax)
    add    %dh,(%ecx)
    add    %al,(%eax)
    jmp    jump_66f76


/*----------------------------------------------------------------*/
func_66f6e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_8865c
    jne    jump_66f96
    push   $func_678d3
    push   $func_66f6e
    call   func_61691
    add    $0x8,%esp
    movl   $0x1,data_8865c
  jump_66f96:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_66f9a:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%edi
    mov    0x14(%esp),%edx
    mov    0x18(%esp),%ebx
    mov    0x10(%esp),%esi
    and    $0xf0,%esi
    mov    0x10(%esp),%ecx
    and    $0xf,%ecx
    mov    %ecx,%eax
    shl    $0x2,%eax
    add    %edi,%eax
    cmp    $0xc0,%esi
    jb     jump_66fd5
    jbe    jump_66fe0
    cmp    $0xe0,%esi
    je     jump_66feb
    pop    %edi
    pop    %esi
    ret
  jump_66fd5:
    cmp    $0xb0,%esi
    je     jump_67001
    pop    %edi
    pop    %esi
    ret
  jump_66fe0:
    and    $0xff,%edx
    mov    %edx,(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_66feb:
    and    $0xff,%edx
    mov    %edx,0x40(%eax)
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x80(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_67001:
    cmp    $0x5b,%edx
    jb     jump_6704f
    jbe    jump_67127
    cmp    $0x70,%edx
    jb     jump_6703a
    jbe    jump_670ae
    cmp    $0x73,%edx
    jb     jump_6702e
    jbe    jump_670c8
    cmp    $0x77,%edx
    je     jump_670d5
    pop    %edi
    pop    %esi
    ret
  jump_6702e:
    cmp    $0x72,%edx
    je     jump_670bb
    pop    %edi
    pop    %esi
    ret
  jump_6703a:
    cmp    $0x6e,%edx
    jb     jump_67043
    jbe    jump_67094
    jmp    jump_670a1
  jump_67043:
    cmp    $0x5d,%edx
    je     jump_67134
    pop    %edi
    pop    %esi
    ret
  jump_6704f:
    cmp    $0x7,%edx
    jb     jump_6707d
    jbe    jump_670f0
    cmp    $0xb,%edx
    jb     jump_67071
    jbe    jump_6710c
    cmp    $0x40,%edx
    je     jump_6711a
    pop    %edi
    pop    %esi
    ret
  jump_67071:
    cmp    $0xa,%edx
    je     jump_670fe
    pop    %edi
    pop    %esi
    ret
  jump_6707d:
    cmp    $0x1,%edx
    jb     jump_6714c
    jbe    jump_670e2
    cmp    $0x6,%edx
    je     jump_67141
    pop    %edi
    pop    %esi
    ret
  jump_67094:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0xc0(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_670a1:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x100(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_670ae:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x140(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_670bb:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x180(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_670c8:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x1c0(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_670d5:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x200(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_670e2:
    xor    %eax,%eax
    mov    %bl,%al
    mov    %eax,0x240(%edi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_670f0:
    xor    %eax,%eax
    mov    %bl,%al
    mov    %eax,0x280(%edi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_670fe:
    xor    %eax,%eax
    mov    %bl,%al
    mov    %eax,0x2c0(%edi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6710c:
    xor    %eax,%eax
    mov    %bl,%al
    mov    %eax,0x300(%edi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6711a:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x340(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_67127:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x380(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_67134:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    %edx,0x3c0(%eax)
    pop    %edi
    pop    %esi
    ret
  jump_67141:
    xor    %eax,%eax
    mov    %bl,%al
    mov    %eax,0x400(%edi,%ecx,4)
  jump_6714c:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6714f:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %edx,%ecx
    xor    %edx,%edx
    jmp    jump_6716b
  jump_67157:
    mov    (%eax),%esi
    cmp    $0xffffffff,%esi
    je     jump_67173
    cmp    %esi,%ecx
    jne    jump_67167
    cmp    0x4(%eax),%ebx
    je     jump_67175
  jump_67167:
    inc    %edx
    add    $0x20,%eax
  jump_6716b:
    cmp    $0x200,%edx
    jl     jump_67157
  jump_67173:
    xor    %eax,%eax
  jump_67175:
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_67178:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    shl    $0x2,%edx
    lea    (%eax,%edx,1),%esi
    mov    0x4d8(%esi),%edx
    shl    $0x2,%edx
    lea    (%eax,%edx,1),%edi
    mov    0x294(%edi),%edx
    imul   0x314(%edi),%edx
    mov    $0x7f,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x5d8(%esi),%edx
    imul   %eax,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    push   %eax
    mov    0x494(%esi),%ecx
    push   %ecx
    call   func_63cdc
    add    $0x8,%esp
    mov    0x2d4(%edi),%ebp
    push   %ebp
    mov    0x494(%esi),%eax
    push   %eax
    call   func_63d52
    add    $0x8,%esp
  jump_671de:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_671e4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %edx,%eax
    mov    0x4d8(%esi,%eax,4),%edx
    mov    %edx,0xc(%esp)
    mov    0x558(%esi,%eax,4),%edx
    mov    %edx,(%esp)
    mov    0x598(%esi,%eax,4),%ebx
    mov    0x518(%esi,%eax,4),%eax
    mov    %eax,0x8(%esp)
    mov    0xc(%esp),%eax
    mov    0x94(%esi,%eax,4),%edx
    shl    $0x7,%edx
    mov    0x54(%esi,%eax,4),%eax
    or     %edx,%eax
    cmp    $0x2000,%eax
    jle    jump_67240
    mov    $0x1,%edx
    sub    $0x1fff,%eax
    jmp    jump_67256
  jump_67240:
    jge    jump_67252
    mov    $0x2000,%edx
    sub    %eax,%edx
    mov    %edx,%eax
    mov    $0xffffffff,%edx
    jmp    jump_67256
  jump_67252:
    xor    %eax,%eax
    xor    %edx,%edx
  jump_67256:
    mov    0xc(%esp),%ecx
    imul   0x414(%esi,%ecx,4),%edx
    add    0x8(%esp),%edx
    test   %edx,%edx
    jge    jump_6726c
    xor    %edx,%edx
  jump_6726c:
    cmp    $0x7f,%edx
    jle    jump_67276
    mov    $0x7f,%edx
  jump_67276:
    mov    (%esp),%ecx
    mov    func_66d6e(,%ecx,4),%ecx
    mov    %ecx,0x4(%esp)
    mov    0x8(%esp),%ecx
    mov    func_66d6e(,%ecx,4),%ecx
    mov    func_66d6e(,%edx,4),%edx
    sub    %ecx,%edx
    imul   %eax,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0xd,%edx
    sbb    %edx,%eax
    sar    $0xd,%eax
    lea    (%ecx,%eax,1),%ebp
    cmpl   $0x9,0xc(%esp)
    je     jump_672c7
    mov    %ebx,%edx
    imul   %ecx,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idivl  0x4(%esp)
    imul   %ebp,%eax
    mov    %eax,%edx
    jmp    jump_672ce
  jump_672c7:
    mov    %ebx,%edx
    imul   %ebp,%edx
    mov    %edx,%eax
  jump_672ce:
    sar    $0x1f,%edx
    idiv   %ecx
    mov    %eax,%ebx
    push   %ebx
    mov    0x494(%esi,%edi,4),%ecx
    push   %ecx
    call   func_63c66
    add    $0x8,%esp
    add    $0x10,%esp
    jmp    jump_671de


/*----------------------------------------------------------------*/
func_672ee:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    0x1b0(%eax),%eax
    mov    0x8(%eax),%eax
    mov    0xc(%esp),%ebx
    mov    0x8(%esp),%edx
    call   func_6714f
    test   %eax,%eax
    setne  %al
    and    $0xff,%eax
    ret


/*----------------------------------------------------------------*/
func_67313:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    0x20(%esp),%eax
    mov    0x18(%esp),%edi
    mov    0x1b0(%edi),%edi
    mov    %eax,%esi
    and    $0xf0,%esi
    mov    %eax,%edx
    and    $0xf,%edx
    mov    %edx,0x4(%esp)
    cmp    $0xb0,%esi
    je     jump_67350
    cmp    $0xc0,%esi
    je     jump_67350
    cmp    $0xe0,%esi
    jne    jump_67367
  jump_67350:
    mov    0x28(%esp),%edx
    push   %edx
    mov    0x28(%esp),%ebx
    push   %ebx
    push   %eax
    lea    0x14(%edi),%eax
    push   %eax
    call   func_66f9a
    add    $0x10,%esp
  jump_67367:
    cmp    $0x90,%esi
    jne    jump_6737b
    cmpl   $0x0,0x28(%esp)
    jne    jump_6737b
    mov    $0x80,%esi
  jump_6737b:
    mov    0x4(%esp),%ebp
    shl    $0x2,%ebp
    add    %edi,%ebp
    cmp    $0xb0,%esi
    jb     jump_673b1
    jbe    jump_673d4
    cmp    $0xc0,%esi
    jb     jump_676fe
    jbe    jump_674d1
    cmp    $0xe0,%esi
    je     jump_674ee
    jmp    jump_676fe
  jump_673b1:
    cmp    $0x80,%esi
    jb     jump_676fe
    jbe    jump_676a9
    cmp    $0x90,%esi
    je     jump_67530
    jmp    jump_676fe
  jump_673d4:
    mov    0x24(%esp),%esi
    cmp    $0x7,%esi
    jb     jump_673fb
    jbe    jump_67405
    cmp    $0xa,%esi
    jb     jump_676fe
    cmp    $0xb,%esi
    jbe    jump_67405
    cmp    $0x7b,%esi
    je     jump_67489
    jmp    jump_676fe
  jump_673fb:
    cmp    $0x6,%esi
    je     jump_67447
    jmp    jump_676fe
  jump_67405:
    xor    %esi,%esi
    jmp    jump_6743a
  jump_67409:
    mov    %esi,%eax
    shl    $0x2,%eax
    add    %edi,%eax
    mov    0x4d8(%eax),%edx
    cmp    0x4(%esp),%edx
    jne    jump_67439
    mov    0x494(%eax),%ecx
    push   %ecx
    call   func_63e3e
    add    $0x4,%esp
    cmp    $0x4,%eax
    jne    jump_67439
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_67178
  jump_67439:
    inc    %esi
  jump_6743a:
    cmp    0x4d4(%edi),%esi
    jl     jump_67409
    jmp    jump_676fe
  jump_67447:
    xor    %esi,%esi
    jmp    jump_6747c
  jump_6744b:
    mov    %esi,%eax
    shl    $0x2,%eax
    add    %edi,%eax
    mov    0x4d8(%eax),%edx
    cmp    0x4(%esp),%edx
    jne    jump_6747b
    mov    0x494(%eax),%ecx
    push   %ecx
    call   func_63e3e
    add    $0x4,%esp
    cmp    $0x4,%eax
    jne    jump_6747b
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_671e4
  jump_6747b:
    inc    %esi
  jump_6747c:
    cmp    0x4d4(%edi),%esi
    jl     jump_6744b
    jmp    jump_676fe
  jump_67489:
    xor    %esi,%esi
    jmp    jump_674c4
  jump_6748d:
    mov    %esi,%ebp
    shl    $0x2,%ebp
    add    %edi,%ebp
    mov    0x4d8(%ebp),%eax
    cmp    0x4(%esp),%eax
    jne    jump_674c3
    mov    0x494(%ebp),%ebx
    push   %ebx
    call   func_63e3e
    add    $0x4,%esp
    cmp    $0x4,%eax
    jne    jump_674c3
    mov    0x494(%ebp),%ecx
    push   %ecx
    call   func_63bf9
    add    $0x4,%esp
  jump_674c3:
    inc    %esi
  jump_674c4:
    cmp    0x4d4(%edi),%esi
    jl     jump_6748d
    jmp    jump_676fe
  jump_674d1:
    mov    0x194(%ebp),%edx
    mov    0x8(%edi),%eax
    mov    0x24(%esp),%ebx
    call   func_6714f
    mov    %eax,0x454(%ebp)
    jmp    jump_676fe
  jump_674ee:
    xor    %esi,%esi
    jmp    jump_67523
  jump_674f2:
    mov    %esi,%eax
    shl    $0x2,%eax
    add    %edi,%eax
    mov    0x4d8(%eax),%edx
    cmp    0x4(%esp),%edx
    jne    jump_67522
    mov    0x494(%eax),%ecx
    push   %ecx
    call   func_63e3e
    add    $0x4,%esp
    cmp    $0x4,%eax
    jne    jump_67522
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_671e4
  jump_67522:
    inc    %esi
  jump_67523:
    cmp    0x4d4(%edi),%esi
    jl     jump_674f2
    jmp    jump_676fe
  jump_67530:
    cmpl   $0x9,0x4(%esp)
    jne    jump_6754e
    mov    0x8(%edi),%eax
    mov    0x24(%esp),%ebx
    mov    $0x7f,%edx
    call   func_6714f
    mov    %eax,0x454(%ebp)
  jump_6754e:
    mov    0x4(%esp),%eax
    cmpl   $0x0,0x454(%edi,%eax,4)
    je     jump_676fe
    xor    %esi,%esi
    jmp    jump_6757c
  jump_67564:
    mov    %esi,%eax
    mov    0x494(%edi,%eax,4),%edx
    push   %edx
    call   func_63e3e
    add    $0x4,%esp
    cmp    $0x2,%eax
    je     jump_67584
    inc    %esi
  jump_6757c:
    cmp    0x4d4(%edi),%esi
    jl     jump_67564
  jump_67584:
    cmp    0x4d4(%edi),%esi
    jne    jump_675c5
    mov    $0xffffffff,%edx
    xor    %eax,%eax
    jmp    jump_675ab
  jump_67595:
    mov    %eax,%ebp
    shl    $0x2,%ebp
    add    %edi,%ebp
    mov    0x618(%ebp),%ebx
    cmp    %ebx,%edx
    jb     jump_675aa
    mov    %ebx,%edx
    mov    %eax,%esi
  jump_675aa:
    inc    %eax
  jump_675ab:
    cmp    0x4d4(%edi),%eax
    jl     jump_67595
    mov    %esi,%eax
    mov    0x494(%edi,%eax,4),%ebp
    push   %ebp
    call   func_63bf9
    add    $0x4,%esp
  jump_675c5:
    mov    %esi,%ebp
    mov    0x4(%esp),%eax
    mov    %eax,0x4d8(%edi,%ebp,4)
    mov    0x24(%esp),%eax
    mov    %eax,0x518(%edi,%ebp,4)
    mov    0x4(%esp),%eax
    shl    $0x2,%eax
    lea    (%edi,%eax,1),%edx
    mov    %edx,(%esp)
    mov    0x454(%edx),%eax
    mov    0x8(%eax),%eax
    mov    %eax,0x558(%edi,%ebp,4)
    mov    0x454(%edx),%eax
    mov    0x1c(%eax),%eax
    mov    %eax,0x598(%edi,%ebp,4)
    mov    0x28(%esp),%eax
    mov    %eax,0x5d8(%edi,%ebp,4)
    mov    0x658(%edi),%eax
    lea    0x1(%eax),%edx
    mov    %edx,0x658(%edi)
    mov    %eax,0x618(%edi,%ebp,4)
    mov    0x494(%edi,%ebp,4),%ecx
    push   %ecx
    call   func_6383b
    add    $0x4,%esp
    mov    (%esp),%eax
    mov    0x454(%eax),%eax
    mov    0x18(%eax),%edx
    push   %edx
    mov    0x14(%eax),%ebx
    push   %ebx
    mov    0x494(%edi,%ebp,4),%ecx
    push   %ecx
    call   func_63a30
    add    $0xc,%esp
    mov    (%esp),%eax
    mov    0x454(%eax),%eax
    mov    0x10(%eax),%edx
    push   %edx
    mov    0x8(%edi),%edx
    add    0xc(%eax),%edx
    push   %edx
    mov    0x494(%edi,%ebp,4),%ecx
    push   %ecx
    call   func_639ae
    add    $0xc,%esp
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_671e4
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_67178
    mov    0x494(%edi,%ebp,4),%esi
    push   %esi
    call   func_63ab2
  jump_6769f:
    add    $0x4,%esp
    mov    $0x1,%eax
    jmp    jump_67700
  jump_676a9:
    cmpl   $0x9,0x4(%esp)
    je     jump_676fe
    xor    %esi,%esi
    jmp    jump_676f6
  jump_676b4:
    mov    %esi,%ebp
    shl    $0x2,%ebp
    add    %edi,%ebp
    mov    0x4d8(%ebp),%eax
    cmp    0x4(%esp),%eax
    jne    jump_676f5
    mov    0x518(%ebp),%eax
    cmp    0x24(%esp),%eax
    jne    jump_676f5
    mov    0x494(%ebp),%ecx
    push   %ecx
    call   func_63e3e
    add    $0x4,%esp
    cmp    $0x4,%eax
    jne    jump_676f5
    mov    0x494(%ebp),%esi
    push   %esi
    call   func_63bf9
    jmp    jump_6769f
  jump_676f5:
    inc    %esi
  jump_676f6:
    cmp    0x4d4(%edi),%esi
    jl     jump_676b4
  jump_676fe:
    xor    %eax,%eax
  jump_67700:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_678d3:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_8865c
    je     jump_678f9
    push   $func_678d3
    push   $func_66f6e
    call   func_616fa
    add    $0x8,%esp
    xor    %ebx,%ebx
    mov    %ebx,data_8865c
  jump_678f9:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_678fd:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_88660
    jne    jump_67925
    push   $func_67f17
    push   $func_678fd
    call   func_61691
    add    $0x8,%esp
    movl   $0x1,data_88660
  jump_67925:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_67929:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    (%eax),%eax
    shr    $0x8,%eax
    ret


/*----------------------------------------------------------------*/
func_67933:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%esi
    cmpl   $0x0,0x874(%esi)
    je     jump_6794b
    push   %esi
    call   *0x874(%esi)
    add    $0x4,%esp
  jump_6794b:
    cmpl   $0x0,0x88c(%esi)
    jle    jump_6795d
    push   %esi
    call   func_637ce
    add    $0x4,%esp
  jump_6795d:
    movl   $0xffffffff,0x88c(%esi)
    pop    %esi
    ret

vtable_67969:
    .long   func_679bf
    .long   func_679cc
    .long   func_67be5
    .long   func_67be5
    .long   func_67a38
    .long   func_67be5
    .long   func_67a69
    .long   func_67a80
    .long   func_67aaa
    .long   func_67b34


/*----------------------------------------------------------------*/
func_67991:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%esi
    xor    %ebp,%ebp
  jump_6799a:
    test   %ebp,%ebp
    jne    jump_679c8
    mov    0x878(%esi),%edi
    mov    (%edi),%al
    cmp    $0x9,%al
    ja     func_67be5
    and    $0xff,%eax
    jmp    *%cs:vtable_67969(,%eax,4)


/*----------------------------------------------------------------*/
func_679bf:
/*----------------------------------------------------------------*/
    push   %esi
    call   func_67933
    add    $0x4,%esp
  jump_679c8:
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_679cc:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x888(%esi)
    je     func_67be5
    push   %edi
    call   func_67929
    add    $0x4,%esp
    sub    $0x2,%eax
    push   %eax
    lea    0x6(%edi),%eax
    push   %eax
    push   %esi
    call   func_639ae
    add    $0xc,%esp
    xor    %eax,%eax
    mov    0x4(%edi),%al
    mov    $0x100,%ebp
    sub    %eax,%ebp
    xor    %edx,%edx
    mov    $0xf4240,%eax
    div    %ebp
    push   %eax
    push   %esi
    call   func_63c66
    add    $0x8,%esp
    push   $0x0
    push   $0x0
    push   %esi
    call   func_63a30
  jump_67a1c:
    add    $0xc,%esp
    cmpl   $0x0,0x14(%esp)
    je     jump_67be0
    push   %esi
    call   func_63ab2
    add    $0x4,%esp
    jmp    jump_67be0


/*----------------------------------------------------------------*/
func_67a38:
/*----------------------------------------------------------------*/
    mov    0x884(%esi),%ecx
    cmp    $0xffffffff,%ecx
    je     func_67be5
    movswl 0x4(%edi),%eax
    cmp    %ecx,%eax
    jne    jump_67a5e
    movl   $0x1,0x888(%esi)
    jmp    func_67be5
  jump_67a5e:
    mov    %ebp,0x888(%esi)
    jmp    func_67be5


/*----------------------------------------------------------------*/
func_67a69:
/*----------------------------------------------------------------*/
    mov    %edi,0x87c(%esi)
    xor    %eax,%eax
    mov    0x4(%edi),%ax
    mov    %eax,0x880(%esi)
    jmp    func_67be5


/*----------------------------------------------------------------*/
func_67a80:
/*----------------------------------------------------------------*/
    mov    0x880(%esi),%ebx
    cmp    $0xffff,%ebx
    je     jump_67a9f
    lea    -0x1(%ebx),%edx
    mov    %edx,0x880(%esi)
    test   %ebx,%ebx
    je     func_67be5
  jump_67a9f:
    mov    0x87c(%esi),%edi
    jmp    func_67be5


/*----------------------------------------------------------------*/
func_67aaa:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x888(%esi)
    je     func_67be5
    cmpb   $0x0,0x7(%edi)
    je     jump_67adf
    push   %ebp
    push   $0x2
    push   %esi
    call   func_63a30
    add    $0xc,%esp
    xor    %eax,%eax
    mov    0x4(%edi),%ax
    mov    $0x10000,%ebp
    sub    %eax,%ebp
    xor    %edx,%edx
    mov    $0x7a12000,%eax
    jmp    jump_67afe
  jump_67adf:
    push   %ebp
    push   %ebp
    push   %esi
    call   func_63a30
    add    $0xc,%esp
    movzwl 0x4(%edi),%ebp
    mov    $0x10000,%eax
    sub    %ebp,%eax
    mov    %eax,%ebp
    xor    %edx,%edx
    mov    $0xf424000,%eax
  jump_67afe:
    div    %ebp
    push   %eax
    push   %esi
    call   func_63c66
    add    $0x8,%esp
    push   %edi
    call   func_67929
    add    $0x4,%esp
    add    %eax,%edi
    add    $0x4,%edi
    push   %edi
    call   func_67929
    add    $0x4,%esp
    sub    $0x2,%eax
    push   %eax
    lea    0x6(%edi),%eax
    push   %eax
    push   %esi
    call   func_639ae
    jmp    jump_67a1c


/*----------------------------------------------------------------*/
func_67b34:
/*----------------------------------------------------------------*/
    cmpl   $0x0,0x888(%esi)
    je     func_67be5
    push   %edi
    call   func_67929
    add    $0x4,%esp
    sub    $0xc,%eax
    push   %eax
    lea    0x10(%edi),%eax
    push   %eax
    push   %esi
    call   func_639ae
    add    $0xc,%esp
    mov    0x4(%edi),%ebx
    push   %ebx
    push   %esi
    call   func_63c66
    add    $0x8,%esp
    xor    %eax,%eax
    mov    0x9(%edi),%al
    cmp    $0x1,%eax
    jne    jump_67b7d
    cmpw   $0x0,0xa(%edi)
    jne    jump_67b7d
    push   %ebp
    push   %ebp
    jmp    jump_67bc7
  jump_67b7d:
    xor    %eax,%eax
    mov    0x9(%edi),%al
    cmp    $0x2,%eax
    jne    jump_67b93
    cmpw   $0x0,0xa(%edi)
    jne    jump_67b93
    push   $0x0
    push   %eax
    jmp    jump_67bc7
  jump_67b93:
    xor    %eax,%eax
    mov    0x9(%edi),%al
    cmp    $0x1,%eax
    jne    jump_67bae
    xor    %eax,%eax
    mov    0xa(%edi),%ax
    cmp    $0x4,%eax
    jne    jump_67bae
    push   $0x1
    push   $0x1
    jmp    jump_67bc7
  jump_67bae:
    xor    %eax,%eax
    mov    0x9(%edi),%al
    cmp    $0x2,%eax
    jne    jump_67bd0
    xor    %eax,%eax
    mov    0xa(%edi),%ax
    cmp    $0x4,%eax
    jne    jump_67bd0
    push   $0x1
    push   $0x3
  jump_67bc7:
    push   %esi
    call   func_63a30
    add    $0xc,%esp
  jump_67bd0:
    cmpl   $0x0,0x14(%esp)
    je     jump_67be0
    push   %esi
    call   func_63ab2
    add    $0x4,%esp
  jump_67be0:
    mov    $0x1,%ebp


/*----------------------------------------------------------------*/
func_67be5:
/*----------------------------------------------------------------*/
    push   %edi
    call   func_67929
    add    $0x4,%esp
    add    %edi,%eax
    add    $0x4,%eax
    mov    %eax,0x878(%esi)
    jmp    jump_6799a


/*----------------------------------------------------------------*/
func_67bfe:
/*----------------------------------------------------------------*/
    push   $0x1
    mov    0x8(%esp),%edx
    push   %edx
    call   func_67991
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_67f17:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_88660
    je     jump_67f3d
    push   $func_67f17
    push   $func_678fd
    call   func_616fa
    add    $0x8,%esp
    xor    %ebx,%ebx
    mov    %ebx,data_88660
  jump_67f3d:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_67f50:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_886e8
    jne    jump_6800b
    push   $func_69880
    push   $func_67f50
    call   func_61691
    add    $0x8,%esp
    push   $0x80
    push   $data_88664
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_886e4
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1221e0
    call   func_6171f
    add    $0x8,%esp
    push   $0xc
    push   $data_1221cc
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1221e8
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1221ec
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1221dc
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1221e4
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1221d8
    call   func_6171f
    add    $0x8,%esp
    call   func_6f583
    movl   $0x1,data_886e8
  jump_6800b:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_68090:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    0x2c(%esp),%ebx
    mov    0x40(%ebx),%edx
    cmp    $0x7f,%edx
    jle    jump_680ab
    movl   $0x7f,0x40(%ebx)
    jmp    jump_680b6
  jump_680ab:
    test   %edx,%edx
    jge    jump_680b6
    movl   $0x0,0x40(%ebx)
  jump_680b6:
    mov    0x44(%ebx),%esi
    cmp    $0x7f,%esi
    jle    jump_680c7
    movl   $0x7f,0x44(%ebx)
    jmp    jump_680d2
  jump_680c7:
    test   %esi,%esi
    jge    jump_680d2
    movl   $0x0,0x44(%ebx)
  jump_680d2:
    mov    0x40(%ebx),%eax
    mov    0x44(%ebx),%ecx
    mov    %eax,0xc(%esp)
    test   %eax,%eax
    je     jump_680e5
    inc    %eax
    mov    %eax,0xc(%esp)
  jump_680e5:
    mov    (%ebx),%eax
    mov    0x18(%eax),%edx
    cmp    $0x2,%edx
    je     jump_680f8
    cmp    $0x3,%edx
    jne    jump_6824c
  jump_680f8:
    mov    $0x7f,%esi
    lea    0x48(%ebx),%eax
    sub    %ecx,%esi
    lea    0x448(%ebx),%edx
    movzbl data_88664(%esi),%esi
    mov    data_88664(%ecx),%cl
    mov    0xc(%esp),%edi
    shl    $0x8,%edi
    and    $0xff,%ecx
    mov    %edi,0x8(%esp)
    testb  $0x1,0x38(%ebx)
    je     jump_681e8
    mov    0x8(%esp),%ebx
    mov    0xc(%esp),%ebp
    xor    %edi,%edi
    mov    %ebx,0x18(%esp)
    imul   $0x0,%ebp,%ebx
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
    lea    0x0(%eax),%eax
  jump_68150:
    mov    %ebx,%ebp
    sar    $0x7,%ebp
    mov    %ebp,(%esp)
    imul   %esi,%ebp
    sar    $0x7,%ebp
    mov    %ebp,(%eax)
    mov    (%esp),%ebp
    imul   %ecx,%ebp
    add    $0x4,%edx
    sar    $0x7,%ebp
    add    $0x4,%eax
    mov    %ebp,-0x4(%edx)
    mov    0x18(%esp),%ebp
    add    $0x100,%edi
    add    %ebp,%ebx
    cmp    $0x8000,%edi
    jl     jump_68150
    mov    0xc(%esp),%ebx
    shl    $0x8,%ebx
    mov    %ebx,0x14(%esp)
    mov    0xc(%esp),%ebx
    mov    %ebx,0x4(%esp)
    mov    0x4(%esp),%ebp
    shl    $0x11,%ebx
    sub    %ebp,%ebx
    mov    $0xffff8000,%edi
    shl    $0xf,%ebx
    lea    0x0(%eax),%eax
  jump_681b0:
    mov    %ebx,%ebp
    sar    $0x7,%ebp
    mov    %ebp,(%esp)
    imul   %esi,%ebp
    sar    $0x7,%ebp
    mov    %ebp,(%eax)
    mov    (%esp),%ebp
    imul   %ecx,%ebp
    add    $0x4,%edx
    sar    $0x7,%ebp
    add    $0x4,%eax
    mov    %ebp,-0x4(%edx)
    mov    0x14(%esp),%ebp
    add    $0x100,%edi
    add    %ebp,%ebx
    test   %edi,%edi
    jge    jump_682fb
    jmp    jump_681b0
  jump_681e8:
    mov    0x8(%esp),%ebx
    mov    %ebx,0x10(%esp)
    mov    0xc(%esp),%ebx
    mov    %ebx,0x4(%esp)
    mov    0x4(%esp),%ebp
    shl    $0x11,%ebx
    sub    %ebp,%ebx
    mov    $0xffff8000,%edi
    shl    $0xf,%ebx
    lea    0x0(%eax),%eax
    nop
  jump_68210:
    mov    %ebx,%ebp
    sar    $0x7,%ebp
    mov    %ebp,(%esp)
    imul   %esi,%ebp
    sar    $0x7,%ebp
    mov    %ebp,(%eax)
    mov    (%esp),%ebp
    imul   %ecx,%ebp
    add    $0x4,%edx
    sar    $0x7,%ebp
    add    $0x4,%eax
    mov    %ebp,-0x4(%edx)
    mov    0x10(%esp),%ebp
    add    $0x100,%edi
    add    %ebp,%ebx
    cmp    $0x8000,%edi
    jge    jump_682fb
    jmp    jump_68210
  jump_6824c:
    mov    0xc(%esp),%edx
    lea    0x48(%ebx),%eax
    mov    0x38(%ebx),%cl
    shl    $0x8,%edx
    test   $0x1,%cl
    je     jump_682c9
    mov    0xc(%esp),%ebp
    mov    %edx,%ecx
    xor    %edi,%edi
    imul   $0x0,%ebp,%ebx
    lea    0x0(%eax),%eax
  jump_68270:
    mov    %ebx,%edx
    add    $0x4,%eax
    add    $0x100,%edi
    sar    $0x7,%edx
    add    %ecx,%ebx
    mov    %edx,-0x4(%eax)
    cmp    $0x8000,%edi
    jl     jump_68270
    mov    0xc(%esp),%ecx
    mov    %ecx,%edx
    mov    $0xffff8000,%ebx
    shl    $0x11,%edx
    mov    0xc(%esp),%esi
    sub    %ecx,%edx
    shl    $0x8,%esi
    shl    $0xf,%edx
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
    mov    %ebx,%ebx
  jump_682b0:
    mov    %edx,%ecx
    add    $0x4,%eax
    add    $0x100,%ebx
    sar    $0x7,%ecx
    add    %esi,%edx
    mov    %ecx,-0x4(%eax)
    test   %ebx,%ebx
    jge    jump_682fb
    jmp    jump_682b0
  jump_682c9:
    mov    0xc(%esp),%ebx
    mov    %edx,%ecx
    mov    %ebx,%edx
    shl    $0x11,%edx
    sub    %ebx,%edx
    mov    %edx,%ebx
    mov    $0xffff8000,%edi
    shl    $0xf,%ebx
  jump_682e0:
    mov    %ebx,%edx
    add    $0x4,%eax
    add    $0x100,%edi
    sar    $0x7,%edx
    add    %ecx,%ebx
    mov    %edx,-0x4(%eax)
    cmp    $0x8000,%edi
    jl     jump_682e0
  jump_682fb:
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_68310:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    data_1221dc,%esi
    cmpl   $0x0,data_886e4
    jne    jump_684ca
    mov    $0x1,%ebx
    mov    0x10(%esp),%eax
    mov    %ebx,data_886e4
    mov    %eax,data_1221e0
    call   func_625f4
    mov    %eax,%edi
    mov    %eax,data_1221e8
    mov    data_1221e0,%eax
    cmpl   $0x0,0x54(%eax)
    jne    jump_68367
    push   %edi
    call   func_625f9
    xor    %ecx,%ecx
    add    $0x4,%esp
    mov    %ecx,data_886e4
    jmp    jump_684ca
  jump_68367:
    mov    0x34(%eax),%edi
    movswl (%edi),%edi
    mov    %edi,data_1221e4
    cmp    $0xffffffff,%edi
    je     jump_6837d
    cmp    0x38(%eax),%edi
    jne    jump_6839e
  jump_6837d:
    mov    data_1221e8,%edx
    push   %edx
    call   func_625f9
    xor    %ebx,%ebx
    add    $0x4,%esp
    mov    %ebx,data_886e4
    mov    data_1221dc,%esi
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6839e:
    push   %eax
    mov    %edi,0x38(%eax)
    call   func_6f557
    xor    %eax,%eax
    mov    %eax,data_1221ec
    mov    data_1221e0,%eax
    add    $0x4,%esp
    mov    0x60(%eax),%esi
    mov    0x5c(%eax),%eax
    mov    %esi,data_1221dc
    mov    %eax,data_1221d8
    test   %esi,%esi
    je     jump_68408
  jump_683cb:
    mov    data_1221d8,%eax
    cmpl   $0x4,0x4(%eax)
    jne    jump_683e5
    push   %eax
    incl   data_1221ec
    call   func_6f2c4
    add    $0x4,%esp
  jump_683e5:
    mov    data_1221dc,%esi
    mov    data_1221d8,%edi
    dec    %esi
    add    $0x894,%edi
    mov    %esi,data_1221dc
    mov    %edi,data_1221d8
    test   %esi,%esi
    jne    jump_683cb
  jump_68408:
    mov    data_1221e0,%eax
    mov    data_1221ec,%edi
    mov    %edi,0x64(%eax)
    mov    data_1221e4,%edi
    xor    $0x1,%di
    push   %edi
    push   %eax
    call   func_6f4c5
    mov    data_1221e0,%eax
    mov    0x1c(%eax),%dl
    add    $0x8,%esp
    test   $0x10,%dl
    je     jump_68468
    push   $0x0
    push   $data_1221cc
    mov    data_1221e4,%di
    mov    (%eax),%ebp
    push   $0x405
    xor    %edx,%edx
    xor    $0x1,%edi
    push   %ebp
    mov    %dx,data_1221d0
    mov    %di,data_1221d2
    call   func_62607
    add    $0x10,%esp
  jump_68468:
    mov    data_1221e0,%edi
    mov    0x64(%edi),%eax
    mov    data_1221dc,%esi
    test   %eax,%eax
    je     jump_68484
    movl   $0x0,0x58(%edi)
    jmp    jump_684b3
  jump_68484:
    mov    0x58(%edi),%eax
    lea    0x1(%eax),%edx
    mov    %edx,0x58(%edi)
    cmp    $0x2,%eax
    jne    jump_684b3
    cmpl   $0x0,0x54(%edi)
    je     jump_684b3
    push   $0x0
    push   $0x0
    push   $0x402
    mov    (%edi),%ebx
    push   %ebx
    call   func_62607
    add    $0x10,%esp
    movl   $0x0,0x54(%edi)
  jump_684b3:
    mov    data_1221e8,%ecx
    push   %ecx
    xor    %edi,%edi
    call   func_625f9
    add    $0x4,%esp
    mov    %edi,data_886e4
  jump_684ca:
    mov    data_1221dc,%esi
    pop    %ebp
    pop    %edi
    pop    %esi
    ret

vtable_684d4:
    .long   func_685b1
    .long   func_685d3
    .long   func_685f5
    .long   func_68617

vtable_684e4:
    .long   func_68781
    .long   func_687a1
    .long   func_68791
    .long   func_687aa


/*----------------------------------------------------------------*/
func_68500:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x28,%esp
    mov    0x38(%esp),%esi
    mov    0x54(%esi),%eax
    mov    %eax,0x1c(%esp)
    test   %eax,%eax
    je     jump_68591
    mov    0x60(%esi),%ecx
    xor    %ebx,%ebx
    test   %ecx,%ecx
    jle    jump_68551
    xor    %eax,%eax
  jump_68524:
    mov    0x5c(%esi),%ecx
    mov    0x4(%ecx,%eax,1),%ebp
    mov    %ebp,0x890(%ecx,%eax,1)
    mov    0x5c(%esi),%ecx
    add    %eax,%ecx
    cmpl   $0x4,0x4(%ecx)
    jne    jump_68544
    movl   $0x8,0x4(%ecx)
  jump_68544:
    inc    %ebx
    mov    0x60(%esi),%edx
    add    $0x894,%eax
    cmp    %edx,%ebx
    jl     jump_68524
  jump_68551:
    cmpl   $0x0,0x54(%esi)
    je     jump_68572
    push   $0x0
    push   $0x0
    push   $0x402
    mov    (%esi),%ecx
    push   %ecx
    call   func_62607
    add    $0x10,%esp
    movl   $0x0,0x54(%esi)
  jump_68572:
    push   %esi
    call   func_6f557
    add    $0x4,%esp
    push   $0x0
    push   %esi
    call   func_6f4c5
    add    $0x8,%esp
    push   $0x1
    push   %esi
    call   func_6f4c5
    add    $0x8,%esp
  jump_68591:
    mov    data_122578,%eax
    mov    data_12257c,%ebp
    add    %eax,%eax
    or     %ebp,%eax
    cmp    $0x3,%eax
    ja     jump_68637
    jmp    *%cs:vtable_684d4(,%eax,4)


/*----------------------------------------------------------------*/
func_685b1:
/*----------------------------------------------------------------*/
    mov    $0x1,%ecx
    mov    $0x2,%ebp
    xor    %ebx,%ebx
    mov    $0x3,%eax
    mov    %ebx,(%esp)
    mov    %ecx,0x4(%esp)
    mov    %ebp,0x8(%esp)
    mov    %eax,0xc(%esp)
    jmp    jump_68637


/*----------------------------------------------------------------*/
func_685d3:
/*----------------------------------------------------------------*/
    mov    $0x1,%ecx
    mov    $0x3,%eax
    mov    $0x2,%edx
    xor    %ebp,%ebp
    mov    %ecx,(%esp)
    mov    %ebp,0x4(%esp)
    mov    %eax,0x8(%esp)
    mov    %edx,0xc(%esp)
    jmp    jump_68637


/*----------------------------------------------------------------*/
func_685f5:
/*----------------------------------------------------------------*/
    mov    $0x2,%ebp
    mov    $0x3,%eax
    mov    $0x1,%ebx
    xor    %edx,%edx
    mov    %ebp,(%esp)
    mov    %eax,0x4(%esp)
    mov    %edx,0x8(%esp)
    mov    %ebx,0xc(%esp)
    jmp    jump_68637


/*----------------------------------------------------------------*/
func_68617:
/*----------------------------------------------------------------*/
    mov    $0x3,%eax
    mov    $0x2,%edx
    mov    $0x1,%ebx
    xor    %ecx,%ecx
    mov    %eax,(%esp)
    mov    %edx,0x4(%esp)
    mov    %ebx,0x8(%esp)
    mov    %ecx,0xc(%esp)
  jump_68637:
    mov    0x4(%esi),%ecx
    xor    %eax,%eax
  jump_6863c:
    mov    (%esp,%eax,1),%ebx
    cmpb   $0x0,(%ecx,%ebx,1)
    je     jump_6864a
    mov    %ebx,0x18(%esi)
    jmp    jump_68652
  jump_6864a:
    add    $0x4,%eax
    cmp    $0x10,%eax
    jl     jump_6863c
  jump_68652:
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    mov    0x4(%esi),%ebx
    sub    %edx,%eax
    mov    0x1a(%ebx,%eax,2),%eax
    mov    %eax,0x1c(%esi)
    mov    data_122560,%eax
    cmp    $0x1,%eax
    jb     jump_6867b
    jbe    jump_6869d
    cmp    $0x2,%eax
    je     jump_686bb
    jmp    jump_686d9
  jump_6867b:
    test   %eax,%eax
    jne    jump_686d9
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    mov    0x4(%esi),%ebx
    sub    %edx,%eax
    mov    0x10(%ebx,%eax,2),%ax
    and    $0xffff,%eax
    jmp    jump_6876e
  jump_6869d:
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    mov    0x4(%esi),%ebx
    sub    %edx,%eax
    mov    0x12(%ebx,%eax,2),%ax
    and    $0xffff,%eax
    jmp    jump_6876e
  jump_686bb:
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    mov    0x4(%esi),%ebx
    sub    %edx,%eax
    mov    0x14(%ebx,%eax,2),%ax
    and    $0xffff,%eax
    jmp    jump_6876e
  jump_686d9:
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    0x4(%esi),%ebx
    add    %eax,%eax
    add    %eax,%ebx
    xor    %eax,%eax
    mov    0x10(%ebx),%ax
    mov    %eax,(%esp)
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    0x4(%esi),%ebx
    add    %eax,%eax
    add    %eax,%ebx
    xor    %eax,%eax
    mov    0x12(%ebx),%ax
    mov    %eax,0x4(%esp)
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    mov    data_122560,%ebp
    sub    %edx,%eax
    mov    0x4(%esi),%ebx
    add    %eax,%eax
    xor    %ecx,%ecx
    add    %eax,%ebx
    xor    %eax,%eax
    mov    $0x7fffffff,%edx
    mov    0x14(%ebx),%ax
    mov    %edx,0x24(%esp)
    mov    %eax,0x8(%esp)
    xor    %ebx,%ebx
  jump_68742:
    mov    %ebp,%eax
    sub    (%esp,%ebx,1),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    cmp    0x24(%esp),%eax
    jg     jump_68762
    mov    %ebp,%eax
    sub    (%esp,%ebx,1),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,0x24(%esp)
    mov    %ecx,%edi
  jump_68762:
    inc    %ecx
    add    $0x4,%ebx
    cmp    $0x3,%ecx
    jl     jump_68742
    mov    (%esp,%edi,4),%eax
  jump_6876e:
    mov    %eax,0x14(%esi)
    mov    0x18(%esi),%eax
    cmp    $0x3,%eax
    ja     jump_687b8
    jmp    *%cs:vtable_684e4(,%eax,4)


/*----------------------------------------------------------------*/
func_68781:
/*----------------------------------------------------------------*/
    movl   $0x1,0x3c(%esi)
    movl   $0x1,0x40(%esi)
    jmp    jump_687b8


/*----------------------------------------------------------------*/
func_68791:
/*----------------------------------------------------------------*/
    movl   $0x2,0x3c(%esi)
    movl   $0x1,0x40(%esi)
    jmp    jump_687b8


/*----------------------------------------------------------------*/
func_687a1:
/*----------------------------------------------------------------*/
    movl   $0x1,0x3c(%esi)
    jmp    jump_687b1


/*----------------------------------------------------------------*/
func_687aa:
/*----------------------------------------------------------------*/
    movl   $0x2,0x3c(%esi)
  jump_687b1:
    movl   $0x2,0x40(%esi)
  jump_687b8:
    mov    data_122568,%ebp
    mov    0x14(%esi),%edx
    imul   %ebp,%edx
    mov    $0x3e8,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    0x40(%esi),%edx
    imul   %eax,%edx
    mov    0x3c(%esi),%eax
    imul   %eax,%edx
    mov    %edx,0x10(%esi)
    mov    0x18(%esi),%edx
    lea    0x0(,%edx,8),%eax
    sub    %edx,%eax
    mov    0x4(%esi),%ebp
    add    %eax,%eax
    add    %eax,%ebp
    xor    %eax,%eax
    mov    0x16(%ebp),%ax
    mov    %eax,0x20(%esp)
    mov    data_1225a0,%eax
    movzwl 0x18(%ebp),%ebp
    test   %eax,%eax
    je     jump_6883b
    cmp    $0x800,%ebp
    jle    jump_68816
    mov    $0x800,%ebp
  jump_68816:
    cmpl   $0x800,0x20(%esp)
    jle    jump_6883b
    mov    $0xa,%ecx
    mov    $data_12245c,%edi
    mov    $data_84aa8,%esi
    xor    %eax,%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    jmp    jump_68976
  jump_6883b:
    mov    $0x7fffffff,%ebx
    mov    $0x8,%ecx
    jmp    jump_68865
  jump_68847:
    mov    %ecx,%eax
    sub    0x10(%esi),%eax
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    cmp    %ebx,%eax
    jg     jump_68863
    mov    %ecx,%eax
    sub    0x10(%esi),%eax
    mov    %ecx,%edi
    cltd
    xor    %edx,%eax
    sub    %edx,%eax
    mov    %eax,%ebx
  jump_68863:
    add    %ecx,%ecx
  jump_68865:
    mov    data_122564,%eax
    mov    %eax,%edx
    sar    $0x1f,%edx
    sub    %edx,%eax
    sar    %eax
    cmp    %eax,%ecx
    jle    jump_68847
    mov    0x20(%esp),%ebx
    mov    %edi,0x10(%esi)
    cmp    %ebx,%edi
    jge    jump_68885
    mov    %ebx,0x10(%esi)
  jump_68885:
    cmp    0x10(%esi),%ebp
    jge    jump_6888d
    mov    %ebp,0x10(%esi)
  jump_6888d:
    mov    data_1225a0,%edi
    mov    0x20(%esi),%eax
    test   %edi,%edi
    je     jump_688aa
    shr    $0xc,%eax
    add    $0xfff,%eax
    and    $0xff000,%eax
    shl    $0xc,%eax
  jump_688aa:
    mov    0x8(%esi),%edx
    mov    %eax,(%edx)
    mov    0x10(%esi),%ebp
    mov    0x8(%esi),%edx
    add    %ebp,%eax
    mov    %eax,0x4(%edx)
    mov    0x8(%esi),%eax
    mov    (%eax),%edx
    shr    $0x10,%edx
    mov    (%eax),%eax
    shl    $0x4,%edx
    and    $0xffff,%eax
    add    %eax,%edx
    mov    0x8(%esi),%eax
    mov    %edx,0x2c(%esi)
    mov    0x4(%eax),%edx
    shr    $0x10,%edx
    mov    0x4(%eax),%eax
    shl    $0x4,%edx
    and    $0xffff,%eax
    add    %eax,%edx
    mov    0x1c(%esp),%eax
    mov    %edx,0x30(%esi)
    test   %eax,%eax
    je     jump_68971
    mov    0x60(%esi),%edx
    xor    %ecx,%ecx
    test   %edx,%edx
    jle    jump_6891c
    xor    %eax,%eax
  jump_68901:
    mov    0x5c(%esi),%ebx
    mov    0x890(%ebx,%eax,1),%edi
    mov    %edi,0x4(%ebx,%eax,1)
    inc    %ecx
    mov    0x60(%esi),%edi
    add    $0x894,%eax
    cmp    %edi,%ecx
    jl     jump_68901
  jump_6891c:
    push   %esi
    call   func_6f557
    add    $0x4,%esp
    push   $0x0
    push   %esi
    call   func_6f4c5
    add    $0x8,%esp
    push   $0x1
    push   %esi
    call   func_6f4c5
    mov    0x54(%esi),%ebp
    add    $0x8,%esp
    test   %ebp,%ebp
    jne    jump_68971
    mov    0x18(%esi),%ax
    mov    %ax,0x16(%esp)
    mov    0x14(%esi),%ax
    push   %ebp
    mov    %ax,0x18(%esp)
    lea    0x14(%esp),%eax
    push   %eax
    push   $0x401
    mov    (%esi),%eax
    push   %eax
    call   func_62607
    add    $0x10,%esp
    movl   $0x1,0x54(%esi)
  jump_68971:
    mov    $0x1,%eax
  jump_68976:
    add    $0x28,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_68980:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x24,%esp
    mov    0x34(%esp),%ebp
    mov    0x38(%esp),%esi
    mov    $0x6,%ecx
    mov    %esp,%edi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x0(%ebp),%eax
    mov    0xc(%eax),%eax
    cmpw   $0x0,0x10(%eax)
    jbe    jump_68a19
    mov    0xc(%eax),%ebx
    shr    $0x10,%ebx
    mov    0xc(%eax),%eax
    shl    $0x4,%ebx
    and    $0xffff,%eax
    add    %eax,%ebx
    movswl (%esp),%eax
    test   %eax,%eax
    jge    jump_689ca
    mov    (%ebx),%ax
    mov    %ax,(%esp)
  jump_689ca:
    movswl 0x2(%esp),%eax
    test   %eax,%eax
    jge    jump_689dc
    mov    0x2(%ebx),%ax
    mov    %ax,0x2(%esp)
  jump_689dc:
    movswl 0x4(%esp),%eax
    test   %eax,%eax
    jge    jump_689ee
    mov    0x4(%ebx),%ax
    mov    %ax,0x4(%esp)
  jump_689ee:
    movswl 0x6(%esp),%eax
    test   %eax,%eax
    jge    jump_68a00
    mov    0x6(%ebx),%ax
    mov    %ax,0x6(%esp)
  jump_68a00:
    xor    %eax,%eax
  jump_68a02:
    cmpl   $0x0,0x8(%esp,%eax,1)
    jge    jump_68a11
    mov    0x8(%ebx,%eax,1),%edx
    mov    %edx,0x8(%esp,%eax,1)
  jump_68a11:
    add    $0x4,%eax
    cmp    $0x10,%eax
    jne    jump_68a02
  jump_68a19:
    mov    0x0(%ebp),%esi
    mov    0xc(%esi),%esi
    mov    $0x6,%ecx
    lea    0x16(%esi),%edi
    mov    %esp,%esi
    mov    data_122580,%ebx
    rep movsl %ds:(%esi),%es:(%edi)
    test   %ebx,%ebx
    jne    jump_68a50
    push   %ebx
    lea    0x1c(%esp),%eax
    mov    $0x1,%ecx
    push   %eax
    mov    %cx,0x26(%esp)
    push   $0x304
    mov    0x0(%ebp),%esi
    push   %esi
    jmp    jump_68a6a
  jump_68a50:
    push   $0x0
    lea    0x1c(%esp),%eax
    mov    $0x3,%ebx
    push   %eax
    mov    %bx,0x26(%esp)
    push   $0x304
    mov    0x0(%ebp),%ecx
    push   %ecx
  jump_68a6a:
    call   func_62607
    add    $0x10,%esp
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_68a80:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%esi
    mov    0x54(%esi),%edx
    test   %edx,%edx
    je     jump_68ad4
    je     jump_68aab
    push   $0x0
    push   $0x0
    push   $0x402
    mov    (%esi),%ecx
    push   %ecx
    call   func_62607
    add    $0x10,%esp
    movl   $0x0,0x54(%esi)
  jump_68aab:
    push   %esi
    call   func_6f557
    add    $0x4,%esp
    push   $0x0
    push   %esi
    call   func_6f4c5
    add    $0x8,%esp
    push   $0x1
    push   %esi
    call   func_6f4c5
    add    $0x8,%esp
    push   $0xa
    call   func_6271d
    add    $0x4,%esp
  jump_68ad4:
    mov    0xc(%esi),%edi
    push   %edi
    call   func_630a4
    add    $0x4,%esp
    mov    0x24(%esi),%ebp
    push   %ebp
    mov    0x20(%esi),%eax
    push   %eax
    mov    0x28(%esi),%edx
    push   %edx
    call   func_61665
    imul   $0x894,0x60(%esi),%eax
    add    $0xc,%esp
    push   %eax
    mov    0x5c(%esi),%ecx
    push   %ecx
    call   func_615bf
    add    $0x8,%esp
    mov    0x4c(%esi),%edi
    push   %edi
    mov    0x50(%esi),%ebp
    push   %ebp
    call   func_615bf
    add    $0x8,%esp
    push   $0x88
    push   %esi
    call   func_615bf
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_68b30:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x44,%esp
    call   func_67f50
    push   $0x88
    call   func_6159e
    mov    %eax,%ebp
    add    $0x4,%esp
    test   %eax,%eax
    jne    jump_68b66
    mov    $0x9,%ecx
    mov    $data_12245c,%edi
    mov    $data_84ad4,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    jmp    jump_69137
  jump_68b66:
    mov    0x54(%esp),%edx
    mov    %edx,(%eax)
    mov    0x10(%edx),%ebx
    mov    %edx,%eax
    test   %ebx,%ebx
    je     jump_68ba1
    mov    $0x5,%ecx
    mov    $data_12245c,%edi
    mov    $data_84afc,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    push   $0x88
    mov    %ebp,%edi
    push   %edi
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_68ba1:
    lea    0x18(%esp),%edx
    push   %edx
    push   %ebx
    push   $0x301
    push   %eax
    call   func_62607
    add    $0x10,%esp
    xor    %eax,%eax
    xor    %edx,%edx
    mov    0x1e(%esp),%ax
    mov    0x18(%esp),%dx
    shl    $0x4,%eax
    add    %edx,%eax
    mov    %ebp,%edx
    mov    %eax,0x4(%edx)
    xor    %eax,%eax
    mov    0x1c(%esp),%ax
    mov    %eax,%edx
    xor    %eax,%eax
    shl    $0x4,%edx
    mov    0x1a(%esp),%ax
    add    %eax,%edx
    mov    %ebp,%eax
    mov    %edx,0x8(%eax)
    lea    0x8(%edx),%eax
    mov    %ebp,%edx
    movl   $0xffffffff,0x38(%edx)
    movl   $0x0,0x54(%edx)
    mov    $0x18,%ebx
    movl   $0x0,0x58(%edx)
    xor    %ecx,%ecx
    movl   $0x0,0x64(%edx)
    mov    0x58(%esp),%esi
    mov    %eax,0x34(%edx)
    mov    $0xffffffff,%edx
    mov    $data_1225a4,%eax
    mov    %ecx,0x3c(%esp)
    call   func_72280
    test   %esi,%esi
    je     jump_68c63
    mov    $0x6,%ecx
    mov    $data_1225a4,%edi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x58(%esp),%edi
    push   %edi
    mov    %ebp,%eax
    push   %eax
    call   func_68980
    add    $0x8,%esp
    test   %eax,%eax
    je     jump_68c63
    mov    $0x1,%edx
    mov    $0x6,%ecx
    mov    %esp,%edi
    mov    0x58(%esp),%esi
    mov    %edx,0x3c(%esp)
    rep movsl %ds:(%esi),%es:(%edi)
  jump_68c63:
    cmpl   $0x0,0x3c(%esp)
    jne    jump_68cb0
    mov    0x0(%ebp),%ecx
    push   %ecx
    call   func_63173
    mov    %eax,0x3c(%esp)
    add    $0x4,%esp
    test   %eax,%eax
    je     jump_68cb0
    mov    $0x6,%ecx
    push   %eax
    mov    $data_1225a4,%edi
    mov    %eax,%esi
    push   %ebp
    rep movsl %ds:(%esi),%es:(%edi)
    call   func_68980
    add    $0x8,%esp
    test   %eax,%eax
    je     jump_68cb0
    mov    $0x1,%eax
    mov    $0x6,%ecx
    mov    %esp,%edi
    mov    0x38(%esp),%esi
    mov    %eax,0x3c(%esp)
    rep movsl %ds:(%esi),%es:(%edi)
  jump_68cb0:
    mov    0x3c(%esp),%edx
    test   %edx,%edx
    jne    jump_68d5c
    cmpl   $0x1,data_12259c
    jne    jump_68d5c
    mov    %edx,0x40(%esp)
    mov    %edx,0x30(%esp)
    jmp    jump_68d44
  jump_68cd3:
    mov    0xc(%eax),%ecx
    shr    $0x10,%ecx
    mov    0xc(%eax),%eax
    shl    $0x4,%ecx
    and    $0xffff,%eax
    mov    0x30(%esp),%edx
    add    %ecx,%eax
    add    %eax,%edx
    mov    0x40(%esp),%ebx
    mov    %edx,0x34(%esp)
    test   %ebx,%ebx
    jne    jump_68d06
    mov    $0x6,%ecx
    mov    $data_1225a4,%edi
    mov    %edx,%esi
    rep movsl %ds:(%esi),%es:(%edi)
  jump_68d06:
    mov    0x34(%esp),%ecx
    push   %ecx
    push   %ebp
    call   func_68980
    add    $0x8,%esp
    test   %eax,%eax
    je     jump_68d30
    mov    $0x1,%eax
    mov    $0x6,%ecx
    mov    %esp,%edi
    mov    0x34(%esp),%esi
    mov    %eax,0x3c(%esp)
    rep movsl %ds:(%esi),%es:(%edi)
    jmp    jump_68d5c
  jump_68d30:
    mov    0x30(%esp),%esi
    mov    0x40(%esp),%edi
    add    $0x18,%esi
    inc    %edi
    mov    %esi,0x30(%esp)
    mov    %edi,0x40(%esp)
  jump_68d44:
    mov    0x0(%ebp),%eax
    mov    0xc(%eax),%eax
    xor    %ecx,%ecx
    mov    0x40(%esp),%edx
    mov    0x10(%eax),%cx
    cmp    %edx,%ecx
    jg     jump_68cd3
  jump_68d5c:
    cmpl   $0x0,0x3c(%esp)
    jne    jump_68d8d
    mov    $0x8,%ecx
    push   $0x88
    mov    $data_12245c,%edi
    mov    $data_84b14,%esi
    push   %ebp
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_68d8d:
    mov    $0x6,%ecx
    mov    %esp,%esi
    mov    $data_1225a4,%edi
    mov    data_1225a0,%ebx
    rep movsl %ds:(%esi),%es:(%edi)
    test   %ebx,%ebx
    je     jump_68dac
    mov    $0x2000,%esi
    jmp    jump_68db2
  jump_68dac:
    mov    data_122564,%esi
  jump_68db2:
    lea    0xf(%esi),%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x4,%edx
    sbb    %edx,%eax
    sar    $0x4,%eax
    movl   $0x0,0x28(%ebp)
    mov    %eax,%edi
  jump_68dcb:
    lea    0x24(%esp),%eax
    push   %eax
    lea    0x2c(%esp),%eax
    push   %eax
    lea    0x34(%esp),%eax
    push   %eax
    push   %edi
    call   func_615e0
    add    $0x10,%esp
    test   %eax,%eax
    jne    jump_68e0f
    mov    $0x8,%ecx
    push   $0x88
    mov    $data_12245c,%edi
    mov    $data_84b38,%esi
    push   %ebp
    rep movsl %ds:(%esi),%es:(%edi)
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_68e0f:
    mov    0x28(%ebp),%ecx
    test   %ecx,%ecx
    je     jump_68e27
    mov    0x24(%ebp),%eax
    push   %eax
    mov    0x20(%ebp),%edx
    push   %edx
    push   %ecx
    call   func_61665
    add    $0xc,%esp
  jump_68e27:
    mov    0x2c(%esp),%eax
    mov    %eax,0x28(%ebp)
    mov    0x28(%esp),%eax
    mov    %eax,0x20(%ebp)
    mov    0x24(%esp),%eax
    mov    %eax,0x24(%ebp)
    mov    0x28(%esp),%eax
    shr    $0xc,%eax
    mov    %eax,%edx
    add    %esi,%eax
    dec    %eax
    and    $0xf0000,%edx
    and    $0xf0000,%eax
    cmp    %eax,%edx
    jne    jump_68dcb
    push   %ebp
    call   func_68500
    add    $0x4,%esp
    test   %eax,%eax
    jne    jump_68e93
    mov    0x24(%ebp),%ebx
    push   %ebx
    mov    0x20(%ebp),%ecx
    push   %ecx
    mov    0x28(%ebp),%esi
    push   %esi
    call   func_61665
    add    $0xc,%esp
    push   $0x88
    push   %ebp
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_68e93:
    push   $0x0
    push   $0x0
    push   $0x305
    mov    0x0(%ebp),%ecx
    push   %ecx
    call   func_62607
    mov    0x0(%ebp),%eax
    movl   $0x1,0x14(%eax)
    mov    0x3c(%ebp),%ecx
    imul   0x40(%ebp),%ecx
    mov    0x10(%ebp),%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    0x40(%ebp),%edi
    mov    0x10(%ebp),%edx
    mov    %eax,0x48(%ebp)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %edi
    add    $0x10,%esp
    mov    %eax,0x44(%ebp)
    lea    0x0(,%eax,4),%eax
    push   %eax
    mov    %eax,0x4c(%ebp)
    call   func_6159e
    add    $0x4,%esp
    mov    %eax,0x50(%ebp)
    test   %eax,%eax
    jne    jump_68f61
    mov    $0x8,%ecx
    mov    $data_12245c,%edi
    mov    $data_84b58,%esi
    mov    0x54(%esp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    mov    0x18(%eax),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_68f17
    push   %ebx
    call   func_62580
    add    $0x4,%esp
  jump_68f17:
    push   $0x0
    push   $0x0
    push   $0x306
    mov    0x0(%ebp),%esi
    push   %esi
    call   func_62607
    mov    0x0(%ebp),%eax
    movl   $0x0,0x14(%eax)
    add    $0x10,%esp
    mov    0x24(%ebp),%edi
    push   %edi
    mov    0x20(%ebp),%eax
    push   %eax
    mov    0x28(%ebp),%edx
    push   %edx
    call   func_61665
    add    $0xc,%esp
    push   $0x88
    push   %ebp
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_68f61:
    mov    data_12256c,%eax
    mov    %eax,0x60(%ebp)
    imul   $0x894,%eax,%eax
    push   %eax
    call   func_6159e
    add    $0x4,%esp
    mov    %eax,0x5c(%ebp)
    test   %eax,%eax
    jne    jump_69005
    mov    $0x9,%ecx
    mov    $data_12245c,%edi
    mov    $data_84b7c,%esi
    mov    0x54(%esp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x18(%eax),%edi
    cmp    $0xffffffff,%edi
    je     jump_68fab
    push   %edi
    call   func_62580
    add    $0x4,%esp
  jump_68fab:
    push   $0x0
    push   $0x0
    push   $0x306
    mov    0x0(%ebp),%ebx
    push   %ebx
    call   func_62607
    mov    0x0(%ebp),%eax
    movl   $0x0,0x14(%eax)
    add    $0x10,%esp
    mov    0x24(%ebp),%ecx
    push   %ecx
    mov    0x20(%ebp),%esi
    push   %esi
    mov    0x28(%ebp),%edi
    push   %edi
    call   func_61665
    add    $0xc,%esp
    mov    0x4c(%ebp),%eax
    push   %eax
    mov    0x50(%ebp),%edx
    push   %edx
    call   func_615bf
    add    $0x8,%esp
    push   $0x88
    push   %ebp
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_69005:
    mov    0x60(%ebp),%esi
    xor    %ecx,%ecx
    test   %esi,%esi
    jle    jump_6902e
    xor    %eax,%eax
  jump_69010:
    mov    0x5c(%ebp),%edx
    movl   $0x1,0x4(%edx,%eax,1)
    mov    0x5c(%ebp),%edx
    mov    %ebp,(%edx,%eax,1)
    inc    %ecx
    mov    0x60(%ebp),%edi
    add    $0x894,%eax
    cmp    %edi,%ecx
    jl     jump_69010
  jump_6902e:
    push   $func_68310
    call   func_62ae8
    add    $0x4,%esp
    mov    %eax,0xc(%ebp)
    cmp    $0xffffffff,%eax
    jne    jump_690dd
    mov    $0x5,%ecx
    mov    $data_12245c,%edi
    mov    $data_84ba4,%esi
    mov    0x54(%esp),%eax
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0x18(%eax),%edi
    cmp    $0xffffffff,%edi
    je     jump_6906f
    push   %edi
    call   func_62580
    add    $0x4,%esp
  jump_6906f:
    push   $0x0
    push   $0x0
    push   $0x306
    mov    0x0(%ebp),%ebx
    push   %ebx
    call   func_62607
    mov    0x0(%ebp),%eax
    movl   $0x0,0x14(%eax)
    add    $0x10,%esp
    mov    0x24(%ebp),%ecx
    push   %ecx
    mov    0x20(%ebp),%esi
    push   %esi
    mov    0x28(%ebp),%edi
    push   %edi
    call   func_61665
    imul   $0x894,0x60(%ebp),%eax
    add    $0xc,%esp
    push   %eax
    mov    0x5c(%ebp),%ebx
    push   %ebx
    call   func_615bf
    add    $0x8,%esp
    mov    0x4c(%ebp),%ecx
    push   %ecx
    mov    0x50(%ebp),%esi
    push   %esi
    call   func_615bf
    add    $0x8,%esp
    push   $0x88
    push   %ebp
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_690dd:
    push   %ebp
    push   %eax
    call   func_62bd3
    add    $0x8,%esp
    mov    data_12255c,%ebx
    push   %ebx
    mov    0xc(%ebp),%ecx
    push   %ecx
    call   func_62d3c
    add    $0x8,%esp
    mov    0xc(%ebp),%esi
    push   %esi
    call   func_62f06
    mov    0x0(%ebp),%eax
    movl   $func_68a80,0x20(%eax)
    add    $0x4,%esp
    mov    0x0(%ebp),%eax
    push   %ebp
    mov    %ebp,0x24(%eax)
    call   func_6f557
    add    $0x4,%esp
    push   $0x0
    push   %ebp
    call   func_6f4c5
    add    $0x8,%esp
    push   $0x1
    push   %ebp
    call   func_6f4c5
    add    $0x8,%esp
    mov    %ebp,%eax
  jump_69137:
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_69140:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%edi
    push   $0x0
    push   %edi
    call   func_61d56
    mov    %eax,%esi
    add    $0x8,%esp
    test   %eax,%eax
    jne    jump_6916e
    mov    $0x5,%ecx
    mov    $data_12245c,%edi
    mov    $data_84bbc,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %esi
    ret
  jump_6916e:
    push   %edi
    call   func_61d0a
    add    $0x4,%esp
    push   %eax
    push   %esi
    call   func_63258
    add    $0x8,%esp
    mov    %eax,%edi
    mov    %esi,%eax
    call   *data_88654
    test   %edi,%edi
    jne    jump_69194
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_69194:
    mov    0x10(%esp),%edx
    push   %edx
    push   %edi
    call   func_68b30
    add    $0x8,%esp
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_691b1
    push   %edi
    call   func_6334b
    add    $0x4,%esp
  jump_691b1:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_69200:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x118,%esp
    push   $data_84bd4
    lea    0x4(%esp),%eax
    push   %eax
    call   func_6278f
    add    $0x8,%esp
    test   %eax,%eax
    jne    jump_69232
    mov    $0x7,%ecx
    mov    $data_12245c,%edi
    mov    $data_84bdc,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    jmp    jump_6924a
  jump_69232:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x84(%esp),%eax
    push   %eax
    call   func_63496
    add    $0x8,%esp
  jump_6924a:
    add    $0x118,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_692a0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%esi
    call   func_62388
    mov    0x60(%esi),%edx
    xor    %eax,%eax
    test   %edx,%edx
    jle    jump_692cb
    mov    0x5c(%esi),%edx
  jump_692b7:
    cmpl   $0x1,0x4(%edx)
    je     jump_692cb
    inc    %eax
    mov    0x60(%esi),%ebx
    add    $0x894,%edx
    cmp    %ebx,%eax
    jl     jump_692b7
  jump_692cb:
    cmp    0x60(%esi),%eax
    jne    jump_692ee
    mov    $0x5,%ecx
    mov    $data_12245c,%edi
    mov    $data_84bfc,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    call   func_6238d
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_692ee:
    imul   $0x894,%eax,%eax
    mov    0x5c(%esi),%esi
    add    %eax,%esi
    push   %esi
    call   func_6383b
    add    $0x4,%esp
    call   func_6238d
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_69310:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    je     jump_6931f
    movl   $0x1,0x4(%eax)
  jump_6931f:
    ret


/*----------------------------------------------------------------*/
func_69320:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    je     jump_693cc
    movl   $0x2,0x4(%eax)
    movl   $0x0,0x8(%eax)
    movl   $0x0,0x10(%eax)
    movl   $0x0,0x18(%eax)
    movl   $0x0,0x20(%eax)
    movl   $0x0,0xc(%eax)
    movl   $0x0,0x14(%eax)
    movl   $0x0,0x1c(%eax)
    movl   $0x1,0x24(%eax)
    movl   $0x0,0x28(%eax)
    movl   $0xfffffffe,0x2c(%eax)
    movl   $0x1,0x30(%eax)
    movl   $0x0,0x34(%eax)
    movl   $0x0,0x38(%eax)
    movl   $0x2b11,0x3c(%eax)
    movl   $0x40,0x44(%eax)
    movl   $0x0,0x848(%eax)
    movl   $0x0,0x84c(%eax)
    mov    data_122570,%edx
    movl   $0x0,0x850(%eax)
    push   %eax
    mov    %edx,0x40(%eax)
    call   func_68090
    add    $0x4,%esp
  jump_693cc:
    ret


/*----------------------------------------------------------------*/
func_693d0:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    jne    jump_693d9
    ret
  jump_693d9:
    mov    0x4(%eax),%eax
    ret


/*----------------------------------------------------------------*/
func_693e0:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    je     jump_69404
    movl   $0x0,0xc(%eax)
    mov    0x8(%esp),%edx
    movl   $0x0,0x14(%eax)
    mov    %edx,0x8(%eax)
    mov    0xc(%esp),%edx
    mov    %edx,0x10(%eax)
  jump_69404:
    ret


/*----------------------------------------------------------------*/
func_69410:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    0x8(%esp),%edx
    mov    0xc(%esp),%ebx
    test   %eax,%eax
    je     jump_69439
    cmp    0x34(%eax),%edx
    jne    jump_6942a
    cmp    0x38(%eax),%ebx
    je     jump_69439
  jump_6942a:
    mov    %edx,0x34(%eax)
    push   %eax
    mov    %ebx,0x38(%eax)
    call   func_68090
    add    $0x4,%esp
  jump_69439:
    ret


/*----------------------------------------------------------------*/
func_69450:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    je     jump_6945f
    mov    0x8(%esp),%edx
    mov    %edx,0x3c(%eax)
  jump_6945f:
    ret


/*----------------------------------------------------------------*/
func_69470:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    0x8(%esp),%edx
    test   %eax,%eax
    je     jump_6948d
    cmp    0x40(%eax),%edx
    je     jump_6948d
    push   %eax
    mov    %edx,0x40(%eax)
    call   func_68090
    add    $0x4,%esp
  jump_6948d:
    ret


/*----------------------------------------------------------------*/
func_694a0:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    0x8(%esp),%edx
    test   %eax,%eax
    je     jump_694bd
    cmp    0x44(%eax),%edx
    je     jump_694bd
    push   %eax
    mov    %edx,0x44(%eax)
    call   func_68090
    add    $0x4,%esp
  jump_694bd:
    ret


/*----------------------------------------------------------------*/
func_69520:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    je     jump_6952f
    mov    0x8(%esp),%edx
    mov    %edx,0x30(%eax)
  jump_6952f:
    ret


/*----------------------------------------------------------------*/
func_69530:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x1c(%esp),%esi
    test   %esi,%esi
    je     jump_695a2
    cmpl   $0x1,0x4(%esi)
    je     jump_695a2
    mov    0x28(%esi),%eax
    lea    0x0(,%eax,4),%eax
    add    %esi,%eax
    cmpl   $0x0,0x10(%eax)
    je     jump_695a2
    cmpl   $0x0,0x8(%eax)
    je     jump_695a2
    movl   $0x0,0x18(%eax)
    movl   $0x4,0x4(%esi)
    mov    (%esi),%esi
    mov    0x54(%esi),%edi
    test   %edi,%edi
    jne    jump_695a2
    mov    0x18(%esi),%ax
    mov    %ax,0x6(%esp)
    mov    0x14(%esi),%ax
    push   %edi
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    push   $0x401
    mov    (%esi),%ebp
    push   %ebp
    call   func_62607
    add    $0x10,%esp
    movl   $0x1,0x54(%esi)
  jump_695a2:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_695b0:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    je     jump_695c5
    cmpl   $0x4,0x4(%eax)
    jne    jump_695c5
    movl   $0x8,0x4(%eax)
  jump_695c5:
    ret


/*----------------------------------------------------------------*/
func_695f0:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%esi
    test   %esi,%esi
    je     jump_69634
    mov    0x4(%esi),%edx
    cmp    $0x1,%edx
    je     jump_69634
    cmp    $0x2,%edx
    je     jump_69634
    mov    0x84c(%esi),%ecx
    movl   $0x2,0x4(%esi)
    test   %ecx,%ecx
    je     jump_69621
    push   %esi
    call   *0x84c(%esi)
    add    $0x4,%esp
  jump_69621:
    cmpl   $0x0,0x850(%esi)
    je     jump_69634
    push   %esi
    call   *0x850(%esi)
    add    $0x4,%esp
  jump_69634:
    pop    %esi
    ret

vtable_696d8:
    .long   func_6970c
    .long   func_69713
    .long   func_69713
    .long   func_6971a


/*----------------------------------------------------------------*/
func_696f0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%ecx
    mov    0x14(%esp),%esi
    mov    0x18(%esp),%eax
    cmp    $0x3,%eax
    ja     jump_6971f
    jmp    *%cs:vtable_696d8(,%eax,4)


/*----------------------------------------------------------------*/
func_6970c:
/*----------------------------------------------------------------*/
    mov    $0x1,%edx
    jmp    jump_6971f


/*----------------------------------------------------------------*/
func_69713:
/*----------------------------------------------------------------*/
    mov    $0x2,%edx
    jmp    jump_6971f


/*----------------------------------------------------------------*/
func_6971a:
/*----------------------------------------------------------------*/
    mov    $0x4,%edx
  jump_6971f:
    mov    0x3c(%ecx),%ebx
    imul   0x40(%ecx),%ebx
    mov    0x10(%ecx),%ebp
    imul   %ebp,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    imul   %esi,%eax
    mov    %eax,%edx
    mov    0x14(%ecx),%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    mov    data_122574,%edx
    imul   %eax,%edx
    mov    %eax,%ebx
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0xf,%edx
    sbb    %edx,%eax
    sar    $0xf,%eax
    mov    0x14(%ecx),%edi
    add    %eax,%ebx
    cmp    %edi,%esi
    je     jump_6977a
    lea    0x0(,%esi,2),%eax
    cmp    %edi,%eax
    je     jump_6977a
    lea    0x0(,%esi,4),%esi
    cmp    %edi,%esi
    je     jump_6977a
    add    $0x4,%ebx
  jump_6977a:
    add    $0xff,%ebx
    xor    %bl,%bl
    mov    %ebx,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_69790:
/*----------------------------------------------------------------*/
    push   %esi
    sub    $0xc,%esp
    mov    0x14(%esp),%eax
    mov    0x20(%esp),%ebx
    test   %eax,%eax
    je     jump_6980f
    test   %ebx,%ebx
    sete   %dl
    movzbl %dl,%esi
    mov    %esi,%edx
    mov    0x18(%esp),%esi
    movl   $0x0,0x18(%eax,%esi,4)
    mov    %edx,0x20(%eax,%esi,4)
    mov    %ebx,0x10(%eax,%esi,4)
    mov    0x1c(%esp),%edx
    mov    %edx,0x8(%eax,%esi,4)
    test   %ebx,%ebx
    je     jump_6980f
    cmpl   $0x4,0x4(%eax)
    je     jump_6980f
    mov    (%eax),%esi
    movl   $0x4,0x4(%eax)
    mov    0x54(%esi),%ebx
    test   %ebx,%ebx
    jne    jump_6980f
    mov    0x18(%esi),%ax
    mov    %ax,0x6(%esp)
    mov    0x14(%esi),%ax
    push   %ebx
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    push   $0x401
    mov    (%esi),%ecx
    push   %ecx
    call   func_62607
    add    $0x10,%esp
    movl   $0x1,0x54(%esi)
  jump_6980f:
    add    $0xc,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_69820:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    jne    jump_6982e
    mov    $0xffffffff,%eax
    ret
  jump_6982e:
    mov    0x2c(%eax),%edx
    cmp    $0xfffffffe,%edx
    jb     jump_6985c
    jbe    jump_6983f
    cmp    $0xffffffff,%edx
    je     jump_69850
    jmp    jump_6985c
  jump_6983f:
    movl   $0x0,0x24(%eax)
    movl   $0xffffffff,0x2c(%eax)
    xor    %eax,%eax
    ret
  jump_69850:
    mov    0x28(%eax),%edx
    mov    %edx,0x2c(%eax)
    mov    $0x1,%eax
    ret
  jump_6985c:
    mov    0x2c(%eax),%edx
    mov    0x28(%eax),%ebx
    cmp    %ebx,%edx
    jne    jump_6986c
    mov    $0xffffffff,%eax
    ret
  jump_6986c:
    mov    %ebx,0x2c(%eax)
    mov    %ebx,%eax
    xor    $0x1,%al
    ret


/*----------------------------------------------------------------*/
func_69880:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_886e8
    je     jump_69934
    push   $func_69880
    push   $func_67f50
    call   func_616fa
    add    $0x8,%esp
    push   $0x80
    push   $data_88664
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_886e4
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_1221e0
    call   func_61736
    add    $0x8,%esp
    push   $0xc
    push   $data_1221cc
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_1221e8
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_1221ec
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_1221dc
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_1221e4
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_1221d8
    call   func_61736
    xor    %ebx,%ebx
    add    $0x8,%esp
    mov    %ebx,data_886e8
  jump_69934:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_69940:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_88770
    jne    jump_69a33
    push   $func_6cb70
    push   $func_69940
    call   func_61691
    add    $0x8,%esp
    push   $0x80
    push   $data_886ec
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_8876c
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1221f8
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1221fc
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_122200
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_122210
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_122204
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_122208
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1221f4
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_12220c
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_122218
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_122214
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1221f0
    call   func_6171f
    mov    $0x1,%ebx
    add    $0x8,%esp
    mov    %ebx,data_88770
  jump_69a33:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_69aa0:
/*----------------------------------------------------------------*/
    push   %esi
    sub    $0xc,%esp
    mov    0x14(%esp),%esi
    cmpl   $0x0,0x1a8(%esi)
    jle    jump_69ae8
    mov    0x1a8(%esi),%ax
    push   $0x0
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    push   $0x502
    mov    (%esi),%ebx
    push   %ebx
    call   func_62607
    movl   $0x0,0x1a8(%esi)
    add    $0x10,%esp
    movl   $0x0,0x1ac(%esi)
  jump_69ae8:
    add    $0xc,%esp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_69af0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0xc,%esp
    mov    0x18(%esp),%esi
    mov    0x1c(%esp),%eax
    and    $0xf0,%eax
    cmp    $0xb0,%eax
    jb     jump_69b26
    jbe    jump_69b3f
    cmp    $0xd0,%eax
    jb     jump_69b1d
    jbe    jump_69b46
    cmp    $0xe0,%eax
    je     jump_69b3f
    jmp    jump_69b4d
  jump_69b1d:
    cmp    $0xc0,%eax
    je     jump_69b46
    jmp    jump_69b4d
  jump_69b26:
    cmp    $0x90,%eax
    jb     jump_69b38
    jbe    jump_69b3f
    cmp    $0xa0,%eax
    je     jump_69b3f
    jmp    jump_69b4d
  jump_69b38:
    cmp    $0x80,%eax
    jne    jump_69b4d
  jump_69b3f:
    mov    $0x3,%eax
    jmp    jump_69b4f
  jump_69b46:
    mov    $0x2,%eax
    jmp    jump_69b4f
  jump_69b4d:
    xor    %eax,%eax
  jump_69b4f:
    mov    0x1ac(%esi),%edx
    mov    %eax,%edi
    add    %edx,%eax
    cmp    $0x200,%eax
    jbe    jump_69ba0
    cmpl   $0x0,0x1a8(%esi)
    jle    jump_69ba0
    mov    0x1a8(%esi),%ax
    push   $0x0
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    push   $0x502
    mov    (%esi),%ecx
    push   %ecx
    call   func_62607
    movl   $0x0,0x1a8(%esi)
    add    $0x10,%esp
    movl   $0x0,0x1ac(%esi)
  jump_69ba0:
    mov    0x1ac(%esi),%eax
    mov    0x8(%esi),%edx
    lea    0x1(%eax),%ecx
    mov    0x1c(%esp),%bl
    mov    %ecx,0x1ac(%esi)
    mov    %bl,0x100(%edx,%eax,1)
    mov    0x1ac(%esi),%eax
    mov    0x8(%esi),%edx
    lea    0x1(%eax),%ecx
    mov    0x20(%esp),%bl
    mov    %ecx,0x1ac(%esi)
    mov    %bl,0x100(%edx,%eax,1)
    cmp    $0x3,%edi
    jne    jump_69bfc
    mov    0x1ac(%esi),%eax
    mov    0x8(%esi),%edx
    lea    0x1(%eax),%ecx
    mov    0x24(%esp),%bl
    mov    %ecx,0x1ac(%esi)
    mov    %bl,0x100(%edx,%eax,1)
  jump_69bfc:
    incl   0x1a8(%esi)
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_69cd0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%edi
    mov    $0x4,%eax
    xor    %ecx,%ecx
  jump_69cdd:
    mov    (%edi),%edx
    xor    %ebx,%ebx
    mov    (%edx),%bl
    shl    $0x7,%ecx
    mov    %ebx,%esi
    inc    %edx
    and    $0x7f,%esi
    mov    %edx,(%edi)
    or     %esi,%ecx
    test   $0x80,%bl
    je     jump_69cf8
    dec    %eax
    jne    jump_69cdd
  jump_69cf8:
    mov    %ecx,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_69fe0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%esi
    mov    0x10(%esp),%ecx
    mov    0x14(%esp),%eax
    mov    0x18(%esp),%edx
    mov    %ecx,%edi
    and    $0xf,%ecx
    lea    0x0(,%ecx,4),%ebx
    and    $0xf0,%edi
    add    %esi,%ebx
    cmp    $0xc0,%edi
    jb     jump_6a01b
    jbe    jump_6a026
    cmp    $0xe0,%edi
    je     jump_6a030
    pop    %edi
    pop    %esi
    ret
  jump_6a01b:
    cmp    $0xb0,%edi
    je     jump_6a045
    pop    %edi
    pop    %esi
    ret
  jump_6a026:
    and    $0xff,%eax
    mov    %eax,(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6a030:
    and    $0xff,%eax
    mov    %eax,0x40(%ebx)
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x80(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6a045:
    cmp    $0x5b,%eax
    jb     jump_6a093
    jbe    jump_6a16b
    cmp    $0x70,%eax
    jb     jump_6a07e
    jbe    jump_6a0f2
    cmp    $0x73,%eax
    jb     jump_6a072
    jbe    jump_6a10c
    cmp    $0x77,%eax
    je     jump_6a119
    pop    %edi
    pop    %esi
    ret
  jump_6a072:
    cmp    $0x72,%eax
    je     jump_6a0ff
    pop    %edi
    pop    %esi
    ret
  jump_6a07e:
    cmp    $0x6e,%eax
    jb     jump_6a087
    jbe    jump_6a0d8
    jmp    jump_6a0e5
  jump_6a087:
    cmp    $0x5d,%eax
    je     jump_6a178
    pop    %edi
    pop    %esi
    ret
  jump_6a093:
    cmp    $0x7,%eax
    jb     jump_6a0c1
    jbe    jump_6a134
    cmp    $0xb,%eax
    jb     jump_6a0b5
    jbe    jump_6a150
    cmp    $0x40,%eax
    je     jump_6a15e
    pop    %edi
    pop    %esi
    ret
  jump_6a0b5:
    cmp    $0xa,%eax
    je     jump_6a142
    pop    %edi
    pop    %esi
    ret
  jump_6a0c1:
    cmp    $0x1,%eax
    jb     jump_6a190
    jbe    jump_6a126
    cmp    $0x6,%eax
    je     jump_6a185
    pop    %edi
    pop    %esi
    ret
  jump_6a0d8:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0xc0(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6a0e5:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x100(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6a0f2:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x140(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6a0ff:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x180(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6a10c:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x1c0(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6a119:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x200(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6a126:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x240(%esi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6a134:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x280(%esi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6a142:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x2c0(%esi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6a150:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x300(%esi,%ecx,4)
    pop    %edi
    pop    %esi
    ret
  jump_6a15e:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x340(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6a16b:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x380(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6a178:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x3c0(%ebx)
    pop    %edi
    pop    %esi
    ret
  jump_6a185:
    xor    %eax,%eax
    mov    %dl,%al
    mov    %eax,0x400(%esi,%ecx,4)
  jump_6a190:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6a1a0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    0x24(%esp),%esi
    mov    0x28(%esp),%eax
    mov    0x2c(%esp),%ebp
    mov    0x30(%esp),%edi
    mov    (%esi),%edx
    mov    %edx,0xc(%esp)
    mov    %eax,%edx
    and    $0xf,%eax
    and    $0xf0,%edx
    mov    %eax,0x10(%esp)
    mov    0x90(%esi,%eax,4),%eax
    mov    %edx,0x8(%esp)
    mov    %eax,0x4(%esp)
    cmp    $0xb0,%edx
    je     jump_6a1f2
    cmp    $0xc0,%edx
    je     jump_6a1f2
    cmp    $0xe0,%edx
    jne    jump_6a20e
  jump_6a1f2:
    push   %edi
    mov    0xc(%esp),%eax
    mov    0x14(%esp),%edx
    push   %ebp
    or     %edx,%eax
    push   %eax
    lea    0xd0(%esi),%eax
    push   %eax
    call   func_69fe0
    add    $0x10,%esp
  jump_6a20e:
    cmpl   $0xb0,0x8(%esp)
    jne    jump_6a354
    cmpl   $0x0,0x34(%esp)
    je     jump_6a247
    mov    0x10(%esp),%eax
    lea    0x0(,%eax,4),%eax
    add    %esi,%eax
    mov    0x290(%eax),%edx
    cmp    $0xffffffff,%edx
    je     jump_6a247
    mov    %edx,%edi
    movl   $0xffffffff,0x290(%eax)
  jump_6a247:
    mov    0x10(%esp),%edx
    lea    0x0(,%edx,4),%edx
    mov    0x4(%esp),%eax
    lea    (%esi,%edx,1),%ebx
    lea    0x0(,%eax,4),%eax
    mov    %ebx,(%esp)
    mov    0xc(%esp),%ebx
    add    %ebx,%eax
    cmp    $0x6f,%ebp
    jb     jump_6a2a6
    jbe    jump_6a4c6
    cmp    $0x75,%ebp
    jb     jump_6a296
    jbe    jump_6a43f
    cmp    $0x76,%ebp
    jbe    jump_6a3c6
    cmp    $0x77,%ebp
    je     jump_6a3ed
    jmp    jump_6a354
  jump_6a296:
    cmp    $0x73,%ebp
    jb     jump_6a354
    jbe    jump_6a2d4
    jmp    jump_6a40b
  jump_6a2a6:
    cmp    $0x6c,%ebp
    jb     jump_6a2bb
    jbe    jump_6a2ed
    cmp    $0x6d,%ebp
    jbe    jump_6a4b5
    jmp    jump_6a4f1
  jump_6a2bb:
    cmp    $0x6,%ebp
    jb     jump_6a354
    jbe    jump_6a312
    cmp    $0x7,%ebp
    je     jump_6a3a0
    jmp    jump_6a354
  jump_6a2d4:
    mov    0x18(%esi),%eax
    mov    (%edi,%eax,1),%al
    mov    (%esp),%edx
    and    $0xff,%eax
    mov    %eax,0x290(%edx)
    jmp    jump_6a354
  jump_6a2ed:
    cmpl   $0x0,0x1c(%esi)
    je     jump_6a354
    push   %edi
    mov    0x14(%esp),%edx
    push   %edx
    push   %esi
    call   *0x1c(%esi)
    add    $0xc,%esp
    mov    (%esp),%edx
    mov    %eax,0x290(%edx)
    jmp    jump_6a354
  jump_6a312:
    push   $0x0
    push   $0x0
    mov    0x18(%esp),%eax
    push   $0x64
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
    push   $0x0
    push   $0x0
    mov    0x18(%esp),%eax
    push   $0x65
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
    push   $0x0
    push   $0x0
    mov    0x18(%esp),%eax
    push   $0x26
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a354:
    mov    0x4(%esp),%eax
    mov    0xc(%esp),%ebx
    lea    0x0(,%eax,4),%eax
    add    %ebx,%eax
    cmpl   $0x1,0x20(%eax)
    jne    jump_6a374
    cmp    0x60(%eax),%esi
    jne    jump_6a5db
  jump_6a374:
    mov    0x4(%esp),%eax
    mov    0xc(%esp),%ebx
    lea    0x0(,%eax,4),%eax
    mov    0x8(%esp),%ecx
    add    %ebx,%eax
    cmp    $0x90,%ecx
    jne    jump_6a575
    incl   0x160(%eax)
    jmp    jump_6a583
  jump_6a3a0:
    mov    0x34(%esi),%edx
    imul   %edi,%edx
    mov    $0x7f,%edi
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %edi
    mov    %eax,%edi
    cmp    $0x7f,%eax
    jle    jump_6a3be
    mov    $0x7f,%edi
  jump_6a3be:
    test   %edi,%edi
    jge    jump_6a354
    xor    %edi,%edi
    jmp    jump_6a354
  jump_6a3c6:
    movl   $0x0,0x58(%esi)
    movl   $0x0,0x68(%esi)
    mov    0x64(%esi),%eax
    mov    0x68(%esi),%ebp
    movl   $0x0,0x5c(%esi)
    sub    %eax,%ebp
    mov    %ebp,0x68(%esi)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6a3ed:
    cmpl   $0x0,0x20(%esi)
    je     jump_6a5db
    push   %edi
    mov    0x14(%esp),%edi
    push   %edi
    push   %esi
    call   *0x20(%esi)
    add    $0xc,%esp
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6a40b:
    mov    %esi,%edx
    xor    %eax,%eax
  jump_6a40f:
    cmpl   $0xffffffff,0x80(%edx)
    je     jump_6a421
    inc    %eax
    add    $0x4,%edx
    cmp    $0x4,%eax
    jl     jump_6a40f
  jump_6a421:
    cmp    $0x4,%eax
    je     jump_6a5db
    mov    %edi,0x80(%esi,%eax,4)
    mov    0x14(%esi),%edx
    mov    %edx,0x70(%esi,%eax,4)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6a43f:
    cmp    $0x40,%edi
    jl     jump_6a5db
    mov    $0x3,%eax
    lea    0xc(%esi),%edx
  jump_6a450:
    cmpl   $0xffffffff,0x80(%edx)
    jne    jump_6a461
    dec    %eax
    sub    $0x4,%edx
    test   %eax,%eax
    jge    jump_6a450
  jump_6a461:
    cmp    $0xffffffff,%eax
    je     jump_6a5db
    lea    0x0(,%eax,4),%eax
    add    %esi,%eax
    mov    0x80(%eax),%ecx
    test   %ecx,%ecx
    jne    jump_6a48a
    mov    0x70(%eax),%eax
    mov    %eax,0x14(%esi)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6a48a:
    lea    -0x1(%ecx),%edi
    mov    %edi,0x80(%eax)
    test   %edi,%edi
    je     jump_6a4a4
    mov    0x70(%eax),%eax
    mov    %eax,0x14(%esi)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6a4a4:
    movl   $0xffffffff,0x80(%eax)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6a4b5:
    push   %edi
    push   %esi
    call   func_660fa
    add    $0x8,%esp
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6a4c6:
    cmpl   $0x1,0x20(%eax)
    je     jump_6a5db
    cmp    $0x40,%edi
    jge    jump_6a4e3
    movl   $0x0,0x20(%eax)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6a4e3:
    movl   $0x2,0x20(%eax)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6a4f1:
    mov    0x10(%esp),%ebp
    inc    %ebp
    cmp    $0x40,%edi
    jl     jump_6a538
    cmpl   $0x1,0x20(%eax)
    je     jump_6a5db
    push   %ebx
    call   func_667f6
    mov    %eax,%edi
    add    $0x4,%esp
    test   %eax,%eax
    je     jump_6a5db
    push   %eax
    push   %ebp
    push   %esi
    call   func_66951
    add    $0xc,%esp
    lea    0x0(,%edi,4),%edi
    add    0xc(%esp),%edi
    mov    %esi,0x5c(%edi)
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6a538:
    cmpl   $0x1,0x20(%eax)
    jne    jump_6a5db
    mov    0x10(%esp),%ecx
    push   %ecx
    push   %esi
    call   func_6a6c0
    add    $0x8,%esp
    mov    0x4(%esp),%eax
    inc    %eax
    push   %eax
    mov    0x10(%esp),%edi
    push   %edi
    call   func_668db
    add    $0x8,%esp
    push   %ebp
    push   %ebp
    push   %esi
    call   func_66951
    add    $0xc,%esp
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6a575:
    cmp    $0x80,%ecx
    jne    jump_6a583
    decl   0x160(%eax)
  jump_6a583:
    mov    0x4(%esp),%eax
    mov    0xc(%esp),%edx
    lea    0x0(,%eax,4),%eax
    add    %edx,%eax
    mov    %esi,0xe0(%eax)
    cmpl   $0x0,0x1a0(%edx)
    je     jump_6a5c1
    push   %edi
    mov    0xc(%esp),%eax
    mov    0x8(%esp),%ecx
    push   %ebp
    or     %ecx,%eax
    push   %eax
    push   %esi
    mov    %edx,%eax
    push   %edx
    call   *0x1a0(%eax)
    add    $0x14,%esp
    test   %eax,%eax
    jne    jump_6a5db
  jump_6a5c1:
    push   %edi
    mov    0xc(%esp),%eax
    mov    0x8(%esp),%edi
    push   %ebp
    or     %edi,%eax
    push   %eax
    mov    0x18(%esp),%ebp
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
  jump_6a5db:
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6a5f0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x10,%esp
    mov    0x20(%esp),%ebp
    mov    %ebp,%esi
    lea    0x80(%ebp),%eax
    xor    %edi,%edi
    mov    %eax,0xc(%esp)
    lea    0x0(%eax),%eax
    mov    %edx,%edx
  jump_6a610:
    mov    0x514(%esi),%eax
    cmp    $0xffffffff,%eax
    je     jump_6a640
    push   $0x0
    push   $0x0
    mov    0x594(%esi),%edx
    push   %edx
    or     $0x80,%al
    push   %eax
    push   %ebp
    inc    %edi
    call   func_6a1a0
    add    $0x14,%esp
    movl   $0xffffffff,0x514(%esi)
    lea    0x0(%eax),%eax
  jump_6a640:
    mov    0xc(%esp),%edx
    add    $0x4,%esi
    cmp    %edx,%esi
    jne    jump_6a610
    mov    0x0(%ebp),%esi
    movl   $0x0,0x510(%ebp)
    cmpl   $0x0,0x1a8(%esi)
    jle    jump_6a698
    mov    0x1a8(%esi),%ax
    push   $0x0
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    push   $0x502
    mov    (%esi),%ecx
    push   %ecx
    call   func_62607
    movl   $0x0,0x1a8(%esi)
    add    $0x10,%esp
    movl   $0x0,0x1ac(%esi)
  jump_6a698:
    test   %edi,%edi
    je     jump_6a6af
    call   func_6278a
    test   %eax,%eax
    jne    jump_6a6af
    push   $0x3
    call   func_6271d
    add    $0x4,%esp
  jump_6a6af:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6a6c0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x1c(%esp),%edi
    mov    %edi,%esi
    lea    0x80(%edi),%ebp
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
    mov    %eax,%eax
  jump_6a6e0:
    mov    0x20(%esp),%ecx
    cmp    0x514(%esi),%ecx
    jne    jump_6a720
    push   $0x0
    push   $0x0
    mov    0x594(%esi),%eax
    push   %eax
    mov    0x514(%esi),%eax
    or     $0x80,%al
    push   %eax
    push   %edi
    call   func_6a1a0
    add    $0x14,%esp
    movl   $0xffffffff,0x514(%esi)
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
    nop
  jump_6a720:
    add    $0x4,%esi
    cmp    %ebp,%esi
    jne    jump_6a6e0
    mov    (%edi),%esi
    cmpl   $0x0,0x1a8(%esi)
    jle    jump_6a769
    mov    0x1a8(%esi),%ax
    push   $0x0
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    push   $0x502
    mov    (%esi),%ebx
    push   %ebx
    call   func_62607
    movl   $0x0,0x1a8(%esi)
    add    $0x10,%esp
    movl   $0x0,0x1ac(%esi)
  jump_6a769:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6a770:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%esi
    mov    0x14(%esp),%edi
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x250(%eax),%edx
    cmp    $0xffffffff,%edx
    je     jump_6a7a2
    push   $0x0
    push   %edx
    mov    %edi,%eax
    push   $0x72
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a7a2:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0xd0(%eax),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_6a7c9
    push   $0x0
    push   $0x0
    mov    %edi,%eax
    push   %ecx
    or     $0xc0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a7c9:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x150(%eax),%edx
    cmp    $0xffffffff,%edx
    je     jump_6a7f5
    push   $0x0
    push   %edx
    mov    0x110(%eax),%ecx
    mov    %edi,%eax
    push   %ecx
    or     $0xe0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a7f5:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x1d0(%eax),%ebp
    cmp    $0xffffffff,%ebp
    je     jump_6a81c
    push   $0x0
    push   %ebp
    mov    %edi,%eax
    push   $0x6f
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a81c:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x210(%eax),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6a843
    push   $0x0
    push   %ebx
    mov    %edi,%eax
    push   $0x70
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a843:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x310(%eax),%ebp
    cmp    $0xffffffff,%ebp
    je     jump_6a86a
    push   $0x0
    push   %ebp
    mov    %edi,%eax
    push   $0x1
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a86a:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x350(%eax),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6a891
    push   $0x0
    push   %ebx
    mov    %edi,%eax
    push   $0x7
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a891:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x390(%eax),%ebp
    cmp    $0xffffffff,%ebp
    je     jump_6a8b8
    push   $0x0
    push   %ebp
    mov    %edi,%eax
    push   $0xa
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a8b8:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x3d0(%eax),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6a8df
    push   $0x0
    push   %ebx
    mov    %edi,%eax
    push   $0xb
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a8df:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x410(%eax),%ebp
    cmp    $0xffffffff,%ebp
    je     jump_6a906
    push   $0x0
    push   %ebp
    mov    %edi,%eax
    push   $0x40
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a906:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x450(%eax),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6a92d
    push   $0x0
    push   %ebx
    mov    %edi,%eax
    push   $0x5b
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a92d:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x490(%eax),%ebp
    cmp    $0xffffffff,%ebp
    je     jump_6a954
    push   $0x0
    push   %ebp
    mov    %edi,%eax
    push   $0x5d
    or     $0xb0,%al
    push   %eax
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a954:
    lea    0x0(,%edi,4),%eax
    add    %esi,%eax
    mov    0x4d0(%eax),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6a97c
    push   $0x0
    push   %ebx
    push   $0x6
    or     $0xb0,%di
    push   %edi
    push   %esi
    call   func_6a1a0
    add    $0x14,%esp
  jump_6a97c:
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6a980:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%ecx
    mov    %ecx,%edx
    xor    %eax,%eax
    lea    0x0(%eax),%eax
    mov    %edx,%edx
  jump_6a990:
    mov    %eax,0x90(%edx)
    inc    %eax
    add    $0x4,%edx
    cmp    $0x10,%eax
    jl     jump_6a990
    mov    $0x440,%ebx
    mov    $0xffffffff,%edx
    lea    0xd0(%ecx),%eax
    call   func_72280
    mov    %ecx,%eax
    lea    0x10(%ecx),%edx
  jump_6a9b9:
    add    $0x4,%eax
    movl   $0xffffffff,0x7c(%eax)
    cmp    %edx,%eax
    jne    jump_6a9b9
    mov    %ecx,%eax
    lea    0x80(%ecx),%edx
    nop
  jump_6a9d0:
    add    $0x4,%eax
    movl   $0xffffffff,0x510(%eax)
    cmp    %edx,%eax
    jne    jump_6a9d0
    movl   $0x0,0x510(%ecx)
    movl   $0x0,0x2c(%ecx)
    movl   $0x0,0x58(%ecx)
    movl   $0xffffffff,0x5c(%ecx)
    movl   $0x0,0x68(%ecx)
    movl   $0x0,0x64(%ecx)
    movl   $0x4,0x60(%ecx)
    movl   $0x7a1200,0x6c(%ecx)
    movl   $0x0,0x30(%ecx)
    movl   $0x1,0x28(%ecx)
    ret


/*----------------------------------------------------------------*/
func_6aa50:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%ebp
    mov    %ebp,%esi
    xor    %edi,%edi
    lea    0x0(%eax),%eax
    mov    %ecx,%ecx
  jump_6aa60:
    mov    0x350(%esi),%edx
    cmp    $0xffffffff,%edx
    je     jump_6aa80
    push   $0x0
    push   %edx
    mov    %edi,%eax
    push   $0x7
    or     $0xb0,%al
    push   %eax
    push   %ebp
    call   func_6a1a0
    add    $0x14,%esp
    mov    %eax,%eax
  jump_6aa80:
    inc    %edi
    add    $0x4,%esi
    cmp    $0x10,%edi
    jl     jump_6aa60
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6aa90:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x1c(%esp),%eax
    cmpl   $0x0,0x14(%eax)
    jne    jump_6b1b8
    cmpl   $0x0,data_8876c
    jne    jump_6b1b8
    mov    0x1c(%eax),%eax
    mov    $0x1,%ecx
    mov    %eax,data_122200
    mov    0x1c(%esp),%eax
    mov    %ecx,data_8876c
    mov    0x18(%eax),%eax
    mov    data_122200,%esi
    mov    %eax,data_1221f8
    test   %esi,%esi
    je     jump_6b164
  jump_6aade:
    mov    data_1221f8,%eax
    cmpl   $0x4,0x4(%eax)
    jne    jump_6b13f
    mov    0x30(%eax),%edx
    mov    0x44(%eax),%ebx
    mov    0x54(%eax),%ecx
    xor    %ebp,%ebp
    inc    %edx
    add    %ebx,%ecx
    mov    %edx,0x30(%eax)
    mov    %ebp,data_122210
    mov    %ecx,0x54(%eax)
  jump_6ab07:
    mov    data_1221f8,%eax
    mov    0x54(%eax),%esi
    cmp    $0x64,%esi
    jl     jump_6b079
    lea    -0x64(%esi),%ebx
    mov    0x510(%eax),%ecx
    mov    %ebx,0x54(%eax)
    test   %ecx,%ecx
    jle    jump_6abb8
    xor    %esi,%esi
    mov    %esi,data_1221fc
    mov    $0xffffffff,%edi
  jump_6ab39:
    mov    data_1221fc,%eax
    mov    data_1221f8,%ebx
    lea    0x0(,%eax,4),%eax
    add    %ebx,%eax
    cmp    0x514(%eax),%edi
    je     jump_6aba6
    mov    0x614(%eax),%ebp
    add    %edi,%ebp
    mov    %ebp,0x614(%eax)
    cmp    %ebp,%esi
    jl     jump_6aba6
    push   %esi
    push   %esi
    mov    0x594(%eax),%ecx
    mov    0x514(%eax),%eax
    push   %ecx
    or     $0x80,%al
    push   %eax
    push   %ebx
    call   func_6a1a0
    mov    data_1221f8,%eax
    mov    data_1221fc,%ebx
    mov    %edi,0x514(%eax,%ebx,4)
    mov    0x510(%eax),%ebp
    add    %edi,%ebp
    add    $0x14,%esp
    mov    %ebp,0x510(%eax)
    cmp    %ebp,%esi
    je     jump_6abb8
  jump_6aba6:
    mov    data_1221fc,%ebx
    inc    %ebx
    mov    %ebx,data_1221fc
    cmp    $0x20,%ebx
    jl     jump_6ab39
  jump_6abb8:
    mov    data_1221f8,%eax
    mov    0x2c(%eax),%esi
    dec    %esi
    mov    %esi,0x2c(%eax)
    test   %esi,%esi
    jg     jump_6b025
  jump_6abcc:
    mov    data_1221f8,%esi
    mov    0x14(%esi),%ebx
    xor    %eax,%eax
    mov    (%ebx),%al
    mov    %eax,data_12220c
    cmp    $0x80,%eax
    jb     jump_6b003
    cmpl   $0x0,data_122210
    jne    jump_6b003
    mov    data_12220c,%eax
    cmp    $0xf7,%eax
    jb     jump_6ac14
    jbe    jump_6adde
    cmp    $0xff,%eax
    je     jump_6ac24
    jmp    jump_6ae72
  jump_6ac14:
    cmp    $0xf0,%eax
    je     jump_6adde
    jmp    jump_6ae72
  jump_6ac24:
    add    $0x2,%ebx
    xor    %eax,%eax
    add    $0x14,%esi
    mov    -0x1(%ebx),%al
    push   %esi
    mov    %eax,data_122218
    mov    %ebx,(%esi)
    call   func_69cd0
    mov    %eax,data_122214
    mov    data_122218,%eax
    add    $0x4,%esp
    cmp    $0x51,%eax
    jb     jump_6ac62
    jbe    jump_6acfd
    cmp    $0x58,%eax
    je     jump_6ad40
    jmp    jump_6adcb
  jump_6ac62:
    cmp    $0x2f,%eax
    jne    jump_6adcb
    movl   $0x1,data_122210
    mov    data_1221f8,%eax
    mov    0x28(%eax),%edx
    test   %edx,%edx
    je     jump_6ac8b
    lea    -0x1(%edx),%ebx
    mov    %ebx,0x28(%eax)
    test   %ebx,%ebx
    je     jump_6acc1
  jump_6ac8b:
    mov    data_1221f8,%eax
    movl   $0x0,0x58(%eax)
    movl   $0xffffffff,0x5c(%eax)
    mov    0x10(%eax),%ebx
    movl   $0x0,0x68(%eax)
    add    $0x8,%ebx
    mov    %ebx,0x14(%eax)
    mov    data_1221f8,%eax
    mov    data_122214,%ebx
    add    %ebx,0x14(%eax)
    jmp    jump_6abcc
  jump_6acc1:
    push   %eax
    call   func_65276
    mov    data_1221f8,%eax
    add    $0x4,%esp
    mov    0x24(%eax),%esi
    movl   $0x2,0x4(%eax)
    test   %esi,%esi
    je     jump_6adcb
    mov    %eax,%ebx
    push   %eax
    call   *0x24(%ebx)
    add    $0x4,%esp
    mov    data_1221f8,%eax
    mov    data_122214,%ebx
    add    %ebx,0x14(%eax)
    jmp    jump_6abcc
  jump_6acfd:
    mov    data_1221f8,%ebx
    mov    0x14(%ebx),%eax
    movzbl 0x1(%eax),%edi
    movzbl (%eax),%esi
    shl    $0x8,%edi
    shl    $0x10,%esi
    mov    0x2(%eax),%al
    add    %edi,%esi
    and    $0xff,%eax
    add    %eax,%esi
    mov    %esi,%eax
    shl    $0x4,%eax
    mov    %esi,data_122208
    mov    %eax,0x6c(%ebx)
    mov    data_1221f8,%eax
    mov    data_122214,%ebx
    add    %ebx,0x14(%eax)
    jmp    jump_6abcc
  jump_6ad40:
    mov    data_1221f8,%ebx
    mov    0x14(%ebx),%eax
    mov    (%eax),%al
    and    $0xff,%eax
    mov    %eax,0x60(%ebx)
    mov    0x14(%ebx),%eax
    mov    0x1(%eax),%al
    and    $0xff,%eax
    sub    $0x2,%eax
    mov    %eax,data_122208
    mov    $0xf42400,%eax
    mov    %eax,%edx
    mov    data_122584,%esi
    sar    $0x1f,%edx
    idiv   %esi
    mov    data_122208,%ecx
    mov    %eax,data_122204
    test   %ecx,%ecx
    jge    jump_6ad9b
    mov    %ecx,%esi
    neg    %esi
    mov    %esi,data_122208
    mov    data_122208,%cl
    sar    %cl,%eax
    jmp    jump_6ada3
  jump_6ad9b:
    mov    data_122208,%cl
    shl    %cl,%eax
  jump_6ada3:
    mov    %eax,0x64(%ebx)
    mov    data_1221f8,%eax
    movl   $0x0,0x68(%eax)
    movl   $0x0,0x58(%eax)
    mov    0x64(%eax),%ebx
    mov    0x5c(%eax),%ebp
    mov    0x68(%eax),%edi
    inc    %ebp
    sub    %ebx,%edi
    mov    %ebp,0x5c(%eax)
    mov    %edi,0x68(%eax)
  jump_6adcb:
    mov    data_1221f8,%eax
    mov    data_122214,%ebx
    add    %ebx,0x14(%eax)
    jmp    jump_6abcc
  jump_6adde:
    mov    data_1221f8,%eax
    mov    0x14(%eax),%eax
    inc    %eax
    push   $data_1221f0
    mov    %eax,data_1221f0
    call   func_69cd0
    mov    data_1221f8,%esi
    mov    %eax,%ebx
    add    $0x4,%esp
    mov    data_1221f0,%eax
    mov    0x14(%esi),%edi
    mov    0x1c(%esp),%esi
    sub    %edi,%eax
    mov    %edi,%ebp
    add    %eax,%ebx
    push   %esi
    mov    %ebx,data_122214
    mov    %ebx,%edi
    call   func_69aa0
    add    $0x4,%esp
    cmp    $0x200,%edi
    jbe    jump_6ae33
    mov    $0x200,%ebx
    jmp    jump_6ae35
  jump_6ae33:
    mov    %edi,%ebx
  jump_6ae35:
    mov    0x8(%esi),%eax
    mov    %ebp,%edx
    add    $0x100,%eax
    call   func_74101
    mov    0x1a8(%esi),%edx
    inc    %edx
    push   %esi
    mov    %edx,0x1a8(%esi)
    call   func_69aa0
    mov    data_1221f8,%eax
    mov    data_122214,%ebx
    mov    0x14(%eax),%ecx
    add    %ebx,%ecx
    add    $0x4,%esp
    mov    %ecx,0x14(%eax)
    jmp    jump_6abcc
  jump_6ae72:
    mov    data_12220c,%eax
    and    $0xf,%eax
    mov    data_1221f8,%ebx
    mov    %eax,data_1221f4
    mov    0x14(%ebx),%eax
    push   $0x1
    mov    data_12220c,%ebp
    movzbl 0x2(%eax),%esi
    and    $0xf0,%ebp
    push   %esi
    movzbl 0x1(%eax),%esi
    mov    %ebp,data_12220c
    push   %esi
    mov    (%eax),%al
    and    $0xff,%eax
    push   %eax
    push   %ebx
    call   func_6a1a0
    mov    data_12220c,%eax
    add    $0x14,%esp
    cmp    $0x90,%eax
    je     jump_6af31
    mov    data_1221f8,%eax
    mov    0x14(%eax),%eax
    mov    (%eax),%al
    and    $0xf0,%eax
    cmp    $0xb0,%eax
    jb     jump_6aefa
    jbe    jump_6af13
    cmp    $0xd0,%eax
    jb     jump_6aef1
    jbe    jump_6af1a
    cmp    $0xe0,%eax
    je     jump_6af13
    jmp    jump_6af21
  jump_6aef1:
    cmp    $0xc0,%eax
    je     jump_6af1a
    jmp    jump_6af21
  jump_6aefa:
    cmp    $0x90,%eax
    jb     jump_6af0c
    jbe    jump_6af13
    cmp    $0xa0,%eax
    je     jump_6af13
    jmp    jump_6af21
  jump_6af0c:
    cmp    $0x80,%eax
    jne    jump_6af21
  jump_6af13:
    mov    $0x3,%eax
    jmp    jump_6af23
  jump_6af1a:
    mov    $0x2,%eax
    jmp    jump_6af23
  jump_6af21:
    xor    %eax,%eax
  jump_6af23:
    mov    data_1221f8,%ebx
    add    %eax,0x14(%ebx)
    jmp    jump_6abcc
  jump_6af31:
    mov    data_1221f8,%ebx
    xor    %edx,%edx
    xor    %eax,%eax
    mov    %edx,data_1221fc
  jump_6af41:
    cmpl   $0xffffffff,0x514(%ebx,%eax,1)
    je     jump_6af62
    mov    data_1221fc,%edi
    inc    %edi
    add    $0x4,%eax
    mov    %edi,data_1221fc
    cmp    $0x80,%eax
    jl     jump_6af41
  jump_6af62:
    mov    data_1221fc,%ebp
    cmp    $0x20,%ebp
    jne    jump_6afa8
    mov    $0x7,%ecx
    mov    $data_12245c,%edi
    mov    $data_84c2c,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    data_1221f8,%ecx
    push   %ecx
    xor    %esi,%esi
    call   func_65276
    mov    data_1221f8,%eax
    add    $0x4,%esp
    mov    %esi,data_8876c
    movl   $0x2,0x4(%eax)
    jmp    jump_6b1b8
  jump_6afa8:
    mov    data_1221f8,%eax
    mov    0x510(%eax),%edx
    mov    %ebp,%ebx
    inc    %edx
    mov    data_1221f4,%esi
    mov    %edx,0x510(%eax)
    mov    %esi,0x514(%eax,%ebx,4)
    mov    0x14(%eax),%esi
    movzbl 0x1(%esi),%esi
    mov    %esi,0x594(%eax,%ebx,4)
    mov    0x14(%eax),%ebx
    add    $0x14,%eax
    add    $0x3,%ebx
    push   %eax
    mov    %ebx,(%eax)
    call   func_69cd0
    mov    data_1221f8,%ebx
    mov    data_1221fc,%esi
    add    $0x4,%esp
    mov    %eax,0x614(%ebx,%esi,4)
    jmp    jump_6abcc
  jump_6b003:
    cmpl   $0x0,data_122210
    jne    jump_6b025
    mov    data_1221f8,%eax
    mov    0x14(%eax),%ebx
    lea    0x1(%ebx),%esi
    mov    %esi,0x14(%eax)
    mov    (%ebx),%bl
    and    $0xff,%ebx
    mov    %ebx,0x2c(%eax)
  jump_6b025:
    cmpl   $0x0,data_122210
    jne    jump_6ab07
    mov    data_1221f8,%eax
    mov    0x64(%eax),%ebx
    mov    0x68(%eax),%ebp
    add    %ebx,%ebp
    mov    0x6c(%eax),%edx
    mov    %ebp,0x68(%eax)
    cmp    %edx,%ebp
    jl     jump_6ab07
    mov    %ebp,%ecx
    sub    %edx,%ecx
    mov    0x58(%eax),%esi
    mov    %ecx,0x68(%eax)
    inc    %esi
    mov    0x60(%eax),%edi
    mov    %esi,0x58(%eax)
    cmp    %edi,%esi
    jl     jump_6ab07
    mov    0x5c(%eax),%ebp
    movl   $0x0,0x58(%eax)
    inc    %ebp
    mov    %ebp,0x5c(%eax)
    jmp    jump_6ab07
  jump_6b079:
    cmpl   $0x0,data_122210
    jne    jump_6b13f
    mov    0x34(%eax),%ebx
    cmp    0x38(%eax),%ebx
    je     jump_6b0ea
    mov    (%eax),%ebx
    mov    0x3c(%eax),%edx
    mov    0x10(%ebx),%ebx
    add    %ebx,%edx
    mov    %edx,0x3c(%eax)
  jump_6b09b:
    mov    data_1221f8,%eax
    mov    0x3c(%eax),%ebx
    mov    0x40(%eax),%edi
    cmp    %edi,%ebx
    jl     jump_6b0d6
    mov    %ebx,%ebp
    mov    0x34(%eax),%edx
    sub    %edi,%ebp
    mov    0x38(%eax),%ebx
    mov    %ebp,0x3c(%eax)
    cmp    %edx,%ebx
    jle    jump_6b0c3
    lea    0x1(%edx),%ecx
    mov    %ecx,0x34(%eax)
    jmp    jump_6b0c9
  jump_6b0c3:
    lea    -0x1(%edx),%ebx
    mov    %ebx,0x34(%eax)
  jump_6b0c9:
    mov    data_1221f8,%eax
    mov    0x34(%eax),%ebx
    cmp    0x38(%eax),%ebx
    jne    jump_6b09b
  jump_6b0d6:
    mov    data_1221f8,%eax
    testb  $0x7,0x30(%eax)
    jne    jump_6b0ea
    push   %eax
    call   func_6aa50
    add    $0x4,%esp
  jump_6b0ea:
    mov    data_1221f8,%eax
    mov    0x44(%eax),%ebx
    cmp    0x48(%eax),%ebx
    je     jump_6b13f
    mov    (%eax),%ebx
    mov    0x4c(%eax),%ebp
    mov    0x10(%ebx),%ebx
    add    %ebx,%ebp
    mov    %ebp,0x4c(%eax)
  jump_6b104:
    mov    data_1221f8,%eax
    mov    0x4c(%eax),%ebx
    mov    0x50(%eax),%edx
    cmp    %edx,%ebx
    jl     jump_6b13f
    mov    %ebx,%ecx
    mov    0x44(%eax),%esi
    sub    %edx,%ecx
    mov    0x48(%eax),%ebx
    mov    %ecx,0x4c(%eax)
    cmp    %esi,%ebx
    jle    jump_6b12c
    lea    0x1(%esi),%ebp
    mov    %ebp,0x44(%eax)
    jmp    jump_6b132
  jump_6b12c:
    lea    -0x1(%esi),%edi
    mov    %edi,0x44(%eax)
  jump_6b132:
    mov    data_1221f8,%eax
    mov    0x44(%eax),%ebx
    cmp    0x48(%eax),%ebx
    jne    jump_6b104
  jump_6b13f:
    mov    data_122200,%eax
    mov    data_1221f8,%edx
    dec    %eax
    add    $0x6d4,%edx
    mov    %eax,data_122200
    mov    %edx,data_1221f8
    test   %eax,%eax
    jne    jump_6aade
  jump_6b164:
    mov    0x1c(%esp),%eax
    cmpl   $0x0,0x1a8(%eax)
    jle    jump_6b1b0
    mov    0x1a8(%eax),%ax
    push   $0x0
    mov    %ax,0x8(%esp)
    lea    0x4(%esp),%eax
    push   %eax
    mov    0x24(%esp),%eax
    push   $0x502
    mov    (%eax),%esi
    push   %esi
    call   func_62607
    add    $0x10,%esp
    mov    0x1c(%esp),%eax
    movl   $0x0,0x1a8(%eax)
    movl   $0x0,0x1ac(%eax)
  jump_6b1b0:
    xor    %edi,%edi
    mov    %edi,data_8876c
  jump_6b1b8:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6b1c0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    mov    0x28(%esp),%ebp
    mov    0x2c(%esp),%esi
    mov    $0x6,%ecx
    mov    %esp,%edi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x0(%ebp),%eax
    mov    0xc(%eax),%eax
    cmpw   $0x0,0x10(%eax)
    jbe    jump_6b25e
    mov    0xc(%eax),%edx
    mov    0xc(%eax),%ebx
    shr    $0x10,%edx
    and    $0xffff,%ebx
    shl    $0x4,%edx
    movswl (%esp),%eax
    add    %edx,%ebx
    cmp    $0x1,%eax
    jge    jump_6b20c
    mov    (%ebx),%ax
    mov    %ax,(%esp)
  jump_6b20c:
    movswl 0x2(%esp),%eax
    cmp    $0x1,%eax
    jge    jump_6b21f
    mov    0x2(%ebx),%ax
    mov    %ax,0x2(%esp)
  jump_6b21f:
    movswl 0x4(%esp),%eax
    cmp    $0x1,%eax
    jge    jump_6b232
    mov    0x4(%ebx),%ax
    mov    %ax,0x4(%esp)
  jump_6b232:
    movswl 0x6(%esp),%eax
    cmp    $0x1,%eax
    jge    jump_6b245
    mov    0x6(%ebx),%ax
    mov    %ax,0x6(%esp)
  jump_6b245:
    xor    %eax,%eax
  jump_6b247:
    cmpl   $0x1,0x8(%esp,%eax,1)
    jge    jump_6b256
    mov    0x8(%ebx,%eax,1),%edx
    mov    %edx,0x8(%esp,%eax,1)
  jump_6b256:
    add    $0x4,%eax
    cmp    $0x10,%eax
    jne    jump_6b247
  jump_6b25e:
    mov    0x0(%ebp),%eax
    mov    0xc(%eax),%esi
    mov    $0x6,%ecx
    push   $0x0
    lea    0x16(%esi),%edi
    lea    0x4(%esp),%esi
    push   $0x0
    rep movsl %ds:(%esi),%es:(%edi)
    push   $0x304
    mov    0x0(%ebp),%ebx
    push   %ebx
    call   func_62607
    add    $0x10,%esp
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6b290:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%ebp
    mov    0x1c(%ebp),%edx
    xor    %edi,%edi
    test   %edx,%edx
    jle    jump_6b2be
    xor    %esi,%esi
  jump_6b2a2:
    mov    0x18(%ebp),%eax
    add    %esi,%eax
    push   %eax
    inc    %edi
    call   func_65350
    add    $0x6d4,%esi
    mov    0x1c(%ebp),%ebx
    add    $0x4,%esp
    cmp    %ebx,%edi
    jl     jump_6b2a2
  jump_6b2be:
    mov    0xc(%ebp),%ecx
    push   %ecx
    call   func_630a4
    imul   $0x6d4,0x1c(%ebp),%eax
    add    $0x4,%esp
    push   %eax
    mov    0x18(%ebp),%edi
    push   %edi
    call   func_615bf
    add    $0x8,%esp
    push   $0x1d0
    push   %ebp
    call   func_615bf
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6b2f0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x44,%esp
    call   func_69940
    push   $0x1d0
    call   func_6159e
    mov    %eax,%ebp
    add    $0x4,%esp
    test   %eax,%eax
    jne    jump_6b326
    mov    $0x9,%ecx
    mov    $data_12245c,%edi
    mov    $data_84c4c,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    jmp    jump_6b97b
  jump_6b326:
    mov    0x54(%esp),%edx
    mov    %edx,(%eax)
    mov    0x10(%edx),%ebx
    mov    %edx,%eax
    cmp    $0x1,%ebx
    je     jump_6b362
    mov    $0x5,%ecx
    mov    $data_12245c,%edi
    mov    $data_84c74,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    push   $0x1d0
    mov    %ebp,%esi
    push   %esi
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6b362:
    lea    0x18(%esp),%edx
    push   %edx
    push   $0x0
    push   $0x301
    push   %eax
    call   func_62607
    add    $0x10,%esp
    xor    %eax,%eax
    mov    0x1e(%esp),%ax
    mov    %eax,%edx
    xor    %eax,%eax
    shl    $0x4,%edx
    mov    0x18(%esp),%ax
    add    %eax,%edx
    mov    %ebp,%eax
    mov    %edx,0x4(%eax)
    xor    %eax,%eax
    xor    %edx,%edx
    mov    0x1c(%esp),%ax
    mov    0x1a(%esp),%dx
    shl    $0x4,%eax
    add    %edx,%eax
    mov    %ebp,%edx
    mov    %eax,0x8(%edx)
    mov    0x4(%edx),%eax
    mov    (%eax),%edx
    shr    $0x10,%edx
    mov    (%eax),%eax
    shl    $0x4,%edx
    and    $0xffff,%eax
    add    %edx,%eax
    je     jump_6b3e5
    cmpb   $0x0,(%eax)
    je     jump_6b3e5
    call   func_741a6
    test   %eax,%eax
    je     jump_6b3e5
    cmpb   $0x0,(%eax)
    je     jump_6b3e5
    mov    %ebp,%esi
    mov    $0x80,%ebx
    mov    0x8(%esi),%esi
    mov    %eax,%edx
    mov    %esi,%eax
    call   func_72b40
  jump_6b3e5:
    mov    0x4(%ebp),%eax
    mov    0x4(%eax),%esi
    mov    0x4(%eax),%edx
    shr    $0x10,%esi
    and    $0xffff,%edx
    shl    $0x4,%esi
    add    %esi,%edx
    je     jump_6b45a
    cmpb   $0x0,(%edx)
    je     jump_6b45a
    mov    0x8(%ebp),%edi
    mov    $data_886ec,%esi
    add    $0x80,%edi
    push   %edi
  jump_6b412:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_6b42a
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_6b412
  jump_6b42a:
    pop    %edi
    mov    0x8(%ebp),%edi
    mov    %edx,%esi
    add    $0x80,%edi
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_6b43f:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_6b457
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_6b43f
  jump_6b457:
    pop    %edi
    jmp    jump_6b464
  jump_6b45a:
    mov    0x8(%ebp),%eax
    movb   $0x0,0x80(%eax)
  jump_6b464:
    mov    $0x18,%ebx
    mov    $0xffffffff,%edx
    mov    $data_1225a4,%eax
    mov    0x58(%esp),%esi
    xor    %ecx,%ecx
    call   func_72280
    mov    %ecx,0x38(%esp)
    test   %esi,%esi
    je     jump_6b4ba
    mov    $0x6,%ecx
    mov    $data_1225a4,%edi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    0x58(%esp),%edi
    push   %edi
    push   %ebp
    call   func_6b1c0
    add    $0x8,%esp
    test   %eax,%eax
    je     jump_6b4ba
    mov    $0x1,%eax
    mov    $0x6,%ecx
    mov    %esp,%edi
    mov    0x58(%esp),%esi
    mov    %eax,0x38(%esp)
    rep movsl %ds:(%esi),%es:(%edi)
  jump_6b4ba:
    cmpl   $0x0,0x38(%esp)
    jne    jump_6b507
    mov    0x0(%ebp),%ebx
    push   %ebx
    call   func_63173
    mov    %eax,0x38(%esp)
    add    $0x4,%esp
    test   %eax,%eax
    je     jump_6b507
    mov    $0x6,%ecx
    push   %eax
    mov    $data_1225a4,%edi
    mov    %eax,%esi
    push   %ebp
    rep movsl %ds:(%esi),%es:(%edi)
    call   func_6b1c0
    add    $0x8,%esp
    test   %eax,%eax
    je     jump_6b507
    mov    $0x1,%edi
    mov    $0x6,%ecx
    mov    0x34(%esp),%esi
    mov    %edi,0x38(%esp)
    mov    %esp,%edi
    rep movsl %ds:(%esi),%es:(%edi)
  jump_6b507:
    mov    0x38(%esp),%eax
    test   %eax,%eax
    jne    jump_6b5af
    cmpl   $0x1,data_12259c
    jne    jump_6b5af
    mov    %eax,0x40(%esp)
    mov    %eax,0x3c(%esp)
    jmp    jump_6b597
  jump_6b52a:
    mov    0xc(%eax),%esi
    shr    $0x10,%esi
    mov    0xc(%eax),%eax
    shl    $0x4,%esi
    and    $0xffff,%eax
    mov    0x3c(%esp),%edx
    add    %esi,%eax
    add    %eax,%edx
    mov    %edx,0x30(%esp)
    test   %edi,%edi
    jne    jump_6b559
    mov    $0x6,%ecx
    mov    $data_1225a4,%edi
    mov    %edx,%esi
    rep movsl %ds:(%esi),%es:(%edi)
  jump_6b559:
    mov    0x30(%esp),%edx
    push   %edx
    push   %ebp
    call   func_6b1c0
    add    $0x8,%esp
    test   %eax,%eax
    je     jump_6b583
    mov    $0x1,%esi
    mov    $0x6,%ecx
    mov    %esp,%edi
    mov    %esi,0x38(%esp)
    mov    0x30(%esp),%esi
    rep movsl %ds:(%esi),%es:(%edi)
    jmp    jump_6b5af
  jump_6b583:
    mov    0x3c(%esp),%ebx
    mov    0x40(%esp),%ecx
    add    $0x18,%ebx
    inc    %ecx
    mov    %ebx,0x3c(%esp)
    mov    %ecx,0x40(%esp)
  jump_6b597:
    mov    0x0(%ebp),%eax
    mov    0xc(%eax),%eax
    xor    %esi,%esi
    mov    0x40(%esp),%edi
    mov    0x10(%eax),%si
    cmp    %edi,%esi
    jg     jump_6b52a
  jump_6b5af:
    cmpl   $0x0,0x38(%esp)
    jne    jump_6b5de
    mov    $0x8,%ecx
    push   $0x1d0
    mov    $data_12245c,%edi
    mov    $data_84c8c,%esi
    push   %ebp
    rep movsl %ds:(%esi),%es:(%edi)
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6b5de:
    mov    $0x6,%ecx
    push   $0x0
    lea    0x4(%esp),%esi
    mov    $data_1225a4,%edi
    push   $0x0
    rep movsl %ds:(%esi),%es:(%edi)
    push   $0x305
    mov    0x0(%ebp),%eax
    push   %eax
    call   func_62607
    mov    0x0(%ebp),%eax
    add    $0x10,%esp
    movl   $0x1,0x14(%eax)
    lea    0x18(%esp),%eax
    push   %eax
    push   $0x0
    push   $0x501
    mov    0x0(%ebp),%edx
    push   %edx
    call   func_62607
    add    $0x10,%esp
    cmpw   $0x0,0x18(%esp)
    jne    jump_6b675
    mov    $0xa,%ecx
    push   $0x0
    mov    $data_12245c,%edi
    mov    $data_84cac,%esi
    push   $0x0
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    push   $0x306
    mov    0x0(%ebp),%edx
    push   %edx
    call   func_62607
    add    $0x10,%esp
    push   $0x1d0
    mov    0x0(%ebp),%eax
    push   %ebp
    movl   $0x0,0x14(%eax)
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6b675:
    mov    data_122588,%eax
    mov    %eax,0x1c(%ebp)
    imul   $0x6d4,%eax,%eax
    push   %eax
    call   func_6159e
    add    $0x4,%esp
    mov    %eax,0x18(%ebp)
    test   %eax,%eax
    jne    jump_6b6d8
    mov    $0xa,%ecx
    push   %eax
    mov    $data_12245c,%edi
    mov    $data_84cd8,%esi
    push   %eax
    rep movsl %ds:(%esi),%es:(%edi)
    push   $0x306
    mov    0x0(%ebp),%eax
    push   %eax
    call   func_62607
    add    $0x10,%esp
    push   $0x1d0
    mov    0x0(%ebp),%eax
    push   %ebp
    movl   $0x0,0x14(%eax)
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6b6d8:
    mov    0x1c(%ebp),%edi
    xor    %esi,%esi
    test   %edi,%edi
    jle    jump_6b701
    xor    %eax,%eax
  jump_6b6e3:
    mov    0x18(%ebp),%edi
    movl   $0x1,0x4(%edi,%eax,1)
    mov    0x18(%ebp),%edi
    mov    %ebp,(%edi,%eax,1)
    inc    %esi
    mov    0x1c(%ebp),%ebx
    add    $0x6d4,%eax
    cmp    %ebx,%esi
    jl     jump_6b6e3
  jump_6b701:
    mov    $0xf4240,%eax
    mov    %eax,%edx
    mov    data_122584,%esi
    sar    $0x1f,%edx
    idiv   %esi
    movl   $0x0,0x1a0(%ebp)
    movl   $0x0,0x1a4(%ebp)
    movl   $0x0,0x1a8(%ebp)
    movl   $0x0,0x1ac(%ebp)
    movl   $0x0,0x14(%ebp)
    mov    %ebp,%esi
    mov    %eax,0x10(%ebp)
    lea    0x40(%ebp),%eax
    xor    %edx,%edx
    lea    0x0(%eax,%eiz,1),%eax
  jump_6b750:
    add    $0x4,%esi
    mov    %edx,0x1c(%esi)
    mov    %edx,0x5c(%esi)
    mov    %edx,0x9c(%esi)
    mov    %edx,0xdc(%esi)
    mov    %edx,0x11c(%esi)
    mov    %edx,0x15c(%esi)
    cmp    %eax,%esi
    jne    jump_6b750
    push   $func_6aa90
    call   func_62ae8
    add    $0x4,%esp
    mov    %eax,0xc(%ebp)
    cmp    $0xffffffff,%eax
    jne    jump_6b7e7
    mov    $0x5,%ecx
    push   $0x0
    mov    $data_12245c,%edi
    mov    $data_84d00,%esi
    push   $0x0
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    push   $0x306
    mov    0x0(%ebp),%edi
    push   %edi
    call   func_62607
    mov    0x0(%ebp),%eax
    movl   $0x0,0x14(%eax)
    imul   $0x6d4,0x1c(%ebp),%eax
    add    $0x10,%esp
    push   %eax
    mov    0x18(%ebp),%ebx
    push   %ebx
    call   func_615bf
    add    $0x8,%esp
    push   $0x1d0
    push   %ebp
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6b7e7:
    push   %ebp
    push   %eax
    call   func_62bd3
    mov    0x0(%ebp),%eax
    movl   $func_6b290,0x20(%eax)
    mov    0x0(%ebp),%eax
    xor    %edi,%edi
    add    $0x8,%esp
    mov    %ebp,0x24(%eax)
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
    nop
  jump_6b810:
    push   $0x0
    mov    %edi,%esi
    push   $0x72
    or     $0xb0,%si
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    push   $0x0
    mov    %edi,%eax
    push   $0x0
    or     $0xc0,%al
    push   %eax
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    push   $0x40
    mov    %edi,%eax
    push   $0x0
    or     $0xe0,%al
    push   %eax
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    push   $0x0
    push   $0x70
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    push   $0x0
    push   $0x1
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    mov    data_12258c,%eax
    push   %eax
    push   $0x7
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    push   $0x40
    push   $0xa
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    push   $0x7f
    push   $0xb
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    push   $0x0
    push   $0x40
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    push   $0x28
    push   $0x5b
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    push   $0x0
    push   $0x5d
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    push   $0x0
    push   $0x64
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    push   $0x0
    push   $0x65
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    push   $0x0
    push   $0x26
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    mov    data_122598,%edx
    push   %edx
    push   $0x6
    push   %esi
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
    cmpl   $0x0,0x1a8(%ebp)
    jle    jump_6b93b
    mov    0x1a8(%ebp),%ax
    push   $0x0
    mov    %ax,0x2c(%esp)
    lea    0x28(%esp),%eax
    push   %eax
    push   $0x502
    mov    0x0(%ebp),%ecx
    push   %ecx
    call   func_62607
    movl   $0x0,0x1a8(%ebp)
    add    $0x10,%esp
    movl   $0x0,0x1ac(%ebp)
  jump_6b93b:
    test   $0x3,%di
    jne    jump_6b950
    push   $0x3
    call   func_6271d
    add    $0x4,%esp
    lea    0x0(%eax,%eiz,1),%eax
  jump_6b950:
    inc    %edi
    cmp    $0x10,%edi
    jl     jump_6b810
    mov    data_122584,%ecx
    push   %ecx
    mov    0xc(%ebp),%esi
    push   %esi
    call   func_62d3c
    add    $0x8,%esp
    mov    0xc(%ebp),%edi
    push   %edi
    call   func_62f06
    add    $0x4,%esp
    mov    %ebp,%eax
  jump_6b97b:
    add    $0x44,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6b990:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%edi
    push   $0x0
    push   %edi
    call   func_61d56
    mov    %eax,%esi
    add    $0x8,%esp
    test   %eax,%eax
    jne    jump_6b9be
    mov    $0x5,%ecx
    mov    $data_12245c,%edi
    mov    $data_84d18,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %esi
    ret
  jump_6b9be:
    push   %edi
    call   func_61d0a
    add    $0x4,%esp
    push   %eax
    push   %esi
    call   func_63258
    add    $0x8,%esp
    mov    %eax,%edi
    mov    %esi,%eax
    call   *data_88654
    test   %edi,%edi
    jne    jump_6b9e4
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_6b9e4:
    mov    0x10(%esp),%edx
    push   %edx
    push   %edi
    call   func_6b2f0
    add    $0x8,%esp
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_6ba01
    push   %edi
    call   func_6334b
    add    $0x4,%esp
  jump_6ba01:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6ba50:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x118,%esp
    push   $data_84d30
    lea    0x4(%esp),%eax
    push   %eax
    call   func_6278f
    add    $0x8,%esp
    test   %eax,%eax
    jne    jump_6ba82
    mov    $0x7,%ecx
    mov    $data_12245c,%edi
    mov    $data_84d38,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    jmp    jump_6ba9a
  jump_6ba82:
    lea    0x100(%esp),%eax
    push   %eax
    lea    0x84(%esp),%eax
    push   %eax
    call   func_64e64
    add    $0x8,%esp
  jump_6ba9a:
    add    $0x118,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6bb40:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%esi
    call   func_62388
    mov    0x1c(%esi),%edx
    xor    %eax,%eax
    test   %edx,%edx
    jle    jump_6bb6b
    mov    0x18(%esi),%edx
  jump_6bb57:
    cmpl   $0x1,0x4(%edx)
    je     jump_6bb6b
    inc    %eax
    mov    0x1c(%esi),%ebx
    add    $0x6d4,%edx
    cmp    %ebx,%eax
    jl     jump_6bb57
  jump_6bb6b:
    cmp    0x1c(%esi),%eax
    jne    jump_6bb8c
    mov    $0x6,%ecx
    mov    $data_12245c,%edi
    mov    $data_84d58,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    call   func_6238d
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_6bb8c:
    imul   $0x6d4,%eax,%eax
    mov    0x18(%esi),%esi
    add    %eax,%esi
    push   %esi
    movl   $0x2,0x4(%esi)
    call   func_6a980
    add    $0x4,%esp
    call   func_6238d
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6bf90:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%esi
    test   %esi,%esi
    je     jump_6bfc1
    cmpl   $0x1,0x4(%esi)
    je     jump_6bfc1
    push   %esi
    call   func_65276
    add    $0x4,%esp
    push   %esi
    call   func_6a980
    mov    0x10(%esi),%eax
    movl   $0x4,0x4(%esi)
    add    $0x8,%eax
    add    $0x4,%esp
    mov    %eax,0x14(%esi)
  jump_6bfc1:
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6bfd0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    0x14(%esp),%edi
    test   %edi,%edi
    je     jump_6c08a
    cmpl   $0x4,0x4(%edi)
    jne    jump_6c08a
    push   %edi
    mov    %edi,%esi
    movl   $0x8,0x4(%edi)
    add    $0x40,%edi
    call   func_6a5f0
    add    $0x4,%esp
    mov    -0x40(%edi),%ebp
    mov    %edi,(%esp)
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
  jump_6c010:
    mov    0x410(%esi),%ecx
    mov    0x90(%esi),%edi
    cmp    $0x40,%ecx
    jl     jump_6c033
    push   $0x0
    mov    %edi,%eax
    push   $0x40
    or     $0xb0,%al
    push   %eax
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
  jump_6c033:
    cmpl   $0x40,0x1d0(%esi)
    jl     jump_6c044
    movl   $0x0,0x20(%ebp,%edi,4)
  jump_6c044:
    cmpl   $0x40,0x210(%esi)
    jl     jump_6c05f
    push   $0x0
    mov    %edi,%eax
    push   $0x70
    or     $0xb0,%al
    push   %eax
    push   %ebp
    call   func_69af0
    add    $0x10,%esp
  jump_6c05f:
    cmpl   $0x40,0x190(%esi)
    jl     jump_6c080
    inc    %edi
    push   %edi
    push   %ebp
    call   func_668db
    add    $0x8,%esp
    lea    0x0(%eax),%eax
    lea    0x0(%edx),%edx
    nop
  jump_6c080:
    mov    (%esp),%ebx
    add    $0x4,%esi
    cmp    %ebx,%esi
    jne    jump_6c010
  jump_6c08a:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6c130:
/*----------------------------------------------------------------*/
    push   %esi
    mov    0x8(%esp),%esi
    test   %esi,%esi
    je     jump_6c14f
    cmpl   $0x1,0x4(%esi)
    je     jump_6c14f
    push   %esi
    call   func_65276
    add    $0x4,%esp
    movl   $0x2,0x4(%esi)
  jump_6c14f:
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6c260:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    test   %eax,%eax
    jne    jump_6c269
    ret
  jump_6c269:
    mov    0x4(%eax),%eax
    ret


/*----------------------------------------------------------------*/
func_6c580:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%edi
    mov    0x14(%esp),%esi
    test   %edi,%edi
    je     jump_6c605
    mov    0xc(%edi),%edx
    test   %edx,%edx
    je     jump_6c605
    mov    %edx,%eax
    lea    0xa(%edx),%ebp
    movswl 0x8(%edx),%ecx
    xor    %edx,%eax
    test   %ecx,%ecx
    jle    jump_6c5c0
    mov    %ebp,%edx
  jump_6c5af:
    xor    %ebx,%ebx
    mov    (%edx),%bx
    cmp    %esi,%ebx
    je     jump_6c5c0
    inc    %eax
    add    $0x6,%edx
    cmp    %ecx,%eax
    jl     jump_6c5af
  jump_6c5c0:
    cmp    %ecx,%eax
    je     jump_6c605
    mov    %eax,%edx
    lea    0x0(,%eax,4),%eax
    sub    %edx,%eax
    add    %eax,%eax
    add    %eax,%ebp
    mov    0x10(%edi),%eax
    mov    0x2(%ebp),%edx
    add    $0x8,%eax
    movl   $0x0,0x2c(%edi)
    add    %edx,%eax
    mov    data_122594,%ebx
    mov    %eax,0x14(%edi)
    test   %ebx,%ebx
    jne    jump_6c605
    mov    %edi,%eax
    lea    0x10(%edi),%edx
  jump_6c5f7:
    add    $0x4,%eax
    movl   $0xffffffff,0x7c(%eax)
    cmp    %edx,%eax
    jne    jump_6c5f7
  jump_6c605:
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6c700:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x1c(%esp),%eax
    mov    $0xffffffff,%ebp
    mov    $0x7fffffff,%edi
    mov    0x14(%eax),%edx
    add    $0x20,%eax
    inc    %edx
    mov    $0x8,%esi
    mov    %edx,-0xc(%eax)
    mov    $0x1,%edx
  jump_6c728:
    cmp    $0x9,%esi
    je     jump_6c747
    mov    0x20(%eax),%ebx
    cmp    %ebx,%edx
    je     jump_6c747
    cmp    $0x2,%ebx
    je     jump_6c747
    mov    0x160(%eax),%ebx
    cmp    %ebx,%edi
    jle    jump_6c747
    mov    %ebx,%edi
    mov    %esi,%ebp
  jump_6c747:
    dec    %esi
    sub    $0x4,%eax
    cmp    $0x1,%esi
    jge    jump_6c728
    cmp    $0xffffffff,%ebp
    jne    jump_6c787
    mov    0x1c(%esp),%eax
    mov    $0x8,%esi
    add    $0x20,%eax
    mov    $0x1,%edx
  jump_6c766:
    cmp    $0x9,%esi
    je     jump_6c77e
    cmp    0x20(%eax),%edx
    je     jump_6c77e
    mov    0x160(%eax),%ebx
    cmp    %ebx,%edi
    jle    jump_6c77e
    mov    %ebx,%edi
    mov    %esi,%ebp
  jump_6c77e:
    dec    %esi
    sub    $0x4,%eax
    cmp    $0x1,%esi
    jge    jump_6c766
  jump_6c787:
    cmp    $0xffffffff,%ebp
    jne    jump_6c79e
    mov    0x1c(%esp),%esi
    mov    0x14(%esi),%edi
    dec    %edi
    xor    %eax,%eax
    mov    %edi,0x14(%esi)
    jmp    jump_6c898
  jump_6c79e:
    push   $0x0
    mov    %ebp,%eax
    push   $0x40
    or     $0xb0,%al
    push   %eax
    mov    0x28(%esp),%ecx
    push   %ecx
    call   func_69af0
    add    $0x10,%esp
    mov    0x1c(%esp),%eax
    mov    0x1c(%esp),%edi
    mov    0x1c(%eax),%eax
    mov    0x18(%edi),%edi
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    je     jump_6c85e
    lea    0x80(%edi),%eax
    mov    %eax,(%esp)
  jump_6c7d7:
    cmpl   $0x1,0x4(%edi)
    je     jump_6c83b
    mov    (%esp),%eax
    mov    %edi,%esi
    mov    %eax,0x8(%esp)
    lea    0x0(%eax),%eax
    lea    0x0(%edx,%eiz,1),%edx
  jump_6c7f0:
    mov    0x514(%esi),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6c830
    mov    %ebx,%eax
    cmp    0x90(%edi,%eax,4),%ebp
    jne    jump_6c830
    push   $0x0
    push   $0x0
    mov    0x594(%esi),%eax
    push   %eax
    mov    %ebx,%eax
    or     $0x80,%al
    push   %eax
    push   %edi
    call   func_6a1a0
    add    $0x14,%esp
    movl   $0xffffffff,0x514(%esi)
    lea    0x0(%eax),%eax
    nop
  jump_6c830:
    mov    0x8(%esp),%edx
    add    $0x4,%esi
    cmp    %edx,%esi
    jne    jump_6c7f0
  jump_6c83b:
    mov    0x4(%esp),%eax
    mov    (%esp),%edx
    add    $0x6d4,%edi
    dec    %eax
    add    $0x6d4,%edx
    mov    %eax,0x4(%esp)
    mov    %edx,(%esp)
    test   %eax,%eax
    jne    jump_6c7d7
  jump_6c85e:
    mov    0x1c(%esp),%ecx
    lea    0x0(,%ebp,4),%eax
    add    %ecx,%eax
    movl   $0x0,0x60(%eax)
    mov    0x20(%eax),%esi
    movl   $0x1,0x20(%eax)
    mov    %esi,0x120(%eax)
    mov    0xe0(%eax),%esi
    mov    %esi,0xa0(%eax)
    mov    0x14(%ecx),%esi
    dec    %esi
    lea    0x1(%ebp),%eax
    mov    %esi,0x14(%ecx)
  jump_6c898:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6c8a0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0xc,%esp
    mov    0x20(%esp),%eax
    dec    %eax
    mov    0x1c(%esp),%edx
    mov    %eax,0x8(%esp)
    lea    0x0(,%eax,4),%eax
    add    %edx,%eax
    mov    0x20(%eax),%ebx
    cmp    $0x1,%ebx
    jne    jump_6c9c0
    add    %ebx,0x14(%edx)
    mov    0x120(%eax),%esi
    mov    %esi,0x20(%eax)
    mov    0xa0(%eax),%esi
    push   $0x0
    mov    %esi,0xe0(%eax)
    mov    0xc(%esp),%eax
    push   $0x40
    or     $0xb0,%al
    push   %eax
    push   %edx
    mov    %edx,%esi
    call   func_69af0
    mov    %esi,%eax
    mov    %esi,%edi
    add    $0x10,%esp
    mov    0x1c(%eax),%eax
    mov    0x18(%edi),%edi
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    je     jump_6c986
    lea    0x80(%edi),%eax
    mov    %eax,(%esp)
  jump_6c915:
    cmpl   $0x1,0x4(%edi)
    je     jump_6c967
    mov    (%esp),%ebp
    mov    %edi,%esi
  jump_6c920:
    mov    0x514(%esi),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_6c960
    mov    %ecx,%eax
    mov    0x8(%esp),%edx
    cmp    0x90(%edi,%eax,4),%edx
    jne    jump_6c960
    push   $0x0
    push   $0x0
    mov    0x594(%esi),%ebx
    mov    %ecx,%eax
    push   %ebx
    or     $0x80,%al
    push   %eax
    push   %edi
    call   func_6a1a0
    add    $0x14,%esp
    movl   $0xffffffff,0x514(%esi)
    lea    0x0(%eax),%eax
  jump_6c960:
    add    $0x4,%esi
    cmp    %ebp,%esi
    jne    jump_6c920
  jump_6c967:
    mov    0x4(%esp),%eax
    mov    (%esp),%edx
    add    $0x6d4,%edi
    dec    %eax
    add    $0x6d4,%edx
    mov    %eax,0x4(%esp)
    mov    %edx,(%esp)
    test   %eax,%eax
    jne    jump_6c915
  jump_6c986:
    mov    0x8(%esp),%eax
    mov    0x1c(%esp),%ecx
    lea    0x0(,%eax,4),%eax
    add    %ecx,%eax
    mov    0xa0(%eax),%esi
    test   %esi,%esi
    je     jump_6c9b9
    mov    0x4(%esi),%edi
    mov    %esi,%eax
    cmp    $0x1,%edi
    je     jump_6c9b9
    mov    0x8(%esp),%ebp
    push   %ebp
    push   %esi
    call   func_6a770
    add    $0x8,%esp
  jump_6c9b9:
    mov    0x1c(%esp),%eax
    decl   0x14(%eax)
  jump_6c9c0:
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6c9d0:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    0xc(%esp),%ebx
    test   %eax,%eax
    je     jump_6ca03
    mov    0x8(%esp),%edx
    lea    -0x1(%ebx),%ecx
    mov    %ecx,0x8c(%eax,%edx,4)
    lea    0x0(,%ebx,4),%edx
    mov    (%eax),%ebx
    add    %ebx,%edx
    cmpl   $0x1,0x1c(%edx)
    jne    jump_6ca03
    cmp    0x5c(%edx),%eax
    je     jump_6ca03
    mov    %eax,0x5c(%edx)
  jump_6ca03:
    ret


/*----------------------------------------------------------------*/
func_6cb70:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_88770
    je     jump_6cc60
    push   $func_6cb70
    push   $func_69940
    call   func_616fa
    add    $0x8,%esp
    push   $0x80
    push   $data_886ec
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_8876c
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_1221f8
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_1221fc
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_122200
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_122210
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_122204
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_122208
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_1221f4
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_12220c
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_122218
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_122214
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_1221f0
    call   func_61736
    xor    %ebx,%ebx
    add    $0x8,%esp
    mov    %ebx,data_88770
  jump_6cc60:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6cc64:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_88784
    jne    jump_6cce9
    push   $func_6d535
    push   $func_6cc64
    call   func_61691
    add    $0x8,%esp
    push   $0x40
    push   $data_12241c
    call   func_6171f
    add    $0x8,%esp
    push   $0x48
    push   $data_12255c
    call   func_6171f
    add    $0x8,%esp
    push   $0x100
    push   $data_12245c
    call   func_6171f
    add    $0x8,%esp
    push   $0x18
    push   $data_1225a4
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_88780
    call   func_6171f
    add    $0x8,%esp
    push   $0x4
    push   $data_1225bc
    call   func_6171f
    add    $0x8,%esp
    movl   $0x1,data_88784
  jump_6cce9:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6cced:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    cmpl   $0x0,data_88780
    jne    jump_6cd39
    movl   $0x1,data_88780
    call   func_625f4
    mov    %eax,data_1225bc
    push   $0x0
    push   $0x0
    push   $0x302
    mov    0x18(%esp),%ecx
    push   %ecx
    call   func_62607
    add    $0x10,%esp
    mov    data_1225bc,%esi
    push   %esi
    call   func_625f9
    add    $0x4,%esp
    xor    %edi,%edi
    mov    %edi,data_88780
  jump_6cd39:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6cd3c:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    0x14(%esp),%esi
    mov    0x18(%esp),%edi
    xor    %edx,%edx
    mov    %edx,(%esp)
    movl   $0x1,0x4(%esp)
    xor    %ecx,%ecx
    jmp    jump_6cdb8
  jump_6cd5a:
    lea    (%esi,%ecx,1),%eax
    xor    %edx,%edx
    mov    (%eax),%dl
    cmp    $0x2d,%edx
    jne    jump_6cd6c
    negl   0x4(%esp)
    jmp    jump_6cdb7
  jump_6cd6c:
    mov    %dl,%al
    inc    %al
    and    $0xff,%eax
    mov    data_860c8(%eax),%al
    and    $0x2,%al
    and    $0xff,%eax
    jne    jump_6cdb7
    xor    %edx,%edx
    jmp    jump_6cdaf
  jump_6cd88:
    xor    %ebx,%ebx
    mov    data_84e20(%edx),%bl
    mov    (%ecx,%esi,1),%al
    and    $0xff,%eax
    call   func_743ff
    cmp    %ebx,%eax
    jne    jump_6cdae
    mov    (%esp),%eax
    imul   %edi,%eax
    add    %edx,%eax
    mov    %eax,(%esp)
    jmp    jump_6cdb3
  jump_6cdae:
    inc    %edx
  jump_6cdaf:
    cmp    %edi,%edx
    jl     jump_6cd88
  jump_6cdb3:
    cmp    %edi,%edx
    je     jump_6cdc3
  jump_6cdb7:
    inc    %ecx
  jump_6cdb8:
    mov    %esi,%eax
    call   func_7440d
    cmp    %eax,%ecx
    jb     jump_6cd5a
  jump_6cdc3:
    mov    0x1c(%esp),%eax
    test   %eax,%eax
    je     jump_6cdcf
    add    %ecx,%esi
    mov    %esi,(%eax)
  jump_6cdcf:
    mov    (%esp),%eax
    imul   0x4(%esp),%eax
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6cddd:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x168,%esp
    mov    $0x118,%ebx
    xor    %edx,%edx
    mov    %esp,%eax
    call   func_72280
    mov    $0x18,%ebx
    mov    $0xffffffff,%edx
    lea    0x100(%esp),%eax
    call   func_72280
    mov    $data_84e31,%edx
    mov    0x17c(%esp),%eax
    call   func_7331e
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_6cf41
    jmp    jump_6d09b
  jump_6ce2a:
    mov    0x118(%esp,%ecx,1),%al
    inc    %al
    and    $0xff,%eax
    mov    data_860c8(%eax),%al
    and    $0x2,%al
    and    $0xff,%eax
    je     jump_6ce55
    xor    %dl,%dl
    mov    %dl,0x118(%esp,%ecx,1)
    dec    %ecx
  jump_6ce51:
    test   %ecx,%ecx
    jge    jump_6ce2a
  jump_6ce55:
    xor    %ecx,%ecx
    jmp    jump_6ce77
  jump_6ce59:
    mov    0x118(%esp,%ecx,1),%al
    inc    %al
    and    $0xff,%eax
    mov    data_860c8(%eax),%al
    and    $0x2,%al
    and    $0xff,%eax
    je     jump_6ce87
    inc    %ecx
  jump_6ce77:
    lea    0x118(%esp),%eax
    call   func_7440d
    cmp    %eax,%ecx
    jb     jump_6ce59
  jump_6ce87:
    lea    0x118(%esp),%esi
    add    %ecx,%esi
    jmp    jump_6ceb0
  jump_6ce92:
    mov    0x118(%esp,%ecx,1),%al
    inc    %al
    and    $0xff,%eax
    mov    data_860c8(%eax),%al
    and    $0x2,%al
    and    $0xff,%eax
    jne    jump_6cec0
    inc    %ecx
  jump_6ceb0:
    lea    0x118(%esp),%eax
    call   func_7440d
    cmp    %eax,%ecx
    jb     jump_6ce92
  jump_6cec0:
    lea    0x118(%esp),%edx
    add    %ecx,%edx
    jmp    jump_6cee9
  jump_6cecb:
    mov    0x118(%esp,%ecx,1),%al
    inc    %al
    and    $0xff,%eax
    mov    data_860c8(%eax),%al
    and    $0x2,%al
    and    $0xff,%eax
    je     jump_6cef9
    inc    %ecx
  jump_6cee9:
    lea    0x118(%esp),%eax
    call   func_7440d
    cmp    %eax,%ecx
    jb     jump_6cecb
  jump_6cef9:
    lea    0x118(%esp),%edi
    add    %ecx,%edi
    lea    0x118(%esp),%eax
    call   func_7440d
    cmp    %eax,%ecx
    jae    jump_6cf41
    movb   $0x0,(%edx)
    xor    %eax,%eax
    mov    (%esi),%al
    cmp    $0x3b,%eax
    je     jump_6cf41
    mov    $0x7,%ebx
    mov    $data_84e34,%edx
    mov    %esi,%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_6cf7a
    mov    %edi,%edx
    lea    0x80(%esp),%eax
  jump_6cf3c:
    call   func_743e0
  jump_6cf41:
    mov    %ebp,%ebx
    mov    $0x50,%edx
    lea    0x118(%esp),%eax
    call   func_7370e
    test   %eax,%eax
    je     jump_6d04e
    testb  $0x10,0xc(%ebp)
    jne    jump_6d04e
    lea    0x118(%esp),%eax
    call   func_7440d
    lea    -0x1(%eax),%ecx
    jmp    jump_6ce51
  jump_6cf7a:
    mov    $0x7,%ebx
    mov    $data_84e3b,%edx
    mov    %esi,%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_6cf95
    mov    %edi,%edx
    mov    %esp,%eax
    jmp    jump_6cf3c
  jump_6cf95:
    mov    $0x8,%ebx
    mov    $data_84e42,%edx
    mov    %esi,%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_6cfc0
    push   %eax
    push   $0x10
    push   %edi
    call   func_6cd3c
    add    $0xc,%esp
    mov    %ax,0x100(%esp)
    jmp    jump_6cf41
  jump_6cfc0:
    mov    $0x4,%ebx
    mov    $data_84e4a,%edx
    mov    %esi,%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_6cfee
    push   %eax
    push   $0xa
    push   %edi
    call   func_6cd3c
    add    $0xc,%esp
    mov    %ax,0x102(%esp)
    jmp    jump_6cf41
  jump_6cfee:
    mov    $0xa,%ebx
    mov    $data_84e4e,%edx
    mov    %esi,%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_6d01c
    push   %eax
    push   $0xa
    push   %edi
    call   func_6cd3c
    add    $0xc,%esp
    mov    %ax,0x104(%esp)
    jmp    jump_6cf41
  jump_6d01c:
    mov    $0xb,%ebx
    mov    $data_84e58,%edx
    mov    %esi,%eax
    call   func_73c4d
    test   %eax,%eax
    jne    jump_6cf41
    push   %eax
    push   $0xa
    push   %edi
    call   func_6cd3c
    add    $0xc,%esp
    mov    %ax,0x106(%esp)
    jmp    jump_6cf41
  jump_6d04e:
    mov    %ebp,%eax
    call   func_7280e
    lea    0x80(%esp),%eax
    call   func_7440d
    test   %eax,%eax
    je     jump_6d070
    mov    %esp,%eax
    call   func_7440d
    test   %eax,%eax
    jne    jump_6d086
  jump_6d070:
    mov    $0x5,%ecx
    mov    $data_12245c,%edi
    mov    $data_84e63,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    xor    %eax,%eax
    jmp    jump_6d09b
  jump_6d086:
    mov    $0x46,%ecx
    mov    0x178(%esp),%edi
    mov    %esp,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    $0x1,%eax
  jump_6d09b:
    add    $0x168,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6d0a5:
/*----------------------------------------------------------------*/
    mov    0x4(%esp),%eax
    mov    data_12255c(,%eax,4),%edx
    mov    0x8(%esp),%ebx
    mov    %ebx,data_12255c(,%eax,4)
    mov    %edx,%eax
    ret


/*----------------------------------------------------------------*/
func_6d0be:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    push   $0x28
    call   func_6159e
    add    $0x4,%esp
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_6d0e9
    mov    $0xa,%ecx
    mov    $data_12245c,%edi
    mov    $data_84e78,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6d0e9:
    add    $0x4,%eax
    push   %eax
    mov    %ebp,%ebx
    push   %ebx
    lea    0x8(%ebx),%eax
    push   %eax
    mov    0x20(%esp),%eax
    add    $0xf,%eax
    shr    $0x4,%eax
    push   %eax
    call   func_615e0
    add    $0x10,%esp
    test   %eax,%eax
    jne    jump_6d127
    mov    $0x6,%ecx
    mov    $data_12245c,%edi
    mov    $data_84ea3,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    push   $0x28
    mov    %ebp,%eax
    push   %eax
    jmp    jump_6d19b
  jump_6d127:
    mov    %ebp,%eax
    mov    0x8(%eax),%eax
    mov    0x14(%esp),%ebx
    mov    0x10(%esp),%edx
    call   func_74101
    mov    %ebp,%eax
    mov    0x8(%eax),%eax
    mov    %ebp,%ecx
    mov    %eax,0xc(%ecx)
    mov    $0x7,%ebx
    mov    $data_84ebc,%edx
    call   func_73c4d
    test   %eax,%eax
    jne    jump_6d15b
    mov    %eax,0x10(%ecx)
    jmp    jump_6d1b0
  jump_6d15b:
    mov    0xc(%ecx),%eax
    mov    $0x7,%ebx
    mov    $data_84ec4,%edx
    call   func_73c4d
    test   %eax,%eax
    je     jump_6d1a9
    mov    $0x5,%ecx
    mov    $data_12245c,%edi
    mov    $data_84ecc,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    mov    %ebp,%eax
    mov    0x4(%eax),%ecx
    push   %ecx
    mov    (%eax),%esi
    push   %esi
    mov    0x8(%eax),%edi
    push   %edi
  jump_6d190:
    call   func_61665
    add    $0xc,%esp
    push   $0x28
    push   %ebp
  jump_6d19b:
    call   func_615bf
    add    $0x8,%esp
    xor    %eax,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_6d1a9:
    movl   $0x1,0x10(%ecx)
  jump_6d1b0:
    xor    %ecx,%ecx
    jmp    jump_6d1d2
  jump_6d1b4:
    mov    %ecx,%eax
    shl    $0x2,%eax
    cmpl   $0x0,data_12241c(%eax)
    jne    jump_6d1d1
    mov    %ebp,data_12241c(%eax)
    mov    0xc(%ebp),%eax
    mov    %cx,0x32(%eax)
    jmp    jump_6d1d7
  jump_6d1d1:
    inc    %ecx
  jump_6d1d2:
    cmp    $0x10,%ecx
    jb     jump_6d1b4
  jump_6d1d7:
    cmp    $0x10,%ecx
    jne    jump_6d1fe
    mov    $0x5,%ecx
    mov    $data_12245c,%edi
    mov    $data_84ee1,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movsb  %ds:(%esi),%es:(%edi)
    mov    0x4(%ebp),%edi
    push   %edi
    mov    0x0(%ebp),%eax
    push   %eax
    mov    0x8(%ebp),%edx
    push   %edx
    jmp    jump_6d190
  jump_6d1fe:
    mov    0xc(%ebp),%eax
    movw   $0x0,0x30(%eax)
    movl   $0x0,0x14(%ebp)
    movl   $0xffffffff,0x18(%ebp)
    push   $0x66
    call   func_62392
    mov    %eax,%ecx
    add    $0x4,%esp
    mov    0xc(%ebp),%eax
    mov    %ecx,0x36(%eax)
    mov    0xc(%ebp),%eax
    mov    0x34(%eax),%ax
    and    $0xffff,%eax
    add    0x0(%ebp),%eax
    push   %eax
    push   $0x66
    call   func_6247d
    add    $0x8,%esp
    movl   $0x0,0x20(%ebp)
    movl   $0x0,0x24(%ebp)
    push   $0x0
    push   $0x0
    push   $0x300
    push   %ebp
    call   func_62607
    add    $0x10,%esp
    mov    0xc(%ebp),%eax
    cmpw   $0x0,0x2e(%eax)
    jg     jump_6d274
    movl   $0xffffffff,0x1c(%ebp)
    jmp    jump_6d2e8
  jump_6d274:
    push   $func_6cced
    call   func_62ae8
    add    $0x4,%esp
    mov    %eax,0x1c(%ebp)
    cmp    $0xffffffff,%eax
    jne    jump_6d2be
    mov    $0x5,%ecx
    mov    $data_12245c,%edi
    mov    $data_84ef8,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    mov    0xc(%ebp),%eax
    mov    0x36(%eax),%edx
    push   %edx
    push   $0x66
    call   func_6247d
    add    $0x8,%esp
    mov    0x4(%ebp),%ebx
    push   %ebx
    mov    0x0(%ebp),%ecx
    push   %ecx
    mov    0x8(%ebp),%esi
    push   %esi
    jmp    jump_6d190
  jump_6d2be:
    push   %ebp
    push   %eax
    call   func_62bd3
    add    $0x8,%esp
    mov    0xc(%ebp),%eax
    movswl 0x2e(%eax),%eax
    push   %eax
    mov    0x1c(%ebp),%edi
    push   %edi
    call   func_62d3c
    add    $0x8,%esp
    mov    0x1c(%ebp),%eax
    push   %eax
    call   func_62f06
    add    $0x4,%esp
  jump_6d2e8:
    mov    %ebp,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6d2ee:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    0x10(%esp),%esi
    cmpl   $0x0,0x20(%esi)
    je     jump_6d305
    mov    0x24(%esi),%ebx
    push   %ebx
    call   *0x20(%esi)
    add    $0x4,%esp
  jump_6d305:
    mov    0x1c(%esi),%ecx
    cmp    $0xffffffff,%ecx
    je     jump_6d316
    push   %ecx
    call   func_630a4
    add    $0x4,%esp
  jump_6d316:
    cmpl   $0x0,0x14(%esi)
    je     jump_6d33f
    mov    0x18(%esi),%eax
    cmp    $0xffffffff,%eax
    je     jump_6d32d
    push   %eax
    call   func_62580
    add    $0x4,%esp
  jump_6d32d:
    push   $0x0
    push   $0x0
    push   $0x306
    push   %esi
    call   func_62607
    add    $0x10,%esp
  jump_6d33f:
    mov    0xc(%esi),%eax
    mov    0x36(%eax),%ebx
    push   %ebx
    push   $0x66
    call   func_6247d
    add    $0x8,%esp
    mov    0x4(%esi),%ecx
    push   %ecx
    mov    (%esi),%edi
    push   %edi
    mov    0x8(%esi),%ebp
    push   %ebp
    call   func_61665
    add    $0xc,%esp
    push   $0x28
    push   %esi
    call   func_615bf
    add    $0x8,%esp
    xor    %edx,%edx
    jmp    jump_6d388
  jump_6d372:
    mov    %edx,%eax
    shl    $0x2,%eax
    cmp    data_12241c(%eax),%esi
    jne    jump_6d387
    xor    %ecx,%ecx
    mov    %ecx,data_12241c(%eax)
  jump_6d387:
    inc    %edx
  jump_6d388:
    cmp    $0x10,%edx
    jl     jump_6d372
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6d391:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    0xc(%esp),%esi
    mov    0xc(%esi),%eax
    mov    0x12(%eax),%ecx
    shr    $0x10,%ecx
    shl    $0x4,%ecx
    mov    0x12(%eax),%eax
    and    $0xffff,%eax
    add    %ecx,%eax
    je     jump_6d3ff
    call   func_741a6
    test   %eax,%eax
    je     jump_6d3ff
    mov    0xc(%esi),%ecx
    add    $0x3a,%ecx
    mov    $0x80,%ebx
    mov    %eax,%edx
    mov    %ecx,%eax
    call   func_72b40
    push   $0x0
    push   $0x0
    push   $0x303
    push   %esi
    call   func_62607
    add    $0x10,%esp
    cmp    $0xffffffff,%eax
    jne    jump_6d3e8
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_6d3e8:
    mov    0xc(%esi),%esi
    mov    $0x6,%ecx
    mov    $data_1225c0,%edi
    lea    0x16(%esi),%esi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    $data_1225c0,%eax
  jump_6d3ff:
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6d402:
/*----------------------------------------------------------------*/
    call   func_6cc64
    push   $0xc8
    push   $0x0
    call   func_6228e
    add    $0x8,%esp
    push   $0x1
    push   $0x1
    call   func_6228e
    add    $0x8,%esp
    push   $0x8000
    push   $0x2
    call   func_6228e
    add    $0x8,%esp
    push   $0x64
    push   $0x3
    call   func_6228e
    add    $0x8,%esp
    push   $0x10
    push   $0x4
    call   func_6228e
    add    $0x8,%esp
    push   $0x64
    push   $0x5
    call   func_6228e
    add    $0x8,%esp
    push   $0x28f
    push   $0x6
    call   func_6228e
    add    $0x8,%esp
    push   $0x0
    push   $0x7
    call   func_6228e
    add    $0x8,%esp
    push   $0x0
    push   $0x8
    call   func_6228e
    add    $0x8,%esp
    push   $0x1
    push   $0x9
    call   func_6228e
    add    $0x8,%esp
    push   $0x78
    push   $0xa
    call   func_6228e
    add    $0x8,%esp
    push   $0x8
    push   $0xb
    call   func_6228e
    add    $0x8,%esp
    push   $0x7f
    push   $0xc
    call   func_6228e
    add    $0x8,%esp
    push   $0x1
    push   $0xd
    call   func_6228e
    add    $0x8,%esp
    push   $0x0
    push   $0xe
    call   func_6228e
    add    $0x8,%esp
    push   $0x2
    push   $0xf
    call   func_6228e
    add    $0x8,%esp
    push   $0x1
    push   $0x10
    call   func_6228e
    add    $0x8,%esp
    push   $0x1
    push   $0x11
    call   func_6228e
    add    $0x8,%esp
    xor    %eax,%eax
    jmp    jump_6d4f6
  jump_6d4ec:
    xor    %ebx,%ebx
    mov    %ebx,data_12241c(,%eax,4)
    inc    %eax
  jump_6d4f6:
    cmp    $0x10,%eax
    jl     jump_6d4ec
    xor    %ah,%ah
    mov    %ah,data_12245c
    jmp    jump_6f7bc


/*----------------------------------------------------------------*/
func_6d508:
/*----------------------------------------------------------------*/
    push   %esi
    mov    $0xf,%esi
    jmp    jump_6d525
  jump_6d510:
    mov    data_12241c(,%esi,4),%eax
    test   %eax,%eax
    je     jump_6d524
    push   %eax
    call   func_6334b
    add    $0x4,%esp
  jump_6d524:
    dec    %esi
  jump_6d525:
    test   %esi,%esi
    jge    jump_6d510
    call   func_63111
    call   func_6f8aa
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_6d535:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    cmpl   $0x0,data_88784
    je     jump_6d5b8
    push   $func_6d535
    push   $func_6cc64
    call   func_616fa
    add    $0x8,%esp
    push   $0x40
    push   $data_12241c
    call   func_61736
    add    $0x8,%esp
    push   $0x48
    push   $data_12255c
    call   func_61736
    add    $0x8,%esp
    push   $0x100
    push   $data_12245c
    call   func_61736
    add    $0x8,%esp
    push   $0x18
    push   $data_1225a4
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_88780
    call   func_61736
    add    $0x8,%esp
    push   $0x4
    push   $data_1225bc
    call   func_61736
    add    $0x8,%esp
    xor    %ebx,%ebx
    mov    %ebx,data_88784
  jump_6d5b8:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_6d5bc:
    .long   func_6d9bc
    .long   func_6d9cd
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_6d9d9
    .long   func_6d9f8
    .long   func_6da0c
    .long   func_6da2b
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_6da3f
    .long   func_6da5c
    .long   func_6da6e
    .long   func_6da8b
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_6da9d
    .long   func_6dab1
    .long   0
    .long   0
    .long   func_6dac0
    .long   func_6dad6
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_6dae7
    .long   func_6db08
    .long   func_6db1e
    .long   func_6db3f
    .long   func_6db55
    .long   func_6db7a
    .long   func_6db94
    .long   func_6dbb9
    .long   func_6dbd3
    .long   func_6dbf6
    .long   func_6dc0e
    .long   func_6dc31
    .long   func_6dc49
    .long   func_6dc70
    .long   func_6dc8c
    .long   func_6dcb3
    .long   func_6dccf
    .long   func_6dcfc
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_6dd24
    .long   func_6dd7d
    .long   func_6ddcb
    .long   func_6de24
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_6de72
    .long   func_6dec9
    .long   func_6df15
    .long   func_6df6c
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_6dfb8
    .long   func_6dfe8
    .long   0
    .long   0
    .long   func_6e013
    .long   func_6e045
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_6e072
    .long   func_6e0cd
    .long   func_6e11d
    .long   func_6e178
    .long   func_6e1c8
    .long   func_6e227
    .long   func_6e27b
    .long   func_6e2da
    .long   func_6e32e
    .long   func_6e38b
    .long   func_6e3dd
    .long   func_6e43a
    .long   func_6e48c
    .long   func_6e4ed
    .long   func_6e543
    .long   func_6e5a4

vtable_6d7bc:
    .long   func_6e5fa
    .long   func_6e61b
    .long   func_6e63f
    .long   func_6e66b
    .long   0
    .long   0
    .long   func_6e69d
    .long   func_6e6c9
    .long   func_6e6fb
    .long   func_6e71f
    .long   func_6e746
    .long   func_6e774
    .long   0
    .long   0
    .long   func_6e7a8
    .long   func_6e7d6
    .long   func_6e80a
    .long   func_6e826
    .long   func_6e845
    .long   func_6e866
    .long   0
    .long   0
    .long   func_6e88d
    .long   func_6e8ae
    .long   func_6e8d5
    .long   func_6e8f4
    .long   func_6e916
    .long   func_6e939
    .long   0
    .long   0
    .long   func_6e962
    .long   func_6e985
    .long   func_6e9ae
    .long   func_6e9da
    .long   func_6ea09
    .long   func_6ea43
    .long   0
    .long   0
    .long   func_6ea83
    .long   func_6eabd
    .long   func_6eafd
    .long   func_6eb2f
    .long   func_6eb64
    .long   func_6eba0
    .long   0
    .long   0
    .long   func_6ebe2
    .long   func_6ec1e
    .long   func_6ec60
    .long   func_6ec87
    .long   func_6ecb1
    .long   func_6ece0
    .long   0
    .long   0
    .long   func_6ed15
    .long   func_6ed44
    .long   func_6ed79
    .long   func_6eda6
    .long   func_6edd6
    .long   func_6ee07
    .long   0
    .long   0
    .long   func_6ee3e
    .long   func_6ee6f
    .long   func_6eea6
    .long   func_6eec2
    .long   func_6eee8
    .long   func_6ef09
    .long   0
    .long   0
    .long   func_6ef34
    .long   func_6ef55
    .long   func_6ef80
    .long   func_6ef9f
    .long   func_6efc8
    .long   func_6efea
    .long   0
    .long   0
    .long   func_6f016
    .long   func_6f038
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   func_6f064
    .long   func_6f08b
    .long   func_6f0bc
    .long   func_6f0eb
    .long   0
    .long   0
    .long   func_6f124
    .long   func_6f153
    .long   func_6f18c
    .long   func_6f1b9
    .long   func_6f1f0
    .long   func_6f220
    .long   0
    .long   0
    .long   func_6f25a
    .long   func_6f28a
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0
    .long   0


/*----------------------------------------------------------------*/
func_6d9bc:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    xor    $0x8000,%eax
    mov    %ah,(%edi)
    inc    %edi
    dec    %ecx
    jne    func_6d9bc
    ret


/*----------------------------------------------------------------*/
func_6d9cd:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    mov    %ah,(%edi)
    inc    %edi
    dec    %ecx
    jne    func_6d9cd
    ret


/*----------------------------------------------------------------*/
func_6d9d9:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ah,%dl
    mov    %dx,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6d9d9
    ret


/*----------------------------------------------------------------*/
func_6d9f8:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %ah,%dl
    mov    %dx,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6d9f8
    ret


/*----------------------------------------------------------------*/
func_6da0c:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dh,%al
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6da0c
    ret


/*----------------------------------------------------------------*/
func_6da2b:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %dh,%al
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6da2b
    ret


/*----------------------------------------------------------------*/
func_6da3f:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ah,(%edi)
    mov    %dh,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_6da3f
    ret


/*----------------------------------------------------------------*/
func_6da5c:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %ah,(%edi)
    mov    %dh,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_6da5c
    ret


/*----------------------------------------------------------------*/
func_6da6e:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dh,(%edi)
    mov    %ah,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_6da6e
    ret


/*----------------------------------------------------------------*/
func_6da8b:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %dh,(%edi)
    mov    %ah,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_6da8b
    ret


/*----------------------------------------------------------------*/
func_6da9d:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    xor    $0x8000,%eax
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6da9d
    ret


/*----------------------------------------------------------------*/
func_6dab1:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6dab1
    ret


/*----------------------------------------------------------------*/
func_6dac0:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    xor    $0x8000,%eax
    xchg   %al,%ah
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6dac0
    ret


/*----------------------------------------------------------------*/
func_6dad6:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    xchg   %al,%ah
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6dad6
    ret


/*----------------------------------------------------------------*/
func_6dae7:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6dae7
    ret


/*----------------------------------------------------------------*/
func_6db08:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6db08
    ret


/*----------------------------------------------------------------*/
func_6db1e:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6db1e
    ret


/*----------------------------------------------------------------*/
func_6db3f:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6db3f
    ret


/*----------------------------------------------------------------*/
func_6db55:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6db55
    ret


/*----------------------------------------------------------------*/
func_6db7a:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6db7a
    ret


/*----------------------------------------------------------------*/
func_6db94:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6db94
    ret


/*----------------------------------------------------------------*/
func_6dbb9:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6dbb9
    ret


/*----------------------------------------------------------------*/
func_6dbd3:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6dbd3
    ret


/*----------------------------------------------------------------*/
func_6dbf6:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6dbf6
    ret


/*----------------------------------------------------------------*/
func_6dc0e:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6dc0e
    ret


/*----------------------------------------------------------------*/
func_6dc31:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6dc31
    ret


/*----------------------------------------------------------------*/
func_6dc49:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6dc49
    ret


/*----------------------------------------------------------------*/
func_6dc70:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6dc70
    ret


/*----------------------------------------------------------------*/
func_6dc8c:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6dc8c
    ret


/*----------------------------------------------------------------*/
func_6dcb3:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6dcb3
    ret


/*----------------------------------------------------------------*/
func_6dccf:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    cmp    $0x7fff,%eax
    jg     jump_6dcee
    cmp    $0xffff8000,%eax
    jl     jump_6dcf5
  jump_6dce2:
    xor    $0x8000,%eax
    mov    %ah,(%edi)
    inc    %edi
    dec    %ecx
    jne    func_6dccf
    ret
  jump_6dcee:
    mov    $0x7fff,%eax
    jmp    jump_6dce2
  jump_6dcf5:
    mov    $0xffff8000,%eax
    jmp    jump_6dce2


/*----------------------------------------------------------------*/
func_6dcfc:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    cmp    $0x7fff,%eax
    jg     jump_6dd16
    cmp    $0xffff8000,%eax
    jl     jump_6dd1d
  jump_6dd0f:
    mov    %ah,(%edi)
    inc    %edi
    dec    %ecx
    jne    func_6dcfc
    ret
  jump_6dd16:
    mov    $0x7fff,%eax
    jmp    jump_6dd0f
  jump_6dd1d:
    mov    $0xffff8000,%eax
    jmp    jump_6dd0f


/*----------------------------------------------------------------*/
func_6dd24:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6dd61
    cmp    $0xffff8000,%eax
    jl     jump_6dd68
  jump_6dd3a:
    cmp    $0x7fff,%edx
    jg     jump_6dd6f
    cmp    $0xffff8000,%edx
    jl     jump_6dd76
  jump_6dd4a:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ah,%dl
    mov    %dx,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6dd24
    ret
  jump_6dd61:
    mov    $0x7fff,%eax
    jmp    jump_6dd3a
  jump_6dd68:
    mov    $0xffff8000,%eax
    jmp    jump_6dd3a
  jump_6dd6f:
    mov    $0x7fff,%edx
    jmp    jump_6dd4a
  jump_6dd76:
    mov    $0xffff8000,%edx
    jmp    jump_6dd4a


/*----------------------------------------------------------------*/
func_6dd7d:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6ddaf
    cmp    $0xffff8000,%eax
    jl     jump_6ddb6
  jump_6dd93:
    cmp    $0x7fff,%edx
    jg     jump_6ddbd
    cmp    $0xffff8000,%edx
    jl     jump_6ddc4
  jump_6dda3:
    mov    %ah,%dl
    mov    %dx,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6dd7d
    ret
  jump_6ddaf:
    mov    $0x7fff,%eax
    jmp    jump_6dd93
  jump_6ddb6:
    mov    $0xffff8000,%eax
    jmp    jump_6dd93
  jump_6ddbd:
    mov    $0x7fff,%edx
    jmp    jump_6dda3
  jump_6ddc4:
    mov    $0xffff8000,%edx
    jmp    jump_6dda3


/*----------------------------------------------------------------*/
func_6ddcb:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6de08
    cmp    $0xffff8000,%eax
    jl     jump_6de0f
  jump_6dde1:
    cmp    $0x7fff,%edx
    jg     jump_6de16
    cmp    $0xffff8000,%edx
    jl     jump_6de1d
  jump_6ddf1:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dh,%al
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6ddcb
    ret
  jump_6de08:
    mov    $0x7fff,%eax
    jmp    jump_6dde1
  jump_6de0f:
    mov    $0xffff8000,%eax
    jmp    jump_6dde1
  jump_6de16:
    mov    $0x7fff,%edx
    jmp    jump_6ddf1
  jump_6de1d:
    mov    $0xffff8000,%edx
    jmp    jump_6ddf1


/*----------------------------------------------------------------*/
func_6de24:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6de56
    cmp    $0xffff8000,%eax
    jl     jump_6de5d
  jump_6de3a:
    cmp    $0x7fff,%edx
    jg     jump_6de64
    cmp    $0xffff8000,%edx
    jl     jump_6de6b
  jump_6de4a:
    mov    %dh,%al
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6de24
    ret
  jump_6de56:
    mov    $0x7fff,%eax
    jmp    jump_6de3a
  jump_6de5d:
    mov    $0xffff8000,%eax
    jmp    jump_6de3a
  jump_6de64:
    mov    $0x7fff,%edx
    jmp    jump_6de4a
  jump_6de6b:
    mov    $0xffff8000,%edx
    jmp    jump_6de4a


/*----------------------------------------------------------------*/
func_6de72:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6dead
    cmp    $0xffff8000,%eax
    jl     jump_6deb4
  jump_6de88:
    cmp    $0x7fff,%edx
    jg     jump_6debb
    cmp    $0xffff8000,%edx
    jl     jump_6dec2
  jump_6de98:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ah,(%edi)
    mov    %dh,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_6de72
    ret
  jump_6dead:
    mov    $0x7fff,%eax
    jmp    jump_6de88
  jump_6deb4:
    mov    $0xffff8000,%eax
    jmp    jump_6de88
  jump_6debb:
    mov    $0x7fff,%edx
    jmp    jump_6de98
  jump_6dec2:
    mov    $0xffff8000,%edx
    jmp    jump_6de98


/*----------------------------------------------------------------*/
func_6dec9:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6def9
    cmp    $0xffff8000,%eax
    jl     jump_6df00
  jump_6dedf:
    cmp    $0x7fff,%edx
    jg     jump_6df07
    cmp    $0xffff8000,%edx
    jl     jump_6df0e
  jump_6deef:
    mov    %ah,(%edi)
    mov    %dh,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_6dec9
    ret
  jump_6def9:
    mov    $0x7fff,%eax
    jmp    jump_6dedf
  jump_6df00:
    mov    $0xffff8000,%eax
    jmp    jump_6dedf
  jump_6df07:
    mov    $0x7fff,%edx
    jmp    jump_6deef
  jump_6df0e:
    mov    $0xffff8000,%edx
    jmp    jump_6deef


/*----------------------------------------------------------------*/
func_6df15:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6df50
    cmp    $0xffff8000,%eax
    jl     jump_6df57
  jump_6df2b:
    cmp    $0x7fff,%edx
    jg     jump_6df5e
    cmp    $0xffff8000,%edx
    jl     jump_6df65
  jump_6df3b:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dh,(%edi)
    mov    %ah,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_6df15
    ret
  jump_6df50:
    mov    $0x7fff,%eax
    jmp    jump_6df2b
  jump_6df57:
    mov    $0xffff8000,%eax
    jmp    jump_6df2b
  jump_6df5e:
    mov    $0x7fff,%edx
    jmp    jump_6df3b
  jump_6df65:
    mov    $0xffff8000,%edx
    jmp    jump_6df3b


/*----------------------------------------------------------------*/
func_6df6c:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6df9c
    cmp    $0xffff8000,%eax
    jl     jump_6dfa3
  jump_6df82:
    cmp    $0x7fff,%edx
    jg     jump_6dfaa
    cmp    $0xffff8000,%edx
    jl     jump_6dfb1
  jump_6df92:
    mov    %dh,(%edi)
    mov    %ah,(%ebx)
    inc    %edi
    inc    %ebx
    dec    %ecx
    jne    func_6df6c
    ret
  jump_6df9c:
    mov    $0x7fff,%eax
    jmp    jump_6df82
  jump_6dfa3:
    mov    $0xffff8000,%eax
    jmp    jump_6df82
  jump_6dfaa:
    mov    $0x7fff,%edx
    jmp    jump_6df92
  jump_6dfb1:
    mov    $0xffff8000,%edx
    jmp    jump_6df92


/*----------------------------------------------------------------*/
func_6dfb8:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    cmp    $0x7fff,%eax
    jg     jump_6dfda
    cmp    $0xffff8000,%eax
    jl     jump_6dfe1
  jump_6dfcb:
    xor    $0x8000,%eax
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6dfb8
    ret
  jump_6dfda:
    mov    $0x7fff,%eax
    jmp    jump_6dfcb
  jump_6dfe1:
    mov    $0xffff8000,%eax
    jmp    jump_6dfcb


/*----------------------------------------------------------------*/
func_6dfe8:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e005
    cmp    $0xffff8000,%eax
    jl     jump_6e00c
  jump_6dffb:
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6dfe8
    ret
  jump_6e005:
    mov    $0x7fff,%eax
    jmp    jump_6dffb
  jump_6e00c:
    mov    $0xffff8000,%eax
    jmp    jump_6dffb


/*----------------------------------------------------------------*/
func_6e013:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e037
    cmp    $0xffff8000,%eax
    jl     jump_6e03e
  jump_6e026:
    xor    $0x8000,%eax
    xchg   %al,%ah
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6e013
    ret
  jump_6e037:
    mov    $0x7fff,%eax
    jmp    jump_6e026
  jump_6e03e:
    mov    $0xffff8000,%eax
    jmp    jump_6e026


/*----------------------------------------------------------------*/
func_6e045:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    add    $0x4,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e064
    cmp    $0xffff8000,%eax
    jl     jump_6e06b
  jump_6e058:
    xchg   %al,%ah
    mov    %ax,(%edi)
    add    $0x2,%edi
    dec    %ecx
    jne    func_6e045
    ret
  jump_6e064:
    mov    $0x7fff,%eax
    jmp    jump_6e058
  jump_6e06b:
    mov    $0xffff8000,%eax
    jmp    jump_6e058


/*----------------------------------------------------------------*/
func_6e072:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e0b1
    cmp    $0xffff8000,%eax
    jl     jump_6e0b8
  jump_6e088:
    cmp    $0x7fff,%edx
    jg     jump_6e0bf
    cmp    $0xffff8000,%edx
    jl     jump_6e0c6
  jump_6e098:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6e072
    ret
  jump_6e0b1:
    mov    $0x7fff,%eax
    jmp    jump_6e088
  jump_6e0b8:
    mov    $0xffff8000,%eax
    jmp    jump_6e088
  jump_6e0bf:
    mov    $0x7fff,%edx
    jmp    jump_6e098
  jump_6e0c6:
    mov    $0xffff8000,%edx
    jmp    jump_6e098


/*----------------------------------------------------------------*/
func_6e0cd:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e101
    cmp    $0xffff8000,%eax
    jl     jump_6e108
  jump_6e0e3:
    cmp    $0x7fff,%edx
    jg     jump_6e10f
    cmp    $0xffff8000,%edx
    jl     jump_6e116
  jump_6e0f3:
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6e0cd
    ret
  jump_6e101:
    mov    $0x7fff,%eax
    jmp    jump_6e0e3
  jump_6e108:
    mov    $0xffff8000,%eax
    jmp    jump_6e0e3
  jump_6e10f:
    mov    $0x7fff,%edx
    jmp    jump_6e0f3
  jump_6e116:
    mov    $0xffff8000,%edx
    jmp    jump_6e0f3


/*----------------------------------------------------------------*/
func_6e11d:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e15c
    cmp    $0xffff8000,%eax
    jl     jump_6e163
  jump_6e133:
    cmp    $0x7fff,%edx
    jg     jump_6e16a
    cmp    $0xffff8000,%edx
    jl     jump_6e171
  jump_6e143:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6e11d
    ret
  jump_6e15c:
    mov    $0x7fff,%eax
    jmp    jump_6e133
  jump_6e163:
    mov    $0xffff8000,%eax
    jmp    jump_6e133
  jump_6e16a:
    mov    $0x7fff,%edx
    jmp    jump_6e143
  jump_6e171:
    mov    $0xffff8000,%edx
    jmp    jump_6e143


/*----------------------------------------------------------------*/
func_6e178:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e1ac
    cmp    $0xffff8000,%eax
    jl     jump_6e1b3
  jump_6e18e:
    cmp    $0x7fff,%edx
    jg     jump_6e1ba
    cmp    $0xffff8000,%edx
    jl     jump_6e1c1
  jump_6e19e:
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6e178
    ret
  jump_6e1ac:
    mov    $0x7fff,%eax
    jmp    jump_6e18e
  jump_6e1b3:
    mov    $0xffff8000,%eax
    jmp    jump_6e18e
  jump_6e1ba:
    mov    $0x7fff,%edx
    jmp    jump_6e19e
  jump_6e1c1:
    mov    $0xffff8000,%edx
    jmp    jump_6e19e


/*----------------------------------------------------------------*/
func_6e1c8:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e20b
    cmp    $0xffff8000,%eax
    jl     jump_6e212
  jump_6e1de:
    cmp    $0x7fff,%edx
    jg     jump_6e219
    cmp    $0xffff8000,%edx
    jl     jump_6e220
  jump_6e1ee:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6e1c8
    ret
  jump_6e20b:
    mov    $0x7fff,%eax
    jmp    jump_6e1de
  jump_6e212:
    mov    $0xffff8000,%eax
    jmp    jump_6e1de
  jump_6e219:
    mov    $0x7fff,%edx
    jmp    jump_6e1ee
  jump_6e220:
    mov    $0xffff8000,%edx
    jmp    jump_6e1ee


/*----------------------------------------------------------------*/
func_6e227:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e25f
    cmp    $0xffff8000,%eax
    jl     jump_6e266
  jump_6e23d:
    cmp    $0x7fff,%edx
    jg     jump_6e26d
    cmp    $0xffff8000,%edx
    jl     jump_6e274
  jump_6e24d:
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6e227
    ret
  jump_6e25f:
    mov    $0x7fff,%eax
    jmp    jump_6e23d
  jump_6e266:
    mov    $0xffff8000,%eax
    jmp    jump_6e23d
  jump_6e26d:
    mov    $0x7fff,%edx
    jmp    jump_6e24d
  jump_6e274:
    mov    $0xffff8000,%edx
    jmp    jump_6e24d


/*----------------------------------------------------------------*/
func_6e27b:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e2be
    cmp    $0xffff8000,%eax
    jl     jump_6e2c5
  jump_6e291:
    cmp    $0x7fff,%edx
    jg     jump_6e2cc
    cmp    $0xffff8000,%edx
    jl     jump_6e2d3
  jump_6e2a1:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6e27b
    ret
  jump_6e2be:
    mov    $0x7fff,%eax
    jmp    jump_6e291
  jump_6e2c5:
    mov    $0xffff8000,%eax
    jmp    jump_6e291
  jump_6e2cc:
    mov    $0x7fff,%edx
    jmp    jump_6e2a1
  jump_6e2d3:
    mov    $0xffff8000,%edx
    jmp    jump_6e2a1


/*----------------------------------------------------------------*/
func_6e2da:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e312
    cmp    $0xffff8000,%eax
    jl     jump_6e319
  jump_6e2f0:
    cmp    $0x7fff,%edx
    jg     jump_6e320
    cmp    $0xffff8000,%edx
    jl     jump_6e327
  jump_6e300:
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,0x2(%edi)
    add    $0x4,%edi
    dec    %ecx
    jne    func_6e2da
    ret
  jump_6e312:
    mov    $0x7fff,%eax
    jmp    jump_6e2f0
  jump_6e319:
    mov    $0xffff8000,%eax
    jmp    jump_6e2f0
  jump_6e320:
    mov    $0x7fff,%edx
    jmp    jump_6e300
  jump_6e327:
    mov    $0xffff8000,%edx
    jmp    jump_6e300


/*----------------------------------------------------------------*/
func_6e32e:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e36f
    cmp    $0xffff8000,%eax
    jl     jump_6e376
  jump_6e344:
    cmp    $0x7fff,%edx
    jg     jump_6e37d
    cmp    $0xffff8000,%edx
    jl     jump_6e384
  jump_6e354:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6e32e
    ret
  jump_6e36f:
    mov    $0x7fff,%eax
    jmp    jump_6e344
  jump_6e376:
    mov    $0xffff8000,%eax
    jmp    jump_6e344
  jump_6e37d:
    mov    $0x7fff,%edx
    jmp    jump_6e354
  jump_6e384:
    mov    $0xffff8000,%edx
    jmp    jump_6e354


/*----------------------------------------------------------------*/
func_6e38b:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e3c1
    cmp    $0xffff8000,%eax
    jl     jump_6e3c8
  jump_6e3a1:
    cmp    $0x7fff,%edx
    jg     jump_6e3cf
    cmp    $0xffff8000,%edx
    jl     jump_6e3d6
  jump_6e3b1:
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6e38b
    ret
  jump_6e3c1:
    mov    $0x7fff,%eax
    jmp    jump_6e3a1
  jump_6e3c8:
    mov    $0xffff8000,%eax
    jmp    jump_6e3a1
  jump_6e3cf:
    mov    $0x7fff,%edx
    jmp    jump_6e3b1
  jump_6e3d6:
    mov    $0xffff8000,%edx
    jmp    jump_6e3b1


/*----------------------------------------------------------------*/
func_6e3dd:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e41e
    cmp    $0xffff8000,%eax
    jl     jump_6e425
  jump_6e3f3:
    cmp    $0x7fff,%edx
    jg     jump_6e42c
    cmp    $0xffff8000,%edx
    jl     jump_6e433
  jump_6e403:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6e3dd
    ret
  jump_6e41e:
    mov    $0x7fff,%eax
    jmp    jump_6e3f3
  jump_6e425:
    mov    $0xffff8000,%eax
    jmp    jump_6e3f3
  jump_6e42c:
    mov    $0x7fff,%edx
    jmp    jump_6e403
  jump_6e433:
    mov    $0xffff8000,%edx
    jmp    jump_6e403


/*----------------------------------------------------------------*/
func_6e43a:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e470
    cmp    $0xffff8000,%eax
    jl     jump_6e477
  jump_6e450:
    cmp    $0x7fff,%edx
    jg     jump_6e47e
    cmp    $0xffff8000,%edx
    jl     jump_6e485
  jump_6e460:
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6e43a
    ret
  jump_6e470:
    mov    $0x7fff,%eax
    jmp    jump_6e450
  jump_6e477:
    mov    $0xffff8000,%eax
    jmp    jump_6e450
  jump_6e47e:
    mov    $0x7fff,%edx
    jmp    jump_6e460
  jump_6e485:
    mov    $0xffff8000,%edx
    jmp    jump_6e460


/*----------------------------------------------------------------*/
func_6e48c:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e4d1
    cmp    $0xffff8000,%eax
    jl     jump_6e4d8
  jump_6e4a2:
    cmp    $0x7fff,%edx
    jg     jump_6e4df
    cmp    $0xffff8000,%edx
    jl     jump_6e4e6
  jump_6e4b2:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6e48c
    ret
  jump_6e4d1:
    mov    $0x7fff,%eax
    jmp    jump_6e4a2
  jump_6e4d8:
    mov    $0xffff8000,%eax
    jmp    jump_6e4a2
  jump_6e4df:
    mov    $0x7fff,%edx
    jmp    jump_6e4b2
  jump_6e4e6:
    mov    $0xffff8000,%edx
    jmp    jump_6e4b2


/*----------------------------------------------------------------*/
func_6e4ed:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e527
    cmp    $0xffff8000,%eax
    jl     jump_6e52e
  jump_6e503:
    cmp    $0x7fff,%edx
    jg     jump_6e535
    cmp    $0xffff8000,%edx
    jl     jump_6e53c
  jump_6e513:
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %ax,(%edi)
    mov    %dx,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6e4ed
    ret
  jump_6e527:
    mov    $0x7fff,%eax
    jmp    jump_6e503
  jump_6e52e:
    mov    $0xffff8000,%eax
    jmp    jump_6e503
  jump_6e535:
    mov    $0x7fff,%edx
    jmp    jump_6e513
  jump_6e53c:
    mov    $0xffff8000,%edx
    jmp    jump_6e513


/*----------------------------------------------------------------*/
func_6e543:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e588
    cmp    $0xffff8000,%eax
    jl     jump_6e58f
  jump_6e559:
    cmp    $0x7fff,%edx
    jg     jump_6e596
    cmp    $0xffff8000,%edx
    jl     jump_6e59d
  jump_6e569:
    xor    $0x8000,%eax
    xor    $0x8000,%edx
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6e543
    ret
  jump_6e588:
    mov    $0x7fff,%eax
    jmp    jump_6e559
  jump_6e58f:
    mov    $0xffff8000,%eax
    jmp    jump_6e559
  jump_6e596:
    mov    $0x7fff,%edx
    jmp    jump_6e569
  jump_6e59d:
    mov    $0xffff8000,%edx
    jmp    jump_6e569


/*----------------------------------------------------------------*/
func_6e5a4:
/*----------------------------------------------------------------*/
    mov    (%esi),%eax
    mov    0x4(%esi),%edx
    add    $0x8,%esi
    cmp    $0x7fff,%eax
    jg     jump_6e5de
    cmp    $0xffff8000,%eax
    jl     jump_6e5e5
  jump_6e5ba:
    cmp    $0x7fff,%edx
    jg     jump_6e5ec
    cmp    $0xffff8000,%edx
    jl     jump_6e5f3
  jump_6e5ca:
    xchg   %al,%ah
    xchg   %dl,%dh
    mov    %dx,(%edi)
    mov    %ax,(%ebx)
    add    $0x2,%edi
    add    $0x2,%ebx
    dec    %ecx
    jne    func_6e5a4
    ret
  jump_6e5de:
    mov    $0x7fff,%eax
    jmp    jump_6e5ba
  jump_6e5e5:
    mov    $0xffff8000,%eax
    jmp    jump_6e5ba
  jump_6e5ec:
    mov    $0x7fff,%edx
    jmp    jump_6e5ca
  jump_6e5f3:
    mov    $0xffff8000,%edx
    jmp    jump_6e5ca


/*----------------------------------------------------------------*/
func_6e5fa:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e61a
    mov    (%esi),%ah
    xor    $0x8000,%eax
    inc    %esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e5fa
  jump_6e61a:
    ret


/*----------------------------------------------------------------*/
func_6e61b:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e63e
    mov    (%esi),%ah
    xor    $0x8000,%eax
    inc    %esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e61b
  jump_6e63e:
    ret


/*----------------------------------------------------------------*/
func_6e63f:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e66a
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e63f
  jump_6e66a:
    ret


/*----------------------------------------------------------------*/
func_6e66b:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e69c
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e66b
  jump_6e69c:
    ret


/*----------------------------------------------------------------*/
func_6e69d:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e6c8
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e69d
  jump_6e6c8:
    ret


/*----------------------------------------------------------------*/
func_6e6c9:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e6fa
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e6c9
  jump_6e6fa:
    ret


/*----------------------------------------------------------------*/
func_6e6fb:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e71e
    mov    (%esi),%ax
    xor    $0x8000,%eax
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e6fb
  jump_6e71e:
    ret


/*----------------------------------------------------------------*/
func_6e71f:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e745
    mov    (%esi),%ax
    xor    $0x8000,%eax
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e71f
  jump_6e745:
    ret


/*----------------------------------------------------------------*/
func_6e746:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e773
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e746
  jump_6e773:
    ret


/*----------------------------------------------------------------*/
func_6e774:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e7a7
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e774
  jump_6e7a7:
    ret


/*----------------------------------------------------------------*/
func_6e7a8:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e7d5
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e7a8
  jump_6e7d5:
    ret


/*----------------------------------------------------------------*/
func_6e7d6:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e809
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e7d6
  jump_6e809:
    ret


/*----------------------------------------------------------------*/
func_6e80a:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e825
    mov    (%esi),%ah
    inc    %esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e80a
  jump_6e825:
    ret


/*----------------------------------------------------------------*/
func_6e826:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e844
    mov    (%esi),%ah
    inc    %esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e826
  jump_6e844:
    ret


/*----------------------------------------------------------------*/
func_6e845:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e865
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e845
  jump_6e865:
    ret


/*----------------------------------------------------------------*/
func_6e866:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e88c
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e866
  jump_6e88c:
    ret


/*----------------------------------------------------------------*/
func_6e88d:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e8ad
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e88d
  jump_6e8ad:
    ret


/*----------------------------------------------------------------*/
func_6e8ae:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e8d4
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e8ae
  jump_6e8d4:
    ret


/*----------------------------------------------------------------*/
func_6e8d5:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e8f3
    mov    (%esi),%ax
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e8d5
  jump_6e8f3:
    ret


/*----------------------------------------------------------------*/
func_6e8f4:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e915
    mov    (%esi),%ax
    add    $0x2,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e8f4
  jump_6e915:
    ret


/*----------------------------------------------------------------*/
func_6e916:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e938
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e916
  jump_6e938:
    ret


/*----------------------------------------------------------------*/
func_6e939:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e961
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e939
  jump_6e961:
    ret


/*----------------------------------------------------------------*/
func_6e962:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e984
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e962
  jump_6e984:
    ret


/*----------------------------------------------------------------*/
func_6e985:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e9ad
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    add    $0x4,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e985
  jump_6e9ad:
    ret


/*----------------------------------------------------------------*/
func_6e9ae:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6e9d9
    mov    (%esi),%ah
    xor    $0x8000,%eax
    add    data_8879c,%ecx
    adc    data_887a0,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6e9ae
  jump_6e9d9:
    ret


/*----------------------------------------------------------------*/
func_6e9da:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ea08
    mov    (%esi),%ah
    xor    $0x8000,%eax
    add    data_8879c,%ecx
    adc    data_887a0,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6e9da
  jump_6ea08:
    ret


/*----------------------------------------------------------------*/
func_6ea09:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ea42
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6ea09
  jump_6ea42:
    ret


/*----------------------------------------------------------------*/
func_6ea43:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ea82
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6ea43
  jump_6ea82:
    ret


/*----------------------------------------------------------------*/
func_6ea83:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6eabc
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6ea83
  jump_6eabc:
    ret


/*----------------------------------------------------------------*/
func_6eabd:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6eafc
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6eabd
  jump_6eafc:
    ret


/*----------------------------------------------------------------*/
func_6eafd:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6eb2e
    mov    (%esi),%ax
    xor    $0x8000,%eax
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6eafd
  jump_6eb2e:
    ret


/*----------------------------------------------------------------*/
func_6eb2f:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6eb63
    mov    (%esi),%ax
    xor    $0x8000,%eax
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6eb2f
  jump_6eb63:
    ret


/*----------------------------------------------------------------*/
func_6eb64:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6eb9f
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6eb64
  jump_6eb9f:
    ret


/*----------------------------------------------------------------*/
func_6eba0:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ebe1
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6eba0
  jump_6ebe1:
    ret


/*----------------------------------------------------------------*/
func_6ebe2:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ec1d
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6ebe2
  jump_6ec1d:
    ret


/*----------------------------------------------------------------*/
func_6ec1e:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ec5f
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    xor    $0x8000,%eax
    xor    $0x8000,%ebx
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6ec1e
  jump_6ec5f:
    ret


/*----------------------------------------------------------------*/
func_6ec60:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ec86
    mov    (%esi),%ah
    add    data_8879c,%ecx
    adc    data_887a0,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6ec60
  jump_6ec86:
    ret


/*----------------------------------------------------------------*/
func_6ec87:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ecb0
    mov    (%esi),%ah
    add    data_8879c,%ecx
    adc    data_887a0,%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6ec87
  jump_6ecb0:
    ret


/*----------------------------------------------------------------*/
func_6ecb1:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ecdf
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6ecb1
  jump_6ecdf:
    ret


/*----------------------------------------------------------------*/
func_6ece0:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ed14
    mov    (%esi),%ah
    mov    0x1(%esi),%bh
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6ece0
  jump_6ed14:
    ret


/*----------------------------------------------------------------*/
func_6ed15:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ed43
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6ed15
  jump_6ed43:
    ret


/*----------------------------------------------------------------*/
func_6ed44:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ed78
    mov    (%esi),%bh
    mov    0x1(%esi),%ah
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6ed44
  jump_6ed78:
    ret


/*----------------------------------------------------------------*/
func_6ed79:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6eda5
    mov    (%esi),%ax
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6ed79
  jump_6eda5:
    ret


/*----------------------------------------------------------------*/
func_6eda6:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6edd5
    mov    (%esi),%ax
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6eda6
  jump_6edd5:
    ret


/*----------------------------------------------------------------*/
func_6edd6:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ee06
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6edd6
  jump_6ee06:
    ret


/*----------------------------------------------------------------*/
func_6ee07:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ee3d
    mov    (%esi),%ax
    mov    0x2(%esi),%bx
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6ee07
  jump_6ee3d:
    ret


/*----------------------------------------------------------------*/
func_6ee3e:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ee6e
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6ee3e
  jump_6ee6e:
    ret


/*----------------------------------------------------------------*/
func_6ee6f:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6eea5
    mov    (%esi),%bx
    mov    0x2(%esi),%ax
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    movswl %ax,%ebp
    add    %ebp,(%edi)
    movswl %bx,%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6ee6f
  jump_6eea5:
    ret


/*----------------------------------------------------------------*/
func_6eea6:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6eec1
    mov    (%esi),%al
    inc    %esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6eea6
  jump_6eec1:
    ret


/*----------------------------------------------------------------*/
func_6eec2:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6eee7
    mov    (%esi),%al
    inc    %esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%eax,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6eec2
  jump_6eee7:
    ret


/*----------------------------------------------------------------*/
func_6eee8:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ef08
    mov    (%esi),%al
    mov    0x1(%esi),%bl
    add    $0x2,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6eee8
  jump_6ef08:
    ret


/*----------------------------------------------------------------*/
func_6ef09:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ef33
    mov    (%esi),%al
    mov    0x1(%esi),%bl
    add    $0x2,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6ef09
  jump_6ef33:
    ret


/*----------------------------------------------------------------*/
func_6ef34:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ef54
    mov    (%esi),%bl
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6ef34
  jump_6ef54:
    ret


/*----------------------------------------------------------------*/
func_6ef55:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ef7f
    mov    (%esi),%bl
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6ef55
  jump_6ef7f:
    ret


/*----------------------------------------------------------------*/
func_6ef80:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6ef9e
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6ef80
  jump_6ef9e:
    ret


/*----------------------------------------------------------------*/
func_6ef9f:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6efc7
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%eax,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6ef9f
  jump_6efc7:
    ret


/*----------------------------------------------------------------*/
func_6efc8:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6efe9
    mov    0x1(%esi),%al
    mov    0x3(%esi),%bl
    add    $0x4,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6efc8
  jump_6efe9:
    ret


/*----------------------------------------------------------------*/
func_6efea:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f015
    mov    0x1(%esi),%al
    mov    0x3(%esi),%bl
    add    $0x4,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6efea
  jump_6f015:
    ret


/*----------------------------------------------------------------*/
func_6f016:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f037
    mov    0x1(%esi),%bl
    mov    0x3(%esi),%al
    add    $0x4,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6f016
  jump_6f037:
    ret


/*----------------------------------------------------------------*/
func_6f038:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f063
    mov    0x1(%esi),%bl
    mov    0x3(%esi),%al
    add    $0x4,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6f038
  jump_6f063:
    ret


/*----------------------------------------------------------------*/
func_6f064:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f08a
    mov    (%esi),%al
    add    data_8879c,%ecx
    adc    data_887a0,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6f064
  jump_6f08a:
    ret


/*----------------------------------------------------------------*/
func_6f08b:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f0bb
    mov    (%esi),%al
    add    data_8879c,%ecx
    adc    data_887a0,%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%eax,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6f08b
  jump_6f0bb:
    ret


/*----------------------------------------------------------------*/
func_6f0bc:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f0ea
    mov    (%esi),%al
    mov    0x1(%esi),%bl
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6f0bc
  jump_6f0ea:
    ret


/*----------------------------------------------------------------*/
func_6f0eb:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f123
    mov    (%esi),%al
    mov    0x1(%esi),%bl
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6f0eb
  jump_6f123:
    ret


/*----------------------------------------------------------------*/
func_6f124:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f152
    mov    (%esi),%bl
    mov    0x1(%esi),%al
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6f124
  jump_6f152:
    ret


/*----------------------------------------------------------------*/
func_6f153:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f18b
    mov    (%esi),%bl
    mov    0x1(%esi),%al
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6f153
  jump_6f18b:
    ret


/*----------------------------------------------------------------*/
func_6f18c:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f1b8
    mov    0x1(%esi),%al
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6f18c
  jump_6f1b8:
    ret


/*----------------------------------------------------------------*/
func_6f1b9:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f1ef
    mov    0x1(%esi),%al
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%eax,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6f1b9
  jump_6f1ef:
    ret


/*----------------------------------------------------------------*/
func_6f1f0:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f21f
    mov    0x1(%esi),%al
    mov    0x3(%esi),%bl
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6f1f0
  jump_6f21f:
    ret


/*----------------------------------------------------------------*/
func_6f220:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f259
    mov    0x1(%esi),%al
    mov    0x3(%esi),%bl
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6f220
  jump_6f259:
    ret


/*----------------------------------------------------------------*/
func_6f25a:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f289
    mov    0x1(%esi),%bl
    mov    0x3(%esi),%al
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    add    $0x4,%edi
    cmp    data_88798,%edi
    jb     func_6f25a
  jump_6f289:
    ret


/*----------------------------------------------------------------*/
func_6f28a:
/*----------------------------------------------------------------*/
    cmp    data_88790,%esi
    jae    jump_6f2c3
    mov    0x1(%esi),%bl
    mov    0x3(%esi),%al
    xor    %ebp,%ebp
    add    data_8879c,%ecx
    adc    %ebp,%ebp
    add    data_887a0(,%ebp,4),%esi
    mov    (%edx,%eax,4),%ebp
    add    %ebp,(%edi)
    mov    0x400(%edx,%ebx,4),%ebp
    add    %ebp,0x4(%edi)
    add    $0x8,%edi
    cmp    data_88798,%edi
    jb     func_6f28a
  jump_6f2c3:
    ret


/*----------------------------------------------------------------*/
func_6f2c4:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %ds
    push   %es
    mov    0x8(%ebp),%ecx
    mov    (%ecx),%edi
    mov    $0x0,%eax
    cmpl   $0x2,0x18(%edi)
    je     jump_6f2e2
    cmpl   $0x3,0x18(%edi)
    jne    jump_6f2e5
  jump_6f2e2:
    or     $0x1,%eax
  jump_6f2e5:
    cmpl   $0x2,0x34(%ecx)
    je     jump_6f2f1
    cmpl   $0x3,0x34(%ecx)
    jne    jump_6f300
  jump_6f2f1:
    or     $0x2,%eax
    testl  $0x2,0x38(%ecx)
    je     jump_6f300
    or     $0x4,%eax
  jump_6f300:
    cmpl   $0x1,0x34(%ecx)
    je     jump_6f30c
    cmpl   $0x3,0x34(%ecx)
    jne    jump_6f30f
  jump_6f30c:
    or     $0x8,%eax
  jump_6f30f:
    cmpl   $0x7f,0x40(%ecx)
    jne    jump_6f31b
    cmpl   $0x40,0x44(%ecx)
    je     jump_6f320
  jump_6f31b:
    or     $0x40,%eax
    jmp    jump_6f32c
  jump_6f320:
    testl  $0x1,0x38(%ecx)
    je     jump_6f32c
    or     $0x10,%eax
  jump_6f32c:
    mov    %eax,data_88788
    mov    $0x0,%eax
    mov    0x3c(%ecx),%edx
    cmp    $0x0,%edx
    jg     jump_6f343
    mov    $0x1,%edx
  jump_6f343:
    mov    0x14(%edi),%ebx
    shl    $0x10,%ebx
    div    %ebx
    mov    %eax,%edx
    sub    $0x10000,%edx
    jg     jump_6f357
    neg    %edx
  jump_6f357:
    cmp    data_122574,%edx
    jbe    jump_6f3a1
    mov    %eax,%ebx
    shr    $0x10,%ebx
    shl    $0x10,%eax
    mov    %eax,data_8879c
    mov    %ebx,%eax
    inc    %ebx
    testl  $0x2,data_88788
    je     jump_6f37f
    shl    %eax
    shl    %ebx
  jump_6f37f:
    testl  $0x8,data_88788
    je     jump_6f38f
    shl    %eax
    shl    %ebx
  jump_6f38f:
    mov    %eax,data_887a0
    mov    %ebx,data_887a4
    orl    $0x20,data_88788
  jump_6f3a1:
    mov    0x50(%edi),%eax
    mov    %eax,data_88794
    add    0x4c(%edi),%eax
    mov    %eax,data_88798
    mov    data_88794,%edi
  jump_6f3b7:
    mov    0x28(%ecx),%ebx
    mov    0x8(%ecx,%ebx,4),%eax
    add    0x18(%ecx,%ebx,4),%eax
    mov    %eax,data_8878c
    mov    0x8(%ecx,%ebx,4),%eax
    add    0x10(%ecx,%ebx,4),%eax
    mov    %eax,data_88790
    cmpl   $0x0,0x848(%ecx)
    jne    jump_6f49d
  jump_6f3e1:
    mov    data_8878c,%esi
    lea    0x48(%ecx),%edx
    mov    $0x0,%eax
    mov    $0x0,%ebx
    mov    $0x80000000,%ecx
    push   %ebp
    mov    data_88788,%ebp
    call   *vtable_6d7bc(,%ebp,4)
    pop    %ebp
    mov    0x8(%ebp),%ecx
    mov    0x28(%ecx),%ebx
    mov    %esi,%eax
    sub    0x8(%ecx,%ebx,4),%eax
    mov    %eax,0x18(%ecx,%ebx,4)
    cmp    data_88790,%esi
    jb     jump_6f485
    cmpl   $0x0,0x84c(%ecx)
    jne    jump_6f4b1
  jump_6f42d:
    cmpl   $0x0,0x30(%ecx)
    je     jump_6f43c
    cmpl   $0x1,0x30(%ecx)
    je     jump_6f455
    decl   0x30(%ecx)
  jump_6f43c:
    mov    0x28(%ecx),%ebx
    movl   $0x0,0x18(%ecx,%ebx,4)
    cmp    data_88798,%edi
    jb     jump_6f3b7
    jmp    jump_6f485
  jump_6f455:
    mov    0x28(%ecx),%ebx
    xor    $0x1,%ebx
    cmpl   $0x0,0x20(%ecx,%ebx,4)
    jne    jump_6f475
    cmpl   $0x0,0x10(%ecx,%ebx,4)
    je     jump_6f485
    cmpl   $0x0,0x18(%ecx,%ebx,4)
    jne    jump_6f485
    mov    %ebx,0x28(%ecx)
    jmp    jump_6f43c
  jump_6f475:
    movl   $0x2,0x4(%ecx)
    cmpl   $0x0,0x850(%ecx)
    jne    jump_6f48c
  jump_6f485:
    pop    %es
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_6f48c:
    push   %ecx
    mov    %esp,%esi
    mov    %ecx,%eax
    push   %eax
    call   *0x850(%ecx)
    mov    %esi,%esp
    pop    %ecx
    jmp    jump_6f485
  jump_6f49d:
    push   %ecx
    mov    %esp,%esi
    mov    %ecx,%eax
    push   %eax
    call   *0x848(%ecx)
    mov    %esi,%esp
    pop    %ecx
    jmp    jump_6f3e1
  jump_6f4b1:
    push   %ecx
    mov    %esp,%esi
    mov    %ecx,%eax
    push   %eax
    call   *0x84c(%ecx)
    mov    %esi,%esp
    pop    %ecx
    jmp    jump_6f42d


/*----------------------------------------------------------------*/
func_6f4c5:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %ds
    push   %es
    mov    0x8(%ebp),%ebx
    mov    0x1c(%ebx),%eax
    and    $0xf,%eax
    cmpl   $0x2,0x18(%ebx)
    je     jump_6f4e2
    cmpl   $0x3,0x18(%ebx)
    jne    jump_6f4e5
  jump_6f4e2:
    or     $0x10,%eax
  jump_6f4e5:
    cmpl   $0x1,0x18(%ebx)
    je     jump_6f4f1
    cmpl   $0x3,0x18(%ebx)
    jne    jump_6f4f4
  jump_6f4f1:
    or     $0x20,%eax
  jump_6f4f4:
    cmpl   $0x0,0x64(%ebx)
    je     jump_6f4fd
    or     $0x40,%eax
  jump_6f4fd:
    mov    %eax,data_88788
    mov    0x50(%ebx),%esi
    mov    0x48(%ebx),%ecx
    testl  $0x20,0x1c(%ebx)
    jne    jump_6f52b
    mov    0xc(%ebp),%eax
    mov    0x2c(%ebx,%eax,4),%edi
    testl  $0x8,0x1c(%ebx)
    je     jump_6f544
    mov    0x10(%ebx),%eax
    shr    %eax
    lea    (%eax,%edi,1),%ebx
    jmp    jump_6f544
  jump_6f52b:
    orl    $0x8,data_88788
    mov    0x10(%ebx),%eax
    mov    0x2c(%ebx),%edi
    lea    (%eax,%edi,1),%ebx
    shr    %eax
    mull   0xc(%ebp)
    add    %eax,%edi
    add    %eax,%ebx
  jump_6f544:
    mov    data_88788,%eax
    call   *vtable_6d5bc(,%eax,4)
    pop    %es
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6f557:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %ds
    push   %es
    cld
    push   %ds
    pop    %es
    mov    0x8(%ebp),%ebx
    mov    0x50(%ebx),%edi
    mov    0x4c(%ebx),%ecx
    mov    $0x0,%eax
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    pop    %es
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6f583:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %edi
    push   %ds
    push   %es
    push   $data_887a8
    push   $data_88788
    call   func_61691
    add    $0x8,%esp
    push   $func_6f583
    push   $vtable_6d5bc
    call   func_61691
    add    $0x8,%esp
    pop    %es
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6f5b4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %edi
    incl   data_8893e
    pop    %edi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6f5c1:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %edi
    decl   data_8893e
    pop    %edi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6f5ce:
/*----------------------------------------------------------------*/
    cmpl   $0x0,%cs:data_8893a
    ja     jump_6f6ed
    pusha
    push   %ds
    push   %es
    push   %fs
    push   %gs
    mov    %esp,%ebp
    cld
    data16 mov %cs:data_88942,%ds
    data16 mov %cs:data_88942,%es
    incl   data_8893a
    mov    %ss,data_89350
    mov    %esp,data_89354
    mov    %ds,%ax
    mov    %ax,%ss
    mov    $data_89350,%esp
    mov    data_88936,%edx
    mov    $0x0,%edi
  jump_6f61e:
    cmpl   $0x2,data_887e8(%edi)
    jne    jump_6f649
    mov    data_88828(%edi),%eax
    add    %edx,%eax
    cmp    data_88868(%edi),%eax
    jb     jump_6f643
    sub    data_88868(%edi),%eax
    incl   data_888a8(%edi)
  jump_6f643:
    mov    %eax,data_88828(%edi)
  jump_6f649:
    add    $0x4,%edi
    cmp    $0x40,%edi
    jb     jump_6f61e
    mov    $0x20,%al
    out    %al,$0x20
    sti
    cmpl   $0x0,data_8893e
    jg     jump_6f68e
    mov    $0x0,%edi
  jump_6f664:
    cmpl   $0x0,data_888a8(%edi)
    je     jump_6f686
    decl   data_888a8(%edi)
    mov    %esp,%esi
    mov    data_888e8(%edi),%eax
    push   %eax
    call   *data_887a8(%edi)
    mov    %esi,%esp
    jmp    jump_6f664
  jump_6f686:
    add    $0x4,%edi
    cmp    $0x3c,%edi
    jb     jump_6f664
  jump_6f68e:
    cmpl   $0x0,data_888e4
    je     jump_6f6d1
    decl   data_888e4
    decl   data_8893a
    mov    data_89350,%ss
    mov    data_89354,%esp
    mov    data_88928,%ecx
    movzwl data_8892c,%eax
    mov    %ebp,%esp
    xchg   %ecx,0x28(%ebp)
    xchg   %eax,0x2c(%ebp)
    pop    %gs
    pop    %fs
    pop    %es
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebp
    pop    %ebx
    pop    %ebx
    pop    %edx
    lret
  jump_6f6d1:
    decl   data_8893a
    mov    data_89350,%ss
    mov    data_89354,%esp
    mov    %ebp,%esp
    pop    %gs
    pop    %fs
    pop    %es
    pop    %ds
    popa
    iret
  jump_6f6ed:
    push   %eax
    mov    $0x20,%al
    out    %al,$0x20
    pop    %eax
    iret


/*----------------------------------------------------------------*/
func_6f6f4:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    pushf
    cli
    mov    $0x36,%al
    out    %al,$0x43
    mov    0x8(%ebp),%eax
    mov    %eax,data_88932
    jmp    jump_6f70a
  jump_6f70a:
    out    %al,$0x40
    mov    %ah,%al
    jmp    jump_6f710
  jump_6f710:
    out    %al,$0x40
    push   %ebp
    mov    %esp,%ebp
    testb  $0x2,0x5(%ebp)
    cli
    je     jump_6f71d
    sti
  jump_6f71d:
    pop    %ebp
    popf
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6f724:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    mov    $0x0,%eax
    cmpl   $0xd68d,0x8(%ebp)
    jae    jump_6f749
    mov    0x8(%ebp),%eax
    mov    $0x20bc,%ebx
    mov    $0x2710,%ecx
    mul    %ecx
    div    %ebx
  jump_6f749:
    push   %eax
    call   func_6f6f4
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6f757:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    call   func_62388
    push   %ds
    pop    %es
    cld
    mov    $0xffffffff,%ecx
    mov    $0x0,%edi
  jump_6f76d:
    cmpl   $0x0,data_887e8(%edi)
    je     jump_6f782
    mov    data_88868(%edi),%eax
    cmp    %ecx,%eax
    jae    jump_6f782
    mov    %eax,%ecx
  jump_6f782:
    add    $0x4,%edi
    cmp    $0x40,%edi
    jb     jump_6f76d
    cmp    data_88936,%ecx
    je     jump_6f7b2
    mov    %ecx,data_88936
    push   %ecx
    call   func_6f724
    add    $0x4,%esp
    mov    $0x0,%eax
    mov    $data_88828,%edi
    mov    $0x10,%ecx
    rep stos %eax,%es:(%edi)
  jump_6f7b2:
    call   func_6238d
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    ret
  jump_6f7bc:
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    pushf
    cli
    push   %ds
    pop    %es
    cld
    data16 mov %ds,data_88942
    data16 mov data_88942,%es
    call   func_6ff86
    movl   $0x0,data_8893a
    movl   $0x0,data_8893e
    movl   $0xffffffff,data_88936
    movl   $0xffffffff,data_88944
    mov    $0x0,%eax
    mov    $data_887e8,%edi
    mov    $0x10,%ecx
    rep stos %eax,%es:(%edi)
    mov    $data_88828,%edi
    mov    $0x10,%ecx
    rep stos %eax,%es:(%edi)
    mov    $data_88868,%edi
    mov    $0x10,%ecx
    rep stos %eax,%es:(%edi)
    mov    $data_888a8,%edi
    mov    $0x10,%ecx
    rep stos %eax,%es:(%edi)
    mov    $0x8,%eax
    push   %eax
    mov    %eax,%ebx
    mov    $0x200,%eax
    int    $0x31
    shl    $0x10,%ecx
    mov    %dx,%cx
    pop    %eax
    push   %ecx
    mov    $0x35,%ah
    push   %es
    int    $0x21
    mov    %es,%dx
    pop    %es
    pop    %ecx
    mov    %ebx,data_88928
    mov    %dx,data_8892c
    mov    %ecx,data_8892e
    mov    $0x8,%eax
    mov    $func_6f5ce,%edx
    mov    %cs,%bx
    mov    $0x25,%ah
    push   %ds
    mov    %bx,%ds
    int    $0x21
    pop    %ds
    movl   $0x2,data_88824
    push   $0xd68d
    push   $0x3c
    call   func_62cc6
    add    $0x8,%esp
    push   %ebp
    mov    %esp,%ebp
    testb  $0x2,0x5(%ebp)
    cli
    je     jump_6f8a3
    sti
  jump_6f8a3:
    pop    %ebp
    popf
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6f8aa:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %edi
    pushf
    cli
    push   $0x0
    call   func_6f6f4
    add    $0x4,%esp
    mov    $0x8,%eax
    mov    data_88928,%edx
    movzwl data_8892c,%ebx
    mov    $0x25,%ah
    push   %ds
    mov    %bx,%ds
    int    $0x21
    pop    %ds
    push   %ebp
    mov    %esp,%ebp
    testb  $0x2,0x5(%ebp)
    cli
    je     jump_6f8df
    sti
  jump_6f8df:
    pop    %ebp
    popf
    pop    %edi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6f8e5:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    mov    0x8(%ebp),%eax
    push   %eax
    mov    %eax,%ebx
    mov    $0x200,%eax
    int    $0x31
    shl    $0x10,%ecx
    mov    %dx,%cx
    pop    %eax
    push   %ecx
    mov    $0x35,%ah
    push   %es
    int    $0x21
    mov    %es,%dx
    pop    %es
    pop    %ecx
    mov    %ecx,%eax
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6f911:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    mov    0x8(%ebp),%eax
    mov    0xc(%ebp),%ebx
    mov    %ebx,%ecx
    shr    $0x10,%ecx
    mov    %ebx,%edx
    and    $0xffff,%edx
    mov    %eax,%ebx
    mov    $0x201,%eax
    int    $0x31
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6f938:
/*----------------------------------------------------------------*/
    push   %ds
    push   %es
    push   %eax
    push   %ebx
    push   %ecx
    mov    $0x9999,%ax
    mov    %ax,%ds
    mov    %ax,%es
    mov    %ss,%bx
    mov    %esp,%ecx
    mov    $0x9999,%ax
    mov    %ax,%ss
    mov    $0x99999999,%esp
    pushfw
    pop    %ax
    mov    %ax,-0x2(%esp)
    mov    %cs,-0x4(%esp)
    movw   $0x9999,-0x6(%esp)
    sub    $0x6,%esp
    movw   $0x9999,-0x2(%esp)
    movw   $0x9999,-0x4(%esp)
    sub    $0x4,%esp
    lretw


/*----------------------------------------------------------------*/
func_6fba3:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x8(%ebp),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6fbe2
    cmp    data_88944,%ebx
    jne    jump_6fbe2
    cmp    $0x8,%ebx
    jb     jump_6fbc2
    add    $0x60,%ebx
  jump_6fbc2:
    add    $0x8,%ebx
    mov    $0x205,%eax
    mov    data_88948,%ecx
    mov    data_8894c,%edx
    int    $0x31
    movl   $0xffffffff,data_88944
  jump_6fbe2:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret
  jump_6fbe8:
    pushf
    pop    %eax
    cli
    ret


/*----------------------------------------------------------------*/
func_6fbec:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   0x8(%ebp)
    push   %ebp
    mov    %esp,%ebp
    testb  $0x2,0x5(%ebp)
    cli
    je     jump_6fbfd
    sti
  jump_6fbfd:
    pop    %ebp
    popf
    leave
    ret


/*----------------------------------------------------------------*/
func_6fc53:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    add    $0xffffffc4,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %ds
    push   %es
    call   func_62388
    cld
    mov    $0x32,%ecx
    push   %ds
    pop    %es
    lea    -0x3a(%ebp),%edi
    mov    $0x0,%eax
    push   %ecx
    and    $0x3,%ecx
    rep stos %al,%es:(%edi)
    pop    %ecx
    shr    $0x2,%ecx
    rep stos %eax,%es:(%edi)
    movw   $0x0,-0x16(%ebp)
    movw   $0x0,-0x18(%ebp)
    pushfw
    pop    %ax
    mov    %ax,-0x1a(%ebp)
    mov    0xc(%ebp),%eax
    mov    %ax,-0x1e(%ebp)
    mov    0x10(%ebp),%ebx
    cmp    $0x0,%ebx
    je     jump_6fcc2
    mov    0x4(%ebx),%cx
    mov    0x6(%ebx),%dx
    mov    0x8(%ebx),%si
    mov    0xa(%ebx),%di
    mov    %cx,-0x22(%ebp)
    mov    %dx,-0x26(%ebp)
    mov    %si,-0x36(%ebp)
    mov    %di,-0x3a(%ebp)
  jump_6fcc2:
    mov    0x8(%ebp),%ebx
    mov    0x8(%ebx),%ebx
    movswl 0x32(%ebx),%ebx
    mov    %bx,-0x2a(%ebp)
    mov    $0x300,%eax
    mov    $0x66,%ebx
    mov    $0x0,%ecx
    lea    -0x3a(%ebp),%edi
    int    $0x31
    mov    0x14(%ebp),%ebx
    cmp    $0x0,%ebx
    je     jump_6fd1b
    mov    -0x1e(%ebp),%ax
    mov    -0x22(%ebp),%cx
    mov    -0x26(%ebp),%dx
    mov    -0x36(%ebp),%si
    mov    -0x3a(%ebp),%di
    mov    %ax,(%ebx)
    mov    %cx,0x4(%ebx)
    mov    %dx,0x6(%ebx)
    mov    %si,0x8(%ebx)
    mov    %di,0xa(%ebx)
    mov    -0x2a(%ebp),%ax
    mov    %ax,0x2(%ebx)
  jump_6fd1b:
    movswl -0x1e(%ebp),%eax
    push   %eax
    call   func_6238d
    pop    %eax
    pop    %es
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6fd2d:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %esi
    mov    $0x63,%bx
    push   %ds
    and    $0xffff,%ebx
    mov    $0x40,%eax
    mov    %ax,%ds
    mov    (%ebx),%eax
    pop    %ds
    mov    %eax,%edx
    add    $0x6,%edx
    mov    0x8(%ebp),%ecx
    jecxz  jump_6fd65
  jump_6fd53:
    in     (%dx),%al
    test   $0x8,%eax
    je     jump_6fd53
  jump_6fd5b:
    in     (%dx),%al
    test   $0x8,%eax
    jne    jump_6fd5b
    loop   jump_6fd53
  jump_6fd65:
    pop    %esi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6fd6a:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %esi
    mov    data_8893a,%eax
    pop    %esi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6fd76:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_62388
    mov    $0x0,%eax
  jump_6fd86:
    cmpl   $0x0,data_887e8(%eax)
    je     jump_6fd9e
    add    $0x4,%eax
    cmp    $0x3c,%eax
    jb     jump_6fd86
    mov    $0xffffffff,%eax
    jmp    jump_6fdb1
  jump_6fd9e:
    movl   $0x1,data_887e8(%eax)
    mov    0x8(%ebp),%esi
    mov    %esi,data_887a8(%eax)
  jump_6fdb1:
    push   %eax
    call   func_6238d
    pop    %eax
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6fdbd:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_62388
    mov    0x8(%ebp),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6fdd9
    mov    0xc(%ebp),%eax
    xchg   %eax,data_888e8(%ebx)
  jump_6fdd9:
    push   %eax
    call   func_6238d
    pop    %eax
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6fde5:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_62388
    mov    0x8(%ebp),%eax
    cmp    $0xffffffff,%eax
    je     jump_6fe02
    movl   $0x0,data_887e8(%eax)
  jump_6fe02:
    call   func_6238d
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6fe0c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %esi
    push   %edi
    call   func_62388
    mov    $0x38,%esi
  jump_6fe19:
    push   %esi
    call   func_630a4
    add    $0x4,%esp
    sub    $0x4,%esi
    jge    jump_6fe19
    call   func_6238d
    pop    %edi
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6fe30:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_62388
    mov    0x8(%ebp),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6fe56
    cmpl   $0x1,data_887e8(%ebx)
    jne    jump_6fe56
    movl   $0x2,data_887e8(%ebx)
  jump_6fe56:
    call   func_6238d
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6fe84:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_62388
    mov    0x8(%ebp),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_6feaa
    cmpl   $0x2,data_887e8(%ebx)
    jne    jump_6feaa
    movl   $0x1,data_887e8(%ebx)
  jump_6feaa:
    call   func_6238d
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6fed8:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_62388
    mov    0x8(%ebp),%ebx
    mov    0xc(%ebp),%eax
    mov    %eax,data_88868(%ebx)
    movl   $0x0,data_88828(%ebx)
    call   func_6f757
    call   func_6238d
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6ff08:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    call   func_62388
    mov    $0x0,%edx
    mov    $0xf4240,%eax
    mov    0xc(%ebp),%ebx
    div    %ebx
    push   %eax
    push   0x8(%ebp)
    call   func_62cc6
    add    $0x8,%esp
    call   func_6238d
    pop    %edi
    pop    %esi
    pop    %ebx
    leave
    ret


/*----------------------------------------------------------------*/
func_6ff86:
/*----------------------------------------------------------------*/
    push   $data_89358
    push   $data_887a8
    call   func_61691
    add    $0x8,%esp
    push   $func_6ff86
    push   $func_6f5b4
    call   func_61691
    add    $0x8,%esp
    ret


/*----------------------------------------------------------------*/
func_6ffb0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    call   func_74426
    mov    $0x2,%ebx
    mov    %eax,%esi
    xor    %edx,%edx
    mov    %ecx,%eax
    call   func_74498
    mov    %ecx,%eax
    call   func_74426
    mov    %esi,%edx
    xor    %ebx,%ebx
    mov    %eax,%edi
    mov    %ecx,%eax
    call   func_74498
    mov    %edi,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_6ffe8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    cmpl   $0x0,data_89368
    jne    jump_7001f
    push   $data_1225e8
    push   $data_89368
    push   $data_1225e0
    push   $data_1225e4
    push   $0x200
    call   func_71e00
    add    $0x14,%esp
  jump_7001f:
    mov    data_89368,%ax
    mov    %ax,(%esp)
    mov    data_1225e8,%ax
    push   %ebp
    mov    %ax,0xa(%esi)
    push   %edi
    mov    data_1225e0,%ebx
    push   %ebx
    mov    data_1225e4,%ecx
    push   %ecx
    call   func_7137e
    add    $0x10,%esp
    mov    %esp,%eax
    push   %eax
    push   %esi
    push   %esi
    push   $0x10
    call   func_71f70
    add    $0x10,%esp
    push   %ebp
    mov    data_1225e0,%esi
    push   %esi
    mov    data_1225e4,%ebp
    push   %ebp
    push   %edi
    call   func_71358
    add    $0x10,%esp
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7007c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x268,%esp
    mov    $0x4f00,%edx
    mov    $0x4,%ebx
    mov    %esp,%eax
    mov    %dx,0x250(%esp)
    mov    $data_84f64,%edx
    call   func_72b40
    mov    $0x200,%ebx
    mov    %esp,%edx
    lea    0x250(%esp),%eax
    call   func_6ffe8
    xor    %eax,%eax
    mov    0x250(%esp),%ax
    cmp    $0x4f,%eax
    je     jump_700cd
    xor    %eax,%eax
    jmp    jump_70200
  jump_700cd:
    mov    $0x4,%ebx
    mov    $data_84f6c,%edx
    mov    %esp,%eax
    call   func_73d7a
    test   %eax,%eax
    je     jump_700ef
    xor    %eax,%eax
    add    $0x268,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_700ef:
    mov    0x6(%esp),%eax
    and    $0xffff,%eax
    push   %eax
    mov    0xa(%esp),%eax
    shr    $0x10,%eax
    push   %eax
    lea    0x268(%esp),%eax
    push   %eax
    lea    0x270(%esp),%eax
    push   %eax
    call   func_71dc4
    add    $0x10,%esp
    push   $0x50
    mov    0x264(%esp),%edx
    push   %edx
    mov    0x26c(%esp),%ebx
    push   %ebx
    lea    0x20c(%esp),%eax
    push   %eax
    call   func_71358
    mov    $0x12,%ebx
    add    $0x10,%esp
    mov    $data_84f74,%edx
    lea    0x200(%esp),%eax
    call   func_73d7a
    test   %eax,%eax
    je     jump_70162
    xor    %eax,%eax
    add    $0x268,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_70162:
    lea    0x250(%esp),%eax
    push   %eax
    push   %eax
    mov    $0x4f0f,%ebx
    mov    $0x1234,%ecx
    push   $0x10
    mov    %bx,0x25c(%esp)
    mov    %cx,0x25e(%esp)
    call   func_71e98
    add    $0xc,%esp
    xor    %eax,%eax
    mov    0x250(%esp),%ax
    cmp    $0x4f,%eax
    je     jump_701ab
    xor    %eax,%eax
    add    $0x268,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_701ab:
    xor    %eax,%eax
    mov    0x252(%esp),%ax
    push   %eax
    xor    %eax,%eax
    mov    0x25a(%esp),%ax
    push   %eax
    lea    0x268(%esp),%eax
    push   %eax
    lea    0x270(%esp),%eax
    push   %eax
    call   func_71dc4
    add    $0x10,%esp
    push   $0xf2
    mov    0x264(%esp),%ecx
    push   %ecx
    mov    0x26c(%esp),%esi
    push   %esi
    push   $data_1225ec
    call   func_71358
    mov    $data_1225ec,%eax
    add    $0x10,%esp
  jump_70200:
    add    $0x268,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7020c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x218,%esp
    mov    $0x4f00,%edx
    mov    $0x4,%ebx
    mov    %esp,%eax
    mov    %dx,0x200(%esp)
    mov    $data_84f64,%edx
    call   func_72b40
    mov    $0x200,%ebx
    mov    %esp,%edx
    lea    0x200(%esp),%eax
    call   func_6ffe8
    xor    %eax,%eax
    mov    0x200(%esp),%ax
    cmp    $0x4f,%eax
    je     jump_7025c
    xor    %eax,%eax
    jmp    jump_702e2
  jump_7025c:
    mov    $0x4,%ebx
    mov    $data_84f6c,%edx
    mov    %esp,%eax
    call   func_73d7a
    test   %eax,%eax
    je     jump_7027d
    xor    %eax,%eax
    add    $0x218,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_7027d:
    mov    0x2(%esp),%eax
    sar    $0x10,%eax
    cmp    $0x200,%eax
    jle    jump_702db
    mov    0x6(%esp),%eax
    and    $0xffff,%eax
    push   %eax
    mov    0xa(%esp),%eax
    shr    $0x10,%eax
    push   %eax
    lea    0x218(%esp),%eax
    push   %eax
    lea    0x220(%esp),%eax
    push   %eax
    call   func_71dc4
    add    $0x10,%esp
    mov    0x210(%esp),%edx
    push   %edx
    mov    0x218(%esp),%ebx
    push   %ebx
    call   func_71305
    add    $0x8,%esp
    cmp    $0x54524f56,%eax
    jne    jump_702db
    movw   $0x102,0x4(%esp)
  jump_702db:
    mov    0x2(%esp),%eax
    sar    $0x10,%eax
  jump_702e2:
    add    $0x218,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_702ec:
/*----------------------------------------------------------------*/
    push   $data_84f88
    call   func_73457
    add    $0x4,%esp
    push   $data_84fd4
    call   func_73457
    add    $0x4,%esp
    push   $data_85020
    call   func_73457
    add    $0x4,%esp
    push   $data_8506c
    call   func_73457
    add    $0x4,%esp
    push   $data_85094
    call   func_73457
    add    $0x4,%esp
    push   $data_850e0
    call   func_73457
    add    $0x4,%esp
    push   $data_85130
    call   func_73457
    add    $0x4,%esp
    push   $data_8517c
    call   func_73457
    add    $0x4,%esp
    push   $data_851c8
    call   func_73457
    add    $0x4,%esp
    mov    $0x1,%eax
    jmp    func_7350a


/*----------------------------------------------------------------*/
func_7036c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x10,%esp
    xor    %ah,%ah
    mov    %ah,0x2(%esp)
    mov    %al,0x3(%esp)
    mov    %esp,%eax
    push   %eax
    push   %eax
    mov    $0x4f08,%edx
    push   $0x10
    mov    %dx,0xc(%esp)
    call   func_71e98
    add    $0xc,%esp
    xor    %eax,%eax
    mov    (%esp),%ax
    cmp    $0x4f,%eax
    sete   %al
    and    $0xff,%eax
    add    $0x10,%esp
  jump_703a8:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_703dc:
/*----------------------------------------------------------------*/
    mov    data_89360,%edx
    test   %edx,%edx
    je     jump_703f1
    push   %edx
    push   $0x10
    call   func_719d8
    add    $0x8,%esp
  jump_703f1:
    ret


/*----------------------------------------------------------------*/
func_703f4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    lea    0x194(%eax),%edx
    mov    $0xffff,%ecx
  jump_70402:
    xor    %eax,%eax
    mov    (%edx),%ax
    cmp    $0xffff,%eax
    je     jump_703a8
    cmp    $0x12d,%ax
    jb     jump_70426
    cmp    $0x141,%ax
    jbe    jump_70437
    cmp    $0x153,%ax
    jb     jump_70432
    cmp    $0x158,%ax
    jmp    jump_70430
  jump_70426:
    cmp    $0x10d,%ax
    jb     jump_70432
    cmp    $0x10f,%ax
  jump_70430:
    jbe    jump_70437
  jump_70432:
    add    $0x2,%edx
    jmp    jump_70402
  jump_70437:
    mov    %edx,%eax
    jmp    jump_70442
  jump_7043b:
    add    $0x2,%eax
    mov    %bx,-0x2(%eax)
  jump_70442:
    xor    %ebx,%ebx
    mov    0x2(%eax),%bx
    cmp    $0xffff,%ebx
    jne    jump_7043b
    mov    %cx,(%eax)
    jmp    jump_70402


/*----------------------------------------------------------------*/
func_70458:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x98,%esp
    mov    0xa8(%esp),%esi
    cmpl   $0x0,0xac(%esp)
    jne    jump_70482
    call   func_7020c
    cmp    $0x200,%eax
    jge    jump_708b1
  jump_70482:
    mov    %esp,%edi
    push   %edi
  jump_70485:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_7049d
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_70485
  jump_7049d:
    pop    %edi
    mov    $data_85214,%esi
    mov    %esp,%edi
    mov    $data_85220,%edx
    push   %edi
    sub    %ecx,%ecx
    dec    %ecx
    mov    $0x0,%al
    repnz scas %es:(%edi),%al
    dec    %edi
  jump_704b3:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_704cb
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_704b3
  jump_704cb:
    pop    %edi
    mov    %esp,%eax
    call   func_7331e
    mov    %eax,%edi
    test   %eax,%eax
    je     jump_708b3
    call   func_6ffb0
    mov    %eax,0x90(%esp)
    add    $0x10,%eax
    call   func_73af4
    mov    %eax,%ebp
    test   %eax,%eax
    jne    jump_7050e
    push   $data_85224
    call   func_73457
    add    $0x4,%esp
    mov    $0x1,%eax
    call   func_7350a
  jump_7050e:
    mov    0x90(%esp),%ebx
    mov    $0x1,%edx
    mov    %edi,%ecx
    mov    %ebp,%eax
    call   func_745ae
    mov    $0x12,%ebx
    mov    %edi,%eax
    mov    $data_84f74,%edx
    call   func_7280e
    mov    %ebp,%eax
    mov    %ebp,%esi
    call   func_73d7a
    test   %eax,%eax
    je     jump_7055b
    mov    %esp,%eax
    push   %eax
    push   $data_85258
    call   func_73457
    add    $0x8,%esp
    mov    $0x1,%eax
    call   func_7350a
  jump_7055b:
    call   func_708d0
    push   %eax
    call   func_708c8
    push   %eax
    push   $data_85288
    lea    0xc(%esp),%eax
    push   %eax
    mov    $0x9,%ebx
    call   func_720c9
    add    $0x10,%esp
    mov    %esp,%edx
    lea    0x3f(%esi),%eax
    call   func_73d7a
    test   %eax,%eax
    je     jump_705a3
    push   $data_85290
    call   func_73457
    add    $0x4,%esp
    mov    $0x1,%eax
    call   func_7350a
  jump_705a3:
    xor    %eax,%eax
    mov    0x172(%esi),%ax
    cmp    $0xffff,%eax
    jne    jump_705ca
    push   $data_852bc
    call   func_73457
    add    $0x4,%esp
    mov    $0x1,%eax
    call   func_7350a
  jump_705ca:
    xor    %eax,%eax
    mov    0x172(%esi),%ax
    cmp    $0x1c,%eax
    je     jump_708aa
    call   func_7007c
    test   %eax,%eax
    je     jump_7060d
    mov    0xe1(%eax),%dl
    mov    0x129(%esi),%dh
    cmp    %dh,%dl
    ja     jump_708aa
    jne    jump_7060d
    mov    0xe2(%eax),%al
    cmp    0x12a(%esi),%al
    jae    jump_708aa
  jump_7060d:
    cmpw   $0x0,0x17e(%esi)
    je     jump_70625
    call   func_7020c
    test   %eax,%eax
    jne    jump_70625
    call   func_702ec
  jump_70625:
    push   $data_1225d8
    push   $data_1225dc
    push   $data_8935c
    push   $data_89358
    mov    0xa0(%esp),%ebx
    push   %ebx
    call   func_71e00
    add    $0x14,%esp
    test   %eax,%eax
    jne    jump_70664
    push   $data_852fc
    call   func_73457
    add    $0x4,%esp
    mov    $0x1,%eax
    call   func_7350a
  jump_70664:
    push   $data_89360
    push   $0x10
    call   func_71994
    xor    %edx,%edx
    mov    data_89360,%eax
    mov    0x176(%esi),%dx
    mov    %eax,0x190(%esi)
    mov    %edx,%eax
    sar    $0x1f,%edx
    shl    $0x6,%edx
    sbb    %edx,%eax
    sar    $0x6,%eax
    mov    %ax,0x162(%esi)
    mov    data_1225dc,%ax
    mov    %ax,0x18c(%esi)
    mov    %ax,0x158(%esi)
    mov    %ax,0x160(%esi)
    mov    %ax,0x864(%esi)
    mov    %ax,0x868(%esi)
    mov    %ax,0x86c(%esi)
    mov    %ax,0x870(%esi)
    mov    %ax,0x874(%esi)
    mov    %ax,0x878(%esi)
    mov    %ax,0x87c(%esi)
    mov    %ax,0x880(%esi)
    mov    %ax,0x884(%esi)
    mov    %ax,0x888(%esi)
    mov    %ax,0x88c(%esi)
    mov    %ax,0x890(%esi)
    mov    %ax,0x894(%esi)
    mov    %ax,0x8b4(%esi)
    mov    %ax,0x8b8(%esi)
    mov    %ax,0x8bc(%esi)
    add    $0x8,%esp
    mov    %ax,0x8c0(%esi)
    mov    0x90(%esp),%ecx
    mov    %ax,0x8c4(%esi)
    push   %ecx
    mov    %ax,0x8c8(%esi)
    push   %esi
    mov    data_8935c,%edi
    push   %edi
    mov    data_89358,%eax
    push   %eax
    call   func_7137e
    mov    data_89364,%edx
    add    $0x10,%esp
    cmp    $0x4321,%edx
    je     jump_70816
    call   func_71880
    push   $0x6c
    mov    %eax,0x98(%esp)
    and    $0xffff,%eax
    push   %eax
    call   func_71305
    add    $0x8,%esp
    push   $data_8532c
    mov    %eax,%edi
    call   func_73457
    add    $0x4,%esp
    call   func_708d8
    push   %eax
    call   func_708d0
    push   %eax
    call   func_708c8
    push   %eax
    push   $data_85370
    call   func_73457
    add    $0x10,%esp
    call   func_708c0
    push   %eax
    push   $data_8539c
    call   func_73457
    add    $0x8,%esp
    push   $data_853a0
    call   func_73457
    add    $0x4,%esp
    lea    0x48(%esi),%eax
    push   %eax
    push   $data_853a4
    call   func_73457
    add    $0x8,%esp
    lea    0x98(%esi),%eax
    push   %eax
    push   $data_853b4
    call   func_73457
    add    $0x8,%esp
  jump_707fa:
    xor    %eax,%eax
    push   $0x6c
    mov    0x98(%esp),%ax
    push   %eax
    call   func_71305
    sub    %edi,%eax
    add    $0x8,%esp
    cmp    $0x23,%eax
    jb     jump_707fa
  jump_70816:
    movw   $0x1,0x123(%esi)
    movw   $0x1,0x125(%esi)
    mov    %esi,%eax
    movw   $0x1,0x127(%esi)
    call   func_703f4
    mov    data_1225dc,%edx
    xor    %eax,%eax
    shl    $0x10,%edx
    mov    0x18e(%esi),%ax
    or     %edx,%eax
    push   %eax
    push   $0x10
    call   func_719d8
    add    $0x8,%esp
    mov    $0x6,%eax
    call   func_7036c
    test   %eax,%eax
    je     jump_70894
    mov    0x15a(%esi),%ax
    or     $0x1,%al
    and    $0xffff,%eax
    push   %eax
    lea    0x15a(%esi),%eax
    mov    data_8935c,%ebx
    sub    %esi,%eax
    add    %ebx,%eax
    push   %eax
    mov    data_89358,%ecx
    push   %ecx
    call   func_7132c
    add    $0xc,%esp
  jump_70894:
    mov    %ebp,%eax
    call   func_73bef
    mov    $0x1,%eax
    add    $0x98,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret
  jump_708aa:
    mov    %ebp,%eax
    call   func_73bef
  jump_708b1:
    xor    %eax,%eax
  jump_708b3:
    add    $0x98,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_708c0:
/*----------------------------------------------------------------*/
    mov    data_8936c,%eax
    ret


/*----------------------------------------------------------------*/
func_708c8:
/*----------------------------------------------------------------*/
    mov    data_89370,%eax
    ret


/*----------------------------------------------------------------*/
func_708d0:
/*----------------------------------------------------------------*/
    mov    data_89374,%eax
    ret


/*----------------------------------------------------------------*/
func_708d8:
/*----------------------------------------------------------------*/
    mov    data_89378,%eax
    ret


/*----------------------------------------------------------------*/
func_708e0:
/*----------------------------------------------------------------*/
    push   %ds
    push   %es
    pusha
    cld
    mov    %cs:data_896f4,%ds
    mov    %cs:data_896f4,%es
    mov    %ss,%si
    mov    %si,data_8947c
    mov    %esp,data_8947e
    mov    %ds,%si
    mov    %esi,%ss
    mov    $data_8947c,%esp
    movzwl %dx,%edx
    movzwl %cx,%ecx
    movzwl %bx,%ebx
    movzwl %ax,%eax
    push   %edx
    push   %ecx
    push   %ebx
    push   %eax
    call   *data_8969c
    add    $0x10,%esp
    mov    data_8947c,%si
    mov    %esi,%ss
    mov    data_8947e,%esp
    popa
    pop    %es
    pop    %ds
    lret


/*----------------------------------------------------------------*/
func_70938:
/*----------------------------------------------------------------*/
    push   %ds
    push   %es
    pusha
    cld
    mov    %cs:data_896f4,%ds
    mov    %cs:data_896f4,%es
    mov    %ss,%si
    mov    %si,data_89584
    mov    %esp,data_89586
    mov    %ds,%si
    mov    %esi,%ss
    mov    $data_89584,%esp
    call   *data_89694
    mov    data_89584,%si
    mov    %esi,%ss
    mov    data_89586,%esp
    popa
    pop    %es
    pop    %ds
    iret


/*----------------------------------------------------------------*/
func_709ab:
/*----------------------------------------------------------------*/
    push   %ds
    push   %es
    pusha
    cld
    mov    %cs:data_896f4,%ds
    mov    %cs:data_896f4,%es
    cmpw   $0x1,data_89692
    je     jump_70a0c
    movw   $0x1,data_89692
    mov    %ss,%si
    mov    %si,data_8968c
    mov    %esp,data_8968e
    mov    %ds,%si
    mov    %esi,%ss
    mov    $data_8968c,%esp
    call   *data_89698
    mov    data_8968c,%si
    mov    %esi,%ss
    mov    data_8968e,%esp
    movw   $0x0,data_89692
  jump_70a08:
    popa
    pop    %es
    pop    %ds
    iret
  jump_70a0c:
    pushf
    lcall  *data_896a8
    jmp    jump_70a08


/*----------------------------------------------------------------*/
func_70a4b:
/*----------------------------------------------------------------*/
    sti
    push   %ds
    push   %es
    push   %ebx
    mov    %cs:data_896f4,%ds
    mov    %cs:data_896f4,%es
    mov    data_122700,%bx
    mov    %ebx,%es
    mov    data_1226f4,%ebx
    movl   $0x1,%es:(%ebx)
    pop    %ebx
    pop    %es
    pop    %ds
    iret


/*----------------------------------------------------------------*/
func_70aa9:
/*----------------------------------------------------------------*/
    sti
    push   %ds
    push   %es
    push   %ebx
    mov    %cs:data_896f4,%ds
    mov    %cs:data_896f4,%es
    mov    data_122704,%bx
    mov    %ebx,%es
    mov    data_1226f8,%ebx
    movl   $0x1,%es:(%ebx)
    pop    %ebx
    pop    %es
    pop    %ds
    iret


/*----------------------------------------------------------------*/
func_70b08:
/*----------------------------------------------------------------*/
    sti
    push   %ds
    push   %es
    push   %ebx
    cld
    mov    %cs:data_896f4,%ds
    mov    %cs:data_896f4,%es
    mov    data_1226f0,%bx
    mov    %ebx,%es
    mov    data_12270c,%ebx
    mov    %ax,%es:(%ebx)
    mov    %di,%es:0x2(%ebx)
    mov    $0x3,%ax
    pop    %ebx
    pop    %es
    pop    %ds
    iret


/*----------------------------------------------------------------*/
func_70b81:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    $0xc,%ax
    mov    0x8(%ebp),%ecx
    mov    $func_708e0,%edx
    push   %cs
    pop    %es
    int    $0x33
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    cld
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_70c20:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x10,%esp
    mov    data_8969c,%esi
    call   func_70d94
    cmpl   $0x0,0xc(%ebp)
    je     jump_70c3c
    xor    %eax,%eax
    jmp    jump_70c41
  jump_70c3c:
    mov    $0x21,%eax
  jump_70c41:
    mov    %ax,-0x10(%ebp)
    lea    -0x10(%ebp),%eax
    push   %eax
    push   %eax
    push   $0x33
    call   func_71e98
    add    $0xc,%esp
    test   %esi,%esi
    je     jump_70c68
    push   %esi
    mov    data_1226fc,%ebx
    push   %ebx
    call   func_70d68
    add    $0x8,%esp
  jump_70c68:
    mov    %ebp,%esp
    pop    %ebp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_70cb4:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ebp
    mov    %esp,%ebp
    cmpl   $0x0,data_896d0
    jne    jump_70d65
    call   func_7186d
    push   $0xfff
    push   $data_89694
    call   func_71208
    add    $0x8,%esp
    test   %eax,%eax
    sete   %al
    and    $0xff,%eax
    push   $0xfff
    push   $data_8937c
    mov    %eax,%esi
    call   func_71208
    add    $0x8,%esp
    test   %eax,%eax
    sete   %al
    and    $0xff,%eax
    push   $0xfff
    push   $func_70c20
    or     %eax,%esi
    call   func_712b0
    add    $0x8,%esp
    test   %eax,%eax
    sete   %al
    and    $0xff,%eax
    push   $0xfff
    push   $func_708e0
    or     %eax,%esi
    call   func_712b0
    add    $0x8,%esp
    test   %eax,%eax
    sete   %al
    and    $0xff,%eax
    or     %eax,%esi
    je     jump_70d5b
    push   $data_853c8
    call   func_73457
    add    $0x4,%esp
    mov    $0x1,%eax
    call   func_7350a
  jump_70d5b:
    movl   $0x1,data_896d0
  jump_70d65:
    pop    %ebp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_70d68:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ebp
    mov    %esp,%ebp
    mov    0xc(%ebp),%esi
    call   func_70cb4
    mov    0x10(%ebp),%eax
    push   %esi
    mov    %esi,data_1226fc
    mov    %eax,data_8969c
    call   func_70b81
    mov    $0x1,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_70d94:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1c,%esp
    cmpl   $0x0,data_8969c
    je     jump_70dc3
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x21,%edx
    push   $0x33
    mov    %dx,-0x1c(%ebp)
    call   func_71964
    xor    %ebx,%ebx
    add    $0xc,%esp
    mov    %ebx,data_8969c
  jump_70dc3:
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_71208:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1c,%esp
    mov    0xc(%ebp),%eax
    mov    0x10(%ebp),%ebx
    mov    %eax,%edx
    shr    $0x10,%eax
    mov    %ax,-0x18(%ebp)
    mov    %ebx,%eax
    shr    $0x10,%eax
    mov    %ax,-0xc(%ebp)
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x600,%ecx
    mov    %bx,-0x8(%ebp)
    push   $0x31
    mov    %cx,-0x1c(%ebp)
    mov    %dx,-0x14(%ebp)
    call   func_71964
    mov    -0x4(%ebp),%esi
    add    $0xc,%esp
    test   %si,%si
    sete   %al
    and    $0xff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_712b0:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    mov    0xc(%ebp),%edx
    push   %edx
    mov    0x8(%ebp),%ebx
    push   %ebx
    call   func_71208
    add    $0x8,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_71305:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ds
    mov    0x8(%ebp),%ax
    mov    %eax,%ds
    mov    0xc(%ebp),%eax
    mov    (%eax),%eax
    pop    %ds
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7132c:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ds
    mov    0x8(%ebp),%ax
    mov    %eax,%ds
    mov    0xc(%ebp),%edx
    mov    0x10(%ebp),%ax
    mov    %ax,(%edx)
    pop    %ds
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_71358:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %ds
    mov    0x8(%ebp),%edi
    mov    0xc(%ebp),%ax
    mov    %eax,%ds
    mov    0x10(%ebp),%esi
    mov    0x14(%ebp),%ecx
    shr    %ecx
    rep movsw %ds:(%esi),%es:(%edi)
    adc    %ecx,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    pop    %ds
    pop    %edi
    pop    %esi
    pop    %ebx
    cld
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7137e:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    mov    0x10(%ebp),%esi
    mov    0x8(%ebp),%ax
    mov    %eax,%es
    mov    0xc(%ebp),%edi
    mov    0x14(%ebp),%ecx
    shr    %ecx
    rep movsw %ds:(%esi),%es:(%edi)
    adc    %ecx,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    cld
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_713a4:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %esi
    push   %edi
    mov    0x8(%ebp),%eax
    mov    %es,(%eax)
    mov    %cs,0x2(%eax)
    mov    %ss,0x4(%eax)
    mov    %ds,0x6(%eax)
    mov    %fs,0x8(%eax)
    mov    %gs,0xa(%eax)
    pop    %edi
    pop    %esi
    pop    %ebx
    cld
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_713c4:
/*----------------------------------------------------------------*/
    int    $0x0
    ret


/*----------------------------------------------------------------*/
func_717c4:
/*----------------------------------------------------------------*/
    push   %eax
    push   %ebx
    mov    0xc(%esp),%ebx
    mov    $func_713c4,%eax
    shl    $0x2,%ebx
    add    %ebx,%eax
    xchg   %eax,0x4(%esp)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_717da:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    push   %ebx
    push   %esi
    push   %edi
    push   %es
    push   %fs
    push   %gs
    mov    0x14(%ebp),%eax
    mov    (%eax),%es
    mov    0x6(%eax),%bx
    movzwl %bx,%ebx
    mov    %ebx,-0x8(%ebp)
    mov    0x8(%eax),%fs
    mov    0xa(%eax),%gs
    mov    0xc(%ebp),%esi
    mov    (%esi),%eax
    mov    0x4(%esi),%ebx
    mov    0x8(%esi),%ecx
    mov    0xc(%esi),%edx
    mov    0x14(%esi),%edi
    mov    0x10(%esi),%esi
    push   %ds
    push   %ebp
    clc
    push   0x8(%ebp)
    mov    -0x8(%ebp),%ds
    call   func_717c4
    pop    %ebp
    pop    %ebp
    pop    %ds
    pushf
    pop    -0x4(%ebp)
    push   %esi
    pop    -0xc(%ebp)
    push   %ds
    pop    -0x8(%ebp)
    mov    0x10(%ebp),%esi
    mov    %eax,(%esi)
    mov    %ebx,0x4(%esi)
    mov    %ecx,0x8(%esi)
    mov    %edx,0xc(%esi)
    push   -0xc(%ebp)
    pop    0x10(%esi)
    mov    %edi,0x14(%esi)
    mov    -0x4(%ebp),%ebx
    and    $0x1,%ebx
    mov    %ebx,0x18(%esi)
    mov    0x14(%ebp),%esi
    mov    %es,(%esi)
    mov    -0x8(%ebp),%ebx
    mov    %bx,0x6(%esi)
    mov    %fs,0x8(%esi)
    mov    %gs,0xa(%esi)
    pop    %gs
    pop    %fs
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ebx
    cld
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7186d:
/*----------------------------------------------------------------*/
    mov    %ds,data_896f4
    ret


/*----------------------------------------------------------------*/
func_71880:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    cmpl   $0x0,data_896fc
    jne    jump_718a3
    push   $0xffff
    push   $0x400
    call   func_72074
    add    $0x8,%esp
    mov    %eax,data_896fc
  jump_718a3:
    mov    data_896fc,%eax
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_71964:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    sub    $0xc,%esp
    lea    -0xc(%ebp),%eax
    push   %eax
    call   func_713a4
    add    $0x4,%esp
    lea    -0xc(%ebp),%eax
    push   %eax
    mov    0x10(%ebp),%edx
    push   %edx
    mov    0xc(%ebp),%ebx
    push   %ebx
    mov    0x8(%ebp),%ecx
    push   %ecx
    call   func_717da
    add    $0x10,%esp
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_71994:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    sub    $0x18,%esp
    call   func_7186d
    movb   $0x35,-0x17(%ebp)
    mov    0x8(%ebp),%al
    mov    %al,-0x18(%ebp)
    lea    -0x8(%ebp),%eax
    push   %eax
    lea    -0x18(%ebp),%eax
    push   %eax
    push   %eax
    push   $0x21
    call   func_71f70
    xor    %eax,%eax
    mov    -0x8(%ebp),%ax
    mov    %eax,%edx
    xor    %eax,%eax
    shl    $0x10,%edx
    mov    -0x16(%ebp),%ax
    or     %eax,%edx
    mov    0xc(%ebp),%eax
    add    $0x10,%esp
    mov    %edx,(%eax)
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_719d8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x18,%esp
    mov    0x10(%ebp),%esi
    call   func_7186d
    movb   $0x25,-0x17(%ebp)
    mov    0xc(%ebp),%al
    mov    %al,-0x18(%ebp)
    mov    %esi,%eax
    sar    $0x10,%eax
    mov    %ax,-0x2(%ebp)
    lea    -0x8(%ebp),%eax
    push   %eax
    lea    -0x18(%ebp),%eax
    push   %eax
    push   %eax
    push   $0x21
    mov    %si,-0x12(%ebp)
    call   func_71f70
    add    $0x10,%esp
    mov    %ebp,%esp
    pop    %ebp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_71a18:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1c,%esp
    mov    $0x800,%ebx
    mov    %ax,-0x14(%ebp)
    mov    %bx,-0x1c(%ebp)
    mov    %eax,%ebx
    mov    %edx,%eax
    sar    $0x10,%eax
    mov    %ax,-0xc(%ebp)
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %eax
    sar    $0x10,%ebx
    push   $0x31
    mov    %dx,-0x8(%ebp)
    mov    %bx,-0x18(%ebp)
    call   func_71964
    mov    -0x4(%ebp),%ecx
    add    $0xc,%esp
    test   %cx,%cx
    je     jump_71a5e
    xor    %eax,%eax
    jmp    jump_71a71
  jump_71a5e:
    xor    %eax,%eax
    mov    -0x18(%ebp),%ax
    mov    %eax,%edx
    xor    %eax,%eax
    shl    $0x10,%edx
    mov    -0x14(%ebp),%ax
    add    %edx,%eax
  jump_71a71:
    mov    %ebp,%esp
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_71a78:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1c,%esp
    mov    %ax,-0x18(%ebp)
    mov    %edx,%eax
    sar    $0x10,%eax
    mov    %ax,-0x14(%ebp)
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x7,%ebx
    push   $0x31
    mov    %dx,-0x10(%ebp)
    mov    %bx,-0x1c(%ebp)
    call   func_71964
    mov    -0x4(%ebp),%ecx
    add    $0xc,%esp
    test   %cx,%cx
    sete   %al
    and    $0xff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_71b00:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1c,%esp
    mov    %ax,-0x18(%ebp)
    mov    %edx,%eax
    sar    $0x10,%eax
    mov    %ax,-0x14(%ebp)
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x8,%ebx
    push   $0x31
    mov    %dx,-0x10(%ebp)
    mov    %bx,-0x1c(%ebp)
    call   func_71964
    mov    -0x4(%ebp),%ecx
    add    $0xc,%esp
    test   %cx,%cx
    sete   %al
    and    $0xff,%eax
    mov    %ebp,%esp
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_71b94:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x20,%esp
    mov    %eax,%esi
    mov    %edx,-0x4(%ebp)
    lea    -0x20(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x1,%ebx
    xor    %edx,%edx
    push   $0x31
    mov    %dx,-0x20(%ebp)
    mov    %bx,-0x18(%ebp)
    call   func_71964
    mov    -0x8(%ebp),%ecx
    add    $0xc,%esp
    test   %cx,%cx
    je     jump_71bcd
    xor    %eax,%eax
    jmp    jump_71c2a
  jump_71bcd:
    xor    %edi,%edi
    mov    -0x20(%ebp),%di
    cmp    $0x100000,%esi
    jbe    jump_71c0d
    movw   $0x9,-0x20(%ebp)
    lea    -0x20(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x8092,%edx
    push   $0x31
    mov    %di,-0x1c(%ebp)
    mov    %dx,-0x18(%ebp)
    call   func_71964
    add    $0xc,%esp
    mov    -0x4(%ebp),%edx
    mov    %esi,%eax
    call   func_71a18
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_71c2a
  jump_71c0d:
    mov    %esi,%edx
    mov    %edi,%eax
    call   func_71a78
    test   %eax,%eax
    je     jump_71c2a
    mov    -0x4(%ebp),%edx
    mov    %edi,%eax
    call   func_71b00
    test   %eax,%eax
    je     jump_71c2a
    mov    %edi,%eax
  jump_71c2a:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_71dc4:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    mov    data_8971c,%edx
    test   %edx,%edx
    jne    jump_71de4
    push   $0xfffff
    push   %edx
    call   func_72074
    add    $0x8,%esp
    mov    %eax,data_8971c
  jump_71de4:
    mov    0x8(%ebp),%edx
    mov    data_8971c,%eax
    mov    %eax,(%edx)
    mov    0x10(%ebp),%eax
    mov    0x14(%ebp),%edx
    shl    $0x4,%eax
    add    %eax,%edx
    mov    0xc(%ebp),%eax
    mov    %edx,(%eax)
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_71e00:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    sub    $0x1c,%esp
    mov    0x8(%ebp),%eax
    add    $0xf,%eax
    shr    $0x4,%eax
    mov    %ax,-0x18(%ebp)
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x100,%edx
    push   $0x31
    mov    %dx,-0x1c(%ebp)
    call   func_71964
    mov    -0x4(%ebp),%ebx
    add    $0xc,%esp
    test   %bx,%bx
    je     jump_71e39
    xor    %eax,%eax
    mov    %ebp,%esp
    pop    %ebp
    ret
  jump_71e39:
    xor    %eax,%eax
    mov    0xc(%ebp),%edx
    mov    -0x10(%ebp),%ax
    mov    %eax,(%edx)
    mov    0x10(%ebp),%eax
    movl   $0x0,(%eax)
    xor    %eax,%eax
    mov    0x14(%ebp),%edx
    mov    -0x1c(%ebp),%ax
    mov    %eax,(%edx)
    mov    0x18(%ebp),%eax
    movl   $0x0,(%eax)
    mov    $0x1,%eax
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_71e98:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x5c,%esp
    mov    0x10(%ebp),%ecx
    mov    0x14(%ebp),%esi
    mov    $0x32,%ebx
    lea    -0x5c(%ebp),%eax
    xor    %edx,%edx
    call   func_72280
    xor    %eax,%eax
    mov    (%ecx),%ax
    mov    %eax,-0x40(%ebp)
    xor    %eax,%eax
    mov    0x2(%ecx),%ax
    mov    %eax,-0x4c(%ebp)
    xor    %eax,%eax
    mov    0x4(%ecx),%ax
    mov    %eax,-0x44(%ebp)
    xor    %eax,%eax
    mov    0x6(%ecx),%ax
    mov    %eax,-0x48(%ebp)
    xor    %eax,%eax
    mov    0x8(%ecx),%ax
    mov    %eax,-0x58(%ebp)
    xor    %eax,%eax
    mov    0xa(%ecx),%ax
    mov    %eax,-0x5c(%ebp)
    lea    -0xc(%ebp),%eax
    push   %eax
    call   func_713a4
    mov    0xc(%ebp),%al
    mov    %al,-0x24(%ebp)
    xor    %ah,%ah
    mov    %ah,-0x23(%ebp)
    mov    -0x6(%ebp),%eax
    mov    %ax,-0xc(%ebp)
    lea    -0x5c(%ebp),%eax
    add    $0x4,%esp
    mov    %eax,-0x14(%ebp)
    lea    -0xc(%ebp),%eax
    push   %eax
    lea    -0x28(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x300,%edx
    xor    %ebx,%ebx
    push   $0x31
    mov    %dx,-0x28(%ebp)
    mov    %bx,-0x20(%ebp)
    call   func_717da
    mov    -0x40(%ebp),%eax
    mov    %ax,(%esi)
    mov    -0x4c(%ebp),%eax
    mov    %ax,0x2(%esi)
    mov    -0x44(%ebp),%eax
    mov    %ax,0x4(%esi)
    mov    -0x48(%ebp),%eax
    mov    %ax,0x6(%esi)
    mov    -0x58(%ebp),%eax
    mov    %ax,0x8(%esi)
    mov    -0x5c(%ebp),%eax
    mov    %ax,0xa(%esi)
    mov    -0x3c(%ebp),%eax
    xor    %ah,%ah
    and    $0x1,%al
    mov    %ax,0xc(%esi)
    xor    %eax,%eax
    add    $0x10,%esp
    mov    (%esi),%ax
    mov    %ebp,%esp
    pop    %ebp
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_71f70:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x5c,%esp
    mov    0x14(%ebp),%ecx
    mov    0x18(%ebp),%esi
    mov    0x1c(%ebp),%edi
    mov    $0x32,%ebx
    lea    -0x5c(%ebp),%eax
    xor    %edx,%edx
    call   func_72280
    xor    %eax,%eax
    mov    (%ecx),%ax
    mov    %eax,-0x40(%ebp)
    xor    %eax,%eax
    mov    0x2(%ecx),%ax
    mov    %eax,-0x4c(%ebp)
    xor    %eax,%eax
    mov    0x4(%ecx),%ax
    mov    %eax,-0x44(%ebp)
    xor    %eax,%eax
    mov    0x6(%ecx),%ax
    mov    %eax,-0x48(%ebp)
    xor    %eax,%eax
    mov    0x8(%ecx),%ax
    mov    %eax,-0x58(%ebp)
    xor    %eax,%eax
    mov    0xa(%ecx),%ax
    mov    %eax,-0x5c(%ebp)
    mov    (%edi),%ax
    mov    %ax,-0x3a(%ebp)
    mov    0x6(%edi),%ax
    mov    %ax,-0x38(%ebp)
    lea    -0xc(%ebp),%eax
    push   %eax
    call   func_713a4
    mov    0x10(%ebp),%al
    mov    %al,-0x24(%ebp)
    xor    %ah,%ah
    mov    %ah,-0x23(%ebp)
    mov    -0x6(%ebp),%eax
    mov    %ax,-0xc(%ebp)
    lea    -0x5c(%ebp),%eax
    add    $0x4,%esp
    mov    %eax,-0x14(%ebp)
    lea    -0xc(%ebp),%eax
    push   %eax
    lea    -0x28(%ebp),%eax
    push   %eax
    push   %eax
    mov    $0x300,%edx
    xor    %ebx,%ebx
    push   $0x31
    mov    %dx,-0x28(%ebp)
    mov    %bx,-0x20(%ebp)
    call   func_717da
    mov    -0x40(%ebp),%eax
    mov    %ax,(%esi)
    mov    -0x4c(%ebp),%eax
    mov    %ax,0x2(%esi)
    mov    -0x44(%ebp),%eax
    mov    %ax,0x4(%esi)
    mov    -0x48(%ebp),%eax
    mov    %ax,0x6(%esi)
    mov    -0x58(%ebp),%eax
    mov    %ax,0x8(%esi)
    mov    -0x5c(%ebp),%eax
    mov    %ax,0xa(%esi)
    mov    -0x3a(%ebp),%eax
    mov    %ax,(%edi)
    mov    -0x30(%ebp),%eax
    mov    %ax,0x2(%edi)
    mov    -0x2c(%ebp),%eax
    mov    %ax,0x4(%edi)
    mov    -0x38(%ebp),%eax
    mov    %ax,0x6(%edi)
    mov    -0x3c(%ebp),%eax
    xor    %ah,%ah
    and    $0x1,%al
    mov    %ax,0xc(%esi)
    xor    %eax,%eax
    add    $0x10,%esp
    mov    (%esi),%ax
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_72074:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    mov    0x8(%ebp),%eax
    mov    0xc(%ebp),%edx
    call   func_71b94
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_720b6:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %dl,%bl
    mov    (%eax),%edx
    lea    0x1(%edx),%ecx
    mov    %ecx,(%eax)
    mov    %bl,(%edx)
    incl   0x10(%eax)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_720c9:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x4,%esp
    lea    0x1c(%esp),%eax
    mov    0x18(%esp),%edx
    mov    %esp,%ebx
    mov    $func_720b6,%ecx
    mov    %eax,(%esp)
    mov    0x14(%esp),%eax
    call   func_74795
    mov    0x14(%esp),%edx
    movb   $0x0,(%edx,%eax,1)
    add    $0x4,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_720fc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    test   %eax,%eax
    jne    jump_72107
    xor    %ecx,%ecx
    jmp    jump_72115
  jump_72107:
    lea    -0x4(%eax),%ecx
    mov    (%ecx),%esi
    mov    %edx,%ebx
    mov    %esi,%edx
    call   func_729cc
  jump_72115:
    mov    %ecx,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7211c:
/*----------------------------------------------------------------*/
    jmp    func_72124


/*----------------------------------------------------------------*/
func_72124:
/*----------------------------------------------------------------*/
    test   %eax,%eax
    jne    func_73bef
    ret


/*----------------------------------------------------------------*/
func_72130:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    cmp    %edx,%eax
    je     jump_721a4
  jump_72138:
    mov    (%ebx),%eax
    mov    (%edx),%ecx
    cmp    %eax,%ecx
    jne    jump_721a9
    not    %ecx
    add    $0xfefefeff,%eax
    and    %ecx,%eax
    and    $0x80808080,%eax
    jne    jump_721a4
    mov    0x4(%ebx),%eax
    mov    0x4(%edx),%ecx
    cmp    %eax,%ecx
    jne    jump_721a9
    not    %ecx
    add    $0xfefefeff,%eax
    and    %ecx,%eax
    and    $0x80808080,%eax
    jne    jump_721a4
    mov    0x8(%ebx),%eax
    mov    0x8(%edx),%ecx
    cmp    %eax,%ecx
    jne    jump_721a9
    not    %ecx
    add    $0xfefefeff,%eax
    and    %ecx,%eax
    and    $0x80808080,%eax
    jne    jump_721a4
    mov    0xc(%ebx),%eax
    mov    0xc(%edx),%ecx
    cmp    %eax,%ecx
    jne    jump_721a9
    add    $0x10,%ebx
    add    $0x10,%edx
    not    %ecx
    add    $0xfefefeff,%eax
    and    %ecx,%eax
    and    $0x80808080,%eax
    je     jump_72138
  jump_721a4:
    sub    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_721a9:
    cmp    %cl,%al
    jne    jump_721ca
    cmp    $0x0,%al
    je     jump_721a4
    cmp    %ch,%ah
    jne    jump_721ca
    cmp    $0x0,%ah
    je     jump_721a4
    shr    $0x10,%eax
    shr    $0x10,%ecx
    cmp    %cl,%al
    jne    jump_721ca
    cmp    $0x0,%al
    je     jump_721a4
    cmp    %ch,%ah
  jump_721ca:
    sbb    %eax,%eax
    or     $0x1,%al
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_721d4:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $0x1,%edx
    mov    $data_8543c,%eax
    call   func_74778
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_721e6:
/*----------------------------------------------------------------*/
    jmp    jump_751aa


/*----------------------------------------------------------------*/
func_721eb:
/*----------------------------------------------------------------*/
    jmp    jump_7532f


/*----------------------------------------------------------------*/
func_721f0:
/*----------------------------------------------------------------*/
    testb  $0x80,0xb(%esp)
    je     jump_72217
    mov    0x8(%esp),%eax
    and    $0x7fffffff,%eax
    or     0x4(%esp),%eax
    je     jump_72217
    push   $0x3
    push   0xc(%esp)
    push   0xc(%esp)
    call   func_7548a
    jmp    jump_7221d
  jump_72217:
    fldl   0x4(%esp)
    fsqrt
  jump_7221d:
    ret    $0x8


/*----------------------------------------------------------------*/
func_72222:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    ftst
    sub    $0x10,%esp
    fstsw  -0x8(%ebp)
    fwait
    xchg   %ax,-0x8(%ebp)
    sahf
    jae    jump_7224f
    fstpl  -0x10(%ebp)
    mov    -0x8(%ebp),%eax
    cmp    $0x3,%al
    je     jump_72243
    fstpl  -0x10(%ebp)
  jump_72243:
    mov    %edx,-0x4(%ebp)
    call   func_7548a
    mov    $0x1,%al
    jmp    jump_72253
  jump_7224f:
    fsqrt
    mov    $0x0,%al
  jump_72253:
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_72258:
/*----------------------------------------------------------------*/
    push   %eax
    fstcw  (%esp)
    fwait
    push   (%esp)
    movb   $0x1f,0x1(%esp)
    fldcw  (%esp)
    frndint
    fldcw  0x4(%esp)
    fwait
    lea    0x8(%esp),%esp
    ret


/*----------------------------------------------------------------*/
func_72280:
/*----------------------------------------------------------------*/
    push   %eax
    push   %ecx
    mov    %dl,%dh
    shl    $0x8,%edx
    mov    %dh,%dl
    shl    $0x8,%edx
    mov    %dh,%dl
    mov    %ebx,%ecx
    call   func_75510
    pop    %ecx
    pop    %eax
    ret


/*----------------------------------------------------------------*/
func_72298:
/*----------------------------------------------------------------*/
    push   %es
    push   %ds
    pop    %es
    movzbl %cl,%edx
    shr    $0x2,%ecx
    je     jump_722ae
  jump_722a3:
    mov    (%edi),%eax
    xchg   %eax,(%esi)
    stos   %eax,%es:(%edi)
    add    $0x4,%esi
    dec    %ecx
    jne    jump_722a3
  jump_722ae:
    and    $0x3,%dl
    je     jump_722bc
  jump_722b3:
    mov    (%edi),%al
    xchg   %al,(%esi)
    stos   %al,%es:(%edi)
    inc    %esi
    dec    %edx
    jne    jump_722b3
  jump_722bc:
    pop    %es
    ret


/*----------------------------------------------------------------*/
func_722be:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %es
    push   %fs
    push   %gs
    enter  $0x4,$0x0
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ecx,-0x4(%ebp)
    call   *-0x4(%ebp)
    test   %eax,%eax
    jle    jump_722f5
    mov    %edi,%eax
    mov    %ebx,%edx
    call   *-0x4(%ebp)
    test   %eax,%eax
    jle    jump_722f1
    mov    %esi,%eax
    mov    %ebx,%edx
    call   *-0x4(%ebp)
    test   %eax,%eax
    jg     jump_7230b
  jump_722ed:
    mov    %ebx,%eax
    jmp    jump_7230d
  jump_722f1:
    mov    %edi,%eax
    jmp    jump_7230d
  jump_722f5:
    mov    %edi,%eax
    mov    %ebx,%edx
    call   *-0x4(%ebp)
    test   %eax,%eax
    jge    jump_722f1
    mov    %esi,%eax
    mov    %ebx,%edx
    call   *-0x4(%ebp)
    test   %eax,%eax
    jg     jump_722ed
  jump_7230b:
    mov    %esi,%eax
  jump_7230d:
    leave
    pop    %gs
    pop    %fs
    pop    %es
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_72316:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %es
    push   %fs
    push   %gs
    enter  $0x144,$0x0
    push   %eax
    push   %edx
    push   %ebx
    or     %ebx,%eax
    mov    %ecx,-0x14(%ebp)
    test   $0x3,%al
    je     jump_72334
    mov    $0x2,%eax
    jmp    jump_7233d
  jump_72334:
    cmp    $0x4,%ebx
    seta   %al
    movzbl %al,%eax
  jump_7233d:
    mov    %eax,-0x1c(%ebp)
    imul   $0x3,-0x150(%ebp),%eax
    mov    %eax,-0x38(%ebp)
    mov    -0x150(%ebp),%eax
    add    %eax,%eax
    movl   $0x0,-0x10(%ebp)
    mov    %eax,-0x34(%ebp)
  jump_7235c:
    cmpl   $0x1,-0x14c(%ebp)
    jbe    jump_723fa
    cmpl   $0x10,-0x14c(%ebp)
    jae    jump_72429
    mov    -0x38(%ebp),%eax
    mov    %eax,-0x18(%ebp)
    mov    -0x14c(%ebp),%eax
    imul   -0x150(%ebp),%eax
    mov    -0x148(%ebp),%edx
    add    %eax,%edx
    mov    %edx,-0x3c(%ebp)
    jmp    jump_723f4
  jump_72396:
    mov    -0x148(%ebp),%eax
    add    -0x18(%ebp),%eax
    mov    %eax,-0x24(%ebp)
    jmp    jump_723e6
  jump_723a4:
    mov    %eax,%ebx
    jmp    jump_723c8
  jump_723a8:
    cmpl   $0x0,-0x1c(%ebp)
    je     jump_723bd
    mov    -0x150(%ebp),%ecx
    mov    %ebx,%esi
    call   func_72298
    jmp    jump_723c5
  jump_723bd:
    mov    (%edi),%eax
    mov    (%ebx),%edx
    mov    %eax,(%ebx)
    mov    %edx,(%edi)
  jump_723c5:
    sub    -0x18(%ebp),%ebx
  jump_723c8:
    cmp    -0x148(%ebp),%ebx
    jbe    jump_723e0
    mov    %ebx,%edi
    sub    -0x18(%ebp),%edi
    mov    %ebx,%edx
    mov    %edi,%eax
    call   *-0x14(%ebp)
    test   %eax,%eax
    jg     jump_723a8
  jump_723e0:
    mov    -0x18(%ebp),%eax
    add    %eax,-0x24(%ebp)
  jump_723e6:
    mov    -0x24(%ebp),%eax
    cmp    -0x3c(%ebp),%eax
    jb     jump_723a4
    mov    -0x34(%ebp),%eax
    sub    %eax,-0x18(%ebp)
  jump_723f4:
    cmpl   $0x0,-0x18(%ebp)
    jg     jump_72396
  jump_723fa:
    cmpl   $0x0,-0x10(%ebp)
    je     jump_7230d
    decl   -0x10(%ebp)
    mov    -0x10(%ebp),%eax
    mov    -0x144(%ebp,%eax,4),%edx
    mov    -0xc4(%ebp,%eax,4),%eax
    mov    %edx,-0x148(%ebp)
    mov    %eax,-0x14c(%ebp)
    jmp    jump_7235c
  jump_72429:
    mov    -0x14c(%ebp),%edi
    shr    %edi
    imul   -0x150(%ebp),%edi
    add    -0x148(%ebp),%edi
    cmpl   $0x1d,-0x14c(%ebp)
    jbe    jump_724ed
    mov    -0x148(%ebp),%eax
    mov    %eax,-0x30(%ebp)
    mov    -0x14c(%ebp),%eax
    dec    %eax
    imul   -0x150(%ebp),%eax
    mov    -0x148(%ebp),%esi
    add    %eax,%esi
    cmpl   $0x2a,-0x14c(%ebp)
    jbe    jump_724dc
    mov    -0x14c(%ebp),%eax
    mov    -0x150(%ebp),%edx
    shr    $0x3,%eax
    imul   %eax,%edx
    mov    -0x148(%ebp),%ebx
    mov    -0x14(%ebp),%ecx
    mov    %edx,-0x20(%ebp)
    lea    (%edx,%edx,1),%eax
    mov    -0x148(%ebp),%edx
    mov    %eax,-0x40(%ebp)
    add    %eax,%ebx
    mov    -0x148(%ebp),%eax
    add    -0x20(%ebp),%edx
    call   func_722be
    mov    -0x20(%ebp),%ebx
    mov    -0x14(%ebp),%ecx
    mov    %eax,-0x30(%ebp)
    mov    %edi,%edx
    mov    %edi,%eax
    add    %edi,%ebx
    sub    -0x20(%ebp),%eax
    call   func_722be
    mov    -0x14(%ebp),%ecx
    mov    %eax,%edi
    mov    %esi,%edx
    mov    %esi,%ebx
    mov    %esi,%eax
    sub    -0x20(%ebp),%edx
    sub    -0x40(%ebp),%eax
    call   func_722be
    mov    %eax,%esi
  jump_724dc:
    mov    -0x30(%ebp),%eax
    mov    -0x14(%ebp),%ecx
    mov    %edi,%edx
    mov    %esi,%ebx
    call   func_722be
    mov    %eax,%edi
  jump_724ed:
    cmpl   $0x0,-0x1c(%ebp)
    je     jump_7251d
    mov    -0x148(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    je     jump_7250d
    mov    -0x150(%ebp),%ecx
    mov    %eax,%esi
    call   func_72298
    jmp    jump_72528
  jump_7250d:
    mov    -0x148(%ebp),%ebx
    mov    (%eax),%edx
    mov    (%edi),%eax
    mov    %eax,(%ebx)
    mov    %edx,(%edi)
    jmp    jump_72528
  jump_7251d:
    lea    -0x44(%ebp),%eax
    mov    %eax,-0x2c(%ebp)
    mov    (%edi),%eax
    mov    %eax,-0x44(%ebp)
  jump_72528:
    mov    -0x14c(%ebp),%eax
    dec    %eax
    imul   -0x150(%ebp),%eax
    mov    -0x148(%ebp),%ebx
    lea    (%ebx,%eax,1),%edx
    mov    %ebx,-0xc(%ebp)
    mov    %edx,-0x8(%ebp)
    mov    %edx,-0x4(%ebp)
  jump_72548:
    cmp    -0x4(%ebp),%ebx
    ja     jump_72592
    mov    -0x2c(%ebp),%edx
    mov    %ebx,%eax
    call   *-0x14(%ebp)
    test   %eax,%eax
    jg     jump_72592
    jne    jump_7258a
    cmpl   $0x0,-0x1c(%ebp)
    je     jump_72573
    mov    -0xc(%ebp),%esi
    mov    -0x150(%ebp),%ecx
    mov    %ebx,%edi
    call   func_72298
    jmp    jump_72581
  jump_72573:
    mov    -0xc(%ebp),%edx
    mov    -0xc(%ebp),%ecx
    mov    (%ebx),%eax
    mov    (%edx),%edx
    mov    %eax,(%ecx)
    mov    %edx,(%ebx)
  jump_72581:
    mov    -0x150(%ebp),%eax
    add    %eax,-0xc(%ebp)
  jump_7258a:
    add    -0x150(%ebp),%ebx
    jmp    jump_72548
  jump_72592:
    cmp    -0x4(%ebp),%ebx
    ja     jump_725e7
    mov    -0x4(%ebp),%eax
    mov    -0x2c(%ebp),%edx
    call   *-0x14(%ebp)
    test   %eax,%eax
    jl     jump_725e7
    jne    jump_725dc
    cmpl   $0x0,-0x1c(%ebp)
    je     jump_725bf
    mov    -0x4(%ebp),%esi
    mov    -0x8(%ebp),%edi
    mov    -0x150(%ebp),%ecx
    call   func_72298
    jmp    jump_725d3
  jump_725bf:
    mov    -0x8(%ebp),%edx
    mov    -0x4(%ebp),%eax
    mov    -0x4(%ebp),%ecx
    mov    (%edx),%edx
    mov    (%eax),%eax
    mov    %edx,(%ecx)
    mov    -0x8(%ebp),%edx
    mov    %eax,(%edx)
  jump_725d3:
    mov    -0x150(%ebp),%eax
    sub    %eax,-0x8(%ebp)
  jump_725dc:
    mov    -0x150(%ebp),%eax
    sub    %eax,-0x4(%ebp)
    jmp    jump_72592
  jump_725e7:
    cmp    -0x4(%ebp),%ebx
    ja     jump_72626
    cmpl   $0x0,-0x1c(%ebp)
    je     jump_72604
    mov    -0x4(%ebp),%edi
    mov    -0x150(%ebp),%ecx
    mov    %ebx,%esi
    call   func_72298
    jmp    jump_72612
  jump_72604:
    mov    -0x4(%ebp),%eax
    mov    (%eax),%eax
    mov    (%ebx),%edx
    mov    %eax,(%ebx)
    mov    -0x4(%ebp),%eax
    mov    %edx,(%eax)
  jump_72612:
    mov    -0x150(%ebp),%eax
    add    -0x150(%ebp),%ebx
    sub    %eax,-0x4(%ebp)
    jmp    jump_72548
  jump_72626:
    mov    -0x14c(%ebp),%eax
    imul   -0x150(%ebp),%eax
    mov    -0x148(%ebp),%edx
    mov    %ebx,%ecx
    add    %eax,%edx
    mov    -0xc(%ebp),%eax
    sub    -0xc(%ebp),%ecx
    sub    -0x148(%ebp),%eax
    mov    %edx,-0x28(%ebp)
    cmp    %ecx,%eax
    jge    jump_72652
    mov    %eax,%ecx
  jump_72652:
    test   %ecx,%ecx
    jbe    jump_72685
    mov    %ebx,%edi
    mov    -0x148(%ebp),%esi
    sub    %ecx,%edi
    push   %es
    push   %ds
    pop    %es
    movzbl %cl,%edx
    shr    $0x2,%ecx
    je     jump_72676
  jump_7266b:
    mov    (%edi),%eax
    xchg   %eax,(%esi)
    stos   %eax,%es:(%edi)
    add    $0x4,%esi
    dec    %ecx
    jne    jump_7266b
  jump_72676:
    and    $0x3,%dl
    je     jump_72684
  jump_7267b:
    mov    (%edi),%al
    xchg   %al,(%esi)
    stos   %al,%es:(%edi)
    inc    %esi
    dec    %edx
    jne    jump_7267b
  jump_72684:
    pop    %es
  jump_72685:
    mov    -0x28(%ebp),%eax
    mov    -0x8(%ebp),%ecx
    sub    -0x8(%ebp),%eax
    sub    -0x4(%ebp),%ecx
    sub    -0x150(%ebp),%eax
    cmp    %eax,%ecx
    jb     jump_7269d
    mov    %eax,%ecx
  jump_7269d:
    test   %ecx,%ecx
    jbe    jump_726cd
    mov    -0x28(%ebp),%edi
    mov    %ebx,%esi
    sub    %ecx,%edi
    push   %es
    push   %ds
    pop    %es
    movzbl %cl,%edx
    shr    $0x2,%ecx
    je     jump_726be
  jump_726b3:
    mov    (%edi),%eax
    xchg   %eax,(%esi)
    stos   %eax,%es:(%edi)
    add    $0x4,%esi
    dec    %ecx
    jne    jump_726b3
  jump_726be:
    and    $0x3,%dl
    je     jump_726cc
  jump_726c3:
    mov    (%edi),%al
    xchg   %al,(%esi)
    stos   %al,%es:(%edi)
    inc    %esi
    dec    %edx
    jne    jump_726c3
  jump_726cc:
    pop    %es
  jump_726cd:
    mov    -0x8(%ebp),%esi
    mov    -0x28(%ebp),%ecx
    mov    %ebx,%edi
    mov    -0x10(%ebp),%ebx
    sub    -0xc(%ebp),%edi
    sub    -0x4(%ebp),%esi
    shl    $0x2,%ebx
    sub    %esi,%ecx
    cmp    %edi,%esi
    jb     jump_7270b
    mov    %esi,%eax
    xor    %edx,%edx
    divl   -0x150(%ebp)
    xor    %edx,%edx
    mov    %eax,-0xc4(%ebx,%ebp,1)
    mov    %edi,%eax
    divl   -0x150(%ebp)
    mov    %ecx,-0x144(%ebx,%ebp,1)
    jmp    jump_72745
  jump_7270b:
    cmp    -0x150(%ebp),%edi
    jbe    jump_723fa
    mov    -0x148(%ebp),%eax
    xor    %edx,%edx
    mov    %eax,-0x144(%ebx,%ebp,1)
    mov    %edi,%eax
    divl   -0x150(%ebp)
    xor    %edx,%edx
    mov    %eax,-0xc4(%ebx,%ebp,1)
    mov    %esi,%eax
    divl   -0x150(%ebp)
    mov    %ecx,-0x148(%ebp)
  jump_72745:
    mov    %eax,-0x14c(%ebp)
    incl   -0x10(%ebp)
    jmp    jump_7235c


/*----------------------------------------------------------------*/
func_72754:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x24,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    %esp,%edx
    call   func_755e1
    mov    %eax,%ebx
    mov    0x1(%edi),%eax
    mov    0xd(%edi),%edx
    mov    %eax,0x20(%esp)
  jump_72773:
    cmp    0x8(%esp),%esi
    jbe    jump_72787
    mov    %ecx,%eax
    call   *0x20(%esp)
    incl   0x8(%esp)
    add    %edx,%ecx
    jmp    jump_72773
  jump_72787:
    mov    %ebx,%eax
    call   func_7563e
    mov    0xc(%esp),%eax
    add    $0x24,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_72799:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    0x8(%eax),%ebx
    xor    %edx,%edx
    mov    (%ebx),%dl
    test   %edx,%edx
    je     jump_727af
    inc    %ebx
    mov    %ebx,0x8(%eax)
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret
  jump_727af:
    mov    0x10(%eax),%bl
    or     $0x2,%bl
    mov    $0xffffffff,%edx
    mov    %bl,0x10(%eax)
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_727c2:
/*----------------------------------------------------------------*/
    decl   0x8(%edx)
    ret


/*----------------------------------------------------------------*/
func_727c6:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    sub    $0x14,%esp
    mov    $func_72799,%ecx
    mov    $func_727c2,%esi
    mov    %eax,0x8(%esp)
    mov    %esp,%eax
    mov    %ecx,(%esp)
    mov    %esi,0x4(%esp)
    call   func_75647
    add    $0x14,%esp
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_727ed:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x4,%esp
    lea    0x18(%esp),%ebx
    mov    0x10(%esp),%eax
    mov    0x14(%esp),%edx
    mov    %ebx,(%esp)
    mov    %esp,%ebx
    call   func_727c6
    add    $0x4,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7280e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    data_1227e8,%eax
  jump_72817:
    test   %eax,%eax
    jne    jump_72823
    mov    $0xffffffff,%eax
    pop    %edx
    pop    %ebx
    ret
  jump_72823:
    mov    0x4(%eax),%ebx
    cmp    %ebx,%edx
    je     jump_7282e
    mov    (%eax),%eax
    jmp    jump_72817
  jump_7282e:
    mov    $0x1,%edx
    mov    %ebx,%eax
    call   func_7283d
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7283d:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    call   func_728c7
    mov    %eax,%edx
    mov    %ebx,%eax
    call   func_7623a
    mov    %edx,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_72852:
/*----------------------------------------------------------------*/
    add    $0x30,%eax
    cmp    $0x39,%eax
    jle    jump_7285d
    add    $0x27,%eax
  jump_7285d:
    ret


/*----------------------------------------------------------------*/
func_7285e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%edi
    call   func_76291
    mov    $0x4,%edx
    mov    %eax,%ebx
    mov    %ecx,%esi
    movb   $0x74,(%ecx)
    add    %ecx,%edx
  jump_72879:
    mov    %ebx,%eax
    and    $0xf,%eax
    call   func_72852
    mov    %al,(%edx)
    dec    %edx
    shr    $0x4,%ebx
    cmp    %esi,%edx
    jne    jump_72879
    mov    %edi,%eax
    sar    $0x4,%eax
    and    $0xf,%eax
    movb   $0x5f,0x5(%ecx)
    call   func_72852
    mov    %al,0x6(%ecx)
    mov    %edi,%eax
    and    $0xf,%eax
    call   func_72852
    movb   $0x2e,0x8(%ecx)
    movb   $0x74,0x9(%ecx)
    movb   $0x6d,0xa(%ecx)
    movb   $0x70,0xb(%ecx)
    movb   $0x0,0xc(%ecx)
    mov    %al,0x7(%ecx)
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_728c7:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x10,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    cmpl   $0x0,0xc(%eax)
    jne    jump_728df
    mov    $0xffffffff,%esi
    jmp    jump_72946
  jump_728df:
    mov    0xd(%eax),%ah
    xor    %esi,%esi
    test   $0x10,%ah
    je     jump_728f2
    mov    %ecx,%eax
    call   func_76297
    mov    %eax,%esi
  jump_728f2:
    mov    %ecx,%eax
    call   func_74426
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_7290a
    mov    0x10(%ecx),%eax
    xor    %ebx,%ebx
    call   func_72df0
  jump_7290a:
    test   %edi,%edi
    je     jump_72918
    mov    0x10(%ecx),%eax
    call   func_76356
    or     %eax,%esi
  jump_72918:
    testb  $0x8,0xc(%ecx)
    je     jump_7292d
    mov    0x8(%ecx),%eax
    call   func_73bef
    movl   $0x0,0x8(%ecx)
  jump_7292d:
    testb  $0x8,0xd(%ecx)
    je     jump_72946
    xor    %edx,%edx
    mov    %esp,%eax
    mov    0x19(%ecx),%dl
    call   func_7285e
    mov    %esp,%eax
    call   func_76388
  jump_72946:
    mov    %esi,%eax
    add    $0x10,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_72950:
/*----------------------------------------------------------------*/
    xor    $0xa22168c2,%eax
    fimull (%edi)
    leave
    add    %eax,-0x27(%eax)
    (bad)
    call   func_7296e
    jae    func_7295a
    ret


/*----------------------------------------------------------------*/
func_72964:
/*----------------------------------------------------------------*/
    fsin
    call   func_7296e
    jae    func_72964
    ret


/*----------------------------------------------------------------*/
func_7296e:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %eax
    fstsw  -0x2(%ebp)
    mov    -0x1(%ebp),%ah
    or     $0x1,%ah
    sahf
    jnp    jump_72997
    fldt   %cs:func_72950
    fxch   %st(1)
  jump_72988:
    fprem
    fstsw  -0x2(%ebp)
    mov    -0x1(%ebp),%ah
    sahf
    jp     jump_72988
    fstp   %st(1)
    clc
  jump_72997:
    pop    %eax
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7299a:
/*----------------------------------------------------------------*/
    fldl   0x4(%esp)
    call   func_7295a
    ret    $0x8


/*----------------------------------------------------------------*/
func_729a6:
/*----------------------------------------------------------------*/
    fldl   0x4(%esp)
    call   func_72964
    ret    $0x8


/*----------------------------------------------------------------*/
func_729b2:
/*----------------------------------------------------------------*/
    fptan
    fstp   %st(0)
    ret


/*----------------------------------------------------------------*/
func_729b7:
/*----------------------------------------------------------------*/
    fldl   0x4(%esp)
    call   func_729b2
    ret    $0x8


/*----------------------------------------------------------------*/
func_729c4:
/*----------------------------------------------------------------*/
    jmp    func_73f9c


/*----------------------------------------------------------------*/
func_729cc:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    sub    $0x20,%esp
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    %esp,%edx
    call   func_755e1
    mov    %esp,%edx
    mov    %eax,%ebx
    xor    %eax,%eax
    mov    %esi,0x8(%esp)
    call   func_76554
    mov    %ebx,%eax
    call   func_7563e
    mov    %ecx,%eax
    add    $0x20,%esp
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_729fa:
/*----------------------------------------------------------------*/
    push   %ebx
  jump_729fb:
    mov    (%eax),%bl
    mov    (%edx),%bh
    cmp    $0x41,%bl
    jb     jump_72a0c
    cmp    $0x5a,%bl
    ja     jump_72a0c
    add    $0x20,%bl
  jump_72a0c:
    cmp    $0x41,%bh
    jb     jump_72a19
    cmp    $0x5a,%bh
    ja     jump_72a19
    add    $0x20,%bh
  jump_72a19:
    cmp    %bh,%bl
    jne    jump_72a25
    test   %bh,%bh
    je     jump_72a25
    inc    %eax
    inc    %edx
    jmp    jump_729fb
  jump_72a25:
    xor    %edx,%edx
    xor    %eax,%eax
    mov    %bl,%dl
    mov    %bh,%al
    sub    %eax,%edx
    mov    %edx,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_72a33:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    mov    %edx,%ebx
    cmp    $0xffffffff,%eax
    jne    jump_72a52
    mov    $0x4,%eax
    call   func_76588
  jump_72a4b:
    xor    %eax,%eax
    jmp    jump_72ad9
  jump_72a52:
    mov    %edx,%eax
    call   func_73187
    mov    %eax,%esi
    mov    %eax,%ebp
    test   %eax,%eax
    je     jump_72ad9
    mov    %ecx,%eax
    mov    %esi,%edx
    call   func_72adf
    cmp    $0xffffffff,%eax
    je     jump_72a4b
    mov    %ecx,%eax
    call   func_76192
    mov    %eax,%edx
    mov    %eax,%edi
    test   %eax,%eax
    je     jump_72ad7
    mov    0xc(%eax),%ah
    movl   $0x0,0x4(%edx)
    movl   $0x0,0x8(%edx)
    and    $0xfc,%ah
    movl   $0x0,0x14(%edx)
    mov    %ah,0xc(%edx)
    mov    0xc(%edx),%eax
    mov    %ecx,0x10(%edx)
    or     %esi,%eax
    mov    %eax,0xc(%edx)
    xor    %eax,%eax
    mov    (%ebx),%al
    call   func_765be
    cmp    $0x61,%eax
    jne    jump_72ac7
    mov    $0x2,%ebx
    mov    %edx,%eax
    xor    %edx,%edx
    call   func_74498
  jump_72ac7:
    mov    %edi,%eax
    call   func_765cc
    mov    %ebp,%edx
    mov    %ecx,%eax
    call   func_76652
  jump_72ad7:
    mov    %edi,%eax
  jump_72ad9:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_72adf:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    call   func_765fd
    mov    %eax,%ecx
    mov    %eax,%ebx
    xor    %edx,%ecx
    xor    %eax,%eax
    test   $0xc0,%cl
    je     jump_72af8
    mov    $0x6,%eax
  jump_72af8:
    test   $0x1,%dl
    je     jump_72b07
    test   $0x1,%bl
    jne    jump_72b07
    mov    $0x6,%eax
  jump_72b07:
    test   $0x2,%dl
    je     jump_72b16
    test   $0x2,%bl
    jne    jump_72b16
    mov    $0x6,%eax
  jump_72b16:
    cmp    $0x6,%eax
    jne    jump_72b28
    call   func_76588
    mov    $0xffffffff,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_72b28:
    xor    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_72b2d:
/*----------------------------------------------------------------*/
    call   func_74426
    mov    %eax,(%edx)
    cmp    $0xffffffff,%eax
    sete   %al
    and    $0xff,%eax
    ret


/*----------------------------------------------------------------*/
func_72b40:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%esi
    jmp    jump_72b51
  jump_72b46:
    mov    (%edx),%cl
    test   %cl,%cl
    je     jump_72b55
    inc    %edx
    dec    %ebx
    mov    %cl,(%eax)
    inc    %eax
  jump_72b51:
    test   %ebx,%ebx
    jne    jump_72b46
  jump_72b55:
    test   %ebx,%ebx
    je     jump_72b60
    dec    %ebx
    movb   $0x0,(%eax)
    inc    %eax
    jmp    jump_72b55
  jump_72b60:
    mov    %esi,%eax
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_72b65:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    $0x1,%ebx
    xor    %edx,%edx
    call   func_72df0
    mov    %eax,%esi
    cmp    $0xffffffff,%eax
    je     jump_72b9c
    mov    $0x2,%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_72df0
    mov    %eax,%edi
    mov    %esi,%edx
    xor    %ebx,%ebx
    mov    %ecx,%eax
    call   func_72df0
    mov    %edi,%eax
  jump_72b9c:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_72ba2:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    lea    0x14(%esp),%eax
    add    $0x4,%eax
    mov    -0x4(%eax),%eax
    push   %eax
    push   $0x0
    mov    0x18(%esp),%edx
    push   %edx
    mov    0x18(%esp),%ebx
    push   %ebx
    call   func_72bc6
    add    $0x10,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_72bc6:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0xc,%esp
    mov    0x24(%esp),%esi
  jump_72bd2:
    cmpb   $0x20,(%esi)
    jne    jump_72bda
    inc    %esi
    jmp    jump_72bd2
  jump_72bda:
    mov    0x28(%esp),%eax
    and    $0x83,%eax
    mov    %eax,(%esp)
    mov    0x2c(%esp),%dl
    mov    (%esp),%al
    or     %dl,%al
    mov    %esi,%edx
    mov    $0xffffffff,%edi
    mov    $0x3d,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jl     jump_72c0d
    xor    %edi,%edi
    mov    0x4(%esp),%di
  jump_72c0d:
    mov    0x28(%esp),%dh
    test   $0x3,%dh
    je     jump_72c87
    cmp    $0xffffffff,%edi
    je     jump_72c87
    mov    %edi,%eax
    call   func_74200
    test   %eax,%eax
    jne    jump_72c87
    testb  $0x4,0x29(%esp)
    je     jump_72c4f
    mov    %edi,%ebx
    mov    $0x3e,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    $0x7,%eax
    call   func_76588
    mov    $0xffffffff,%eax
    jmp    jump_72d82
  jump_72c4f:
    test   $0x40,%dh
    je     jump_72c87
    lea    0x8(%esp),%edx
    mov    %edi,%ebx
    xor    %ecx,%ecx
    mov    $0x40,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jge    jump_72c87
    mov    %edi,%ebx
    mov    $0x3e,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
  jump_72c76:
    xor    %eax,%eax
    mov    0x4(%esp),%ax
    call   func_76673
    jmp    jump_72d82
  jump_72c87:
    cmp    $0xffffffff,%edi
    jne    jump_72d15
    testb  $0x20,0x28(%esp)
    je     jump_72c76
    cmpw   $0x2,0x4(%esp)
    jne    jump_72c76
    lea    0x30(%esp),%eax
    add    $0x4,%eax
    mov    -0x4(%eax),%eax
    test   %eax,%eax
    jne    jump_72cb2
    mov    $0x180,%eax
  jump_72cb2:
    xor    data_89880,%eax
    xor    %ecx,%ecx
    test   $0x80,%al
    jne    jump_72cc3
    mov    $0x1,%ecx
  jump_72cc3:
    mov    %esi,%edx
    and    $0xff,%ecx
    mov    $0x3c,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jl     jump_72c76
    mov    0x4(%esp),%ebx
    mov    $0x3e,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jl     jump_72c76
    mov    (%esp),%al
    mov    0x2c(%esp),%ch
    mov    %esi,%edx
    or     %ch,%al
    mov    $0x3d,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    jl     jump_72c76
    xor    %edi,%edi
    mov    0x4(%esp),%di
  jump_72d15:
    mov    %edi,%eax
    call   func_765fd
    and    $0x3c,%al
    mov    %eax,%edx
    mov    %edi,%eax
    call   func_74200
    test   %eax,%eax
    je     jump_72d2e
    or     $0x20,%dh
  jump_72d2e:
    andb   $0x7f,(%esp)
    cmpl   $0x2,(%esp)
    jne    jump_72d3b
    or     $0x3,%dl
  jump_72d3b:
    cmpl   $0x0,(%esp)
    jne    jump_72d44
    or     $0x1,%dl
  jump_72d44:
    cmpl   $0x1,(%esp)
    jne    jump_72d4d
    or     $0x2,%dl
  jump_72d4d:
    testb  $0x10,0x28(%esp)
    je     jump_72d57
    or     $0x80,%dl
  jump_72d57:
    mov    %edx,%eax
    mov    0x29(%esp),%bl
    or     $0x40,%al
    test   $0x3,%bl
    je     jump_72d6b
    test   $0x2,%bl
    je     jump_72d79
    jmp    jump_72d77
  jump_72d6b:
    cmpl   $0x200,data_89a8d
    jne    jump_72d79
  jump_72d77:
    mov    %eax,%edx
  jump_72d79:
    mov    %edi,%eax
    call   func_76652
    mov    %edi,%eax
  jump_72d82:
    add    $0xc,%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_72df0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %ebx,%eax
    mov    %esp,%edi
    mov    %ecx,%ebx
    mov    $0x42,%ah
    mov    %edx,%ecx
    shr    $0x10,%ecx
    int    $0x21
    mov    %ax,%ss:(%edi)
    mov    %dx,%ss:0x2(%edi)
    rcl    %eax
    ror    %eax
    test   %eax,%eax
    jge    jump_72e28
    and    $0xffff,%eax
    call   func_76673
    mov    $0xffffffff,%eax
    jmp    jump_72e2b
  jump_72e28:
    mov    (%esp),%eax
  jump_72e2b:
    add    $0x4,%esp
    pop    %edi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_72e31:
/*----------------------------------------------------------------*/
    jmp    func_76356


/*----------------------------------------------------------------*/
func_72e36:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    $0x1,%ebx
    xor    %edx,%edx
    call   func_72df0
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_72e47:
/*----------------------------------------------------------------*/
    mov    $data_122720,%eax
    ret


/*----------------------------------------------------------------*/
func_72e4d:
/*----------------------------------------------------------------*/
    mov    $data_12271c,%eax
    ret


/*----------------------------------------------------------------*/
func_72e53:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    push   %eax
    mov    %edx,%ebp
    mov    %ebx,%ecx
    call   func_765fd
    mov    %eax,%edx
    mov    %eax,0xc(%esp)
    test   %eax,%eax
    jne    jump_72e82
    mov    $0x4,%eax
  jump_72e73:
    call   func_76588
    mov    $0xffffffff,%eax
    jmp    jump_72f5e
  jump_72e82:
    test   $0x1,%al
    jne    jump_72e8d
    mov    $0x6,%eax
    jmp    jump_72e73
  jump_72e8d:
    test   $0x40,%al
    je     jump_72ebb
    mov    (%esp),%ebx
    mov    %ebp,%edx
    mov    $0x3f,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%esi
    mov    %eax,0x8(%esp)
    test   %eax,%eax
    jge    jump_72f5a
    xor    %eax,%eax
    mov    %si,%ax
  jump_72eb1:
    call   func_76673
    jmp    jump_72f5e
  jump_72ebb:
    xor    %eax,%edx
    mov    %ebx,0x4(%esp)
    mov    %edx,0x8(%esp)
  jump_72ec5:
    mov    (%esp),%ebx
    mov    0x4(%esp),%ecx
    mov    %ebp,%edx
    mov    $0x3f,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%ebx
    mov    %eax,%esi
    mov    %eax,0x10(%esp)
    test   %eax,%eax
    jge    jump_72ee9
    xor    %eax,%eax
    mov    %bx,%ax
    jmp    jump_72eb1
  jump_72ee9:
    je     jump_72f5a
    mov    0x8(%esp),%esi
    mov    %ebp,%eax
    xor    %edi,%edi
    lea    (%ebx,%ebp,1),%ecx
    xor    %edx,%edx
    mov    %ecx,0x14(%esp)
    jmp    jump_72f33
  jump_72f02:
    mov    (%eax),%bl
    cmp    $0x1a,%bl
    jne    jump_72f23
    mov    0x10(%esp),%ebp
    mov    %edi,%edx
    mov    (%esp),%eax
    sub    %ebp,%edx
    mov    $0x1,%ebx
    inc    %edx
    call   func_72df0
    mov    %esi,%eax
    jmp    jump_72f5e
  jump_72f23:
    cmp    $0xd,%bl
    je     jump_72f31
    mov    %edx,%ebx
    inc    %esi
    mov    (%eax),%cl
    inc    %edx
    mov    %cl,(%ebx,%ebp,1)
  jump_72f31:
    inc    %eax
    inc    %edi
  jump_72f33:
    cmp    0x14(%esp),%eax
    jb     jump_72f02
    mov    0x4(%esp),%ecx
    mov    0xd(%esp),%ah
    mov    %esi,0x8(%esp)
    sub    %edx,%ecx
    add    %edx,%ebp
    mov    %ecx,0x4(%esp)
    test   $0x20,%ah
    jne    jump_72f5a
    test   %ecx,%ecx
    jne    jump_72ec5
  jump_72f5a:
    mov    0x8(%esp),%eax
  jump_72f5e:
    add    $0x18,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_72f6b:
    push   %ds
    mov    %ecx,%ds
    mov    %edx,%ecx
    mov    %ebx,%edx
    mov    %eax,%ebx
    mov    0x4(%esp),%eax
    int    $0x21
    pop    %ds
    push   %ds
    jb     jump_72f84
    mov    0xc(%esp),%ebx
    mov    %eax,(%ebx)
  jump_72f84:
    call   func_766da
    pop    %ds
    add    $0x4,%esp
    ret    $0x4


/*----------------------------------------------------------------*/
func_72f90:
/*----------------------------------------------------------------*/
    push   $0x4000
    jmp    jump_72f6b


/*----------------------------------------------------------------*/
func_72f97:
/*----------------------------------------------------------------*/
    test   %eax,%eax
    jne    jump_72fb5
    push   %ecx
    push   %ebx
    push   %edx
    push   $data_85468
    push   $data_898b8
    call   func_73aaa
    add    $0x14,%esp
    jmp    jump_766ed
  jump_72fb5:
    ret


/*----------------------------------------------------------------*/
func_72fb6:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %esp,%ebp
    sub    $0x18,%esp
    push   %eax
    push   %edx
    push   %ebx
    call   func_765fd
    mov    %eax,%edx
    mov    %eax,-0x18(%ebp)
    test   %eax,%eax
    jne    jump_72fe4
    mov    $0x4,%eax
  jump_72fd5:
    call   func_76588
    mov    $0xffffffff,%eax
    jmp    jump_73180
  jump_72fe4:
    test   $0x2,%al
    jne    jump_72fef
    mov    $0x6,%eax
    jmp    jump_72fd5
  jump_72fef:
    test   $0x80,%al
    je     jump_73026
    mov    -0x1c(%ebp),%ebx
    xor    %eax,%edx
    mov    $0x2,%al
    mov    $0x42,%ah
    mov    %edx,%ecx
    shr    $0x10,%ecx
    int    $0x21
    rcl    %dx
    ror    %dx
    shl    $0x10,%edx
    mov    %ax,%dx
    mov    %edx,-0x10(%ebp)
    test   %edx,%edx
    jge    jump_73026
  jump_73016:
    xor    %eax,%eax
    mov    -0x10(%ebp),%ax
    call   func_76673
    jmp    jump_73180
  jump_73026:
    testb  $0x40,-0x18(%ebp)
    je     jump_73061
    mov    -0x1c(%ebp),%ebx
    mov    -0x20(%ebp),%edx
    mov    -0x24(%ebp),%ecx
    mov    $0x40,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%edx
    mov    %eax,-0x10(%ebp)
    test   %eax,%eax
    jl     jump_73016
    cmp    -0x24(%ebp),%eax
    je     jump_7317d
    mov    $0xc,%eax
    call   func_76588
    mov    %edx,-0x24(%ebp)
    jmp    jump_7317d
  jump_73061:
    call   func_76705
    mov    %eax,%edx
    cmp    $0xb0,%eax
    jae    jump_73074
    call   func_740eb
  jump_73074:
    mov    $0x200,%edi
    cmp    $0x230,%edx
    jae    jump_73086
    mov    $0x80,%edi
  jump_73086:
    lea    0x3(%edi),%eax
    xor    %edx,%edx
    and    $0xfc,%al
    xor    %esi,%esi
    sub    %eax,%esp
    mov    %edx,-0x4(%ebp)
    mov    %edx,-0x14(%ebp)
    mov    -0x20(%ebp),%eax
    mov    %esp,-0x8(%ebp)
    mov    %eax,-0xc(%ebp)
  jump_730a0:
    mov    -0x4(%ebp),%eax
    cmp    -0x24(%ebp),%eax
    jae    jump_73147
    mov    -0xc(%ebp),%eax
    cmpb   $0xa,(%eax)
    jne    jump_730fc
    mov    -0x8(%ebp),%eax
    movb   $0xd,(%esi,%eax,1)
    inc    %esi
    cmp    %edi,%esi
    jne    jump_730fc
    mov    -0x1c(%ebp),%ebx
    mov    %eax,%edx
    mov    %edi,%ecx
    mov    $0x40,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%esi
    mov    %eax,-0x10(%ebp)
    test   %eax,%eax
    jl     jump_73016
    cmp    %edi,%eax
    je     jump_730f4
  jump_730e0:
    mov    $0xc,%eax
    call   func_76588
    mov    -0x14(%ebp),%eax
    add    %esi,%eax
    jmp    jump_73180
  jump_730f4:
    mov    -0x4(%ebp),%eax
    xor    %edi,%esi
    mov    %eax,-0x14(%ebp)
  jump_730fc:
    mov    -0x8(%ebp),%eax
    mov    -0xc(%ebp),%edx
    mov    -0xc(%ebp),%ebx
    mov    -0x4(%ebp),%ecx
    inc    %ebx
    inc    %ecx
    mov    (%edx),%dl
    mov    %ebx,-0xc(%ebp)
    mov    %dl,(%esi,%eax,1)
    inc    %esi
    mov    %ecx,-0x4(%ebp)
    cmp    %edi,%esi
    jne    jump_730a0
    mov    -0x1c(%ebp),%ebx
    mov    %eax,%edx
    mov    %edi,%ecx
    mov    $0x40,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%esi
    mov    %eax,-0x10(%ebp)
    test   %eax,%eax
    jl     jump_73016
    cmp    %edi,%eax
    jne    jump_730e0
    mov    -0x4(%ebp),%eax
    xor    %edi,%esi
    mov    %eax,-0x14(%ebp)
    jmp    jump_730a0
  jump_73147:
    test   %esi,%esi
    je     jump_7317d
    mov    -0x1c(%ebp),%ebx
    mov    -0x8(%ebp),%edx
    mov    %esi,%ecx
    mov    $0x40,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%edx
    mov    %eax,-0x10(%ebp)
    test   %eax,%eax
    jl     jump_73016
    cmp    %esi,%eax
    je     jump_7317d
    mov    $0xc,%eax
    call   func_76588
    mov    -0x14(%ebp),%eax
    add    %edx,%eax
    jmp    jump_73180
  jump_7317d:
    mov    -0x24(%ebp),%eax
  jump_73180:
    mov    %ebp,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_73187:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x4,%esp
    mov    %eax,%edx
    xor    %eax,%eax
    mov    (%edx),%al
    xor    %ebx,%ebx
    call   func_765be
    mov    %al,(%esp)
    cmp    $0x72,%al
    je     jump_731ba
    cmp    $0x77,%al
    je     jump_731ba
    cmp    $0x61,%al
    je     jump_731ba
    mov    $0x9,%eax
    call   func_76588
    xor    %eax,%eax
    jmp    jump_73234
  jump_731ba:
    mov    %ebx,%eax
    mov    0x1(%edx),%cl
    or     $0x3,%al
    cmp    $0x2b,%cl
    jne    jump_731e7
    mov    %eax,%ebx
    mov    0x2(%edx),%cl
    or     $0x40,%al
    cmp    $0x62,%cl
    je     jump_731e3
    cmp    $0x74,%cl
    je     jump_7321a
    cmpl   $0x200,data_89a8d
  jump_731e1:
    jne    jump_7321a
  jump_731e3:
    mov    %eax,%ebx
    jmp    jump_7321a
  jump_731e7:
    mov    %ebx,%ecx
    or     $0x40,%cl
    cmpb   $0x62,0x1(%edx)
    jne    jump_73200
    mov    0x2(%edx),%al
    mov    %ecx,%ebx
    cmp    $0x2b,%al
    jne    jump_7321a
    or     $0x3,%cl
    jmp    jump_73218
  jump_73200:
    cmpb   $0x74,0x1(%edx)
    jne    jump_7320c
    cmpb   $0x2b,0x2(%edx)
    jmp    jump_731e1
  jump_7320c:
    cmpl   $0x200,data_89a8d
    jne    jump_7321a
  jump_73218:
    mov    %ecx,%ebx
  jump_7321a:
    mov    (%esp),%al
    cmp    $0x77,%al
    jne    jump_73226
    or     $0x2,%bl
    jmp    jump_73232
  jump_73226:
    cmp    $0x61,%al
    jne    jump_7322f
    or     $0x82,%bl
    jmp    jump_73232
  jump_7322f:
    or     $0x1,%bl
  jump_73232:
    mov    %ebx,%eax
  jump_73234:
    add    $0x4,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7323b:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    mov    %eax,%esi
    andb   $0xfc,0xc(%ecx)
    mov    %edx,%eax
    call   func_73187
    mov    0xc(%ecx),%edi
    or     %eax,%edi
    xor    %eax,%eax
    mov    %edi,0xc(%ecx)
    mov    (%edx),%al
    call   func_765be
    mov    %al,%dl
    cmp    $0x72,%al
    jne    jump_73282
    mov    0xc(%ecx),%dh
    xor    %eax,%eax
    test   $0x2,%dh
    je     jump_73270
    mov    $0x2,%eax
  jump_73270:
    testb  $0x40,0xc(%ecx)
    je     jump_7327b
    or     $0x2,%ah
    jmp    jump_7327e
  jump_7327b:
    or     $0x1,%ah
  jump_7327e:
    push   $0x0
    jmp    jump_732af
  jump_73282:
    testb  $0x1,0xc(%ecx)
    setne  %al
    and    $0xff,%eax
    add    $0x21,%eax
    cmp    $0x61,%dl
    jne    jump_7329a
    or     $0x10,%al
    jmp    jump_7329c
  jump_7329a:
    or     $0x40,%al
  jump_7329c:
    testb  $0x40,0xc(%ecx)
    je     jump_732a7
    or     $0x2,%ah
    jmp    jump_732aa
  jump_732a7:
    or     $0x1,%ah
  jump_732aa:
    push   $0x180
  jump_732af:
    push   %ebx
    push   %eax
    push   %esi
    call   func_72bc6
    add    $0x10,%esp
    mov    %eax,0x10(%ecx)
    cmpl   $0xffffffff,0x10(%ecx)
    jne    jump_732cf
    mov    %ecx,%eax
    call   func_7623a
    xor    %eax,%eax
    pop    %edi
    pop    %esi
    ret
  jump_732cf:
    movl   $0x0,0x4(%ecx)
    movl   $0x0,0x8(%ecx)
    movl   $0x0,0x14(%ecx)
    cmp    $0x61,%dl
    jne    jump_732f7
    mov    $0x2,%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_74498
  jump_732f7:
    mov    %ecx,%eax
    call   func_765cc
    mov    %ecx,%eax
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_73303:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%esi
    xor    %eax,%eax
    call   func_76192
    mov    %eax,%ecx
    test   %eax,%eax
    je     jump_7331b
    mov    %esi,%eax
    call   func_7323b
  jump_7331b:
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7331e:
/*----------------------------------------------------------------*/
    push   %ebx
    xor    %ebx,%ebx
    call   func_73303
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_733b4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    mov    0x8(%eax),%eax
    cmpl   $0x0,0x4(%eax)
    jle    jump_733d6
    testb  $0x4,0xc(%eax)
    jne    jump_733d6
    mov    (%eax),%ebx
    mov    (%ebx),%cl
    cmp    $0xd,%cl
    je     jump_733d6
    cmp    $0x1a,%cl
    jne    jump_733e0
  jump_733d6:
    mov    0x8(%edx),%eax
    call   func_7670e
    jmp    jump_733f1
  jump_733e0:
    decl   0x4(%eax)
    mov    0x8(%edx),%eax
    mov    (%eax),%ebx
    lea    0x1(%ebx),%ecx
    mov    %ecx,(%eax)
    xor    %eax,%eax
    mov    (%ebx),%al
  jump_733f1:
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    jne    jump_733fc
    orb    $0x2,0x10(%edx)
  jump_733fc:
    mov    %ebx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_73402:
/*----------------------------------------------------------------*/
    mov    0x8(%edx),%edx
    jmp    jump_76871


/*----------------------------------------------------------------*/
func_7340a:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    sub    $0x14,%esp
    mov    $func_733b4,%ecx
    mov    $func_73402,%esi
    mov    %eax,0x8(%esp)
    mov    %esp,%eax
    mov    %ecx,(%esp)
    mov    %esi,0x4(%esp)
    call   func_75647
    add    $0x14,%esp
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_73431:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x4,%esp
    lea    0x18(%esp),%ebx
    mov    0x10(%esp),%eax
    mov    0x14(%esp),%edx
    mov    %ebx,(%esp)
    mov    %esp,%ebx
    call   func_7340a
    add    $0x4,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_73452:
/*----------------------------------------------------------------*/
    jmp    jump_76959


/*----------------------------------------------------------------*/
func_73457:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x4,%esp
    lea    0x14(%esp),%ebx
    mov    $data_8989e,%eax
    mov    0x10(%esp),%edx
    mov    %ebx,(%esp)
    mov    %esp,%ebx
    call   func_7698b
    add    $0x4,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_73479:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x4,%esp
    mov    $0x20,%edx
    mov    data_1227a4,%ebx
    mov    %edx,data_1227a4
    mov    %ebx,%edx
    shl    $0x2,%edx
  jump_73494:
    test   %edx,%edx
    je     jump_734aa
    mov    data_122720(%edx),%eax
    sub    $0x4,%edx
    mov    %eax,(%esp)
    dec    %ebx
    call   *(%esp)
    jmp    jump_73494
  jump_734aa:
    add    $0x4,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_734b0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ebx
    mov    $func_73479,%edx
    mov    data_1227a4,%ecx
    mov    %edx,data_89724
    cmp    $0x20,%ecx
    jge    jump_734e3
    mov    %ecx,%eax
    lea    0x1(%ecx),%edx
    mov    %ebx,data_122724(,%ecx,4)
    mov    %edx,data_1227a4
    xor    %ecx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_734e3:
    mov    $0xffffffff,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_734ec:
/*----------------------------------------------------------------*/
    push   %edx
    xor    %edx,%edx
    mov    data_897e8,%eax
    mov    %edx,data_897e8
    test   %eax,%eax
    jne    jump_73507
    mov    $0x8,%ah
    int    $0x21
    and    $0xff,%eax
  jump_73507:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_73509:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_7350a:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   *data_89724
    call   *data_89728
    mov    %edx,%eax
    call   func_73522
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_73522:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   *data_89728
    call   *data_8972c
    mov    %edx,%eax
    jmp    jump_73a03


/*----------------------------------------------------------------*/
func_73538:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    data_89750,%esi
    xor    %ebx,%ebx
    jmp    jump_7358c
  jump_7354a:
    mov    0x28(%esi),%eax
    mov    0x4(%eax),%edx
    test   %edx,%edx
    jne    jump_7355b
  jump_73554:
    mov    $0x3,%eax
    jmp    jump_73594
  jump_7355b:
    mov    0x8(%edx),%ecx
    cmp    %ecx,%eax
    jne    jump_73554
  jump_73562:
    mov    0x8(%eax),%ebp
    test   %ebp,%ebp
    je     jump_73554
    mov    %ebp,%edx
    mov    0x4(%ebp),%ebp
    cmp    %ebp,%eax
    jne    jump_73554
    testb  $0x1,0x0(%ebp)
    jne    jump_73554
    mov    0x0(%ebp),%eax
    add    %ebx,%eax
    cmp    %ebx,%eax
    jb     jump_73554
    mov    %eax,%ebx
    mov    %edx,%eax
    cmp    %ecx,%edx
    jne    jump_73562
    mov    0x8(%esi),%esi
  jump_7358c:
    test   %esi,%esi
    jne    jump_7354a
    xor    %eax,%eax
    mov    %ebx,(%edi)
  jump_73594:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7359b:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %edi
    push   %ebp
    testb  $0x1,(%eax)
    je     jump_735ac
  jump_735a5:
    mov    $0x3,%eax
    jmp    jump_735dc
  jump_735ac:
    mov    0x8(%eax),%edx
    mov    0x4(%edx),%ecx
    mov    0x4(%eax),%ebx
    cmp    %ecx,%eax
    jne    jump_735a5
    cmp    0x8(%ebx),%ecx
    jne    jump_735a5
    mov    0x8(%edx),%ecx
    mov    0x4(%ecx),%edi
    mov    0x4(%ebx),%eax
    cmp    %edi,%edx
    jne    jump_735a5
    mov    0x8(%eax),%ebp
    cmp    %ebp,%ebx
    jne    jump_735a5
    cmp    %edi,%edi
    jne    jump_735a5
    cmp    %ebp,%ebp
    jne    jump_735a5
    xor    %eax,%eax
  jump_735dc:
    pop    %ebp
    pop    %edi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_735e2:
/*----------------------------------------------------------------*/
    push   %edx
    sub    $0x14,%esp
    cmpb   $0x0,data_1227f5
    je     jump_735f6
    xor    %eax,%eax
    add    $0x14,%esp
    pop    %edx
    ret
  jump_735f6:
    lea    0x10(%esp),%eax
    call   func_73538
    test   %eax,%eax
    jne    jump_73667
    xor    %edx,%edx
    mov    %eax,(%esp)
    mov    %dx,0x4(%esp)
  jump_73611:
    mov    %esp,%eax
    mov    data_89750,%edx
    call   func_74014
    test   %eax,%eax
    jne    jump_7363f
    cmpl   $0x1,0xa(%esp)
    jne    jump_73611
    mov    (%esp),%eax
    call   func_7359b
    test   %eax,%eax
    jne    jump_7363f
    mov    0x6(%esp),%eax
    sub    %eax,0x10(%esp)
    jmp    jump_73611
  jump_7363f:
    cmpl   $0x0,0x10(%esp)
    je     jump_73650
  jump_73646:
    mov    $0x3,%eax
    add    $0x14,%esp
    pop    %edx
    ret
  jump_73650:
    cmp    $0x5,%eax
    je     jump_73646
    cmp    $0x4,%eax
    jne    jump_7365c
    xor    %eax,%eax
  jump_7365c:
    test   %eax,%eax
    jne    jump_73667
    movb   $0x1,data_1227f5
  jump_73667:
    add    $0x14,%esp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7366c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x24,%esp
    mov    %eax,%edx
    mov    %esp,%eax
    call   func_76a10
    cmp    $0x1f4,%eax
    jl     jump_73684
    incl   (%esp)
  jump_73684:
    mov    %esp,%eax
    call   func_76ad3
    mov    %eax,%ebx
    test   %edx,%edx
    je     jump_73693
    mov    %eax,(%edx)
  jump_73693:
    add    $0x24,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_73699:
/*----------------------------------------------------------------*/
    mov    $data_89730,%eax
    ret


/*----------------------------------------------------------------*/
func_7369f:
/*----------------------------------------------------------------*/
    push   %edx
    call   func_73699
    test   %eax,%eax
    je     jump_736c1
    imul   $0x41c64e6d,(%eax),%edx
    add    $0x3039,%edx
    mov    %edx,(%eax)
    mov    %edx,%eax
    shr    $0x10,%eax
    and    $0x7fff,%eax
  jump_736c1:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_736c3:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_73699
    test   %eax,%eax
    je     jump_736d1
    mov    %edx,(%eax)
  jump_736d1:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_736d3:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %edx,%ebx
    mov    %eax,%edx
    xor    %eax,%eax
    mov    $0x43,%ah
    int    $0x21
    jb     jump_736f0
    test   $0x2,%bl
    je     jump_736f0
    test   $0x1,%cl
    je     jump_736f0
    mov    $0x0,%al
    mov    $0x6,%ah
    stc
  jump_736f0:
    sbb    %ecx,%ecx
    mov    %ax,%cx
    mov    %ecx,%eax
    mov    %eax,%ebx
    mov    %eax,%edx
    and    $0xffff,%ebx
    shr    $0x10,%edx
    mov    %ebx,%eax
    call   func_76667
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7370e:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%ecx
    mov    %edi,%edx
    mov    0xc(%ebx),%ah
    mov    0xc(%ebx),%ebp
    and    $0xcf,%ah
    and    $0x30,%ebp
    mov    %ah,0xc(%ebx)
  jump_7372a:
    dec    %ecx
    test   %ecx,%ecx
    jle    jump_73748
    mov    %ebx,%eax
    call   func_7670e
    mov    %eax,(%esp)
    cmp    $0xffffffff,%eax
    je     jump_73748
    mov    (%esp),%al
    mov    %al,(%edx)
    inc    %edx
    cmp    $0xa,%al
    jne    jump_7372a
  jump_73748:
    cmpl   $0xffffffff,(%esp)
    jne    jump_7375c
    cmp    %edi,%edx
    je     jump_73758
    testb  $0x20,0xc(%ebx)
    je     jump_7375c
  jump_73758:
    xor    %edi,%edi
    jmp    jump_7375f
  jump_7375c:
    movb   $0x0,(%edx)
  jump_7375f:
    mov    0xc(%ebx),%esi
    or     %ebp,%esi
    mov    %edi,%eax
    mov    %esi,0xc(%ebx)
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
_start:	/* 0x73774 */
/*----------------------------------------------------------------*/
    jmp    jump_737ec


/*----------------------------------------------------------------*/
func_737e8:
/*----------------------------------------------------------------*/
    arpl   %bp,0x6e(%edi)
    add    %bh,%bl
    and    $0xfffffffc,%esp
    mov    %esp,%ebx
    mov    %ebx,data_897dc
    mov    %ebx,data_897c8
    mov    $0x24,%ax
    mov    %ax,data_897d4
    mov    $0x50484152,%ebx
    sub    %eax,%eax
    mov    $0x30,%ah
    int    $0x21
    mov    %al,data_897ff
    mov    %ah,data_89800
    mov    %eax,%ecx
    sub    %esi,%esi
    mov    $0x81,%edi
    shr    $0x10,%eax
    cmp    $0x4458,%ax
    jne    jump_7386e
    sub    $0x30,%bl
    mov    %bl,%al
    mov    $0x0,%ah
    push   %eax
    data16 mov data_897d4,%es
    mov    %es:0x5c,%ebx
    add    $0xfff,%ebx
    and    $0xfffff000,%ebx
    mov    %ebx,data_897c8
    shr    $0xc,%ebx
    mov    %ds,%ax
    mov    %eax,%es
    mov    $0x4a,%ah
    int    $0x21
    pop    %eax
    mov    %ds,%bx
    mov    $0x2c,%cx
    jmp    jump_738a6
  jump_7386e:
    cmp    $0x4243,%ax
    jne    jump_738a8
    mov    %edx,data_89734
    mov    %edx,%esi
    mov    0x1c(%esi),%edx
    mov    %esp,%ebx
    sub    %edx,%ebx
    mov    $0x4a,%ah
    int    $0x21
    mov    %ds,%bx
    data16 mov %ds,data_897d4
    mov    0x10(%esi),%eax
    add    %eax,%edi
    sub    %esi,%esi
    mov    0x2c(%eax),%si
    shl    $0x4,%esi
    mov    %ds,%cx
    mov    $0x9,%al
    mov    $0x0,%ah
  jump_738a6:
    jmp    jump_73901
  jump_738a8:
    mov    $0x78,%dx
    mov    $0xff00,%ax
    int    $0x21
    cmp    $0x0,%al
    je     jump_738ea
    mov    %gs,%ax
    cmp    $0x0,%ax
    je     jump_738c5
    mov    %ax,data_89738
  jump_738c5:
    mov    $0x6,%ax
    mov    %ds,%bx
    int    $0x31
    mov    $0x1,%al
    mov    $0x0,%ah
    or     %cx,%dx
    je     jump_738d9
    mov    $0x1,%ah
  jump_738d9:
    data16 mov %es,data_897d4
    mov    %es:0x2c,%cx
    jmp    jump_73901
  jump_738ea:
    mov    %ds,%dx
    mov    $0x24,%cx
    mov    %ecx,%ds
    mov    $0x2c,%cx
    mov    %edx,%ds
    mov    $0x17,%bx
    mov    $0x0,%al
    mov    $0x0,%ah
  jump_73901:
    mov    %al,data_897f6
    mov    %ah,data_897f7
    mov    %ebx,%es
    data16 mov %ds,%es:func_73a49
    mov    %esi,data_897f9
    mov    %cx,data_897fd
    push   %esi
    data16 mov data_897d4,%es
    ds mov $data_1228e4,%edx
    add    $0xf,%edx
    and    $0xf0,%dl
    sub    %ecx,%ecx
    mov    %es:-0x1(%edi),%cl
    cld
    mov    $0x20,%al
    repz scas %es:(%edi),%al
    lea    -0x1(%edi),%esi
    mov    %edx,%edi
    mov    %es,%bx
    mov    %ds,%dx
    mov    %ebx,%ds
    mov    %edx,%es
    je     jump_73956
    inc    %ecx
    rep movsb %ds:(%esi),%es:(%edi)
  jump_73956:
    sub    %al,%al
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    pop    %esi
    dec    %edi
    push   %edi
    push   %edx
    data16 mov %es:data_897fd,%ds
    sub    %ebp,%ebp
  jump_73968:
    mov    (%esi),%eax
    or     $0x20202020,%eax
    cmp    $0x37386f6e,%eax
    jne    jump_7397d
    cmpb   $0x3d,0x4(%esi)
    jne    jump_7397d
    inc    %ebp
  jump_7397d:
    cmpb   $0x0,(%esi)
    lods   %ds:(%esi),%al
    jne    jump_7397d
    cmpb   $0x0,(%esi)
    jne    jump_73968
    lods   %ds:(%esi),%al
    inc    %esi
    inc    %esi
  jump_7398b:
    cmpb   $0x0,(%esi)
    movsb  %ds:(%esi),%es:(%edi)
    jne    jump_7398b
    pop    %ds
    pop    %esi
    mov    %esp,%ebx
    mov    %bp,data_897f4
    mov    %edi,data_897d8
    mov    %ebx,data_897c4
    ds mov $data_1228e4,%ecx
    ds mov $data_8a0d4,%edi
    sub    %edi,%ecx
    cmpb   $0x1,data_897f6
    jne    jump_739cc
    cmp    $0x1000,%ecx
    jbe    jump_739cc
    mov    $0x1000,%ecx
  jump_739cc:
    mov    %cl,%dl
    shr    $0x2,%ecx
    sub    %eax,%eax
    rep stos %eax,%es:(%edi)
    mov    %dl,%cl
    and    $0x3,%cl
    rep stos %al,%es:(%edi)
    ds mov $data_1228e4,%eax
    add    $0xf,%eax
    and    $0xf0,%al
    mov    %eax,data_897cc
    mov    %esi,data_897d0
    mov    $0xff,%eax
    call   func_76c76
    sub    %ebp,%ebp
    call   func_76c27
  jump_73a03:
    jmp    jump_73a28


/*----------------------------------------------------------------*/
func_73a05:
/*----------------------------------------------------------------*/
    push   %edx
    push   %eax
    mov    $func_737e8,%edx
    mov    $0x3d01,%ax
    int    $0x21
    mov    %ax,%bx
    pop    %edx
    mov    %edx,%esi
    cld
  jump_73a19:
    lods   %ds:(%esi),%al
    cmp    $0x0,%al
    jne    jump_73a19
    mov    %esi,%ecx
    sub    %edx,%ecx
    dec    %ecx
    mov    $0x40,%ah
    int    $0x21
    pop    %eax
  jump_73a28:
    push   %eax
    mov    $0x0,%eax
    mov    $0xff,%edx
    call   func_76cc1
    pop    %eax
    mov    $0x4c,%ah
    int    $0x21
    lea    0x0(%eax),%eax


/*----------------------------------------------------------------*/
func_73a40:
/*----------------------------------------------------------------*/
    data16 mov %cs:func_73a49,%ds
    ret


/*----------------------------------------------------------------*/
func_73a49:
/*----------------------------------------------------------------*/
    add    %al,(%eax)
    add    %dl,-0x46(%edx)
    clc
    daa
    adc    (%eax),%al
    mov    data_89774,%eax
    movl   $0x0,data_89774
    mov    %eax,data_1227f8
  jump_73a66:
    mov    (%edx),%eax
    test   %eax,%eax
    je     jump_73a7d
    call   func_7655e
    mov    $data_1227f8,%eax
    call   func_7563e
    jmp    jump_73a66
  jump_73a7d:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_73a7f:
/*----------------------------------------------------------------*/
    add    $0x4,%eax
    ret


/*----------------------------------------------------------------*/
func_73a83:
/*----------------------------------------------------------------*/
    mov    0x4(%eax),%eax
    mov    (%eax,%edx,8),%eax
    ret


/*----------------------------------------------------------------*/
func_73a8a:
/*----------------------------------------------------------------*/
    movb   $0x0,0x8(%eax)
    ret


/*----------------------------------------------------------------*/
func_73a8f:
/*----------------------------------------------------------------*/
    movl   $data_89744,data_122828
    ret


/*----------------------------------------------------------------*/
func_73a9a:
/*----------------------------------------------------------------*/
    push   %edx
    mov    data_89774,%edx
    mov    %edx,(%eax)
    mov    %eax,data_89774
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_73aaa:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x4,%esp
    lea    0x18(%esp),%ebx
    mov    0x10(%esp),%eax
    mov    0x14(%esp),%edx
    mov    %ebx,(%esp)
    mov    %esp,%ebx
    call   func_7698b
    add    $0x4,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_73acc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %dl,%bl
    mov    (%eax),%edx
    lea    0x1(%edx),%ecx
    mov    %ecx,(%eax)
    mov    %bl,(%edx)
    incl   0x10(%eax)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_73adf:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    $func_73acc,%ecx
    call   func_74795
    movb   $0x0,(%esi,%eax,1)
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_73af4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %es
    push   %fs
    push   %gs
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_73b0d
    cmp    $0xffffffd4,%eax
    jbe    jump_73b14
  jump_73b0d:
    xor    %eax,%eax
    jmp    jump_73bc8
  jump_73b14:
    mov    $data_89750,%ebp
    lea    0x3(%esi),%edi
    xor    %ah,%ah
    xor    %ebx,%ebx
    mov    %ah,(%esp)
    and    $0xfffc,%di
  jump_73b27:
    mov    %edi,%eax
    cmp    $0xc,%edi
    jae    jump_73b33
    mov    $0xc,%eax
  jump_73b33:
    cmp    data_89758,%eax
    jbe    jump_73b53
    mov    data_89754,%ecx
    test   %ecx,%ecx
    jne    jump_73b8b
  jump_73b45:
    mov    %ecx,data_89758
    mov    data_89750,%ecx
    jmp    jump_73b8b
  jump_73b53:
    xor    %ecx,%ecx
    jmp    jump_73b45
  jump_73b57:
    mov    %ds,%edx
    mov    %ebp,%eax
    mov    %ecx,data_89754
    and    $0xffff,%edx
    mov    %esi,%eax
    mov    %ecx,%ebx
    call   func_76eb6
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_73bbe
    mov    data_89758,%eax
    mov    0x14(%ecx),%edx
    cmp    %eax,%edx
    jbe    jump_73b88
    mov    %edx,data_89758
  jump_73b88:
    mov    0x8(%ecx),%ecx
  jump_73b8b:
    test   %ecx,%ecx
    jne    jump_73b57
    cmpb   $0x0,(%esp)
    jne    jump_73ba0
    mov    %esi,%eax
    call   func_7744d
    test   %eax,%eax
    jne    jump_73bb5
  jump_73ba0:
    mov    %esi,%eax
    call   func_77608
    test   %eax,%eax
    je     jump_73bbe
    xor    %cl,%cl
    mov    %cl,(%esp)
    jmp    jump_73b27
  jump_73bb5:
    movb   $0x1,(%esp)
    jmp    jump_73b27
  jump_73bbe:
    xor    %ch,%ch
    mov    %ebx,%eax
    mov    %ch,data_1227f5
  jump_73bc8:
    add    $0x4,%esp
    pop    %ebp
    pop    %gs
    pop    %fs
    pop    %es
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_73bd7:
/*----------------------------------------------------------------*/
    push   %ebx
    imul   %edx,%eax
    mov    %eax,%ebx
    call   func_73af4
    test   %eax,%eax
    je     jump_73bed
    xor    %edx,%edx
    call   func_72280
  jump_73bed:
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_73bef:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %ebp
    mov    %eax,%ebx
    mov    data_89750,%ecx
    jmp    jump_73c08
  jump_73bfd:
    cmp    %ebx,%ecx
    ja     jump_73c05
    cmp    %edx,%ebx
    jb     jump_73c0f
  jump_73c05:
    mov    0x8(%ecx),%ecx
  jump_73c08:
    mov    0x8(%ecx),%edx
    test   %edx,%edx
    jne    jump_73bfd
  jump_73c0f:
    mov    $data_89750,%eax
    mov    %ds,%edx
    and    $0xffff,%edx
    mov    %ebx,%eax
    mov    %ecx,%ebx
    call   func_76f5e
    cmp    data_89754,%ecx
    je     jump_73c40
    mov    data_89758,%ebp
    mov    0x14(%ecx),%edx
    cmp    %ebp,%edx
    jbe    jump_73c40
    mov    %edx,data_89758
  jump_73c40:
    xor    %ah,%ah
    mov    %ah,data_1227f5
    pop    %ebp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_73c4d:
/*----------------------------------------------------------------*/
    push   %ecx
    sub    $0x4,%esp
  jump_73c51:
    test   %ebx,%ebx
    jne    jump_73c5c
  jump_73c55:
    xor    %eax,%eax
    add    $0x4,%esp
    pop    %ecx
    ret
  jump_73c5c:
    mov    (%edx),%ch
    mov    (%eax),%cl
    mov    %ch,(%esp)
    cmp    $0x41,%cl
    jb     jump_73c70
    cmp    $0x5a,%cl
    ja     jump_73c70
    add    $0x20,%cl
  jump_73c70:
    mov    (%esp),%ch
    cmp    $0x41,%ch
    jb     jump_73c83
    cmp    $0x5a,%ch
    ja     jump_73c83
    add    $0x20,%ch
    mov    %ch,(%esp)
  jump_73c83:
    mov    (%esp),%ch
    cmp    %ch,%cl
    je     jump_73c9b
    xor    %edx,%edx
    xor    %eax,%eax
    mov    %cl,%dl
    mov    %ch,%al
    sub    %eax,%edx
    mov    %edx,%eax
    add    $0x4,%esp
    pop    %ecx
    ret
  jump_73c9b:
    test   %ch,%ch
    je     jump_73c55
    inc    %eax
    inc    %edx
    dec    %ebx
    jmp    jump_73c51


/*----------------------------------------------------------------*/
func_73ca4:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
  jump_73ca7:
    mov    (%eax),%dl
    inc    %dl
    and    $0xff,%edx
    testb  $0x2,data_860c8(%edx)
    je     jump_73cbd
    inc    %eax
    jmp    jump_73ca7
  jump_73cbd:
    mov    (%eax),%cl
    cmp    $0x2b,%cl
    je     jump_73cc9
    cmp    $0x2d,%cl
    jne    jump_73cca
  jump_73cc9:
    inc    %eax
  jump_73cca:
    xor    %ebx,%ebx
  jump_73ccc:
    mov    (%eax),%dl
    inc    %dl
    and    $0xff,%edx
    testb  $0x20,data_860c8(%edx)
    je     jump_73cee
    imul   $0xa,%ebx,%ebx
    xor    %edx,%edx
    mov    (%eax),%dl
    add    %edx,%ebx
    inc    %eax
    sub    $0x30,%ebx
    jmp    jump_73ccc
  jump_73cee:
    cmp    $0x2d,%cl
    jne    jump_73cf5
    neg    %ebx
  jump_73cf5:
    mov    %ebx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_73cfb:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    %eax,%esi
    mov    %eax,%edi
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    pop    %es
    inc    %ecx
    mov    %ecx,%eax
    call   func_73af4
    mov    %eax,%edi
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_73d39
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %es
  jump_73d39:
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_73d40:
/*----------------------------------------------------------------*/
    jmp    jump_7763d


/*----------------------------------------------------------------*/
func_73d46:
/*----------------------------------------------------------------*/
    push   %edi
    push   %edx
    push   %ecx
    push   %ebx
    mov    %edx,%edi
    mov    %eax,%ebx
    mov    $0x5700,%ax
    int    $0x21
    pop    %ebx
    jb     jump_73d5d
    mov    %dx,(%edi)
    mov    %cx,(%ebx)
  jump_73d5d:
    call   func_766da
    pop    %ecx
    pop    %edx
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_73d7a:
/*----------------------------------------------------------------*/
    push   %ecx
  jump_73d7b:
    test   %ebx,%ebx
    jne    jump_73d83
  jump_73d7f:
    xor    %eax,%eax
    pop    %ecx
    ret
  jump_73d83:
    mov    (%eax),%cl
    mov    (%edx),%ch
    cmp    %ch,%cl
    je     jump_73d99
    xor    %ebx,%ebx
    xor    %eax,%eax
    mov    %cl,%bl
    mov    %ch,%al
    sub    %eax,%ebx
    mov    %ebx,%eax
    pop    %ecx
    ret
  jump_73d99:
    cmpb   $0x0,(%eax)
    je     jump_73d7f
    inc    %eax
    inc    %edx
    dec    %ebx
    jmp    jump_73d7b


/*----------------------------------------------------------------*/
func_73da4:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    ftst
    sub    $0x18,%esp
    fstsw  -0x8(%ebp)
    fstl   -0x18(%ebp)
    mov    -0x7(%ebp),%ah
    sahf
    jne    jump_73dd3
    mov    $0x0,%al
  jump_73dbb:
    fstp   %st(0)
    fstpl  -0x10(%ebp)
    mov    %eax,-0x8(%ebp)
    mov    %edx,-0x4(%ebp)
    call   func_77675
    sub    $0x8,%esp
    jmp    jump_73eb2
  jump_73dd3:
    fld    %st(1)
    frndint
    fcomp  %st(2)
    fstsw  -0x6(%ebp)
    fwait
    mov    -0x5(%ebp),%ah
    jae    jump_73e1e
    mov    $0x1,%al
    sahf
    jne    jump_73dbb
    mov    $0x2,%ax
    mov    %ax,-0x4(%ebp)
    filds  -0x4(%ebp)
    fld    %st(2)
    fprem
    fstsw  -0x4(%ebp)
    fwait
    mov    -0x3(%ebp),%ah
    sahf
    mov    $0x0,%ah
    jp     jump_73e15
    ftst
    fstsw  -0x4(%ebp)
    fwait
    mov    -0x3(%ebp),%ah
    sahf
    mov    $0x0,%ah
    je     jump_73e15
    mov    $0x1,%ah
  jump_73e15:
    mov    %ah,-0x7(%ebp)
    fstp   %st(0)
    fstp   %st(0)
    jmp    jump_73e21
  jump_73e1e:
    sahf
    jne    jump_73e93
  jump_73e21:
    fld    %st(1)
    fstpl  -0x10(%ebp)
    fwait
    mov    -0xa(%ebp),%ax
    and    $0x7ff0,%ax
    sub    $0x3ff0,%ax
    cmp    $0x100,%ax
    jae    jump_73e93
    fld    %st(1)
    fistpl -0x4(%ebp)
    fwait
    mov    -0x2(%ebp),%ax
    or     %ax,%ax
    jne    jump_73e53
    mov    -0x4(%ebp),%ax
    call   func_73ebd
    jmp    jump_73e69
  jump_73e53:
    inc    %ax
    jne    jump_73e93
    or     -0x4(%ebp),%ax
    je     jump_73e93
    neg    %ax
    call   func_73ebd
    fld1
    fdivp  %st,%st(1)
  jump_73e69:
    fstl   -0x8(%ebp)
    fwait
    mov    -0x8(%ebp),%ax
    or     -0x6(%ebp),%ax
    or     -0x4(%ebp),%ax
    jne    jump_73e8f
    mov    -0x2(%ebp),%ax
    shl    %ax
    cmp    $0xffe0,%ax
    jne    jump_73e8f
  jump_73e88:
    mov    $0x2,%al
    jmp    jump_73dbb
  jump_73e8f:
    fstp   %st(1)
    jmp    jump_73eb2
  jump_73e93:
    fldln2
    fmul   %st(2),%st
    fxch   %st(1)
    fabs
    fyl2x
    mov    $0x7,%al
    call   func_77716
    cmp    $0x0,%al
    jne    jump_73e88
    mov    -0x7(%ebp),%ah
    sahf
    jae    jump_73eb0
    fchs
  jump_73eb0:
    fstp   %st(1)
  jump_73eb2:
    fstpl  -0x8(%ebp)
    fldl   -0x8(%ebp)
    fwait
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_73ebd:
/*----------------------------------------------------------------*/
    shr    %ax
    jbe    jump_73ec6
    fmul   %st(0),%st
    jmp    func_73ebd
  jump_73ec6:
    jae    jump_73edb
    fld    %st(0)
  jump_73eca:
    je     jump_73ed7
    fmul   %st(0),%st
    shr    %ax
    jae    jump_73ed5
    fmul   %st,%st(1)
  jump_73ed5:
    jmp    jump_73eca
  jump_73ed7:
    fstp   %st(0)
    jmp    jump_73edf
  jump_73edb:
    fstp   %st(0)
    fld1
  jump_73edf:
    ret


/*----------------------------------------------------------------*/
func_73ee0:
/*----------------------------------------------------------------*/
    fldl   0xc(%esp)
    fldl   0x4(%esp)
    call   func_73da4
    ret    $0x10


/*----------------------------------------------------------------*/
func_73ef0:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %eax,%ebp
  jump_73ef9:
    test   %ebx,%ebx
    jbe    jump_73f0c
    mov    %esi,%eax
    mov    %edi,%edx
    call   *0x10(%esp)
    dec    %ebx
    add    %ecx,%esi
    add    %ecx,%edi
    jmp    jump_73ef9
  jump_73f0c:
    mov    %ebp,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret    $0x4


/*----------------------------------------------------------------*/
func_73f14:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x28,%esp
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebx,%ebp
    mov    %esp,%edx
    mov    %ecx,%ebx
    call   func_755e1
    mov    %eax,0x20(%esp)
    mov    0x5(%ecx),%eax
    mov    0xd(%ecx),%ebx
    mov    %eax,0x24(%esp)
  jump_73f37:
    test   %ebp,%ebp
    jbe    jump_73f4e
    mov    %edi,%edx
    mov    %esi,%eax
    call   *0x24(%esp)
    dec    %ebp
    incl   0x8(%esp)
    add    %ebx,%esi
    add    %ebx,%edi
    jmp    jump_73f37
  jump_73f4e:
    mov    0x20(%esp),%eax
    call   func_7563e
    mov    0xc(%esp),%eax
    add    $0x28,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_73f62:
/*----------------------------------------------------------------*/
    add    %al,%al
    push   $0xfdaa221
    leave
    (bad)
    aas


/*----------------------------------------------------------------*/
func_73f6c:
/*----------------------------------------------------------------*/
    fld    %st(0)
    fmul   %st(0),%st
    fld1
    fsubp  %st,%st(1)
    mov    $0x1,%al
    call   func_72222
    cmp    $0x0,%al
    jne    jump_73f8f
    fxch   %st(1)
    call   func_77789
    fldt   %cs:func_73f62
    fsubp  %st,%st(1)
  jump_73f8f:
    ret


/*----------------------------------------------------------------*/
func_73f90:
/*----------------------------------------------------------------*/
    fldl   0x4(%esp)
    call   func_73f6c
    ret    $0x8


/*----------------------------------------------------------------*/
func_73f9c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x8,%esp
    mov    %eax,%edx
    test   %eax,%eax
    jne    jump_73faa
    lea    0x1(%eax),%edx
  jump_73faa:
    mov    %edx,%eax
    call   func_73af4
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_73fdf
    mov    data_122814,%eax
    mov    %eax,(%esp)
    test   %eax,%eax
    je     jump_73fcc
    mov    %edx,%eax
    call   *(%esp)
    test   %eax,%eax
    jne    jump_73faa
  jump_73fcc:
    mov    data_122810,%eax
    mov    %eax,0x4(%esp)
    test   %eax,%eax
    je     jump_73fdf
    call   *0x4(%esp)
    jmp    jump_73faa
  jump_73fdf:
    mov    %ebx,%eax
    add    $0x8,%esp
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_73fe7:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
  jump_73feb:
    mov    (%eax),%dl
    test   %dl,%dl
    je     jump_74001
    sub    $0x61,%dl
    cmp    $0x19,%dl
    ja     jump_73ffe
    add    $0x41,%dl
    mov    %dl,(%eax)
  jump_73ffe:
    inc    %eax
    jmp    jump_73feb
  jump_74001:
    mov    %ebx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_74006:
/*----------------------------------------------------------------*/
    push   %edx
    mov    data_89750,%edx
    call   func_74014
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_74014:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %ebp
    mov    %eax,%ebx
    test   %edx,%edx
    jne    jump_74026
    mov    $0x1,%eax
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret
  jump_74026:
    mov    (%eax),%eax
    test   %eax,%eax
    jne    jump_74031
    lea    0x2c(%edx),%eax
    jmp    jump_74061
  jump_74031:
    mov    data_89750,%edx
  jump_74037:
    mov    0x8(%edx),%ecx
    test   %ecx,%ecx
    je     jump_7404b
    cmp    %eax,%edx
    ja     jump_74046
    cmp    %ecx,%eax
    jb     jump_7404b
  jump_74046:
    mov    0x8(%edx),%edx
    jmp    jump_74037
  jump_7404b:
    mov    (%eax),%ecx
    and    $0xfe,%cl
    add    %eax,%ecx
    cmp    %eax,%ecx
    ja     jump_7405f
    mov    $0x3,%eax
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret
  jump_7405f:
    mov    %ecx,%eax
  jump_74061:
    cmpl   $0xffffffff,(%eax)
    jne    jump_7408b
    mov    0x8(%edx),%ebp
    test   %ebp,%ebp
    jne    jump_74084
    movw   $0x0,0x4(%ebx)
    mov    %ebp,0xa(%ebx)
    mov    %ebp,0x6(%ebx)
    mov    $0x4,%eax
    mov    %ebp,(%ebx)
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret
  jump_74084:
    mov    %ebp,%edx
    lea    0x2c(%ebp),%eax
    jmp    jump_74061
  jump_7408b:
    movl   $0x1,0xa(%ebx)
    mov    %ds,0x4(%ebx)
    mov    %eax,(%ebx)
    mov    (%eax),%edx
    and    $0xfe,%dl
    mov    %edx,0x6(%ebx)
    testb  $0x1,(%eax)
    je     jump_740ab
    movl   $0x0,0xa(%ebx)
  jump_740ab:
    xor    %eax,%eax
    pop    %ebp
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_740b2:
/*----------------------------------------------------------------*/
    data16 mov %ss,data_8975c
    ret


/*----------------------------------------------------------------*/
func_740ba:
/*----------------------------------------------------------------*/
    xchg   %eax,0x4(%esp)
    call   func_740cd
    mov    0x4(%esp),%eax
    ret    $0x4


/*----------------------------------------------------------------*/
func_740cd:
/*----------------------------------------------------------------*/
    cmp    %esp,%eax
    jae    jump_740de
    sub    %esp,%eax
    neg    %eax
    cmp    data_897d8,%eax
    jbe    jump_740de
    ret
  jump_740de:
    mov    %ss,%ax
    cmp    data_8975c,%ax
    je     func_740eb
    ret


/*----------------------------------------------------------------*/
func_740eb:
/*----------------------------------------------------------------*/
    mov    $data_8975e,%eax
    mov    $0x1,%edx
    call   func_777af
    test   %eax,%eax
    jge    jump_74100
    neg    %eax
  jump_74100:
    ret


/*----------------------------------------------------------------*/
func_74101:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%esi
    mov    %ebx,%ecx
    cmp    %eax,%edx
    je     jump_74149
    jae    jump_74135
    add    %ebx,%edx
    cmp    %eax,%edx
    jbe    jump_74135
    lea    (%eax,%ebx,1),%edi
    lea    -0x1(%edx),%esi
    dec    %edi
    mov    %ds,%edx
    push   %es
    mov    %edx,%es
    std
    dec    %esi
    dec    %edi
    shr    %ecx
    rep movsw %ds:(%esi),%es:(%edi)
    adc    %ecx,%ecx
    inc    %esi
    inc    %edi
    data16 rep movsb %ds:(%esi),%es:(%edi)
    pop    %es
    cld
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_74135:
    mov    %ds,%edx
    mov    %eax,%edi
    push   %es
    mov    %edx,%es
    push   %ecx
    shr    $0x2,%ecx
    rep movsl %ds:(%esi),%es:(%edi)
    pop    %ecx
    and    $0x3,%ecx
    rep movsb %ds:(%esi),%es:(%edi)
    pop    %es
  jump_74149:
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7414d:
/*----------------------------------------------------------------*/
    push   %ecx
    sub    $0xc,%esp
    mov    %eax,%ecx
    mov    %esp,%eax
    call   func_777cc
    mov    %ecx,%eax
    mov    %esp,%ecx
    call   func_74168
    add    $0xc,%esp
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_74168:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %ebx,%ebp
    mov    %ecx,%ebx
    mov    %eax,%esi
    mov    %edx,%edi
    mov    %ebp,%edx
    call   func_777f4
    mov    0x0(%ebp),%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_74181:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ebx,%ecx
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %es
    mov    %edi,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_741a6:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    data_89a9c,%esi
    test   %esi,%esi
    je     jump_741f7
    test   %eax,%eax
    je     jump_741f7
    mov    %eax,%edi
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    pop    %es
    mov    %ecx,%edi
    jmp    jump_741f1
  jump_741d2:
    mov    %ecx,%eax
    mov    %ebp,%edx
    mov    %edi,%ebx
    call   func_73c4d
    test   %eax,%eax
    jne    jump_741ee
    cmpb   $0x3d,(%ecx,%edi,1)
    jne    jump_741ee
    lea    0x1(%edi),%eax
    add    %ecx,%eax
    jmp    jump_741f9
  jump_741ee:
    add    $0x4,%esi
  jump_741f1:
    mov    (%esi),%ecx
    test   %ecx,%ecx
    jne    jump_741d2
  jump_741f7:
    xor    %eax,%eax
  jump_741f9:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_74200:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ebx
    mov    $0x0,%al
    mov    $0x44,%ah
    int    $0x21
    rcl    %edx
    ror    %edx
    test   $0x80,%dl
    setne  %al
    and    $0xff,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7421e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    $0x100,%ebx
    test   %edx,%edx
    jne    jump_7422e
    mov    $0x400,%ebx
  jump_7422e:
    mov    $0x1000,%ecx
    call   func_77bd2
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7423b:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%edi
    mov    %edx,%esi
    call   func_77c3a
    mov    $0x63df,%eax
    mov    data_89aec,%ebx
    mov    (%edi),%edi
    mov    %esi,%ecx
    mov    %edi,%edx
    call   func_77f0a
    mov    %esi,%eax
    call   func_78190
    test   %eax,%eax
    je     jump_74285
    mov    $0x63df,%eax
    mov    data_89aec,%ebx
    mov    data_89af0,%edx
    mov    %esi,%ecx
    sub    %edx,%ebx
    mov    %edi,%edx
    call   func_77f0a
  jump_74285:
    mov    %esi,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7428c:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_1227a8,%edx
    call   func_7423b
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_74299:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %edx,%edi
    mov    $0xa,%ecx
    mov    %esp,%esi
    cltd
    idiv   %ecx
    mov    %eax,(%esi)
    mov    %edx,0x4(%esi)
    mov    (%esp),%dl
    lea    (%ebx,%edi,1),%eax
    add    $0x30,%dl
    mov    %dl,(%eax)
    mov    0x4(%esp),%bl
    add    $0x30,%bl
    mov    %bl,0x1(%eax)
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_742cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    mov    0x18(%eax),%eax
    mov    data_860b0(%eax),%dl
    mov    %dl,(%edi)
    mov    data_860b7(%eax),%dl
    mov    %dl,0x1(%edi)
    mov    data_860be(%eax),%al
    movb   $0x20,0x3(%edi)
    mov    %al,0x2(%edi)
    mov    0x10(%ecx),%eax
    mov    data_8608c(%eax),%dl
    mov    %dl,0x4(%edi)
    mov    data_86098(%eax),%dl
    mov    %dl,0x5(%edi)
    mov    data_860a4(%eax),%al
    movb   $0x20,0x7(%edi)
    mov    %edi,%ebx
    mov    %al,0x6(%edi)
    mov    $0x8,%edx
    mov    0xc(%ecx),%eax
    call   func_74299
    cmpb   $0x30,0x8(%edi)
    jne    jump_74333
    movb   $0x20,0x8(%edi)
  jump_74333:
    mov    $0xb,%edx
    movb   $0x20,0xa(%edi)
    mov    %edi,%ebx
    mov    0x8(%ecx),%eax
    call   func_74299
    mov    $0xe,%edx
    movb   $0x3a,0xd(%edi)
    mov    %edi,%ebx
    mov    0x4(%ecx),%eax
    call   func_74299
    mov    $0x11,%edx
    movb   $0x3a,0x10(%edi)
    mov    %edi,%ebx
    mov    (%ecx),%eax
    call   func_74299
    movb   $0x20,0x13(%edi)
    mov    %esp,%esi
    mov    0x14(%ecx),%eax
    mov    $0x64,%ecx
    mov    %edi,%ebx
    cltd
    idiv   %ecx
    mov    %eax,(%esi)
    mov    %edx,0x4(%esi)
    mov    (%esp),%eax
    mov    $0x14,%edx
    add    $0x13,%eax
    call   func_74299
    mov    0x4(%esp),%eax
    mov    $0x16,%edx
    mov    %edi,%ebx
    call   func_74299
    movb   $0xa,0x18(%edi)
    mov    %edi,%eax
    movb   $0x0,0x19(%edi)
    add    $0x8,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_743d3:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_1227cc,%edx
    call   func_742cc
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_743e0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %eax
  jump_743e2:
    mov    (%edx),%cl
    mov    %cl,(%eax)
    cmp    $0x0,%cl
    je     jump_743fc
    mov    0x1(%edx),%cl
    add    $0x2,%edx
    mov    %cl,0x1(%eax)
    add    $0x2,%eax
    cmp    $0x0,%cl
    jne    jump_743e2
  jump_743fc:
    pop    %eax
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_743ff:
/*----------------------------------------------------------------*/
    cmp    $0x61,%eax
    jl     jump_7440c
    cmp    $0x7a,%eax
    jg     jump_7440c
    sub    $0x20,%eax
  jump_7440c:
    ret


/*----------------------------------------------------------------*/
func_7440d:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edi
    mov    %eax,%edi
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    pop    %es
    mov    %ecx,%eax
    pop    %edi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_74426:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    mov    0x10(%eax),%eax
    call   func_72e36
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_74452
    mov    0x4(%edx),%ecx
    test   %ecx,%ecx
    je     jump_74452
    testb  $0x10,0xd(%edx)
    je     jump_7444e
    lea    (%ecx,%ebx,1),%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_7444e:
    mov    %ebx,%eax
    sub    %ecx,%eax
  jump_74452:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_74456:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    andb   $0xef,0xc(%edx)
    cmp    0x4(%edx),%eax
    jg     jump_74482
    mov    0x8(%edx),%ebx
    mov    (%edx),%ecx
    sub    %ecx,%ebx
    cmp    %ebx,%eax
    jl     jump_74482
    mov    0x4(%edx),%edi
    lea    (%ecx,%eax,1),%esi
    sub    %eax,%edi
    mov    %esi,(%edx)
    xor    %eax,%eax
    mov    %edi,0x4(%edx)
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_74482:
    mov    0x8(%edx),%eax
    movl   $0x0,0x4(%edx)
    mov    %eax,(%edx)
    mov    $0x1,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_74498:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %eax,%ecx
    mov    %edx,%esi
    testb  $0x6,0xc(%eax)
    je     jump_74500
    testb  $0x10,0xd(%ecx)
    je     jump_744d1
    mov    %ecx,%eax
    call   func_76297
    test   %eax,%eax
    je     jump_744e5
    test   %ebx,%ebx
    jne    jump_744c8
    test   %esi,%esi
    jge    jump_744c8
  jump_744be:
    mov    $0x9,%eax
    call   func_76588
  jump_744c8:
    mov    $0xffffffff,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_744d1:
    cmp    $0x1,%ebx
    jne    jump_744d9
    sub    0x4(%ecx),%esi
  jump_744d9:
    mov    0x8(%ecx),%eax
    movl   $0x0,0x4(%ecx)
    mov    %eax,(%ecx)
  jump_744e5:
    andb   $0xeb,0xc(%ecx)
    mov    %esi,%edx
    mov    0x10(%ecx),%eax
    call   func_72df0
    cmp    $0xffffffff,%eax
    jne    jump_7458e
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_74500:
    cmp    $0x1,%ebx
    jb     jump_7450e
    jbe    jump_74514
    cmp    $0x2,%ebx
    je     jump_7456a
    jmp    jump_744be
  jump_7450e:
    test   %ebx,%ebx
    je     jump_74539
    jmp    jump_744be
  jump_74514:
    mov    %edx,%eax
    mov    %ecx,%edx
    mov    0x4(%ecx),%edi
    call   func_74456
    test   %eax,%eax
    je     jump_7458e
    mov    %esi,%edx
    mov    0x10(%ecx),%eax
    sub    %edi,%edx
    call   func_72df0
    cmp    $0xffffffff,%eax
    jne    jump_7458e
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_74539:
    mov    0x10(%ecx),%eax
    call   func_72e36
    mov    0x4(%ecx),%edx
    mov    %esi,%edi
    sub    %edx,%eax
    sub    %eax,%edi
    mov    %ecx,%edx
    mov    %edi,%eax
    call   func_74456
    test   %eax,%eax
    je     jump_7458e
    mov    %esi,%edx
    mov    0x10(%ecx),%eax
    call   func_72df0
    cmp    $0xffffffff,%eax
    jne    jump_7458e
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_7456a:
    mov    0x8(%ecx),%eax
    mov    0xc(%ecx),%dl
    mov    %eax,(%ecx)
    and    $0xef,%dl
    mov    0x10(%ecx),%eax
    mov    %dl,0xc(%ecx)
    mov    %esi,%edx
    movl   $0x0,0x4(%ecx)
    call   func_72df0
    cmp    $0xffffffff,%eax
    je     jump_74590
  jump_7458e:
    xor    %eax,%eax
  jump_74590:
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_745ae:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    push   %eax
    push   %edx
    mov    %ecx,%ebp
    testb  $0x1,0xc(%ecx)
    jne    jump_745d8
    mov    $0x4,%eax
    call   func_76588
    mov    0xc(%ecx),%dh
    or     $0x20,%dh
    xor    %eax,%eax
    mov    %dh,0xc(%ecx)
    jmp    jump_74771
  jump_745d8:
    imul   %edx,%ebx
    test   %ebx,%ebx
    jne    jump_745e6
    mov    %ebx,%eax
    jmp    jump_74771
  jump_745e6:
    cmpl   $0x0,0x8(%ecx)
    jne    jump_745f3
    mov    %ebp,%eax
    call   func_78473
  jump_745f3:
    xor    %esi,%esi
    mov    0xc(%ebp),%dl
    mov    %esi,0xc(%esp)
    test   $0x40,%dl
    je     jump_746f2
    mov    %ebx,0x8(%esp)
  jump_74609:
    mov    0x4(%ebp),%edx
    test   %edx,%edx
    je     jump_74664
    mov    0x8(%esp),%ebx
    cmp    %ebx,%edx
    jbe    jump_7461a
    mov    %ebx,%edx
  jump_7461a:
    mov    0x4(%esp),%edi
    mov    %edx,%ecx
    mov    0x0(%ebp),%esi
    mov    0xc(%esp),%ebx
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %es
    mov    0x8(%esp),%eax
    mov    0x0(%ebp),%ecx
    lea    (%edi,%edx,1),%esi
    add    %edx,%ebx
    mov    %esi,0x4(%esp)
    mov    %ebx,0xc(%esp)
    mov    0x4(%ebp),%edi
    add    %edx,%ecx
    sub    %edx,%eax
    sub    %edx,%edi
    mov    %ecx,0x0(%ebp)
    mov    %eax,0x8(%esp)
    mov    %edi,0x4(%ebp)
  jump_74664:
    mov    0x8(%esp),%ecx
    test   %ecx,%ecx
    je     jump_74766
    cmp    0x14(%ebp),%ecx
    jae    jump_7467b
    testb  $0x4,0xd(%ebp)
    je     jump_746de
  jump_7467b:
    mov    0xd(%ebp),%cl
    mov    0x8(%esp),%ebx
    test   $0x4,%cl
    jne    jump_74694
    cmp    $0x200,%ebx
    jbe    jump_74694
    and    $0xfe,%bh
    xor    %bl,%bl
  jump_74694:
    mov    0x4(%esp),%edx
    mov    0x10(%ebp),%eax
    call   func_784ea
    cmp    $0xffffffff,%eax
    jne    jump_746ae
    orb    $0x20,0xc(%ebp)
    jmp    jump_74766
  jump_746ae:
    test   %eax,%eax
    jne    jump_746bb
  jump_746b2:
    orb    $0x10,0xc(%ebp)
    jmp    jump_74766
  jump_746bb:
    mov    0x4(%esp),%edx
    mov    0x8(%esp),%ebx
    mov    0xc(%esp),%ecx
    add    %eax,%edx
    sub    %eax,%ebx
    add    %eax,%ecx
    mov    %edx,0x4(%esp)
    mov    %ebx,0x8(%esp)
    mov    %ecx,0xc(%esp)
    jmp    jump_74609
  jump_746de:
    mov    %ebp,%eax
    call   func_767c6
    test   %eax,%eax
    je     jump_74766
    jmp    jump_74609
  jump_746f2:
    mov    0x4(%esp),%edx
    add    %edx,%ebx
  jump_746f8:
    cmpl   $0x0,0x4(%ebp)
    jne    jump_74709
    mov    %ebp,%eax
    call   func_767c6
    test   %eax,%eax
    je     jump_74766
  jump_74709:
    mov    0x4(%ebp),%ecx
    mov    0x0(%ebp),%eax
    dec    %ecx
    lea    0x1(%eax),%esi
    mov    %ecx,0x4(%ebp)
    mov    %esi,0x0(%ebp)
    mov    (%eax),%al
    and    $0xff,%eax
    cmp    $0xd,%eax
    jne    jump_7474d
    cmpl   $0x0,0x4(%ebp)
    jne    jump_74736
    mov    %ebp,%eax
    call   func_767c6
    test   %eax,%eax
    je     jump_74766
  jump_74736:
    mov    0x4(%ebp),%edi
    mov    0x0(%ebp),%eax
    dec    %edi
    lea    0x1(%eax),%esi
    mov    %edi,0x4(%ebp)
    mov    %esi,0x0(%ebp)
    mov    (%eax),%al
    and    $0xff,%eax
  jump_7474d:
    cmp    $0x1a,%eax
    je     jump_746b2
    mov    %al,(%edx)
    mov    0xc(%esp),%eax
    inc    %eax
    inc    %edx
    mov    %eax,0xc(%esp)
    cmp    %ebx,%edx
    jne    jump_746f8
  jump_74766:
    mov    0xc(%esp),%eax
    mov    (%esp),%esi
    xor    %edx,%edx
    div    %esi
  jump_74771:
    add    $0x10,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_74778:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    mov    %ds,%edx
    call   func_78509
    test   %eax,%eax
    jne    jump_74792
    mov    %ecx,%edx
    mov    %ebx,%eax
    call   func_777aa
  jump_74792:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_74795:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    sub    $0x4c,%esp
    mov    %ebx,%esi
    mov    %ecx,0x44(%esp)
    xor    %bl,%bl
    mov    %eax,0x28(%esp)
    mov    %bl,0x48(%esp)
    mov    %bl,0x3c(%esp)
    xor    %ebx,%ebx
    mov    %edx,%edi
    mov    %ebx,0x38(%esp)
    mov    $0x4,%ebp
    jmp    jump_74818
  jump_747bf:
    lea    0x28(%esp),%ebx
    mov    %esi,%edx
    call   func_74a16
    mov    %eax,%edi
    mov    (%eax),%al
    inc    %edi
    mov    %al,0x3d(%esp)
    test   %al,%al
    je     jump_74a0a
    cmp    $0x6e,%al
    jne    jump_748ba
    mov    0x3c(%esp),%bl
    test   $0x20,%bl
    je     jump_74845
    test   $0x80,%bl
    je     jump_74804
    mov    (%esi),%ecx
    add    $0x8,%ecx
    mov    %ecx,(%esi)
    les    -0x8(%ecx),%edx
  jump_747fb:
    mov    0x38(%esp),%eax
    mov    %eax,%es:(%edx)
    jmp    jump_74818
  jump_74804:
    test   $0x40,%bl
    je     jump_7483a
    mov    (%esi),%ebx
    add    %ebp,%ebx
    mov    %ebx,(%esi)
    mov    -0x4(%ebx),%edx
  jump_74812:
    mov    0x38(%esp),%eax
    mov    %eax,(%edx)
  jump_74818:
    mov    (%edi),%cl
    test   %cl,%cl
    je     jump_74a0a
    lea    0x1(%edi),%eax
    cmp    $0x25,%cl
    je     jump_747bf
    mov    %eax,%edi
    xor    %edx,%edx
    lea    0x28(%esp),%eax
    mov    %cl,%dl
    call   *0x44(%esp)
    jmp    jump_74818
  jump_7483a:
    mov    (%esi),%edx
    add    %ebp,%edx
    mov    %edx,(%esi)
    mov    -0x4(%edx),%edx
    jmp    jump_74812
  jump_74845:
    test   $0x10,%bl
    je     jump_74885
    test   $0x80,%bl
    je     jump_74863
    mov    (%esi),%eax
    add    $0x8,%eax
    mov    %eax,(%esi)
    les    -0x8(%eax),%edx
    mov    0x38(%esp),%eax
    mov    %ax,%es:(%edx)
    jmp    jump_74818
  jump_74863:
    test   $0x40,%bl
    je     jump_7487a
    mov    (%esi),%ecx
    add    %ebp,%ecx
    mov    %ecx,(%esi)
    mov    -0x4(%ecx),%edx
  jump_74871:
    mov    0x38(%esp),%eax
    mov    %ax,(%edx)
    jmp    jump_74818
  jump_7487a:
    mov    (%esi),%ebx
    add    %ebp,%ebx
    mov    %ebx,(%esi)
    mov    -0x4(%ebx),%edx
    jmp    jump_74871
  jump_74885:
    test   $0x80,%bl
    je     jump_74899
    mov    (%esi),%edx
    add    $0x8,%edx
    mov    %edx,(%esi)
    les    -0x8(%edx),%edx
    jmp    jump_747fb
  jump_74899:
    test   $0x40,%bl
    je     jump_748ac
    mov    (%esi),%eax
    add    %ebp,%eax
    mov    %eax,(%esi)
    mov    -0x4(%eax),%edx
    jmp    jump_74812
  jump_748ac:
    mov    (%esi),%ecx
    add    %ebp,%ecx
    mov    %ecx,(%esi)
    mov    -0x4(%ecx),%edx
    jmp    jump_74812
  jump_748ba:
    mov    %esp,%eax
    lea    0x28(%esp),%ebx
    lea    0x48(%esp),%ecx
    mov    %esi,%edx
    call   func_74d2e
    mov    %edx,%es
    mov    0x3c(%esp),%dl
    mov    %eax,%ebx
    test   $0x8,%dl
    jne    jump_748fc
    cmpb   $0x20,0x3e(%esp)
    jne    jump_748fc
  jump_748df:
    mov    0x2c(%esp),%eax
    dec    %eax
    mov    %eax,0x2c(%esp)
    test   %eax,%eax
    jl     jump_748fc
    xor    %edx,%edx
    lea    0x28(%esp),%eax
    mov    0x3e(%esp),%dl
    call   *0x44(%esp)
    jmp    jump_748df
  jump_748fc:
    lea    0x3f(%esp),%ecx
  jump_74900:
    mov    (%ecx),%al
    test   %al,%al
    je     jump_74915
    xor    %edx,%edx
    mov    %al,%dl
    lea    0x28(%esp),%eax
    inc    %ecx
    call   *0x44(%esp)
    jmp    jump_74900
  jump_74915:
    mov    0x34(%esp),%eax
    lea    -0x1(%eax),%ecx
    mov    %ecx,0x34(%esp)
    test   %eax,%eax
    je     jump_74933
    lea    0x28(%esp),%eax
    mov    $0x30,%edx
    call   *0x44(%esp)
    jmp    jump_74915
  jump_74933:
    testb  $0x8,0x3c(%esp)
    jne    jump_7495e
    cmpb   $0x20,0x3e(%esp)
    je     jump_7495e
  jump_74941:
    mov    0x2c(%esp),%eax
    dec    %eax
    mov    %eax,0x2c(%esp)
    test   %eax,%eax
    jl     jump_7495e
    xor    %edx,%edx
    lea    0x28(%esp),%eax
    mov    0x3e(%esp),%dl
    call   *0x44(%esp)
    jmp    jump_74941
  jump_7495e:
    mov    0x3d(%esp),%dh
    cmp    $0x73,%dh
    je     jump_7496c
    cmp    $0x53,%dh
    jne    jump_749b3
  jump_7496c:
    testb  $0x20,0x3c(%esp)
    je     jump_74994
  jump_74973:
    mov    0x30(%esp),%eax
    lea    -0x1(%eax),%ecx
    mov    %ecx,0x30(%esp)
    test   %eax,%eax
    je     jump_749d2
    xor    %edx,%edx
    lea    0x28(%esp),%eax
    mov    %es:(%ebx),%dl
    call   *0x44(%esp)
    add    $0x2,%ebx
    jmp    jump_74973
  jump_74994:
    mov    0x30(%esp),%eax
    lea    -0x1(%eax),%edx
    mov    %edx,0x30(%esp)
    test   %eax,%eax
    je     jump_749d2
    xor    %edx,%edx
    lea    0x28(%esp),%eax
    mov    %es:(%ebx),%dl
    call   *0x44(%esp)
    inc    %ebx
    jmp    jump_74994
  jump_749b3:
    mov    0x30(%esp),%eax
    lea    -0x1(%eax),%ecx
    mov    %ecx,0x30(%esp)
    test   %eax,%eax
    je     jump_749d2
    xor    %edx,%edx
    lea    0x28(%esp),%eax
    mov    %es:(%ebx),%dl
    call   *0x44(%esp)
    inc    %ebx
    jmp    jump_749b3
  jump_749d2:
    testb  $0x8,0x3c(%esp)
    je     jump_74818
    cmpl   $0x0,0x2c(%esp)
    jle    jump_74818
  jump_749e8:
    mov    0x2c(%esp),%eax
    lea    -0x1(%eax),%edx
    mov    %edx,0x2c(%esp)
    test   %eax,%eax
    je     jump_74818
    lea    0x28(%esp),%eax
    mov    $0x20,%edx
    call   *0x44(%esp)
    jmp    jump_749e8
  jump_74a0a:
    mov    0x38(%esp),%eax
    add    $0x4c,%esp
    pop    %ebp
    pop    %es
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_74a16:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%esi
    movb   $0x0,0x17(%ebx)
    mov    %ebx,%edx
    movb   $0x20,0x16(%ebx)
    call   func_74b49
    movl   $0x0,0x4(%ebx)
    mov    (%eax),%cl
    mov    %eax,%edx
    cmp    $0x30,%cl
    jb     jump_74a5e
    cmp    $0x39,%cl
    ja     jump_74a5e
  jump_74a3f:
    imul   $0xa,0x4(%ebx),%ecx
    xor    %edx,%edx
    mov    (%eax),%dl
    sub    $0x30,%edx
    add    %edx,%ecx
    inc    %eax
    mov    %ecx,0x4(%ebx)
    mov    (%eax),%cl
    cmp    $0x30,%cl
    jb     jump_74a85
    cmp    $0x39,%cl
    jbe    jump_74a3f
    jmp    jump_74a85
  jump_74a5e:
    cmpb   $0x2a,(%eax)
    jne    jump_74a85
    mov    (%esi),%edx
    add    $0x4,%edx
    mov    %edx,(%esi)
    mov    -0x4(%edx),%edx
    mov    %edx,0x4(%ebx)
    test   %edx,%edx
    jge    jump_74a84
    mov    %edx,%edi
    mov    0x14(%ebx),%dh
    neg    %edi
    or     $0x8,%dh
    mov    %edi,0x4(%ebx)
    mov    %dh,0x14(%ebx)
  jump_74a84:
    inc    %eax
  jump_74a85:
    movl   $0xffffffff,0x8(%ebx)
    cmpb   $0x2e,(%eax)
    jne    jump_74ad8
    inc    %eax
    movl   $0x0,0x8(%ebx)
    cmpb   $0x2a,(%eax)
    jne    jump_74ab9
    mov    (%esi),%edx
    add    $0x4,%edx
    mov    %edx,(%esi)
    mov    -0x4(%edx),%edx
    mov    %edx,0x8(%ebx)
    test   %edx,%edx
    jge    jump_74ab6
    movl   $0xffffffff,0x8(%ebx)
  jump_74ab6:
    inc    %eax
    jmp    jump_74ad8
  jump_74ab9:
    mov    (%eax),%cl
    cmp    $0x30,%cl
    jb     jump_74ad8
    cmp    $0x39,%cl
    ja     jump_74ad8
    imul   $0xa,0x8(%ebx),%ecx
    xor    %edx,%edx
    mov    (%eax),%dl
    sub    $0x30,%edx
    add    %edx,%ecx
    inc    %eax
    mov    %ecx,0x8(%ebx)
    jmp    jump_74ab9
  jump_74ad8:
    mov    (%eax),%cl
    lea    0x1(%eax),%edx
    cmp    $0x4e,%cl
    jb     jump_74afd
    jbe    jump_74b3a
    cmp    $0x6c,%cl
    jb     jump_74af4
    jbe    jump_74b0d
    cmp    $0x77,%cl
    je     jump_74b0d
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_74af4:
    cmp    $0x68,%cl
    je     jump_74b1b
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_74afd:
    cmp    $0x46,%cl
    jb     jump_74b45
    jbe    jump_74b34
    cmp    $0x4c,%cl
    je     jump_74b2a
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_74b0d:
    mov    0x14(%ebx),%dl
    or     $0x20,%dl
    inc    %eax
    mov    %dl,0x14(%ebx)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_74b1b:
    mov    0x14(%ebx),%cl
    or     $0x10,%cl
    mov    %edx,%eax
    mov    %cl,0x14(%ebx)
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_74b2a:
    orb    $0x40,0x14(%ebx)
  jump_74b2e:
    mov    %edx,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_74b34:
    orb    $0x80,0x14(%ebx)
    jmp    jump_74b2e
  jump_74b3a:
    mov    0x14(%ebx),%ch
    or     $0x40,%ch
    mov    %edx,%eax
    mov    %ch,0x14(%ebx)
  jump_74b45:
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_74b49:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    movb   $0x0,0x14(%edx)
  jump_74b4f:
    mov    (%eax),%bl
    cmp    $0x2d,%bl
    jne    jump_74b5c
    orb    $0x8,0x14(%edx)
    jmp    jump_74b9e
  jump_74b5c:
    cmp    $0x23,%bl
    jne    jump_74b67
    orb    $0x1,0x14(%edx)
    jmp    jump_74b9e
  jump_74b67:
    cmp    $0x2b,%bl
    jne    jump_74b7f
    mov    0x14(%edx),%ch
    or     $0x4,%ch
    mov    %ch,%bl
    mov    %ch,0x14(%edx)
    and    $0xfd,%bl
    mov    %bl,0x14(%edx)
    jmp    jump_74b9e
  jump_74b7f:
    cmp    $0x20,%bl
    jne    jump_74b96
    mov    0x14(%edx),%bh
    test   $0x4,%bh
    jne    jump_74b9e
    mov    %bh,%cl
    or     $0x2,%cl
    mov    %cl,0x14(%edx)
    jmp    jump_74b9e
  jump_74b96:
    cmp    $0x30,%bl
    jne    jump_74ba1
    mov    %bl,0x16(%edx)
  jump_74b9e:
    inc    %eax
    jmp    jump_74b4f
  jump_74ba1:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_74ba4:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    mov    %edx,%esi
    mov    %ebx,%edi
    mov    %eax,%edx
    xor    %eax,%eax
  jump_74bb0:
    mov    %esi,%es
    mov    %edx,%ebx
    mov    %es:(%ebx),%cl
    inc    %edx
    test   %cl,%cl
    je     jump_74bc3
    cmp    %edi,%eax
    je     jump_74bc3
    inc    %eax
    jmp    jump_74bb0
  jump_74bc3:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_74bc8:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    mov    %edx,%ecx
    mov    %ebx,%esi
    mov    %eax,%edx
    xor    %eax,%eax
  jump_74bd4:
    mov    %ecx,%es
    mov    %edx,%ebx
    mov    %es:(%ebx),%di
    add    $0x2,%edx
    test   %di,%di
    je     jump_74bc3
    cmp    %esi,%eax
    je     jump_74bc3
    inc    %eax
    jmp    jump_74bd4


/*----------------------------------------------------------------*/
func_74beb:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %edx,%ebp
    mov    %ebx,(%esp)
    mov    $0x10,%ebx
    mov    %ebp,%edi
    call   func_7859e
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    sub    %ecx,%ecx
    dec    %ecx
    xor    %eax,%eax
    repnz scas %es:(%edi),%al
    not    %ecx
    dec    %ecx
    pop    %es
    mov    (%esp),%eax
    mov    %ecx,%esi
    mov    %ebp,%edi
    dec    %eax
    lea    (%ecx,%ebp,1),%edx
    lea    (%eax,%ebp,1),%ebx
    jmp    jump_74c2b
  jump_74c23:
    dec    %edx
    dec    %esi
    mov    (%edx),%cl
    dec    %eax
    mov    %cl,(%ebx)
    dec    %ebx
  jump_74c2b:
    cmp    %edi,%edx
    jne    jump_74c23
    lea    (%eax,%ebp,1),%edx
  jump_74c32:
    test   %eax,%eax
    jl     jump_74c3d
    dec    %eax
    movb   $0x30,(%edx)
    dec    %edx
    jmp    jump_74c32
  jump_74c3d:
    add    (%esp),%ebp
    movb   $0x0,0x0(%ebp)
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_74c4c:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    %ebx,%esi
    mov    %edx,(%esp)
    test   %edx,%edx
    jge    jump_74c68
    neg    %edx
    lea    0x1(%eax),%ecx
    movb   $0x2d,(%eax)
    mov    %edx,(%esp)
  jump_74c68:
    cmpl   $0xffffffff,0x8(%esi)
    jne    jump_74c75
    movl   $0x4,0x8(%esi)
  jump_74c75:
    mov    $0xa,%ebx
    xor    %eax,%eax
    mov    %ecx,%edx
    mov    0x2(%esp),%ax
    call   func_7859e
    mov    %ecx,%ebx
  jump_74c8a:
    mov    (%ecx),%ah
    lea    0x1(%ecx),%edx
    test   %ah,%ah
    je     jump_74c97
    mov    %edx,%ecx
    jmp    jump_74c8a
  jump_74c97:
    cmpl   $0x0,0x8(%esi)
    je     jump_74cc9
    movb   $0x2e,(%ecx)
    xor    %eax,%eax
    mov    %edx,%ecx
    jmp    jump_74cc1
  jump_74ca6:
    xor    %edx,%edx
    mov    %dx,0x2(%esp)
    mov    (%esp),%edi
    imul   $0xa,%edi,%edx
    mov    %edx,(%esp)
    mov    0x2(%esp),%dl
    add    $0x30,%dl
    inc    %eax
    mov    %dl,(%ecx)
    inc    %ecx
  jump_74cc1:
    cmp    0x8(%esi),%eax
    jl     jump_74ca6
    movb   $0x0,(%ecx)
  jump_74cc9:
    testb  $0x80,0x1(%esp)
    je     jump_74d20
  jump_74cd0:
    cmp    %ebx,%ecx
    jne    jump_74d06
    lea    0x1(%ebx),%ecx
    movb   $0x31,(%ebx)
  jump_74cda:
    mov    (%ecx),%dl
    lea    0x1(%ecx),%eax
    cmp    $0x30,%dl
    jne    jump_74ce8
    mov    %eax,%ecx
    jmp    jump_74cda
  jump_74ce8:
    cmp    $0x2e,%dl
    jne    jump_74cfd
    movb   $0x30,(%ecx)
    lea    0x1(%eax),%ecx
    mov    %dl,(%eax)
  jump_74cf5:
    cmpb   $0x30,(%ecx)
    jne    jump_74cfd
    inc    %ecx
    jmp    jump_74cf5
  jump_74cfd:
    movb   $0x30,(%ecx)
    inc    %ecx
    movb   $0x0,(%ecx)
    jmp    jump_74d20
  jump_74d06:
    dec    %ecx
    cmpb   $0x2e,(%ecx)
    jne    jump_74d0d
    dec    %ecx
  jump_74d0d:
    mov    (%ecx),%al
    cmp    $0x39,%al
    je     jump_74d1b
    mov    %al,%ah
    inc    %ah
    mov    %ah,(%ecx)
    jmp    jump_74d20
  jump_74d1b:
    movb   $0x30,(%ecx)
    jmp    jump_74cd0
  jump_74d20:
    add    $0x4,%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_74d27:
/*----------------------------------------------------------------*/
    call   *data_89b44
    ret


/*----------------------------------------------------------------*/
func_74d2e:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%edi
    mov    %ebx,%esi
    mov    %ecx,(%esp)
    mov    $0x1,%ebx
    mov    %ds,%eax
    mov    %edi,%ecx
    mov    %ebx,0x4(%esp)
    mov    %eax,%es
    mov    0x15(%esi),%al
    movl   $0x0,0xc(%esi)
    cmp    $0x69,%al
    jb     jump_74d6f
    jbe    jump_74daf
    cmp    $0x75,%al
    jb     jump_74d6b
    jbe    jump_74d7b
    cmp    $0x78,%al
  jump_74d67:
    je     jump_74d7b
    jmp    jump_74db9
  jump_74d6b:
    cmp    $0x6f,%al
    jmp    jump_74d67
  jump_74d6f:
    cmp    $0x58,%al
    jb     jump_74db9
    jbe    jump_74d7b
    cmp    $0x64,%al
    je     jump_74daf
    jmp    jump_74db9
  jump_74d7b:
    mov    0x14(%esi),%ah
    test   $0x20,%ah
    je     jump_74d8f
    mov    (%edx),%ebx
    add    $0x4,%ebx
    mov    %ebx,(%edx)
    mov    -0x4(%ebx),%ebp
    jmp    jump_74dab
  jump_74d8f:
    test   $0x10,%ah
    je     jump_74da1
    mov    (%edx),%eax
    add    $0x4,%eax
    mov    %eax,(%edx)
    movzwl -0x4(%eax),%ebp
    jmp    jump_74dab
  jump_74da1:
    mov    (%edx),%ebp
    add    $0x4,%ebp
    mov    %ebp,(%edx)
    mov    -0x4(%ebp),%ebp
  jump_74dab:
    andb   $0xf9,0x14(%esi)
  jump_74daf:
    cmpl   $0xffffffff,0x8(%esi)
    je     jump_74db9
    movb   $0x20,0x16(%esi)
  jump_74db9:
    mov    0x15(%esi),%al
    mov    $0xa,%ebx
    cmp    $0x65,%al
    jb     jump_74e1e
    jbe    jump_74e8f
    cmp    $0x6f,%al
    jb     jump_74e07
    jbe    jump_74ea3
    cmp    $0x73,%al
    jb     jump_74dfa
    jbe    jump_74f1e
    cmp    $0x75,%al
    jb     jump_750b2
    jbe    jump_74fe7
    cmp    $0x78,%al
    je     jump_74fca
    jmp    jump_750b2
  jump_74dfa:
    cmp    $0x70,%al
    je     jump_75006
    jmp    jump_750b2
  jump_74e07:
    cmp    $0x67,%al
    jb     jump_74e65
    jbe    jump_74e8f
    cmp    $0x69,%al
    je     jump_74ede
    jmp    jump_750b2
  jump_74e1e:
    cmp    $0x50,%al
    jb     jump_74e52
    jbe    jump_75006
    cmp    $0x58,%al
    jb     jump_74e45
    jbe    jump_74fca
    cmp    $0x63,%al
    jb     jump_750b2
    jbe    jump_75085
    jmp    jump_74ede
  jump_74e45:
    cmp    $0x53,%al
    je     jump_74f1e
    jmp    jump_750b2
  jump_74e52:
    cmp    $0x46,%al
    jb     jump_74e61
    jbe    jump_74e65
    cmp    $0x47,%al
  jump_74e5a:
    je     jump_74e8f
    jmp    jump_750b2
  jump_74e61:
    cmp    $0x45,%al
    jmp    jump_74e5a
  jump_74e65:
    testb  $0x10,0x14(%esi)
    je     jump_74e8f
    mov    (%edx),%ebx
    add    $0x4,%ebx
    mov    %ebx,(%edx)
    mov    %edi,%eax
    mov    -0x4(%ebx),%edx
    mov    %esi,%ebx
    call   func_74c4c
    mov    $0xffffffff,%ebx
    mov    %ds,%eax
    mov    %ds,%edx
    mov    %eax,%es
    mov    %edi,%eax
    mov    %edi,%ecx
    jmp    jump_74ed4
  jump_74e8f:
    mov    %edi,%eax
    mov    %esi,%ebx
    call   func_74d27
    mov    $0xffffffff,%ebx
    mov    %edx,%es
    mov    %eax,%ecx
    jmp    jump_74ed4
  jump_74ea3:
    mov    0x14(%esi),%al
    mov    $0x8,%ebx
    test   $0x1,%al
    je     jump_74eb3
    movb   $0x30,(%edi)
    inc    %edi
  jump_74eb3:
    mov    %ebp,%eax
    mov    %edi,%edx
    call   func_78639
  jump_74ebc:
    cmpl   $0x0,0x8(%esi)
    jne    jump_74ecb
    cmpb   $0x30,(%edi)
    jne    jump_74ecb
    movb   $0x0,%es:(%ecx)
  jump_74ecb:
    mov    $0xffffffff,%ebx
    mov    %es,%edx
    mov    %ecx,%eax
  jump_74ed4:
    call   func_74ba4
    jmp    jump_750dc
  jump_74ede:
    mov    0x14(%esi),%al
    test   $0x20,%al
    je     jump_74ef8
    mov    (%edx),%ebp
    add    $0x4,%ebp
    mov    %ebp,(%edx)
    mov    %edi,%edx
    mov    -0x4(%ebp),%eax
  jump_74ef1:
    call   func_78639
    jmp    jump_74ebc
  jump_74ef8:
    test   $0x10,%al
    je     jump_74f0b
    mov    (%edx),%eax
    add    $0x4,%eax
    mov    %eax,(%edx)
    mov    %edi,%edx
    movswl -0x4(%eax),%eax
    jmp    jump_74ef1
  jump_74f0b:
    mov    (%edx),%ebp
    add    $0x4,%ebp
    mov    %ebp,(%edx)
    mov    %edi,%edx
    mov    -0x4(%ebp),%eax
    call   func_7859e
    jmp    jump_74ebc
  jump_74f1e:
    mov    0x14(%esi),%ah
    test   $0x80,%ah
    je     jump_74f48
    mov    (%edx),%ecx
    add    $0x8,%ecx
    mov    %ecx,(%edx)
    mov    -0x4(%ecx),%dx
    mov    -0x8(%ecx),%ecx
    test   %ecx,%ecx
    jne    jump_74f3d
    test   %dx,%dx
    je     jump_74f41
  jump_74f3d:
    mov    %edx,%es
    jmp    jump_74f74
  jump_74f41:
    mov    %ds,%eax
    mov    (%esp),%ecx
    jmp    jump_74f72
  jump_74f48:
    test   $0x40,%ah
    je     jump_74f5f
    mov    (%edx),%ebx
    add    $0x4,%ebx
    mov    %ebx,(%edx)
    mov    -0x4(%ebx),%ecx
    test   %ecx,%ecx
    je     jump_74f41
  jump_74f5b:
    mov    %ds,%eax
    jmp    jump_74f72
  jump_74f5f:
    mov    (%edx),%eax
    add    $0x4,%eax
    mov    %eax,(%edx)
    mov    -0x4(%eax),%ecx
    test   %ecx,%ecx
    jne    jump_74f5b
    mov    %ds,%eax
    mov    (%esp),%ecx
  jump_74f72:
    mov    %eax,%es
  jump_74f74:
    mov    0x14(%esi),%bh
    mov    0x15(%esi),%al
    xor    %edi,%edi
    and    $0xf9,%bh
    mov    %edi,0x4(%esp)
    mov    %bh,0x14(%esi)
    cmp    $0x53,%al
    jne    jump_74fa8
    test   $0x20,%bh
    je     jump_74f9d
    xor    %eax,%eax
    mov    %es:(%ecx),%ax
    add    $0x2,%ecx
    jmp    jump_750dc
  jump_74f9d:
    xor    %eax,%eax
    mov    %es:(%ecx),%al
    inc    %ecx
    jmp    jump_750dc
  jump_74fa8:
    test   $0x20,%bh
    je     jump_74fbe
    mov    %es,%edx
    mov    %ecx,%eax
    mov    0x8(%esi),%ebx
    call   func_74bc8
    jmp    jump_750dc
  jump_74fbe:
    mov    %es,%edx
    mov    %ecx,%eax
    mov    0x8(%esi),%ebx
    jmp    jump_74ed4
  jump_74fca:
    testb  $0x1,0x14(%esi)
    je     jump_74fe2
    test   %ebp,%ebp
    je     jump_74fe2
    movb   $0x30,0x17(%esi)
    mov    0x15(%esi),%al
    movb   $0x0,0x19(%esi)
    mov    %al,0x18(%esi)
  jump_74fe2:
    mov    $0x10,%ebx
  jump_74fe7:
    mov    %ebp,%eax
    mov    %edi,%edx
    call   func_785f0
    cmpb   $0x58,0x15(%esi)
    jne    jump_74ebc
    mov    %edi,%eax
    call   func_75177
    jmp    jump_74ebc
  jump_75006:
    cmpl   $0x0,0x4(%esi)
    jne    jump_75022
    testb  $0x80,0x14(%esi)
    je     jump_7501b
    movl   $0xd,0x4(%esi)
    jmp    jump_75022
  jump_7501b:
    movl   $0x8,0x4(%esi)
  jump_75022:
    andb   $0xf9,0x14(%esi)
    mov    (%edx),%eax
    add    $0x4,%eax
    mov    %eax,(%edx)
    mov    0x14(%esi),%bl
    mov    -0x4(%eax),%ebp
    test   $0x80,%bl
    je     jump_75061
    add    $0x4,%eax
    mov    %eax,(%edx)
    mov    $0x4,%ebx
    mov    -0x4(%eax),%eax
    mov    %edi,%edx
    and    $0xffff,%eax
    call   func_74beb
    mov    $0x8,%ebx
    lea    0x5(%edi),%edx
    mov    %ebp,%eax
    movb   $0x3a,0x4(%edi)
    jmp    jump_7506a
  jump_75061:
    mov    $0x8,%ebx
    mov    %ebp,%eax
    mov    %edi,%edx
  jump_7506a:
    call   func_74beb
    cmpb   $0x50,0x15(%esi)
    jne    jump_74ecb
    mov    %edi,%eax
    call   func_75177
    jmp    jump_74ecb
  jump_75085:
    mov    (%edx),%ebx
    add    $0x4,%ebx
    mov    %ebx,(%edx)
    mov    -0x4(%ebx),%al
    movb   $0x0,0x1(%edi)
    mov    %al,(%edi)
    movl   $0x1,0x8(%esi)
    mov    $0x1,%eax
    mov    0x14(%esi),%dh
    xor    %edi,%edi
    and    $0xf9,%dh
    mov    %edi,0x4(%esp)
    mov    %dh,0x14(%esi)
    jmp    jump_750dc
  jump_750b2:
    movl   $0x0,0x4(%esi)
    mov    0x15(%esi),%al
    movb   $0x0,0x1(%edi)
    mov    %al,(%edi)
    movl   $0x1,0x8(%esi)
    mov    0x14(%esi),%al
    xor    %edi,%edi
    and    $0xf9,%al
    mov    %edi,0x4(%esp)
    mov    %al,0x14(%esi)
    mov    $0x1,%eax
  jump_750dc:
    cmpl   $0x0,0x4(%esp)
    je     jump_75122
    mov    %es:(%ecx),%dl
    cmp    $0x2d,%dl
    jne    jump_750f6
    inc    %ecx
    movb   $0x0,0x18(%esi)
    dec    %eax
    mov    %dl,0x17(%esi)
    jmp    jump_75111
  jump_750f6:
    mov    0x14(%esi),%dh
    test   $0x2,%dh
    je     jump_75104
    movb   $0x20,0x17(%esi)
    jmp    jump_7510d
  jump_75104:
    test   $0x4,%dh
    je     jump_75111
    movb   $0x2b,0x17(%esi)
  jump_7510d:
    movb   $0x0,0x18(%esi)
  jump_75111:
    mov    0x8(%esi),%edx
    cmp    %edx,%eax
    jle    jump_7511d
    mov    %eax,0x8(%esi)
    jmp    jump_75122
  jump_7511d:
    sub    %eax,%edx
    mov    %edx,0xc(%esi)
  jump_75122:
    cmpb   $0x2a,0x16(%esi)
    jne    jump_75135
    mov    0x14(%esi),%dl
    movb   $0x0,0x17(%esi)
    and    $0xf9,%dl
    mov    %dl,0x14(%esi)
  jump_75135:
    mov    0x8(%esi),%ebx
    cmp    $0xffffffff,%ebx
    je     jump_75141
    cmp    %ebx,%eax
    jge    jump_7514a
  jump_75141:
    cmpb   $0x63,0x15(%esi)
    je     jump_7514a
    mov    %eax,0x8(%esi)
  jump_7514a:
    mov    $0xffffffff,%ebx
    lea    0x17(%esi),%eax
    mov    %ds,%edx
    call   func_74ba4
    mov    0x8(%esi),%ebp
    mov    0xc(%esi),%edx
    add    %ebp,%eax
    mov    0x4(%esi),%ebx
    add    %edx,%eax
    mov    %es,%edx
    sub    %eax,%ebx
    mov    %ecx,%eax
    mov    %ebx,0x4(%esi)
    add    $0x8,%esp
    pop    %ebp
    pop    %es
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_75177:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
  jump_7517a:
    cmpb   $0x0,(%edx)
    je     jump_7518d
    xor    %eax,%eax
    mov    (%edx),%al
    call   func_743ff
    mov    %al,(%edx)
    inc    %edx
    jmp    jump_7517a
  jump_7518d:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7518f:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    $func_78654,%edx
    mov    $func_78779,%ebx
    mov    %edx,data_89b44
    mov    %ebx,data_89b48
    pop    %edx
    pop    %ebx
    ret
  jump_751aa:
    push   %es
    push   %ecx
    push   %ebx
    push   %edx
    fninit
    push   %eax
    fnstcw (%esp)
    pop    %eax
    cmp    $0x3,%ah
    je     jump_751bb
    inc    %ebp
  jump_751bb:
    or     %ebp,%ebp
    je     jump_751c4
    call   func_751da
  jump_751c4:
    finit
    fldcw  data_89bcc
    fldz
    fldz
    fldz
    fldz
    pop    %edx
    pop    %ebx
    pop    %ecx
    pop    %es
    ret


/*----------------------------------------------------------------*/
func_751da:
/*----------------------------------------------------------------*/
    movb   $0x3,data_89720
    movb   $0x1,data_897c0
    data16 smsw data_897be
    andw   $0x6,data_897be
    sub    $0x8,%esp
    sidtl  (%esp)
    mov    0x2(%esp),%ebx
    add    $0x38,%ebx
    add    $0x8,%esp
    cmpb   $0x0,data_897f8
    je     jump_7522c
    call   func_752a5
    data16 mov data_8973a,%es
    mov    %edx,%es:(%ebx)
    mov    %ecx,%es:0x4(%ebx)
    call   func_7530f
    jmp    jump_752a4
  jump_7522c:
    cmpb   $0x0,data_897f6
    jne    jump_75250
    mov    $0x2507,%ax
    push   %ds
    mov    %cs,%cx
    mov    %ecx,%ds
    lea    func_78b70,%edx
    int    $0x21
    pop    %ds
    mov    $0x4,%al
    mov    $0xf3,%ah
    int    $0x21
    jmp    jump_752a4
  jump_75250:
    cmpb   $0x9,data_897f6
    jne    jump_75278
    call   func_752a5
    mov    %edx,(%ebx)
    mov    %ecx,0x4(%ebx)
    mov    $0xe02,%eax
    mov    $0x4,%ebx
    mov    data_89734,%ecx
    call   *0x30(%ecx)
    jmp    jump_752a4
  jump_75278:
    cmpb   $0x1,data_897f6
    jne    jump_75291
    mov    data_89738,%dx
    sub    %eax,%eax
    call   func_7b9ae
    jmp    jump_752a4
  jump_75291:
    sub    %dx,%dx
    sub    %eax,%eax
    call   func_7b9ae
    cmp    $0x1,%al
    je     jump_752a4
    call   func_752c2
  jump_752a4:
    ret


/*----------------------------------------------------------------*/
func_752a5:
/*----------------------------------------------------------------*/
    lea    func_78b70,%ecx
    mov    %cs,%dx
    shl    $0x10,%edx
    mov    %cx,%dx
    mov    %cs,%cx
    and    $0x3,%cl
    shl    $0xd,%cx
    or     $0x8e,%ch
    ret


/*----------------------------------------------------------------*/
func_752c2:
/*----------------------------------------------------------------*/
    mov    $0x7,%cl
    mov    $0x2502,%ax
    int    $0x21
    mov    %ebx,data_897b8
    data16 mov %es,data_897bc
    cmpb   $0x3,data_897f6
    mov    $0x7,%cl
    mov    $0x2504,%ax
    push   %ds
    push   %cs
    pop    %ds
    jl     jump_752f9
    lea    func_78b00,%edx
    int    $0x21
    pop    %ds
    call   func_7530f
    jmp    jump_7530e
  jump_752f9:
    lea    func_78b70,%edx
    int    $0x21
    pop    %ds
    mov    %cr0,%ecx
    or     $0x4,%ecx
    and    $0xfffffffd,%ecx
    mov    %ecx,%cr0
  jump_7530e:
    ret


/*----------------------------------------------------------------*/
func_7530f:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    lea    data_89778,%edx
    mov    $0x2535,%ax
    int    $0x21
    orl    $0x4,data_89778
    andl   $0xfffffffd,data_89778
    inc    %ebx
    int    $0x21
    ret
  jump_7532f:
    cmpb   $0x1,data_897c0
    je     jump_75339
    ret
  jump_75339:
    push   %ecx
    push   %ebx
    push   %edx
    mov    data_897f6,%al
    cmpb   $0x0,data_897f8
    je     jump_75351
    call   func_753e4
    jmp    jump_7539e
  jump_75351:
    cmp    $0x9,%al
    jne    jump_7536a
    mov    $0xe02,%eax
    mov    $0x0,%ebx
    mov    data_89734,%ecx
    call   *0x30(%ecx)
    jmp    jump_7539e
  jump_7536a:
    cmp    $0x0,%al
    jne    jump_7537a
    mov    data_897be,%ax
    mov    $0xf3,%ah
    int    $0x21
    jmp    jump_7539e
  jump_7537a:
    cmp    $0x1,%al
    jne    jump_7538e
    mov    data_89738,%dx
    sub    %eax,%eax
    call   func_7ba78
    jmp    jump_7539e
  jump_7538e:
    sub    %edx,%edx
    call   func_7ba78
    cmp    $0x1,%al
    je     jump_7539e
    call   func_753a9
  jump_7539e:
    movb   $0x0,data_897c0
    pop    %edx
    pop    %ebx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_753a9:
/*----------------------------------------------------------------*/
    mov    $0x7,%cl
    mov    $0x2504,%ax
    mov    data_897b8,%edx
    push   %ds
    data16 mov data_897bc,%ds
    int    $0x21
    pop    %ds
    cmpb   $0x3,data_897f6
    jl     jump_753d0
    call   func_753e4
    jmp    jump_753e3
  jump_753d0:
    mov    %cr0,%ecx
    and    $0xfffffff9,%ecx
    mov    data_897be,%dx
    or     %dx,%cx
    mov    %ecx,%cr0
  jump_753e3:
    ret


/*----------------------------------------------------------------*/
func_753e4:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    lea    data_89778,%edx
    mov    $0x2535,%ax
    int    $0x21
    xor    %ecx,%ecx
    mov    data_897be,%cx
    mov    %ecx,data_89778
    inc    %ebx
    int    $0x21
    ret


/*----------------------------------------------------------------*/
func_75405:
/*----------------------------------------------------------------*/
    fsave  (%eax)
    fwait
    ret


/*----------------------------------------------------------------*/
func_7540a:
/*----------------------------------------------------------------*/
    frstor (%eax)
    fwait
    ret


/*----------------------------------------------------------------*/
func_7540e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    cmpb   $0x0,data_89721
    je     jump_7542f
    mov    $func_75405,%edx
    mov    $func_7540a,%ebx
    mov    %edx,data_89bd0
    mov    %ebx,data_89bd4
  jump_7542f:
    xor    %eax,%eax
    mov    data_89bcc,%ax
    call   func_7bad2
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_75449:
/*----------------------------------------------------------------*/
    push   %edx
    mov    data_89720,%ah
    test   %ah,%ah
    jne    jump_75487
    mov    %ah,data_89721
    sub    %eax,%eax
    push   %eax
    fninit
    fnstcw (%esp)
    pop    %eax
    mov    %ah,%al
    xor    %dl,%dl
    cmp    $0x3,%al
    jne    jump_75472
    call   func_7540e
    mov    %al,%dl
  jump_75472:
    cmpb   $0x0,data_897f4
    jne    jump_75487
    mov    %dl,data_89720
    mov    %dl,data_89721
  jump_75487:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_75489:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_7548a:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x8,%esp
    mov    0x10(%ebp),%cl
    cmp    $0x1,%cl
    jb     jump_754cd
    cmp    $0x3,%cl
    jbe    jump_754a8
    cmp    $0x4,%cl
    je     jump_754b9
    jmp    jump_754cd
  jump_754a8:
    mov    %cl,%al
    or     $0x40,%al
    and    $0xff,%eax
    lea    0x8(%ebp),%edx
    or     $0x20,%ah
    jmp    jump_754ef
  jump_754b9:
    fldz
    fcompl 0x8(%ebp)
    fnstsw %ax
    sahf
    jbe    jump_754cd
    xor    %edx,%edx
    mov    %edx,-0x18(%ebp)
    mov    %edx,-0x14(%ebp)
    jmp    jump_754f7
  jump_754cd:
    xor    %ebx,%ebx
    mov    %cl,%bl
    mov    %ebx,%edx
    or     $0x81,%dh
    cmp    $0x6,%cl
    jne    jump_754ea
    fldz
    fcompl 0x8(%ebp)
    fnstsw %ax
    sahf
    jbe    jump_754ea
    or     $0x11,%bh
    mov    %ebx,%edx
  jump_754ea:
    mov    %edx,%eax
    lea    0x8(%ebp),%edx
  jump_754ef:
    call   func_7baf9
    fstpl  -0x18(%ebp)
  jump_754f7:
    fldl   -0x18(%ebp)
    lea    -0x10(%ebp),%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %eax
    pop    %ebp
    ret    $0xc


/*----------------------------------------------------------------*/
func_75510:
/*----------------------------------------------------------------*/
    or     %ecx,%ecx
    je     jump_75540
    cmp    %dl,(%eax)
  jump_75516:
    test   $0x3,%al
    je     jump_75523
    mov    %dl,(%eax)
    inc    %eax
    ror    $0x8,%edx
    dec    %ecx
    jne    jump_75516
  jump_75523:
    push   %ecx
    shr    $0x2,%ecx
    call   func_75547
    pop    %ecx
    and    $0x3,%ecx
    je     jump_75540
    mov    %dl,(%eax)
    dec    %ecx
    je     jump_75540
    mov    %dh,0x1(%eax)
    dec    %ecx
    je     jump_75540
    mov    %dl,0x2(%eax)
  jump_75540:
    ret


/*----------------------------------------------------------------*/
func_75547:
/*----------------------------------------------------------------*/
    or     %ecx,%ecx
    je     jump_755b2
  jump_7554b:
    test   $0x1f,%al
    je     jump_75557
    mov    %edx,(%eax)
    lea    0x4(%eax),%eax
    dec    %ecx
    jne    jump_7554b
  jump_75557:
    push   %ecx
    shr    $0x2,%ecx
    je     jump_75597
    dec    %ecx
    je     jump_75589
  jump_75560:
    mov    %edx,(%eax)
    mov    %edx,0x4(%eax)
    dec    %ecx
    mov    %edx,0x8(%eax)
    mov    %edx,0xc(%eax)
    je     jump_75586
    cmp    %dl,0x20(%eax)
    mov    %edx,0x10(%eax)
    mov    %edx,0x14(%eax)
    dec    %ecx
    mov    %edx,0x18(%eax)
    mov    %edx,0x1c(%eax)
    lea    0x20(%eax),%eax
    jne    jump_75560
    lea    -0x10(%eax),%eax
  jump_75586:
    lea    0x10(%eax),%eax
  jump_75589:
    mov    %edx,(%eax)
    mov    %edx,0x4(%eax)
    mov    %edx,0x8(%eax)
    mov    %edx,0xc(%eax)
    lea    0x10(%eax),%eax
  jump_75597:
    pop    %ecx
    and    $0x3,%ecx
    je     jump_755b2
    mov    %edx,(%eax)
    lea    0x4(%eax),%eax
    dec    %ecx
    je     jump_755b2
    mov    %edx,(%eax)
    lea    0x4(%eax),%eax
    dec    %ecx
    je     jump_755b2
    mov    %edx,(%eax)
    lea    0x4(%eax),%eax
  jump_755b2:
    ret


/*----------------------------------------------------------------*/
func_755b4:
/*----------------------------------------------------------------*/
    add    $0x8,%eax
    ret


/*----------------------------------------------------------------*/
func_755b8:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    mov    0x4(%eax),%eax
    mov    0x4(%eax),%eax
    dec    %edx
    call   func_7bc00
    imul   %eax,%edx
    mov    0xc(%ebx),%eax
    add    %edx,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_755d1:
/*----------------------------------------------------------------*/
    movb   $0x0,0x8(%eax)
    ret


/*----------------------------------------------------------------*/
func_755d6:
/*----------------------------------------------------------------*/
    movl   $data_89808,data_122824
    ret


/*----------------------------------------------------------------*/
func_755e1:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %eax,%ecx
    mov    %edx,%eax
    movl   $0x2,0x10(%edx)
    mov    %ebx,0x14(%edx)
    mov    0x9(%ebx),%edx
    movl   $0x0,0x1c(%eax)
    mov    %edx,0x18(%eax)
    mov    %eax,%edx
    mov    %ecx,0xc(%eax)
    add    $0x10,%edx
    xor    %ebx,%ebx
    mov    %edx,0x4(%eax)
    call   func_75614
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_75614:
/*----------------------------------------------------------------*/
    mov    %edx,0x4(%eax)
    mov    %ebx,0x8(%eax)
    mov    data_1227f8,%edx
    mov    %edx,(%eax)
    mov    %eax,data_1227f8
    mov    $data_1227f8,%eax
    ret


/*----------------------------------------------------------------*/
func_7563e:
/*----------------------------------------------------------------*/
    push   %edx
    mov    (%eax),%edx
    mov    (%edx),%edx
    mov    %edx,(%eax)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_75647:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %eax,%esi
    mov    %edx,(%esp)
    mov    %ebx,%edi
    mov    0x10(%eax),%ah
    xor    %edx,%edx
    xor    %ebp,%ebp
    and    $0xfd,%ah
    mov    %edx,0x4(%esp)
    mov    %ah,0x10(%esi)
  jump_75666:
    mov    (%esp),%ebx
    lea    0x1(%ebx),%ecx
    mov    %ecx,(%esp)
    mov    (%ebx),%bl
    and    $0xff,%ebx
    je     jump_75848
    mov    %bl,%al
    inc    %al
    and    $0xff,%eax
    testb  $0x2,data_860c8(%eax)
    je     jump_7569d
    mov    %esi,%eax
    call   func_75941
    add    %eax,%ebp
    jmp    jump_75814
  jump_7569d:
    cmp    $0x25,%ebx
    je     jump_756c2
    mov    %esi,%eax
    call   *(%esi)
    cmp    %ebx,%eax
    je     jump_75813
  jump_756ae:
    testb  $0x2,0x10(%esi)
    jne    jump_75848
    mov    %esi,%edx
    call   *0x4(%esi)
    jmp    jump_75848
  jump_756c2:
    mov    %ecx,%eax
    mov    %esi,%edx
    call   func_75868
    xor    %ebx,%ebx
    mov    %eax,(%esp)
    mov    (%eax),%bl
    mov    %eax,%edx
    test   %ebx,%ebx
    je     jump_756de
    lea    0x1(%eax),%edx
    mov    %edx,(%esp)
  jump_756de:
    cmp    $0x65,%ebx
    jb     jump_75738
    cmp    $0x67,%ebx
    jbe    jump_757ba
    cmp    $0x70,%ebx
    jb     jump_7571e
    jbe    jump_757b3
    cmp    $0x75,%ebx
    jb     jump_75710
    jbe    jump_757a6
    cmp    $0x78,%ebx
    je     jump_757b3
    jmp    jump_75814
  jump_75710:
    cmp    $0x73,%ebx
    je     jump_757c5
    jmp    jump_75814
  jump_7571e:
    cmp    $0x6e,%ebx
    jb     jump_7572e
    jbe    jump_757fa
    jmp    jump_7579f
  jump_7572e:
    cmp    $0x69,%ebx
    je     jump_75792
    jmp    jump_75814
  jump_75738:
    cmp    $0x58,%ebx
    jb     jump_7575e
    jbe    jump_757b3
    cmp    $0x63,%ebx
    jb     jump_75750
    jbe    jump_757dd
    jmp    jump_7577d
  jump_75750:
    cmp    $0x5b,%ebx
    je     jump_757d0
    jmp    jump_75814
  jump_7575e:
    cmp    $0x45,%ebx
    jb     jump_7576f
    jbe    jump_757ba
    cmp    $0x47,%ebx
    je     jump_757ba
    jmp    jump_75814
  jump_7576f:
    cmp    $0x25,%ebx
    je     jump_75807
    jmp    jump_75814
  jump_7577d:
    mov    $0xa,%ebx
  jump_75782:
    mov    $0x1,%ecx
    mov    %esi,%eax
    mov    %edi,%edx
  jump_7578b:
    call   func_75f4f
    jmp    jump_757e6
  jump_75792:
    mov    $0x1,%ecx
    mov    %esi,%eax
    mov    %edi,%edx
    xor    %ebx,%ebx
    jmp    jump_7578b
  jump_7579f:
    mov    $0x8,%ebx
    jmp    jump_75782
  jump_757a6:
    mov    $0xa,%ebx
    mov    %esi,%eax
    mov    %edi,%edx
    xor    %ecx,%ecx
    jmp    jump_7578b
  jump_757b3:
    mov    $0x10,%ebx
    jmp    jump_75782
  jump_757ba:
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_75c71
    jmp    jump_757e6
  jump_757c5:
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_759fc
    jmp    jump_757e6
  jump_757d0:
    mov    %esp,%ebx
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_75b8b
    jmp    jump_757e6
  jump_757dd:
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_75976
  jump_757e6:
    test   %eax,%eax
    jle    jump_75848
    mov    0x10(%esi),%dh
    add    %eax,%ebp
    test   $0x1,%dh
    je     jump_75814
    incl   0x4(%esp)
    jmp    jump_75814
  jump_757fa:
    mov    %esi,%eax
    mov    %edi,%edx
    mov    %ebp,%ebx
    call   func_75aea
    jmp    jump_75814
  jump_75807:
    mov    %esi,%eax
    call   *(%esi)
    cmp    %ebx,%eax
    jne    jump_756ae
  jump_75813:
    inc    %ebp
  jump_75814:
    testb  $0x2,0x10(%esi)
    je     jump_75666
    mov    (%esp),%eax
    cmpb   $0x25,(%eax)
    jne    jump_75848
    lea    0x1(%eax),%edx
    mov    %edx,(%esp)
    mov    %edx,%eax
    mov    %esi,%edx
    call   func_75868
    mov    %eax,(%esp)
    cmpb   $0x6e,(%eax)
    jne    jump_75848
    mov    %esi,%eax
    mov    %edi,%edx
    mov    %ebp,%ebx
    call   func_75aea
  jump_75848:
    cmpl   $0x0,0x4(%esp)
    jne    jump_7585c
    testb  $0x2,0x10(%esi)
    je     jump_7585c
    mov    $0xffffffff,%eax
    jmp    jump_75860
  jump_7585c:
    mov    0x4(%esp),%eax
  jump_75860:
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_75868:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    sub    $0x4,%esp
    mov    %edx,%ebx
    mov    0x10(%edx),%dl
    or     $0x1,%dl
    movl   $0xffffffff,0xc(%ebx)
    mov    %dl,%dh
    mov    %dl,0x10(%ebx)
    and    $0x3,%dh
    mov    %dh,0x10(%ebx)
    cmpb   $0x2a,(%eax)
    jne    jump_75897
    mov    0x10(%ebx),%ch
    and    $0xfe,%ch
    inc    %eax
    mov    %ch,0x10(%ebx)
  jump_75897:
    xor    %edx,%edx
    mov    (%eax),%dl
    mov    %edx,(%esp)
    mov    (%esp),%dl
    inc    %dl
    and    $0xff,%edx
    testb  $0x20,data_860c8(%edx)
    je     jump_758da
    xor    %edx,%edx
  jump_758b4:
    imul   $0xa,%edx,%edx
    mov    (%esp),%esi
    sub    $0x30,%esi
    inc    %eax
    add    %esi,%edx
    movzbl (%eax),%esi
    mov    %esi,(%esp)
    mov    (%esp),%cl
    inc    %cl
    movzbl %cl,%esi
    testb  $0x20,data_860c8(%esi)
    jne    jump_758b4
    mov    %edx,0xc(%ebx)
  jump_758da:
    mov    (%eax),%cl
    lea    0x1(%eax),%edx
    cmp    $0x4e,%cl
    jne    jump_758ea
    orb    $0x8,0x10(%ebx)
    jmp    jump_758f3
  jump_758ea:
    cmp    $0x46,%cl
    jne    jump_758f5
    orb    $0x4,0x10(%ebx)
  jump_758f3:
    mov    %edx,%eax
  jump_758f5:
    mov    (%eax),%cl
    lea    0x1(%eax),%edx
    cmp    $0x68,%cl
    jb     jump_7590f
    jbe    jump_75916
    cmp    $0x6c,%cl
    jb     jump_7593a
    jbe    jump_75923
    cmp    $0x77,%cl
    je     jump_75923
    jmp    jump_7593a
  jump_7590f:
    cmp    $0x4c,%cl
    je     jump_7592f
    jmp    jump_7593a
  jump_75916:
    mov    0x10(%ebx),%cl
    or     $0x10,%cl
    mov    %edx,%eax
    mov    %cl,0x10(%ebx)
    jmp    jump_7593a
  jump_75923:
    mov    0x10(%ebx),%dl
    or     $0x20,%dl
    inc    %eax
    mov    %dl,0x10(%ebx)
    jmp    jump_7593a
  jump_7592f:
    mov    0x10(%ebx),%ch
    or     $0x40,%ch
    mov    %edx,%eax
    mov    %ch,0x10(%ebx)
  jump_7593a:
    add    $0x4,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_75941:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ebx
    xor    %ecx,%ecx
  jump_75949:
    mov    %ebx,%eax
    call   *(%ebx)
    mov    %eax,%esi
    inc    %al
    and    $0xff,%eax
    testb  $0x2,data_860c8(%eax)
    je     jump_75962
    inc    %ecx
    jmp    jump_75949
  jump_75962:
    testb  $0x2,0x10(%ebx)
    jne    jump_7596f
    mov    %esi,%eax
    mov    %ebx,%edx
    call   *0x4(%ebx)
  jump_7596f:
    mov    %ecx,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_75976:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    mov    %eax,%ebx
    testb  $0x1,0x10(%eax)
    je     jump_759ba
    mov    0x10(%ebx),%cl
    test   $0x4,%cl
    je     jump_75997
    mov    (%edx),%edi
    add    $0x8,%edi
    mov    %edi,(%edx)
    les    -0x8(%edi),%ecx
    jmp    jump_759ba
  jump_75997:
    test   $0x8,%cl
    je     jump_759ac
    mov    (%edx),%esi
    add    $0x4,%esi
    mov    %ds,%eax
    mov    %esi,(%edx)
    mov    %eax,%es
    mov    -0x4(%esi),%ecx
    jmp    jump_759ba
  jump_759ac:
    mov    (%edx),%ecx
    add    $0x4,%ecx
    mov    %ds,%eax
    mov    %ecx,(%edx)
    mov    %eax,%es
    mov    -0x4(%ecx),%ecx
  jump_759ba:
    mov    0xc(%ebx),%edx
    xor    %esi,%esi
    cmp    $0xffffffff,%edx
    jne    jump_759c9
    mov    $0x1,%edx
  jump_759c9:
    test   %edx,%edx
    jle    jump_759f4
    mov    %ebx,%eax
    call   *(%ebx)
    testb  $0x2,0x10(%ebx)
    jne    jump_759f4
    inc    %esi
    dec    %edx
    testb  $0x1,0x10(%ebx)
    je     jump_759c9
    testb  $0x20,0x10(%ebx)
    je     jump_759ee
    mov    %ax,%es:(%ecx)
    add    $0x2,%ecx
    jmp    jump_759c9
  jump_759ee:
    mov    %al,%es:(%ecx)
    inc    %ecx
    jmp    jump_759c9
  jump_759f4:
    mov    %esi,%eax
  jump_759f6:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_759fc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    sub    $0x4,%esp
    mov    %eax,%ebx
    testb  $0x20,0x10(%eax)
    je     jump_75a12
    movb   $0x2,(%esp)
    jmp    jump_75a1a
  jump_75a12:
    testb  $0x10,0x10(%ebx)
    movb   $0x1,(%esp)
  jump_75a1a:
    mov    0x10(%ebx),%al
    test   $0x1,%al
    je     jump_75a53
    test   $0x4,%al
    je     jump_75a31
    mov    (%edx),%edi
    add    $0x8,%edi
    mov    %edi,(%edx)
    les    -0x8(%edi),%ecx
    jmp    jump_75a53
  jump_75a31:
    test   $0x8,%al
    je     jump_75a45
    mov    (%edx),%esi
    add    $0x4,%esi
    mov    %esi,(%edx)
    mov    %ds,%edx
    mov    %edx,%es
    mov    -0x4(%esi),%ecx
    jmp    jump_75a53
  jump_75a45:
    mov    (%edx),%ecx
    add    $0x4,%ecx
    mov    %ecx,(%edx)
    mov    %ds,%edx
    mov    %edx,%es
    mov    -0x4(%ecx),%ecx
  jump_75a53:
    xor    %esi,%esi
  jump_75a55:
    mov    %ebx,%eax
    call   *(%ebx)
    mov    %eax,%edx
    inc    %al
    movzbl %al,%edi
    testb  $0x2,data_860c8(%edi)
    je     jump_75a6c
    inc    %esi
    jmp    jump_75a55
  jump_75a6c:
    testb  $0x2,0x10(%ebx)
    je     jump_75a76
    xor    %esi,%esi
    jmp    jump_75ac4
  jump_75a76:
    mov    0xc(%ebx),%edi
    lea    -0x1(%edi),%eax
    mov    %eax,0xc(%ebx)
    test   %edi,%edi
    je     jump_75abd
  jump_75a83:
    mov    0x10(%ebx),%al
    inc    %esi
    test   $0x1,%al
    je     jump_75aa1
    cmpb   $0x1,(%esp)
    jne    jump_75a96
    mov    %dl,%es:(%ecx)
    jmp    jump_75a9a
  jump_75a96:
    mov    %dx,%es:(%ecx)
  jump_75a9a:
    xor    %edx,%edx
    mov    (%esp),%dl
    add    %edx,%ecx
  jump_75aa1:
    mov    %ebx,%eax
    call   func_7616e
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_75ac4
    inc    %al
    movzbl %al,%edi
    testb  $0x2,data_860c8(%edi)
    je     jump_75a83
  jump_75abd:
    mov    %edx,%eax
    mov    %ebx,%edx
    call   *0x4(%ebx)
  jump_75ac4:
    testb  $0x1,0x10(%ebx)
    je     jump_75ae0
    test   %esi,%esi
    jle    jump_75ae0
    cmpb   $0x1,(%esp)
    jne    jump_75ada
    movb   $0x0,%es:(%ecx)
    jmp    jump_75ae0
  jump_75ada:
    movw   $0x0,%es:(%ecx)
  jump_75ae0:
    mov    %esi,%eax
    add    $0x4,%esp
    jmp    jump_759f6


/*----------------------------------------------------------------*/
func_75aea:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    mov    0x10(%eax),%cl
    test   $0x1,%cl
    je     jump_75b43
    test   $0x4,%cl
    je     jump_75b07
    mov    (%edx),%edi
    add    $0x8,%edi
    mov    %edi,(%edx)
    les    -0x8(%edi),%edx
    jmp    jump_75b2c
  jump_75b07:
    test   $0x8,%cl
    je     jump_75b1c
    mov    (%edx),%esi
    add    $0x4,%esi
    mov    %ds,%ecx
    mov    %esi,(%edx)
    mov    %ecx,%es
    mov    -0x4(%esi),%edx
    jmp    jump_75b2c
  jump_75b1c:
    mov    (%edx),%ecx
    add    $0x4,%ecx
    mov    %ecx,(%edx)
    mov    %ecx,%edx
    mov    %ds,%ecx
    mov    %ecx,%es
    mov    -0x4(%edx),%edx
  jump_75b2c:
    mov    0x10(%eax),%ch
    test   $0x10,%ch
    je     jump_75b3d
    mov    %bx,%es:(%edx)
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_75b3d:
    test   $0x20,%ch
    mov    %ebx,%es:(%edx)
  jump_75b43:
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_75b48:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%ecx
    mov    %edx,%esi
    mov    $0x20,%ebx
    mov    %edx,%eax
    xor    %edx,%edx
    call   func_72280
    xor    %eax,%eax
    mov    (%ecx),%al
    inc    %ecx
    test   %eax,%eax
    je     jump_75b85
  jump_75b66:
    mov    %eax,%edx
    and    $0x7,%eax
    sar    $0x3,%edx
    mov    data_861cc(%eax),%al
    or     %al,(%edx,%esi,1)
    xor    %eax,%eax
    mov    (%ecx),%al
    test   %eax,%eax
    je     jump_75b85
    inc    %ecx
    cmp    $0x5d,%eax
    jne    jump_75b66
  jump_75b85:
    mov    %ecx,%eax
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_75b8b:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    sub    $0x28,%esp
    mov    %eax,%ecx
    mov    %edx,%edi
    mov    (%ebx),%eax
    cmpb   $0x5e,(%eax)
    sete   %dl
    and    $0xff,%edx
    mov    %edx,0x20(%esp)
    je     jump_75bae
    inc    %eax
    mov    %eax,(%ebx)
  jump_75bae:
    mov    %esp,%edx
    mov    (%ebx),%eax
    call   func_75b48
    mov    %eax,(%ebx)
    mov    0x10(%ecx),%bl
    test   $0x1,%bl
    je     jump_75bf5
    test   $0x4,%bl
    je     jump_75bd2
    mov    (%edi),%esi
    add    $0x8,%esi
    mov    %esi,(%edi)
    les    -0x8(%esi),%esi
    jmp    jump_75bf5
  jump_75bd2:
    test   $0x8,%bl
    je     jump_75be7
    mov    (%edi),%ebx
    add    $0x4,%ebx
    mov    %ds,%eax
    mov    %ebx,(%edi)
    mov    %eax,%es
    mov    -0x4(%ebx),%esi
    jmp    jump_75bf5
  jump_75be7:
    mov    (%edi),%edx
    add    $0x4,%edx
    mov    %ds,%eax
    mov    %edx,(%edi)
    mov    %eax,%es
    mov    -0x4(%edx),%esi
  jump_75bf5:
    mov    0x20(%esp),%ebp
    xor    %edi,%edi
    mov    0xc(%ecx),%ebx
    mov    %edi,0x24(%esp)
  jump_75c02:
    test   %ebx,%ebx
    jbe    jump_75c53
    mov    %ecx,%eax
    call   *(%ecx)
    mov    %eax,%edx
    testb  $0x2,0x10(%ecx)
    jne    jump_75c53
    mov    %eax,%edi
    and    $0x7,%edx
    sar    $0x3,%edi
    mov    data_861cc(%edx),%dl
    movzbl (%esp,%edi,1),%edi
    and    $0xff,%edx
    test   %edx,%edi
    sete   %dl
    and    $0xff,%edx
    cmp    %ebp,%edx
    je     jump_75c40
    mov    %ecx,%edx
    call   *0x4(%ecx)
    jmp    jump_75c53
  jump_75c40:
    incl   0x24(%esp)
    mov    0x10(%ecx),%dl
    dec    %ebx
    test   $0x1,%dl
    je     jump_75c02
    mov    %al,%es:(%esi)
    inc    %esi
    jmp    jump_75c02
  jump_75c53:
    testb  $0x1,0x10(%ecx)
    je     jump_75c64
    cmpl   $0x0,0x24(%esp)
    jle    jump_75c64
    movb   $0x0,%es:(%esi)
  jump_75c64:
    mov    0x24(%esp),%eax
    add    $0x28,%esp
    pop    %ebp
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_75c71:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    sub    $0x70,%esp
    mov    %eax,%ecx
    mov    %edx,0x58(%esp)
    xor    %edi,%edi
    mov    %esp,%esi
    mov    %edi,0x6c(%esp)
  jump_75c88:
    mov    %ecx,%eax
    call   *(%ecx)
    mov    %eax,%ebp
    mov    %eax,%ebx
    inc    %al
    and    $0xff,%eax
    testb  $0x2,data_860c8(%eax)
    je     jump_75ca6
    incl   0x6c(%esp)
    jmp    jump_75c88
  jump_75ca6:
    testb  $0x2,0x10(%ecx)
    jne    jump_75e91
    mov    0xc(%ecx),%eax
    lea    -0x1(%eax),%edx
    mov    %edx,0xc(%ecx)
    test   %eax,%eax
    je     jump_75e8a
    cmp    $0x2b,%ebp
    je     jump_75ccb
    cmp    $0x2d,%ebp
    jne    jump_75ce9
  jump_75ccb:
    mov    0x6c(%esp),%ebp
    mov    %ecx,%eax
    mov    %bl,(%esi)
    call   func_7616e
    inc    %esi
    inc    %ebp
    mov    %eax,%ebx
    mov    %ebp,0x6c(%esp)
    cmp    $0xffffffff,%eax
    je     jump_75e91
  jump_75ce9:
    mov    %bl,%al
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_860c8(%eax)
    jne    jump_75d04
    cmp    $0x2e,%ebx
    jne    jump_75e8a
  jump_75d04:
    xor    %eax,%eax
    mov    %eax,0x68(%esp)
    mov    %eax,0x5c(%esp)
    mov    %bl,%al
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_860c8(%eax)
    je     jump_75d64
    movl   $0x1,0x5c(%esp)
  jump_75d28:
    mov    %bl,(%esi)
    mov    0x10(%ecx),%al
    inc    %esi
    test   $0x10,%al
    je     jump_75d41
    imul   $0xa,0x6a(%esp),%eax
    add    %eax,%ebx
    sub    $0x30,%ebx
    mov    %bx,0x6a(%esp)
  jump_75d41:
    mov    %ecx,%eax
    inc    %edi
    call   func_7616e
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_75e91
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_860c8(%eax)
    jne    jump_75d28
  jump_75d64:
    cmp    $0x2e,%ebx
    jne    jump_75e0a
    mov    %ecx,%eax
    mov    %bl,(%esi)
    call   func_7616e
    inc    %esi
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_75e91
    cmpl   $0x0,0x5c(%esp)
    jne    jump_75d9f
    mov    %bl,%al
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_860c8(%eax)
    je     jump_75e8a
  jump_75d9f:
    inc    %edi
  jump_75da0:
    mov    %bl,%al
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_860c8(%eax)
    je     jump_75dc4
    inc    %edi
    mov    %ecx,%eax
    mov    %bl,(%esi)
    call   func_7616e
    inc    %esi
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    jne    jump_75da0
  jump_75dc4:
    testb  $0x10,0x10(%ecx)
    je     jump_75e01
    xor    %edx,%edx
    mov    %esi,%ebp
    mov    %edx,0x64(%esp)
  jump_75dd2:
    dec    %ebp
    mov    0x0(%ebp),%al
    cmp    $0x2e,%al
    je     jump_75df8
    sub    $0x30,%al
    movl   $0xa,0x60(%esp)
    mov    %al,0x66(%esp)
    xor    %edx,%edx
    mov    0x64(%esp),%eax
    divl   0x60(%esp)
    mov    %eax,0x64(%esp)
    jmp    jump_75dd2
  jump_75df8:
    mov    0x64(%esp),%eax
    mov    %ax,0x68(%esp)
  jump_75e01:
    cmp    $0xffffffff,%ebx
    je     jump_75e91
  jump_75e0a:
    testb  $0x10,0x10(%ecx)
    jne    jump_75e8a
    cmp    $0x65,%ebx
    je     jump_75e22
    cmp    $0x45,%ebx
    jne    jump_75e8a
  jump_75e22:
    inc    %edi
    mov    %ecx,%eax
    mov    %bl,(%esi)
    call   func_7616e
    inc    %esi
    mov    %eax,%ebp
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_75e91
    cmp    $0x2b,%eax
    je     jump_75e40
    cmp    $0x2d,%eax
    jne    jump_75e52
  jump_75e40:
    inc    %edi
    mov    %ecx,%eax
    mov    %bl,(%esi)
    call   func_7616e
    inc    %esi
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_75e91
  jump_75e52:
    mov    %bl,%al
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_860c8(%eax)
    jne    jump_75e68
    xor    %edi,%edi
    jmp    jump_75e8a
  jump_75e68:
    inc    %edi
    mov    %ecx,%eax
    mov    %bl,(%esi)
    call   func_7616e
    inc    %esi
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_75e91
    inc    %al
    and    $0xff,%eax
    testb  $0x20,data_860c8(%eax)
    jne    jump_75e68
  jump_75e8a:
    mov    %ebx,%eax
    mov    %ecx,%edx
    call   *0x4(%ecx)
  jump_75e91:
    test   %edi,%edi
    jle    jump_75f44
    add    0x6c(%esp),%edi
    testb  $0x1,0x10(%ecx)
    je     jump_75f44
    movb   $0x0,(%esi)
    testb  $0x10,0x10(%ecx)
    je     jump_75ebc
    cmpb   $0x2d,(%esp)
    jne    jump_75ec8
    negl   0x68(%esp)
    jmp    jump_75ec8
  jump_75ebc:
    mov    %esp,%eax
    lea    0x50(%esp),%edx
    call   *data_89b48
  jump_75ec8:
    mov    0x10(%ecx),%ah
    test   $0x4,%ah
    je     jump_75ee0
    mov    0x58(%esp),%eax
    mov    (%eax),%ebx
    add    $0x8,%ebx
    mov    %ebx,(%eax)
    les    -0x8(%ebx),%ebx
    jmp    jump_75f0b
  jump_75ee0:
    test   $0x8,%ah
    je     jump_75ef9
    mov    0x58(%esp),%eax
    mov    (%eax),%edx
    add    $0x4,%edx
    mov    %edx,(%eax)
    mov    %ds,%eax
    mov    %eax,%es
    mov    -0x4(%edx),%ebx
    jmp    jump_75f0b
  jump_75ef9:
    mov    0x58(%esp),%eax
    mov    (%eax),%ebp
    add    $0x4,%ebp
    mov    %ebp,(%eax)
    mov    %ds,%eax
    mov    %eax,%es
    mov    -0x4(%ebp),%ebx
  jump_75f0b:
    mov    0x10(%ecx),%dh
    test   $0x10,%dh
    je     jump_75f19
    mov    0x68(%esp),%eax
    jmp    jump_75f41
  jump_75f19:
    test   $0x20,%dh
    jne    jump_75f23
    test   $0x40,%dh
    je     jump_75f34
  jump_75f23:
    mov    0x50(%esp),%eax
    mov    %eax,%es:(%ebx)
    mov    0x54(%esp),%eax
    mov    %eax,%es:0x4(%ebx)
    jmp    jump_75f44
  jump_75f34:
    mov    0x50(%esp),%eax
    mov    0x54(%esp),%edx
    call   func_7bc42
  jump_75f41:
    mov    %eax,%es:(%ebx)
  jump_75f44:
    mov    %edi,%eax
    add    $0x70,%esp
    pop    %ebp
    jmp    jump_759f6


/*----------------------------------------------------------------*/
func_75f4f:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    sub    $0x10,%esp
    mov    %eax,%esi
    mov    %edx,0xc(%esp)
    mov    %ebx,%edi
    mov    %ecx,0x4(%esp)
    xor    %edx,%edx
    xor    %ebx,%ebx
    xor    %ebp,%ebp
    mov    %edx,0x8(%esp)
  jump_75f6c:
    mov    %esi,%eax
    call   *(%esi)
    mov    %eax,%edx
    inc    %al
    and    $0xff,%eax
    testb  $0x2,data_860c8(%eax)
    je     jump_75f85
    inc    %ebp
    jmp    jump_75f6c
  jump_75f85:
    testb  $0x2,0x10(%esi)
    jne    jump_760c5
    mov    0xc(%esi),%eax
    lea    -0x1(%eax),%ecx
    mov    %ecx,0xc(%esi)
    test   %eax,%eax
    je     jump_760be
    mov    $0x2b,%ecx
    mov    0x4(%esp),%eax
    mov    %ecx,(%esp)
    test   %eax,%eax
    je     jump_75fd0
    cmp    $0x2b,%edx
    je     jump_75fba
    cmp    $0x2d,%edx
    jne    jump_75fd0
  jump_75fba:
    mov    %edx,(%esp)
    mov    %esi,%eax
    inc    %ebp
    call   func_7616e
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_760c5
  jump_75fd0:
    test   %edi,%edi
    jne    jump_76028
    cmp    $0x30,%edx
    jne    jump_76021
    mov    %esi,%eax
    mov    $0x1,%ebx
    call   func_7616e
    mov    %eax,%ecx
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_760c5
    cmp    $0x78,%eax
    je     jump_75ffc
    cmp    $0x58,%eax
    jne    jump_7601a
  jump_75ffc:
    mov    %esi,%eax
    add    $0x2,%ebp
    call   func_7616e
    xor    %ebx,%ebx
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_760c5
    mov    $0x10,%edi
    jmp    jump_76068
  jump_7601a:
    mov    $0x8,%edi
    jmp    jump_76068
  jump_76021:
    mov    $0xa,%edi
    jmp    jump_76068
  jump_76028:
    cmp    $0x10,%edi
    jne    jump_76068
    cmp    $0x30,%edx
    jne    jump_76068
    mov    %esi,%eax
    mov    $0x1,%ebx
    call   func_7616e
    mov    %eax,%ecx
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_760c5
    cmp    $0x78,%eax
    je     jump_76055
    cmp    $0x58,%eax
    jne    jump_76068
  jump_76055:
    mov    %esi,%eax
    add    $0x2,%ebp
    call   func_7616e
    xor    %ebx,%ebx
  jump_76061:
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_760c5
  jump_76068:
    mov    %edx,%eax
    call   func_76147
    cmp    %edi,%eax
    jge    jump_7608a
    mov    0x8(%esp),%edx
    imul   %edi,%edx
    inc    %ebx
    add    %eax,%edx
    mov    %esi,%eax
    mov    %edx,0x8(%esp)
    call   func_7616e
    jmp    jump_76061
  jump_7608a:
    cmp    $0x3a,%edx
    jne    jump_760be
    testb  $0x80,0x10(%esi)
    je     jump_760be
  jump_76095:
    mov    %esi,%eax
    inc    %ebx
    call   func_7616e
    mov    %eax,%ecx
    mov    %eax,%edx
    cmp    $0xffffffff,%eax
    je     jump_760c5
    call   func_76147
    cmp    %edi,%eax
    jge    jump_760be
    mov    0x8(%esp),%edx
    imul   %edi,%edx
    add    %eax,%edx
    mov    %edx,0x8(%esp)
    jmp    jump_76095
  jump_760be:
    mov    %edx,%eax
    mov    %esi,%edx
    call   *0x4(%esi)
  jump_760c5:
    cmpl   $0x2d,(%esp)
    jne    jump_760cf
    negl   0x8(%esp)
  jump_760cf:
    test   %ebx,%ebx
    jle    jump_7613d
    mov    0x10(%esi),%ah
    add    %ebp,%ebx
    test   $0x1,%ah
    je     jump_7613d
    test   $0x4,%ah
    je     jump_760f6
    mov    0xc(%esp),%eax
    mov    (%eax),%edx
    add    $0x8,%edx
    mov    %edx,(%eax)
    les    -0x8(%edx),%eax
    jmp    jump_76121
  jump_760f6:
    test   $0x8,%ah
    je     jump_7610f
    mov    0xc(%esp),%eax
    mov    (%eax),%ebp
    add    $0x4,%ebp
    mov    %ds,%edx
    mov    %ebp,(%eax)
    mov    %edx,%es
    mov    -0x4(%ebp),%eax
    jmp    jump_76121
  jump_7610f:
    mov    0xc(%esp),%eax
    mov    (%eax),%edi
    add    $0x4,%edi
    mov    %ds,%edx
    mov    %edi,(%eax)
    mov    %edx,%es
    mov    -0x4(%edi),%eax
  jump_76121:
    mov    0x10(%esi),%cl
    test   $0x10,%cl
    je     jump_76133
    mov    0x8(%esp),%edx
    mov    %dx,%es:(%eax)
    jmp    jump_7613d
  jump_76133:
    test   $0x20,%cl
    mov    0x8(%esp),%edx
    mov    %edx,%es:(%eax)
  jump_7613d:
    mov    %ebx,%eax
    add    $0x10,%esp
    pop    %ebp
    pop    %es
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_76147:
/*----------------------------------------------------------------*/
    cmp    $0x30,%eax
    jl     jump_76155
    cmp    $0x39,%eax
    jg     jump_76155
    sub    $0x30,%eax
    ret
  jump_76155:
    call   func_765be
    cmp    $0x61,%eax
    jl     jump_76168
    cmp    $0x66,%eax
    jg     jump_76168
    sub    $0x57,%eax
    ret
  jump_76168:
    mov    $0x10,%eax
    ret


/*----------------------------------------------------------------*/
func_7616e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    0xc(%eax),%eax
    lea    -0x1(%eax),%ebx
    mov    %ebx,0xc(%edx)
    test   %eax,%eax
    je     jump_76189
    mov    %edx,%eax
    call   *(%edx)
    testb  $0x2,0x10(%edx)
    je     jump_7618e
  jump_76189:
    mov    $0xffffffff,%eax
  jump_7618e:
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76192:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    data_1227ec,%esi
    test   %esi,%esi
    je     jump_761ba
    mov    0x4(%esi),%ecx
    mov    0xc(%ecx),%edi
    mov    (%esi),%eax
    and    $0x4003,%edi
    mov    %eax,data_1227ec
    or     $0x3,%di
    jmp    jump_76203
  jump_761ba:
    mov    $data_89884,%ecx
    jmp    jump_761e1
  jump_761c1:
    testb  $0x3,0xc(%ecx)
    jne    jump_761de
    mov    $0x8,%eax
    call   func_73af4
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_76228
    mov    $0x3,%edi
    jmp    jump_76203
  jump_761de:
    add    $0x1a,%ecx
  jump_761e1:
    cmp    $data_89a8c,%ecx
    jb     jump_761c1
    mov    $0x22,%eax
    mov    $0x4003,%edi
    call   func_73af4
    mov    %eax,%ecx
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_76228
    lea    0x8(%eax),%ecx
  jump_76203:
    mov    $0x1a,%ebx
    mov    %ecx,%eax
    xor    %edx,%edx
    call   func_72280
    mov    %edi,0xc(%ecx)
    mov    data_1227e8,%eax
    mov    %ecx,0x4(%esi)
    mov    %esi,data_1227e8
    mov    %eax,(%esi)
    mov    %ecx,%eax
    jmp    jump_76234
  jump_76228:
    mov    $0x5,%eax
    call   func_76588
    xor    %eax,%eax
  jump_76234:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7623a:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ebx
    mov    $data_1227e8,%edx
  jump_76244:
    mov    (%edx),%eax
    test   %eax,%eax
    je     jump_7626f
    mov    0x4(%eax),%ecx
    cmp    %ecx,%ebx
    je     jump_76255
    mov    %eax,%edx
    jmp    jump_76244
  jump_76255:
    mov    0xc(%ecx),%cl
    or     $0x3,%cl
    mov    %cl,0xc(%ebx)
    mov    (%eax),%ebx
    mov    %ebx,(%edx)
    mov    data_1227ec,%edx
    mov    %eax,data_1227ec
    mov    %edx,(%eax)
  jump_7626f:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_76273:
    push   %edx
  jump_76274:
    mov    data_1227ec,%edx
    test   %edx,%edx
    je     jump_7628f
    mov    %edx,%eax
    mov    (%edx),%edx
    call   func_73bef
    mov    %edx,data_1227ec
    jmp    jump_76274
  jump_7628f:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_76291:
/*----------------------------------------------------------------*/
    mov    data_897d4,%eax
    ret


/*----------------------------------------------------------------*/
func_76297:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    mov    0xd(%eax),%ah
    xor    %esi,%esi
    test   $0x10,%ah
    je     jump_76304
    mov    0xd(%ecx),%bh
    and    $0xef,%bh
    mov    0xc(%ecx),%al
    mov    %bh,0xd(%ecx)
    test   $0x2,%al
    je     jump_76343
    cmpl   $0x0,0x8(%ecx)
    je     jump_76343
    mov    0x4(%ecx),%ebx
    mov    0x8(%ecx),%edx
    mov    0x10(%ecx),%eax
    call   func_7bd69
    cmp    $0xffffffff,%eax
    jne    jump_762e5
    mov    0xc(%ecx),%dl
    or     $0x20,%dl
    mov    %eax,%esi
    mov    %dl,0xc(%ecx)
    jmp    jump_76343
  jump_762e5:
    cmp    0x4(%ecx),%eax
    je     jump_76343
    mov    $0xc,%eax
    call   func_76588
    mov    0xc(%ecx),%ah
    or     $0x20,%ah
    mov    $0xffffffff,%esi
    mov    %ah,0xc(%ecx)
    jmp    jump_76343
  jump_76304:
    cmpl   $0x0,0x8(%ecx)
    je     jump_76343
    mov    0xc(%ecx),%dl
    and    $0xef,%dl
    mov    0xd(%ecx),%dh
    mov    %dl,0xc(%ecx)
    test   $0x20,%dh
    jne    jump_76343
    mov    0x4(%ecx),%eax
    test   %eax,%eax
    je     jump_76333
    mov    %eax,%edx
    mov    $0x1,%ebx
    neg    %edx
    mov    0x10(%ecx),%eax
    call   func_72df0
  jump_76333:
    cmp    $0xffffffff,%eax
    jne    jump_76343
    mov    0xc(%ecx),%bl
    or     $0x20,%bl
    mov    %eax,%esi
    mov    %bl,0xc(%ecx)
  jump_76343:
    mov    0x8(%ecx),%eax
    movl   $0x0,0x4(%ecx)
    mov    %eax,(%ecx)
    mov    %esi,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76356:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    %eax,%ebx
    mov    $0x3e,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    test   %eax,%eax
    jl     jump_76376
    mov    %edx,%eax
    xor    %edx,%edx
    call   func_76652
    xor    %eax,%eax
    pop    %edx
    pop    %ebx
    ret
  jump_76376:
    mov    $0x4,%eax
    call   func_76588
    mov    $0xffffffff,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76388:
/*----------------------------------------------------------------*/
    jmp    jump_7bde5


/*----------------------------------------------------------------*/
func_76390:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    call   func_7bedd
    mov    %eax,%ebx
    test   %eax,%eax
    je     jump_763d4
    cmpl   $0x0,(%eax)
    jne    jump_763d4
    mov    0x4(%edx),%ecx
    cmp    0x9(%edx),%ecx
    jne    jump_763b6
    jmp    jump_763d4
  jump_763af:
    call   func_7bf87
    jmp    jump_763d4
  jump_763b6:
    mov    0x4(%eax),%eax
    mov    (%eax),%ax
    cmp    $0x2,%ax
    jb     jump_763af
    cmp    $0x4,%ax
    jbe    jump_763d4
    cmp    $0x5,%ax
    jbe    jump_763af
    cmp    $0xb,%ax
    ja     jump_763af
  jump_763d4:
    mov    %ebx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_763da:
/*----------------------------------------------------------------*/
    push   %esi
    mov    %eax,%esi
    mov    0x2(%eax),%eax
    add    %ebx,%eax
    movzbl 0x4(%eax),%ebx
    test   %ecx,%ebx
    jne    jump_763f2
    mov    (%eax),%eax
    add    0x6(%esi),%eax
    call   *0xa(%esi)
  jump_763f2:
    pop    %esi
    ret

vtable_763f4:
    .long   func_76462
    .long   func_7645d
    .long   func_764c5
    .long   func_764c5
    .long   func_764c5
    .long   func_7645d
    .long   func_76483
    .long   func_76498
    .long   func_7649f
    .long   func_764ac
    .long   func_764bc
    .long   func_7650a


/*----------------------------------------------------------------*/
func_76424:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x18,%esp
    push   %eax
    mov    %edx,%edi
    lea    0x4(%esp),%eax
    call   func_7be32
    mov    (%esp),%eax
    mov    %eax,0xd(%esp)
    test   %ebx,%ebx
    je     jump_7644b
    lea    0x4(%esp),%eax
    call   func_7be53
  jump_7644b:
    lea    0x4(%esp),%eax
    mov    0x4(%edi),%ebp
    call   func_76390
    mov    %eax,0x14(%esp)
    jmp    func_764c5


/*----------------------------------------------------------------*/
func_7645d:
/*----------------------------------------------------------------*/
    call   func_7bf87


/*----------------------------------------------------------------*/
func_76462:
/*----------------------------------------------------------------*/
    mov    0x0(%ebp),%eax
    mov    data_12281c(,%eax,4),%ecx
    mov    %ebx,%edx
    mov    %edi,%eax
    call   *0x4(%ecx)
    mov    0xa(%esi),%ebx
    mov    0x6(%esi),%edx
    add    0x2(%esi),%eax
  jump_7647c:
    call   func_729cc
    jmp    func_764c5


/*----------------------------------------------------------------*/
func_76483:
/*----------------------------------------------------------------*/
    mov    $0x11,%ecx
  jump_76488:
    mov    $0x1,%edx
    mov    %edi,%ebx
    mov    %esi,%eax
  jump_76491:
    call   func_763da
    jmp    func_764c5


/*----------------------------------------------------------------*/
func_76498:
/*----------------------------------------------------------------*/
    mov    $0x10,%ecx
    jmp    jump_76488


/*----------------------------------------------------------------*/
func_7649f:
/*----------------------------------------------------------------*/
    mov    $0x10,%ecx
    mov    %edi,%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    jmp    jump_76491


/*----------------------------------------------------------------*/
func_764ac:
/*----------------------------------------------------------------*/
    mov    0x2(%esi),%eax
    mov    0x4(%edi,%eax,1),%ebx
    mov    0x8(%edi,%eax,1),%edx
    mov    (%edi,%eax,1),%eax
    jmp    jump_7647c


/*----------------------------------------------------------------*/
func_764bc:
/*----------------------------------------------------------------*/
    mov    0x2(%esi),%eax
  jump_764bf:
    mov    (%edi,%eax,1),%eax
    call   *0x6(%esi)


/*----------------------------------------------------------------*/
func_764c5:
/*----------------------------------------------------------------*/
    mov    0x8(%esp),%eax
    cmp    (%esp),%eax
    je     jump_76549
    jae    jump_764d9
    call   func_7bf87
  jump_764d9:
    lea    0x4(%esp),%eax
    mov    0x8(%esp),%ebx
    call   func_7be58
    lea    0x4(%esp),%eax
    mov    0x14(%esp),%edx
    call   func_76390
    mov    %eax,0x14(%esp)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%edi)
    mov    (%edx),%eax
    mov    %eax,0x18(%esp)
    test   %eax,%eax
    je     jump_76512
    jmp    jump_7652d


/*----------------------------------------------------------------*/
func_7650a:
/*----------------------------------------------------------------*/
    mov    0x2(%esi),%eax
    mov    0xa(%esi),%edx
    jmp    jump_764bf
  jump_76512:
    mov    0x4(%edx),%esi
    mov    (%esi),%ax
    cmp    $0xb,%ax
    ja     func_7645d
    movzwl %ax,%eax
    jmp    *%cs:vtable_763f4(,%eax,4)
  jump_7652d:
    mov    0x0(%ebp),%esi
    mov    data_12281c(,%esi,4),%esi
    mov    %ebx,%edx
    mov    %edi,%eax
    call   *0x4(%esi)
    xor    %edx,%edx
    call   *0x18(%esp)
    jmp    func_764c5
  jump_76549:
    mov    %eax,0x8(%edi)
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_76554:
/*----------------------------------------------------------------*/
    push   %ebx
    xor    %ebx,%ebx
    call   func_76424
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7655e:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    push   %ebx
    push   %edx
    mov    data_1227f8,%edx
    xor    %ebx,%ebx
    call   func_76424
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76583:
/*----------------------------------------------------------------*/
    mov    $0xd,%eax


/*----------------------------------------------------------------*/
func_76588:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_72e47
    mov    %edx,(%eax)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_76594:
/*----------------------------------------------------------------*/
    mov    $0xe,%eax
    jmp    func_76588


/*----------------------------------------------------------------*/
func_765ab:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    call   func_72e4d
    mov    %edx,(%eax)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_765be:
/*----------------------------------------------------------------*/
    cmp    $0x41,%eax
    jl     jump_765cb
    cmp    $0x5a,%eax
    jg     jump_765cb
    add    $0x20,%eax
  jump_765cb:
    ret


/*----------------------------------------------------------------*/
func_765cc:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    testb  $0x20,0xd(%eax)
    jne    jump_765f9
    mov    0x10(%edx),%eax
    call   func_74200
    test   %eax,%eax
    je     jump_765f9
    mov    0xd(%edx),%bl
    or     $0x20,%bl
    mov    %bl,0xd(%edx)
    test   $0x7,%bl
    jne    jump_765f9
    mov    %bl,%cl
    or     $0x2,%cl
    mov    %cl,0xd(%edx)
  jump_765f9:
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_765fd:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    cmp    data_89814,%eax
    jb     jump_76610
    xor    %eax,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_76610:
    cmp    $0x5,%eax
    jg     jump_76646
    mov    %eax,%ebx
    mov    data_89868,%eax
    shl    $0x2,%ebx
    add    %ebx,%eax
    mov    0x1(%eax),%cl
    test   $0x40,%cl
    jne    jump_76646
    mov    %cl,%ch
    or     $0x40,%ch
    mov    %ch,0x1(%eax)
    mov    %edx,%eax
    call   func_74200
    test   %eax,%eax
    je     jump_76646
    mov    data_89868,%eax
    orb    $0x20,0x1(%ebx,%eax,1)
  jump_76646:
    mov    data_89868,%eax
    mov    (%eax,%edx,4),%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76652:
/*----------------------------------------------------------------*/
    push   %ebx
    or     $0x40,%dh
    mov    %edx,%ebx
    mov    %eax,%edx
    mov    data_89868,%eax
    shl    $0x2,%edx
    mov    %ebx,(%edx,%eax,1)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76667:
/*----------------------------------------------------------------*/
    test   %edx,%edx
    jne    func_7666e
    xor    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_7666e:
/*----------------------------------------------------------------*/
    test   %edx,%edx
    jne    func_76673
    ret


/*----------------------------------------------------------------*/
func_76673:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    %al,%bl
    xor    %eax,%eax
    mov    %dl,%al
    call   func_765ab
    cmp    $0x100,%edx
    jae    jump_766c2
    cmpb   $0x3,data_897ff
    jb     jump_766ac
    cmp    $0x50,%dl
    jne    jump_7669c
    mov    $0xe,%bl
    jmp    jump_766ac
  jump_7669c:
    cmp    $0x22,%dl
    jb     jump_766a5
    mov    $0x13,%bl
    jmp    jump_766ac
  jump_766a5:
    cmp    $0x20,%dl
    jb     jump_766ac
    mov    $0x5,%bl
  jump_766ac:
    cmp    $0x13,%bl
    jbe    jump_766b3
    mov    $0x13,%bl
  jump_766b3:
    xor    %edx,%edx
    mov    %bl,%dl
    mov    data_89869(%edx),%eax
    sar    $0x18,%eax
    jmp    jump_766cc
  jump_766c2:
    mov    %edx,%eax
    shr    $0x8,%eax
    and    $0xff,%eax
  jump_766cc:
    call   func_76588
    mov    $0xffffffff,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_766da:
/*----------------------------------------------------------------*/
    jae    jump_766ea
    and    $0xffff,%eax
    push   %eax
    call   func_76673
    pop    %eax
    jmp    jump_766ec
  jump_766ea:
    sub    %eax,%eax
  jump_766ec:
    ret
  jump_766ed:
    call   *data_89a98
    push   %edx
    mov    $data_85494,%eax
    mov    $0xff,%edx
    call   func_777af
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_76705:
/*----------------------------------------------------------------*/
    mov    %esp,%eax
    sub    data_897d8,%eax
    ret


/*----------------------------------------------------------------*/
func_7670e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%edx
    testb  $0x1,0xc(%eax)
    jne    jump_76734
    mov    $0x4,%eax
    call   func_76588
    mov    0xc(%edx),%bl
    or     $0x20,%bl
    mov    $0xffffffff,%eax
    mov    %bl,0xc(%edx)
    jmp    jump_76754
  jump_76734:
    mov    0x4(%edx),%ebx
    dec    %ebx
    mov    %ebx,0x4(%edx)
    test   %ebx,%ebx
    jge    jump_76748
    mov    %edx,%eax
    call   func_76797
    jmp    jump_76754
  jump_76748:
    mov    (%edx),%ebx
    mov    (%ebx),%al
    inc    %ebx
    and    $0xff,%eax
    mov    %ebx,(%edx)
  jump_76754:
    testb  $0x40,0xc(%edx)
    jne    jump_76792
    cmp    $0xd,%eax
    jne    jump_7677f
    mov    0x4(%edx),%esi
    dec    %esi
    mov    %esi,0x4(%edx)
    test   %esi,%esi
    jge    jump_76773
    mov    %edx,%eax
    call   func_76797
    jmp    jump_7677f
  jump_76773:
    mov    (%edx),%ebx
    mov    (%ebx),%al
    inc    %ebx
    and    $0xff,%eax
    mov    %ebx,(%edx)
  jump_7677f:
    cmp    $0x1a,%eax
    jne    jump_76792
    mov    0xc(%edx),%cl
    or     $0x10,%cl
    mov    $0xffffffff,%eax
    mov    %cl,0xc(%edx)
  jump_76792:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76797:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%edx
    call   func_767c6
    test   %eax,%eax
    jne    jump_767ae
    mov    $0xffffffff,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_767ae:
    mov    0x4(%edx),%ebx
    mov    (%edx),%ecx
    dec    %ebx
    inc    %ecx
    mov    %ebx,0x4(%edx)
    mov    %ecx,(%edx)
    mov    -0x1(%ecx),%al
    and    $0xff,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_767c6:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    cmpl   $0x0,0x8(%eax)
    jne    jump_767d7
    call   func_78473
  jump_767d7:
    mov    0xd(%ecx),%ah
    test   $0x20,%ah
    je     jump_767ee
    test   $0x6,%ah
    je     jump_767ee
    mov    $0x2000,%eax
    call   func_7c64a
  jump_767ee:
    mov    0xc(%ecx),%edx
    mov    0xc(%ecx),%bl
    mov    0x8(%ecx),%eax
    and    $0xfb,%bl
    mov    %eax,(%ecx)
    and    $0x2400,%edx
    mov    %bl,0xc(%ecx)
    cmp    $0x2400,%edx
    jne    jump_7682e
    mov    0x10(%ecx),%ebx
    test   %ebx,%ebx
    jne    jump_7682e
    mov    %ebx,0x4(%ecx)
    call   func_7c679
    cmp    $0xffffffff,%eax
    je     jump_7684b
    mov    (%ecx),%ebx
    mov    %al,(%ebx)
    movl   $0x1,0x4(%ecx)
    jmp    jump_7684b
  jump_7682e:
    testb  $0x4,0xd(%ecx)
    je     jump_7683b
    mov    $0x1,%ebx
    jmp    jump_7683e
  jump_7683b:
    mov    0x14(%ecx),%ebx
  jump_7683e:
    mov    (%ecx),%edx
    mov    0x10(%ecx),%eax
    call   func_784ea
    mov    %eax,0x4(%ecx)
  jump_7684b:
    mov    0x4(%ecx),%esi
    test   %esi,%esi
    jg     jump_76869
    jne    jump_7685a
    orb    $0x10,0xc(%ecx)
    jmp    jump_76869
  jump_7685a:
    mov    0xc(%ecx),%al
    movl   $0x0,0x4(%ecx)
    or     $0x20,%al
    mov    %al,0xc(%ecx)
  jump_76869:
    mov    0x4(%ecx),%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_76871:
    push   %ebx
    push   %esi
    push   %ebp
    mov    %eax,%ebx
    cmp    $0xffffffff,%eax
    je     jump_768ed
    testb  $0x10,0xd(%edx)
    je     jump_7688c
  jump_76885:
    mov    $0xffffffff,%ebx
    jmp    jump_768ed
  jump_7688c:
    testb  $0x1,0xc(%edx)
    je     jump_76885
    cmpl   $0x0,0x8(%edx)
    jne    jump_7689f
    mov    %edx,%eax
    call   func_78473
  jump_7689f:
    mov    0x4(%edx),%esi
    test   %esi,%esi
    jne    jump_768be
    mov    0x8(%edx),%eax
    add    0x14(%edx),%eax
    dec    %eax
    mov    %eax,(%edx)
    orb    $0x4,0xc(%edx)
    mov    (%edx),%eax
    movl   $0x1,0x4(%edx)
    jmp    jump_768e1
  jump_768be:
    mov    (%edx),%eax
    cmp    0x8(%edx),%eax
    je     jump_76885
    mov    (%edx),%eax
    lea    0x1(%esi),%ebp
    dec    %eax
    mov    %ebp,0x4(%edx)
    mov    %eax,(%edx)
    mov    (%eax),%al
    and    $0xff,%eax
    cmp    %ebx,%eax
    je     jump_768df
    orb    $0x4,0xc(%edx)
  jump_768df:
    mov    (%edx),%eax
  jump_768e1:
    mov    %bl,(%eax)
    andb   $0xef,0xc(%edx)
    and    $0xff,%ebx
  jump_768ed:
    mov    %ebx,%eax
    pop    %ebp
    pop    %esi
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_768f3:
/*----------------------------------------------------------------*/
    push   %edx
    sub    $0x1c,%esp
    mov    $0x2c,%ah
    mov    %esp,%edx
    mov    %ah,0x1(%esp)
    mov    %esp,%eax
    call   func_7c696
    xor    %edx,%edx
    mov    0x9(%esp),%dl
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    xor    %edx,%edx
    shl    $0x2,%eax
    mov    0x8(%esp),%dl
    add    %eax,%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    %eax,%edx
    xor    %eax,%eax
    shl    $0x2,%edx
    mov    0xd(%esp),%al
    add    %eax,%edx
    mov    %edx,%eax
    shl    $0x2,%eax
    sub    %edx,%eax
    shl    $0x3,%eax
    add    %eax,%edx
    xor    %eax,%eax
    shl    $0x2,%edx
    mov    0xc(%esp),%al
    add    %edx,%eax
    add    $0x1c,%esp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7694e:
/*----------------------------------------------------------------*/
    call   func_768f3
    mov    %eax,data_1227f0
    ret
  jump_76959:
    push   %ebx
    push   %edx
    call   func_768f3
    mov    data_1227f0,%ebx
    mov    %eax,%edx
    cmp    %ebx,%eax
    jae    jump_76971
    add    $0x83d600,%eax
  jump_76971:
    sub    data_1227f0,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7697a:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %eax,%ebx
    mov    %edx,%eax
    mov    (%ebx),%edx
    call   func_7c6e2
    incl   0x10(%ebx)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7698b:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%esi
    mov    0xc(%eax),%ebp
    mov    0xc(%eax),%ah
    mov    0x8(%esi),%ecx
    and    $0xcf,%ah
    and    $0x30,%ebp
    mov    %ah,0xc(%esi)
    test   %ecx,%ecx
    jne    jump_769ae
    mov    %esi,%eax
    call   func_78473
  jump_769ae:
    mov    0xd(%esi),%cl
    xor    %edi,%edi
    test   $0x4,%cl
    je     jump_769cc
    mov    %cl,%ch
    and    $0xfa,%ch
    mov    %ch,%al
    mov    %ch,0xd(%esi)
    or     $0x1,%al
    mov    $0x1,%edi
    mov    %al,0xd(%esi)
  jump_769cc:
    mov    $func_7697a,%ecx
    mov    %esi,%eax
    call   func_74795
    mov    %eax,%edx
    test   %edi,%edi
    je     jump_769f6
    mov    0xd(%esi),%ah
    and    $0xfa,%ah
    mov    %ah,%bl
    mov    %ah,0xd(%esi)
    or     $0x4,%bl
    mov    %esi,%eax
    mov    %bl,0xd(%esi)
    call   func_76297
  jump_769f6:
    testb  $0x20,0xc(%esi)
    je     jump_76a01
    mov    $0xffffffff,%edx
  jump_76a01:
    mov    0xc(%esi),%edi
    or     %ebp,%edi
    mov    %edx,%eax
    mov    %edi,0xc(%esi)
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_76a10:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0xc,%esp
    mov    %eax,%ebx
    mov    $0x2a,%ah
    int    $0x21
    sub    $0x76c,%cx
    mov    %al,%ch
    shl    $0x10,%ecx
    mov    %dx,%cx
    mov    %ecx,0x4(%esp)
    xor    %eax,%eax
    mov    0x6(%esp),%al
    mov    %eax,0x14(%ebx)
    xor    %eax,%eax
    mov    0x5(%esp),%al
    dec    %eax
    mov    %eax,0x10(%ebx)
    xor    %eax,%eax
    mov    0x4(%esp),%al
    mov    %eax,0xc(%ebx)
    mov    $0x2c,%ah
    int    $0x21
    shl    $0x10,%ecx
    mov    %dx,%cx
    mov    %ecx,(%esp)
    xor    %eax,%eax
    mov    0x3(%esp),%al
    xor    %edx,%edx
    mov    %eax,0x8(%ebx)
    xor    %eax,%eax
    mov    (%esp),%dl
    mov    0x2(%esp),%al
    mov    %edx,%esi
    mov    %eax,0x4(%ebx)
    xor    %eax,%eax
    shl    $0x2,%esi
    mov    0x1(%esp),%al
    add    %edx,%esi
    mov    %eax,(%ebx)
    mov    $0x2a,%ah
    int    $0x21
    sub    $0x76c,%cx
    mov    %al,%ch
    shl    $0x10,%ecx
    mov    %dx,%cx
    mov    %ecx,0x8(%esp)
    mov    0x4(%esp),%ah
    mov    0x8(%esp),%al
    add    %esi,%esi
    cmp    %ah,%al
    je     jump_76ac2
    cmpl   $0x17,0x8(%ebx)
    je     jump_76ac2
    xor    %eax,%eax
    mov    0xa(%esp),%al
    mov    %eax,0x14(%ebx)
    xor    %eax,%eax
    mov    0x9(%esp),%al
    dec    %eax
    mov    %eax,0x10(%ebx)
    xor    %eax,%eax
    mov    0x8(%esp),%al
    mov    %eax,0xc(%ebx)
  jump_76ac2:
    mov    %esi,%eax
    movl   $0xffffffff,0x20(%ebx)
    add    $0xc,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76ad3:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebp
    mov    $0xc,%esi
    mov    0x10(%ebp),%edx
    mov    0x10(%eax),%eax
    sar    $0x1f,%edx
    idiv   %esi
    mov    $data_861d4,%ebx
    mov    0x14(%ebp),%esi
    mov    %edx,%edi
    cmp    $0xf4fb7ea1,%esi
    jge    jump_76b07
  jump_76afd:
    mov    $0xffffffff,%eax
    jmp    jump_76c20
  jump_76b07:
    mov    0x10(%ebp),%eax
    mov    %eax,%edx
    mov    $0xc,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    add    %eax,%esi
  jump_76b18:
    test   %edi,%edi
    jge    jump_76b22
    dec    %esi
    add    $0xc,%edi
    jmp    jump_76b18
  jump_76b22:
    test   %esi,%esi
    jl     jump_76afd
    lea    0x76c(%esi),%eax
    call   func_78048
    test   %eax,%eax
    je     jump_76b3a
    mov    $data_861ee,%ebx
  jump_76b3a:
    mov    %esi,%eax
    shl    $0x3,%eax
    add    %esi,%eax
    shl    $0x3,%eax
    add    %esi,%eax
    lea    0x3(%esi),%ecx
    mov    %eax,%edx
    shl    $0x2,%eax
    sar    $0x2,%ecx
    add    %edx,%eax
    lea    (%eax,%ecx,1),%edx
    movswl (%ebx,%edi,2),%eax
    mov    0xc(%ebp),%edi
    add    %edx,%eax
    add    %eax,%edi
    dec    %edi
    test   %esi,%esi
    je     jump_76b67
    dec    %edi
  jump_76b67:
    mov    0x8(%ebp),%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    mov    0x4(%ebp),%edx
    add    %eax,%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    0x0(%ebp),%esi
    shl    $0x2,%eax
    add    %eax,%esi
  jump_76b88:
    test   %esi,%esi
    jge    jump_76b95
    dec    %edi
    add    $0x15180,%esi
    jmp    jump_76b88
  jump_76b95:
    mov    %edi,%eax
    mov    %esi,%edx
    mov    %ebp,%ecx
    xor    %ebx,%ebx
    call   func_77f0a
    call   func_77c3a
    mov    data_89aec,%edx
    mov    0x20(%ebp),%ebx
    add    %edx,%esi
    test   %ebx,%ebx
    jge    jump_76bbd
    mov    %ebp,%eax
    call   func_78190
  jump_76bbd:
    cmpl   $0x0,0x20(%ebp)
    jle    jump_76bc9
    sub    data_89af0,%esi
  jump_76bc9:
    test   %esi,%esi
    jge    jump_76bd6
    dec    %edi
    add    $0x15180,%esi
    jmp    jump_76bc9
  jump_76bd6:
    cmp    $0x63de,%edi
    jl     jump_76afd
    jne    jump_76c00
    mov    data_89aec,%eax
    sub    $0x15180,%esi
    test   %eax,%eax
    jle    jump_76afd
    test   %esi,%esi
    jge    jump_76c1e
    jmp    jump_76afd
  jump_76c00:
    lea    -0x63df(%edi),%eax
    mov    %eax,%edi
    shl    $0x3,%edi
    sub    %eax,%edi
    shl    $0x5,%edi
    add    %eax,%edi
    shl    $0x7,%edi
    mov    %edi,%eax
    shl    $0x2,%edi
    sub    %eax,%edi
    add    %edi,%esi
  jump_76c1e:
    mov    %esi,%eax
  jump_76c20:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76c27:
/*----------------------------------------------------------------*/
    push   %edx
    push   %ebp
    mov    %esp,%ebp
    mov    data_897e0,%edx
    add    $0x3,%edx
    and    $0xfc,%dl
    call   func_76705
    cmp    %eax,%edx
    jae    jump_76c48
    mov    %edx,%eax
    sub    %eax,%esp
    mov    %esp,%eax
    jmp    jump_76c4a
  jump_76c48:
    xor    %eax,%eax
  jump_76c4a:
    mov    data_897e0,%edx
    add    %edx,%eax
    mov    %eax,data_897e4
    call   func_7c786
    mov    data_1228dc,%edx
    mov    data_1228d8,%eax
    call   func_1c424
    call   func_7350a
    mov    %ebp,%esp
    pop    %ebp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_76c76:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebx
    push   %edx
    push   %es
    mov    %eax,%edx
  jump_76c7d:
    ds mov $data_8a050,%esi
    ds mov $data_8a0c2,%edi
    mov    %edi,%ebx
    mov    %dl,%al
  jump_76c8d:
    cmp    %edi,%esi
    jae    jump_76ca5
    cmpb   $0x2,(%esi)
    je     jump_76ca0
    cmp    %al,0x1(%esi)
    ja     jump_76ca0
    mov    %esi,%ebx
    mov    0x1(%esi),%al
  jump_76ca0:
    add    $0x6,%esi
    jmp    jump_76c8d
  jump_76ca5:
    cmp    %edi,%ebx
    je     jump_76cbb
    mov    0x2(%ebx),%eax
    or     %eax,%eax
    je     jump_76cb6
    push   %ds
    pop    %es
    push   %edx
    call   *%eax
    pop    %edx
  jump_76cb6:
    movb   $0x2,(%ebx)
    jmp    jump_76c7d
  jump_76cbb:
    pop    %es
    pop    %edx
    pop    %ebx
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_76cc1:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebx
    push   %es
    mov    %dl,%dh
    mov    %al,%dl
  jump_76cc9:
    ds mov $data_8a0c2,%esi
    ds mov $data_8a0d4,%edi
    mov    %edi,%ebx
    mov    %dl,%al
  jump_76cd9:
    cmp    %edi,%esi
    jae    jump_76cf1
    cmpb   $0x2,(%esi)
    je     jump_76cec
    cmp    0x1(%esi),%al
    ja     jump_76cec
    mov    %esi,%ebx
    mov    0x1(%esi),%al
  jump_76cec:
    add    $0x6,%esi
    jmp    jump_76cd9
  jump_76cf1:
    cmp    %edi,%ebx
    je     jump_76d0b
    cmp    %dh,%al
    ja     jump_76d06
    mov    0x2(%ebx),%eax
    or     %eax,%eax
    je     jump_76d06
    push   %ds
    pop    %es
    push   %edx
    call   *%eax
    pop    %edx
  jump_76d06:
    movb   $0x2,(%ebx)
    jmp    jump_76cc9
  jump_76d0b:
    pop    %es
    pop    %ebx
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_76d10:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %esp,%ebx
    mov    data_897cc,%eax
    xor    %edx,%edx
    call   func_76dcd
    mov    (%esp),%ecx
    lea    0x1(%eax),%ebp
    mov    data_897cc,%edx
    mov    %ebp,%eax
    sub    %edx,%ecx
    shl    $0x2,%eax
    inc    %ecx
    mov    %eax,0x4(%esp)
    add    $0x4,%eax
    add    %ecx,%eax
    call   func_73af4
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_76da9
    mov    data_897cc,%esi
    add    %ecx,%eax
    mov    %edx,%edi
    mov    %eax,data_89740
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %es
    mov    data_89740,%ecx
    mov    data_897d0,%eax
    mov    %esp,%ebx
    mov    %eax,(%ecx)
    add    $0x4,%ecx
    mov    %edx,%eax
    mov    %ecx,%edx
    mov    0x4(%esp),%esi
    call   func_76dcd
    mov    data_89740,%edx
    add    %esi,%edx
    mov    %ebp,data_8973c
    movl   $0x0,(%edx)
    jmp    jump_76db3
  jump_76da9:
    mov    %eax,data_89740
    mov    %eax,data_8973c
  jump_76db3:
    mov    data_89740,%eax
    mov    %ebp,data_1228d8
    mov    %eax,data_1228dc
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_76dcd:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x8,%esp
    mov    %edx,%esi
    mov    %ebx,0x4(%esp)
    xor    %ecx,%ecx
  jump_76ddc:
    mov    (%eax),%dl
    cmp    $0x20,%dl
    je     jump_76de8
    cmp    $0x9,%dl
    jne    jump_76deb
  jump_76de8:
    inc    %eax
    jmp    jump_76ddc
  jump_76deb:
    test   %dl,%dl
    je     jump_76ea6
    cmp    $0x22,%dl
    jne    jump_76e37
    inc    %eax
    mov    %eax,(%esp)
    mov    %eax,%edx
  jump_76dfe:
    mov    (%eax),%bh
    cmp    $0x22,%bh
    je     jump_76e6c
    test   %bh,%bh
    je     jump_76e6c
    cmp    $0x5c,%bh
    jne    jump_76e23
    mov    0x1(%eax),%bl
    cmp    $0x22,%bl
    je     jump_76e22
    cmp    %bh,%bl
    jne    jump_76e23
  jump_76e22:
    inc    %eax
  jump_76e23:
    lea    0x1(%eax),%ebx
    test   %esi,%esi
    je     jump_76e33
    mov    (%eax),%al
    mov    %al,(%edx)
    mov    %ebx,%eax
    inc    %edx
    jmp    jump_76dfe
  jump_76e33:
    mov    %ebx,%eax
    jmp    jump_76dfe
  jump_76e37:
    mov    %eax,(%esp)
    mov    %eax,%edx
  jump_76e3c:
    mov    (%eax),%bl
    test   %bl,%bl
    je     jump_76e6c
    cmp    $0x20,%bl
    je     jump_76e6c
    cmp    $0x9,%bl
    je     jump_76e6c
    cmp    $0x5c,%bl
    jne    jump_76e58
    cmpb   $0x22,0x1(%eax)
    jne    jump_76e58
    inc    %eax
  jump_76e58:
    lea    0x1(%eax),%ebx
    test   %esi,%esi
    je     jump_76e68
    mov    (%eax),%al
    mov    %al,(%edx)
    mov    %ebx,%eax
    inc    %edx
    jmp    jump_76e3c
  jump_76e68:
    mov    %ebx,%eax
    jmp    jump_76e3c
  jump_76e6c:
    lea    0x1(%eax),%ebp
    lea    0x1(%ecx),%edi
    test   %esi,%esi
    je     jump_76e97
    shl    $0x2,%ecx
    lea    (%esi,%ecx,1),%ebx
    mov    (%esp),%ecx
    mov    %ecx,(%ebx)
    mov    (%eax),%bl
    mov    %edi,%ecx
    test   %bl,%bl
    jne    jump_76e8d
    mov    %bl,(%edx)
    jmp    jump_76ea6
  jump_76e8d:
    mov    %ebp,%eax
    movb   $0x0,(%edx)
    jmp    jump_76ddc
  jump_76e97:
    mov    (%eax),%dl
    mov    %edi,%ecx
    test   %dl,%dl
    je     jump_76ea6
    mov    %ebp,%eax
    jmp    jump_76ddc
  jump_76ea6:
    mov    0x4(%esp),%edx
    mov    %eax,(%edx)
    mov    %ecx,%eax
    add    $0x8,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_76eb6:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ecx
    push   %ds
    mov    %edx,%ds
    or     %eax,%eax
    je     jump_76f05
    add    $0x7,%eax
    jb     jump_76f05
    and    $0xfc,%al
    mov    $0xc,%edx
    sub    %edx,%eax
    cmc
    sbb    %ecx,%ecx
    and    %ecx,%eax
    add    %edx,%eax
    cmp    0x14(%ebx),%eax
    ja     jump_76f05
    mov    0xc(%ebx),%esi
    mov    0x10(%ebx),%edi
    cmp    %edi,%eax
    ja     jump_76ee9
    mov    0x28(%ebx),%esi
    sub    %edi,%edi
  jump_76ee9:
    mov    (%esi),%edx
    cmp    %edx,%eax
    jbe    jump_76f09
    sub    %edx,%edi
    cmc
    sbb    %ecx,%ecx
    and    %ecx,%edi
    add    %edx,%edi
    lea    0x20(%ebx),%edx
    mov    0x8(%esi),%esi
    cmp    %edx,%esi
    jne    jump_76ee9
    mov    %edi,0x14(%ebx)
  jump_76f05:
    sub    %eax,%eax
    jmp    jump_76f54
  jump_76f09:
    sub    %eax,%edx
    mov    %edi,0x10(%ebx)
    incl   0x18(%ebx)
    mov    0x8(%esi),%ecx
    cmp    $0xc,%edx
    jb     jump_76f37
    mov    %esi,%edi
    add    %eax,%edi
    mov    %edi,0xc(%ebx)
    mov    %edx,(%edi)
    mov    %eax,(%esi)
    mov    0x4(%esi),%ebx
    mov    %ebx,0x4(%edi)
    mov    %ecx,0x8(%edi)
    mov    %edi,0x8(%ebx)
    mov    %ecx,%ebx
    mov    %edi,0x4(%ebx)
    jmp    jump_76f4c
  jump_76f37:
    decl   0x1c(%ebx)
    mov    %esi,%eax
    mov    %ecx,%edi
    mov    0x4(%esi),%esi
    mov    %edi,0x8(%esi)
    mov    %esi,0x4(%edi)
    mov    %esi,0xc(%ebx)
    mov    %eax,%esi
  jump_76f4c:
    orl    $0x1,(%esi)
    mov    %esi,%eax
    add    $0x4,%eax
  jump_76f54:
    pop    %ds
    pop    %ecx
    pop    %edi
    pop    %esi
    ret
  jump_76f59:
    jmp    jump_77064


/*----------------------------------------------------------------*/
func_76f5e:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ecx
    push   %ds
    mov    %edx,%ds
    or     %eax,%eax
    je     jump_76f59
    mov    %eax,%esi
    sub    $0x4,%esi
    mov    (%esi),%eax
    test   $0x1,%al
    je     jump_76f59
    and    $0xfe,%al
    mov    %esi,%edi
    add    %eax,%edi
    testl  $0x1,(%edi)
    jne    jump_76fa0
    cmp    0xc(%ebx),%edi
    jne    jump_76f89
    mov    %esi,0xc(%ebx)
  jump_76f89:
    add    (%edi),%eax
    mov    %eax,(%esi)
    push   %ebx
    mov    0x4(%edi),%ebx
    mov    0x8(%edi),%edi
    mov    %edi,0x8(%ebx)
    mov    %ebx,0x4(%edi)
    pop    %ebx
    decl   0x1c(%ebx)
    jmp    jump_7701c
  jump_76fa0:
    mov    %eax,(%esi)
    mov    0xc(%ebx),%edi
    cmp    %edi,%esi
    jae    jump_76fb7
    cmp    0x4(%edi),%esi
    ja     jump_7701c
    mov    0x28(%ebx),%edi
    cmp    %edi,%esi
    jb     jump_7701c
    jmp    jump_76fc6
  jump_76fb7:
    mov    0x8(%edi),%edi
    cmp    %edi,%esi
    jb     jump_7701c
    lea    0x20(%ebx),%edi
    cmp    0x24(%ebx),%esi
    ja     jump_7701c
  jump_76fc6:
    sub    %edx,%edx
    mov    0x18(%ebx),%eax
    mov    0x1c(%ebx),%ecx
    inc    %ecx
    div    %ecx
    dec    %ecx
    cmp    %ecx,%eax
    jae    jump_76ffb
    mov    0x18(%ebx),%edx
    sub    %ecx,%edx
    add    %eax,%eax
    cmp    %ecx,%edx
    ja     jump_76fe3
    sub    %eax,%eax
  jump_76fe3:
    mov    %esi,%edi
    add    (%esi),%edi
  jump_76fe7:
    mov    (%edi),%edx
    test   $0x1,%dl
    je     jump_7701c
    cmp    $0xffffffff,%edx
    je     jump_76ffb
    and    $0xfe,%dl
    add    %edx,%edi
    dec    %eax
    jne    jump_76fe7
  jump_76ffb:
    mov    0xc(%ebx),%edi
    cmp    %edi,%esi
    jae    jump_77005
    mov    0x28(%ebx),%edi
  jump_77005:
    cmp    %edi,%esi
    jb     jump_7701c
    mov    0x8(%edi),%edi
    cmp    %edi,%esi
    jb     jump_7701c
    mov    0x8(%edi),%edi
    cmp    %edi,%esi
    jb     jump_7701c
    mov    0x8(%edi),%edi
    jmp    jump_77005
  jump_7701c:
    mov    0x4(%edi),%edx
    mov    (%esi),%ecx
    xchg   %edi,%edx
    mov    %edi,%eax
    add    (%edi),%eax
    cmp    %esi,%eax
    jne    jump_7703b
    add    (%edi),%ecx
    mov    %ecx,(%edi)
    cmp    0xc(%ebx),%esi
    jne    jump_77037
    mov    %edi,0xc(%ebx)
  jump_77037:
    mov    %edi,%esi
    jmp    jump_7704c
  jump_7703b:
    incl   0x1c(%ebx)
    mov    %edx,0x8(%esi)
    mov    %edi,0x4(%esi)
    mov    %esi,0x8(%edi)
    mov    %edx,%edi
    mov    %esi,0x4(%edi)
  jump_7704c:
    decl   0x18(%ebx)
    cmp    0xc(%ebx),%esi
    jae    jump_7705c
    cmp    0x10(%ebx),%ecx
    jbe    jump_7705c
    mov    %ecx,0x10(%ebx)
  jump_7705c:
    cmp    0x14(%ebx),%ecx
    jbe    jump_77064
    mov    %ecx,0x14(%ebx)
  jump_77064:
    pop    %ds
    pop    %ecx
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_77069:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    data_89754,%edx
    cmp    %edx,%eax
    jne    jump_7707e
    mov    0x8(%edx),%edx
    mov    %edx,data_89754
  jump_7707e:
    mov    data_89750,%ebx
    cmp    %ebx,%eax
    jne    jump_77091
    mov    0x8(%ebx),%edx
    mov    %edx,data_89750
  jump_77091:
    mov    0x4(%eax),%edx
    mov    0x8(%eax),%eax
    test   %edx,%edx
    je     jump_7709e
    mov    %eax,0x8(%edx)
  jump_7709e:
    test   %eax,%eax
    je     jump_770a5
    mov    %edx,0x4(%eax)
  jump_770a5:
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_770a8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    mov    data_89750,%edx
  jump_770b3:
    test   %edx,%edx
    je     jump_77398
    mov    0x24(%edx),%eax
    mov    (%eax),%eax
    mov    (%edx),%ebx
    add    $0x2c,%eax
    cmp    %ebx,%eax
    jne    jump_77101
    lea    -0x8(%edx),%ebx
    mov    %edx,%eax
    mov    0x8(%edx),%ecx
    call   func_77069
    mov    %ecx,%edx
    mov    0x4(%ebx),%ecx
    test   %ecx,%ecx
    jne    jump_770f1
    mov    (%ebx),%eax
    shr    $0x10,%eax
    mov    (%ebx),%di
    mov    %eax,%esi
    mov    $0x5,%ah
    mov    $0x2,%al
    int    $0x31
    jmp    jump_770b3
  jump_770f1:
    mov    %ecx,%eax
    push   %es
    mov    %eax,%es
    mov    $0x49,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    pop    %es
    jmp    jump_770b3
  jump_77101:
    mov    0x8(%edx),%edx
    jmp    jump_770b3


/*----------------------------------------------------------------*/
func_77209:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%edx
    mov    data_89750,%eax
    xor    %ebx,%ebx
    jmp    jump_7721f
  jump_77216:
    cmp    %eax,%edx
    jb     jump_77223
    mov    %eax,%ebx
    mov    0x8(%eax),%eax
  jump_7721f:
    test   %eax,%eax
    jne    jump_77216
  jump_77223:
    mov    %ebx,0x4(%edx)
    mov    %eax,0x8(%edx)
    test   %ebx,%ebx
    je     jump_77232
    mov    %edx,0x8(%ebx)
    jmp    jump_77238
  jump_77232:
    mov    %edx,data_89750
  jump_77238:
    test   %eax,%eax
    je     jump_7723f
    mov    %edx,0x4(%eax)
  jump_7723f:
    lea    0x20(%edx),%ebx
    mov    (%edx),%eax
    add    $0x2c,%edx
    movl   $0x0,-0xc(%edx)
    movl   $0x0,-0x1c(%edx)
    movl   $0x0,-0x14(%edx)
    movl   $0x0,-0x10(%edx)
    mov    %ebx,-0x8(%edx)
    mov    %ebx,-0x4(%edx)
    sub    $0x2c,%eax
    mov    %ebx,-0x20(%edx)
    mov    %eax,(%edx)
    movl   $0xffffffff,(%edx,%eax,1)
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7727d:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    data_89750,%edx
    test   %edx,%edx
    je     jump_772c6
    mov    0x24(%edx),%edx
    mov    (%edx),%ebx
    add    %edx,%ebx
    mov    data_897f6,%ah
    add    $0x4,%ebx
    cmp    $0x2,%ah
    jb     jump_772b9
    cmp    $0x8,%ah
    ja     jump_772b9
    cmpb   $0x0,data_897f8
    jne    jump_772b9
    xor    %eax,%eax
    mov    %ds,%eax
    lsl    %eax,%eax
    inc    %eax
    mov    %eax,data_897c8
  jump_772b9:
    cmp    data_897c8,%ebx
    jne    jump_772c6
    mov    (%edx),%eax
    pop    %edx
    pop    %ebx
    ret
  jump_772c6:
    xor    %eax,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_772cb:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %eax
    call   func_770a8
    mov    (%esp),%eax
    shr    $0x10,%eax
    mov    (%esp),%ecx
    mov    %eax,%ebx
    mov    $0x5,%ah
    mov    $0x1,%al
    int    $0x31
    sbb    %eax,%eax
    inc    %eax
    je     jump_772fc
    mov    %bx,%ax
    shl    $0x10,%eax
    mov    %cx,%ax
    mov    %di,(%eax)
    mov    %si,0x2(%eax)
  jump_772fc:
    test   %eax,%eax
    je     jump_77319
    mov    (%esp),%ebx
    lea    0x8(%eax),%edx
    sub    $0x8,%ebx
    mov    %ebx,(%edx)
    movl   $0x0,0x4(%eax)
    mov    %edx,%eax
    jmp    jump_77395
  jump_77319:
    testw  $0xfff0,data_1228e2
    je     jump_7732e
    movl   $0xfffff,data_1228e0
  jump_7732e:
    cmpl   $0x10000,(%esp)
    ja     jump_77393
    mov    data_1228e0,%ebx
    shr    $0x4,%ebx
    or     $0x1,%bl
    mov    $0x48,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%edx
    test   %eax,%eax
    jl     jump_77393
    mov    (%esp),%ebx
    shr    $0x4,%ebx
    mov    $0x48,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%esi
    mov    %eax,%ebx
    mov    %edx,%eax
    push   %es
    mov    %eax,%es
    mov    $0x49,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    pop    %es
    test   %esi,%esi
    jl     jump_77393
    mov    $0x0,%ah
    mov    $0x6,%al
    int    $0x31
    mov    %ecx,%eax
    shl    $0x10,%eax
    mov    %dx,%ax
    add    $0x8,%eax
    mov    (%esp),%edx
    mov    %esi,-0x4(%eax)
    sub    $0x8,%edx
    mov    %edx,(%eax)
    jmp    jump_77395
  jump_77393:
    xor    %eax,%eax
  jump_77395:
    add    $0x4,%esp
  jump_77398:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7739e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %eax
    cmpl   $0x0,data_89c34
    jne    jump_773b1
  jump_773ad:
    xor    %eax,%eax
    jmp    jump_77395
  jump_773b1:
    cmpl   $0xfffffffe,data_897c8
    je     jump_773ad
    mov    %esp,%eax
    call   func_77591
    test   %eax,%eax
    je     jump_77395
    cmpb   $0x1,data_897f6
    jne    jump_773e5
    mov    (%esp),%eax
    call   func_772cb
    mov    %eax,%ebx
    mov    %eax,%edx
    test   %eax,%eax
    je     jump_77400
    mov    (%eax),%eax
    mov    %eax,(%esp)
    jmp    jump_77400
  jump_773e5:
    mov    (%esp),%ebx
    mov    $0x80004800,%eax
    int    $0x21
    sbb    %ebx,%ebx
    not    %ebx
    and    %ebx,%eax
    mov    (%esp),%ecx
    sub    $0x4,%ecx
    mov    %eax,%edx
    mov    %ecx,(%esp)
  jump_77400:
    test   %edx,%edx
    je     jump_773ad
    mov    (%esp),%eax
    mov    (%esp),%esi
    sub    $0x4,%eax
    cmp    %esi,%eax
    ja     jump_773ad
    mov    %eax,(%esp)
    cmp    $0x38,%eax
    jb     jump_773ad
    mov    %eax,(%edx)
    mov    %edx,%eax
    call   func_77209
    mov    %eax,%ebx
    mov    (%eax),%eax
    mov    %eax,(%esp)
    or     $0x1,%al
    mov    %eax,(%ebx)
    mov    0x18(%edx),%edi
    movl   $0xffffffff,0x14(%edx)
    inc    %edi
    lea    0x4(%ebx),%eax
    mov    %edi,0x18(%edx)
    call   func_73bef
    mov    $0x1,%eax
    jmp    jump_77395


/*----------------------------------------------------------------*/
func_7744d:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %ebp
    push   %eax
    cmpb   $0x1,data_897f6
    jne    jump_77465
    cmpb   $0x0,data_897f7
    je     jump_7746e
  jump_77465:
    cmpb   $0x9,data_897f6
    jne    jump_7747b
  jump_7746e:
    mov    (%esp),%eax
    call   func_7739e
    jmp    jump_77588
  jump_7747b:
    cmpl   $0x0,data_89c34
    jne    jump_7748b
  jump_77484:
    xor    %eax,%eax
    jmp    jump_77588
  jump_7748b:
    cmpl   $0xfffffffe,data_897c8
    je     jump_77484
    mov    %esp,%eax
    call   func_77591
    test   %eax,%eax
    je     jump_77588
    mov    data_897f6,%bl
    cmp    $0x2,%bl
    jb     jump_774c9
    cmp    $0x8,%bl
    ja     jump_774c9
    cmpb   $0x0,data_897f8
    jne    jump_774c9
    xor    %eax,%eax
    mov    %ds,%eax
    lsl    %eax,%eax
    inc    %eax
    mov    %eax,data_897c8
  jump_774c9:
    mov    (%esp),%edx
    mov    data_897c8,%ecx
    add    %ecx,%edx
    cmp    %ecx,%edx
    jae    jump_774dd
    mov    $0xfffffffe,%edx
  jump_774dd:
    mov    %edx,%eax
    call   func_7c860
    cmp    $0xffffffff,%eax
    je     jump_77484
    mov    %eax,%ebx
    cmp    $0xfffffff8,%eax
    ja     jump_77484
    cmp    %eax,%edx
    jbe    jump_77484
    sub    %eax,%edx
    lea    -0x4(%edx),%eax
    mov    %edx,(%esp)
    cmp    %edx,%eax
    ja     jump_77484
    mov    data_89750,%edx
    mov    %eax,(%esp)
    jmp    jump_7751d
  jump_7750b:
    mov    0x8(%edx),%ebp
    test   %ebp,%ebp
    je     jump_77521
    cmp    %ebx,%edx
    ja     jump_7751a
    cmp    %ebp,%ebx
    jb     jump_77521
  jump_7751a:
    mov    0x8(%edx),%edx
  jump_7751d:
    test   %edx,%edx
    jne    jump_7750b
  jump_77521:
    test   %edx,%edx
    je     jump_7754b
    mov    (%edx),%eax
    lea    -0x4(%ebx),%ecx
    add    %edx,%eax
    cmp    %eax,%ecx
    jne    jump_7754b
    mov    (%esp),%esi
    add    $0x4,%esi
    mov    %esi,(%esp)
    add    %esi,(%edx)
    mov    (%esp),%ebp
    lea    (%eax,%ebp,1),%ecx
    mov    %eax,%ebx
    movl   $0xffffffff,(%ecx)
    jmp    jump_7756a
  jump_7754b:
    cmpl   $0x38,(%esp)
    jb     jump_77484
    mov    (%esp),%eax
    mov    %eax,(%ebx)
    mov    %ebx,%eax
    mov    %ebx,%edx
    call   func_77209
    mov    %eax,%ebx
    mov    (%eax),%eax
    mov    %eax,(%esp)
  jump_7756a:
    mov    (%esp),%eax
    or     $0x1,%al
    mov    %eax,(%ebx)
    incl   0x18(%edx)
    lea    0x4(%ebx),%eax
    movl   $0xffffffff,0x14(%edx)
    call   func_73bef
    mov    $0x1,%eax
  jump_77588:
    add    $0x4,%esp
    pop    %ebp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77591:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    push   %esi
    mov    %eax,%ebx
    mov    (%eax),%edx
    add    $0x3,%edx
    and    $0xfc,%dl
    test   %edx,%edx
    jne    jump_775a8
  jump_775a2:
    xor    %eax,%eax
    pop    %esi
    pop    %edx
    pop    %ebx
    ret
  jump_775a8:
    cmpb   $0x1,data_897f6
    jne    jump_775ba
    cmpb   $0x0,data_897f7
    je     jump_775c3
  jump_775ba:
    cmpb   $0x9,data_897f6
    jne    jump_775c8
  jump_775c3:
    add    $0x8,%edx
    jmp    jump_775cf
  jump_775c8:
    call   func_7727d
    sub    %eax,%edx
  jump_775cf:
    mov    %edx,(%ebx)
    add    $0x3c,%edx
    cmp    (%ebx),%edx
    jb     jump_775a2
    mov    data_89c38,%esi
    cmp    %esi,%edx
    jae    jump_775e7
    mov    %esi,%edx
    and    $0xfe,%dl
  jump_775e7:
    mov    %edx,(%ebx)
    add    $0xfff,%edx
    cmp    (%ebx),%edx
    jb     jump_775a2
    and    $0xf0,%dh
    xor    %dl,%dl
    mov    %edx,(%ebx)
    test   %edx,%edx
    setne  %al
    and    $0xff,%eax
    pop    %esi
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77608:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_7760b:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    $0x2c,%ah
    int    $0x21
    xor    %eax,%eax
    mov    %dh,%al
    mov    %eax,%ebx
  jump_77619:
    mov    $0x2c,%ah
    int    $0x21
    xor    %eax,%eax
    mov    %dh,%al
    cmp    %eax,%ebx
    je     jump_77619
    xor    %esi,%esi
    mov    %al,%bl
  jump_77629:
    mov    $0x2c,%ah
    int    $0x21
    inc    %esi
    cmp    %dh,%bl
    je     jump_77629
    mov    %esi,data_122830
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_7763d:
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    test   %eax,%eax
    je     jump_77670
    imul   data_122830,%eax
    mov    $0x3e8,%esi
    add    $0x1f4,%eax
    xor    %edx,%edx
    div    %esi
    mov    %eax,%esi
    test   %eax,%eax
    jne    jump_77663
    lea    0x1(%eax),%esi
  jump_77663:
    xor    %eax,%eax
    mov    %al,%bl
  jump_77667:
    mov    $0x2c,%ah
    int    $0x21
    cmp    %dh,%bl
    dec    %esi
    jne    jump_77667
  jump_77670:
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77675:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x8,%esp
    mov    0x18(%ebp),%ah
    cmp    $0x1,%ah
    ja     jump_776b6
    test   %ah,%ah
    jne    jump_776af
    fldz
    fcompl 0x10(%ebp)
    fnstsw %ax
    sahf
    jae    jump_7769f
    xor    %ecx,%ecx
    mov    %ecx,-0x18(%ebp)
    mov    %ecx,-0x14(%ebp)
    jmp    jump_776ee
  jump_7769f:
    jbe    jump_776a8
    mov    $0x8047,%eax
    jmp    jump_776e0
  jump_776a8:
    mov    $0x4047,%eax
    jmp    jump_776e0
  jump_776af:
    mov    $0x2047,%eax
    jmp    jump_776e0
  jump_776b6:
    fldz
    fcompl 0x10(%ebp)
    fnstsw %ax
    sahf
    jb     jump_776ca
    xor    %edx,%edx
    mov    %edx,-0x18(%ebp)
    mov    %edx,-0x14(%ebp)
    jmp    jump_776ee
  jump_776ca:
    fldz
    fcompl 0x8(%ebp)
    fnstsw %ax
    sahf
    jae    jump_776db
    mov    $0x8107,%eax
    jmp    jump_776e0
  jump_776db:
    mov    $0x1107,%eax
  jump_776e0:
    lea    0x8(%ebp),%edx
    lea    0x10(%ebp),%ebx
    call   func_7bb03
    fstpl  -0x18(%ebp)
  jump_776ee:
    fldl   -0x18(%ebp)
    lea    -0x10(%ebp),%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %eax
    pop    %ebp
    ret    $0x14


/*----------------------------------------------------------------*/
func_776fc:
/*----------------------------------------------------------------*/
    out    %al,(%dx)
    cmp    %edi,%edx
    incb   0x2e(%edx)
    xchg   %al,-0x12(%eax)
    cmp    %edi,%edx
    incb   0x2e(%edx)
    xchg   %al,%al
    push   %ebp
    mov    %esp,%ebp
    sub    $0x10,%esp
    jmp    jump_77746


/*----------------------------------------------------------------*/
func_77716:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    sub    $0x10,%esp
    fcoml  %cs:func_776fc
    fstsw  -0x10(%ebp)
    fwait
    mov    -0xf(%ebp),%ah
    sahf
    jbe    jump_77746
    cmp    $0x7,%al
    je     jump_77740
    fstpl  -0x10(%ebp)
    mov    %eax,-0x8(%ebp)
    mov    %edx,-0x4(%ebp)
    call   func_7548a
  jump_77740:
    mov    $0x1,%al
    mov    %ebp,%esp
    pop    %ebp
    ret
  jump_77746:
    fcoml  %cs:0x77704 /* Warning: address points to a valid object/reloc, but no label found */
    fstsw  -0x10(%ebp)
    fwait
    mov    -0xf(%ebp),%ah
    sahf
    ja     jump_7775c
    fldz
    jmp    jump_77770
  jump_7775c:
    fldl2e
    fmulp  %st,%st(1)
    fld    %st(0)
    frndint
    fxch   %st(1)
    fsub   %st(1),%st
    f2xm1
    fld1
    faddp  %st,%st(1)
    fscale
  jump_77770:
    fstp   %st(1)
    mov    $0x0,%al
    mov    %ebp,%esp
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_77789:
/*----------------------------------------------------------------*/
    fxch   %st(1)
    fpatan
    ret


/*----------------------------------------------------------------*/
func_777aa:
/*----------------------------------------------------------------*/
    jmp    func_73a05


/*----------------------------------------------------------------*/
func_777af:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    mov    %ds,%edx
    call   func_78509
    test   %eax,%eax
    jne    jump_777c9
    mov    %ebx,%eax
    mov    %ecx,%edx
    call   func_73a05
  jump_777c9:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_777cc:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %eax,%edx
    mov    %cs,%eax
    mov    %ax,0x2(%edx)
    mov    %ds,%eax
    mov    %ax,0x6(%edx)
    mov    %es,%eax
    mov    %ax,(%edx)
    mov    %ss,%eax
    mov    %ax,0x4(%edx)
    mov    %fs,%eax
    mov    %ax,0x8(%edx)
    mov    %gs,%eax
    mov    %ax,0xa(%edx)
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_777f4:
/*----------------------------------------------------------------*/
    push   %ebp
    push   %es
    push   %ebx
    push   %ds
    push   %edx
    call   func_7782c
    push   %ds
    push   %edi
    mov    %esp,%ebp
    mov    0x8(%ebp),%edi
    mov    0xc(%ebp),%ds
    mov    %eax,(%edi)
    mov    %ebx,0x4(%edi)
    mov    %ecx,0x8(%edi)
    mov    %edx,0xc(%edi)
    mov    %esi,0x10(%edi)
    pop    0x14(%edi)
    sbb    %eax,%eax
    mov    %eax,0x18(%edi)
    pop    %eax
    pop    %ebx
    pop    %ebx
    pop    %ebx
    mov    %ax,0x6(%ebx)
    data16 mov %es,(%ebx)
    pop    %es
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7782c:
/*----------------------------------------------------------------*/
    lea    (%esi,%esi,2),%esi
    lea    %cs:func_778d2(%esi),%eax
    push   %eax
    mov    (%ebx),%es
    mov    0x6(%ebx),%bp
    mov    (%edi),%eax
    mov    0x4(%edi),%ebx
    mov    0x8(%edi),%ecx
    mov    0xc(%edi),%edx
    mov    0x10(%edi),%esi
    mov    0x14(%edi),%edi
    mov    %ebp,%ds
    ret


/*----------------------------------------------------------------*/
func_778d2:
/*----------------------------------------------------------------*/
    int    $0x0
    ret


/*----------------------------------------------------------------*/
func_77bd2:
/*----------------------------------------------------------------*/
    push   %esi
    mov    %eax,%esi
    cmp    $0x7fffffff,%ecx
    jbe    jump_77be4
  jump_77bdd:
    mov    $0xffffffff,%eax
    pop    %esi
    ret
  jump_77be4:
    cmp    $0x200,%ebx
    jb     jump_77bf6
    jbe    jump_77bfe
    cmp    $0x400,%ebx
    jmp    jump_77bfc
  jump_77bf6:
    cmp    $0x100,%ebx
  jump_77bfc:
    jne    jump_77bdd
  jump_77bfe:
    test   %edx,%edx
    je     jump_77c06
    test   %ecx,%ecx
    je     jump_77bdd
  jump_77c06:
    mov    %esi,%eax
    call   func_765cc
    test   %ecx,%ecx
    je     jump_77c14
    mov    %ecx,0x14(%esi)
  jump_77c14:
    mov    0xd(%esi),%ah
    mov    %edx,0x8(%esi)
    and    $0xf8,%ah
    mov    %ah,0xd(%esi)
    mov    0xc(%esi),%ecx
    mov    %edx,(%esi)
    or     %ebx,%ecx
    mov    %ecx,0xc(%esi)
    test   %edx,%edx
    jne    jump_77c35
    mov    %esi,%eax
    call   func_78473
  jump_77c35:
    xor    %eax,%eax
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_77c3a:
/*----------------------------------------------------------------*/
    mov    $data_854ac,%eax
    call   func_741a6
    test   %eax,%eax
    jne    jump_77e7b
    ret


/*----------------------------------------------------------------*/
func_77c4d:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %edx,%ecx
    xor    %edx,%edx
  jump_77c53:
    mov    (%eax),%bl
    cmp    $0x30,%bl
    jb     jump_77c6e
    cmp    $0x39,%bl
    ja     jump_77c6e
    imul   $0xa,%edx,%edx
    xor    %ebx,%ebx
    mov    (%eax),%bl
    add    %ebx,%edx
    inc    %eax
    sub    $0x30,%edx
    jmp    jump_77c53
  jump_77c6e:
    mov    %edx,(%ecx)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77c73:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x14,%esp
    mov    %eax,%ebp
    mov    %edx,0x10(%esp)
    cmpb   $0x3a,(%eax)
    jne    jump_77c86
    inc    %ebp
  jump_77c86:
    mov    %ebp,%esi
  jump_77c88:
    mov    0x0(%ebp),%dl
    test   %dl,%dl
    je     jump_77cab
    cmp    $0x2c,%dl
    je     jump_77cab
    cmp    $0x2d,%dl
    je     jump_77cab
    cmp    $0x2b,%dl
    je     jump_77cab
    cmp    $0x30,%dl
    jb     jump_77ca8
    cmp    $0x39,%dl
    jbe    jump_77cab
  jump_77ca8:
    inc    %ebp
    jmp    jump_77c88
  jump_77cab:
    mov    %ebp,%eax
    sub    %esi,%eax
    mov    %eax,0xc(%esp)
    cmp    $0x1e,%eax
    jle    jump_77cc0
    movl   $0x1e,0xc(%esp)
  jump_77cc0:
    mov    0x10(%esp),%edi
    mov    0xc(%esp),%ecx
    push   %es
    mov    %ds,%eax
    mov    %eax,%es
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    pop    %es
    mov    0xc(%esp),%ecx
    lea    (%edi,%ecx,1),%eax
    xor    %esi,%esi
    movb   $0x0,(%eax)
    lea    0x1(%ebp),%eax
    cmp    $0x2d,%dl
    jne    jump_77cf9
    mov    $0x1,%esi
    jmp    jump_77cfe
  jump_77cf9:
    cmp    $0x2b,%dl
    jne    jump_77d00
  jump_77cfe:
    mov    %eax,%ebp
  jump_77d00:
    mov    0x0(%ebp),%al
    cmp    $0x30,%al
    jb     jump_77d7f
    cmp    $0x39,%al
    ja     jump_77d7f
    lea    0x8(%esp),%edx
    xor    %edi,%edi
    mov    %ebp,%eax
    mov    %edi,(%esp)
    mov    %edi,0x4(%esp)
    mov    %edi,0x8(%esp)
    call   func_77c4d
    mov    %eax,%edx
    mov    (%eax),%cl
    mov    %eax,%ebp
    cmp    $0x3a,%cl
    jne    jump_77d50
    lea    0x4(%esp),%edx
    inc    %eax
    call   func_77c4d
    mov    %eax,%edx
    mov    (%eax),%ch
    mov    %eax,%ebp
    cmp    %cl,%ch
    jne    jump_77d50
    mov    %esp,%edx
    inc    %eax
    call   func_77c4d
    mov    %eax,%ebp
  jump_77d50:
    mov    0x8(%esp),%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    0x4(%esp),%edx
    shl    $0x2,%eax
    add    %eax,%edx
    mov    %edx,%eax
    shl    $0x4,%eax
    sub    %edx,%eax
    mov    (%esp),%edx
    shl    $0x2,%eax
    add    %eax,%edx
    mov    %edx,(%ebx)
    test   %esi,%esi
    je     jump_77d7f
    mov    %edx,%ecx
    neg    %ecx
    mov    %ecx,(%ebx)
  jump_77d7f:
    mov    %ebp,%eax
    add    $0x14,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_77d89:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    sub    $0x10,%esp
    mov    %eax,%ebx
    mov    %edx,%ecx
    mov    (%eax),%ah
    mov    $0xffffffff,%esi
    cmp    $0x4a,%ah
    jne    jump_77da6
    mov    $0x1,%esi
    add    %esi,%ebx
  jump_77da6:
    cmpb   $0x4d,(%ebx)
    jne    jump_77dae
    inc    %ebx
    xor    %esi,%esi
  jump_77dae:
    lea    0xc(%esp),%edx
    mov    %ebx,%eax
    mov    %esi,0x20(%ecx)
    call   func_77c4d
    mov    %eax,%edx
    mov    %eax,%ebx
    test   %esi,%esi
    je     jump_77dcd
    mov    0xc(%esp),%eax
    mov    %eax,0x1c(%ecx)
    jmp    jump_77e12
  jump_77dcd:
    mov    0xc(%esp),%eax
    dec    %eax
    mov    %eax,0x10(%ecx)
    cmpb   $0x2e,(%edx)
    jne    jump_77e0b
    lea    0x1(%edx),%eax
    lea    0xc(%esp),%edx
    call   func_77c4d
    mov    %eax,%edx
    mov    %eax,%ebx
    mov    0xc(%esp),%eax
    mov    %eax,0xc(%ecx)
    cmpb   $0x2e,(%edx)
    jne    jump_77e0b
    lea    0x1(%edx),%eax
    lea    0xc(%esp),%edx
    call   func_77c4d
    mov    %eax,%ebx
    mov    0xc(%esp),%eax
    mov    %eax,0x18(%ecx)
  jump_77e0b:
    movl   $0x0,0x1c(%ecx)
  jump_77e12:
    mov    $0x2,%edx
    xor    %esi,%esi
    mov    %edx,0x8(%esp)
    mov    %esi,(%esp)
    mov    %esi,0x4(%esp)
    cmpb   $0x2f,(%ebx)
    jne    jump_77e5f
    lea    0x8(%esp),%edx
    lea    0x1(%ebx),%eax
    call   func_77c4d
    mov    %eax,%edx
    mov    %eax,%ebx
    cmpb   $0x3a,(%eax)
    jne    jump_77e5f
    lea    0x1(%edx),%eax
    lea    0x4(%esp),%edx
    call   func_77c4d
    mov    %eax,%edx
    mov    %eax,%ebx
    cmpb   $0x3a,(%eax)
    jne    jump_77e5f
    lea    0x1(%edx),%eax
    mov    %esp,%edx
    call   func_77c4d
    mov    %eax,%ebx
  jump_77e5f:
    mov    (%esp),%eax
    mov    %eax,(%ecx)
    mov    0x4(%esp),%eax
    mov    %eax,0x4(%ecx)
    mov    0x8(%esp),%eax
    mov    %eax,0x8(%ecx)
    mov    %ebx,%eax
    add    $0x10,%esp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_77e7b:
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x4,%esp
    xor    %edx,%edx
    mov    $data_89aec,%ebx
    mov    %edx,data_89af4
    mov    $data_89af8,%edx
    call   func_77c73
    mov    %eax,%edx
    mov    (%eax),%ah
    test   %ah,%ah
    jne    jump_77ea8
    mov    %ah,data_89b17
    jmp    jump_77f03
  jump_77ea8:
    mov    $0x1,%ebx
    mov    data_89aec,%eax
    mov    %ebx,data_89af4
    sub    $0xe10,%eax
    mov    %esp,%ebx
    mov    %eax,(%esp)
    mov    %edx,%eax
    mov    $data_89b17,%edx
    call   func_77c73
    mov    (%esp),%ecx
    mov    data_89aec,%ebx
    sub    %ecx,%ebx
    mov    %ebx,data_89af0
    mov    (%eax),%bl
    mov    %eax,%edx
    cmp    $0x2c,%bl
    jne    jump_77ef3
    mov    $data_89aa4,%edx
    inc    %eax
    call   func_77d89
  jump_77ef3:
    cmpb   $0x2c,(%eax)
    jne    jump_77f03
    mov    $data_89ac8,%edx
    inc    %eax
    call   func_77d89
  jump_77f03:
    add    $0x4,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_77f0a:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ebx,%eax
    cmp    $0xa8c0,%edx
    jae    jump_77f37
    test   %ebx,%ebx
    jle    jump_77f37
    lea    0x15180(%edx),%esi
    sub    %ebx,%esi
    xor    %edx,%edx
    mov    $0x15180,%ebx
    mov    %esi,%eax
    div    %ebx
    add    %eax,%edi
    dec    %edi
    jmp    jump_77f46
  jump_77f37:
    mov    $0x15180,%ebx
    sub    %eax,%esi
    xor    %edx,%edx
    mov    %esi,%eax
    div    %ebx
    add    %eax,%edi
  jump_77f46:
    mov    $0x15180,%ebx
    mov    %esi,%eax
    xor    %edx,%edx
    div    %ebx
    mov    %edx,%ebx
    mov    $0xe10,%esi
    mov    %ebx,%eax
    xor    %edx,%edx
    div    %esi
    xor    %edx,%edx
    mov    %eax,0x8(%ecx)
    mov    %ebx,%eax
    div    %esi
    mov    %edx,%ebx
    mov    $0x3c,%esi
    mov    %ebx,%eax
    xor    %edx,%edx
    div    %esi
    xor    %edx,%edx
    mov    %eax,0x4(%ecx)
    mov    %ebx,%eax
    div    %esi
    mov    $0x16e,%ebx
    mov    %edi,%eax
    mov    %edx,(%ecx)
    xor    %edx,%edx
    div    %ebx
    mov    %eax,%edx
    shl    $0x3,%eax
    add    %edx,%eax
    shl    $0x3,%eax
    add    %edx,%eax
    mov    %eax,%ebx
    shl    $0x2,%eax
    add    %ebx,%eax
    mov    %edi,%ebx
    sub    %eax,%ebx
    test   %edx,%edx
    jbe    jump_77fad
    lea    -0x1(%edx),%eax
    shr    $0x2,%eax
    sub    %eax,%ebx
  jump_77fad:
    lea    0x76c(%edx),%eax
    call   func_78048
    add    $0x16d,%eax
  jump_77fbd:
    cmp    %eax,%ebx
    jb     jump_77fc6
    inc    %edx
    sub    %eax,%ebx
    jmp    jump_77fbd
  jump_77fc6:
    mov    $data_861d4,%esi
    mov    %ebx,0x1c(%ecx)
    lea    0x76c(%edx),%eax
    mov    %edx,0x14(%ecx)
    call   func_78048
    test   %eax,%eax
    je     jump_77fe5
    mov    $data_861ee,%esi
  jump_77fe5:
    mov    $0x1f,%ebp
    mov    %ebx,%eax
    xor    %edx,%edx
    div    %ebp
    mov    %eax,%edx
    mov    (%esi,%edx,2),%edx
    sar    $0x10,%edx
    cmp    %edx,%ebx
    jb     jump_77ffd
    inc    %eax
  jump_77ffd:
    mov    %eax,0x10(%ecx)
    movswl (%esi,%eax,2),%eax
    sub    %eax,%ebx
    xor    %edx,%edx
    inc    %ebx
    lea    0x1(%edi),%eax
    mov    %ebx,0xc(%ecx)
    mov    $0x7,%ebx
    div    %ebx
    mov    %ecx,%eax
    mov    %edx,0x18(%ecx)
    pop    %ebp
    pop    %edi
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_78048:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ebx
    test   $0x3,%bl
    jne    jump_7807d
    mov    %eax,%edx
    mov    $0x64,%ecx
    sar    $0x1f,%edx
    idiv   %ecx
    test   %edx,%edx
    je     jump_7806b
  jump_78062:
    mov    $0x1,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_7806b:
    mov    $0x190,%ecx
    mov    %ebx,%edx
    mov    %ebx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    test   %edx,%edx
    je     jump_78062
  jump_7807d:
    xor    %eax,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78083:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x24,%esp
    mov    %eax,%ebx
    mov    0x20(%eax),%ecx
    test   %ecx,%ecx
    jne    jump_78150
    lea    0x76c(%edx),%eax
    call   func_78048
    test   %eax,%eax
    je     jump_780ba
    mov    0x10(%ebx),%eax
    mov    data_861ee(,%eax,2),%esi
    mov    data_861ec(,%eax,2),%eax
    jmp    jump_780cb
  jump_780ba:
    mov    0x10(%ebx),%eax
    mov    data_861d4(,%eax,2),%esi
    mov    data_861d2(,%eax,2),%eax
  jump_780cb:
    sar    $0x10,%esi
    sar    $0x10,%eax
    sub    %eax,%esi
    xor    %edi,%edi
    mov    $0x1,%ecx
    mov    %edi,(%esp)
    mov    %edi,0x4(%esp)
    mov    %edi,0x8(%esp)
    mov    %ecx,0xc(%esp)
    mov    0x10(%ebx),%eax
    mov    %eax,0x10(%esp)
    mov    %edx,0x14(%esp)
    mov    %esp,%eax
    mov    %edi,0x20(%esp)
    call   func_76ad3
    mov    0x18(%esp),%ebp
    mov    0x18(%ebx),%edx
    sub    %ebp,%edx
    add    $0x7,%edx
    mov    $0x7,%ecx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ecx
    mov    0xc(%ebx),%eax
    cmp    $0x5,%eax
    jne    jump_7813e
    lea    -0x1(%eax),%ecx
    mov    %ecx,%edi
    shl    $0x3,%edi
    lea    0x1(%edx),%eax
    sub    %ecx,%edi
    add    %edi,%eax
    cmp    %esi,%eax
    jle    jump_7813a
    mov    0xc(%ebx),%eax
    sub    $0x2,%eax
    jmp    jump_7813f
  jump_7813a:
    mov    %ecx,%eax
    jmp    jump_7813f
  jump_7813e:
    dec    %eax
  jump_7813f:
    mov    0x1c(%esp),%ebx
    add    %edx,%ebx
    mov    %eax,%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    add    %ebx,%eax
    jmp    jump_7815f
  jump_78150:
    cmp    $0x1,%ecx
    jne    jump_7815c
    mov    0x1c(%eax),%eax
    sub    %ecx,%eax
    jmp    jump_7815f
  jump_7815c:
    mov    0x1c(%eax),%eax
  jump_7815f:
    add    $0x24,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78168:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    mov    %edx,%esi
    mov    %ebx,%edx
    call   func_78083
    mov    %eax,%edi
    mov    %ebx,%edx
    mov    %esi,%eax
    xor    %ecx,%ecx
    call   func_78083
    cmp    %eax,%edi
    jle    jump_7818a
    mov    $0x1,%ecx
  jump_7818a:
    mov    %ecx,%eax
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78190:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x1c,%esp
    mov    %eax,%ecx
    mov    data_89b3a,%eax
    mov    (%eax),%dl
    xor    %edi,%edi
    test   %dl,%dl
    je     jump_78434
    mov    $data_89aa4,%eax
    mov    $data_89ac8,%edx
    mov    0x14(%ecx),%ebx
    call   func_78168
    mov    %eax,0x10(%esp)
    test   %eax,%eax
    je     jump_781d2
    mov    $data_89ac8,%ebx
    mov    $data_89aa4,%esi
    jmp    jump_781dc
  jump_781d2:
    mov    $data_89aa4,%ebx
    mov    $data_89ac8,%esi
  jump_781dc:
    mov    0x14(%ecx),%eax
    add    $0x76c,%eax
    mov    0x10(%ecx),%ebp
    call   func_78048
    mov    %eax,%edx
    lea    0x0(%ebp,%ebp,1),%eax
    test   %edx,%edx
    je     jump_78204
    mov    data_861ee(%eax),%edx
    mov    data_861ec(%eax),%eax
    jmp    jump_78210
  jump_78204:
    mov    data_861d4(%eax),%edx
    mov    data_861d2(%eax),%eax
  jump_78210:
    sar    $0x10,%edx
    sar    $0x10,%eax
    sub    %eax,%edx
    mov    %edx,0xc(%esp)
    xor    %edx,%edx
    mov    0x20(%ebx),%eax
    mov    %edx,0x14(%esp)
    test   %eax,%eax
    jne    jump_782e0
    mov    0x10(%ebx),%eax
    cmp    %eax,%ebp
    jle    jump_7823e
    mov    $0x1,%edi
    jmp    jump_78319
  jump_7823e:
    jne    jump_78319
    mov    0x18(%ecx),%edx
    mov    0x18(%ebx),%eax
    add    $0x7,%edx
    sub    %eax,%edx
    movl   $0x7,0x18(%esp)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idivl  0x18(%esp)
    mov    0xc(%ecx),%eax
    sub    %edx,%eax
    mov    0x18(%ecx),%edx
    mov    %eax,(%esp)
    add    $0x6,%edx
    sub    0x18(%ebx),%edx
    movl   $0x7,0x18(%esp)
    mov    %edx,%eax
    sar    $0x1f,%edx
    idivl  0x18(%esp)
    mov    0xc(%ecx),%eax
    dec    %eax
    sub    %edx,%eax
    mov    0xc(%ebx),%edx
    mov    %eax,0x8(%esp)
    cmp    $0x5,%edx
    jne    jump_782b9
    mov    0xc(%esp),%eax
    mov    (%esp),%edx
    sub    $0x7,%eax
    cmp    %edx,%eax
    jge    jump_78319
    mov    0x8(%esp),%edx
    mov    $0x1,%edi
    cmp    %edx,%eax
    jl     jump_78319
    jmp    jump_78315
  jump_782b9:
    lea    -0x1(%edx),%eax
    mov    %eax,0x18(%esp)
    mov    0x18(%esp),%edx
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    (%esp),%edx
    inc    %eax
    cmp    %edx,%eax
    jg     jump_78319
    mov    0x8(%esp),%edx
    mov    $0x1,%edi
    cmp    %edx,%eax
    jle    jump_78319
    jmp    jump_78315
  jump_782e0:
    mov    0x1c(%ebx),%edx
    cmp    $0x1,%eax
    jne    jump_78307
    mov    0x14(%ecx),%eax
    add    $0x76c,%eax
    call   func_78048
    test   %eax,%eax
    je     jump_78306
    mov    data_861d6,%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jle    jump_78306
    inc    %edx
  jump_78306:
    dec    %edx
  jump_78307:
    mov    0x1c(%ecx),%eax
    cmp    %eax,%edx
    jg     jump_78319
    mov    $0x1,%edi
    jne    jump_78319
  jump_78315:
    mov    %edi,0x14(%esp)
  jump_78319:
    cmpl   $0x0,0x14(%esp)
    je     jump_78331
    mov    %ecx,%eax
    mov    %ebx,%edx
    call   func_78443
    test   %eax,%eax
    sete   %al
    movzbl %al,%edi
  jump_78331:
    test   %edi,%edi
    jne    jump_78348
    mov    0x10(%esp),%esi
    test   %esi,%esi
    je     jump_78434
    mov    %esi,%edi
    jmp    jump_78434
  jump_78348:
    mov    0x20(%esi),%eax
    xor    %ebx,%ebx
    test   %eax,%eax
    jne    jump_783de
    mov    0x10(%esi),%eax
    cmp    %eax,%ebp
    jle    jump_78363
    xor    %edi,%edi
    jmp    jump_78417
  jump_78363:
    jne    jump_78417
    mov    0x18(%ecx),%edx
    mov    0x18(%esi),%ebp
    add    $0x7,%edx
    sub    %ebp,%edx
    mov    $0x7,%ebp
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebp
    mov    0xc(%ecx),%eax
    sub    %edx,%eax
    mov    0x18(%ecx),%edx
    mov    %eax,0x4(%esp)
    add    $0x6,%edx
    mov    0x18(%esi),%eax
    sub    %eax,%edx
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %ebp
    mov    0xc(%ecx),%ebp
    dec    %ebp
    sub    %edx,%ebp
    mov    0xc(%esi),%edx
    xor    %edi,%edi
    cmp    $0x5,%edx
    jne    jump_783c7
    mov    0xc(%esp),%eax
    mov    0x4(%esp),%edx
    sub    $0x7,%eax
    cmp    %edx,%eax
    jl     jump_783c1
  jump_783ba:
    mov    $0x1,%edi
    jmp    jump_78417
  jump_783c1:
    cmp    %eax,%ebp
    jg     jump_78417
    jmp    jump_78412
  jump_783c7:
    dec    %edx
    mov    %edx,%eax
    shl    $0x3,%eax
    sub    %edx,%eax
    mov    0x4(%esp),%edx
    inc    %eax
    cmp    %edx,%eax
    jg     jump_783ba
    cmp    %eax,%ebp
    jge    jump_78417
    jmp    jump_78412
  jump_783de:
    mov    0x1c(%esi),%edx
    cmp    $0x1,%eax
    jne    jump_78405
    mov    0x14(%ecx),%eax
    add    $0x76c,%eax
    call   func_78048
    test   %eax,%eax
    je     jump_78404
    mov    data_861d6,%eax
    sar    $0x10,%eax
    cmp    %eax,%edx
    jle    jump_78404
    inc    %edx
  jump_78404:
    dec    %edx
  jump_78405:
    mov    0x1c(%ecx),%eax
    cmp    %eax,%edx
    jg     jump_78417
    xor    %edi,%edi
    cmp    %eax,%edx
    jne    jump_78417
  jump_78412:
    mov    $0x1,%ebx
  jump_78417:
    test   %ebx,%ebx
    je     jump_78426
    mov    %ecx,%eax
    mov    %esi,%edx
    call   func_78443
    mov    %eax,%edi
  jump_78426:
    mov    0x10(%esp),%ebx
    test   %ebx,%ebx
    je     jump_78434
    mov    %ebx,%eax
    sub    %edi,%eax
    mov    %eax,%edi
  jump_78434:
    mov    %edi,%eax
    mov    %edi,0x20(%ecx)
    add    $0x1c,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78443:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %ebp
    mov    0x8(%eax),%ecx
    mov    0x8(%edx),%esi
    xor    %ebx,%ebx
    cmp    %esi,%ecx
    jl     jump_78467
    jne    jump_7846c
    mov    0x4(%eax),%ecx
    mov    0x4(%edx),%ebp
    cmp    %ebp,%ecx
    jl     jump_78467
    jne    jump_7846c
    mov    (%eax),%eax
    cmp    (%edx),%eax
    jge    jump_7846c
  jump_78467:
    mov    $0x1,%ebx
  jump_7846c:
    mov    %ebx,%eax
    pop    %ebp
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78473:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %edx
    mov    %eax,%edx
    call   func_765cc
    cmpl   $0x0,0x14(%edx)
    jne    jump_784a8
    mov    0xd(%edx),%ah
    test   $0x2,%ah
    je     jump_78493
    movl   $0x86,0x14(%edx)
    jmp    jump_784a8
  jump_78493:
    test   $0x4,%ah
    je     jump_784a1
    movl   $0x1,0x14(%edx)
    jmp    jump_784a8
  jump_784a1:
    movl   $0x1000,0x14(%edx)
  jump_784a8:
    mov    0x14(%edx),%eax
    call   func_73af4
    mov    %eax,0x8(%edx)
    test   %eax,%eax
    jne    jump_784d7
    lea    0x18(%edx),%eax
    mov    0xd(%edx),%cl
    movl   $0x1,0x14(%edx)
    and    $0xf8,%cl
    mov    %eax,0x8(%edx)
    mov    %cl,%ch
    mov    %cl,0xd(%edx)
    or     $0x4,%ch
    mov    %ch,0xd(%edx)
    jmp    jump_784db
  jump_784d7:
    orb    $0x8,0xc(%edx)
  jump_784db:
    mov    0x8(%edx),%eax
    movl   $0x0,0x4(%edx)
    mov    %eax,(%edx)
    pop    %edx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_784ea:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %ebx,%ecx
    mov    %eax,%ebx
    mov    $0x3f,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%edx
    test   %eax,%eax
    jge    jump_78507
    and    $0xffff,%eax
    call   func_76673
  jump_78507:
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78509:
/*----------------------------------------------------------------*/
    cmpb   $0x0,data_89b40
    je     jump_7852c
    and    $0xffff,%edx
    push   %edx
    push   %eax
    int3
    jmp    jump_78523
  jump_78523:
    mov    $0x1,%eax
    add    $0x8,%esp
    ret
  jump_7852c:
    xor    %eax,%eax
    ret


/*----------------------------------------------------------------*/
func_7852f:
/*----------------------------------------------------------------*/
    xor    %dh,(%ecx)
    xor    (%ebx),%dh
    xor    $0x35,%al
    ss aaa
    cmp    %bh,(%ecx)
    popa
    bound  %esp,0x64(%ebx)
    gs addr16 pushw $0x6a69
    imul   $0x6f,0x6e(%ebp,%ebp,2),%ebp
    jo     jump_785bb
    jb     jump_785bf
    je     jump_785c3
    jbe    jump_785c7
    js     jump_785cb
    jp     func_78554


/*----------------------------------------------------------------*/
func_78554:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x28,%esp
    mov    %edx,%ebp
    mov    %ebx,%edi
    mov    %edx,%esi
    xor    %dl,%dl
    lea    0x1(%esp),%ecx
    mov    %dl,(%esp)
  jump_7856a:
    lea    0x24(%esp),%ebx
    mov    %edi,0x24(%esp)
    xor    %edx,%edx
    divl   (%ebx)
    mov    %eax,(%ebx)
    mov    %cs:func_7852f(%edx),%al
    mov    %al,(%ecx)
    mov    0x24(%esp),%eax
    inc    %ecx
    test   %eax,%eax
    jne    jump_7856a
  jump_7858a:
    dec    %ecx
    mov    (%ecx),%al
    mov    %al,(%esi)
    inc    %esi
    test   %al,%al
    jne    jump_7858a
    mov    %ebp,%eax
    add    $0x28,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7859e:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %edx,%ecx
    cmp    $0xa,%ebx
    jne    jump_785b0
    test   %eax,%eax
    jge    jump_785b0
    neg    %eax
    movb   $0x2d,(%edx)
    inc    %edx
  jump_785b0:
    call   func_78554
    mov    %ecx,%eax
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_785b9:
/*----------------------------------------------------------------*/
    push   %edx
    mov    $data_854b0,%eax
  jump_785bf:
    mov    $0x1,%edx
    call   func_777af
    pop    %edx
    ret
  jump_785cb:
    xor    %dh,(%ecx)
    xor    (%ebx),%dh
    xor    $0x35,%al
    ss aaa
    cmp    %bh,(%ecx)
    popa
    bound  %esp,0x64(%ebx)
    gs addr16 pushw $0x6a69
    imul   $0x6f,0x6e(%ebp,%ebp,2),%ebp
    jo     jump_78657
    jb     jump_7865b
    je     jump_7865f
    jbe    jump_78663
    js     jump_78667
    jp     func_785f0


/*----------------------------------------------------------------*/
func_785f0:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %ebp
    sub    $0x28,%esp
    push   %edx
    mov    %ebx,%ebp
    mov    %edx,%esi
    xor    %dl,%dl
    lea    0x5(%esp),%ecx
    mov    %dl,0x4(%esp)
  jump_78605:
    lea    0x28(%esp),%ebx
    mov    %ebp,0x28(%esp)
    xor    %edx,%edx
    divl   (%ebx)
    mov    %edx,(%ebx)
    mov    0x28(%esp),%edx
    mov    %cs:jump_785cb(%edx),%dl
    mov    %dl,(%ecx)
    inc    %ecx
    test   %eax,%eax
    jne    jump_78605
  jump_78625:
    dec    %ecx
    mov    (%ecx),%al
    mov    %al,(%esi)
    inc    %esi
    test   %al,%al
    jne    jump_78625
    mov    (%esp),%eax
    add    $0x2c,%esp
    pop    %ebp
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78639:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %edx,%ecx
    cmp    $0xa,%ebx
    jne    jump_7864b
    test   %eax,%eax
    jge    jump_7864b
    neg    %eax
    movb   $0x2d,(%edx)
    inc    %edx
  jump_7864b:
    call   func_785f0
    mov    %ecx,%eax
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78654:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
  jump_78657:
    push   %ebp
    sub    $0xc,%esp
  jump_7865b:
    mov    %eax,%esi
    mov    %ebx,%edi
  jump_7865f:
    movl   $0x0,0xc(%ebx)
    mov    %ds,0x8(%esp)
    mov    0x15(%edi),%cl
    xor    %ebx,%ebx
    cmp    $0x47,%cl
    jb     jump_78691
    jbe    jump_7869e
    cmp    $0x66,%cl
    jb     jump_78687
    jbe    jump_786b3
    cmp    $0x67,%cl
    je     jump_7869e
    jmp    jump_78725
  jump_78687:
    cmp    $0x65,%cl
    je     jump_786ae
    jmp    jump_78725
  jump_78691:
    cmp    $0x45,%cl
    jb     jump_78725
    jbe    jump_786ae
    jmp    jump_786b3
  jump_7869e:
    cmpl   $0x0,0x8(%edi)
    jne    jump_786ab
    movl   $0x1,0x8(%edi)
  jump_786ab:
    sub    $0x2,%cl
  jump_786ae:
    mov    $0x1,%ebx
  jump_786b3:
    mov    (%edx),%ebp
    add    $0x8,%ebp
    mov    %ebp,(%edx)
    mov    -0x8(%ebp),%eax
    mov    %eax,(%esp)
    mov    -0x4(%ebp),%eax
    mov    %eax,0x4(%esp)
    cmpl   $0xffffffff,0x8(%edi)
    jne    jump_786d4
    movl   $0x6,0x8(%edi)
  jump_786d4:
    mov    0x15(%edi),%al
    and    $0x5f,%al
    and    $0xff,%eax
    push   %eax
    xor    %eax,%eax
    mov    %cl,%al
    push   %eax
    push   $0x3
    push   %ebx
    lea    0x10(%esp),%edx
    xor    %ecx,%ecx
    push   $0x27
    mov    %esi,%eax
    mov    0x8(%edi),%ebx
    call   func_7cb71
    mov    (%esi),%ah
    cmp    $0x2a,%ah
    jne    jump_78703
    mov    %ah,0x16(%edi)
  jump_78703:
    movb   $0x0,0x27(%esi)
  jump_78707:
    cmpb   $0x20,(%esi)
    jne    jump_7870f
    inc    %esi
    jmp    jump_78707
  jump_7870f:
    mov    %esi,%eax
    mov    %edi,%edx
    call   func_78731
    mov    %ds,0x8(%esp)
    mov    %esi,%eax
    movl   $0xffffffff,0x8(%edi)
  jump_78725:
    mov    0x8(%esp),%edx
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78731:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %edx,%ebx
    testb  $0x1,0x14(%edx)
    jne    jump_78776
  jump_7873b:
    mov    (%eax),%dh
    test   %dh,%dh
    je     jump_7874e
    cmp    $0x65,%dh
    je     jump_7874e
    cmp    $0x45,%dh
    je     jump_7874e
    inc    %eax
    jmp    jump_7873b
  jump_7874e:
    mov    %eax,%edx
    mov    0x15(%ebx),%cl
    dec    %eax
    cmp    $0x47,%cl
    je     jump_7875e
    cmp    $0x67,%cl
    jne    jump_78766
  jump_7875e:
    cmpb   $0x30,(%eax)
    jne    jump_78766
    dec    %eax
    jmp    jump_7875e
  jump_78766:
    cmpb   $0x2e,(%eax)
    je     jump_7876c
    inc    %eax
  jump_7876c:
    mov    (%edx),%bl
    inc    %edx
    mov    %bl,(%eax)
    inc    %eax
    test   %bl,%bl
    jne    jump_7876c
  jump_78776:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_78779:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,%ebx
    xor    %edx,%edx
    call   func_7cd95
    fstpl  (%ebx)
    pop    %ebx
    ret

vtable_78788:
    .long   0

vtable_7878c:
    .long   0


/*----------------------------------------------------------------*/
func_78790:
/*----------------------------------------------------------------*/
    add    %al,(%eax)


/*----------------------------------------------------------------*/
func_78792:
/*----------------------------------------------------------------*/
    or     (%eax),%al
    inc    %esi
    .byte 0x0

vtable_78796:
    .long   0


/*----------------------------------------------------------------*/
func_787e2:
/*----------------------------------------------------------------*/
    cld
    incl   (%ecx)
    add    %al,(%eax)
    add    %al,(%edx)
    add    %al,(%ebx)
    add    %dh,%bl
    incl   (%eax,%eax,1)
    add    %al,(%eax)
    or     %al,(%eax)
    or     $0x0,%al
    iret


/*----------------------------------------------------------------*/
func_78832:
/*----------------------------------------------------------------*/
    add    %eax,0x0(%eax)
    inc    %ebp
    add    %al,(%edx)
    inc    %eax
    inc    %edx
    add    %eax,(%ebx)
    inc    %ecx
    inc    %ebx
    xchg   %ebx,%ebx

vtable_78840:
    .long   func_78df2
    .long   func_78df8
    .long   func_78dfe
    .long   func_78e04
    .long   func_78eb4
    .long   func_78e12
    .long   func_78e18
    .long   func_78e1e
    .long   func_78e24
    .long   func_78e2c
    .long   func_78e34
    .long   func_78e3c
    .long   func_78eb4
    .long   func_78e4e
    .long   func_78e58
    .long   func_78e60
    .long   func_78e68
    .long   func_78e71
    .long   func_78e7a
    .long   func_78e83
    .long   func_78eb4
    .long   func_78e97
    .long   func_78ea2
    .long   func_78eab

vtable_788a0:
    .long   func_78df2
    .long   func_78df8
    .long   func_78dfe
    .long   func_78e04
    .long   func_78e0a
    .long   func_78e12
    .long   func_78e18
    .long   func_78e1e
    .long   func_78e24
    .long   func_78e2c
    .long   func_78e34
    .long   func_78e3c
    .long   func_78e44
    .long   func_78e4e
    .long   func_78e58
    .long   func_78e60
    .long   func_78e68
    .long   func_78e71
    .long   func_78e7a
    .long   func_78e83
    .long   func_78e8c
    .long   func_78e97
    .long   func_78ea2
    .long   func_78eab

vtable_78900:
    .long   func_78ef1
    .long   func_78fe3
    .long   func_790bf
    .long   func_791b1
    .long   func_7924b
    .long   func_793a4
    .long   func_794aa
    .long   func_795ac
    .long   func_78f10
    .long   func_78eec
    .long   func_790de
    .long   func_78eec
    .long   func_7926e
    .long   func_78eec
    .long   func_794cb
    .long   func_78eec
    .long   func_78f2f
    .long   func_7901d
    .long   func_790fd
    .long   func_791eb
    .long   func_79291
    .long   func_793e2
    .long   func_794ec
    .long   func_795e8
    .long   func_78f4b
    .long   func_7902e
    .long   func_79119
    .long   func_79227
    .long   func_792b1
    .long   func_79415
    .long   func_7950a
    .long   func_79630
    .long   func_78f67
    .long   func_7903f
    .long   func_79135
    .long   func_78eec
    .long   func_792d1
    .long   func_7942a
    .long   func_79528
    .long   func_79660
    .long   func_78f86
    .long   func_7905d
    .long   func_79154
    .long   func_7935d
    .long   func_792f4
    .long   func_78eec
    .long   func_79549
    .long   func_79665
    .long   func_78fa5
    .long   func_7909d
    .long   func_79173
    .long   func_78eec
    .long   func_79317
    .long   func_79471
    .long   func_7956a
    .long   func_7969f
    .long   func_78fc4
    .long   func_790b1
    .long   func_79192
    .long   func_793f7
    .long   func_7933a
    .long   func_7949c
    .long   func_7958b
    .long   func_796a4

vtable_78a00:
    .long   func_796fa
    .long   func_7979c
    .long   func_796c8
    .long   func_796c8
    .long   func_79dad
    .long   func_79e2b
    .long   func_79ec6
    .long   func_79e2b
    .long   func_7970f
    .long   func_797e4
    .long   func_796c8
    .long   func_796c8
    .long   func_79dc2
    .long   func_797e4
    .long   func_79f11
    .long   func_797e4
    .long   func_79724
    .long   func_796cd
    .long   func_796c8
    .long   func_796c8
    .long   func_79724
    .long   func_79e4a
    .long   func_796c8
    .long   func_79e4a
    .long   func_79736
    .long   func_79e9a
    .long   func_796c8
    .long   func_796c8
    .long   func_79736
    .long   func_79e9a
    .long   func_79f5c
    .long   func_79e9a
    .long   func_79748
    .long   func_7980c
    .long   func_796c8
    .long   func_79d53
    .long   func_79dd7
    .long   func_79e76
    .long   func_79fe5
    .long   func_7a111
    .long   func_7975d
    .long   func_7988d
    .long   func_79cca
    .long   func_796c8
    .long   func_79dec
    .long   func_79e88
    .long   func_7a030
    .long   func_796c8
    .long   func_79772
    .long   func_79aa8
    .long   func_796c8
    .long   func_796c8
    .long   func_79e01
    .long   func_796c8
    .long   func_7a07b
    .long   func_796c8
    .long   func_79787
    .long   func_79bb2
    .long   func_796c8
    .long   func_796c8
    .long   func_79e16
    .long   func_796c8
    .long   func_7a0c6
    .long   func_796c8


/*----------------------------------------------------------------*/
func_78b00:
/*----------------------------------------------------------------*/
    sti
    pusha
    mov    %esp,%ebp
    push   0x40(%ebp)
    push   0x44(%ebp)
    mov    0x3c(%ebp),%cx
    mov    %cx,-0x6(%ebp)
    mov    0x38(%ebp),%ecx
    mov    %ecx,0xc(%ebp)
    call   func_78b94
    pop    %ds
    pop    %es
    popa
    iret


/*----------------------------------------------------------------*/
func_78b70:
/*----------------------------------------------------------------*/
    sti
    sub    $0xc,%esp
    push   %eax
    mov    %esp,%eax
    add    $0x1c,%eax
    push   %ecx
    push   %edx
    push   %ebx
    push   %eax
    push   %ebp
    push   %esi
    push   %edi
    push   %es
    push   %ds
    mov    %ss,0x2(%esp)
    call   func_78b94
    pop    %ds
    pop    %es
    popa
    add    $0xc,%esp
    iret


/*----------------------------------------------------------------*/
func_78b94:
/*----------------------------------------------------------------*/
    mov    %esp,%ebp
    mov    0x38(%ebp),%esi
    mov    0x3c(%ebp),%ds
    mov    0x4(%ebp),%cx
    mov    0x6(%ebp),%dx
    mov    (%esi),%al
    cmp    $0x9b,%al
    jbe    jump_78c20
  jump_78bae:
    mov    %al,%bl
    and    $0xf8,%bl
    cmp    $0xd8,%bl
    jne    jump_78cc7
    mov    0x1(%esi),%ah
    add    $0x2,%esi
    and    $0x7,%al
    cmp    $0xc0,%ah
    jae    jump_78c7d
    mov    %ah,%bl
    mov    %ah,%bh
    shr    $0x3,%bh
    and    $0x1807,%ebx
    or     %bh,%bl
    mov    $0x0,%bh
    call   *%cs:vtable_78840(,%ebx,4)
    mov    %cx,%es
    mov    %esi,0x38(%ebp)
    mov    %ebx,%esi
    mov    %ah,%bl
    and    $0x38,%ebx
    or     %al,%bl
    call   func_73a40
    lea    data_89b4c,%ebp
    mov    %ds:0x4(%ebp),%edi
    and    $0x3800,%edi
    shr    $0xb,%edi
    lea    (%edi,%edi,4),%edi
    add    %edi,%edi
    jmp    *%cs:vtable_78900(,%ebx,4)
  jump_78c1a:
    mov    (%esi),%al
    cmp    $0x9b,%al
    ja     jump_78bae
  jump_78c20:
    je     jump_78c46
    cmp    $0x26,%al
    je     jump_78c64
    cmp    $0x2e,%al
    je     jump_78c49
    cmp    $0x36,%al
    je     jump_78c5b
    cmp    $0x3e,%al
    je     jump_78c52
    cmp    $0x64,%al
    je     jump_78c6d
    cmp    $0x65,%al
    je     jump_78c75
    cmp    $0x66,%al
    je     jump_78c46
    cmp    $0x67,%al
    jne    jump_78bae
  jump_78c46:
    inc    %esi
    jmp    jump_78c1a
  jump_78c49:
    mov    0x3c(%ebp),%cx
    mov    %ecx,%edx
    inc    %esi
    jmp    jump_78c1a
  jump_78c52:
    mov    0x4(%ebp),%cx
    mov    %ecx,%edx
    inc    %esi
    jmp    jump_78c1a
  jump_78c5b:
    mov    0x6(%ebp),%cx
    mov    %ecx,%edx
    inc    %esi
    jmp    jump_78c1a
  jump_78c64:
    mov    0x8(%ebp),%cx
    mov    %ecx,%edx
    inc    %esi
    jmp    jump_78c1a
  jump_78c6d:
    mov    %fs,%cx
    mov    %ecx,%edx
    inc    %esi
    jmp    jump_78c1a
  jump_78c75:
    mov    %gs,%cx
    mov    %ecx,%edx
    inc    %esi
    jmp    jump_78c1a
  jump_78c7d:
    mov    %esi,0x38(%ebp)
    call   func_73a40
    lea    data_89b4c,%ebp
    mov    %ah,%dl
    and    $0x38,%edx
    or     %al,%dl
    mov    %ds:0x4(%ebp),%edi
    and    $0x3800,%edi
    shr    $0xb,%edi
    mov    %ah,%bl
    and    $0x7,%ebx
    mov    %ebx,%esi
    cmp    $0xf801,%ax
    jne    jump_78cb0
    mov    $0x1,%si
  jump_78cb0:
    add    %edi,%esi
    and    $0x7,%esi
    lea    (%edi,%edi,4),%edi
    add    %edi,%edi
    lea    (%esi,%esi,4),%esi
    add    %esi,%esi
    jmp    *%cs:vtable_78a00(,%edx,4)
  jump_78cc7:
    ret


/*----------------------------------------------------------------*/
func_78cc8:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%ebx
    mov    $0xffffff00,%edx
    mov    0x4(%ebx),%eax
    shl    $0x19,%eax
    jae    jump_78cf6
    jne    jump_78ce2
    cmpl   $0x0,(%ebx)
    jne    jump_78ce2
    add    %edx,%edx
  jump_78ce2:
    addl   $0x100,0x4(%ebx)
    jae    jump_78cf6
    movl   $0x80000000,0x4(%ebx)
    incw   0x8(%ebx)
  jump_78cf6:
    and    %edx,0x4(%ebx)
    movl   $0x0,(%ebx)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_78d04:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%ebx
    mov    $0xfffff800,%edx
    mov    (%ebx),%eax
    shl    $0x16,%eax
    jae    jump_78d2f
    jne    jump_78d18
    add    %edx,%edx
  jump_78d18:
    addl   $0x800,(%ebx)
    adcl   $0x0,0x4(%ebx)
    jae    jump_78d2f
    movl   $0x80000000,0x4(%ebx)
    incw   0x8(%ebx)
  jump_78d2f:
    and    %edx,(%ebx)
    jmp    func_78b94
  jump_78d36:
    inc    %eax
    mov    %ds:0x4(%ebp),%dx
    and    $0xb8ff,%dx
    or     %cs:func_78832(%eax),%dh
    mov    %dx,%ds:0x4(%ebp)
  jump_78d4d:
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    jmp    func_78b94
  jump_78d88:
    inc    %eax
    mov    %ds:0x4(%ebp),%dx
    and    $0xb8ff,%dx
    or     %cs:func_78832(%eax),%dh
    mov    %dx,%ds:0x4(%ebp)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_78da4:
/*----------------------------------------------------------------*/
    or     %al,%ds:0x4(%ebp)
    test   %al,%ds:0x0(%ebp)
    jne    jump_78df1
    push   %esi
    push   %edi
    push   %ecx
    push   %es
    push   %ds
    sub    $0x6c,%esp
    mov    %ss,%cx
    mov    %cx,%es
    mov    %ebp,%esi
    mov    %esp,%edi
    mov    $0x1b,%ecx
    cld
    rep movsl %ds:(%esi),%es:(%edi)
    movzbl %ah,%eax
    call   *data_89801
    mov    %ds,%cx
    mov    %cx,%es
    mov    %ss,%cx
    mov    %cx,%ds
    mov    %ebp,%edi
    mov    %esp,%esi
    mov    $0x1b,%ecx
    cld
    rep movsl %ds:(%esi),%es:(%edi)
    add    $0x6c,%esp
    pop    %ds
    pop    %es
    pop    %ecx
    pop    %edi
    pop    %esi
  jump_78df1:
    ret


/*----------------------------------------------------------------*/
func_78df2:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0x28(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78df8:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0x24(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78dfe:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0x20(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e04:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0x1c(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e0a:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0x18(%ebp),%ebx
    mov    %edx,%ecx
    ret


/*----------------------------------------------------------------*/
func_78e12:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    ret


/*----------------------------------------------------------------*/
func_78e18:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0x10(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e1e:
/*----------------------------------------------------------------*/
    xor    %ebx,%ebx
    add    0xc(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e24:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x28(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e2c:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x24(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e34:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x20(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e3c:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x1c(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e44:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x18(%ebp),%ebx
    mov    %edx,%ecx
    ret


/*----------------------------------------------------------------*/
func_78e4e:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x14(%ebp),%ebx
    mov    %edx,%ecx
    ret


/*----------------------------------------------------------------*/
func_78e58:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0x10(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e60:
/*----------------------------------------------------------------*/
    movsbl (%esi),%ebx
    inc    %esi
    add    0xc(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e68:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x28(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e71:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x24(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e7a:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x20(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e83:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x1c(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78e8c:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x18(%ebp),%ebx
    mov    %edx,%ecx
    ret


/*----------------------------------------------------------------*/
func_78e97:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x14(%ebp),%ebx
    mov    %edx,%ecx
    ret


/*----------------------------------------------------------------*/
func_78ea2:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0x10(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78eab:
/*----------------------------------------------------------------*/
    mov    (%esi),%ebx
    add    $0x4,%esi
    add    0xc(%ebp),%ebx
    ret


/*----------------------------------------------------------------*/
func_78eb4:
/*----------------------------------------------------------------*/
    mov    (%esi),%bl
    inc    %esi
    push   %ebx
    and    $0x7,%bl
    mov    %ah,%bh
    shr    $0x3,%bh
    and    $0x18,%bh
    or     %bh,%bl
    mov    $0x0,%bh
    call   *%cs:vtable_788a0(,%ebx,4)
    pop    %edx
    push   %ecx
    mov    %edx,%ecx
    and    $0x38,%dl
    cmp    $0x20,%dl
    je     jump_78eea
    shr    %edx
    neg    %edx
    mov    0x28(%ebp,%edx,1),%edx
    shr    $0x6,%cl
    shl    %cl,%edx
    add    %edx,%ebx
  jump_78eea:
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_78eec:
/*----------------------------------------------------------------*/
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_78ef1:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7aae2
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2b8
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_78f10:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7aae2
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a6ec
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_78f2f:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7aae2
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a47e
    jmp    jump_78d88


/*----------------------------------------------------------------*/
func_78f4b:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7aae2
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a47e
    jmp    jump_78d36


/*----------------------------------------------------------------*/
func_78f67:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7aae2
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2aa
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_78f86:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7aae2
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2aa
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_78fa5:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7aae2
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a517
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_78fc4:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7aae2
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a517
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_78fe3:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %es:(%esi),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7aae2
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7901d:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7a99c
    mov    %eax,%es:(%esi)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7902e:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7a99c
    mov    %eax,%es:(%esi)
    jmp    jump_78d4d


/*----------------------------------------------------------------*/
func_7903f:
/*----------------------------------------------------------------*/
    mov    $0x7,%ecx
    push   %ds
    push   %es
    mov    %es,%ax
    mov    %ds,%dx
    mov    %dx,%es
    mov    %ax,%ds
    mov    %ebp,%edi
    rep movsl %ds:(%esi),%es:(%edi)
    pop    %es
    pop    %ds
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7905d:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    mov    %ax,%ds:0x0(%ebp)
    and    $0x300,%ax
    cmp    $0x300,%ax
    jne    jump_7907c
    lea    func_78b94,%edx
    mov    %edx,%ds:0x76(%ebp)
    jmp    jump_79098
  jump_7907c:
    cmp    $0x200,%ax
    jne    jump_7908e
    lea    func_78d04,%edx
    mov    %edx,%ds:0x76(%ebp)
    jmp    jump_79098
  jump_7908e:
    lea    func_78cc8,%edx
    mov    %edx,%ds:0x76(%ebp)
  jump_79098:
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7909d:
/*----------------------------------------------------------------*/
    mov    $0x7,%ecx
    mov    %edi,%ebx
    mov    %esi,%edi
    mov    %ebp,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    %ebx,%edi
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_790b1:
/*----------------------------------------------------------------*/
    mov    %ds:0x0(%ebp),%ax
    mov    %ax,%es:(%esi)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_790bf:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2b8
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_790de:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a6ec
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_790fd:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a47e
    jmp    jump_78d88


/*----------------------------------------------------------------*/
func_79119:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a47e
    jmp    jump_78d36


/*----------------------------------------------------------------*/
func_79135:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2aa
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79154:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2aa
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79173:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a517
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79192:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a517
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_791b1:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %es:(%esi),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7a8d6
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_791eb:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%ebx
    push   (%ebx)
    push   0x4(%ebx)
    push   0x6(%ebx)
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %ds:0x0(%ebp),%dx
    and    $0xc00,%dx
    call   func_7aba7
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7a867
    mov    %eax,%es:(%esi)
    lea    0x1c(%edi,%ebp,1),%ebx
    pop    0x6(%ebx)
    pop    0x4(%ebx)
    pop    (%ebx)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79227:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %ds:0x0(%ebp),%dx
    and    $0xc00,%dx
    call   func_7aba7
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7a867
    mov    %eax,%es:(%esi)
    jmp    jump_78d4d


/*----------------------------------------------------------------*/
func_7924b:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7a91c
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2b8
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7926e:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7a91c
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a6ec
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79291:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7a91c
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a47e
    jmp    jump_78d88


/*----------------------------------------------------------------*/
func_792b1:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7a91c
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a47e
    jmp    jump_78d36


/*----------------------------------------------------------------*/
func_792d1:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7a91c
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2aa
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_792f4:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7a91c
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2aa
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79317:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7a91c
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a517
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7933a:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x6c(%ebp),%ebx
    call   func_7a91c
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a517
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7935d:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %es:(%esi),%eax
    mov    %eax,0x1c(%edi,%ebp,1)
    mov    %es:0x4(%esi),%eax
    mov    %eax,0x20(%edi,%ebp,1)
    mov    %es:0x8(%esi),%ax
    mov    %ax,0x24(%edi,%ebp,1)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_793a4:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %es:(%esi),%eax
    mov    %es:0x4(%esi),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a91c
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_793e2:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7aa1b
    mov    %eax,%es:(%esi)
    mov    %edx,%es:0x4(%esi)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_793f7:
/*----------------------------------------------------------------*/
    mov    0x1c(%edi,%ebp,1),%eax
    mov    %eax,%es:(%esi)
    mov    0x20(%edi,%ebp,1),%eax
    mov    %eax,%es:0x4(%esi)
    mov    0x24(%edi,%ebp,1),%ax
    mov    %ax,%es:0x8(%esi)
    jmp    jump_78d4d


/*----------------------------------------------------------------*/
func_79415:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7aa1b
    mov    %eax,%es:(%esi)
    mov    %edx,%es:0x4(%esi)
    jmp    jump_78d4d


/*----------------------------------------------------------------*/
func_7942a:
/*----------------------------------------------------------------*/
    mov    $0x7,%ecx
    push   %ds
    push   %es
    mov    %es,%ax
    mov    %ds,%dx
    mov    %dx,%es
    mov    %ax,%ds
    mov    %ebp,%edi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    %es:0x4(%ebp),%ebx
    and    $0x3800,%ebx
    shr    $0xb,%ebx
    lea    (%ebx,%ebx,4),%ebx
    add    %ebx,%ebx
    mov    $0x8,%ecx
  jump_79458:
    lea    0x1c(%ebp,%ebx,1),%edi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movzwl %cs:func_78792(%ebx),%ebx
    loop   jump_79458
    pop    %es
    pop    %ds
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79471:
/*----------------------------------------------------------------*/
    mov    $0x7,%ecx
    mov    %edi,%ebx
    mov    %esi,%edi
    mov    %ebp,%esi
    rep movsl %ds:(%esi),%es:(%edi)
    mov    $0x8,%ecx
  jump_79483:
    lea    0x1c(%ebx,%ebp,1),%esi
    movsl  %ds:(%esi),%es:(%edi)
    movsl  %ds:(%esi),%es:(%edi)
    movsw  %ds:(%esi),%es:(%edi)
    movzwl %cs:func_78792(%ebx),%ebx
    loop   jump_79483
    mov    %ebx,%edi
    jmp    func_79d87


/*----------------------------------------------------------------*/
func_7949c:
/*----------------------------------------------------------------*/
    mov    %ds:0x4(%ebp),%ax
    mov    %ax,%es:(%esi)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_794aa:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2b8
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_794cb:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a6ec
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_794ec:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a47e
    jmp    jump_78d88


/*----------------------------------------------------------------*/
func_7950a:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a47e
    jmp    jump_78d36


/*----------------------------------------------------------------*/
func_79528:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2aa
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79549:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2aa
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7956a:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a517
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7958b:
/*----------------------------------------------------------------*/
    mov    %es:(%esi),%ax
    cwtl
    lea    0x6c(%ebp),%edx
    call   func_7a8d6
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a517
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_795ac:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %es:(%esi),%ax
    cwtl
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7a8d6
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_795e8:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%ebx
    push   (%ebx)
    push   0x4(%ebx)
    push   0x6(%ebx)
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %ds:0x0(%ebp),%dx
    and    $0xc00,%dx
    call   func_7aba7
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7a867
    mov    %eax,%edx
    cwtl
    cmp    %edx,%eax
    je     jump_7961b
    mov    $0x8000,%ax
  jump_7961b:
    mov    %ax,%es:(%esi)
    lea    0x1c(%edi,%ebp,1),%ebx
    pop    0x6(%ebx)
    pop    0x4(%ebx)
    pop    (%ebx)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79630:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %ds:0x0(%ebp),%dx
    and    $0xc00,%dx
    call   func_7aba7
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7a867
    mov    %eax,%edx
    cwtl
    cmp    %edx,%eax
    je     jump_79657
    mov    $0x8000,%ax
  jump_79657:
    mov    %ax,%es:(%esi)
    jmp    jump_78d4d


/*----------------------------------------------------------------*/
func_79660:
/*----------------------------------------------------------------*/
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79665:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %es:(%esi),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7a8e7
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7969f:
/*----------------------------------------------------------------*/
    jmp    jump_78d4d


/*----------------------------------------------------------------*/
func_796a4:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %ds:0x0(%ebp),%dx
    and    $0xc00,%dx
    call   func_7aba7
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7a86c
    mov    %eax,%es:(%esi)
    jmp    jump_78d4d


/*----------------------------------------------------------------*/
func_796c8:
/*----------------------------------------------------------------*/
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_796cd:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_796d5(,%ebx,4)

vtable_796d5:
    .long   func_796f5
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8


/*----------------------------------------------------------------*/
func_796f5:
/*----------------------------------------------------------------*/
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_796fa:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2b8
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7970f:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a6ec
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79724:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    call   func_7a47e
    jmp    jump_78d88


/*----------------------------------------------------------------*/
func_79736:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    call   func_7a47e
    jmp    jump_78d36


/*----------------------------------------------------------------*/
func_79748:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2aa
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7975d:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a2aa
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79772:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a517
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79787:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%edi,%ebp,1),%ebx
    call   func_7a517
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7979c:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    0x1c(%esi,%ebp,1),%eax
    mov    %eax,0x1c(%edi,%ebp,1)
    mov    0x20(%esi,%ebp,1),%eax
    mov    %eax,0x20(%edi,%ebp,1)
    mov    0x24(%esi,%ebp,1),%ax
    mov    %ax,0x24(%edi,%ebp,1)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_797e4:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%ebx
    lea    0x1c(%esi,%ebp,1),%esi
    mov    (%esi),%eax
    xchg   %eax,(%ebx)
    mov    %eax,(%esi)
    mov    0x4(%esi),%eax
    xchg   %eax,0x4(%ebx)
    mov    %eax,0x4(%esi)
    mov    0x8(%esi),%ax
    xchg   %ax,0x8(%ebx)
    mov    %ax,0x8(%esi)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7980c:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_79814(,%ebx,4)

vtable_79814:
    .long   func_79834
    .long   func_79841
    .long   func_796c8
    .long   func_796c8
    .long   func_7984e
    .long   func_7987f
    .long   func_796c8
    .long   func_796c8


/*----------------------------------------------------------------*/
func_79834:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    xorb   $0x80,0x9(%eax)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79841:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    andb   $0x7f,0x9(%eax)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7984e:
/*----------------------------------------------------------------*/
    mov    %cs:vtable_78788,%eax
    mov    %eax,%ds:0x6c(%ebp)
    mov    %cs:vtable_7878c,%eax
    mov    %eax,%ds:0x70(%ebp)
    mov    %cs:func_78790,%ax
    mov    %ax,%ds:0x74(%ebp)
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x6c(%ebp),%edx
    call   func_7a47e
    jmp    jump_78d88


/*----------------------------------------------------------------*/
func_7987f:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7b02e
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7988d:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_79895(,%ebx,4)

vtable_79895:
    .long   func_798b5
    .long   func_798f8
    .long   func_7993d
    .long   func_79982
    .long   func_799c7
    .long   func_79a0c
    .long   func_79a51
    .long   func_796c8


/*----------------------------------------------------------------*/
func_798b5:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    sub    %eax,%eax
    mov    %eax,(%esi)
    movl   $0x80000000,0x4(%esi)
    movw   $0x3fff,0x8(%esi)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_798f8:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    movl   $0xcd1b8afe,(%esi)
    movl   $0xd49a784b,0x4(%esi)
    movw   $0x4000,0x8(%esi)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7993d:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    movl   $0x5c17f0bc,(%esi)
    movl   $0xb8aa3b29,0x4(%esi)
    movw   $0x3fff,0x8(%esi)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79982:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    movl   $0x2168c235,(%esi)
    movl   $0xc900daa2,0x4(%esi)
    movw   $0x4000,0x8(%esi)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_799c7:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    movl   $0xfbcff799,(%esi)
    movl   $0x9a209a84,0x4(%esi)
    movw   $0x3ffd,0x8(%esi)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79a0c:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    movl   $0xd1cf79ac,(%esi)
    movl   $0xb17217f7,0x4(%esi)
    movw   $0x3ffe,0x8(%esi)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79a51:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    sub    %eax,%eax
    mov    %eax,(%esi)
    mov    %eax,0x4(%esi)
    mov    %ax,0x8(%esi)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787e4(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79aa8:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_79ab0(,%ebx,4)

vtable_79ab0:
    .long   func_79ad0
    .long   func_79add
    .long   func_79b24
    .long   func_7a139
    .long   func_7a182
    .long   func_7a1e7
    .long   func_79b70
    .long   func_79b91


/*----------------------------------------------------------------*/
func_79ad0:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7b654
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79add:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7b135
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79b24:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7b61e
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%esi
    sub    %eax,%eax
    mov    %eax,(%esi)
    movl   $0x80000000,0x4(%esi)
    movw   $0x3fff,0x8(%esi)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79b70:
/*----------------------------------------------------------------*/
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79b91:
/*----------------------------------------------------------------*/
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79bb2:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_79bba(,%ebx,4)

vtable_79bba:
    .long   func_79bda
    .long   func_79c04
    .long   func_79c4b
    .long   func_79c58
    .long   func_7a211
    .long   func_7a229
    .long   func_79cb0
    .long   func_79cbd


/*----------------------------------------------------------------*/
func_79bda:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    call   func_7af4d
    and    $0x7,%eax
    mov    %ds:0x4(%ebp),%dx
    and    $0xb8ff,%dx
    or     %cs:0x78836(%eax),%dh /* Warning: address points to a valid object/reloc, but no label found */
    mov    %dx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79c04:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7b11c
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79c4b:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7b828
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79c58:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%ebx
    push   (%ebx)
    push   0x4(%ebx)
    push   0x6(%ebx)
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7b607
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%ebx
    pop    0x6(%ebx)
    pop    0x4(%ebx)
    pop    (%ebx)
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7b611
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79cb0:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7b607
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79cbd:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    call   func_7b611
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79cca:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_79cd2(,%ebx,4)

vtable_79cd2:
    .long   func_796c8
    .long   func_79cf2
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8


/*----------------------------------------------------------------*/
func_79cf2:
/*----------------------------------------------------------------*/
    mov    0x1c(%edi,%ebp,1),%eax
    mov    %eax,%ds:0x6c(%ebp)
    mov    0x20(%edi,%ebp,1),%eax
    mov    %eax,%ds:0x70(%ebp)
    mov    0x24(%edi,%ebp,1),%ax
    mov    %ax,%ds:0x74(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7a47e
    jmp    jump_78d36


/*----------------------------------------------------------------*/
func_79d53:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_79d5b(,%ebx,4)

vtable_79d5b:
    .long   func_796c8
    .long   func_796c8
    .long   func_79d7b
    .long   func_79d87
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8


/*----------------------------------------------------------------*/
func_79d7b:
/*----------------------------------------------------------------*/
    andw   $0x7f00,%ds:0x4(%ebp)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79d87:
/*----------------------------------------------------------------*/
    movw   $0x33f,%ds:0x0(%ebp)
    movw   $0x0,%ds:0x4(%ebp)
    movw   $0xffff,%ds:0x8(%ebp)
    lea    func_78b94,%edx
    mov    %edx,%ds:0x76(%ebp)
    sub    %edi,%edi
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79dad:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7a2b8
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79dc2:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7a6ec
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79dd7:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7a2aa
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79dec:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7a2aa
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79e01:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7a517
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79e16:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7a517
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79e2b:
/*----------------------------------------------------------------*/
    mov    %cs:func_787e2(%esi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%esi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79e4a:
/*----------------------------------------------------------------*/
    mov    0x1c(%edi,%ebp,1),%eax
    mov    %eax,0x1c(%esi,%ebp,1)
    mov    0x20(%edi,%ebp,1),%eax
    mov    %eax,0x20(%esi,%ebp,1)
    mov    0x24(%edi,%ebp,1),%ax
    mov    %ax,0x24(%esi,%ebp,1)
    mov    %cs:func_787e2(%esi),%bx
    and    %bx,%ds:0x8(%ebp)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_79e76:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    call   func_7a47e
    jmp    jump_78d88


/*----------------------------------------------------------------*/
func_79e88:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    call   func_7a47e
    jmp    jump_78d36


/*----------------------------------------------------------------*/
func_79e9a:
/*----------------------------------------------------------------*/
    mov    0x1c(%edi,%ebp,1),%eax
    mov    %eax,0x1c(%esi,%ebp,1)
    mov    0x20(%edi,%ebp,1),%eax
    mov    %eax,0x20(%esi,%ebp,1)
    mov    0x24(%edi,%ebp,1),%ax
    mov    %ax,0x24(%esi,%ebp,1)
    mov    %cs:func_787e2(%esi),%bx
    and    %bx,%ds:0x8(%ebp)
    jmp    jump_78d4d


/*----------------------------------------------------------------*/
func_79ec6:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7a2b8
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79f11:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7a6ec
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_79f5c:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_79f64(,%ebx,4)

vtable_79f64:
    .long   func_796c8
    .long   func_79f84
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8


/*----------------------------------------------------------------*/
func_79f84:
/*----------------------------------------------------------------*/
    mov    0x1c(%edi,%ebp,1),%eax
    mov    %eax,%ds:0x6c(%ebp)
    mov    0x20(%edi,%ebp,1),%eax
    mov    %eax,%ds:0x70(%ebp)
    mov    0x24(%edi,%ebp,1),%ax
    mov    %ax,%ds:0x74(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    lea    0x6c(%ebp),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    call   func_7a47e
    jmp    jump_78d36


/*----------------------------------------------------------------*/
func_79fe5:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7a2aa
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7a030:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7a2aa
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7a07b:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7a517
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7a0c6:
/*----------------------------------------------------------------*/
    lea    0x1c(%esi,%ebp,1),%eax
    lea    0x1c(%edi,%ebp,1),%edx
    lea    0x1c(%esi,%ebp,1),%ebx
    call   func_7a517
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7a111:
/*----------------------------------------------------------------*/
    jmp    *%cs:vtable_7a119(,%ebx,4)

vtable_7a119:
    .long   func_7a29a
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8
    .long   func_796c8


/*----------------------------------------------------------------*/
func_7a139:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%edx
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    mov    %cs:0x787ea(%edi),%bx /* Warning: address points to a valid object/reloc, but no label found */
    or     %bx,%ds:0x8(%ebp)
    movzwl %cs:func_78792(%edi),%edi
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %eax,%ebx
    call   func_7ad34
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7a182:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%esi
    movzwl %cs:0x78794(%edi),%edi /* Warning: address points to a valid object/reloc, but no label found */
    mov    %cs:vtable_78796(%edi),%bx
    andw   $0xc7ff,%ds:0x4(%ebp)
    or     %bx,%ds:0x4(%ebp)
    mov    %cs:func_787e2(%edi),%bx
    and    %bx,%ds:0x8(%ebp)
    lea    0x1c(%edi,%ebp,1),%ebx
    mov    (%esi),%eax
    mov    %eax,(%ebx)
    mov    0x4(%esi),%eax
    mov    %eax,0x4(%ebx)
    mov    0x8(%esi),%ax
    mov    %ax,%dx
    and    $0x8000,%dx
    or     $0x3fff,%dx
    mov    %dx,0x8(%ebx)
    and    $0x7fff,%ax
    sub    $0x3fff,%ax
    cwtl
    mov    %esi,%edx
    call   func_7a867
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7a1e7:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    lea    0x1c(%esi,%ebp,1),%edx
    call   func_7af4d
    and    $0x7,%eax
    mov    %ds:0x4(%ebp),%dx
    and    $0xb8ff,%dx
    or     %cs:0x78836(%eax),%dh /* Warning: address points to a valid object/reloc, but no label found */
    mov    %dx,%ds:0x4(%ebp)
    notrack jmp *0x76(%ebp)


/*----------------------------------------------------------------*/
func_7a211:
/*----------------------------------------------------------------*/
    lea    0x1c(%edi,%ebp,1),%eax
    mov    %ds:0x0(%ebp),%dx
    and    $0xc00,%dx
    call   func_7aba7
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7a229:
/*----------------------------------------------------------------*/
    mov    %edi,%esi
    movzwl %cs:func_78792(%edi),%edi
    lea    0x1c(%edi,%ebp,1),%eax
    mov    0x8(%eax),%cx
    call   func_7a867
    mov    %esi,%edi
    lea    0x1c(%edi,%ebp,1),%ebx
    mov    %eax,%edx
    cwtl
    cmp    %edx,%eax
    je     jump_7a268
    or     %ch,%ch
    jns    jump_7a259
    sub    %dx,%dx
    sub    %cx,%cx
    jmp    jump_7a266
  jump_7a259:
    mov    $0x7fff,%dx
    mov    0x8(%ebx),%cx
    and    $0x8000,%cx
  jump_7a266:
    jmp    jump_7a28e
  jump_7a268:
    mov    0x8(%ebx),%dx
    mov    %dx,%cx
    and    $0x8000,%cx
    and    $0x7fff,%dx
    add    %ax,%dx
    jns    jump_7a28e
    or     %ah,%ah
    jns    jump_7a28a
    sub    %dx,%dx
    sub    %cx,%cx
    jmp    jump_7a28e
  jump_7a28a:
    mov    $0x7fff,%dx
  jump_7a28e:
    or     %cx,%dx
    mov    %dx,0x8(%ebx)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7a29a:
/*----------------------------------------------------------------*/
    mov    %ds:0x4(%ebp),%ax
    mov    %esp,%ebp
    mov    %ax,0x28(%ebp)
    jmp    func_78b94


/*----------------------------------------------------------------*/
func_7a2aa:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ecx
    push   %ebx
    mov    0x8(%edx),%si
    xor    $0x8000,%si
    jmp    jump_7a2bf


/*----------------------------------------------------------------*/
func_7a2b8:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ecx
    push   %ebx
    mov    0x8(%edx),%si
  jump_7a2bf:
    mov    0x4(%edx),%ecx
    mov    (%edx),%ebx
    shl    $0x10,%esi
    mov    0x8(%eax),%si
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    call   func_7a312
    pop    %ebx
    mov    %eax,(%ebx)
    mov    %edx,0x4(%ebx)
    mov    %si,0x8(%ebx)
    pop    %ecx
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7a2e2:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ecx
    push   %ebx
    mov    0x18(%esp),%si
    mov    0x14(%esp),%ecx
    mov    0x10(%esp),%ebx
    shl    $0x10,%esi
    mov    0x8(%eax),%si
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    call   func_7a312
    pop    %ebx
    mov    %eax,(%ebx)
    mov    %edx,0x4(%ebx)
    mov    %si,0x8(%ebx)
    pop    %ecx
    pop    %esi
    ret    $0xc


/*----------------------------------------------------------------*/
func_7a312:
/*----------------------------------------------------------------*/
    or     %eax,%eax
    jne    jump_7a335
    or     %edx,%edx
    jne    jump_7a335
    add    %si,%si
    jne    jump_7a332
    shr    $0x10,%esi
    mov    %ebx,%eax
    mov    %ecx,%edx
    add    %esi,%esi
    or     %si,%bx
    or     %edx,%ebx
    je     jump_7a331
    shr    %esi
  jump_7a331:
    ret
  jump_7a332:
    rcr    %si
  jump_7a335:
    or     %ecx,%ecx
    jne    jump_7a346
    or     %ebx,%ebx
    jne    jump_7a346
    test   $0x7fff0000,%esi
    jne    jump_7a346
    ret
  jump_7a346:
    push   %ebp
    push   %edi
    xchg   %ecx,%esi
    mov    %ecx,%edi
    rol    $0x10,%edi
    sar    $0x10,%edi
    sar    $0x10,%ecx
    and    $0x80007fff,%edi
    and    $0x80007fff,%ecx
    mov    %ecx,%ebp
    rol    $0x10,%edi
    rol    $0x10,%ecx
    add    %di,%cx
    rol    $0x10,%edi
    rol    $0x10,%ecx
    sub    %di,%cx
    je     jump_7a395
    jae    jump_7a381
    mov    %edi,%ebp
    neg    %cx
    xchg   %eax,%ebx
    xchg   %edx,%esi
  jump_7a381:
    cmp    $0x40,%cx
    jbe    jump_7a395
    add    %ebp,%ebp
    rcr    %bp
    mov    %ebx,%eax
    mov    %esi,%edx
    mov    %ebp,%esi
    pop    %edi
    pop    %ebp
    ret
  jump_7a395:
    mov    $0x0,%ch
    or     %ecx,%ecx
    jns    jump_7a3aa
    mov    $0xff,%ch
    neg    %esi
    neg    %ebx
    sbb    $0x0,%esi
    xor    $0x80000000,%ebp
  jump_7a3aa:
    sub    %edi,%edi
    cmp    $0x0,%cl
    je     jump_7a3dd
    push   %ebx
    sub    %ebx,%ebx
    cmp    $0x20,%cl
    jb     jump_7a3cf
    or     %eax,%eax
    setne  %bl
    mov    %ebx,%edi
    sub    %ebx,%ebx
    cmp    $0x40,%cl
    jne    jump_7a3cb
    or     %edx,%edi
    sub    %edx,%edx
  jump_7a3cb:
    mov    %edx,%eax
    sub    %edx,%edx
  jump_7a3cf:
    shrd   %cl,%eax,%ebx
    or     %ebx,%edi
    sub    %ebx,%ebx
    shrd   %cl,%edx,%eax
    shrd   %cl,%ebx,%edx
    pop    %ebx
  jump_7a3dd:
    add    %ebx,%eax
    adc    %esi,%edx
    adc    $0x0,%ch
    jns    jump_7a40e
    cmp    $0x40,%cl
    jne    jump_7a3ff
    test   $0x7fffffff,%edi
    setne  %bl
    shr    %ebx
    adc    $0x0,%eax
    adc    $0x0,%edx
    adc    $0x0,%ch
  jump_7a3ff:
    neg    %edx
    neg    %eax
    sbb    $0x0,%edx
    mov    $0x0,%ch
    xor    $0x80000000,%ebp
  jump_7a40e:
    mov    %eax,%ebx
    or     %ch,%bl
    or     %edx,%ebx
    je     jump_7a465
    or     %bp,%bp
    je     jump_7a467
    cmp    $0x0,%ch
    jne    jump_7a42e
    rol    %edi
    ror    %edi
  jump_7a424:
    dec    %bp
    je     jump_7a467
    adc    %eax,%eax
    adc    %edx,%edx
    jae    jump_7a424
  jump_7a42e:
    inc    %bp
    cmp    $0x7fff,%bp
    je     jump_7a471
    stc
    rcr    %edx
    rcr    %eax
    jae    jump_7a463
    add    %edi,%edi
    jne    jump_7a44a
    ror    %eax
    rol    %eax
  jump_7a44a:
    adc    $0x0,%eax
    adc    $0x0,%edx
    jae    jump_7a463
    rcr    %edx
    rcr    %eax
    inc    %bp
    cmp    $0x7fff,%bp
    je     jump_7a471
  jump_7a463:
    jmp    jump_7a467
  jump_7a465:
    mov    %ebx,%ebp
  jump_7a467:
    add    %ebp,%ebp
    rcr    %bp
    mov    %ebp,%esi
    pop    %edi
    pop    %ebp
    ret
  jump_7a471:
    mov    $0x7fff,%bp
    sub    %eax,%eax
    mov    $0x80000000,%edx
    jmp    jump_7a467


/*----------------------------------------------------------------*/
func_7a47e:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    mov    0x8(%eax),%si
    or     $0x8000,%si
    inc    %si
    jne    jump_7a496
    mov    0x4(%eax),%esi
    add    %esi,%esi
    or     (%eax),%esi
    jne    jump_7a4e9
  jump_7a496:
    mov    0x8(%edx),%si
    or     $0x8000,%si
    inc    %si
    jne    jump_7a4ac
    mov    0x4(%edx),%esi
    add    %esi,%esi
    or     (%edx),%esi
    jne    jump_7a4e9
  jump_7a4ac:
    mov    0x6(%eax),%esi
    mov    0x6(%edx),%edi
    xor    %esi,%edi
    mov    $0x0,%edi
    js     jump_7a4f1
    mov    0x8(%eax),%si
    cmp    0x8(%edx),%si
    jne    jump_7a4d1
    mov    0x4(%eax),%edi
    cmp    0x4(%edx),%edi
    jne    jump_7a4d1
    mov    (%eax),%edi
    cmp    (%edx),%edi
  jump_7a4d1:
    mov    $0x0,%edi
    je     jump_7a4e4
    rcr    %eax
    xor    %eax,%esi
  jump_7a4dc:
    add    %esi,%esi
    sbb    $0x0,%edi
    add    %edi,%edi
    inc    %edi
  jump_7a4e4:
    mov    %edi,%eax
    pop    %esi
    pop    %edi
    ret
  jump_7a4e9:
    mov    $0x2,%eax
    pop    %esi
    pop    %edi
    ret
  jump_7a4f1:
    or     (%eax),%edi
    or     (%edx),%edi
    or     0x4(%eax),%edi
    or     0x4(%edx),%edi
    mov    0x8(%eax),%ax
    shl    $0x10,%eax
    mov    0x8(%edx),%ax
    and    $0x7fff7fff,%eax
    or     %edi,%eax
    mov    $0x0,%edi
    jne    jump_7a4dc
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7a517:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ecx
    push   %ebx
    mov    0x8(%edx),%si
    mov    0x4(%edx),%ecx
    mov    (%edx),%ebx
    shl    $0x10,%esi
    mov    0x8(%eax),%si
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    call   func_7a541
    pop    %ebx
    mov    %eax,(%ebx)
    mov    %edx,0x4(%ebx)
    mov    %si,0x8(%ebx)
    pop    %ecx
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7a541:
/*----------------------------------------------------------------*/
    or     %ecx,%ecx
    jne    jump_7a58c
    or     %ebx,%ebx
    jne    jump_7a58c
    test   $0x7fff0000,%esi
    jne    jump_7a58c
    or     %eax,%eax
    jne    jump_7a576
    or     %edx,%edx
    jne    jump_7a576
    mov    %esi,%eax
    add    %ax,%ax
    jne    jump_7a576
    mov    $0x1,%al
    mov    $0x81,%ah
    call   func_78da4
    mov    $0xc0000000,%edx
    sub    %eax,%eax
    mov    $0xffff,%si
    jmp    jump_7a58b
  jump_7a576:
    mov    $0x4,%al
    mov    $0x83,%ah
    call   func_78da4
    mov    $0x80000000,%edx
    sub    %eax,%eax
    or     $0x7fff,%si
  jump_7a58b:
    ret
  jump_7a58c:
    or     %eax,%eax
    jne    jump_7a59d
    or     %edx,%edx
    jne    jump_7a59d
    add    %si,%si
    jne    jump_7a59a
    ret
  jump_7a59a:
    rcr    %si
  jump_7a59d:
    push   %ebp
    mov    %esp,%ebp
    push   %edi
    xchg   %ecx,%esi
    mov    %ecx,%edi
    rol    $0x10,%edi
    sar    $0x10,%edi
    sar    $0x10,%ecx
    and    $0x80007fff,%edi
    and    $0x80007fff,%ecx
    rol    $0x10,%edi
    rol    $0x10,%ecx
    add    %cx,%di
    rol    $0x10,%edi
    rol    $0x10,%ecx
    or     %di,%di
    jne    jump_7a5d8
  jump_7a5ce:
    add    %eax,%eax
    adc    %edx,%edx
    dec    %di
    or     %edx,%edx
    jns    jump_7a5ce
  jump_7a5d8:
    or     %cx,%cx
    jne    jump_7a5e7
  jump_7a5dd:
    add    %ebx,%ebx
    adc    %esi,%esi
    dec    %cx
    or     %esi,%esi
    jns    jump_7a5dd
  jump_7a5e7:
    sub    %cx,%di
    add    $0x3fff,%di
    js     jump_7a60a
    cmp    $0x7fff,%di
    jb     jump_7a60a
    mov    %ecx,%edi
    mov    $0x7fff,%di
    mov    $0x80000000,%edx
    sub    %eax,%eax
    jmp    jump_7a6e2
  jump_7a60a:
    cmp    $0xffc0,%di
    jge    jump_7a61b
    sub    %eax,%eax
    sub    %edx,%edx
    sub    %edi,%edi
    jmp    jump_7a6e2
  jump_7a61b:
    push   %edi
    push   %esi
    push   %ebx
    mov    %esi,%ecx
    mov    %edx,%edi
    mov    %eax,%esi
    sub    %eax,%eax
    cmp    %edi,%ecx
    ja     jump_7a62d
    sub    %ecx,%edx
    inc    %eax
  jump_7a62d:
    push   %eax
    mov    %esi,%eax
    div    %ecx
    push   %eax
    xchg   %eax,%ebx
    mul    %ebx
    xchg   %eax,%ecx
    xchg   %ebx,%edx
    mul    %edx
    add    %ebx,%eax
    adc    $0x0,%edx
    mov    -0x10(%ebp),%ebx
    testb  $0x1,-0x14(%ebp)
    je     jump_7a64e
    add    %ebx,%eax
    adc    -0xc(%ebp),%edx
  jump_7a64e:
    neg    %ecx
    sbb    %eax,%esi
    sbb    %edx,%edi
    je     jump_7a668
  jump_7a656:
    subl   $0x1,-0x18(%ebp)
    sbbl   $0x0,-0x14(%ebp)
    add    %ebx,%ecx
    adc    -0xc(%ebp),%esi
    adc    $0x0,%edi
    jne    jump_7a656
  jump_7a668:
    mov    %esi,%edi
    mov    %ecx,%esi
    mov    -0xc(%ebp),%ecx
    cmp    %edi,%ecx
    ja     jump_7a67d
    sub    %ecx,%edi
    addl   $0x1,-0x18(%ebp)
    adcl   $0x0,-0x14(%ebp)
  jump_7a67d:
    mov    %edi,%edx
    mov    %esi,%eax
    div    %ecx
    push   %eax
    or     %eax,%eax
    je     jump_7a6b4
    xchg   %eax,%ebx
    mul    %ebx
    xchg   %eax,%ecx
    xchg   %ebx,%edx
    mul    %edx
    add    %ebx,%eax
    adc    $0x0,%edx
    neg    %ecx
    sbb    %eax,%esi
    sbb    %edx,%edi
    je     jump_7a6b4
  jump_7a69d:
    subl   $0x1,-0x1c(%ebp)
    sbbl   $0x0,-0x18(%ebp)
    sbbl   $0x0,-0x14(%ebp)
    add    -0x10(%ebp),%ecx
    adc    -0xc(%ebp),%esi
    adc    $0x0,%edi
    jne    jump_7a69d
  jump_7a6b4:
    pop    %eax
    pop    %edx
    pop    %ebx
    add    $0x8,%esp
    pop    %edi
    dec    %di
    shr    %ebx
    jae    jump_7a6c6
    rcr    %edx
    rcr    %eax
    inc    %edi
  jump_7a6c6:
    or     %di,%di
    jg     jump_7a6e2
    jne    jump_7a6d1
    mov    $0x1,%cl
    jmp    jump_7a6d7
  jump_7a6d1:
    neg    %di
    mov    %di,%cx
  jump_7a6d7:
    sub    %ebx,%ebx
    shrd   %cl,%edx,%eax
    shrd   %cl,%ebx,%edx
    sub    %di,%di
  jump_7a6e2:
    add    %edi,%edi
    rcr    %di
    mov    %edi,%esi
    pop    %edi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7a6ec:
/*----------------------------------------------------------------*/
    push   %esi
    push   %ecx
    push   %ebx
    mov    0x8(%edx),%si
    mov    0x4(%edx),%ecx
    mov    (%edx),%ebx
    shl    $0x10,%esi
    mov    0x8(%eax),%si
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    call   func_7a716
    pop    %ebx
    mov    %eax,(%ebx)
    mov    %edx,0x4(%ebx)
    mov    %si,0x8(%ebx)
    pop    %ecx
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7a716:
/*----------------------------------------------------------------*/
    or     %eax,%eax
    jne    jump_7a727
    or     %edx,%edx
    jne    jump_7a727
    add    %si,%si
    jne    jump_7a724
    ret
  jump_7a724:
    rcr    %si
  jump_7a727:
    or     %ecx,%ecx
    jne    jump_7a73e
    or     %ebx,%ebx
    jne    jump_7a73e
    test   $0x7fff0000,%esi
    jne    jump_7a73e
    sub    %eax,%eax
    sub    %edx,%edx
    sub    %esi,%esi
    ret
  jump_7a73e:
    push   %ebp
    push   %edi
    xchg   %ecx,%esi
    mov    %ecx,%edi
    rol    $0x10,%edi
    sar    $0x10,%edi
    sar    $0x10,%ecx
    and    $0x80007fff,%edi
    and    $0x80007fff,%ecx
    add    %edi,%ecx
    sub    $0x3ffe,%cx
    jb     jump_7a76e
    cmp    $0x7fff,%cx
    jb     jump_7a76e
    jmp    jump_7a805
  jump_7a76e:
    cmp    $0xffc0,%cx
    jge    jump_7a77f
    sub    %eax,%eax
    sub    %edx,%edx
    sub    %ecx,%ecx
    jmp    jump_7a7fb
  jump_7a77f:
    push   %ecx
    sub    %ebp,%ebp
    push   %esi
    push   %edx
    push   %eax
    mul    %ebx
    xchg   %eax,%esi
    mov    %edx,%ecx
    pop    %edx
    mul    %edx
    mov    %edx,%edi
    add    %eax,%ecx
    adc    %ebp,%edi
    adc    %ebp,%ebp
    pop    %eax
    xchg   %eax,%ebx
    mul    %ebx
    add    %eax,%ecx
    adc    %edx,%edi
    adc    $0x0,%ebp
    mov    %ebx,%eax
    pop    %edx
    mul    %edx
    add    %edi,%eax
    adc    %ebp,%edx
    mov    %ecx,%ebx
    pop    %ecx
    js     jump_7a7b6
    add    %ebx,%ebx
    adc    %eax,%eax
    adc    %edx,%edx
    dec    %cx
  jump_7a7b6:
    add    %ebx,%ebx
    jae    jump_7a7e2
    jne    jump_7a7c9
    or     %esi,%esi
    setne  %bl
    shr    %ebx
    jb     jump_7a7c9
    mov    %eax,%esi
    shr    %esi
  jump_7a7c9:
    adc    $0x0,%eax
    adc    $0x0,%edx
    jae    jump_7a7e2
    rcr    %edx
    rcr    %eax
    inc    %cx
    cmp    $0x7fff,%cx
    je     jump_7a805
  jump_7a7e2:
    or     %cx,%cx
    jg     jump_7a7fb
    jne    jump_7a7ed
    mov    $0x1,%cl
    jmp    jump_7a7f0
  jump_7a7ed:
    neg    %cx
  jump_7a7f0:
    sub    %ebx,%ebx
    shrd   %cl,%edx,%eax
    shrd   %cl,%ebx,%edx
    sub    %cx,%cx
  jump_7a7fb:
    add    %ecx,%ecx
    rcr    %cx
    mov    %ecx,%esi
    pop    %edi
    pop    %ebp
    ret
  jump_7a805:
    mov    $0x7fff,%cx
    mov    $0x80000000,%edx
    sub    %eax,%eax
    jmp    jump_7a7fb


/*----------------------------------------------------------------*/
func_7a867:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x1f,%bl
    jmp    jump_7a86f


/*----------------------------------------------------------------*/
func_7a86c:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    $0x20,%bl
  jump_7a86f:
    mov    0x9(%eax),%bh
    shr    %bh
    or     %bl,%bh
    push   %ecx
    mov    0x8(%eax),%cx
    and    $0x7fff,%cx
    sub    $0x3ffe,%cx
    jl     jump_7a8d1
    cmp    $0x20,%cx
    jg     jump_7a8c9
    and    $0x3f,%bl
    cmp    %bl,%cl
    jg     jump_7a8c9
    mov    %bh,%ch
    mov    (%eax),%ebx
    mov    0x4(%eax),%eax
    add    %ebx,%ebx
    rcr    %ch
    cmp    $0x20,%cl
    jne    jump_7a8a8
    add    %ch,%ch
    jmp    jump_7a8b5
  jump_7a8a8:
    sub    %ebx,%ebx
    shld   %cl,%eax,%ebx
    shl    %cl,%eax
    add    %ch,%ch
    add    %eax,%eax
    mov    %ebx,%eax
  jump_7a8b5:
    mov    $0xff,%cl
    rcr    %cl
    and    %cl,%ch
    add    %ch,%ch
    adc    $0x0,%eax
    add    %ch,%ch
    jae    jump_7a8c6
    neg    %eax
  jump_7a8c6:
    pop    %ecx
    pop    %ebx
    ret
  jump_7a8c9:
    mov    $0x80000000,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_7a8d1:
    sub    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7a8d6:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,%ebx
    or     %eax,%eax
    jns    jump_7a8e6
    neg    %eax
    mov    $0xbfff,%edx
    jmp    jump_7a8ef
  jump_7a8e6:
    pop    %ebx


/*----------------------------------------------------------------*/
func_7a8e7:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,%ebx
    mov    $0x3fff,%edx
  jump_7a8ef:
    push   %ecx
    or     %eax,%eax
    je     jump_7a90a
    bsr    %eax,%ecx
    mov    %cl,%ch
    mov    $0x1f,%cl
    sub    %ch,%cl
    shl    %cl,%eax
    mov    %ch,%cl
    movzbl %ch,%ecx
    add    %edx,%ecx
    mov    %eax,%edx
    jmp    jump_7a90e
  jump_7a90a:
    sub    %edx,%edx
    sub    %ecx,%ecx
  jump_7a90e:
    sub    %eax,%eax
    mov    %eax,(%ebx)
    mov    %edx,0x4(%ebx)
    mov    %cx,0x8(%ebx)
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7a91c:
/*----------------------------------------------------------------*/
    push   %ecx
    mov    %edx,%ecx
    shld   $0xb,%eax,%edx
    shl    $0xb,%eax
    sar    $0x14,%ecx
    and    $0x7ff,%cx
    je     jump_7a967
    cmp    $0x7ff,%cx
    je     jump_7a93e
    add    $0x3c00,%cx
    jmp    jump_7a95f
  jump_7a93e:
    mov    $0x7fff,%cx
    test   $0x7fffffff,%edx
    jne    jump_7a94c
    or     %eax,%eax
  jump_7a94c:
    je     jump_7a95f
    push   %eax
    mov    $0x1,%al
    mov    $0x81,%ah
    call   func_78da4
    pop    %eax
    or     $0x40000000,%edx
  jump_7a95f:
    or     $0x80000000,%edx
    jmp    jump_7a98c
  jump_7a967:
    or     %edx,%edx
    jne    jump_7a973
    or     %eax,%eax
    jne    jump_7a973
    sub    %ecx,%ecx
    jmp    jump_7a98c
  jump_7a973:
    mov    $0x3c01,%cx
    or     %edx,%edx
    jne    jump_7a980
    xchg   %eax,%edx
    sub    $0x20,%cx
  jump_7a980:
    or     %edx,%edx
    js     jump_7a98c
    add    %eax,%eax
    adc    %edx,%edx
    dec    %cx
    jmp    jump_7a980
  jump_7a98c:
    mov    %eax,(%ebx)
    mov    %edx,0x4(%ebx)
    add    %ecx,%ecx
    rcr    %cx
    mov    %cx,0x8(%ebx)
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7a99c:
/*----------------------------------------------------------------*/
    push   %edx
    push   %ecx
    push   %ebx
    mov    %eax,%ebx
    mov    $0xffffff00,%edx
    mov    0x4(%ebx),%eax
    mov    %eax,%ecx
    shl    $0x19,%ecx
    mov    0x8(%ebx),%cx
    jae    jump_7a9cb
    jne    jump_7a9bd
    cmpl   $0x0,(%ebx)
    jne    jump_7a9bd
    add    %edx,%edx
  jump_7a9bd:
    add    $0x100,%eax
    jae    jump_7a9cb
    mov    $0x80000000,%eax
    inc    %cx
  jump_7a9cb:
    and    %edx,%eax
    mov    %ecx,%ebx
    and    $0x7fff,%cx
    je     jump_7aa17
    cmp    $0x7fff,%cx
    jne    jump_7a9ee
    add    %eax,%eax
    shr    $0x8,%eax
    or     $0xff000000,%eax
    add    %bx,%bx
    rcr    %eax
    jmp    jump_7aa17
  jump_7a9ee:
    add    $0xc080,%cx
    jns    jump_7a9f9
    sub    %eax,%eax
    jmp    jump_7aa17
  jump_7a9f9:
    cmp    $0xff,%cx
    jl     jump_7aa0c
    mov    $0xff000000,%eax
    add    %bx,%bx
    rcr    %eax
    jmp    jump_7aa17
  jump_7aa0c:
    add    %eax,%eax
    shrd   $0x8,%ecx,%eax
    add    %bx,%bx
    rcr    %eax
  jump_7aa17:
    pop    %ebx
    pop    %ecx
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7aa1b:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %ebx
    push   %esi
    mov    0x8(%eax),%cx
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    mov    $0xfffff800,%esi
    mov    %eax,%ebx
    shl    $0x16,%ebx
    jae    jump_7aa48
    jne    jump_7aa37
    add    %esi,%esi
  jump_7aa37:
    add    $0x800,%eax
    adc    $0x0,%edx
    jae    jump_7aa48
    mov    $0x80000000,%edx
    inc    %cx
  jump_7aa48:
    and    %esi,%eax
    mov    %ecx,%ebx
    and    $0x7fff,%cx
    add    $0xc400,%cx
    cmp    $0x7ff,%cx
    jae    jump_7aa7e
    or     %cx,%cx
    jne    jump_7aa6d
    shrd   $0xc,%edx,%eax
    add    %edx,%edx
    shr    $0xc,%edx
    jmp    jump_7aa77
  jump_7aa6d:
    shrd   $0xb,%edx,%eax
    add    %edx,%edx
    shrd   $0xb,%ecx,%edx
  jump_7aa77:
    add    %bx,%bx
    rcr    %edx
    jmp    jump_7aade
  jump_7aa7e:
    cmp    $0xc400,%cx
    jb     jump_7aab8
    cmp    $0xffcc,%cx
    jl     jump_7aab2
    sub    $0xc,%cx
    neg    %cx
    cmp    $0x20,%cl
    jb     jump_7aaa0
    sub    $0x20,%cl
    mov    %eax,%esi
    mov    %edx,%eax
    sub    %edx,%edx
  jump_7aaa0:
    shrd   %cl,%eax,%esi
    shrd   %cl,%edx,%eax
    shr    %cl,%edx
    add    %esi,%esi
    adc    $0x0,%eax
    adc    $0x0,%edx
    jmp    jump_7aab6
  jump_7aab2:
    sub    %eax,%eax
    sub    %edx,%edx
  jump_7aab6:
    jmp    jump_7aade
  jump_7aab8:
    shrd   $0xb,%edx,%eax
    add    %edx,%edx
    shr    $0xb,%edx
    add    %bx,%bx
    rcr    %edx
    or     $0x7ff00000,%edx
    cmp    $0x43ff,%cx
    je     jump_7aade
    push   %eax
    mov    $0x8,%al
    mov    $0x84,%ah
    call   func_78da4
    pop    %eax
  jump_7aade:
    pop    %esi
    pop    %ebx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7aae2:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %ebx
    mov    %edx,%ebx
    sub    %edx,%edx
    mov    %eax,%ecx
    sar    $0x17,%ecx
    and    $0xff,%cx
    je     jump_7ab1b
    shl    $0x8,%eax
    cmp    $0xff,%cl
    je     jump_7ab03
    add    $0x3f80,%cx
    jmp    jump_7ab11
  jump_7ab03:
    mov    $0xff,%ch
    and    $0x7fffffff,%eax
    je     jump_7ab11
    or     $0x40000000,%eax
  jump_7ab11:
    add    %ecx,%ecx
    rcr    %cx
    or     $0x80000000,%eax
  jump_7ab1b:
    mov    %edx,(%ebx)
    mov    %eax,0x4(%ebx)
    mov    %cx,0x8(%ebx)
    pop    %ebx
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7ab27:
/*----------------------------------------------------------------*/
    (bad)
    (bad)
    (bad)
    jg     jump_7ab2b
    (bad)
    (bad)
    aas
    (bad)
    (bad)
    lcall  *(%edi)
    (bad)
    (bad)
    decl   (%edi)
    (bad)
    (bad)
    incl   (%edi)
    (bad)
    (bad)
    incl   (%ebx)
    (bad)
    (bad)
    incl   (%ecx)
    (bad)
    (bad)
    incl   (%eax)
    (bad)
    (bad)
    jg     jump_7ab4b
  jump_7ab4b:
    (bad)
    (bad)
    aas
    add    %bh,%bh
    lcall  *(%edi)
    add    %bh,%bh
    decl   (%edi)
    add    %bh,%bh
    incl   (%edi)
    add    %bh,%bh
    incl   (%ebx)
    add    %bh,%bh
    incl   (%ecx)
    add    %bh,%bh
    incl   (%eax)
    add    %bh,%bh
    jg     jump_7ab6a
  jump_7ab6a:
    add    %bh,%bh
    aas
    add    %al,(%eax)
    lcall  *(%edi)
    add    %al,(%eax)
    decl   (%edi)
    add    %al,(%eax)
    incl   (%edi)
    add    %al,(%eax)
    incl   (%ebx)
    add    %al,(%eax)
    incl   (%ecx)
    add    %al,(%eax)
    incl   (%eax)
    add    %al,(%eax)
    jg     jump_7ab89
  jump_7ab89:
    add    %al,(%eax)
    aas
    add    %al,(%eax)
    add    %bl,(%edi)
    add    %al,(%eax)
    add    %cl,(%edi)
    add    %al,(%eax)
    add    %al,(%edi)
    add    %al,(%eax)
    add    %al,(%ebx)
    add    %al,(%eax)
    add    %al,(%ecx)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %dl,-0x75(%edi)
    clc
    sub    %ebx,%ebx
    mov    0x8(%edi),%bx
    cmp    $0x400,%dx
    je     jump_7abbc
    cmp    $0x800,%dx
  jump_7abbc:
    jne    jump_7abc7
    or     %bh,%bh
    jns    jump_7abc7
    xor    $0xc00,%dx
  jump_7abc7:
    cmp    $0xc00,%dx
    jne    jump_7abd2
    mov    $0x400,%dx
  jump_7abd2:
    and    $0x7fff,%bx
    sub    $0x403f,%bx
    jl     jump_7abe0
    pop    %edi
    ret
  jump_7abe0:
    mov    (%edi),%ecx
    add    $0x20,%bx
    jl     jump_7ac36
    mov    %cs:func_7ab27(,%ebx,4),%eax
    and    %eax,%ecx
    xor    %ecx,(%edi)
    inc    %eax
    cmp    $0x400,%dx
    je     jump_7ac34
    cmp    $0x0,%dx
    jne    jump_7ac21
    add    %ecx,%ecx
    cmp    %ecx,%eax
    ja     jump_7ac34
    jne    jump_7ac21
    rol    %eax
    jae    jump_7ac17
    test   %eax,0x4(%edi)
    jmp    jump_7ac19
  jump_7ac17:
    test   %eax,(%edi)
  jump_7ac19:
    je     jump_7ac34
    ror    %eax
  jump_7ac21:
    or     %ecx,%ecx
    je     jump_7ac34
    add    %eax,(%edi)
    adcl   $0x0,0x4(%edi)
    jae    jump_7ac34
    rcrl   0x4(%edi)
    incw   0x8(%edi)
  jump_7ac34:
    pop    %edi
    ret
  jump_7ac36:
    push   %esi
    movl   $0x0,(%edi)
    mov    0x4(%edi),%esi
    add    $0x20,%bx
    jl     jump_7ac99
    mov    %cs:func_7ab27(,%ebx,4),%eax
    and    %eax,%esi
    xor    %esi,0x4(%edi)
    inc    %eax
    cmp    $0x400,%dx
    je     jump_7ac96
    cmp    $0x0,%dx
    jne    jump_7ac86
    rol    %ecx
    adc    %esi,%esi
    cmp    %esi,%eax
    ja     jump_7ac96
    jne    jump_7ac86
    or     %ecx,%ecx
    jne    jump_7ac8a
    add    %eax,%eax
    jb     jump_7ac7e
    test   %eax,0x4(%edi)
  jump_7ac7e:
    je     jump_7ac96
    shr    %eax
  jump_7ac86:
    or     %esi,%ecx
    je     jump_7ac96
  jump_7ac8a:
    add    %eax,0x4(%edi)
    jae    jump_7ac96
    rcrl   0x4(%edi)
    incw   0x8(%edi)
  jump_7ac96:
    pop    %esi
    pop    %edi
    ret
  jump_7ac99:
    cmp    $0x400,%dx
    je     jump_7acce
    cmp    $0x0,%dx
    jne    jump_7acbe
    inc    %bx
    jne    jump_7acce
    cmp    $0x80000000,%esi
    jne    jump_7acbe
    or     %ecx,%ecx
    je     jump_7acce
  jump_7acbe:
    movl   $0x80000000,0x4(%edi)
    orw    $0x3fff,0x8(%edi)
    pop    %esi
    pop    %edi
    ret
  jump_7acce:
    sub    %eax,%eax
    mov    %eax,0x4(%edi)
    mov    %ax,0x8(%edi)
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7acda:
/*----------------------------------------------------------------*/
    dec    %esi
    sbb    %ah,%dh
    shl    $0xc7,%ah
    shll   0xb293ffa(%ebp)
    add    %ecx,(%eax)
    or     %bl,-0x40047b3a(%ebx)
    sbb    (%esi),%ah
    lds    0x2(%esi,%ebp,1),%ebp
    inc    %esi
    popf
    sti
    aas
    sub    -0x4662f595(%eax),%bl
    sub    0x171bffb(%edx),%edi
    sub    -0x1c71d8d9(%ebp),%edx
    sti
    aas
    cld
    push   $0x2472dd9c
    dec    %ecx
    xchg   %eax,%edx
    cld
    mov    $0x94ebadc1,%edi
    int3
    int3
    int3
    int3
    cld
    aas
    repnz adcl $0xbffdaa,-0x55555556(%edi)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    cmp    $0x3f,%bh


/*----------------------------------------------------------------*/
func_7ad34:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    push   %ecx
    mov    %eax,%edi
    mov    0x8(%edi),%cx
    shl    %cx
    jne    jump_7ad72
    testb  $0x80,0x9(%edx)
    je     jump_7ad5d
    movw   $0x4000,0x8(%ebx)
    movl   $0xc90fdaa2,0x4(%ebx)
    movl   $0x2168c235,(%ebx)
    jmp    jump_7ad70
  jump_7ad5d:
    movw   $0x0,0x8(%ebx)
    movl   $0x0,0x4(%ebx)
    movl   $0x0,(%ebx)
  jump_7ad70:
    jmp    jump_7ade6
  jump_7ad72:
    mov    0x8(%edx),%cx
    shl    %cx
    jne    jump_7ad9a
    mov    0x8(%edi),%ax
    and    $0x8000,%ax
    or     $0x3fff,%ax
    mov    %ax,0x8(%ebx)
    movl   $0xc90fdaa2,0x4(%ebx)
    movl   $0x2168c235,(%ebx)
    jmp    jump_7ade6
  jump_7ad9a:
    mov    0x9(%edi),%ch
    call   func_7a517
    mov    %ebx,%eax
    call   func_7adea
    mov    0x9(%ebx),%dl
    or     %ch,%ch
    js     jump_7adcc
    or     %dl,%dl
    jns    jump_7adca
    mov    %ebx,%eax
    push   $0x4000
    push   $0xc90fdaa2
    push   $0x2168c235
    call   func_7a2e2
  jump_7adca:
    jmp    jump_7ade6
  jump_7adcc:
    or     %dl,%dl
    jle    jump_7ade6
    mov    %ebx,%eax
    push   $0xc000
    push   $0xc90fdaa2
    push   $0x2168c235
    call   func_7a2e2
  jump_7ade6:
    pop    %ecx
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7adea:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    push   %ecx
    mov    %eax,%edi
    mov    $0x0,%ch
    mov    0x9(%edi),%cl
    andb   $0x7f,0x9(%edi)
    cmpw   $0x3fff,0x8(%edi)
    jne    jump_7ae2c
    cmpl   $0x80000000,0x4(%edi)
    jne    jump_7ae2c
    cmpl   $0x0,(%edi)
    jne    jump_7ae2c
    movl   $0x2168c235,(%edi)
    movl   $0xc90fdaa2,0x4(%edi)
    mov    $0x3ffe,%ax
    and    $0x80,%cl
    or     %cl,%ah
    mov    %ax,0x8(%edi)
    pop    %ecx
    pop    %esi
    pop    %edi
    ret
  jump_7ae2c:
    push   %edx
    push   %ebx
    cmpw   $0x3fff,0x8(%edi)
    jl     jump_7ae62
    push   %ecx
    mov    0x8(%edi),%si
    mov    0x4(%edi),%ecx
    mov    (%edi),%ebx
    shl    $0x10,%esi
    mov    $0x3fff,%si
    mov    $0x80000000,%edx
    mov    $0x0,%eax
    call   func_7a541
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    pop    %ecx
    mov    $0x2,%ch
  jump_7ae62:
    mov    0x8(%edi),%ax
    cmp    $0x3ffd,%ax
    jne    jump_7ae7d
    mov    0x4(%edi),%eax
    cmp    $0x8930a2f4,%eax
    jne    jump_7ae7d
    mov    (%edi),%eax
    cmp    $0xf66ab09b,%eax
  jump_7ae7d:
    jbe    jump_7aef0
    push   %ecx
    mov    $0xc265539e,%ebx
    mov    $0xddb3d742,%ecx
    mov    $0x3fff0000,%esi
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    call   func_7a312
    push   %eax
    push   %edx
    push   %esi
    mov    $0xc265539e,%ebx
    mov    $0xddb3d742,%ecx
    mov    $0x3fff0000,%esi
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    call   func_7a716
    sub    %ebx,%ebx
    mov    $0x80000000,%ecx
    rol    $0x10,%esi
    mov    $0xbfff,%si
    rol    $0x10,%esi
    call   func_7a312
    pop    %ebx
    shl    $0x10,%ebx
    mov    %si,%bx
    mov    %ebx,%esi
    pop    %ecx
    pop    %ebx
    call   func_7a541
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    pop    %ecx
    or     $0x1,%ch
  jump_7aef0:
    mov    %edi,%eax
    lea    func_7acda,%edx
    mov    $0x8,%ebx
    call   func_7b966
    shr    %ch
    jae    jump_7af1e
    mov    %edi,%eax
    push   $0x3ffe
    push   $0x860a91c1
    push   $0x6b9b2c23
    mov    %edi,%ebx
    call   func_7a2e2
  jump_7af1e:
    shr    %ch
    jae    jump_7af3e
    push   $0xbfff
    push   $0xc90fdaa2
    push   $0x2168c235
    mov    %edi,%eax
    mov    %edi,%ebx
    call   func_7a2e2
    xorb   $0x80,0x9(%ebx)
  jump_7af3e:
    cmp    $0x0,%cl
    jns    jump_7af47
    xorb   $0x80,0x9(%edi)
  jump_7af47:
    pop    %ebx
    pop    %edx
    pop    %ecx
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7af4d:
/*----------------------------------------------------------------*/
    cmpw   $0x0,0x8(%eax)
    jne    jump_7af62
    cmpl   $0x0,0x4(%eax)
    jne    jump_7af62
    cmpl   $0x0,(%eax)
    jne    jump_7af62
    sub    %eax,%eax
    ret
  jump_7af62:
    cmpw   $0x0,0x8(%edx)
    jne    jump_7af82
    cmpl   $0x0,0x4(%edx)
    jne    jump_7af82
    cmpl   $0x0,(%edx)
    jne    jump_7af82
    sub    %edx,%edx
    mov    %edx,(%eax)
    mov    %edx,0x4(%eax)
    mov    %dx,0x8(%eax)
    sub    %eax,%eax
    ret
  jump_7af82:
    push   %ebp
    push   %esi
    push   %edi
    push   %edx
    push   %ecx
    push   %ebx
    push   %eax
    mov    0x8(%eax),%si
    mov    0x8(%edx),%di
    mov    0x4(%edx),%ecx
    mov    (%edx),%ebx
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    call   func_7afb3
    pop    %ecx
    mov    %eax,(%ecx)
    mov    %edx,0x4(%ecx)
    mov    %si,0x8(%ecx)
    mov    %edi,%eax
    pop    %ebx
    pop    %ecx
    pop    %edx
    pop    %edi
    pop    %esi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7afb3:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    and    $0x7fff,%esi
    and    $0x7fff,%edi
    sub    %edi,%esi
    jl     jump_7b012
    sub    %edi,%edi
  jump_7afc7:
    cmp    %edx,%ecx
    jne    jump_7afd3
    cmp    %eax,%ebx
    je     jump_7afd5
  jump_7afd3:
    jae    jump_7afda
  jump_7afd5:
    sub    %ebx,%eax
    sbb    %ecx,%edx
    stc
  jump_7afda:
    adc    %edi,%edi
    dec    %esi
    jl     jump_7afef
    add    %eax,%eax
    adc    %edx,%edx
    jb     jump_7afd5
    or     %edx,%edx
    js     jump_7afc7
    jmp    jump_7afda
  jump_7afef:
    sub    %esi,%esi
    or     %eax,%eax
    jne    jump_7affb
    or     %edx,%edx
    jne    jump_7affb
    jmp    jump_7b010
  jump_7affb:
    or     %edx,%edx
    js     jump_7b006
    adc    %eax,%eax
    adc    %edx,%edx
    dec    %esi
    jmp    jump_7affb
  jump_7b006:
    pop    %ecx
    push   %ecx
    and    $0x7fff,%ecx
    add    %ecx,%esi
  jump_7b010:
    jmp    jump_7b016
  jump_7b012:
    add    %edi,%esi
    sub    %edi,%edi
  jump_7b016:
    pop    %ecx
    pop    %ebx
    and    $0x8000,%ebx
    or     %ebx,%esi
    or     %edx,%edx
    jne    jump_7b026
    sub    %esi,%esi
  jump_7b026:
    xor    %cx,%bx
    jns    jump_7b02d
    neg    %edi
  jump_7b02d:
    ret


/*----------------------------------------------------------------*/
func_7b02e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    mov    %cs:0x787ea(%edi),%ax /* Warning: address points to a valid object/reloc, but no label found */
    mov    %eax,%edx
    and    %ds:0x8(%ebp),%ax
    cmp    %dx,%ax
    jne    jump_7b04c
    mov    $0x41,%al
    mov    $0x0,%dh
    jmp    jump_7b0bf
  jump_7b04c:
    not    %edx
    and    %dx,%ds:0x8(%ebp)
    mov    0x8(%ebx),%ax
    mov    %eax,%edx
    and    $0x80,%dh
    rol    %dh
    shl    %dh
    and    $0x7fff,%ax
    jne    jump_7b080
    mov    0x4(%ebx),%eax
    or     (%ebx),%eax
    mov    $0x44,%al
    jne    jump_7b07e
    mov    %cs:0x787e4(%edi),%ax /* Warning: address points to a valid object/reloc, but no label found */
    or     %ax,%ds:0x8(%ebp)
    mov    $0x40,%al
  jump_7b07e:
    jmp    jump_7b0bf
  jump_7b080:
    cmp    $0x7fff,%ax
    jne    jump_7b0a8
    mov    %cs:0x787e8(%edi),%ax /* Warning: address points to a valid object/reloc, but no label found */
    or     %ax,%ds:0x8(%ebp)
    cmpl   $0x0,(%ebx)
    jne    jump_7b0a0
    mov    0x4(%ebx),%eax
    cmp    $0x80000000,%eax
  jump_7b0a0:
    mov    $0x1,%al
    jne    jump_7b0a6
    mov    $0x5,%al
  jump_7b0a6:
    jmp    jump_7b0bf
  jump_7b0a8:
    testb  $0x80,0x7(%ebx)
    mov    $0x4,%al
    jne    jump_7b0bf
    mov    %cs:0x787e8(%edi),%ax /* Warning: address points to a valid object/reloc, but no label found */
    or     %ax,%ds:0x8(%ebp)
    mov    $0x44,%al
  jump_7b0bf:
    or     %dh,%al
    mov    %ds:0x4(%ebp),%dx
    and    $0xb8ff,%dx
    or     %al,%dh
    mov    %dx,%ds:0x4(%ebp)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7b0d6:
/*----------------------------------------------------------------*/
    jmp    jump_9abd9a21

vtable_7b0f4:
    .long   0


/*----------------------------------------------------------------*/
func_7b11c:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    push   %eax
    push   $0x3fff
    push   $0x80000000
    push   $0x0
    mov    %eax,%ebx
    call   func_7a2e2
    pop    %eax
    pop    %edx
    pop    %ebx


/*----------------------------------------------------------------*/
func_7b135:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    push   %edx
    push   %ecx
    push   %ebx
    push   %eax
    call   func_7b178
    pop    %eax
    mov    %edx,%ebx
    push   %edx
    call   func_7a6ec
    pop    %edi
    mov    0x8(%edi),%si
    mov    0x4(%edi),%ecx
    mov    (%edi),%ebx
    shl    $0x10,%esi
    mov    $0x3fff,%si
    mov    $0xb8aa3b29,%edx
    mov    $0x5c17f0bd,%eax
    call   func_7a716
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    pop    %ebx
    pop    %ecx
    pop    %edx
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7b178:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    push   %edx
    push   %ecx
    push   %ebx
    sub    %ecx,%ecx
    mov    0x8(%eax),%cx
    or     %cx,%cx
    js     jump_7b18a
    jmp    jump_7b18a
  jump_7b18a:
    mov    %eax,%edi
    mov    $0x3ffe,%edx
    sub    $0x3ffe,%ecx
    push   %ecx
    mov    %dx,0x8(%edi)
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    $0xbffe3ffe,%esi
    mov    $0x80000000,%ecx
    sub    %ebx,%ebx
    call   func_7a312
    cmpw   $0x3ffe,0x8(%edi)
    jne    jump_7b1c9
    cmpl   $0xb504f333,0x4(%edi)
    jne    jump_7b1c9
    cmpl   $0xf9de6484,(%edi)
  jump_7b1c9:
    jbe    jump_7b1e5
    and    $0xffff,%esi
    or     $0xbffe0000,%esi
    mov    $0x80000000,%ecx
    sub    %ebx,%ebx
    call   func_7a312
    jmp    jump_7b1f1
  jump_7b1e5:
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    decl   (%esp)
  jump_7b1f1:
    push   %eax
    push   %edx
    push   %esi
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    dec    %si
    and    $0xffff,%esi
    or     $0x3ffe0000,%esi
    mov    $0x80000000,%ecx
    sub    %ebx,%ebx
    call   func_7a312
    shl    $0x10,%esi
    mov    %edx,%ecx
    mov    %eax,%ebx
    pop    %eax
    mov    %ax,%si
    pop    %edx
    pop    %eax
    call   func_7a541
    push   %eax
    push   %edx
    push   %esi
    mov    %esi,%ecx
    shl    $0x10,%esi
    mov    %cx,%si
    mov    %edx,%ecx
    mov    %eax,%ebx
    call   func_7a716
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    mov    $0x3,%ebx
    lea    vtable_7b0f4,%ecx
    call   func_7b914
    push   %eax
    push   %edx
    push   %esi
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    lea    func_7b0d6,%ecx
    mov    $0x2,%ebx
    call   func_7b914
    pop    %ecx
    rol    $0x10,%esi
    mov    %cx,%si
    rol    $0x10,%esi
    pop    %ecx
    pop    %ebx
    call   func_7a541
    mov    (%edi),%ebx
    mov    0x4(%edi),%ecx
    rol    $0x10,%esi
    mov    0x8(%edi),%si
    rol    $0x10,%esi
    call   func_7a716
    rol    $0x10,%esi
    mov    (%esp),%si
    rol    $0x10,%esi
    mov    0x4(%esp),%ecx
    mov    0x8(%esp),%ebx
    call   func_7a716
    rol    $0x10,%esi
    pop    %ecx
    mov    %cx,%si
    rol    $0x10,%esi
    pop    %ecx
    pop    %ebx
    call   func_7a312
    pop    %ecx
    or     %ecx,%ecx
    je     jump_7b33a
    push   %eax
    push   %edx
    push   %esi
    mov    %edi,%edx
    mov    %ecx,%eax
    call   func_7a8d6
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    and    $0xffff,%esi
    or     $0xbff20000,%esi
    mov    $0xde8082e3,%ecx
    mov    $0x865435c,%ebx
    call   func_7a716
    pop    %ecx
    rol    $0x10,%esi
    mov    %cx,%si
    rol    $0x10,%esi
    pop    %ecx
    pop    %ebx
    call   func_7a312
    push   %eax
    push   %edx
    push   %esi
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    and    $0xffff,%esi
    or     $0x3ffe0000,%esi
    mov    $0xb1800000,%ecx
    sub    %ebx,%ebx
    call   func_7a716
    pop    %ecx
    rol    $0x10,%esi
    mov    %cx,%si
    rol    $0x10,%esi
    pop    %ecx
    pop    %ebx
    call   func_7a312
  jump_7b33a:
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    pop    %ebx
    pop    %ecx
    pop    %edx
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7b34a:
/*----------------------------------------------------------------*/
    pop    %ecx
    push   %ebx
    push   $0xffffff85
    cmpl   $0x3fceca96,(%ebx)
    (bad)
    clc
    rcrb   $0xd6,-0x28c060c7(%ebp)
    mov    $0x43684be5,%edi
    popf
    xor    %dl,0x7f3fdeb0(%edx)
    sbb    $0x27,%al
    stos   %al,%es:(%edi)
    aas
    sub    (%edx),%esi
    xlat   %ds:(%ebx)
    in     $0xbf,%eax
    jge    jump_7b310
    cmp    %esi,-0x4710e2d6(%esi)
    in     (%dx),%al
    aas
    or     $0xd0,%al
    add    %cl,0xd00d00d0
    repnz mov $0x88888888,%edi
    mov    %cl,0x3ff88888(%eax)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    stos   %al,%es:(%edi)
    cld
    mov    $0x0,%edi
    add    %al,(%eax)
    add    %al,-0x770c001(%eax)
    rcrb   $0xd2,-0x28c060c7(%ebp)
    aas
    add    $0x4603e4e9,%eax
    movsl  %ds:(%esi),%es:(%edi)
    lret


/*----------------------------------------------------------------*/
func_7b3fe:
/*----------------------------------------------------------------*/
    add    %al,(%eax)
    add    %eax,(%eax)
    add    (%eax),%al
    add    (%eax),%eax
    add    $0x0,%al
    add    $0x0,%al
    add    $0x6000500,%eax
    add    %dl,0x57(%ebp)
    push   %edx
    push   %ecx
    push   %ebx
    mov    %esp,%ebp
    sub    $0xc,%esp
    mov    %eax,%edi
    sub    %ecx,%ecx
    mov    0x8(%eax),%cx
    and    $0x7fff,%cx
    sub    $0x3ffe,%cx
    cmp    $0x20,%cx
    jl     jump_7b432
  jump_7b432:
    push   %ecx
    push   %esi
    push   %edi
    mov    0x8(%eax),%si
    mov    $0x3ffe,%di
    mov    $0xc90fdaa2,%ecx
    mov    $0x2168c235,%ebx
    mov    0x4(%eax),%edx
    mov    (%eax),%eax
    call   func_7afb3
    pop    %ecx
    mov    %eax,(%ecx)
    mov    %edx,0x4(%ecx)
    mov    %si,0x8(%ecx)
    mov    %edi,%eax
    mov    %ecx,%edi
    pop    %esi
    testb  $0x80,0x9(%edi)
    je     jump_7b481
    push   %eax
    mov    %edi,%ebx
    mov    %edi,%eax
    push   $0x3ffe
    push   $0xc90fdaa2
    push   $0x2168c235
    call   func_7a2e2
    pop    %eax
    dec    %eax
  jump_7b481:
    mov    %esi,%ebx
    mov    %bl,%ah
    and    $0x2,%bl
    add    %bl,%al
    and    $0x7,%al
    push   %eax
    test   $0x1,%al
    je     jump_7b4ad
    push   $0xbffe
    push   $0xc90fdaa2
    push   $0x2168c235
    mov    %edi,%eax
    mov    %edi,%ebx
    call   func_7a2e2
    xorb   $0x80,0x9(%ebx)
  jump_7b4ad:
    sub    %ecx,%ecx
    mov    0x8(%edi),%cx
    sub    $0x3ffe,%cx
    cmp    $0xffe0,%cx
    jge    jump_7b4d7
    movl   $0x0,-0xc(%ebp)
    movl   $0x80000000,-0x8(%ebp)
    movw   $0x3fff,-0x4(%ebp)
    jmp    jump_7b56e
  jump_7b4d7:
    or     %cx,%cx
    js     jump_7b4e0
    mov    $0x0,%cx
  jump_7b4e0:
    neg    %cx
    cmp    $0x8,%cx
    jle    jump_7b4ed
    mov    $0x8,%cx
  jump_7b4ed:
    mov    %cs:func_7b3fe(,%ecx,2),%cx
    push   %ecx
    mov    -0x14(%ebp),%eax
    inc    %al
    and    $0x2,%al
    jne    jump_7b507
    cmp    $0x1,%ah
    je     jump_7b507
    jmp    jump_7b545
  jump_7b507:
    push   %eax
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    shl    $0x10,%esi
    mov    0x8(%edi),%si
    mov    %eax,%ebx
    mov    %edx,%ecx
    call   func_7a716
    mov    -0x18(%ebp),%ecx
    mov    $0x8,%ebx
    sub    %ecx,%ebx
    lea    (%ecx,%ecx,4),%ecx
    lea    func_7b3a4(,%ecx,2),%ecx
    call   func_7b914
    mov    %eax,-0xc(%ebp)
    mov    %edx,-0x8(%ebp)
    mov    %si,-0x4(%ebp)
    pop    %eax
  jump_7b545:
    cmp    $0x0,%al
    je     jump_7b550
    cmp    $0x1,%ah
    je     jump_7b550
    jmp    jump_7b56e
  jump_7b550:
    mov    %edi,%eax
    mov    -0x18(%ebp),%ecx
    mov    $0x8,%ebx
    sub    %ecx,%ebx
    lea    (%ecx,%ecx,4),%ecx
    add    %ecx,%ecx
    lea    func_7b34a,%edx
    add    %ecx,%edx
    call   func_7b966
  jump_7b56e:
    mov    -0x14(%ebp),%eax
    inc    %al
    and    $0x2,%al
    je     jump_7b583
    mov    -0xc(%ebp),%eax
    mov    -0x8(%ebp),%edx
    mov    -0x4(%ebp),%si
    jmp    jump_7b58c
  jump_7b583:
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
  jump_7b58c:
    mov    -0x14(%ebp),%ecx
    test   $0x4,%cl
    je     jump_7b599
    xor    $0x8000,%si
  jump_7b599:
    cmp    $0x1,%ch
    jne    jump_7b5f6
    rol    $0x10,%esi
    add    $0x2,%cl
    mov    %cl,%bl
    inc    %bl
    and    $0x2,%bl
    je     jump_7b5bc
    and    $0x4,%cl
    mov    -0xc(%ebp),%ebx
    mov    -0x8(%ebp),%ecx
    mov    -0x4(%ebp),%si
    jmp    jump_7b5c8
  jump_7b5bc:
    and    $0x4,%cl
    mov    (%edi),%ebx
    mov    0x4(%edi),%ecx
    mov    0x8(%edi),%si
  jump_7b5c8:
    je     jump_7b5d0
    xor    $0x8000,%esi
  jump_7b5d0:
    rol    $0x10,%esi
    or     %ebx,%ebx
    jne    jump_7b5f1
    or     %ecx,%ecx
    jne    jump_7b5f1
    test   $0x7fff0000,%esi
    jne    jump_7b5f1
    sub    %eax,%eax
    mov    $0x80000000,%edx
    or     $0x7fff,%si
    jmp    jump_7b5f6
  jump_7b5f1:
    call   func_7a541
  jump_7b5f6:
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    mov    %ebp,%esp
    pop    %ebx
    pop    %ecx
    pop    %edx
    pop    %edi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7b607:
/*----------------------------------------------------------------*/
    push   %esi
    sub    %esi,%esi
    call   func_7b410
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7b611:
/*----------------------------------------------------------------*/
    push   %esi
    mov    $0x2,%esi
    call   func_7b410
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7b61e:
/*----------------------------------------------------------------*/
    push   %esi
    mov    $0x1,%esi
    call   func_7b410
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7b62c:
/*----------------------------------------------------------------*/
    adc    $0x67cc487b,%eax
    ret


/*----------------------------------------------------------------*/
func_7b654:
/*----------------------------------------------------------------*/
    push   %ebp
    push   %edi
    push   %esi
    push   %edx
    push   %ecx
    push   %ebx
    mov    %eax,%edi
    sub    %esi,%esi
    mov    0x8(%edi),%cx
    andb   $0x7f,0x9(%edi)
    cmpw   $0x0,0x8(%edi)
    jne    jump_7b676
    cmpl   $0x0,0x4(%edi)
    jne    jump_7b676
    cmpl   $0x0,(%edi)
  jump_7b676:
    je     jump_7b6de
    or     %cx,%cx
    jns    jump_7b697
    dec    %esi
    push   $0xbfff
    push   $0x80000000
    push   $0x0
    mov    %edi,%eax
    mov    %edi,%ebx
    call   func_7a2e2
    xorb   $0x80,0x9(%ebx)
  jump_7b697:
    mov    0x8(%edi),%bx
    add    $0x4,%bx
    sub    %ecx,%ecx
    mov    0x4(%edi),%edx
    mov    (%edi),%eax
  jump_7b6a6:
    cmp    $0x3fff,%bx
    jb     jump_7b6b7
    add    %eax,%eax
    adc    %edx,%edx
    adc    %ecx,%ecx
    dec    %bx
    jmp    jump_7b6a6
  jump_7b6b7:
    or     %edx,%edx
    jne    jump_7b6bd
    or     %eax,%eax
  jump_7b6bd:
    jne    jump_7b6c3
    sub    %ebx,%ebx
    jmp    jump_7b6d3
  jump_7b6c3:
    or     %edx,%edx
    js     jump_7b6cf
    add    %eax,%eax
    adc    %edx,%edx
    dec    %bx
    jmp    jump_7b6c3
  jump_7b6cf:
    sub    $0x4,%bx
  jump_7b6d3:
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %bx,0x8(%edi)
    jmp    jump_7b6e0
  jump_7b6de:
    sub    %ecx,%ecx
  jump_7b6e0:
    push   %esi
    push   %ecx
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    shl    $0x10,%esi
    mov    0x8(%edi),%si
    mov    %eax,%ebx
    mov    %edx,%ecx
    call   func_7a716
    push   %eax
    push   %edx
    push   %esi
    mov    $0xa6829a79,%ecx
    mov    $0x1bf21f8c,%ebx
    and    $0xffff,%esi
    or     $0x40030000,%esi
    call   func_7a312
    mov    %esp,%ebp
    xchg   %eax,0x8(%ebp)
    xchg   %edx,0x4(%ebp)
    xchg   %esi,0x0(%ebp)
    mov    $0xec96f0d6,%ecx
    mov    $0x9d7bfdb,%ebx
    and    $0xffff,%esi
    or     $0x3ffa0000,%esi
    call   func_7a716
    mov    $0xe6d5051a,%ecx
    mov    $0xe536e187,%ebx
    and    $0xffff,%esi
    or     $0x40010000,%esi
    call   func_7a312
    mov    (%edi),%ebx
    mov    0x4(%edi),%ecx
    rol    $0x10,%esi
    mov    0x8(%edi),%si
    rol    $0x10,%esi
    call   func_7a716
    push   %eax
    push   %edx
    push   %esi
    xor    $0x8000,%esi
    rol    $0x10,%esi
    mov    0x0(%ebp),%si
    rol    $0x10,%esi
    mov    0x8(%ebp),%ebx
    mov    0x4(%ebp),%ecx
    call   func_7a312
    xchg   %eax,-0x4(%ebp)
    xchg   %edx,-0x8(%ebp)
    xchg   %esi,-0xc(%ebp)
    rol    $0x10,%esi
    mov    0x0(%ebp),%si
    rol    $0x10,%esi
    mov    0x8(%ebp),%ebx
    mov    0x4(%ebp),%ecx
    call   func_7a312
    rol    $0x10,%esi
    mov    -0xc(%ebp),%si
    rol    $0x10,%esi
    pop    %ecx
    pop    %ecx
    pop    %ebx
    call   func_7a541
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    add    $0xc,%esp
    pop    %ecx
    lea    func_7b62c,%esi
  jump_7b7cf:
    or     %ecx,%ecx
    je     jump_7b807
    shr    %ecx
    jae    jump_7b802
    push   %ecx
    push   %esi
    mov    0x8(%edi),%ax
    mov    0x4(%edi),%ecx
    mov    (%edi),%ebx
    shl    $0x10,%eax
    mov    %cs:0x8(%esi),%ax
    mov    %cs:0x4(%esi),%edx
    mov    %cs:(%esi),%esi
    xchg   %eax,%esi
    call   func_7a716
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    pop    %esi
    pop    %ecx
  jump_7b802:
    lea    0xa(%esi),%esi
    jmp    jump_7b7cf
  jump_7b807:
    pop    %esi
    add    %si,0x8(%edi)
    mov    %edi,%eax
    push   $0xbfff
    push   $0x80000000
    push   $0x0
    mov    %edi,%ebx
    call   func_7a2e2
    pop    %ebx
    pop    %ecx
    pop    %edx
    pop    %esi
    pop    %edi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7b828:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    push   %edx
    push   %ecx
    push   %ebx
    mov    0x8(%eax),%cx
    mov    0x4(%eax),%edx
    mov    (%eax),%ebx
    or     %ebx,%ebx
    jne    jump_7b86e
    or     %edx,%edx
    jne    jump_7b863
    add    %cx,%cx
    je     jump_7b8ee
  jump_7b847:
    movw   $0xffff,0x8(%eax)
    movl   $0x0,0x4(%eax)
    movl   $0x0,(%eax)
  jump_7b85a:
    orb    $0xc0,0x7(%eax)
    jmp    jump_7b8ee
  jump_7b863:
    cmp    $0x7fff,%cx
    je     jump_7b8ee
  jump_7b86e:
    mov    %ecx,%edx
    and    $0x7f,%dh
    cmp    $0x7fff,%dx
    je     jump_7b85a
    add    %cx,%cx
    jb     jump_7b85a
    shr    %cx
    je     jump_7b88b
    mov    0x4(%eax),%edx
    add    %edx,%edx
    jae    jump_7b847
  jump_7b88b:
    mov    0x4(%eax),%edx
    sub    %edi,%edi
    push   %eax
    sub    $0x3fff,%cx
    sar    %cx
    jb     jump_7b8a1
    shr    %edx
    rcr    %ebx
    rcr    %edi
  jump_7b8a1:
    add    $0x3fff,%cx
    mov    %cx,0x8(%eax)
    mov    %edx,%ecx
    mov    %ebx,%eax
    mov    %edx,%esi
    stc
    rcr    %esi
    inc    %edx
    je     jump_7b8d4
    dec    %edx
  jump_7b8b7:
    div    %esi
    dec    %esi
    cmp    %eax,%esi
    jbe    jump_7b8c9
    inc    %esi
    add    %eax,%esi
    rcr    %esi
    mov    %ecx,%edx
    mov    %ebx,%eax
    jmp    jump_7b8b7
  jump_7b8c9:
    inc    %esi
    mov    %eax,%ecx
    mov    %edi,%eax
    div    %esi
    add    %ecx,%esi
    jmp    jump_7b8dd
  jump_7b8d4:
    cmp    %esi,%eax
    je     jump_7b8e6
    xchg   %eax,%edx
    mov    %edi,%eax
    div    %esi
  jump_7b8dd:
    sub    %edx,%edx
    stc
    rcr    %esi
    rcr    %eax
    adc    %edx,%eax
  jump_7b8e6:
    adc    %esi,%edx
    pop    %esi
    mov    %eax,(%esi)
    mov    %edx,0x4(%esi)
  jump_7b8ee:
    pop    %ebx
    pop    %ecx
    pop    %edx
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7b914:
/*----------------------------------------------------------------*/
    push   %ebp
    push   %edi
    push   %ecx
    push   %ebx
    push   %esi
    push   %edx
    push   %eax
    mov    %esp,%ebp
    mov    %ecx,%edi
    mov    %cs:(%edi),%eax
    mov    %cs:0x4(%edi),%edx
    mov    %cs:0x8(%edi),%si
  jump_7b92b:
    rol    $0x10,%esi
    mov    0x8(%ebp),%si
    rol    $0x10,%esi
    mov    0x0(%ebp),%ebx
    mov    0x4(%ebp),%ecx
    call   func_7a716
    lea    0xa(%edi),%edi
    mov    %cs:(%edi),%ebx
    mov    %cs:0x4(%edi),%ecx
    rol    $0x10,%esi
    mov    %cs:0x8(%edi),%si
    rol    $0x10,%esi
    call   func_7a312
    decl   0xc(%ebp)
    jne    jump_7b92b
    add    $0x10,%esp
    pop    %ecx
    pop    %edi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7b966:
/*----------------------------------------------------------------*/
    push   %edi
    push   %esi
    push   %ecx
    push   %ebx
    push   %edx
    mov    %eax,%edi
    mov    (%edi),%eax
    mov    0x4(%edi),%edx
    mov    0x8(%edi),%si
    shl    $0x10,%esi
    mov    0x8(%edi),%si
    mov    %eax,%ebx
    mov    %edx,%ecx
    call   func_7a716
    pop    %ecx
    pop    %ebx
    call   func_7b914
    rol    $0x10,%esi
    mov    (%edi),%ebx
    mov    0x4(%edi),%ecx
    mov    0x8(%edi),%si
    rol    $0x10,%esi
    call   func_7a716
    mov    %eax,(%edi)
    mov    %edx,0x4(%edi)
    mov    %si,0x8(%edi)
    pop    %ecx
    pop    %esi
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7b9ae:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    push   %edx
    mov    %eax,%ebp
    mov    $0x1600,%ax
    int    $0x2f
    test   %al,%al
    je     jump_7ba14
    cmp    $0x80,%al
    je     jump_7ba14
    xor    %al,%al
    xor    %edx,%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    $0xfa,%ah
    int    $0x2f
    cmp    $0x666,%ax
    jne    jump_7ba14
    mov    $0x22,%al
    xor    %edx,%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    $0xfa,%ah
    int    $0x2f
    test   %ax,%ax
    jne    jump_7ba14
    mov    $0x1,%dh
    mov    $0x1e,%al
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    %dh,data_89bc9
    xor    %edx,%edx
    mov    $0xfa,%ah
    int    $0x2f
    mov    %cs,%eax
    mov    $data_122858,%ebx
    mov    %eax,%edx
    mov    %ebx,%ecx
    mov    $0x20,%al
    shr    $0x10,%ecx
    mov    $0xfa,%ah
    int    $0x2f
    mov    $0x1,%al
    jmp    jump_7ba6e
  jump_7ba14:
    mov    (%esp),%edx
    test   %ebp,%ebp
    jne    jump_7ba20
    test   %dx,%dx
    je     jump_7ba6c
  jump_7ba20:
    mov    $data_854d4,%esi
    mov    $0xa00,%eax
    push   %es
    int    $0x31
    sbb    %eax,%eax
    pop    %es
    test   %eax,%eax
    jne    jump_7ba6c
    mov    $0x7,%eax
    mov    $func_78b70,%ebx
    mov    %cs,%ecx
    call   func_7cf3e
    mov    (%esp),%es
    mov    %es:0x40(%ebp),%ah
    movb   $0x1,%es:0x3e(%ebp)
    or     $0x4,%ah
    mov    %ah,%es:0x40(%ebp)
    mov    %cr0,%eax
    or     $0x4,%al
    mov    $0x1,%dl
    mov    %eax,%cr0
    mov    $0x30,%ah
    int    $0x21
    mov    %dl,data_89bc8
  jump_7ba6c:
    xor    %al,%al
  jump_7ba6e:
    add    $0x4,%esp
    pop    %ebp
    pop    %es
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7ba78:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %es
    mov    %edx,%es
    mov    data_89bc9,%dl
    test   %dl,%dl
    je     jump_7baa7
    mov    %cs,%eax
    mov    %eax,%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    $0x21,%al
    mov    $0xfa,%ah
    int    $0x2f
    mov    $0x1f,%al
    xor    %edx,%edx
    xor    %ecx,%ecx
    xor    %ebx,%ebx
    mov    $0xfa,%ah
    int    $0x2f
    mov    $0x1,%al
    pop    %es
    pop    %ecx
    pop    %ebx
    ret
  jump_7baa7:
    cmpb   $0x0,data_89bc8
    je     jump_7bacb
    mov    %es:0x40(%eax),%bl
    mov    %dl,%es:0x3e(%eax)
    and    $0xfb,%bl
    mov    %bl,%es:0x40(%eax)
    mov    %cr0,%eax
    and    $0xfb,%al
    mov    %eax,%cr0
    mov    $0x30,%ah
    int    $0x21
  jump_7bacb:
    xor    %al,%al
    pop    %es
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bad1:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_7bad2:
/*----------------------------------------------------------------*/
    push   %ax
    finit
    fld1
    fldz
    fdivrp %st,%st(1)
    fld    %st(0)
    fchs
    fcompp
    fnstsw %ax
    mov    $0x2,%al
    sahf
    je     jump_7baec
    mov    $0x3,%al
  jump_7baec:
    finit
    fldcw  (%esp)
    xchg   %ax,(%esp)
    pop    %ax
    ret


/*----------------------------------------------------------------*/
func_7baf9:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,%ebx
    call   func_7bb03
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bb03:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ecx
    push   %esi
    sub    $0x20,%esp
    mov    %eax,%ecx
    mov    (%edx),%eax
    mov    %eax,-0x20(%ebp)
    mov    0x4(%edx),%eax
    mov    %eax,-0x1c(%ebp)
    mov    (%ebx),%eax
    mov    %eax,-0x18(%ebp)
    mov    0x4(%ebx),%eax
    mov    %eax,-0x14(%ebp)
    test   $0x40,%cl
    je     jump_7bb2f
    mov    $0x1,%esi
    jmp    jump_7bb69
  jump_7bb2f:
    test   $0x80,%cl
    je     jump_7bb3b
    mov    $0x2,%esi
    jmp    jump_7bb69
  jump_7bb3b:
    test   $0x1,%ch
    je     jump_7bb47
    mov    $0x3,%esi
    jmp    jump_7bb69
  jump_7bb47:
    test   $0x8,%ch
    je     jump_7bb53
    mov    $0x4,%esi
    jmp    jump_7bb69
  jump_7bb53:
    test   $0x2,%ch
    je     jump_7bb5f
    mov    $0x6,%esi
    jmp    jump_7bb69
  jump_7bb5f:
    test   $0x4,%ch
    je     jump_7bb69
    mov    $0x5,%esi
  jump_7bb69:
    mov    %ecx,%eax
    and    $0x1f,%eax
    mov    data_89bd4(,%eax,4),%eax
    mov    %esi,-0x28(%ebp)
    mov    %eax,-0x24(%ebp)
    test   $0x10,%ch
    je     jump_7bb8d
    fldl   data_86208
    fchs
    fstpl  -0x10(%ebp)
    jmp    jump_7bbcf
  jump_7bb8d:
    test   $0x20,%ch
    je     jump_7bb9c
    xor    %ecx,%ecx
    mov    %ecx,-0x10(%ebp)
    mov    %ecx,-0xc(%ebp)
    jmp    jump_7bbcf
  jump_7bb9c:
    test   $0x40,%ch
    je     jump_7bbb0
    xor    %edx,%edx
    mov    $0x3ff00000,%ebx
    mov    %edx,-0x10(%ebp)
    mov    %ebx,-0xc(%ebp)
    jmp    jump_7bbcf
  jump_7bbb0:
    test   $0x80,%ch
    je     jump_7bbc4
    mov    data_86208,%eax
    mov    %eax,-0x10(%ebp)
    mov    data_8620c,%eax
    jmp    jump_7bbcc
  jump_7bbc4:
    mov    (%ebx),%eax
    mov    %eax,-0x10(%ebp)
    mov    0x4(%ebx),%eax
  jump_7bbcc:
    mov    %eax,-0xc(%ebp)
  jump_7bbcf:
    lea    -0x28(%ebp),%eax
    call   func_7cfb7
    lea    -0x8(%ebp),%esp
    pop    %esi
    pop    %ecx
    pop    %ebp
    ret

vtable_7bbe0:
    .long   func_7bc25
    .long   func_7bc2d
    .long   func_7bc37
    .long   func_7bc1c
    .long   func_7bc25
    .long   func_7bc37
    .long   func_7bc2d
    .long   func_7bc2d


/*----------------------------------------------------------------*/
func_7bc00:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    cmpb   $0x2,(%eax)
    jne    jump_7bc0a
    mov    0x1(%eax),%eax
  jump_7bc0a:
    mov    (%eax),%bl
    cmp    $0x7,%bl
    ja     func_7bc37
    movzbl %bl,%ebx
    jmp    *%cs:vtable_7bbe0(,%ebx,4)


/*----------------------------------------------------------------*/
func_7bc1c:
/*----------------------------------------------------------------*/
    movzbl 0x1(%eax),%edx
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bc25:
/*----------------------------------------------------------------*/
    mov    0xd(%eax),%edx
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bc2d:
/*----------------------------------------------------------------*/
    mov    $0x4,%edx
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bc37:
/*----------------------------------------------------------------*/
    call   func_7bf87
    mov    %edx,%eax
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bc42:
/*----------------------------------------------------------------*/
    push   %ebx
    test   $0x7ff00000,%edx
    je     jump_7bc8a
    sub    %ebx,%ebx
    add    %eax,%eax
    adc    %edx,%edx
    rcr    %ebx
    add    $0x20000000,%eax
    adc    $0x0,%edx
    je     jump_7bc81
    cmp    $0x8fe00000,%edx
    jae    jump_7bc81
    cmp    $0x70200000,%edx
    jb     jump_7bc8a
    sub    $0x70000000,%edx
    add    %eax,%eax
    adc    %edx,%edx
    add    %eax,%eax
    adc    %edx,%edx
    or     %ebx,%edx
    mov    %edx,%eax
    pop    %ebx
    ret
  jump_7bc81:
    mov    $0x7f800000,%eax
    or     %ebx,%eax
    pop    %ebx
    ret
  jump_7bc8a:
    sub    %eax,%eax
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bc8e:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    data_898c5,%ah
    and    $0xf8,%ah
    mov    %ah,%dl
    mov    %ah,data_898c5
    or     $0x4,%dl
    mov    $data_89884,%ecx
    mov    %dl,data_898c5
    jmp    jump_7bcf5
  jump_7bcb2:
    mov    $0x8,%eax
    call   func_73af4
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_7bce1
    mov    $0x8,%eax
    call   func_73af4
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_7bce1
    mov    $data_85550,%eax
    mov    $0x1,%edx
    call   func_777af
  jump_7bce1:
    mov    data_1227e8,%edx
    mov    %ecx,0x4(%ebx)
    mov    %ebx,data_1227e8
    add    $0x1a,%ecx
    mov    %edx,(%ebx)
  jump_7bcf5:
    mov    0xc(%ecx),%edx
    test   %edx,%edx
    jne    jump_7bcb2
    mov    %edx,data_1227ec
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bd06:
/*----------------------------------------------------------------*/
    xor    %eax,%eax
    call   func_7bd17
    jmp    jump_76273


/*----------------------------------------------------------------*/
func_7bd17:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%edx
    shl    $0x2,%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    add    %edx,%eax
    mov    $data_89884,%esi
    add    %eax,%eax
    xor    %ebx,%ebx
    add    %eax,%esi
    mov    data_1227e8,%eax
    jmp    jump_7bd5e
  jump_7bd39:
    mov    (%eax),%ecx
    mov    0x4(%eax),%eax
    mov    $0x1,%edx
    testb  $0x40,0xd(%eax)
    jne    jump_7bd56
    cmp    %esi,%eax
    jb     jump_7bd5c
    cmp    $data_89906,%eax
    jae    jump_7bd56
    xor    %edx,%edx
  jump_7bd56:
    call   func_7283d
    inc    %ebx
  jump_7bd5c:
    mov    %ecx,%eax
  jump_7bd5e:
    test   %eax,%eax
    jne    jump_7bd39
    mov    %ebx,%eax
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7bd69:
/*----------------------------------------------------------------*/
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    %edx,(%esp)
    mov    %ebx,%ebp
    call   func_765fd
    test   $0x80,%al
    je     jump_7bdad
    mov    $0x2,%al
    mov    %esi,%ebx
    xor    %edx,%edx
    mov    $0x42,%ah
    mov    %edx,%ecx
    shr    $0x10,%ecx
    int    $0x21
    rcl    %dx
    ror    %dx
    shl    $0x10,%edx
    mov    %ax,%dx
    mov    %edx,%edi
    test   %edx,%edx
    jge    jump_7bdad
    xor    %eax,%eax
    mov    %dx,%ax
  jump_7bda6:
    call   func_76673
    jmp    jump_7bddd
  jump_7bdad:
    mov    (%esp),%edx
    mov    %esi,%ebx
    mov    %ebp,%ecx
    mov    $0x40,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    mov    %eax,%esi
    mov    %eax,%edi
    mov    %eax,%edx
    test   %eax,%eax
    jge    jump_7bdcd
    xor    %eax,%eax
    mov    %si,%ax
    jmp    jump_7bda6
  jump_7bdcd:
    cmp    %ebp,%eax
    je     jump_7bddb
    mov    $0xc,%eax
    call   func_76588
  jump_7bddb:
    mov    %edx,%eax
  jump_7bddd:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret
  jump_7bde5:
    push   %edx
    mov    %eax,%edx
    mov    $0x41,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    test   %eax,%eax
    jge    jump_7be00
    and    $0xffff,%eax
    call   func_76673
    pop    %edx
    ret
  jump_7be00:
    xor    %eax,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7be04:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%ecx
    test   %edx,%edx
    jne    jump_7be13
    xor    %eax,%eax
    pop    %ecx
    pop    %ebx
    ret
  jump_7be13:
    mov    (%eax),%edx
    mov    data_12281c(,%edx,4),%edx
    call   *(%edx)
    mov    %eax,%edx
    cmpl   $0x2,(%ebx)
    je     jump_7be2f
    mov    %ecx,%eax
    shl    $0x3,%eax
    sub    $0x8,%eax
    add    %edx,%eax
  jump_7be2f:
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7be32:
/*----------------------------------------------------------------*/
    push   %ebx
    mov    %edx,(%eax)
    mov    0x8(%edx),%ebx
    movl   $0x0,0x9(%eax)
    mov    %ebx,0x4(%eax)
    mov    0x4(%edx),%ebx
    mov    (%ebx),%ebx
    mov    data_12281c(,%ebx,4),%ebx
    call   *0x8(%ebx)
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7be53:
/*----------------------------------------------------------------*/
    subl   $0x2,0x4(%eax)
    ret


/*----------------------------------------------------------------*/
func_7be58:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%esi
    mov    (%eax),%edi
    test   %edi,%edi
    jne    jump_7be71
    mov    %edi,(%esp)
    jmp    jump_7beb3
  jump_7be71:
    mov    0x4(%eax),%ecx
    test   %ecx,%ecx
    jbe    jump_7be79
    dec    %ecx
  jump_7be79:
    lea    0xc(%edi),%ebp
  jump_7be7c:
    test   %ecx,%ecx
    jne    jump_7be85
    mov    %ecx,(%esp)
    jmp    jump_7beb0
  jump_7be85:
    cmp    0x9(%esi),%ecx
    je     jump_7beb0
    mov    %ecx,%edx
    mov    0x4(%edi),%eax
    call   func_7be04
    mov    %eax,(%esp)
    cmpl   $0x0,(%eax)
    jne    jump_7beb0
    mov    0x4(%eax),%ebx
    mov    (%ebx),%ax
    cmp    $0x1,%ax
    jb     jump_7beb0
    jbe    jump_7bec0
    cmp    $0x5,%ax
    je     jump_7bec5
  jump_7beb0:
    mov    %ecx,0x4(%esi)
  jump_7beb3:
    mov    (%esp),%eax
  jump_7beb6:
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret
  jump_7bec0:
    mov    0x2(%ebx),%ecx
    jmp    jump_7be7c
  jump_7bec5:
    mov    %ebp,%eax
    mov    0x2(%ebx),%edx
    call   func_7cfe8
    test   %al,%al
    je     jump_7bed8
    mov    0x6(%ebx),%ecx
    jmp    jump_7be7c
  jump_7bed8:
    mov    0xa(%ebx),%ecx
    jmp    jump_7be7c


/*----------------------------------------------------------------*/
func_7bedd:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%ecx
    mov    (%eax),%edi
    add    $0xc,%edi
    mov    0x4(%eax),%esi
    mov    -0x8(%edi),%ebp
  jump_7bef3:
    mov    %esi,%edx
    mov    %ebp,%eax
    call   func_7be04
    mov    %eax,(%esp)
    test   %eax,%eax
    je     jump_7bf64
    mov    0x4(%ecx),%edx
    cmp    0x9(%ecx),%edx
    je     jump_7bf64
    cmpl   $0x0,(%eax)
    jne    jump_7bf64
    mov    0x4(%eax),%ebx
    mov    (%ebx),%ax
    cmp    $0x2,%ax
    jb     jump_7bf5c
    cmp    $0x4,%ax
    jbe    jump_7bf64
    cmp    $0x5,%ax
    jbe    jump_7bf38
    cmp    $0xb,%ax
    jbe    jump_7bf64
    jmp    jump_7bf55
  jump_7bf38:
    mov    %edi,%eax
    mov    0x2(%ebx),%edx
    call   func_7cfe8
    test   %al,%al
    je     jump_7bf4b
    mov    0x6(%ebx),%esi
    jmp    jump_7bef3
  jump_7bf4b:
    mov    0xa(%ebx),%esi
    jmp    jump_7bef3
  jump_7bf50:
    mov    0x2(%ebx),%esi
    jmp    jump_7bef3
  jump_7bf55:
    call   func_7bf87
    jmp    jump_7bf64
  jump_7bf5c:
    cmp    $0x1,%ax
    je     jump_7bf50
    jmp    jump_7bf55
  jump_7bf64:
    mov    (%esp),%eax
    mov    %esi,0x4(%ecx)
    jmp    jump_7beb6


/*----------------------------------------------------------------*/
func_7bf70:
/*----------------------------------------------------------------*/
    push   %edx
    mov    0x8(%eax),%edx
    test   %edx,%edx
    je     jump_7bf7c
    movb   $0x3,0xc(%edx)
  jump_7bf7c:
    orb    $0x1,0x4(%eax)
    call   func_7d008
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7bf87:
/*----------------------------------------------------------------*/
    mov    $data_1227f8,%eax
    movl   $data_85580,data_122804
    jmp    func_7bf70

vtable_7c098:
    .long   func_7c197
    .long   func_7c16b
    .long   func_7c10c
    .long   func_7c197
    .long   func_7c197
    .long   func_7c10c
    .long   func_7c187
    .long   func_7c187

vtable_7c0b8:
    .long   func_7c15c
    .long   func_7c118
    .long   func_7c19e
    .long   func_7c144
    .long   func_7c165
    .long   func_7c1b7
    .long   func_7c12f
    .long   func_7c12f


/*----------------------------------------------------------------*/
func_7c10c:
/*----------------------------------------------------------------*/
    mov    0x1c(%ebp),%edx
    mov    (%esp),%eax
    inc    %edx
    jmp    jump_7d08b


/*----------------------------------------------------------------*/
func_7c118:
/*----------------------------------------------------------------*/
    testb  $0x1,0x20(%ebp)
    je     jump_7c126
    movl   $0x0,(%edi)
    jmp    func_7c10c
  jump_7c126:
    mov    0x12(%eax),%eax
    add    %esi,%eax
  jump_7c12b:
    mov    %eax,(%edi)
    jmp    func_7c10c


/*----------------------------------------------------------------*/
func_7c12f:
/*----------------------------------------------------------------*/
    testb  $0x1,0x20(%ebp)
    je     func_7c144
    mov    %edi,%eax
    movzbl 0x1(%ecx),%ebx
    xor    %edx,%edx
    call   func_72280
    jmp    func_7c10c


/*----------------------------------------------------------------*/
func_7c144:
/*----------------------------------------------------------------*/
    mov    %ebx,%esi
    movzbl 0x1(%ecx),%ecx
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi
    jmp    func_7c10c


/*----------------------------------------------------------------*/
func_7c15c:
/*----------------------------------------------------------------*/
    mov    %ebx,%edx
    mov    %edi,%eax
  jump_7c160:
    call   *0x5(%ecx)
    jmp    func_7c10c


/*----------------------------------------------------------------*/
func_7c165:
/*----------------------------------------------------------------*/
    mov    %edi,%eax
    xor    %edx,%edx
    jmp    jump_7c160


/*----------------------------------------------------------------*/
func_7c16b:
/*----------------------------------------------------------------*/
    testb  $0x1,0x20(%ebp)
    je     jump_7c17a
    movl   $0x0,0xe(%eax)
    jmp    jump_7c182
  jump_7c17a:
    mov    0x12(%eax),%edx
    add    %esi,%edx
    mov    %edx,0xe(%eax)
  jump_7c182:
    add    $0xe,%eax
    jmp    jump_7c12b


/*----------------------------------------------------------------*/
func_7c187:
/*----------------------------------------------------------------*/
    testb  $0x1,0x20(%ebp)
    je     func_7c197
    lea    0xe(%eax),%ebx
    movl   $0x0,0xe(%eax)


/*----------------------------------------------------------------*/
func_7c197:
/*----------------------------------------------------------------*/
    mov    %ebx,(%edi)
    jmp    func_7c10c


/*----------------------------------------------------------------*/
func_7c19e:
/*----------------------------------------------------------------*/
    mov    0x1(%ecx),%ecx
    mov    (%ecx),%cl
    cmp    $0x7,%cl
    ja     func_7c10c
    movzbl %cl,%ecx
    jmp    *%cs:vtable_7c098(,%ecx,4)


/*----------------------------------------------------------------*/
func_7c1b7:
/*----------------------------------------------------------------*/
    call   func_7bf87
    jmp    func_7c10c


/*----------------------------------------------------------------*/
func_7c1e9:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    0x8(%eax),%edx
    mov    0xc(%eax),%ebx
    mov    0x8(%edx),%edx
  jump_7c1f4:
    cmp    %ebx,%edx
    je     jump_7c201
    mov    (%edx),%edx
    call   func_7c516
    jmp    jump_7c1f4
  jump_7c201:
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c204:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    %eax,%ecx
    mov    0x8(%eax),%ebx
    mov    0x8(%ebx),%edx
    mov    (%eax),%esi
    test   %edx,%edx
    je     jump_7c21a
    movb   $0x0,0xc(%edx)
  jump_7c21a:
    cmp    (%ebx),%esi
    je     jump_7c230
    mov    (%ebx),%edx
    xor    %eax,%eax
    call   func_76554
    mov    %ebx,%eax
    call   func_7563e
    jmp    jump_7c21a
  jump_7c230:
    mov    %esi,%edx
    mov    0x18(%ecx),%eax
    call   func_76554
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret

vtable_7c324:
    .long   func_7c363
    .long   func_7c3b7
    .long   func_7c3b7
    .long   func_7c371
    .long   func_7c39e
    .long   func_7c380
    .long   func_7c38f


/*----------------------------------------------------------------*/
func_7c340:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ebx
    mov    0x8(%eax),%ecx
    test   %ecx,%ecx
    jne    jump_7c3a5
    testb  $0x1,0x4(%eax)
    je     func_7c3b7
    mov    $0x1,%edx
    mov    $data_855ce,%eax
    call   func_74778
    jmp    func_7c3b7


/*----------------------------------------------------------------*/
func_7c363:
/*----------------------------------------------------------------*/
    mov    %ebx,%eax
    movl   $data_855f7,0xc(%ebx)
    call   func_7bf70


/*----------------------------------------------------------------*/
func_7c371:
/*----------------------------------------------------------------*/
    mov    $0x1,%edx
    mov    $data_85639,%eax
    call   func_74778


/*----------------------------------------------------------------*/
func_7c380:
/*----------------------------------------------------------------*/
    mov    $0x1,%edx
    mov    $data_85662,%eax
    call   func_74778


/*----------------------------------------------------------------*/
func_7c38f:
/*----------------------------------------------------------------*/
    mov    $0x1,%edx
    mov    $data_8568a,%eax
    call   func_74778


/*----------------------------------------------------------------*/
func_7c39e:
/*----------------------------------------------------------------*/
    call   func_7bf87
    jmp    func_7c3b7
  jump_7c3a5:
    mov    0xc(%ecx),%al
    cmp    $0x6,%al
    ja     func_7c39e
    movzbl %al,%eax
    jmp    *%cs:vtable_7c324(,%eax,4)


/*----------------------------------------------------------------*/
func_7c3b7:
/*----------------------------------------------------------------*/
    mov    %ecx,%eax
    movl   $0x0,0xc(%ebx)
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c4f9:
/*----------------------------------------------------------------*/
    sub    $0x4,%esp
    mov    0x9(%eax),%eax
    mov    %eax,(%esp)
    test   %eax,%eax
    je     jump_7c512
    lea    0x12(%edx),%eax
    movb   $0x6,0xc(%edx)
    xor    %edx,%edx
    call   *(%esp)
  jump_7c512:
    add    $0x4,%esp
    ret


/*----------------------------------------------------------------*/
func_7c516:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    data_122800,%edx
    mov    0x8(%edx),%eax
    mov    $data_1227f8,%ebx
    cmpb   $0x2,(%eax)
    jne    jump_7c52e
    mov    0x1(%eax),%eax
  jump_7c52e:
    cmpb   $0x0,(%eax)
    je     jump_7c538
    cmpb   $0x4,(%eax)
    jne    jump_7c53d
  jump_7c538:
    call   func_7c4f9
  jump_7c53d:
    mov    %ebx,%eax
    call   func_7d238
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c563:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x10,%esp
    mov    %eax,%ebx
    mov    %esp,%eax
    call   func_7be32
    mov    0xc(%ebx),%edx
    jmp    jump_7c57c
  jump_7c575:
    mov    %esp,%eax
    call   func_7be58
  jump_7c57c:
    mov    %esp,%eax
    call   func_7bedd
    test   %eax,%eax
    je     jump_7c5a6
    cmpl   $0x0,(%eax)
    jne    jump_7c575
    mov    0x4(%eax),%eax
    movzwl (%eax),%eax
    cmp    $0x3,%eax
    jne    jump_7c575
    test   %edx,%edx
    jne    jump_7c5a0
    call   func_7bf87
  jump_7c5a0:
    mov    (%edx),%edx
    test   %edx,%edx
    jne    jump_7c575
  jump_7c5a6:
    mov    %edx,0xc(%ebx)
    add    $0x10,%esp
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c5ae:
/*----------------------------------------------------------------*/
    push   %ebx
    sub    $0x24,%esp
    movl   $data_1227f8,0x8(%esp)
    mov    data_1227f8,%ebx
    jmp    jump_7c5c4
  jump_7c5c2:
    mov    (%ebx),%ebx
  jump_7c5c4:
    test   %ebx,%ebx
    je     jump_7c5cc
    cmp    %eax,%ebx
    jbe    jump_7c5c2
  jump_7c5cc:
    mov    0x8(%esp),%eax
    cmp    (%eax),%ebx
    je     jump_7c635
    andb   $0xfe,0x20(%esp)
    movl   $0x0,0x4(%esp)
    movl   $0x0,0x14(%esp)
    mov    %ebx,(%esp)
    call   func_7c340
    mov    0x8(%esp),%ebx
    mov    %eax,0xc(%esp)
  jump_7c5f9:
    mov    (%ebx),%ebx
    cmp    (%esp),%ebx
    je     jump_7c627
    cmpl   $0x0,0xc(%esp)
    jne    jump_7c609
    jmp    jump_7c627
  jump_7c609:
    mov    0x4(%ebx),%eax
    mov    (%eax),%eax
    test   %eax,%eax
    jbe    jump_7c61c
    cmp    $0x4,%eax
    jbe    jump_7c5f9
    call   func_7bf87
  jump_7c61c:
    mov    %esp,%eax
    mov    %ebx,%edx
    call   func_7c563
    jmp    jump_7c5f9
  jump_7c627:
    mov    %esp,%eax
    call   func_7c1e9
    mov    %esp,%eax
    call   func_7c204
  jump_7c635:
    add    $0x24,%esp
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c63a:
/*----------------------------------------------------------------*/
    movl   $func_7c5ae,data_89c4c
    ret


/*----------------------------------------------------------------*/
func_7c64a:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    mov    %eax,%ecx
    mov    data_1227e8,%edx
    xor    %ebx,%ebx
    jmp    jump_7c66f
  jump_7c659:
    mov    0x4(%edx),%eax
    test   %ecx,0xc(%eax)
    je     jump_7c66d
    inc    %ebx
    testb  $0x10,0xd(%eax)
    je     jump_7c66d
    call   func_76297
  jump_7c66d:
    mov    (%edx),%edx
  jump_7c66f:
    test   %edx,%edx
    jne    jump_7c659
    mov    %ebx,%eax
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c679:
/*----------------------------------------------------------------*/
    push   %edx
    xor    %edx,%edx
    mov    data_897e8,%eax
    mov    %edx,data_897e8
    test   %eax,%eax
    jne    jump_7c694
    mov    $0x1,%ah
    int    $0x21
    and    $0xff,%eax
  jump_7c694:
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7c696:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %edx,%ebp
    mov    %eax,%edi
    push   %ebp
    push   %edx
    mov    (%edi),%eax
    mov    0x4(%edi),%ebx
    mov    0x8(%edi),%ecx
    mov    0xc(%edi),%edx
    mov    0x10(%edi),%esi
    mov    0x14(%edi),%edi
    clc
    int    $0x21
    mov    %edi,%ebp
    pop    %edi
    mov    %eax,(%edi)
    mov    %ebx,0x4(%edi)
    mov    %ecx,0x8(%edi)
    mov    %edx,0xc(%edi)
    mov    %esi,0x10(%edi)
    mov    %ebp,0x14(%edi)
    sbb    %eax,%eax
    pop    %ebp
    mov    %eax,0x18(%ebp)
    mov    %eax,%edx
    mov    0x0(%ebp),%eax
    call   func_7666e
    mov    0x0(%ebp),%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c6e2:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ebx
    testb  $0x2,0xc(%edx)
    jne    jump_7c707
    mov    $0x4,%eax
    call   func_76588
    orb    $0x20,0xc(%edx)
  jump_7c6fd:
    mov    $0xffffffff,%eax
    jmp    jump_7c780
  jump_7c707:
    cmpl   $0x0,0x8(%edx)
    jne    jump_7c714
    mov    %edx,%eax
    call   func_78473
  jump_7c714:
    mov    $0x400,%ecx
    cmp    $0xa,%ebx
    jne    jump_7c751
    mov    0xc(%edx),%al
    mov    $0x600,%ecx
    test   $0x40,%al
    jne    jump_7c751
    orb    $0x10,0xd(%edx)
    mov    (%edx),%eax
    movb   $0xd,(%eax)
    mov    (%edx),%esi
    inc    %esi
    mov    0x4(%edx),%edi
    mov    %esi,(%edx)
    inc    %edi
    mov    0x14(%edx),%ebp
    mov    %edi,0x4(%edx)
    cmp    %ebp,%edi
    jne    jump_7c751
    mov    %edx,%eax
    call   func_76297
    test   %eax,%eax
    jne    jump_7c6fd
  jump_7c751:
    orb    $0x10,0xd(%edx)
    mov    (%edx),%eax
    mov    %bl,(%eax)
    mov    (%edx),%eax
    inc    %eax
    mov    0x4(%edx),%esi
    mov    %eax,(%edx)
    inc    %esi
    mov    0xc(%edx),%edi
    mov    %esi,0x4(%edx)
    test   %edi,%ecx
    jne    jump_7c771
    cmp    0x14(%edx),%esi
    jne    jump_7c77c
  jump_7c771:
    mov    %edx,%eax
    call   func_76297
    test   %eax,%eax
    jne    jump_7c6fd
  jump_7c77c:
    xor    %eax,%eax
    mov    %bl,%al
  jump_7c780:
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c786:
/*----------------------------------------------------------------*/
    movl   $0x8000,data_89c38
    ret
  jump_7c85a:
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c860:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %es
    push   %ebp
    push   %eax
    cmp    data_897dc,%eax
    jb     jump_7c8c7
    cmpb   $0x0,data_897f6
    jne    jump_7c8d9
    mov    (%esp),%ebp
    add    $0xf,%ebp
    shr    $0x4,%ebp
    test   %ebp,%ebp
    jne    jump_7c88b
    mov    $0xfffffff,%ebp
  jump_7c88b:
    xor    %ebx,%ebx
    mov    %ds,%eax
    mov    %ax,%bx
    mov    $0xed,%ah
    int    $0x21
    shl    $0x1f,%eax
    and    $0xffff,%edi
    or     %eax,%edi
    test   %edi,%edi
    jge    jump_7c8b5
    mov    %edi,%es
    mov    %ebp,%ebx
    mov    $0x4a,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    test   %eax,%eax
    jl     jump_7c8c7
  jump_7c8b5:
    mov    %ds,%eax
    mov    %eax,%es
    mov    %ebp,%ebx
  jump_7c8bb:
    mov    $0x4a,%ah
    int    $0x21
    rcl    %eax
    ror    %eax
    test   %eax,%eax
    jge    jump_7c90a
  jump_7c8c7:
    call   func_72e47
    movl   $0x5,(%eax)
    mov    $0xffffffff,%eax
    jmp    jump_7c918
  jump_7c8d9:
    mov    (%esp),%ebx
    add    $0xfff,%ebx
    shr    $0xc,%ebx
    test   %ebx,%ebx
    jne    jump_7c8ee
    mov    $0xfffff,%ebx
  jump_7c8ee:
    mov    data_897f6,%dl
    cmp    $0x1,%dl
    jne    jump_7c904
    cmp    data_897f7,%dl
    jne    jump_7c904
    shl    $0x8,%ebx
  jump_7c904:
    mov    %ds,%eax
    mov    %eax,%es
    jmp    jump_7c8bb
  jump_7c90a:
    mov    (%esp),%ebx
    mov    data_897c8,%eax
    mov    %ebx,data_897c8
  jump_7c918:
    add    $0x4,%esp
    pop    %ebp
    pop    %es
    jmp    jump_7c85a


/*----------------------------------------------------------------*/
func_7c922:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    push   %es
    push   %fs
    cmpl   $0x0,data_89a9c
    jne    jump_7c9ed
    mov    data_897fd,%fs
    xor    %ecx,%ecx
    xor    %dl,%dl
    mov    %fs,%eax
    mov    data_897f9,%edi
    mov    %eax,%es
    mov    %edi,%eax
  jump_7c94d:
    cmp    %es:(%eax),%dl
    je     jump_7c965
  jump_7c952:
    mov    %es:(%eax),%dh
    lea    0x1(%eax),%ebx
    cmp    %dh,%dl
    je     jump_7c960
    mov    %ebx,%eax
    jmp    jump_7c952
  jump_7c960:
    inc    %ecx
    mov    %ebx,%eax
    jmp    jump_7c94d
  jump_7c965:
    sub    %edi,%eax
    jne    jump_7c96e
    mov    $0x1,%eax
  jump_7c96e:
    call   func_73af4
    mov    %eax,%edx
    mov    %eax,%ebx
    test   %eax,%eax
    je     jump_7c9ed
    mov    %ecx,%eax
    shl    $0x2,%eax
    add    $0x4,%eax
    add    %ecx,%eax
    call   func_73af4
    test   %eax,%eax
    je     jump_7c9e6
    mov    %eax,data_89a9c
    xor    %esi,%esi
    mov    %fs,%eax
    xor    %ecx,%ecx
    mov    %eax,%es
    mov    %edi,%eax
  jump_7c9a1:
    cmpb   $0x0,%es:(%eax)
    je     jump_7c9c1
    mov    data_89a9c,%edx
    mov    %ebx,(%ecx,%edx,1)
  jump_7c9b0:
    mov    %es:(%eax),%dl
    inc    %eax
    mov    %dl,(%ebx)
    inc    %ebx
    test   %dl,%dl
    jne    jump_7c9b0
    add    $0x4,%ecx
    inc    %esi
    jmp    jump_7c9a1
  jump_7c9c1:
    mov    data_89a9c,%edx
    movl   $0x0,(%ecx,%edx,1)
    add    $0x4,%ecx
    add    %ecx,%edx
    mov    %esi,%ebx
    mov    %edx,data_89aa0
    mov    %edx,%eax
    xor    %edx,%edx
    call   func_72280
    jmp    jump_7c9ed
  jump_7c9e6:
    mov    %edx,%eax
    call   func_73bef
  jump_7c9ed:
    pop    %fs
    pop    %es
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7c9fc:
/*----------------------------------------------------------------*/
    push   %esi
    push   %edi
    push   %ebp
    sub    $0x4,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    mov    %ebx,%eax
    test   %edx,%edx
    jge    jump_7ca15
    mov    $0x2d,%dh
    neg    %esi
    mov    %dh,(%esp)
    jmp    jump_7ca19
  jump_7ca15:
    movb   $0x2b,(%esp)
  jump_7ca19:
    mov    $0x64,%ebx
    mov    $0x3,%edx
    cmp    %ebx,%esi
    jge    jump_7ca3c
    mov    $0xa,%ebx
    mov    $0x2,%edx
    cmp    %ebx,%esi
    jge    jump_7ca3c
    mov    $0x1,%edx
    mov    %edx,%ebx
  jump_7ca3c:
    test   %eax,%eax
    jne    jump_7ca4c
    mov    $0x2,%eax
    cmp    $0x3,%edx
    jne    jump_7ca4c
    mov    %edx,%eax
  jump_7ca4c:
    lea    0x1(%eax),%ebp
    cmp    %ecx,%ebp
    jg     jump_7ca9a
    cmp    %eax,%edx
    jg     jump_7ca97
    mov    (%esp),%cl
    mov    %cl,(%edi)
  jump_7ca5c:
    inc    %edi
    cmp    %edx,%eax
    jle    jump_7ca67
    dec    %eax
    movb   $0x30,(%edi)
    jmp    jump_7ca5c
  jump_7ca67:
    mov    %esi,%edx
    mov    %esi,%eax
    sar    $0x1f,%edx
    idiv   %ebx
    mov    %esi,%edx
    add    $0x30,%eax
    sar    $0x1f,%edx
    mov    %al,(%edi)
    mov    %esi,%eax
    idiv   %ebx
    mov    %edx,%esi
    mov    %ebx,%eax
    mov    %ebx,%edx
    mov    $0xa,%ebx
    sar    $0x1f,%edx
    idiv   %ebx
    inc    %edi
    mov    %eax,%ebx
    test   %eax,%eax
    jne    jump_7ca67
    jmp    jump_7ca9a
  jump_7ca97:
    lea    0x1(%edx),%ebp
  jump_7ca9a:
    mov    %ebp,%eax
    add    $0x4,%esp
    pop    %ebp
    pop    %edi
  jump_7caa1:
    pop    %esi
    ret


/*----------------------------------------------------------------*/
func_7caa3:
/*----------------------------------------------------------------*/
    push   %esi
    mov    %ebx,%esi
    test   %ecx,%ecx
    jne    jump_7cab8
    test   %ebx,%ebx
    jg     jump_7cab8
    movb   $0x30,(%eax)
    inc    %eax
    movb   $0x2e,(%eax)
    inc    %eax
    pop    %esi
    ret
  jump_7cab8:
    test   %esi,%esi
    jle    jump_7cac9
    mov    (%edx),%bl
    test   %bl,%bl
    je     jump_7cac9
    inc    %edx
    dec    %esi
    mov    %bl,(%eax)
    inc    %eax
    jmp    jump_7cab8
  jump_7cac9:
    test   %esi,%esi
    jle    jump_7cad6
  jump_7cacd:
    dec    %esi
    movb   $0x30,(%eax)
    inc    %eax
    test   %esi,%esi
    jg     jump_7cacd
  jump_7cad6:
    movb   $0x2e,(%eax)
    inc    %eax
    test   %ecx,%ecx
    jle    jump_7caea
  jump_7cade:
    test   %esi,%esi
    je     jump_7caea
    inc    %esi
    movb   $0x30,(%eax)
    inc    %eax
    dec    %ecx
    jne    jump_7cade
  jump_7caea:
    test   %ecx,%ecx
    jle    jump_7caa1
  jump_7caee:
    mov    (%edx),%bh
    test   %bh,%bh
    je     jump_7cafb
    inc    %edx
    mov    %bh,(%eax)
    inc    %eax
    dec    %ecx
    jne    jump_7caee
  jump_7cafb:
    test   %ecx,%ecx
    je     jump_7caa1
    dec    %ecx
    movb   $0x30,(%eax)
    inc    %eax
    jmp    jump_7cafb


/*----------------------------------------------------------------*/
func_7cb06:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x8,%esp
    mov    %eax,%edi
    mov    %edx,%esi
    cmp    %ebx,%edx
    je     jump_7cb69
    mov    %edi,-0x14(%ebp)
    mov    0x1(%eax),%al
    lea    (%ebx,%edi,1),%edx
    mov    %al,-0x10(%ebp)
    lea    (%esi,%edi,1),%eax
  jump_7cb26:
    dec    %eax
    dec    %edx
    mov    (%eax),%cl
    dec    %esi
    mov    %cl,(%edx)
    mov    -0x14(%ebp),%ecx
    dec    %ebx
    cmp    %ecx,%eax
    jne    jump_7cb26
    mov    (%edi),%ah
    cmp    $0x2e,%ah
    jne    jump_7cb43
    dec    %ebx
    movb   $0x30,(%edi,%ebx,1)
    jmp    jump_7cb5d
  jump_7cb43:
    cmp    $0x2b,%ah
    je     jump_7cb4d
    cmp    $0x2d,%ah
    jne    jump_7cb5d
  jump_7cb4d:
    cmpb   $0x2e,-0x10(%ebp)
    jne    jump_7cb5d
    movb   $0x30,(%edi,%ebx,1)
    dec    %ebx
    mov    (%edi),%dl
    mov    %dl,(%edi,%ebx,1)
  jump_7cb5d:
    mov    $0x20,%edx
    mov    %edi,%eax
    call   func_72280
  jump_7cb69:
    lea    -0xc(%ebp),%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7cb71:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %esi
    push   %edi
    sub    $0x3c,%esp
    mov    0x8(%ebp),%edi
    mov    %eax,-0x14(%ebp)
    mov    %cl,-0x10(%ebp)
    lea    -0x44(%ebp),%eax
    push   %eax
    mov    0x4(%edx),%ecx
    push   %ecx
    mov    (%edx),%esi
    push   %esi
    call   func_7d281
    test   %eax,%eax
    je     jump_7cbb2
    mov    -0x14(%ebp),%eax
    xor    %esi,%esi
    jmp    jump_7cba5
  jump_7cb9d:
    cmp    %edi,%esi
    jge    jump_7cba3
    mov    %ch,(%eax)
  jump_7cba3:
    inc    %eax
    inc    %esi
  jump_7cba5:
    mov    -0x44(%esi,%ebp,1),%ch
    test   %ch,%ch
    jne    jump_7cb9d
    jmp    jump_7cd78
  jump_7cbb2:
    mov    0x18(%ebp),%al
    mov    %al,-0xc(%ebp)
    cmp    $0x47,%al
    jne    jump_7cc36
    fldl   (%edx)
    fabs
    fstpl  -0x30(%ebp)
    mov    -0x2c(%ebp),%eax
    mov    -0x30(%ebp),%ecx
    test   $0x7fffffff,%eax
    jne    jump_7cbd8
    test   %ecx,%ecx
    je     jump_7cc2c
  jump_7cbd8:
    fldl   -0x30(%ebp)
    fldlg2
    fxch   %st(1)
    fyl2x
    fstpl  -0x30(%ebp)
    mov    -0x2c(%ebp),%eax
    push   %eax
    mov    -0x30(%ebp),%ecx
    push   %ecx
    call   func_7d305
    call   func_72258
    fistpl -0x18(%ebp)
    mov    -0x18(%ebp),%esi
    cmp    $0xfffffffc,%esi
    jl     jump_7cc05
    cmp    %esi,%ebx
    jg     jump_7cc0b
  jump_7cc05:
    movb   $0x45,-0xc(%ebp)
    jmp    jump_7cc36
  jump_7cc0b:
    fldz
    fcompl -0x30(%ebp)
    fnstsw %ax
    sahf
    ja     jump_7cc1b
    lea    0x1(%esi),%ecx
    mov    %ecx,-0x18(%ebp)
  jump_7cc1b:
    mov    -0x18(%ebp),%esi
    xor    %eax,%eax
    mov    $0x46,%ch
    mov    %eax,0xc(%ebp)
    mov    %ch,-0xc(%ebp)
    sub    %esi,%ebx
    jmp    jump_7cc36
  jump_7cc2c:
    xor    %esi,%esi
    mov    $0x46,%cl
    mov    %esi,0xc(%ebp)
    mov    %cl,-0xc(%ebp)
  jump_7cc36:
    cmpb   $0x45,-0xc(%ebp)
    jne    jump_7cc62
    mov    %ebx,%eax
    mov    0xc(%ebp),%ecx
    neg    %eax
    cmp    %ecx,%eax
    jge    jump_7cc4e
    lea    0x2(%ebx),%eax
    cmp    %ecx,%eax
    jg     jump_7cc62
  jump_7cc4e:
    mov    -0x14(%ebp),%eax
    mov    $0x2a,%edx
    mov    %edi,%ebx
    call   func_72280
    jmp    jump_7cd8c
  jump_7cc62:
    mov    0x18(%ebp),%al
    mov    %ebx,%ecx
    cmp    $0x45,%al
    jne    jump_7cc7c
    mov    0xc(%ebp),%eax
    test   %eax,%eax
    jle    jump_7cc77
    lea    0x1(%ebx),%ecx
    jmp    jump_7cc7c
  jump_7cc77:
    jge    jump_7cc7c
    lea    (%eax,%ebx,1),%ecx
  jump_7cc7c:
    mov    (%edx),%eax
    mov    %eax,-0x28(%ebp)
    mov    0x4(%edx),%eax
    mov    -0x28(%ebp),%edx
    mov    %eax,-0x24(%ebp)
    test   $0x7fffffff,%eax
    jne    jump_7cc95
    test   %edx,%edx
    je     jump_7ccb3
  jump_7cc95:
    cmpb   $0x45,-0xc(%ebp)
    je     jump_7ccb3
    mov    0xc(%ebp),%ebx
    test   %ebx,%ebx
    je     jump_7ccb3
    push   %ebx
    mov    -0x24(%ebp),%eax
    push   %eax
    mov    -0x28(%ebp),%edx
    push   %edx
    call   func_7d382
    fstpl  -0x28(%ebp)
  jump_7ccb3:
    lea    -0x44(%ebp),%eax
    push   %eax
    xor    %eax,%eax
    mov    -0xc(%ebp),%al
    push   %eax
    lea    -0x20(%ebp),%eax
    push   %eax
    lea    -0x1c(%ebp),%eax
    push   %eax
    push   %ecx
    mov    -0x24(%ebp),%ebx
    push   %ebx
    mov    -0x28(%ebp),%esi
    push   %esi
    mov    -0x14(%ebp),%edx
    call   func_7d469
    mov    -0x20(%ebp),%ebx
    lea    0x1(%edx),%eax
    test   %ebx,%ebx
    je     jump_7cce5
    movb   $0x2d,(%edx)
    jmp    jump_7ccee
  jump_7cce5:
    cmpb   $0x0,-0x10(%ebp)
    je     jump_7ccf0
    movb   $0x2b,(%edx)
  jump_7ccee:
    mov    %eax,%edx
  jump_7ccf0:
    cmpb   $0x45,-0xc(%ebp)
    jne    jump_7cd4d
    mov    0xc(%ebp),%ebx
    mov    %edx,%eax
    lea    -0x44(%ebp),%edx
    sub    %ebx,%ecx
    call   func_7caa3
    mov    -0x14(%ebp),%ecx
    mov    %eax,%esi
    mov    %eax,%ebx
    sub    %ecx,%esi
    mov    0x14(%ebp),%cl
    mov    %eax,%edx
    test   %cl,%cl
    je     jump_7cd21
    cmp    %edi,%esi
    jge    jump_7cd21
    lea    0x1(%eax),%edx
    inc    %esi
    mov    %cl,(%eax)
  jump_7cd21:
    mov    -0x24(%ebp),%eax
    mov    -0x28(%ebp),%ebx
    test   $0x7fffffff,%eax
    jne    jump_7cd32
    test   %ebx,%ebx
    je     jump_7cd38
  jump_7cd32:
    mov    0xc(%ebp),%eax
    sub    %eax,-0x1c(%ebp)
  jump_7cd38:
    mov    0x10(%ebp),%ebx
    mov    %edi,%ecx
    mov    %edx,%eax
    mov    -0x1c(%ebp),%edx
    sub    %esi,%ecx
    call   func_7c9fc
    add    %eax,%esi
    jmp    jump_7cd78
  jump_7cd4d:
    mov    -0x14(%ebp),%esi
    mov    -0x1c(%ebp),%eax
    mov    %edx,%ebx
    inc    %eax
    sub    %esi,%ebx
    add    %ecx,%eax
    add    %ebx,%eax
    cmp    %eax,%edi
    jge    jump_7cd65
    lea    0x1(%edi),%esi
    jmp    jump_7cd78
  jump_7cd65:
    mov    -0x1c(%ebp),%ebx
    mov    %edx,%eax
    lea    -0x44(%ebp),%edx
    call   func_7caa3
    mov    %esi,%edx
    mov    %eax,%esi
    sub    %edx,%esi
  jump_7cd78:
    cmp    %edi,%esi
    jg     jump_7cc4e
    mov    -0x14(%ebp),%eax
    mov    %esi,%edx
    mov    %edi,%ebx
    call   func_7cb06
  jump_7cd8c:
    lea    -0x8(%ebp),%esp
    pop    %edi
    pop    %esi
    pop    %ebp
    ret    $0x14


/*----------------------------------------------------------------*/
func_7cd95:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    sub    $0x24,%esp
    push   %edx
    mov    %eax,-0x14(%ebp)
  jump_7cda3:
    mov    (%eax),%dl
    cmp    $0x20,%dl
    je     jump_7cdb4
    cmp    $0x9,%dl
    jb     jump_7cdb7
    cmp    $0xd,%dl
    ja     jump_7cdb7
  jump_7cdb4:
    inc    %eax
    jmp    jump_7cda3
  jump_7cdb7:
    lea    0x1(%eax),%ebx
    xor    %cl,%cl
    cmp    $0x2b,%dl
    je     jump_7cdc8
    cmp    $0x2d,%dl
    jne    jump_7cdca
    mov    $0x1,%cl
  jump_7cdc8:
    mov    %ebx,%eax
  jump_7cdca:
    mov    $0x30,%bl
    xor    %edx,%edx
    xor    %esi,%esi
  jump_7cdd0:
    mov    (%eax),%ch
    inc    %eax
    cmp    $0x2e,%ch
    jne    jump_7cde2
    test   $0x8,%cl
    jne    jump_7ce08
    or     $0x8,%cl
    jmp    jump_7cdd0
  jump_7cde2:
    cmp    $0x30,%ch
    jb     jump_7ce08
    cmp    $0x39,%ch
    ja     jump_7ce08
    test   $0x8,%cl
    je     jump_7cdf2
    inc    %esi
  jump_7cdf2:
    or     %ch,%bl
    cmp    $0x30,%bl
    je     jump_7ce03
    cmp    $0x11,%edx
    jge    jump_7ce02
    mov    %ch,-0x34(%edx,%ebp,1)
  jump_7ce02:
    inc    %edx
  jump_7ce03:
    or     $0x4,%cl
    jmp    jump_7cdd0
  jump_7ce08:
    xor    %ebx,%ebx
    test   $0x4,%cl
    je     jump_7ce7e
    cmp    $0x65,%ch
    je     jump_7ce27
    cmp    $0x45,%ch
    je     jump_7ce27
    cmp    $0x64,%ch
    je     jump_7ce27
    cmp    $0x44,%ch
    jne    jump_7ce7a
  jump_7ce27:
    lea    -0x1(%eax),%edi
    mov    %edi,-0x18(%ebp)
    lea    0x1(%eax),%edi
    mov    (%eax),%ch
    cmp    $0x2b,%ch
    je     jump_7ce3f
    cmp    $0x2d,%ch
    jne    jump_7ce41
    or     $0x2,%cl
  jump_7ce3f:
    mov    %edi,%eax
  jump_7ce41:
    and    $0xfb,%cl
  jump_7ce44:
    mov    (%eax),%ch
    cmp    $0x30,%ch
    jb     jump_7ce69
    cmp    $0x39,%ch
    ja     jump_7ce69
    cmp    $0x3e8,%ebx
    jge    jump_7ce63
    imul   $0xa,%ebx,%ebx
    movzbl %ch,%edi
    add    %edi,%ebx
    sub    $0x30,%ebx
  jump_7ce63:
    or     $0x4,%cl
    inc    %eax
    jmp    jump_7ce44
  jump_7ce69:
    test   $0x2,%cl
    je     jump_7ce70
    neg    %ebx
  jump_7ce70:
    test   $0x4,%cl
    jne    jump_7ce7b
    mov    -0x18(%ebp),%eax
    jmp    jump_7ce7b
  jump_7ce7a:
    dec    %eax
  jump_7ce7b:
    mov    %eax,-0x14(%ebp)
  jump_7ce7e:
    sub    %esi,%ebx
    cmp    $0x11,%edx
    jle    jump_7ce8f
    sub    $0x11,%edx
    add    %edx,%ebx
    mov    $0x11,%edx
  jump_7ce8f:
    test   %edx,%edx
    jle    jump_7ce9e
    cmpb   $0x30,-0x35(%edx,%ebp,1)
    jne    jump_7ce9e
    inc    %ebx
    dec    %edx
    jmp    jump_7ce8f
  jump_7ce9e:
    test   %edx,%edx
    jne    jump_7cead
    mov    %edx,-0x20(%ebp)
    mov    %edx,-0x1c(%ebp)
    jmp    jump_7cf24
  jump_7cead:
    xor    %ah,%ah
    mov    %ah,-0x34(%edx,%ebp,1)
    lea    -0x34(%ebp),%eax
    lea    -0x20(%ebp),%edx
    call   func_7d6e0
    cmp    $0x134,%ebx
    jle    jump_7ceef
    call   func_76594
    test   $0x1,%cl
    je     jump_7cedd
    fldl   data_86208
    fchs
    fstpl  -0x20(%ebp)
    jmp    jump_7cf24
  jump_7cedd:
    mov    data_86208,%eax
    mov    %eax,-0x20(%ebp)
    mov    data_8620c,%eax
    mov    %eax,-0x1c(%ebp)
    jmp    jump_7cf24
  jump_7ceef:
    cmp    $0xfffffebb,%ebx
    jge    jump_7cf06
    xor    %ebx,%ebx
    call   func_76594
    mov    %ebx,-0x20(%ebp)
    mov    %ebx,-0x1c(%ebp)
    jmp    jump_7cf24
  jump_7cf06:
    test   %ebx,%ebx
    je     jump_7cf1b
    push   %ebx
    mov    -0x1c(%ebp),%eax
    push   %eax
    mov    -0x20(%ebp),%edx
    push   %edx
    call   func_7d382
    fstpl  -0x20(%ebp)
  jump_7cf1b:
    test   $0x1,%cl
    je     jump_7cf24
    xorb   $0x80,-0x19(%ebp)
  jump_7cf24:
    cmpl   $0x0,-0x38(%ebp)
    je     jump_7cf32
    mov    -0x38(%ebp),%edx
    mov    -0x14(%ebp),%eax
    mov    %eax,(%edx)
  jump_7cf32:
    fldl   -0x20(%ebp)
    lea    -0x10(%ebp),%esp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7cf3e:
/*----------------------------------------------------------------*/
    push   %edx
    mov    %ebx,%edx
    mov    data_897f6,%bl
    cmp    $0x2,%bl
    jb     jump_7cf5f
    cmp    $0x8,%bl
    ja     jump_7cf5f
    push   %ds
    mov    %ecx,%ds
    mov    %al,%cl
    mov    $0x4,%al
    mov    $0x25,%ah
    int    $0x21
    pop    %ds
    pop    %edx
    ret
  jump_7cf5f:
    push   %ds
    mov    %ecx,%ds
    mov    $0x25,%ah
    int    $0x21
    pop    %ds
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7cf6f:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    mov    %eax,%esi
    mov    %edx,%ecx
    mov    $0x2,%eax
    call   func_7d781
    mov    %eax,%ebx
    mov    %esi,%eax
    mov    %ebx,%edx
    mov    data_86210(,%eax,4),%eax
    call   func_7d7a0
    mov    $data_85795,%eax
    mov    %ebx,%edx
    call   func_7d7a0
    mov    %ecx,%eax
    mov    %ebx,%edx
    call   func_7d7a0
    mov    $0xa,%eax
    mov    %ebx,%edx
    call   func_7c6e2
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7cfb7:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    %eax,%ebx
    call   *data_89c40
    test   %eax,%eax
    jne    jump_7cfe0
    mov    0x4(%ebx),%edx
    mov    (%ebx),%eax
    call   func_7cf6f
    cmpl   $0x1,(%ebx)
    jne    jump_7cfdb
    call   func_76583
    jmp    jump_7cfe0
  jump_7cfdb:
    call   func_76594
  jump_7cfe0:
    fldl   0x18(%ebx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7cfe8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    mov    %eax,%ebx
    mov    %edx,%eax
    shr    $0x3,%eax
    mov    %eax,%ecx
    shl    $0x3,%ecx
    sub    %ecx,%edx
    mov    data_89c44(%edx),%dl
    and    (%ebx,%eax,1),%dl
    mov    %dl,%al
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7d008:
/*----------------------------------------------------------------*/
    jmp    jump_7d824
  jump_7d08b:
    push   %eax
    push   %edx
    mov    0x2a(%eax),%dx
    mov    0x1c(%eax),%eax
    call   *data_89c4c
    pop    %edx
    pop    %eax
    mov    0x2a(%eax),%ss
    mov    0x1c(%eax),%esp
    push   0x18(%eax)
    or     %edx,%edx
    jne    jump_7d0aa
    inc    %edx
  jump_7d0aa:
    push   %edx
    mov    (%eax),%ebx
    mov    0x4(%eax),%ecx
    mov    0xc(%eax),%esi
    mov    0x10(%eax),%edi
    mov    0x14(%eax),%ebp
    mov    0x20(%eax),%dx
    verr   %dx
    je     jump_7d0c4
    sub    %edx,%edx
  jump_7d0c4:
    mov    %edx,%es
    mov    0x26(%eax),%dx
    verr   %dx
    je     jump_7d0d1
    sub    %edx,%edx
  jump_7d0d1:
    mov    %edx,%fs
    mov    0x28(%eax),%dx
    verr   %dx
    je     jump_7d0de
    sub    %edx,%edx
  jump_7d0de:
    mov    %edx,%gs
    mov    0x8(%eax),%edx
    mov    0x22(%eax),%ds
    pop    %eax
    ret

vtable_7d0e8:
    .long   func_7d219
    .long   func_7d22a
    .long   func_7d20f
    .long   func_7d1f5
    .long   func_7d222
    .long   func_7d20f
    .long   func_7d22a
    .long   func_7d22a


/*----------------------------------------------------------------*/
func_7d1f5:
/*----------------------------------------------------------------*/
    mov    %eax,%edi
    movzbl 0x1(%esi),%ecx
    mov    0x8(%esp),%esi
  jump_7d1ff:
    push   %edi
    mov    %ecx,%eax
    shr    $0x2,%ecx
    repnz movsl %ds:(%esi),%es:(%edi)
    mov    %al,%cl
    and    $0x3,%cl
    repnz movsb %ds:(%esi),%es:(%edi)
    pop    %edi


/*----------------------------------------------------------------*/
func_7d20f:
/*----------------------------------------------------------------*/
    mov    %ebp,%eax
    add    $0xc,%esp
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    ret


/*----------------------------------------------------------------*/
func_7d219:
/*----------------------------------------------------------------*/
    mov    0x8(%esp),%edx
  jump_7d21d:
    call   *0x5(%esi)
    jmp    func_7d20f


/*----------------------------------------------------------------*/
func_7d222:
/*----------------------------------------------------------------*/
    mov    0x8(%esp),%ebx
    xor    %edx,%edx
    jmp    jump_7d21d


/*----------------------------------------------------------------*/
func_7d22a:
/*----------------------------------------------------------------*/
    mov    $0x4,%ecx
    mov    0x8(%esp),%esi
    lea    0x12(%ebp),%edi
    jmp    jump_7d1ff


/*----------------------------------------------------------------*/
func_7d238:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    mov    0x8(%eax),%ebx
    mov    (%ebx),%edx
    sub    $0x4,%ebx
    mov    %edx,0x8(%eax)
    mov    (%ebx),%eax
    mov    %eax,0x4(%ebx)
    mov    $data_89c54,%eax
    jmp    jump_7d253
  jump_7d251:
    mov    %edx,%eax
  jump_7d253:
    mov    (%eax),%edx
    test   %edx,%edx
    je     jump_7d25d
    cmp    %ebx,%edx
    jbe    jump_7d251
  jump_7d25d:
    mov    %ebx,(%eax)
    mov    %edx,(%ebx)
    pop    %edx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7d280:
/*----------------------------------------------------------------*/
    ret


/*----------------------------------------------------------------*/
func_7d281:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %edx
    sub    $0x8,%esp
    mov    0x1c(%esp),%edx
    mov    0x14(%esp),%eax
    mov    %eax,(%esp)
    mov    0x18(%esp),%eax
    mov    %eax,0x4(%esp)
    mov    0x6(%esp),%eax
    and    $0x7ff0,%eax
    cmp    $0x7ff0,%ax
    jne    jump_7d2fb
    mov    0x7(%esp),%bl
    mov    %edx,%eax
    test   $0x80,%bl
    je     jump_7d2b9
    lea    0x1(%edx),%eax
    movb   $0x2d,(%edx)
  jump_7d2b9:
    xor    %ebx,%ebx
    xor    %edx,%edx
    mov    0x2(%esp),%bx
    mov    (%esp),%dx
    or     %ebx,%edx
    xor    %ebx,%ebx
    mov    0x4(%esp),%bx
    or     %ebx,%edx
    mov    0x6(%esp),%ebx
    and    $0xf,%bl
    xor    %bh,%bh
    and    $0xffff,%ebx
    or     %ebx,%edx
    jne    jump_7d2ec
    mov    data_857c8,%edx
    jmp    jump_7d2f2
  jump_7d2ec:
    mov    data_857cc,%edx
  jump_7d2f2:
    mov    %edx,(%eax)
    mov    $0x1,%eax
    jmp    jump_7d2fd
  jump_7d2fb:
    xor    %eax,%eax
  jump_7d2fd:
    add    $0x8,%esp
    pop    %edx
    pop    %ebx
    ret    $0xc


/*----------------------------------------------------------------*/
func_7d305:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %eax
    push   %ebx
    push   %edx
    sub    $0x8,%esp
    lea    -0x14(%ebp),%eax
    push   %eax
    mov    0xc(%ebp),%edx
    push   %edx
    mov    0x8(%ebp),%ebx
    push   %ebx
    call   func_7d8a4
    fldz
    fcompp
    fnstsw %ax
    sahf
    jbe    jump_7d334
    fldl   -0x14(%ebp)
    faddl  data_857d0
    fstpl  -0x14(%ebp)
  jump_7d334:
    fldl   -0x14(%ebp)
    lea    -0xc(%ebp),%esp
    pop    %edx
    pop    %ebx
    pop    %eax
    pop    %ebp
    ret    $0x8


/*----------------------------------------------------------------*/
func_7d341:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    mov    0x10(%ebp),%ecx
    mov    0x14(%ebp),%ebx
    cmp    %ecx,%eax
    je     jump_7d367
    mov    %ecx,%edx
    sub    %eax,%edx
    push   %edx
    mov    0xc(%ebp),%edx
    push   %edx
    mov    0x8(%ebp),%esi
    push   %esi
    call   func_7d382
    fstpl  0x8(%ebp)
  jump_7d367:
    lea    0x8(%ebp),%eax
    mov    %ebx,%edx
    call   func_7d8f8
    mov    %ecx,%eax
    mov    %ebx,%edx
    call   func_7d8be
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %ebp
    ret    $0x10


/*----------------------------------------------------------------*/
func_7d382:
/*----------------------------------------------------------------*/
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    sub    $0x8,%esp
    mov    0x28(%esp),%ecx
    fldl   0x20(%esp)
    fcompl data_8622c
    fnstsw %ax
    sahf
    jne    jump_7d3ad
    mov    data_8623c,%eax
    mov    %eax,0x20(%esp)
    mov    data_86240,%eax
    jmp    jump_7d3ca
  jump_7d3ad:
    fldl   0x20(%esp)
    fcompl data_86234
    fnstsw %ax
    sahf
    jne    jump_7d3ce
    mov    data_86244,%eax
    mov    %eax,0x20(%esp)
    mov    data_86248,%eax
  jump_7d3ca:
    mov    %eax,0x24(%esp)
  jump_7d3ce:
    mov    $data_8624c,%eax
    test   %ecx,%ecx
    jge    jump_7d3f5
    mov    %ecx,%edx
    neg    %edx
    cmp    $0x134,%edx
    jle    jump_7d413
    fldl   0x20(%esp)
    fdivl  data_8624e
    sub    $0xd8,%edx
    jmp    jump_7d40f
  jump_7d3f5:
    mov    %ecx,%edx
    cmp    $0x134,%ecx
    jle    jump_7d413
    fldl   0x20(%esp)
    fmull  data_8624e
    lea    -0xd8(%ecx),%edx
  jump_7d40f:
    fstpl  0x20(%esp)
  jump_7d413:
    xor    %ebx,%ebx
    mov    $0x3ff00000,%esi
    mov    %ebx,(%esp)
    mov    %esi,0x4(%esp)
  jump_7d421:
    movswl (%eax),%ebx
    cmp    %ebx,%edx
    jl     jump_7d433
    fldl   (%esp)
    fmull  0x2(%eax)
    sub    %ebx,%edx
    fstpl  (%esp)
  jump_7d433:
    test   %edx,%edx
    je     jump_7d442
    cmpw   $0x1,(%eax)
    je     jump_7d421
    add    $0xa,%eax
    jmp    jump_7d421
  jump_7d442:
    test   %ecx,%ecx
    jge    jump_7d44f
    fldl   0x20(%esp)
    fdivl  (%esp)
    jmp    jump_7d456
  jump_7d44f:
    fldl   0x20(%esp)
    fmull  (%esp)
  jump_7d456:
    fstpl  0x20(%esp)
    fldl   0x20(%esp)
    add    $0x8,%esp
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %eax
    ret    $0xc


/*----------------------------------------------------------------*/
func_7d469:
/*----------------------------------------------------------------*/
    push   %ebp
    mov    %esp,%ebp
    push   %ebx
    push   %ecx
    push   %edx
    push   %esi
    push   %edi
    sub    $0x2c,%esp
    mov    0x10(%ebp),%ebx
    mov    0x14(%ebp),%ecx
    mov    0x18(%ebp),%edi
    mov    0x20(%ebp),%edx
    push   %edx
    mov    0xc(%ebp),%esi
    push   %esi
    mov    0x8(%ebp),%eax
    movl   $0x0,(%edi)
    push   %eax
    movl   $0x0,(%ecx)
    call   func_7d281
    test   %eax,%eax
    je     jump_7d4a5
    mov    %edx,%eax
    jmp    jump_7d643
  jump_7d4a5:
    xor    %edx,%edx
    xor    %esi,%esi
    mov    %dx,-0x2c(%ebp)
    mov    %si,-0x2a(%ebp)
    mov    %dx,-0x28(%ebp)
    mov    %dx,-0x26(%ebp)
    mov    0xc(%ebp),%edx
    mov    0x8(%ebp),%esi
    test   $0x7fffffff,%edx
    jne    jump_7d4cf
    test   %esi,%esi
    je     jump_7d5fc
  jump_7d4cf:
    fldz
    fcompl 0x8(%ebp)
    fnstsw %ax
    sahf
    jbe    jump_7d4e8
    mov    0xf(%ebp),%ah
    xor    $0x80,%ah
    movl   $0xffffffff,(%edi)
    mov    %ah,0xf(%ebp)
  jump_7d4e8:
    push   %ecx
    mov    0xc(%ebp),%eax
    push   %eax
    mov    0x8(%ebp),%edx
    push   %edx
    call   func_7da84
    mov    (%ecx),%edx
    fstp   %st(0)
    test   %edx,%edx
    jge    jump_7d500
    neg    %edx
  jump_7d500:
    mov    %edx,%eax
    shl    $0x2,%edx
    sub    %eax,%edx
    add    $0x5,%edx
    mov    $0xa,%esi
    mov    %edx,%eax
    sar    $0x1f,%edx
    idiv   %esi
    mov    (%ecx),%esi
    mov    %eax,%edx
    test   %esi,%esi
    jge    jump_7d520
    neg    %edx
  jump_7d520:
    mov    0x1c(%ebp),%eax
    mov    %edx,(%ecx)
    cmp    $0x46,%eax
    jne    jump_7d52c
    add    %edx,%ebx
  jump_7d52c:
    test   %ebx,%ebx
    jl     jump_7d5c8
    cmp    $0x10,%ebx
    jle    jump_7d53e
    mov    $0x10,%ebx
  jump_7d53e:
    xor    %al,%al
    mov    %al,-0x18(%ebp)
    lea    -0x24(%ebp),%eax
    push   %eax
    mov    0xc(%ebp),%esi
    push   %esi
    mov    0x8(%ebp),%eax
    push   %eax
    call   func_7d8a4
    fldz
    fcompp
    fnstsw %ax
    sahf
    jne    jump_7d568
    cmp    %edx,%ebx
    jle    jump_7d568
    mov    $0x1,%ah
    mov    %edx,%ebx
    mov    %ah,-0x18(%ebp)
  jump_7d568:
    lea    -0x2c(%ebp),%eax
    push   %eax
    push   %ebx
    mov    0xc(%ebp),%esi
    push   %esi
    mov    0x8(%ebp),%eax
    push   %eax
    mov    (%ecx),%eax
    call   func_7d341
    mov    %eax,%esi
    test   %eax,%eax
    je     jump_7d5c8
    mov    0x1c(%ebp),%esi
    add    %eax,(%ecx)
    cmp    $0x46,%esi
    je     jump_7d592
    cmpb   $0x0,-0x18(%ebp)
    je     jump_7d594
  jump_7d592:
    add    %eax,%ebx
  jump_7d594:
    cmp    $0x1,%ebx
    jge    jump_7d5a0
    mov    $0x1,%ebx
    jmp    jump_7d5aa
  jump_7d5a0:
    cmp    $0x10,%ebx
    jle    jump_7d5aa
    mov    $0x10,%ebx
  jump_7d5aa:
    lea    -0x2c(%ebp),%eax
    push   %eax
    push   %ebx
    mov    0xc(%ebp),%eax
    push   %eax
    mov    0x8(%ebp),%esi
    push   %esi
    mov    (%ecx),%eax
    call   func_7d341
    test   %eax,%eax
    jle    jump_7d5c8
    mov    (%ecx),%eax
    inc    %eax
    inc    %ebx
    mov    %eax,(%ecx)
  jump_7d5c8:
    mov    -0x2c(%ebp),%eax
    sar    $0x10,%eax
    mov    %eax,-0x1c(%ebp)
    mov    -0x2e(%ebp),%eax
    mov    -0x1c(%ebp),%esi
    sar    $0x10,%eax
    or     %esi,%eax
    mov    -0x2a(%ebp),%esi
    sar    $0x10,%esi
    or     %esi,%eax
    mov    -0x28(%ebp),%esi
    sar    $0x10,%esi
    or     %esi,%eax
    jne    jump_7d5fc
    mov    %eax,(%edi)
    mov    0x1c(%ebp),%edi
    mov    %eax,(%ecx)
    cmp    $0x46,%edi
    jne    jump_7d5fc
    sub    %edx,%ebx
  jump_7d5fc:
    cmp    $0x1,%ebx
    jge    jump_7d608
    mov    $0x1,%ebx
    jmp    jump_7d612
  jump_7d608:
    cmp    $0x11,%ebx
    jle    jump_7d612
    mov    $0x11,%ebx
  jump_7d612:
    lea    -0x2c(%ebp),%eax
    lea    -0x40(%ebp),%edx
    mov    0x20(%ebp),%edi
    lea    -0x40(%ebp),%esi
    call   func_7d963
    push   %edi
  jump_7d624:
    mov    (%esi),%al
    mov    %al,(%edi)
    cmp    $0x0,%al
    je     jump_7d640
    mov    0x1(%esi),%al
    add    $0x2,%esi
    mov    %al,0x1(%edi)
    add    $0x2,%edi
    cmp    $0x0,%al
    jne    jump_7d624
  jump_7d640:
    pop    %edi
    mov    %edi,%eax
  jump_7d643:
    lea    -0x14(%ebp),%esp
    pop    %edi
    pop    %esi
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %ebp
    ret    $0x1c


/*----------------------------------------------------------------*/
func_7d6e0:
/*----------------------------------------------------------------*/
    push   %ebp
    push   %esi
    push   %edi
    push   %ecx
    push   %ebx
    push   %edx
    mov    %eax,%esi
    sub    %edx,%edx
    sub    %ecx,%ecx
    sub    %eax,%eax
  jump_7d6ee:
    mov    (%esi),%al
    cmp    $0x0,%al
    je     jump_7d712
    mov    %edx,%edi
    mov    %ecx,%ebx
    add    %ecx,%ecx
    adc    %edx,%edx
    add    %ecx,%ecx
    adc    %edx,%edx
    add    %ebx,%ecx
    adc    %edi,%edx
    add    %ecx,%ecx
    adc    %edx,%edx
    and    $0xf,%al
    add    %eax,%ecx
    adc    $0x0,%edx
    inc    %esi
    jmp    jump_7d6ee
  jump_7d712:
    mov    %ecx,%eax
    mov    $0x43300000,%edi
    call   func_7d72b
    pop    %ebp
    mov    %edx,0x4(%ebp)
    mov    %eax,0x0(%ebp)
    pop    %ebx
    pop    %ecx
    pop    %edi
    pop    %esi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7d72b:
/*----------------------------------------------------------------*/
    sub    %esi,%esi
    or     %eax,%esi
    or     %edx,%esi
    je     jump_7d77b
    test   $0xfff00000,%edx
    jne    jump_7d74f
  jump_7d73b:
    sub    $0x100000,%edi
    add    %eax,%eax
    adc    %edx,%edx
    test   $0xfff00000,%edx
    je     jump_7d73b
    jmp    jump_7d773
  jump_7d74f:
    test   $0xffe00000,%edx
    je     jump_7d773
  jump_7d757:
    add    $0x100000,%edi
    shr    %edx
    rcr    %eax
    rcr    %esi
    test   $0xffe00000,%edx
    jne    jump_7d757
    adc    %esi,%esi
    adc    $0x0,%eax
    adc    $0x0,%edx
  jump_7d773:
    and    $0xfffff,%edx
    or     %edi,%edx
  jump_7d77b:
    ret


/*----------------------------------------------------------------*/
func_7d77c:
/*----------------------------------------------------------------*/
    jmp    jump_7daf3


/*----------------------------------------------------------------*/
func_7d781:
/*----------------------------------------------------------------*/
    push   %edx
    cmp    $0x5,%eax
    jbe    jump_7d78b
    xor    %eax,%eax
    pop    %edx
    ret
  jump_7d78b:
    mov    %eax,%edx
    shl    $0x2,%eax
    sub    %edx,%eax
    shl    $0x2,%eax
    add    %edx,%eax
    add    %eax,%eax
    add    $data_89884,%eax
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7d7a0:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %esi
    push   %edi
    push   %ebp
    mov    %eax,%ecx
    mov    %edx,%ebx
    cmpl   $0x0,0x8(%edx)
    jne    jump_7d7b6
    mov    %ebx,%eax
    call   func_78473
  jump_7d7b6:
    mov    0xd(%ebx),%ah
    xor    %edi,%edi
    test   $0x4,%ah
    je     jump_7d7d5
    mov    %ah,%dl
    and    $0xf9,%dl
    mov    %dl,%dh
    mov    %dl,0xd(%ebx)
    or     $0x2,%dh
    mov    $0x1,%edi
    mov    %dh,0xd(%ebx)
  jump_7d7d5:
    mov    %ecx,%ebp
    xor    %esi,%esi
  jump_7d7d9:
    xor    %eax,%eax
    mov    (%ecx),%al
    test   %eax,%eax
    je     jump_7d7f0
    mov    %ebx,%edx
    inc    %ecx
    call   func_7c6e2
    cmp    $0xffffffff,%eax
    jne    jump_7d7d9
    mov    %eax,%esi
  jump_7d7f0:
    test   %edi,%edi
    je     jump_7d811
    mov    0xd(%ebx),%al
    and    $0xf9,%al
    mov    %al,%ah
    mov    %al,0xd(%ebx)
    or     $0x4,%ah
    mov    %ah,0xd(%ebx)
    test   %esi,%esi
    jne    jump_7d811
    mov    %ebx,%eax
    call   func_76297
    mov    %eax,%esi
  jump_7d811:
    test   %esi,%esi
    jne    jump_7d819
    mov    %ecx,%esi
    sub    %ebp,%esi
  jump_7d819:
    mov    %esi,%eax
    pop    %ebp
    pop    %edi
    pop    %esi
    pop    %ecx
    pop    %ebx
    ret
  jump_7d824:
    push   %edx
    sub    $0x4,%esp
    mov    data_12280c,%eax
    mov    $data_1227f8,%edx
    mov    %eax,(%esp)
    test   %eax,%eax
    jne    jump_7d856
    cmpl   $0x0,data_122804
    jne    jump_7d84c
    mov    $0x1,%eax
    jmp    jump_73a03
  jump_7d84c:
    mov    0xc(%edx),%eax
    mov    $0x1,%edx
    jmp    jump_7d863
  jump_7d856:
    call   *(%esp)
    mov    $0x1,%edx
    mov    $data_857d8,%eax
  jump_7d863:
    call   func_74778
    add    $0x4,%esp
    pop    %edx
    ret


/*----------------------------------------------------------------*/
func_7d8a4:
/*----------------------------------------------------------------*/
    push   %eax
    fldl   0x8(%esp)
    fld    %st(0)
    call   func_72258
    fsubr  %st,%st(1)
    mov    0x10(%esp),%eax
    fstpl  (%eax)
    pop    %eax
    fwait
    ret    $0xc


/*----------------------------------------------------------------*/
func_7d8be:
/*----------------------------------------------------------------*/
    push   %edi
    push   %ecx
    call   func_7d9cd
    inc    %eax
    lea    (%edi,%eax,8),%edi
    mov    (%edx),%ecx
    mov    0x4(%edx),%edx
    sub    %eax,%eax
  jump_7d8d0:
    cmp    %cs:(%edi),%edx
    jne    jump_7d8d9
    cmp    %cs:0x4(%edi),%ecx
  jump_7d8d9:
    jb     jump_7d8e1
    add    $0x8,%edi
    inc    %eax
    jmp    jump_7d8d0
  jump_7d8e1:
    sub    $0x8,%edi
  jump_7d8e4:
    cmp    %cs:(%edi),%edx
    jne    jump_7d8ed
    cmp    %cs:0x4(%edi),%ecx
  jump_7d8ed:
    jae    jump_7d8f5
    sub    $0x8,%edi
    dec    %eax
    jmp    jump_7d8e4
  jump_7d8f5:
    pop    %ecx
    pop    %edi
    ret


/*----------------------------------------------------------------*/
func_7d8f8:
/*----------------------------------------------------------------*/
    push   %ebx
    push   %ecx
    push   %edx
    push   %ebp
    push   %esi
    push   %edx
    mov    %eax,%ebp
    mov    0x0(%ebp),%ecx
    mov    0x4(%ebp),%ebx
    mov    %ebx,%ebp
    and    $0xfff00000,%ebp
    xor    %ebp,%ebx
    xor    $0x100000,%ebx
    shr    $0x14,%ebp
    sub    $0x433,%ebp
    je     jump_7d956
    jbe    jump_7d92c
  jump_7d923:
    shl    %ecx
    rcl    %ebx
    dec    %ebp
    jne    jump_7d923
    jmp    jump_7d956
  jump_7d92c:
    sub    %eax,%eax
    sub    %esi,%esi
  jump_7d930:
    shr    %ebx
    rcr    %ecx
    rcr    %eax
    adc    %esi,%esi
    inc    %ebp
    jne    jump_7d930
    cmp    $0x80000000,%eax
    jb     jump_7d956
    jne    jump_7d950
    or     %esi,%esi
    jne    jump_7d950
    test   $0x1,%ecx
    je     jump_7d956
  jump_7d950:
    add    $0x1,%ecx
    adc    $0x0,%ebx
  jump_7d956:
    pop    %ebp
    mov    %ecx,0x0(%ebp)
    mov    %ebx,0x4(%ebp)
    pop    %esi
    pop    %ebp
    pop    %edx
    pop    %ecx
    pop    %ebx
    ret


/*----------------------------------------------------------------*/
func_7d963:
/*----------------------------------------------------------------*/
    push   %ebp
    push   %edi
    push   %ecx
    push   %ebx
    mov    %eax,%ebp
    mov    0x0(%ebp),%ecx
    mov    0x4(%ebp),%eax
    mov    %edx,%ebp
    add    %ebx,%ebp
    movb   $0x0,0x0(%ebp)
    push   %eax
  jump_7d978:
    pop    %eax
    mov    $0x2710,%edi
    sub    %edx,%edx
    or     %eax,%eax
    jne    jump_7d98b
    or     %ecx,%ecx
    jne    jump_7d98d
    push   %eax
    jmp    jump_7d9a3
  jump_7d98b:
    div    %edi
  jump_7d98d:
    xchg   %eax,%ecx
    div    %edi
    xchg   %eax,%ecx
    push   %eax
    mov    %edx,%eax
    mov    $0x64,%dl
    div    %dl
    mov    %ah,%dl
    mov    $0x0,%ah
    aam    $0xa
    xchg   %eax,%edx
    mov    $0x0,%ah
    aam    $0xa
  jump_7d9a3:
    add    $0x3030,%ax
    add    $0x3030,%dx
    sub    $0x4,%ebp
    mov    %al,0x3(%ebp)
    dec    %ebx
    je     jump_7d9c7
    mov    %ah,0x2(%ebp)
    dec    %ebx
    je     jump_7d9c7
    mov    %dl,0x1(%ebp)
    dec    %ebx
    je     jump_7d9c7
    mov    %dh,0x0(%ebp)
    dec    %ebx
    jne    jump_7d978
  jump_7d9c7:
    pop    %eax
    pop    %ebx
    pop    %ecx
    pop    %edi
    pop    %ebp
    ret


/*----------------------------------------------------------------*/
func_7d9cd:
/*----------------------------------------------------------------*/
    call   func_7da82
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %eax,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    or     (%eax),%al
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,%fs:(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    add    %ch,%al
    add    (%eax),%eax
    add    %al,(%eax)
    add    %al,(%eax)
    add    %dl,(%eax)
    daa
    add    %al,(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    mov    0x186,%al
    add    %al,(%eax)
    add    %al,0x42(%eax)
    sldt   (%eax)
    add    %al,(%eax)
    add    %al,0x9896(%eax)
    add    %al,(%eax)
    add    %al,(%eax)
    loope  jump_7da16
    add    $0x0,%eax
    add    %cl,%dl
    lcall  $0x0,$0x23b
    in     $0xb,%al
    push   %esp
    pop    %ss
    add    %al,(%eax)
    add    %al,(%eax)
    call   func_f022b2
    add    %al,(%eax)
    add    %dl,(%eax)
    movsl  %ds:(%esi),%es:(%edi)
    aam    $0x18
    or     %eax,(%eax)
    add    %al,(%eax)
    mov    0x5af34e72,%al
    add    %al,(%eax)
    add    %al,0x7a(%eax)
    adc    %bh,-0x73(%esi)
    add    (%eax),%eax
    add    %al,-0x790d5b3a(%eax)
    and    (%eax),%eax
    add    %al,(%eax)
    shrl   $0x45,0x78(%edi)
    arpl   %ax,(%ecx)
    add    %al,(%eax)
    mov    -0x4d(%ebp),%bl
    mov    $0xe0,%dh
    or     $0xa7640000,%eax
    add    $0x23,%al
    (bad)
    mov    (%eax),%al
    add    %ch,%al
    mov    %edi,%edi
    (bad)
    (bad)
    (bad)
    (bad)
    (bad)
    (bad)
    lcall  *-0x3d(%edi)


/*----------------------------------------------------------------*/
func_7da84:
/*----------------------------------------------------------------*/
    push   %eax
    push   %ebx
    push   %ecx
    push   %edx
    sub    $0x8,%esp
    mov    0x1c(%esp),%eax
    mov    0x1c(%esp),%ecx
    mov    %eax,(%esp)
    mov    0x20(%esp),%eax
    xor    %edx,%edx
    mov    %eax,0x4(%esp)
    test   $0x7fffffff,%eax
    jne    jump_7daab
    test   %ecx,%ecx
    je     jump_7dae0
  jump_7daab:
    mov    0x6(%esp),%edx
    and    $0x7ff0,%edx
    mov    0x6(%esp),%ebx
    and    $0xffff,%edx
    and    $0x800f,%ebx
    sar    $0x4,%edx
    mov    %ebx,%ecx
    mov    %bx,0x6(%esp)
    or     $0x3fe0,%ecx
    sub    $0x3fe,%edx
    mov    %cx,0x6(%esp)
  jump_7dae0:
    mov    0x24(%esp),%eax
    fldl   (%esp)
    mov    %edx,(%eax)
    add    $0x8,%esp
    pop    %edx
    pop    %ecx
    pop    %ebx
    pop    %eax
    ret    $0xc
  jump_7daf3:
    xor    %eax,%eax
    ret
.data
data_80000:
    .ascii  "\x01\x01\x01\x00"
data_80004:
    .string "..\\batcon.cpp"
data_80012:
    .string "..\\batcon.cpp"
data_80020:
    .string "..\\batcon.cpp"
data_8002e:
    .string "..\\batcon.cpp"
data_8003c:
    .string "..\\batcon.cpp"
data_8004a:
    .ascii  "\x25\x73\x00"
data_8004d:
    .string "..\\batcon.cpp"
data_8005b:
    .ascii  "\x25\x73\x00"
data_8005e:
    .string "BatModeWnd"
data_80069:
    .string "..\\batcon.cpp"
data_80077:
    .string "BatListWnd"
data_80082:
    .string "..\\batcon.cpp"
data_80090:
    .string "..\\batcon.cpp"
data_8009e:
    .string "..\\batcon.cpp"
data_800ac:
    .string "..\\batcon.cpp"
data_800ba:
    .string "..\\batcon.cpp"
data_800c8:
    .string "..\\batcon.cpp"
data_800d6:
    .string "..\\batcon.cpp"
data_800e4:
    .string "..\\batcon.cpp"
data_800f2:
    .ascii  "\x25\x73\x00"
data_800f5:
    .ascii  "\x25\x73\x00"
data_800f8:
    .string "..\\batcon.cpp"
data_80106:
    .string "..\\batcon.cpp"
data_80114:
    .string "..\\batcon.cpp"
data_80122:
    .string "..\\batcon.cpp"
data_80130:
    .string "..\\batcon.cpp"
data_8013e:
    .string "My^Items"
data_80147:
    .string "..\\batcon.cpp"
    .ascii  "\x00\x00\x00"
data_80158:
    .string "..\\batfx.cpp"
data_80165:
    .string "..\\batfx.cpp"
data_80172:
    .string "..\\batfx.cpp"
data_8017f:
    .fill   0x6
    .ascii  "\xf0\x3e"
data_80187:
    .string "..\\batfx.cpp"
data_80194:
    .string "..\\batfx.cpp"
data_801a1:
    .string "..\\batfx.cpp"
data_801ae:
    .string "..\\batfx.cpp"
data_801bb:
    .ascii   "UUUUUU"
    .ascii  "\xd5\x3f"
data_801c3:
    .ascii  "\x00\x00\x80\x3c"
data_801c7:
    .ascii  "\x00\x00\xa0\x41"
data_801cb:
    .string "..\\batfx.cpp"
data_801d8:
    .string "..\\batfx.cpp"
data_801e5:
    .ascii  "\x00\x00\x80\x42"
data_801e9:
    .string "..\\batfx.cpp"
data_801f6:
    .string "..\\batfx.cpp"
data_80203:
    .string "..\\batfx.cpp"
data_80210:
    .string "..\\batfx.cpp"
data_8021d:
    .string "..\\batfx.cpp"
data_8022a:
    .fill   0x6
    .ascii  "\x34\xc0"
data_80232:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xa9\x3f"
data_8023a:
    .fill   0x6
    .ascii  "\x34\x40"
data_80242:
    .fill   0x6
    .ascii  "\xf0\x3e"
data_8024a:
    .ascii  "\xcd\xcc\x4c\x3d\x00\x00"
data_80250:
    .string "..\\batfxa.cpp"
data_8025e:
    .string "..\\batfxa.cpp"
data_8026c:
    .ascii  "\x0a\xd7\x23\xbd"
data_80270:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xc9\x3f"
data_80278:
    .ascii  "\x0a\xd7\x23\x3d"
data_8027c:
    .ascii  "\x00\x00\x00\x40"
data_80280:
    .ascii  "\x00\x00\x00\x42"
data_80284:
    .string "..\\batfxa.cpp"
data_80292:
    .string "..\\batfxa.cpp"
data_802a0:
    .ascii  "\x00\x00\xc0\x42"
data_802a4:
    .ascii  "\x9a\x99\x99\x99\x99\x99\x09\x40"
data_802ac:
    .string "..\\batfxa.cpp"
data_802ba:
    .string "..\\batfxa.cpp"
data_802c8:
    .ascii  "\x9a\x99\x99\x99\x99\x99\x09\x40"
data_802d0:
    .string "..\\batfxa.cpp"
data_802de:
    .string "..\\batfxa.cpp"
data_802ec:
    .string "..\\batfxa.cpp"
data_802fa:
    .string "..\\batfxa.cpp"
data_80308:
    .ascii  "\xcd\xcc\x4c\x3d"
data_8030c:
    .ascii  "\x9a\x99\x99\x99\x99\x99\x09\x40"
data_80314:
    .ascii  "\x00\x00\x48\x42"
data_80318:
    .string "..\\batfxa.cpp"
data_80326:
    .string "..\\batfxa.cpp"
data_80334:
    .ascii  "\xcd\xcc\x4c\x3e"
data_80338:
    .ascii  "\x00\x00\x00\x3d"
data_8033c:
    .ascii  "\x00\x00\x00\x42"
data_80340:
    .string "..\\batfxa.cpp"
data_8034e:
    .ascii  "\x0a\xd7\x23\xbd"
data_80352:
    .ascii  "\x7b\x14\xae\x47\xe1\x7a\xa4\x3f"
data_8035a:
    .string "..\\batfxa.cpp"
data_80368:
    .string "..\\batfxa.cpp"
    .ascii  "\x00\x00"
data_80378:
    .string "..\\batmode.cpp"
data_80387:
    .string "..\\batmode.cpp"
data_80396:
    .string "..\\batmode.cpp"
data_803a5:
    .ascii  "\x00\x00\x80\x37"
data_803a9:
    .ascii  "\x00\x00\x80\x37"
data_803ad:
    .ascii  "\x00\x00\x20\x40"
data_803b1:
    .fill   0x6
    .ascii  "\xe0\x3f"
data_803b9:
    .ascii  "\x00\x00\x00\x40"
data_803bd:
    .string "batfx.txt"
data_803c7:
    .string "..\\batmode.cpp"
data_803d6:
    .ascii  "\x25\x64\x00"
data_803d9:
    .string "..\\batmode.cpp"
data_803e8:
    .ascii  "\x25\x73\x00"
data_803eb:
    .string "%d %d %d %d"
data_803f7:
    .string "BatControlWnd"
data_80405:
    .string "..\\batmode.cpp"
data_80414:
    .string "..\\batmode.cpp"
data_80423:
    .string "..\\batmode.cpp"
data_80432:
    .ascii  "\x00\x00\x20\x41"
data_80436:
    .fill   0x6
    .ascii  "\xf4\x3f"
data_8043e:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xb9\x3f"
data_80446:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xe9\x3f"
data_8044e:
    .string "..\\batmode.cpp"
data_8045d:
    .ascii  "\x0a\xd7\xa3\x3a"
data_80461:
    .ascii  "\x6f\x12\x03\x3b"
data_80465:
    .ascii  "\x0a\xd7\xa3\x3a"
data_80469:
    .string "abanship"
data_80472:
    .string "abanplan"
data_8047b:
    .string "HELPWINDOW"
data_80486:
    .string "help.txt"
data_8048f:
    .string "..\\batmode.cpp"
data_8049e:
    .ascii  "\x00\x00\x00\x3f"
data_804a2:
    .ascii  "\x00\x00\x80\x46"
data_804a6:
    .ascii  "\x00\x00\x00\x3e"
data_804aa:
    .ascii  "\x00\x00\x80\xbf"
data_804ae:
    .ascii  "\x00\x00\x00\x48"
data_804b2:
    .string "..\\batmode.cpp"
data_804c1:
    .ascii  "\x00\x00\x00\x3f"
data_804c5:
    .ascii  "\xab\xaa\xaa\x3e"
data_804c9:
    .ascii  "\x00\x00\x00\x3f"
data_804cd:
    .ascii  "\x00\x00\x00\x40"
data_804d1:
    .string "..\\batmode.cpp"
data_804e0:
    .ascii  "\x00\x00\x48\x42"
data_804e4:
    .ascii  "\x00\x00\x48\xc2"
data_804e8:
    .ascii  "\x0a\xd7\x23\x3c"
data_804ec:
    .string "..\\batmode.cpp"
data_804fb:
    .string "..\\batmode.cpp"
data_8050a:
    .string "BATDISPLAYITEMS"
data_8051a:
    .string "..\\batmode.cpp"
data_80529:
    .string "BATHAZE"
data_80531:
    .string "..\\batmode.cpp"
data_80540:
    .string "DATA\\BLACK%.2d.HAZ"
data_80553:
    .string "..\\batmode.cpp"
data_80562:
    .string "DATA\\SLANE03.HAZ"
data_80573:
    .string "..\\batmode.cpp"
data_80582:
    .string "..\\batmode.cpp"
data_80591:
    .string "..\\batmode.cpp"
data_805a0:
    .string "..\\batmode.cpp"
data_805af:
    .string "..\\batmode.cpp"
data_805be:
    .string "..\\batmode.cpp"
data_805cd:
    .string "..\\batmode.cpp"
data_805dc:
    .string "..\\batmode.cpp"
data_805eb:
    .string "..\\batmode.cpp"
data_805fa:
    .ascii  "\x00\x00\x00\x42"
data_805fe:
    .string "..\\batmode.cpp"
data_8060d:
    .string "%s %s"
data_80613:
    .string "%s %s"
data_80619:
    .string "POWER %d MOVES %d INTEGRITY %d"
data_80638:
    .string "INVALID ORDER"
data_80646:
    .ascii  "\x00\x00\x00\x3f"
data_8064a:
    .ascii  "\x00\x00\x00\x3d"
data_8064e:
    .ascii  "\xcd\xcc\xcc\x3b"
data_80652:
    .ascii  "\x00\x00\x70\x44"
data_80656:
    .ascii  "\x00\x00\x00\x3e"
data_8065a:
    .ascii  "\x00\x00\x00\xc2"
data_8065e:
    .string "..\\batmode.cpp"
data_8066d:
    .ascii  "\x00\x00\xdc\xc3\x00\x00\x00"
data_80674:
    .string "SHAPE CACHE"
data_80680:
    .string "..\\cache.cpp"
data_8068d:
    .string "..\\cache.cpp"
data_8069a:
    .string "..\\cache.cpp"
data_806a7:
    .string "Cache filename too long: %s"
data_806c3:
    .string "..\\cache.cpp"
data_806d0:
    .string "..\\cache.cpp"
data_806dd:
    .string "..\\cache.cpp"
data_806ea:
    .string "..\\cache.cpp"
data_806f7:
    .string "Cache filename too long: %s"
data_80713:
    .string "..\\cache.cpp"
data_80720:
    .string "..\\cache.cpp"
data_8072d:
    .string "..\\cache.cpp"
data_8073a:
    .string "..\\cache.cpp"
data_80747:
    .string "..\\cache.cpp"
data_80754:
    .string "..\\cache.cpp"
data_80761:
    .string "..\\cache.cpp"
data_8076e:
    .string "..\\cache.cpp"
data_8077b:
    .string "Single item too big for cache: %s, %d"
data_807a1:
    .string "..\\cache.cpp"
data_807ae:
    .string "Cache unable to load file: %s"
data_807cc:
    .string "..\\cache.cpp"
data_807d9:
    .string "..\\cache.cpp"
data_807e6:
    .string "..\\cache.cpp"
    .ascii  "\x00"
data_807f4:
    .ascii  "\x00\x00\x00\x3f"
data_807f8:
    .ascii  "\x72\x00"
data_807fa:
    .string "CFILE PRELOAD"
data_80808:
    .string "..\\cfile.cpp"
data_80815:
    .string "CFILE LOAD"
data_80820:
    .string "..\\cfile.cpp"
data_8082d:
    .string "chunksize==byteswritten"
data_80845:
    .string "..\\cfile.cpp"
data_80852:
    .string "..\\cfile.cpp"
data_8085f:
    .string "..\\cfile.cpp"
data_8086c:
    .string "..\\cfile.cpp"
data_80879:
    .string "..\\cfile.cpp"
data_80886:
    .ascii  "\x72\x00"
data_80888:
    .string "cob.cfg"
data_80890:
    .ascii  "\x25\x73\x00\x00"
data_80894:
    .string "\nAscendancy\nCopyright (c) 1995 The Logic Factory, Inc.\nAll rights reserved\n"
data_808e0:
    .string "data\\theme00.raw"
data_808f1:
    .ascii  "\x2e\x5c\x00"
data_808f4:
    .string "VESA480.DLL"
data_80900:
    .string "DATA"
data_80905:
    .string "..\\corn.cpp"
data_80911:
    .string "data\\logo.pal"
data_8091f:
    .string "data\\logo.gif"
data_8092d:
    .string "music.txt"
data_80937:
    .string "..\\corn.cpp"
data_80943:
    .ascii  "\x72\x00"
data_80945:
    .string "nougat.lf"
data_8094f:
    .ascii  "\x72\x00"
data_80951:
    .string "flash.pop"
data_8095b:
    .string "..\\corn.cpp"
data_80967:
    .string "..\\corn.cpp"
data_80973:
    .string "..\\corn.cpp"
data_8097f:
    .string "..\\corn.cpp"
data_8098b:
    .ascii  "\x72\x00"
data_8098d:
    .string "cosmos.txt"
data_80998:
    .string "%s %d %s %d %s %d"
data_809aa:
    .ascii  "\x25\x64\x00"
data_809ad:
    .string "resume.gam"
data_809b8:
    .string "..\\corn.cpp"
data_809c4:
    .string "DATA\\game.pal"
data_809d2:
    .string "..\\corn.cpp"
data_809de:
    .string "..\\corn.cpp"
data_809ea:
    .string "resume.gam"
data_809f5:
    .string "GIF SCRATCH"
data_80a01:
    .string "DATA\\0OPENING.GIF"
data_80a13:
    .string "..\\corn.cpp"
data_80a1f:
    .string "static.txt"
data_80a2a:
    .string "..\\corn.cpp"
data_80a36:
    .string "..\\corn.cpp"
data_80a42:
    .string "end\n"
data_80a47:
    .string "..\\corn.cpp"
data_80a53:
    .string "..\\corn.cpp"
data_80a5f:
    .ascii  "\x31\x2e\x36\x00\x00"
data_80a64:
    .string "..\\cosmos.cpp"
data_80a72:
    .string "..\\cosmos.cpp"
data_80a80:
    .ascii  "\x09\xf2\x94\x3a"
data_80a84:
    .ascii  "\x00\x00\x7a\x44"
data_80a88:
    .ascii  "\x00\x00\xfa\x44"
data_80a8c:
    .string "..\\cosmos.cpp"
data_80a9a:
    .string "..\\cosmos.cpp"
data_80aa8:
    .string "..\\cosmos.cpp"
data_80ab6:
    .string "..\\cosmos.cpp"
data_80ac4:
    .string "..\\cosmos.cpp"
data_80ad2:
    .string "..\\cosmos.cpp"
data_80ae0:
    .string "..\\cosmos.cpp"
data_80aee:
    .ascii  "\x00\x00\x48\xc3"
data_80af2:
    .string "..\\cosmos.cpp"
data_80b00:
    .string "..\\cosmos.cpp"
data_80b0e:
    .string "..\\cosmos.cpp"
data_80b1c:
    .string "..\\cosmos.cpp"
data_80b2a:
    .string "..\\cosmos.cpp"
data_80b38:
    .string "names.txt"
data_80b42:
    .string "XM%02d"
data_80b49:
    .ascii  "\x25\x73\x00"
data_80b4c:
    .ascii  "\x00\x00\x96\xc2"
data_80b50:
    .ascii  "\x00\x00\x48\x42"
data_80b54:
    .string "DATA\\SMRACE%02d.SHP"
data_80b68:
    .string "DATA\\LGRACE%02d.SHP"
data_80b7c:
    .string "DATA\\SMSHIP%02d.SHP"
data_80b90:
    .string "DATA\\DKSHIP%02d.SHP"
data_80ba4:
    .string "..\\cosmos.cpp"
data_80bb2:
    .string "..\\cosmos.cpp"
data_80bc0:
    .string "..\\cosmos.cpp"
data_80bce:
    .string "..\\cosmos.cpp"
data_80bdc:
    .string "..\\cosmos.cpp"
data_80bea:
    .string "..\\cosmos.cpp"
data_80bf8:
    .ascii  "\x25\x73\x20\x00"
data_80bfc:
    .string "..\\cosmos.cpp"
data_80c0a:
    .ascii  "\x00\x00\xfa\x44"
data_80c0e:
    .ascii  "\x61\x0b\x36\x3c"
data_80c12:
    .string "..\\cosmos.cpp"
data_80c20:
    .string "..\\cosmos.cpp"
data_80c2e:
    .string "..\\cosmos.cpp"
data_80c3c:
    .string "..\\cosmos.cpp"
data_80c4a:
    .string "..\\cosmos.cpp"
data_80c58:
    .string "..\\cosmos.cpp"
data_80c66:
    .string "..\\cosmos.cpp"
data_80c74:
    .string "..\\cosmos.cpp"
data_80c82:
    .string "..\\cosmos.cpp"
data_80c90:
    .string "..\\cosmos.cpp"
data_80c9e:
    .string "..\\cosmos.cpp"
data_80cac:
    .string "..\\cosmos.cpp"
data_80cba:
    .string "..\\cosmos.cpp"
data_80cc8:
    .string "..\\cosmos.cpp"
data_80cd6:
    .string "..\\cosmos.cpp"
data_80ce4:
    .fill   0x6
    .ascii  "\xf8\x3f"
data_80cec:
    .fill   0x6
    .ascii  "\xf4\x3f"
data_80cf4:
    .string "RACECONTROLS"
data_80d01:
    .string "..\\cosmos.cpp"
data_80d0f:
    .ascii  "\x61\x74\x00"
data_80d12:
    .string "numships.dbg"
data_80d1f:
    .string "T%04d: %s flags (%d) show R%d ship, but none found.\n"
data_80d54:
    .string "T%04d: R%d ship exists at %s, flags (%d) indicate otherwise.\n"
data_80d92:
    .string "..\\cosmos.cpp"
data_80da0:
    .string "..\\cosmos.cpp"
data_80dae:
    .string "..\\cosmos.cpp"
data_80dbc:
    .string "..\\cosmos.cpp"
data_80dca:
    .string "..\\cosmos.cpp"
data_80dd8:
    .string "..\\cosmos.cpp"
data_80de6:
    .string "..\\cosmos.cpp"
data_80df4:
    .string "..\\cosmos.cpp"
data_80e02:
    .string "..\\cosmos.cpp"
data_80e10:
    .string "..\\cosmos.cpp"
data_80e1e:
    .string "..\\cosmos.cpp"
data_80e2c:
    .string "NEXTTURNCONT"
data_80e39:
    .string "..\\coswnd.cpp"
data_80e47:
    .string "..\\coswnd.cpp"
data_80e55:
    .string "..\\coswnd.cpp"
data_80e63:
    .string "..\\coswnd.cpp"
data_80e71:
    .string "..\\coswnd.cpp"
data_80e7f:
    .string "..\\coswnd.cpp"
data_80e8d:
    .string "..\\coswnd.cpp"
data_80e9b:
    .string "CW DISPLAYITEMS"
data_80eab:
    .string "..\\coswnd.cpp"
data_80eb9:
    .string "SHIPDESIGN"
data_80ec4:
    .string "TURNCOUNT"
data_80ece:
    .string "..\\coswnd.cpp"
data_80edc:
    .string "RACES"
data_80ee2:
    .string "..\\coswnd.cpp"
data_80ef0:
    .string "..\\coswnd.cpp"
data_80efe:
    .string "SHIPDESSCREEN"
data_80f0c:
    .string "HELPWINDOW"
data_80f17:
    .string "shipdesx"
data_80f20:
    .string "help.txt"
data_80f29:
    .ascii  "\x00\x00\x20\x41"
data_80f2d:
    .fill   0x6
    .ascii  "\xf4\x3f"
data_80f35:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xb9\x3f"
data_80f3d:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xe9\x3f"
data_80f45:
    .fill   0x5
    .ascii  "\x40\x65\x40"
data_80f4d:
    .string "NEWGAMEWND"
data_80f58:
    .string "..\\coswnd.cpp"
data_80f66:
    .string "STARS CONTROLLED %d"
data_80f7a:
    .string "PERCENT CONTROLLED %d"
data_80f90:
    .string "%d Biorythym (%s)\n"
data_80fa3:
    .string "R%d %10s %d\n"
data_80fb0:
    .ascii  "\x00\x00\xa0\x41"
data_80fb4:
    .ascii  "\x00\x00\x70\x42"
data_80fb8:
    .string "..\\coswnd.cpp"
data_80fc6:
    .string "..\\coswnd.cpp"
data_80fd4:
    .ascii  "\x00\x00\x00\x3f"
data_80fd8:
    .string "NEGSCREEN"
data_80fe2:
    .string "..\\coswnd.cpp"
data_80ff0:
    .string "..\\coswnd.cpp"
data_80ffe:
    .string "..\\coswnd.cpp"
data_8100c:
    .string "cos%05d.bug"
data_81018:
    .string "..\\coswnd.cpp"
data_81026:
    .string "..\\coswnd.cpp"
data_81034:
    .string "..\\coswnd.cpp"
data_81042:
    .string "..\\coswnd.cpp"
data_81050:
    .string "..\\coswnd.cpp"
data_8105e:
    .ascii  "\x00\x80\xbb\xc4\x00\x00"
data_81064:
    .string "\n%s\n\n"
data_8106a:
    .string "Assert Failed: <%s> Line %d\n\n"
data_81088:
    .string "Assert Failed: <%s> Line %d\n\n"
data_810a6:
    .string "Assert Failed: <%s> Line %d\n\n%s\n"
data_810c7:
    .string "EXIT: <%s> Line %d\n\n"
data_810dc:
    .string "..\\eventwnd.cpp"
data_810ec:
    .string "event%02d"
data_810f6:
    .string "help.txt"
data_810ff:
    .string "..\\eventwnd.cpp"
data_8110f:
    .string "..\\eventwnd.cpp"
data_8111f:
    .string "..\\eventwnd.cpp"
data_8112f:
    .string "..\\eventwnd.cpp"
data_8113f:
    .string "..\\eventwnd.cpp"
data_8114f:
    .string "..\\eventwnd.cpp"
data_8115f:
    .string "..\\eventwnd.cpp"
data_8116f:
    .string "data\\planets.shp"
data_81180:
    .string "..\\eventwnd.cpp"
data_81190:
    .string "history.txt"
data_8119c:
    .string "..\\eventwnd.cpp"
data_811ac:
    .ascii  "\x25\x73\x00"
data_811af:
    .string "SPECNUM"
data_811b7:
    .string "%s %d"
data_811bd:
    .ascii  "\x45\x4e\x44\x00"
data_811c1:
    .string "Species %d not found in history file.\n"
data_811e8:
    .string "..\\eventwnd.cpp"
data_811f8:
    .ascii  "\x25\x73\x00"
data_811fb:
    .string "SPECNUM"
data_81203:
    .ascii  "\x45\x4e\x44\x00"
data_81207:
    .string "POWER"
data_8120d:
    .string "%s: "
data_81212:
    .string "ENDPOWER"
data_8121b:
    .string "..\\eventwnd.cpp"
data_8122b:
    .string "INTRO"
data_81231:
    .string "ENDINTRO"
data_8123a:
    .string "..\\eventwnd.cpp"
data_8124a:
    .string "PEACE"
data_81250:
    .string "ENDPEACE"
data_81259:
    .string "..\\eventwnd.cpp"
data_81269:
    .string "NEUTRAL"
data_81271:
    .string "ENDNEUTRAL"
data_8127c:
    .string "..\\eventwnd.cpp"
data_8128c:
    .string "HOSTILE"
data_81294:
    .string "ENDHOSTILE"
data_8129f:
    .string "..\\eventwnd.cpp"
data_812af:
    .string "TEXT"
data_812b4:
    .string "ENDTEXT"
data_812bc:
    .string "..\\eventwnd.cpp"
data_812cc:
    .string "..\\eventwnd.cpp"
data_812dc:
    .string "..\\eventwnd.cpp"
data_812ec:
    .string "..\\eventwnd.cpp"
data_812fc:
    .string "..\\eventwnd.cpp"
data_8130c:
    .string "end-xtnc.txt"
data_81319:
    .string "end-dest.txt"
data_81326:
    .string "end-capt.txt"
data_81333:
    .string "end-unit.txt"
data_81340:
    .string "end-ctrl.txt"
data_8134d:
    .string "Couldn't open %s"
data_8135e:
    .string "..\\eventwnd.cpp"
data_8136e:
    .ascii  "\x25\x73\x00"
data_81371:
    .ascii  "\x45\x4e\x44\x00"
data_81375:
    .string "ENDDESC"
data_8137d:
    .string "ENDTEXT"
data_81385:
    .string "..\\eventwnd.cpp"
data_81395:
    .string "CONGRAT"
data_8139d:
    .string "ENDTEXT"
data_813a5:
    .string "..\\eventwnd.cpp"
data_813b5:
    .string "RANKS"
data_813bb:
    .string "..\\eventwnd.cpp"
data_813cb:
    .string "..\\eventwnd.cpp"
data_813db:
    .string "..\\eventwnd.cpp"
data_813eb:
    .string "..\\eventwnd.cpp"
data_813fb:
    .ascii  "\x25\x73\x00\x00\x00"
data_81400:
    .string "SUBTITLE.TXT"
data_8140d:
    .string "..\\flic.cpp"
data_81419:
    .string "..\\flic.cpp"
data_81425:
    .string "..\\flic.cpp"
data_81431:
    .string "..\\flic.cpp"
data_8143d:
    .string "FLIC BUFFER"
data_81449:
    .string "..\\flic.cpp"
data_81455:
    .string "..\\flic.cpp"
data_81461:
    .string "..\\flic.cpp"
data_8146d:
    .string "..\\flic.cpp"
data_81479:
    .string "..\\flic.cpp"
data_81485:
    .string "..\\flic.cpp"
data_81491:
    .string "..\\flic.cpp"
data_8149d:
    .string "..\\flic.cpp"
data_814a9:
    .string "..\\flic.cpp"
data_814b5:
    .string "..\\flic.cpp"
data_814c1:
    .string "..\\flic.cpp"
data_814cd:
    .string "Bombing on Frame #%d.\n"
data_814e4:
    .string "..\\flic.cpp"
data_814f0:
    .string "%s %d"
data_814f6:
    .string "%s %d"
data_814fc:
    .string "%s %d"
data_81502:
    .string "%s %d"
data_81508:
    .string "%s %d"
data_8150e:
    .string "%s %s"
data_81514:
    .string "..\\flic.cpp"
data_81520:
    .string "%s %s"
data_81526:
    .string "..\\flic.cpp"
data_81532:
    .string "..\\flic.cpp"
data_8153e:
    .string "%s %d"
data_81544:
    .string "%s %d"
data_8154a:
    .string "%s %d"
data_81550:
    .string "..\\flic.cpp"
data_8155c:
    .string "%s %s"
data_81562:
    .string "..\\flic.cpp"
data_8156e:
    .string "SUBTITLE"
data_81577:
    .string "..\\flic.cpp"
data_81583:
    .string "%s %d"
data_81589:
    .string "..\\flic.cpp"
data_81595:
    .string "%s %d"
data_8159b:
    .string "..\\flic.cpp"
data_815a7:
    .string "%s %d"
data_815ad:
    .string "%s %d"
data_815b3:
    .string "..\\flic.cpp"
data_815bf:
    .string "%s %d"
data_815c5:
    .string "%s %d"
data_815cb:
    .string "%s %d"
data_815d1:
    .string "..\\flic.cpp"
data_815dd:
    .string "%s %d"
data_815e3:
    .string "%s %d"
data_815e9:
    .string "%s %d"
data_815ef:
    .string "\n  ** Bad Subtitle Data: %s, %d (line %d)\n\n"
data_8161b:
    .string "..\\flic.cpp"
data_81627:
    .string "..\\flic.cpp"
    .ascii  "\x00"
data_81634:
    .string "..\\flicwin.cpp"
data_81643:
    .string "..\\flicwin.cpp"
data_81652:
    .string "DATA\\game.pal"
data_81660:
    .string "FONT TRANSLATE"
data_8166f:
    .string "..\\font.cpp"
data_8167b:
    .string "..\\font.cpp"
data_81687:
    .string "..\\font.cpp"
data_81693:
    .string "..\\font.cpp"
data_8169f:
    .string "..\\font.cpp"
data_816ab:
    .string "..\\font.cpp"
    .ascii  "\x00"
data_816b8:
    .string "..\\gsystem.cpp"
data_816c7:
    .string "..\\gsystem.cpp"
data_816d6:
    .ascii  "\x5c\x00"
data_816d8:
    .string "\\VFXSCAN.DLL"
data_816e5:
    .string "..\\gsystem.cpp"
data_816f4:
    .string "OFFSCREEN BUFFER"
data_81705:
    .string "..\\gsystem.cpp"
data_81714:
    .string "..\\gsystem.cpp"
data_81723:
    .string "GSYSTEM HAZE TABLES"
data_81737:
    .string "..\\gsystem.cpp"
data_81746:
    .string "..\\gsystem.cpp"
data_81755:
    .string "..\\gsystem.cpp"
data_81764:
    .string "DATA\\MOUSE.SHP"
data_81773:
    .string "..\\gsystem.cpp"
data_81782:
    .string "..\\gsystem.cpp"
data_81791:
    .string "..\\gsystem.cpp"
data_817a0:
    .string "CHILD WINDOWS"
data_817ae:
    .string "..\\gwindow.cpp"
data_817bd:
    .string "..\\gwindow.cpp"
data_817cc:
    .string "..\\gwindow.cpp"
data_817db:
    .string "gwshare.txt"
data_817e7:
    .string "..\\gwindow.cpp"
data_817f6:
    .ascii  "\x25\x73\x00"
data_817f9:
    .string "..\\gwindow.cpp"
data_81808:
    .string "..\\gwindow.cpp"
data_81817:
    .string "..\\gwindow.cpp"
data_81826:
    .string "..\\gwindow.cpp"
data_81835:
    .string "CONTROLS"
data_8183e:
    .string "..\\gwindow.cpp"
data_8184d:
    .string "..\\gwindow.cpp"
data_8185c:
    .string "..\\gwindow.cpp"
data_8186b:
    .string "..\\gwindow.cpp"
data_8187a:
    .ascii  "\x41\x00"
data_8187c:
    .string "..\\gwindow.cpp"
data_8188b:
    .string "LISTBOX STRING"
data_8189a:
    .string "..\\gwindow.cpp"
data_818a9:
    .string "..\\gwindow.cpp"
data_818b8:
    .string "..\\gwindow.cpp"
data_818c7:
    .string "..\\gwindow.cpp"
data_818d6:
    .string "..\\gwindow.cpp"
data_818e5:
    .string "..\\gwindow.cpp"
data_818f4:
    .string "LISTBOX MEMPOOL"
data_81904:
    .string "%05d"
data_81909:
    .string "..\\gwindow.cpp"
data_81918:
    .string "..\\gwindow.cpp"
data_81927:
    .string "..\\gwindow.cpp"
data_81936:
    .string "..\\gwindow.cpp"
data_81945:
    .string "..\\gwindow.cpp"
data_81954:
    .string "..\\gwindow.cpp"
    .ascii  "\x00"
data_81964:
    .string "..\\helpwin.cpp"
data_81973:
    .ascii  "\x25\x73\x00"
data_81976:
    .string "HELP"
data_8197b:
    .string "%s %s"
data_81981:
    .ascii  "\x45\x4e\x44\x00"
data_81985:
    .string "Topic '%s' not found in help file.\n"
data_819a9:
    .string "..\\helpwin.cpp"
data_819b8:
    .ascii  "\x25\x73\x00"
data_819bb:
    .string "HELP"
data_819c0:
    .ascii  "\x50\x4f\x53\x00"
data_819c4:
    .string "%s %d %d"
data_819cd:
    .string "SHAPE"
data_819d3:
    .string "..\\helpwin.cpp"
data_819e2:
    .string "%s %d %d %d %d"
data_819f1:
    .string "BUTTON"
data_819f8:
    .string "..\\helpwin.cpp"
data_81a07:
    .string "TITLE"
data_81a0d:
    .string "%s %s"
data_81a13:
    .ascii  "\x4d\x53\x47\x00"
data_81a17:
    .string "%s %d"
data_81a1d:
    .string "PANE"
data_81a22:
    .string "%s %d %d %d %d"
data_81a31:
    .string "BPOS"
data_81a36:
    .string "%s %s"
data_81a3c:
    .ascii  "\x42\x4c\x00"
data_81a3f:
    .ascii  "\x42\x52\x00"
data_81a42:
    .string "TEXT"
data_81a47:
    .string "..\\helpwin.cpp"
data_81a56:
    .string "..\\helpwin.cpp"
data_81a65:
    .string "%s %d %d %d"
data_81a71:
    .string "ENDTEXT"
data_81a79:
    .string "..\\helpwin.cpp"
data_81a88:
    .string "..\\helpwin.cpp"
data_81a97:
    .string "..\\helpwin.cpp"
data_81aa6:
    .string "CENTERPOS"
data_81ab0:
    .string "FONT"
data_81ab5:
    .string "%s %s"
data_81abb:
    .string "LARGE"
data_81ac1:
    .string "SMALL"
data_81ac7:
    .string "FLAGS"
data_81acd:
    .string "%s %s %s %s %s %s"
data_81adf:
    .string "TJ_HC"
data_81ae5:
    .string "TJ_VC"
data_81aeb:
    .string "TJ_R"
data_81af0:
    .string "TJ_B"
data_81af5:
    .string "NEWPAGE"
data_81afd:
    .string "..\\helpwin.cpp"
data_81b0c:
    .ascii  "\x25\x64\x2e\x00"
data_81b10:
    .string "%d/%d/%d"
data_81b19:
    .string "%d : %.2d %s"
data_81b26:
    .ascii  "\x25\x64\x2e\x00"
data_81b2a:
    .string "savescr"
data_81b32:
    .string "loadscr"
data_81b3a:
    .string "tutscr"
data_81b41:
    .string "LOADLIST"
data_81b4a:
    .string "%02d.sav"
data_81b53:
    .string ".tsv"
data_81b58:
    .string ".bin"
data_81b5d:
    .string "%02d.sav"
data_81b66:
    .string "tutindex.txt"
data_81b73:
    .ascii  "\x25\x64\x00"
data_81b76:
    .string "..\\loadwin.cpp"
data_81b85:
    .ascii  "\x25\x73\x00"
data_81b88:
    .string "GIF87a"
data_81b8f:
    .string "scr%03d.gif"
    .ascii  "\x00"
data_81b9c:
    .string "..\\name.cpp"
data_81ba8:
    .ascii  "\x4d\x00\x00\x00"
data_81bac:
    .string "PLAYERDIP"
data_81bb6:
    .string "..\\negwnd.cpp"
data_81bc4:
    .string "ALIENDIP"
data_81bcd:
    .string "..\\negwnd.cpp"
data_81bdb:
    .string "COSMOSWnd"
data_81be5:
    .string "..\\negwnd.cpp"
data_81bf3:
    .string "INTELSCREEN"
data_81bff:
    .string "..\\negwnd.cpp"
data_81c0d:
    .string "..\\negwnd.cpp"
data_81c1b:
    .string "..\\negwnd.cpp"
data_81c29:
    .string "RACE%02d.DIP"
data_81c36:
    .string "PLAYER.DIP"
data_81c41:
    .string "..\\negwnd.cpp"
data_81c4f:
    .string "..\\negwnd.cpp"
data_81c5d:
    .string "ACTIONS"
data_81c65:
    .string "RESPONSES"
data_81c6f:
    .string "END DIPLO"
data_81c79:
    .string "INTELSCREEN"
data_81c85:
    .string "INTELLIST"
data_81c8f:
    .string "abil%02d"
data_81c98:
    .string "help.txt"
data_81ca1:
    .string "abres%02d"
data_81cab:
    .string "help.txt"
data_81cb4:
    .string "..\\planet.cpp"
data_81cc2:
    .string "..\\planet.cpp"
data_81cd0:
    .string "planitem.txt"
data_81cdd:
    .ascii  "\x25\x64\x00"
data_81ce0:
    .ascii  "\x25\x64\x00"
data_81ce3:
    .ascii  "\x25\x64\x00"
data_81ce6:
    .ascii  "\x25\x64\x00"
data_81ce9:
    .string "%d %d %d"
data_81cf2:
    .string "..\\planet.cpp"
data_81d00:
    .string "..\\planet.cpp"
data_81d0e:
    .string "%s %d %d %d %d %d %d %d"
data_81d26:
    .ascii  "\x25\x64\x00"
data_81d29:
    .string "..\\planet.cpp"
data_81d37:
    .string "..\\planet.cpp"
data_81d45:
    .fill   0x4
    .ascii  "\x80\x84\x4e\x41"
data_81d4d:
    .string "..\\planet.cpp"
data_81d5b:
    .string "..\\planet.cpp"
data_81d69:
    .string "..\\planet.cpp"
data_81d77:
    .string "..\\planet.cpp"
data_81d85:
    .string "..\\planet.cpp"
data_81d93:
    .string "..\\planet.cpp"
data_81da1:
    .string "..\\planet.cpp"
data_81daf:
    .string "..\\planet.cpp"
data_81dbd:
    .string "..\\planet.cpp"
data_81dcb:
    .string "..\\planet.cpp"
data_81dd9:
    .ascii  "\x00\x00\x48\xc5"
data_81ddd:
    .ascii  "\x00\x00\x80\x42"
data_81de1:
    .string "..\\planet.cpp"
data_81def:
    .string "..\\planet.cpp"
data_81dfd:
    .string "..\\planet.cpp"
data_81e0b:
    .string "..\\planet.cpp"
data_81e19:
    .string "..\\planet.cpp"
data_81e27:
    .string "..\\planet.cpp"
data_81e35:
    .string "..\\planet.cpp"
data_81e43:
    .string "..\\planet.cpp"
data_81e51:
    .string "..\\planet.cpp"
data_81e5f:
    .string "..\\planet.cpp"
    .ascii  "\x00\x00\x00"
data_81e70:
    .string "data\\planal%02d.shp"
data_81e84:
    .string "PLANETALLOC"
data_81e90:
    .string "PLANLIST"
data_81e99:
    .string "PLSQUARE"
data_81ea2:
    .string "..\\planwin.cpp"
data_81eb1:
    .string "..\\planwin.cpp"
data_81ec0:
    .string "HELPWINDOW"
data_81ecb:
    .string "colonize"
data_81ed4:
    .string "maxcolonize"
data_81ee0:
    .string "help.txt"
data_81ee9:
    .string "..\\planwin.cpp"
data_81ef8:
    .string "SHIPDESSCREEN"
data_81f06:
    .string "PLANLIST"
data_81f0f:
    .string "..\\planwin.cpp"
data_81f1e:
    .string "..\\planwin.cpp"
    .string "..\\planwin.cpp"
data_81f3c:
    .string "..\\planwin.cpp"
data_81f4b:
    .string "SHIPDESSCREEN"
data_81f59:
    .string "PLANLIST"
data_81f62:
    .string "PLSQUARE"
data_81f6b:
    .string "PLANLIST"
data_81f74:
    .string "PLSQUARE"
data_81f7d:
    .string "PLANETALLOC"
data_81f89:
    .string "PLRES"
data_81f8f:
    .string "PLIND"
data_81f95:
    .string "PLPRO"
data_81f9b:
    .string "PLPOP"
data_81fa1:
    .string "PLBUILD"
    .ascii  "\x00\x00\x00"
data_81fac:
    .string "..\\psqwin.cpp"
data_81fba:
    .string "HELPWINDOW"
data_81fc5:
    .string "invadefailure"
data_81fd3:
    .string "invadesuccess"
data_81fe1:
    .string "help.txt"
data_81fea:
    .string "%s \"%s\""
data_81ff2:
    .ascii  "\x00"
data_81ff3:
    .string "%s%s%s"
    .ascii  "\x00\x00"
data_81ffc:
    .ascii  "\xf4\xd6\x43\x54\xfb\x21\x19\x40"
data_82004:
    .ascii  "\x00\x00\x00\x3f"
data_82008:
    .ascii  "\x00\x00\x00\x40"
data_8200c:
    .ascii  "\x00\x00\x00\xbf"
data_82010:
    .ascii  "\x00\x00\x00\xc0"
data_82014:
    .string "..\\race.cpp"
data_82020:
    .string "..\\race.cpp"
data_8202c:
    .string "..\\race.cpp"
data_82038:
    .string "..\\race.cpp"
data_82044:
    .string "..\\race.cpp"
data_82050:
    .string "..\\race.cpp"
data_8205c:
    .string "..\\race.cpp"
data_82068:
    .string "..\\race.cpp"
data_82074:
    .string "..\\race.cpp"
data_82080:
    .string "..\\race.cpp"
data_8208c:
    .string "..\\race.cpp"
data_82098:
    .string "..\\race.cpp"
data_820a4:
    .string "..\\race.cpp"
data_820b0:
    .string "..\\race.cpp"
data_820bc:
    .string "..\\race.cpp"
data_820c8:
    .string "..\\race.cpp"
data_820d4:
    .string "..\\race.cpp"
data_820e0:
    .string "..\\race.cpp"
data_820ec:
    .string "..\\race.cpp"
data_820f8:
    .string "..\\race.cpp"
data_82104:
    .string "..\\race.cpp"
data_82110:
    .string "..\\race.cpp"
data_8211c:
    .string "..\\race.cpp"
data_82128:
    .string "..\\race.cpp"
data_82134:
    .string "..\\race.cpp"
data_82140:
    .string "..\\race.cpp"
data_8214c:
    .string "..\\race.cpp"
data_82158:
    .string "..\\race.cpp"
data_82164:
    .string "..\\race.cpp"
data_82170:
    .string "..\\race.cpp"
data_8217c:
    .string "..\\race.cpp"
data_82188:
    .string "..\\race.cpp"
data_82194:
    .string "..\\race.cpp"
data_821a0:
    .string "..\\race.cpp"
data_821ac:
    .string "..\\race.cpp"
data_821b8:
    .string "..\\race.cpp"
data_821c4:
    .string "..\\race.cpp"
data_821d0:
    .ascii  "\x00\x40\x1c\x46"
data_821d4:
    .ascii  "\x00\x00\x16\x44"
data_821d8:
    .string "..\\race.cpp"
data_821e4:
    .string "..\\race.cpp"
data_821f0:
    .string "RACE%02d.DIP"
data_821fd:
    .string "..\\raceneg.cpp"
data_8220c:
    .string "DIPVALUES"
data_82216:
    .string "%s %d"
data_8221c:
    .string "%s %d"
data_82222:
    .string "..\\raceneg.cpp"
data_82231:
    .string "%s %d"
data_82237:
    .string "..\\raceneg.cpp"
data_82246:
    .string "%s %d"
data_8224c:
    .string "..\\raceneg.cpp"
data_8225b:
    .string "%s %d"
data_82261:
    .string "..\\raceneg.cpp"
data_82270:
    .string "%s %d"
data_82276:
    .string "..\\raceneg.cpp"
data_82285:
    .string "%s %d"
data_8228b:
    .string "%s %d"
data_82291:
    .string "%s %d"
data_82297:
    .string "%s %d"
data_8229d:
    .string "%s %d"
data_822a3:
    .string "%s %d"
data_822a9:
    .string "%s %d"
data_822af:
    .string "%s %d"
data_822b5:
    .string "%s %d"
data_822bb:
    .string "..\\raceneg.cpp"
data_822ca:
    .string "..\\raceneg.cpp"
data_822d9:
    .string "..\\raceneg.cpp"
data_822e8:
    .string "..\\raceneg.cpp"
data_822f7:
    .string "..\\raceneg.cpp"
data_82306:
    .string "..\\raceneg.cpp"
data_82315:
    .string "..\\raceneg.cpp"
data_82324:
    .string "..\\raceneg.cpp"
data_82333:
    .string "..\\raceneg.cpp"
data_82342:
    .string "..\\raceneg.cpp"
data_82351:
    .string "..\\raceneg.cpp"
data_82360:
    .string "..\\raceneg.cpp"
data_8236f:
    .string "..\\raceneg.cpp"
data_8237e:
    .string "..\\raceneg.cpp"
data_8238d:
    .string "..\\raceneg.cpp"
data_8239c:
    .string "..\\raceneg.cpp"
data_823ab:
    .string "..\\raceneg.cpp"
data_823ba:
    .string "..\\raceneg.cpp"
data_823c9:
    .string "..\\raceneg.cpp"
data_823d8:
    .string "..\\raceneg.cpp"
data_823e7:
    .string "..\\raceneg.cpp"
data_823f6:
    .string "..\\raceneg.cpp"
data_82405:
    .string "..\\raceneg.cpp"
data_82414:
    .string "..\\raceneg.cpp"
data_82423:
    .string "..\\raceneg.cpp"
data_82432:
    .ascii  "\xcd\xcc\xcc\xcc\xcc\xcc\xec\x3f"
data_8243a:
    .fill   0x7
    .ascii  "\x40"
data_82442:
    .ascii  "\xcd\xcc\xcc\xcc\xcc\xcc\xec\x3f"
data_8244a:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xf9\x3f"
data_82452:
    .ascii   "333333"
    .ascii  "\xeb\x3f"
data_8245a:
    .ascii   "333333"
    .ascii  "\xfb\x3f\x00\x00"
data_82464:
    .string "restree.txt"
data_82470:
    .ascii  "\x25\x64\x00"
data_82473:
    .ascii  "\x25\x73\x00"
data_82476:
    .string "%d %d"
data_8247c:
    .ascii  "\x25\x64\x00"
data_8247f:
    .string "..\\research.cpp"
data_8248f:
    .string "..\\research.cpp"
data_8249f:
    .string "..\\research.cpp"
    .ascii  "\x00"
data_824b0:
    .string "reswin.txt"
data_824bb:
    .ascii  "\x25\x64\x00"
data_824be:
    .string "%d %d %d"
data_824c7:
    .string "..\\reswin.cpp"
data_824d5:
    .ascii  "\x77\x00"
data_824d7:
    .string "reswin.txt"
data_824e2:
    .ascii  "\x25\x64\x0a\x00"
data_824e6:
    .string "%d %d %d\n"
data_824f0:
    .ascii  "\x00\x00\x20\x41"
data_824f4:
    .fill   0x6
    .ascii  "\xf4\x3f"
data_824fc:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xb9\x3f"
data_82504:
    .ascii  "\x9a\x99\x99\x99\x99\x99\xe9\x3f"
data_8250c:
    .string "data\\resring.shp"
data_8251d:
    .string "data\\resring.shp"
data_8252e:
    .ascii  "\x00"
data_8252f:
    .ascii  "\x00\x00\x80\x3e"
data_82533:
    .ascii  "\x00\x00\x00\x3f\x00"
data_82538:
    .string "gizmos.txt"
data_82543:
    .ascii  "\x25\x73\x00"
data_82546:
    .string "%d %d %d %d %d %d %d %d %d"
data_82561:
    .ascii  "\x25\x64\x00"
data_82564:
    .ascii  "\x25\x64\x00"
data_82567:
    .string "..\\ship.cpp"
data_82573:
    .ascii  "\x00\x00\x80\xbf"
data_82577:
    .string "..\\ship.cpp"
data_82583:
    .fill   0x6
    .ascii  "\x24\x40"
data_8258b:
    .fill   0x6
    .ascii  "\x34\x40"
data_82593:
    .string "..\\ship.cpp"
data_8259f:
    .string "..\\ship.cpp"
data_825ab:
    .string "..\\ship.cpp"
data_825b7:
    .string "..\\ship.cpp"
data_825c3:
    .string "..\\ship.cpp"
data_825cf:
    .string "..\\ship.cpp"
data_825db:
    .string "..\\ship.cpp"
data_825e7:
    .string "..\\ship.cpp"
data_825f3:
    .string "..\\ship.cpp"
data_825ff:
    .ascii  "\xcd\xcc\xcc\x3b"
data_82603:
    .ascii  "\x00\x00\x00\x42"
data_82607:
    .ascii  "\x00\x00\xa0\x40"
data_8260b:
    .string "..\\ship.cpp"
data_82617:
    .string "..\\ship.cpp"
data_82623:
    .string "..\\ship.cpp"
data_8262f:
    .string "..\\ship.cpp"
data_8263b:
    .ascii  "\xab\xaa\xaa\x3e"
data_8263f:
    .ascii  "\x00\x00\x00\x40"
data_82643:
    .ascii  "\xcd\xcc\xcc\x3d"
data_82647:
    .ascii  "\x00\x00\x00\x40"
data_8264b:
    .string "..\\ship.cpp"
data_82657:
    .string "..\\ship.cpp"
data_82663:
    .ascii  "\x00\x00\xc8\x44"
data_82667:
    .string "..\\ship.cpp"
data_82673:
    .string "..\\ship.cpp"
data_8267f:
    .string "Bad m_LocationType: %s"
data_82696:
    .string "..\\ship.cpp"
data_826a2:
    .string "..\\ship.cpp"
data_826ae:
    .string "..\\ship.cpp"
data_826ba:
    .string "..\\ship.cpp"
data_826c6:
    .string "..\\ship.cpp"
data_826d2:
    .string "Bad m_LocationType: %s"
data_826e9:
    .string "..\\ship.cpp"
    .ascii  "\x00\x00\x00"
data_826f8:
    .string "..\\shipgiz.cpp"
data_82707:
    .string "..\\shipgiz.cpp"
data_82716:
    .string "..\\shipgiz.cpp"
data_82725:
    .string "..\\shipgiz.cpp"
data_82734:
    .string "..\\shipgiz.cpp"
data_82743:
    .ascii  "\x00\x00\x00\x40"
data_82747:
    .fill   0x6
    .ascii  "\xe8\x3f"
data_8274f:
    .ascii  "\x00\x00\x80\x42"
data_82753:
    .string "..\\shipgiz.cpp"
data_82762:
    .ascii  "\x00\x00\x00\x40"
data_82766:
    .fill   0x6
    .ascii  "\xe8\x3f"
data_8276e:
    .string "..\\shipgiz.cpp"
data_8277d:
    .string "..\\shipgiz.cpp"
data_8278c:
    .string "..\\shipwin.cpp"
data_8279b:
    .string "..\\shipwin.cpp"
data_827aa:
    .string "GIZLIST"
data_827b2:
    .string "..\\shipwin.cpp"
data_827c1:
    .string "..\\shipwin.cpp"
data_827d0:
    .string "..\\shipwin.cpp"
data_827df:
    .string "..\\shipwin.cpp"
data_827ee:
    .string "..\\shipwin.cpp"
data_827fd:
    .string "..\\shipwin.cpp"
data_8280c:
    .ascii  "\x25\x73\x00"
data_8280f:
    .string "..\\shipwin.cpp"
data_8281e:
    .string "%s \"%s\"%s"
data_82828:
    .ascii  "\x5c\x00"
data_8282a:
    .string "..\\ssystem.cpp"
data_82839:
    .string "..\\ssystem.cpp"
data_82848:
    .string "..\\ssystem.cpp"
data_82857:
    .string "..\\ssystem.cpp"
data_82866:
    .string "Attempt play Sequence Track %d with NULL data.\n\n"
data_82897:
    .string "..\\ssystem.cpp"
data_828a6:
    .string "..\\ssystem.cpp"
data_828b5:
    .string "..\\ssystem.cpp"
data_828c4:
    .string "..\\ssystem.cpp"
data_828d3:
    .ascii  "\x5c\x00"
data_828d5:
    .string "..\\ssystem.cpp"
data_828e4:
    .string "..\\ssystem.cpp"
data_828f3:
    .string "..\\ssystem.cpp"
data_82902:
    .string "..\\ssystem.cpp"
data_82911:
    .string "DigitalMusicBuf"
data_82921:
    .string "..\\ssystem.cpp"
data_82930:
    .string "..\\ssystem.cpp"
data_8293f:
    .ascii  "\x25\x64\x00"
data_82942:
    .string "..\\ssystem.cpp"
data_82951:
    .ascii  "\x25\x73\x00"
data_82954:
    .string "..\\ssystem.cpp"
data_82963:
    .string "..\\ssystem.cpp"
data_82972:
    .string "..\\ssystem.cpp"
data_82981:
    .string "..\\ssystem.cpp"
data_82990:
    .string "..\\ssystem.cpp"
data_8299f:
    .string "..\\ssystem.cpp"
data_829ae:
    .string "..\\ssystem.cpp"
data_829bd:
    .string "..\\ssystem.cpp"
data_829cc:
    .string "..\\ssystem.cpp"
data_829db:
    .string "..\\ssystem.cpp"
data_829ea:
    .string "..\\ssystem.cpp"
data_829f9:
    .string "..\\ssystem.cpp"
data_82a08:
    .string "soundfx.txt"
data_82a14:
    .string "%d %d"
data_82a1a:
    .string "..\\ssystem.cpp"
data_82a29:
    .string "..\\ssystem.cpp"
data_82a38:
    .string "SFX CACHE"
data_82a42:
    .ascii  "\x25\x64\x00"
data_82a45:
    .string "..\\ssystem.cpp"
data_82a54:
    .ascii  "\x25\x73\x00"
data_82a57:
    .string "..\\ssystem.cpp"
data_82a66:
    .string "data\\%s.voc"
data_82a72:
    .string "..\\ssystem.cpp"
    .ascii  "\x00\x00\x00"
data_82a84:
    .string "..\\status.cpp"
data_82a92:
    .string "..\\status.cpp"
data_82aa0:
    .string "Bad m_LocationType"
data_82ab3:
    .ascii  "\x25\x73\x00"
data_82ab6:
    .ascii  "\xab\xaa\xaa\x3e"
data_82aba:
    .ascii  "\x00\x00\x00\x40"
data_82abe:
    .string "STATPLANLST"
data_82aca:
    .string "..\\status.cpp"
data_82ad8:
    .string "DATA\\planets.shp"
data_82ae9:
    .string "..\\status.cpp"
data_82af7:
    .string "DATA\\suns.shp"
data_82b05:
    .string "..\\status.cpp"
data_82b13:
    .ascii  "\x00"
data_82b14:
    .ascii  "\x73\x00"
data_82b16:
    .string "STATSHIPLST"
data_82b22:
    .string "..\\status.cpp"
data_82b30:
    .string "DATA\\planets.shp"
data_82b41:
    .string "..\\status.cpp"
data_82b4f:
    .string "DATA\\suns.shp"
data_82b5d:
    .string "..\\status.cpp"
data_82b6b:
    .string "SHIPDESSCREEN"
data_82b79:
    .string "newgame.txt"
data_82b85:
    .string "..\\status.cpp"
data_82b93:
    .string "..\\status.cpp"
data_82ba1:
    .string "DATA\\smhome.shp"
data_82bb1:
    .string "..\\status.cpp"
data_82bbf:
    .string "..\\status.cpp"
data_82bcd:
    .string "..\\status.cpp"
data_82bdb:
    .string "COSMOSWnd"
data_82be5:
    .string "..\\status.cpp"
data_82bf3:
    .ascii  "\x00\x80\xbb\xc4"
data_82bf7:
    .string "BatModeWnd"
data_82c02:
    .string "COSMOSWnd"
data_82c0c:
    .string "RESWIN"
data_82c13:
    .string "RACECONTROLS"
data_82c20:
    .string "..\\status.cpp"
data_82c2e:
    .string "resume.gam"
data_82c39:
    .string "RACELIST"
data_82c42:
    .string "..\\status.cpp"
data_82c50:
    .fill   0x6
    .ascii  "\xe0\x3f"
data_82c58:
    .string "..\\winmgr.cpp"
data_82c66:
    .string "..\\winmgr.cpp"
data_82c74:
    .string "..\\winmgr.cpp"
data_82c82:
    .string "..\\winmgr.cpp"
data_82c90:
    .string "..\\winmgr.cpp"
data_82c9e:
    .string "..\\winmgr.cpp"
data_82cac:
    .string "..\\winmgr.cpp"
data_82cba:
    .string "info%02d"
data_82cc3:
    .string "HELPWINDOW"
data_82cce:
    .string "WINEVENT.BIN"
data_82cdb:
    .string "FPS %lu  %lu"
data_82ce8:
    .string "(%d,%d)"
data_82cf0:
    .string "..\\winmgr.cpp"
data_82cfe:
    .string "..\\winmgr.cpp"
data_82d0c:
    .string "NEXTTURNCONT"
data_82d19:
    .string "..\\winmgr.cpp"
data_82d27:
    .string "..\\winmgr.cpp"
data_82d35:
    .string "..\\winmgr.cpp"
data_82d43:
    .string "MSGBOX"
data_82d4a:
    .string "MSGBOXBUTTON"
data_82d57:
    .ascii  "\x41\x00"
data_82d59:
    .string "INPUTBOX"
data_82d62:
    .string "MSGBOXBUTTON"
data_82d6f:
    .string "EDITWND"
data_82d77:
    .string "..\\winmgr.cpp"
    .string "..\\winmgr.cpp"
data_82d93:
    .string "EVENTWIN"
data_82d9c:
    .string "..\\winmgr.cpp"
data_82daa:
    .string "..\\winmgr.cpp"
data_82db8:
    .string "WINEVENT.BIN"
data_82dc5:
    .string "ABILITYWIN"
data_82dd0:
    .string "HELPWINDOW"
data_82ddb:
    .string "STATE%02d"
data_82de5:
    .string "help.txt"
data_82dee:
    .string "HELPWINDOW"
data_82df9:
    .string "NOINTRO"
data_82e01:
    .string "help.txt"
data_82e0a:
    .string "gizmo%02d"
data_82e14:
    .string "HELPWINDOW"
data_82e1f:
    .string "gizhelp.txt"
data_82e2b:
    .string "..\\winmgr.cpp"
data_82e39:
    .string "..\\winmgr.cpp"
data_82e47:
    .string "plitem%02d"
data_82e52:
    .string "HELPWINDOW"
data_82e5d:
    .string "planhelp.txt"
data_82e6a:
    .string "..\\winmgr.cpp"
data_82e78:
    .string "..\\winmgr.cpp"
data_82e86:
    .string "HELPWINDOW"
data_82e91:
    .string "help.txt"
data_82e9a:
    .string "COSMOSWnd"
data_82ea4:
    .string "..\\winmgr.cpp"
data_82eb2:
    .string "..\\winmgr.cpp"
data_82ec0:
    .string "..\\winmgr.cpp"
data_82ece:
    .string "..\\winmgr.cpp"
data_82edc:
    .string "..\\winmgr.cpp"
data_82eea:
    .string "..\\winmgr.cpp"
data_82ef8:
    .string "..\\winmgr.cpp"
data_82f06:
    .string "..\\winmgr.cpp"
data_82f14:
    .string "resume.gam"
data_82f1f:
    .string "resume.gam"
data_82f2a:
    .string "..\\winmgr.cpp"
data_82f38:
    .string "..\\winmgr.cpp"
data_82f46:
    .string "..\\winmgr.cpp"
data_82f54:
    .string "..\\winmgr.cpp"
data_82f62:
    .string "..\\winmgr.cpp"
data_82f70:
    .string "..\\winmgr.cpp"
data_82f7e:
    .string "..\\winmgr.cpp"
data_82f8c:
    .string "..\\winmgr.cpp"
data_82f9a:
    .string "..\\winmgr.cpp"
data_82fa8:
    .string "..\\winmgr.cpp"
data_82fb6:
    .string "..\\winmgr.cpp"
data_82fc4:
    .string "WMGR MAPFOCUS"
data_82fd2:
    .string "..\\winmgr.cpp"
data_82fe0:
    .string "WMGR MAPRACES"
data_82fee:
    .string "..\\winmgr.cpp"
data_82ffc:
    .string "windows.txt"
data_83008:
    .string "%s %d"
data_8300e:
    .string "..\\winmgr.cpp"
data_8301c:
    .string "%s %d"
data_83022:
    .ascii  "\x47\x57\x00"
data_83025:
    .ascii  "\x52\x57\x00"
data_83028:
    .ascii  "\x52\x53\x57\x00"
data_8302c:
    .ascii  "\x50\x57\x00"
data_8302f:
    .ascii  "\x4c\x57\x00"
data_83032:
    .ascii  "\x49\x57\x00"
data_83035:
    .ascii  "\x52\x57\x00"
data_83038:
    .ascii  "\x50\x53\x57\x00"
data_8303c:
    .ascii  "\x4e\x54\x00"
data_8303f:
    .ascii  "\x53\x57\x00"
data_83042:
    .ascii  "\x46\x57\x00"
data_83045:
    .ascii  "\x4e\x47\x00"
data_83048:
    .ascii  "\x42\x43\x00"
data_8304b:
    .ascii  "\x48\x57\x00"
data_8304e:
    .ascii  "\x4e\x57\x00"
data_83051:
    .ascii  "\x41\x57\x00"
data_83054:
    .ascii  "\x45\x57\x00"
data_83057:
    .ascii  "\x45\x57\x00"
data_8305a:
    .ascii  "\x54\x57\x00"
data_8305d:
    .ascii  "\x4d\x57\x00"
data_83060:
    .ascii  "\x47\x53\x57\x00"
data_83064:
    .ascii  "\x45\x57\x00"
data_83067:
    .ascii  "\x70\x63\x77\x00"
data_8306b:
    .ascii  "\x6d\x69\x77\x00"
data_8306f:
    .string "%s %s"
data_83075:
    .ascii  "\x25\x73\x00"
data_83078:
    .ascii  "\x25\x73\x00"
data_8307b:
    .string "NONE"
data_83080:
    .string "%s bad parent"
data_8308e:
    .string "..\\winmgr.cpp"
data_8309c:
    .string "%s %d"
data_830a2:
    .ascii  "\x25\x64\x00"
data_830a5:
    .string "..\\winmgr.cpp"
data_830b3:
    .string "%s %d"
data_830b9:
    .string "%s %d"
data_830bf:
    .string "%s %d"
data_830c5:
    .string "%s %d"
data_830cb:
    .string "%s %d"
data_830d1:
    .string "%s %d"
data_830d7:
    .string "%s %d"
data_830dd:
    .string "%s %d"
data_830e3:
    .string "%s %d"
data_830e9:
    .string "%s %d"
data_830ef:
    .string "%s %d"
data_830f5:
    .string "%s %d"
data_830fb:
    .string "%s %s"
data_83101:
    .string "%s %d"
data_83107:
    .string "%s %d"
data_8310d:
    .string "%s %d %d %d"
data_83119:
    .string "%s %d %d %d"
data_83125:
    .string "..\\winmgr.cpp"
data_83133:
    .string "FLIC"
data_83138:
    .string "%s %s"
data_8313e:
    .ascii  "\x25\x73\x00"
data_83141:
    .ascii  "\x25\x73\x00"
data_83144:
    .string "NONE"
data_83149:
    .string "..\\winmgr.cpp"
data_83157:
    .string "%s %d"
data_8315d:
    .ascii  "\x25\x64\x00"
data_83160:
    .string "..\\winmgr.cpp"
data_8316e:
    .string "%s %d"
data_83174:
    .string "%s %d"
data_8317a:
    .string "%s %d"
data_83180:
    .string "%s %d"
data_83186:
    .string "%s %s"
data_8318c:
    .string "%s %d"
data_83192:
    .string "%s %d"
data_83198:
    .string "%s %d"
data_8319e:
    .string "%s %d"
data_831a4:
    .string "%s %d"
data_831aa:
    .string "%s %d"
data_831b0:
    .string "%s %d"
data_831b6:
    .string "%s %d"
data_831bc:
    .string "%s %s"
data_831c2:
    .string "%s %d"
data_831c8:
    .string "%s %d"
data_831ce:
    .string "COSW"
data_831d3:
    .string "%s %s"
data_831d9:
    .ascii  "\x25\x73\x00"
data_831dc:
    .ascii  "\x25\x73\x00"
data_831df:
    .string "NONE"
data_831e4:
    .string "..\\winmgr.cpp"
data_831f2:
    .string "%s %d"
data_831f8:
    .ascii  "\x25\x64\x00"
data_831fb:
    .string "..\\winmgr.cpp"
data_83209:
    .string "%s %d"
data_8320f:
    .string "%s %d"
data_83215:
    .string "%s %d"
data_8321b:
    .string "%s %d"
data_83221:
    .string "%s %d"
data_83227:
    .string "%s %s"
data_8322d:
    .string "%s %s"
data_83233:
    .string "%s %d"
data_83239:
    .string "%s %d"
data_8323f:
    .string "%s %d"
data_83245:
    .string "%s %d"
data_8324b:
    .string "%s %d"
data_83251:
    .string "%s %d"
data_83257:
    .string "%s %d"
data_8325d:
    .string "%s %d"
data_83263:
    .string "%s %d"
data_83269:
    .string "%s %d"
data_8326f:
    .string "%s %s"
data_83275:
    .ascii  "\x43\x54\x57\x00"
data_83279:
    .string "%s %s"
data_8327f:
    .ascii  "\x25\x73\x00"
data_83282:
    .ascii  "\x25\x73\x00"
data_83285:
    .string "NONE"
data_8328a:
    .string "..\\winmgr.cpp"
data_83298:
    .string "%s %d"
data_8329e:
    .ascii  "\x25\x64\x00"
data_832a1:
    .string "..\\winmgr.cpp"
data_832af:
    .string "%s %d"
data_832b5:
    .string "%s %d"
data_832bb:
    .string "%s %d"
data_832c1:
    .string "%s %d"
data_832c7:
    .string "%s %d"
data_832cd:
    .string "%s %d"
data_832d3:
    .string "%s %d"
data_832d9:
    .string "%s %d"
data_832df:
    .string "%s %s"
data_832e5:
    .string "%s %d"
data_832eb:
    .string "..\\winmgr.cpp"
data_832f9:
    .string "%s %d"
data_832ff:
    .ascii  "\x25\x64\x00"
data_83302:
    .ascii  "\x25\x64\x00"
data_83305:
    .ascii  "\x25\x64\x00"
data_83308:
    .ascii  "\x25\x64\x00"
data_8330b:
    .ascii  "\x25\x64\x00"
data_8330e:
    .ascii  "\x25\x64\x00"
data_83311:
    .string "..\\winmgr.cpp"
data_8331f:
    .ascii  "\x42\x4d\x00"
data_83322:
    .string "%s %s"
data_83328:
    .ascii  "\x25\x73\x00"
data_8332b:
    .ascii  "\x25\x73\x00"
data_8332e:
    .string "NONE"
data_83333:
    .string "..\\winmgr.cpp"
data_83341:
    .string "%s %d"
data_83347:
    .ascii  "\x25\x64\x00"
data_8334a:
    .string "..\\winmgr.cpp"
data_83358:
    .string "%s %d"
data_8335e:
    .string "%s %d"
data_83364:
    .string "%s %d"
data_8336a:
    .string "%s %d"
data_83370:
    .string "%s %d"
data_83376:
    .string "%s %d"
data_8337c:
    .string "%s %d"
data_83382:
    .string "%s %d"
data_83388:
    .string "%s %d"
data_8338e:
    .string "%s %s"
data_83394:
    .ascii  "\x53\x57\x00"
data_83397:
    .string "%s %s"
data_8339d:
    .ascii  "\x25\x73\x00"
data_833a0:
    .ascii  "\x25\x73\x00"
data_833a3:
    .string "NONE"
data_833a8:
    .string "..\\winmgr.cpp"
data_833b6:
    .string "%s %d"
data_833bc:
    .ascii  "\x25\x64\x00"
data_833bf:
    .string "..\\winmgr.cpp"
data_833cd:
    .string "%s %d"
data_833d3:
    .string "%s %d"
data_833d9:
    .string "%s %d"
data_833df:
    .string "%s %d"
data_833e5:
    .string "%s %d"
data_833eb:
    .string "%s %d"
data_833f1:
    .string "%s %d"
data_833f7:
    .string "%s %d"
data_833fd:
    .string "%s %d"
data_83403:
    .string "%s %s"
data_83409:
    .ascii  "\x4c\x42\x00"
data_8340c:
    .string "%s %s"
data_83412:
    .ascii  "\x25\x73\x00"
data_83415:
    .ascii  "\x25\x73\x00"
data_83418:
    .string "NONE"
data_8341d:
    .string "..\\winmgr.cpp"
data_8342b:
    .string "%s %d"
data_83431:
    .ascii  "\x25\x64\x00"
data_83434:
    .string "..\\winmgr.cpp"
data_83442:
    .string "%s %d"
data_83448:
    .string "%s %d"
data_8344e:
    .string "%s %d"
data_83454:
    .string "%s %d"
data_8345a:
    .string "%s %d"
data_83460:
    .string "%s %d"
data_83466:
    .string "%s %d"
data_8346c:
    .string "%s %d"
data_83472:
    .string "%s %d"
data_83478:
    .string "%s %d"
data_8347e:
    .string "%s %s"
data_83484:
    .string "DBGWND"
data_8348b:
    .string "..\\winmgr.cpp"
data_83499:
    .string "%s %s"
data_8349f:
    .string "%s %d"
data_834a5:
    .string "%s %d"
data_834ab:
    .string "%s %d"
data_834b1:
    .string "%s %d"
data_834b7:
    .string "%s %d"
data_834bd:
    .string "%s %d"
data_834c3:
    .string "%s %d"
data_834c9:
    .string "%s %d"
data_834cf:
    .string "%s %s"
data_834d5:
    .string "%s %d"
data_834db:
    .string "%s %s"
data_834e1:
    .string "..\\winmgr.cpp"
data_834ef:
    .string "%s %d"
data_834f5:
    .string "%s %s"
data_834fb:
    .string "%s %s"
data_83501:
    .string "..\\winmgr.cpp"
data_8350f:
    .string "%s %s"
data_83515:
    .string "..\\winmgr.cpp"
data_83523:
    .string "..\\winmgr.cpp"
data_83531:
    .string "ascend.cfg"
data_8353c:
    .string "ascend.cfg"
data_83547:
    .string "WINEVENT.TXT"
data_83554:
    .string "WINEVENT.BIN"
data_83561:
    .string ".txt"
data_83566:
    .string "HELPWINDOW"
data_83571:
    .string "endtut"
data_83578:
    .string "help.txt"
data_83581:
    .string "\nBad Trace Event: %d of %d\n\nEVENT[%d] HWND[%0d] MSG[%d] P1[%d] P2[%d]\n"
data_835c8:
    .string "..\\winmgr.cpp"
data_835d6:
    .string "..\\winmgr.cpp"
data_835e4:
    .string "..\\winmgr.cpp"
data_835f2:
    .string "..\\winmgr.cpp"
data_83600:
    .string "WINEVENT.BIN"
data_8360d:
    .string "..\\winmgr.cpp"
data_8361b:
    .ascii  "\x77\x00"
data_8361d:
    .string "..\\winmgr.cpp"
data_8362b:
    .string "..\\winmgr.cpp"
data_83639:
    .string " TIME[%05lu]  EVT_MOUSE_POS    : "
data_8365b:
    .string " Moved to (%03d,%03d)\n"
data_83672:
    .string " TIME[%05lu]  EVT_MOUSE_BUTTON :  "
data_83695:
    .string "DOWN"
data_8369a:
    .ascii  "\x55\x50\x00"
data_8369d:
    .string "Right"
data_836a3:
    .string "Left"
data_836a8:
    .string "%s Button %s\n"
data_836b6:
    .string " TIME[%05lu]  EVT_KEYBOARD     : "
data_836d8:
    .string " '%c'  (%04d)\n"
data_836e7:
    .string "EVT_REQ_CONT"
data_836f4:
    .string "EVT_CAN_CONT"
data_83701:
    .string " TIME[%05lu]  %-15s: "
data_83717:
    .string " HWND[%04d] MSG[%04d] P1[%04d] P2[%04d]\n"
data_83740:
    .string "EVT_REQ_CHANGE"
data_8374f:
    .string "EVT_CAN_CHANGE"
data_8375e:
    .string " TIME[%05lu]  %-15s: "
data_83774:
    .string " HWND[%04d] MSG[%04d] P1[%04d] P2[%04d] F[%04d]\n"
data_837a5:
    .string " *** Unrecognized event type : %d\n"
data_837c8:
    .string "..\\winmgr.cpp"
data_837d6:
    .string "..\\winmgr.cpp"
data_837e4:
    .string "..\\winmgr.cpp"
data_837f2:
    .string "DATA\\1starmap.tmp"
data_83804:
    .string "DATA\\3cfgnew.tmp"
data_83815:
    .string "DATA\\7racesel.tmp"
data_83827:
    .string "DATA\\8shipdes.tmp"
data_83839:
    .string "DATA\\9ENDGAME.tmp"
data_8384b:
    .string "DATA\\12start.tmp"
data_8385c:
    .string "DATA\\13negot.tmp"
data_8386d:
    .string "DATA\\16battle.tmp"
data_8387f:
    .string "DATA\\20res.tmp"
data_8388e:
    .string "DATA\\10status.tmp"
data_838a0:
    .string "..\\winmgr.cpp"
data_838ae:
    .string "%03d"
data_838b3:
    .string "DBGWNDLIST"
data_838be:
    .string "..\\winmgr.cpp"
data_838cc:
    .string "..\\winmgr.cpp"
data_838da:
    .string "DBGWNDLIST"
data_838e5:
    .string "..\\winmgr.cpp"
data_838f3:
    .string "DBGWNDLIST"
data_838fe:
    .string "..\\winmgr.cpp"
data_8390c:
    .string "DBGWNDLIST"
data_83917:
    .string "..\\winmgr.cpp"
data_83925:
    .string "DBGWNDLIST"
data_83930:
    .string "..\\winmgr.cpp"
data_8393e:
    .string "DBGWNDLIST"
data_83949:
    .string "..\\winmgr.cpp"
data_83957:
    .string "DBGWNDLIST"
data_83962:
    .string "..\\winmgr.cpp"
data_83970:
    .string "WINDOWS   "
data_8397b:
    .string "MEMORY    "
data_83986:
    .string "CACHE     "
data_83991:
    .string "PALETTE   "
data_8399c:
    .string "..\\winmgr.cpp"
data_839aa:
    .string "%06lu S%07lu WND[%s]"
data_839bf:
    .string "%06lu S%07lu %s"
data_839cf:
    .string "%06lu S%07lu %s"
data_839df:
    .string "..\\winmgr.cpp"
data_839ed:
    .string "** %d WNDS USING %lu BYTES"
data_83a08:
    .string "** %d SHAPES USING %lu BYTES"
data_83a25:
    .string "** %d ITEMS IN HEAP USE %lu BYTES"
data_83a47:
    .string "** %d ITEMS ARE UNIDENTIFIED"
data_83a64:
    .string "** TOTAL FREE IN HEAP %lu BYTES"
data_83a84:
    .string "..\\winmgr.cpp"
data_83a92:
    .string "%c HWND%03d %s"
data_83aa1:
    .string "%07d %s"
data_83aa9:
    .ascii  "\x20\x00"
data_83aab:
    .ascii  "\x25\x73\x00"
data_83aae:
    .ascii  "\x20\x00"
data_83ab0:
    .string "%03d ITEMS IN CACHE"
data_83ac4:
    .string "%03d ITEMS LOADED"
data_83ad6:
    .ascii  "\x20\x00"
data_83ad8:
    .string "%07d TOTAL CACHE SIZE"
data_83aee:
    .string "%07d USED"
data_83af8:
    .string "%07d FREE"
data_83b02:
    .string "%02d. %-24s (%d)"
    .ascii  "\x00"
data_83b14:
    .ascii  "\x4c\x58\x00\x00"
data_83b18:
    .string "[%.02u:%.02u:%.02u.%.02u] "
data_83b33:
    .ascii  "\x20\x00"
data_83b35:
    .ascii  "\xfa\x00"
data_83b37:
    .string "AIL_DEBUG"
data_83b41:
    .string "AIL_SYS_DEBUG"
data_83b4f:
    .ascii  "\x77\x2b\x74\x00"
data_83b53:
    .string "-------------------------------------------------------------------------------\n"
data_83ba4:
    .string "3.02"
data_83ba9:
    .string "Audio Interface Library application usage script generated by AIL V%s\n"
data_83bf0:
    .string "Start time: %s\n"
data_83c00:
    .string "-------------------------------------------------------------------------------\n\n"
data_83c52:
    .string "AIL_startup()\n"
data_83c61:
    .string "AIL_shutdown()\n"
data_83c71:
    .string "AIL_set_preference(%d,%d)\n"
data_83c8c:
    .string "Result = %d\n"
data_83c99:
    .string "AIL_get_real_vect(0x%X)\n"
data_83cb2:
    .string "Result = 0x%X\n"
data_83cc1:
    .string "AIL_set_real_vect(0x%X,0x%X)\n"
data_83cdf:
    .string "AIL_set_USE16_ISR(%d,0x%X,%u)\n"
data_83cfe:
    .string "AIL_restore_USE16_ISR(%d)\n"
data_83d19:
    .string "AIL_call_driver(0x%X,0x%X,0x%X,0x%X)\n"
data_83d3f:
    .string "AIL_delay(%d)\n"
data_83d4e:
    .string "AIL_API_read_INI(0x%X,%s)\n"
data_83d69:
    .string "Driver = %s\n"
data_83d76:
    .string "Device = %s\n"
data_83d83:
    .string "IO     = %X\n"
data_83d90:
    .string "IRQ    = %d\n"
data_83d9d:
    .string "DMA_8  = %d\n"
data_83daa:
    .string "DMA_16 = %d\n"
data_83db7:
    .string "Result = %u\n"
data_83dc4:
    .string "AIL_register_timer(0x%X)\n"
data_83dde:
    .string "AIL_set_timer_user(%u,%u)\n"
data_83df9:
    .string "AIL_set_timer_period(%u,%u)\n"
data_83e16:
    .string "AIL_set_timer_frequency(%u,%u)\n"
data_83e36:
    .string "AIL_set_timer_divisor(%u,%u)\n"
data_83e54:
    .string "AIL_interrupt_divisor()\n"
data_83e6d:
    .string "AIL_start_timer(%u)\n"
data_83e82:
    .string "AIL_start_all_timers()\n"
data_83e9a:
    .string "AIL_stop_timer(%u)\n"
data_83eae:
    .string "AIL_stop_all_timers()\n"
data_83ec5:
    .string "AIL_release_timer_handle(%u)\n"
data_83ee3:
    .string "AIL_release_all_timers()\n"
data_83efd:
    .string "AIL_get_IO_environment(0x%X)\n"
data_83f1b:
    .string "AIL_install_driver(0x%X,%u)\n"
data_83f38:
    .string "AIL_uninstall_driver(0x%X)\n"
data_83f54:
    .string "AIL_install_DIG_INI()\n"
data_83f6b:
    .string "AIL_install_DIG_driver_file(%s,0x%X)\n"
data_83f91:
    .string "AIL_uninstall_DIG_driver(0x%X)\n"
data_83fb1:
    .string "AIL_allocate_sample_handle(0x%X)\n"
data_83fd3:
    .string "AIL_allocate_file_sample(0x%X,0x%X,%d)\n"
data_83ffb:
    .string "AIL_release_sample_handle(0x%X)\n"
data_8401c:
    .string "AIL_init_sample(0x%X)\n"
data_84033:
    .string "AIL_set_sample_file(0x%X,0x%X,%d)\n"
data_84056:
    .string "AIL_set_sample_address(0x%X,0x%X,%u)\n"
data_8407c:
    .string "AIL_set_sample_type(0x%X,%d,%u)\n"
data_8409d:
    .string "AIL_start_sample(0x%X)\n"
data_840b5:
    .string "AIL_stop_sample(0x%X)\n"
data_840cc:
    .string "AIL_resume_sample(0x%X)\n"
data_840e5:
    .string "AIL_end_sample(0x%X)\n"
data_840fb:
    .string "AIL_set_sample_playback_rate(0x%X,%d)\n"
data_84122:
    .string "AIL_set_sample_volume(0x%X,%d)\n"
data_84142:
    .string "AIL_set_sample_pan(0x%X,%d)\n"
data_8415f:
    .string "AIL_set_sample_loop_count(0x%X,%d)\n"
data_84183:
    .string "AIL_sample_status(0x%X)\n"
data_8419c:
    .string "AIL_sample_playback_rate(0x%X)\n"
data_841bc:
    .string "AIL_sample_volume(0x%X)\n"
data_841d5:
    .string "AIL_sample_pan(0x%X)\n"
data_841eb:
    .string "AIL_sample_loop_count(0x%X)\n"
data_84208:
    .string "AIL_install_DIG_driver_image(0x%X,%u,0x%X)\n"
data_84234:
    .string "AIL_minimum_sample_buffer_size(0x%X,%d,%d)\n"
data_84260:
    .string "AIL_sample_buffer_ready(0x%X)\n"
data_8427f:
    .string "AIL_load_sample_buffer(0x%X,%u,0x%X,%u)\n"
data_842a8:
    .string "AIL_set_sample_position(0x%X,%u)\n"
data_842ca:
    .string "AIL_sample_position(0x%X)\n"
data_842e5:
    .string "AIL_register_SOB_callback(0x%X,0x%X)\n"
data_8430b:
    .string "AIL_register_EOB_callback(0x%X,0x%X)\n"
data_84331:
    .string "AIL_register_EOS_callback(0x%X,0x%X)\n"
data_84357:
    .string "AIL_register_EOF_callback(0x%X,0x%X)\n"
data_8437d:
    .string "AIL_set_sample_user_data(0x%X,%u,%d)\n"
data_843a3:
    .string "AIL_sample_user_data(0x%X,%u)\n"
data_843c2:
    .string "AIL_active_sample_count(0x%X)\n"
data_843e1:
    .string "AIL_install_MDI_INI()\n"
data_843f8:
    .string "AIL_install_MDI_driver_file(%s,0x%X)\n"
data_8441e:
    .string "AIL_uninstall_MDI_driver(0x%X)\n"
data_8443e:
    .string "AIL_allocate_sequence_handle(0x%X)\n"
data_84462:
    .string "AIL_release_sequence_handle(0x%X)\n"
data_84485:
    .string "AIL_init_sequence(0x%X,0x%X,%d)\n"
data_844a6:
    .string "AIL_start_sequence(0x%X)\n"
data_844c0:
    .string "AIL_stop_sequence(0x%X)\n"
data_844d9:
    .string "AIL_resume_sequence(0x%X)\n"
data_844f4:
    .string "AIL_end_sequence(0x%X)\n"
data_8450c:
    .string "AIL_set_sequence_tempo(0x%X,%d,%d)\n"
data_84530:
    .string "AIL_set_sequence_volume(0x%X,%d,%d)\n"
data_84555:
    .string "AIL_set_sequence_loop_count(0x%X,%d)\n"
data_8457b:
    .string "AIL_sequence_status(0x%X)\n"
data_84596:
    .string "AIL_sequence_tempo(0x%X)\n"
data_845b0:
    .string "AIL_sequence_volume(0x%X)\n"
data_845cb:
    .string "AIL_sequence_loop_count(0x%X)\n"
data_845ea:
    .string "AIL_install_MDI_driver_image(0x%X,%u,0x%X)\n"
data_84616:
    .string "AIL_set_GTL_filename_prefix(%s)\n"
data_84637:
    .string "AIL_timbre_status(0x%X,%d,%d)\n"
data_84656:
    .string "AIL_install_timbre(0x%X,%d,%d)\n"
data_84676:
    .string "AIL_protect_timbre(0x%X,%d,%d)\n"
data_84696:
    .string "AIL_unprotect_timbre(0x%X,%d,%d)\n"
data_846b8:
    .string "AIL_active_sequence_count(0x%X)\n"
data_846d9:
    .string "AIL_controller_value(0x%X,%d,%d)\n"
data_846fb:
    .string "AIL_channel_notes(0x%X,%d)\n"
data_84717:
    .string "AIL_sequence_position(0x%X,0x%X,0x%X)\n"
data_8473e:
    .string "Result = %d:%d\n"
data_8474e:
    .string "AIL_branch_index(0x%X,%u)\n"
data_84769:
    .string "AIL_register_prefix_callback(0x%X,0x%X)\n"
data_84792:
    .string "AIL_register_trigger_callback(0x%X,0x%X)\n"
data_847bc:
    .string "AIL_register_sequence_callback(0x%X,0x%X)\n"
data_847e7:
    .string "AIL_register_event_callback(0x%X,0x%X)\n"
data_8480f:
    .string "AIL_register_timbre_callback(0x%X,0x%X)\n"
data_84838:
    .string "AIL_set_sequence_user_data(0x%X,%u,%d)\n"
data_84860:
    .string "AIL_sequence_user_data(0x%X,%u)\n"
data_84881:
    .string "AIL_register_ICA_array(0x%X,0x%X)\n"
data_848a4:
    .string "AIL_lock_channel(0x%X)\n"
data_848bc:
    .string "AIL_release_channel(0x%X,%d)\n"
data_848da:
    .string "AIL_map_sequence_channel(0x%X,%d,%d)\n"
data_84900:
    .string "AIL_true_sequence_channel(0x%X,%d)\n"
data_84924:
    .string "AIL_send_channel_voice_message(0x%X,0x%X,0x%X,0x%X,0x%X)\n"
data_8495e:
    .string "AIL_send_sysex_message(0x%X,0x%X)\n"
data_84981:
    .string "AIL_create_wave_synthesizer(0x%X,0x%X,0x%X,%d)\n"
data_849b1:
    .string "AIL_destroy_wave_synthesizer(0x%X)\n"
    .ascii  "\x00\x00\x00"
data_849d8:
    .string "Insufficient memory for HWAVE descriptor\n"
    .ascii  "\x00\x00"
data_84a04:
    .string "fmt "
data_84a09:
    .string "data"
data_84a0e:
    .string "Creative"
data_84a17:
    .string "WAVE"
data_84a1c:
    .string "Unrecognized digital audio file type\n"
data_84a42:
    .string "Invalid or missing data block\n"
data_84a61:
    .string "Unrecognized digital audio file type\n"
data_84a87:
    .string "Invalid or missing data block\n"
    .ascii  "\x00\x00"
data_84aa8:
    .string "Minimum DMA buffer size too large for VDM\n"
    .ascii  "\x4e"
data_84ad4:
    .string "Could not allocate memory for driver\n"
    .ascii  "\x4e\x47"
data_84afc:
    .string ".DIG driver required\n"
    .ascii  "\x20\x44"
data_84b14:
    .string "Digital sound hardware not found\n"
    .ascii  "\x67\x73"
data_84b38:
    .string "Could not allocate DMA buffers\n"
data_84b58:
    .string "Could not allocate build buffer\n"
    .ascii  "\x72\x20\x56"
data_84b7c:
    .string "Could not allocate SAMPLE structures\n"
    .ascii  "\x76\x65"
data_84ba4:
    .string "Out of timer handles\n"
    .ascii  "\x72\x65"
data_84bbc:
    .string "Driver file not found\n"
    .ascii  "\x77"
data_84bd4:
    .string "DIG.INI"
data_84bdc:
    .string "Unable to open file DIG.INI\n"
    .ascii  "\x4d\x41\x20"
data_84bfc:
    .string "Out of sample handles\n"
    .ascii  "\x00"
data_84c14:
    .string "FORM"
    .ascii  "\x65\x3b\x20"
data_84c1c:
    .string "CAT "
    .ascii  "\x61\x74\x65"
data_84c24:
    .string "XMID"
    .ascii  "\x74\x75\x72"
data_84c2c:
    .string "Internal note queue overflow\n"
    .ascii  "\x4c\x4c"
data_84c4c:
    .string "Could not allocate memory for driver\n"
    .ascii  "\x76\x6f"
data_84c74:
    .string ".MDI driver required\n"
    .ascii  "\x28\x76"
data_84c8c:
    .string "XMIDI sound hardware not found\n"
data_84cac:
    .string "Could not initialize instrument manager\n"
    .ascii  "\x00\x61\x74"
data_84cd8:
    .string "Could not allocate SEQUENCE structures\n"
data_84d00:
    .string "Out of timer handles\n"
    .ascii  "\x6d\x6f"
data_84d18:
    .string "Driver file not found\n"
    .ascii  "\x72"
data_84d30:
    .string "MDI.INI"
data_84d38:
    .string "Unable to open file MDI.INI\n"
    .ascii  "\x20\x6e\x6f"
data_84d58:
    .string "Out of sequence handles\n"
    .ascii  "\x6c\x69\x7a"
data_84d74:
    .string "Invalid XMIDI sequence\n"
data_84d8c:
    .string "TIMB"
    .ascii  "\x61\x74\x43"
data_84d94:
    .string "RBRN"
    .ascii  "\x6e\x6f\x74"
data_84d9c:
    .string "EVNT"
    .ascii  "\x63\x61\x74"
data_84da4:
    .string "No timbres loaded\n"
    .ascii  "\x65"
data_84db8:
    .string "Driver could not install timbre bank %u, patch %u\n"
    .ascii  "\x4d"
data_84dec:
    .string "Driver could not install timbre bank %u, patch %u\n"
    .ascii  "\x00"
data_84e20:
    .string "0123456789ABCDEF"
data_84e31:
    .ascii  "\x72\x74\x00"
data_84e34:
    .string "DRIVER"
data_84e3b:
    .string "DEVICE"
data_84e42:
    .string "IO_ADDR"
data_84e4a:
    .ascii  "\x49\x52\x51\x00"
data_84e4e:
    .string "DMA_8_bit"
data_84e58:
    .string "DMA_16_bit"
data_84e63:
    .string "Corrupted .INI file\n"
data_84e78:
    .string "Insufficient memory for driver descriptor\n"
data_84ea3:
    .string "Insufficient low memory\n"
data_84ebc:
    .string "AIL3DIG"
data_84ec4:
    .string "AIL3MDI"
data_84ecc:
    .string "Invalid driver type\n"
data_84ee1:
    .string "Out of driver handles\n"
data_84ef8:
    .string "Out of timer handles\n"
    .ascii  "\x00\x00"
data_84f10:
    .string "Copyright (C) 1993-95 SciTech Software, All Rights Reserved."
    .ascii  "\x00\x00\x13"
data_84f50:
    .ascii  "\x35\x00\x00\x61"
data_84f54:
    .ascii  "\x31\x61\x00\xcc"
data_84f58:
    .string "May 02 1995"
data_84f64:
    .string "VBE2"
    .ascii  "\x4c\x45\x00"
data_84f6c:
    .string "VESA"
    .ascii  "\x6f\x00\x00"
data_84f74:
    .string "Universal VESA VBE"
    .ascii  "\x00"
data_84f88:
    .string "In order for this program to be able to function correctly with your video\n"
data_84fd4:
    .string "card, it requires a VESA VBE SuperVGA BIOS implemenation to be installed.\n"
    .ascii  "\x56"
data_85020:
    .string "Please install the VESA VBE driver that came with your video card *BEFORE*\n"
data_8506c:
    .string "attempting to run this program again.\n\n"
data_85094:
    .string "Your VESA driver will be a program called VESA.EXE, VVESA.EXE or something\n"
data_850e0:
    .string "similar and will be located in your video cards driver utilities directories.\n"
    .ascii  "\x6e"
data_85130:
    .string "If you dont have a proper VESA VBE driver, please contact SciTech Software\n"
data_8517c:
    .string "as we may have a suitable TSR for your video card (this TSR is required in\n"
data_851c8:
    .string "*ADDITION* to UniVBE, so that UniVBE can correctly set the video modes).\n"
    .ascii  "\x65\x72"
data_85214:
    .string "univbe.drv"
    .ascii  "\x6e"
data_85220:
    .ascii  "\x72\x62\x00\x74"
data_85224:
    .string "UVBLib: Not enough memory to update configuration!\n"
data_85258:
    .string "UVBLib: %s is not a valid UniVBE driver file!\n"
    .ascii  "\x49"
data_85288:
    .string "%s.%s"
    .ascii  "\x74\x6f"
data_85290:
    .string "UVBLib: Driver file version is different!\n"
    .ascii  "\x6f"
data_852bc:
    .string "Please run UVCONFIG.EXE to configure the UNIVBE.DRV driver.\n"
    .ascii  "\x63\x6f\x6e"
data_852fc:
    .string "UVBLib: Unable to allocate real mode memory!\n"
    .ascii  "\x64\x72"
data_8532c:
    .string "UVBELib(tm)/Lite  - Universal VESA BIOS Extension Linkable Library\n"
data_85370:
    .string "        Release %s.%s (%s)\n\n"
    .ascii  "\x72\x65\x20"
data_8539c:
    .ascii  "\x25\x73\x0a\x00"
data_853a0:
    .ascii  "\x0a\x00\x49\x56"
data_853a4:
    .string "Video Card: %s\n"
data_853b4:
    .string "RAM DAC:    %s\n\n"
    .ascii  "\x00\x00\x00"
data_853c8:
    .string "Page locking services failed - interrupt handling not safe!\n"
    .ascii  "\x00\x00\x00"
data_85408:
    .string "compiler error: eliminated virtual function call!"
    .ascii  "\x00\x00"
data_8543c:
    .string "undefined constructor or destructor called!"
data_85468:
    .string "Assertion failed: %hs, file %hs, line %d\n"
    .ascii  "\x00\x00"
data_85494:
    .string "ABNORMAL TERMINATION\r\n"
    .ascii  "\x00"
data_854ac:
    .ascii  "\x54\x5a\x00\x00"
data_854b0:
    .string "Floating-point support not loaded\r\n"
data_854d4:
    .string "RATIONAL DOS/4G"
data_854e4:
    .string "acos"
data_854e9:
    .string "asin"
data_854ee:
    .string "sqrt"
data_854f3:
    .ascii  "\x65\x78\x70\x00"
data_854f7:
    .string "cosh"
data_854fc:
    .string "sinh"
data_85501:
    .ascii  "\x70\x6f\x77\x00"
data_85505:
    .string "acosh"
data_8550b:
    .string "log2"
data_85510:
    .ascii  "\x6c\x6f\x67\x00"
data_85514:
    .string "log10"
data_8551a:
    .string "atanh"
data_85520:
    .string "atan2"
data_85526:
    .string "ipow"
data_8552b:
    .string "dpowi"
data_85531:
    .ascii  "\x63\x6f\x73\x00"
data_85535:
    .ascii  "\x73\x69\x6e\x00"
data_85539:
    .ascii  "\x74\x61\x6e\x00"
data_8553d:
    .ascii  "\x79\x30\x00"
data_85540:
    .ascii  "\x79\x31\x00"
data_85543:
    .ascii  "\x79\x6e\x00"
data_85546:
    .ascii  "\x6d\x6f\x64\x00"
data_8554a:
    .string "cotan"
data_85550:
    .string "Not enough memory to allocate file structures\r\n"
data_85580:
    .string "stack data has been corrupted!"
data_8559f:
    .string "violation of function exception specification!"
data_855ce:
    .string "throw while \"terminate\" function active!"
data_855f7:
    .string "throw during destructor while unwinding stack to catch exception!"
data_85639:
    .string "throw while \"terminate\" function active!"
data_85662:
    .string "throw during construction of exception!"
data_8568a:
    .string "throw during destructor for handled exception!"
data_856b9:
    .string "re-throw when no exception handler active!"
data_856e4:
    .string "no handler active to catch thrown object!"
    .ascii  "\x00\x00"
data_85710:
    .string "Domain error"
data_8571d:
    .string "Argument singularity"
data_85732:
    .string "Overflow range error"
data_85747:
    .string "Underflow range error"
data_8575d:
    .string "Total loss of significance"
data_85778:
    .string "Partial loss of significance"
data_85795:
    .string " in "
    .ascii  "\x00\x00"
data_8579c:
    .string "no memory left to handle thrown exception!"
    .ascii  "\x00"
data_857c8:
    .ascii  "\x69\x6e\x66\x00"
data_857cc:
    .ascii  "\x6e\x61\x6e\x00"
data_857d0:
    .fill   0x6
    .ascii  "\xf0\xbf"
data_857d8:
    .string "return from \"terminate\" function!"
    .ascii  "\x00\x00"
data_857d8:
    .string "return from \"terminate\" function!"
    .ascii  "\x00\x00"
data_857fc:
    .string "return from \"unexpected\" function!"
    .ascii  "\x00\x35\xfa\x8e\x3c\xe1\x2e\x65"
    .ascii  "\x42\x00"
    .long   func_12440
    .long   func_721d4
    .long   func_12430
    .ascii  "\x26"
    .fill   0x6
data_8583c:
    .ascii  "\x00"
    .long   func_10a3c
    .long   func_721d4
    .long   func_10a80
    .ascii  "\x08\x01"
    .fill   0x5
data_85850:
    .long   func_10a80
    .long   func_2c158
    .long   func_10b24
    .long   func_11870
    .long   func_2c608